2022-08-04 11:52:55,155 DEBUG (private) matplotlib data path: /Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data
2022-08-04 11:52:55,168 DEBUG matplotlib data path: /Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data
2022-08-04 11:52:55,184 DEBUG CONFIGDIR=/Users/wdiepeveen/.matplotlib
2022-08-04 11:52:55,188 DEBUG matplotlib version 3.3.4
2022-08-04 11:52:55,189 DEBUG interactive is False
2022-08-04 11:52:55,190 DEBUG platform is darwin
2022-08-04 11:52:55,190 DEBUG loaded modules: ['builtins', 'sys', '_frozen_importlib', '_imp', '_warnings', '_thread', '_weakref', '_frozen_importlib_external', '_io', 'marshal', 'posix', 'zipimport', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_weakrefset', '_bootlocale', '_locale', 'site', 'os', 'errno', 'stat', '_stat', 'posixpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', 'types', 'functools', '_functools', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'weakref', 'collections.abc', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'mpl_toolkits', 'sphinxcontrib', 'sysconfig', '_sysconfigdata_m_darwin_darwin', '_osx_support', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'runpy', 'pkgutil', 'ipykernel', 'ipykernel._version', 'ipykernel.connect', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'subprocess', 'time', 'signal', '_posixsubprocess', 'select', 'selectors', 'math', 'threading', 'traceback', 'linecache', 'tokenize', 'token', 'IPython', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'IPython.core.application', 'atexit', 'copy', 'glob', 'fnmatch', 'logging', 'string', '_string', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'pwd', 'grp', 'traitlets', 'traitlets.traitlets', 'inspect', 'ast', '_ast', 'dis', 'opcode', '_opcode', 'six', '__future__', 'struct', '_struct', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'ipython_genutils', 'ipython_genutils._version', 'ipython_genutils.py3compat', 'ipython_genutils.encoding', 'locale', 'platform', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets._version', 'traitlets.config', 'traitlets.config.application', 'decorator', 'traitlets.config.configurable', 'traitlets.config.loader', 'argparse', 'textwrap', 'gettext', 'ipython_genutils.path', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'ipython_genutils.text', 'ipython_genutils.importstring', 'IPython.core.crashhandler', 'pprint', 'IPython.core.ultratb', 'pydoc', 'urllib', 'urllib.parse', 'IPython.core.debugger', 'bdb', 'IPython.utils', 'IPython.utils.PyColorize', 'IPython.utils.coloransi', 'IPython.utils.ipstruct', 'IPython.utils.colorable', 'pygments', 'IPython.utils.py3compat', 'IPython.utils.encoding', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'pdb', 'cmd', 'code', 'codeop', 'IPython.core.display_trap', 'IPython.utils.path', 'IPython.utils.process', 'IPython.utils._process_posix', 'pexpect', 'pexpect.exceptions', 'pexpect.utils', 'pexpect.expect', 'pexpect.pty_spawn', 'pty', 'tty', 'termios', 'ptyprocess', 'ptyprocess.ptyprocess', 'fcntl', 'resource', 'ptyprocess.util', 'pexpect.spawnbase', 'pexpect.run', 'IPython.utils._process_common', 'shlex', 'IPython.utils.decorators', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.utils.sysinfo', 'IPython.utils._sysinfo', 'IPython.core.profiledir', 'IPython.paths', 'tempfile', 'IPython.utils.importstring', 'IPython.terminal', 'IPython.terminal.embed', 'IPython.core.compilerop', 'IPython.core.magic_arguments', 'IPython.core.error', 'IPython.utils.text', 'pathlib', 'ntpath', 'IPython.core.magic', 'getopt', 'IPython.core.oinspect', 'typing', 'typing.io', 'typing.re', 'IPython.core.page', 'IPython.core.display', 'binascii', 'mimetypes', 'IPython.lib', 'IPython.lib.security', 'getpass', 'IPython.lib.pretty', 'datetime', '_datetime', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.python', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.unistring', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'IPython.core.inputtransformer2', 'IPython.core.interactiveshell', 'pickleshare', 'pickle', '_compat_pickle', '_pickle', 'IPython.core.prefilter', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.alias', 'IPython.core.builtin_trap', 'IPython.core.events', 'backcall', 'backcall.backcall', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.core.formatters', 'IPython.utils.sentinel', 'IPython.core.history', 'sqlite3', 'sqlite3.dbapi2', '_sqlite3', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.display', 'IPython.lib.display', 'html', 'html.entities', 'IPython.utils.io', 'IPython.utils.capture', 'IPython.utils.strdispatch', 'IPython.core.hooks', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.terminal.interactiveshell', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'concurrent.futures.process', 'queue', 'multiprocessing', 'multiprocessing.context', 'multiprocessing.process', 'multiprocessing.reduction', 'socket', '_socket', 'array', '__mp_main__', 'multiprocessing.connection', '_multiprocessing', 'multiprocessing.util', 'concurrent.futures.thread', 'asyncio.compat', 'asyncio.coroutines', 'asyncio.constants', 'asyncio.events', 'asyncio.base_futures', 'asyncio.log', 'asyncio.futures', 'asyncio.base_tasks', '_asyncio', 'asyncio.tasks', 'asyncio.locks', 'asyncio.protocols', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.transports', 'asyncio.unix_events', 'asyncio.base_subprocess', 'asyncio.selector_events', 'ssl', 'ipaddress', '_ssl', 'base64', 'asyncio.sslproto', 'prompt_toolkit', 'prompt_toolkit.application', 'prompt_toolkit.application.application', 'prompt_toolkit.buffer', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop', 'prompt_toolkit.eventloop.async_generator', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.dummy_contextvars', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.utils', 'wcwidth', 'wcwidth.wcwidth', 'wcwidth.table_wide', 'wcwidth.table_zero', 'wcwidth.unicode_versions', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.eventloop.async_context_manager', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.document', 'prompt_toolkit.clipboard', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.filters', 'prompt_toolkit.filters.app', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.completion', 'prompt_toolkit.completion.base', 'prompt_toolkit.formatted_text', 'prompt_toolkit.formatted_text.ansi', 'prompt_toolkit.output', 'prompt_toolkit.output.base', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.pygments', 'prompt_toolkit.styles.style_transformation', 'colorsys', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output.vt100', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.html', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.history', 'prompt_toolkit.search', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.validation', 'prompt_toolkit.input', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.layout', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.controls', 'prompt_toolkit.lexers', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.dummy', 'prompt_toolkit.shortcuts', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.patch_stdout', 'pygments.style', 'IPython.terminal.debugger', 'IPython.core.completer', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'jedi', 'jedi.api', 'parso', 'parso.parser', 'parso.tree', 'parso.utils', 'parso.pgen2', 'parso.pgen2.generator', 'parso.pgen2.grammar_parser', 'parso.python', 'parso.python.tokenize', 'parso.python.token', 'parso.grammar', 'parso._compatibility', 'parso.python.diff', 'difflib', 'parso.python.parser', 'parso.python.tree', 'parso.python.prefix', 'parso.cache', 'gc', 'parso.python.errors', 'parso.normalizer', 'parso.python.pep8', 'parso.file_io', 'jedi._compatibility', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.file_io', 'jedi.api.classes', 'jedi.inference', 'jedi.inference.imports', 'jedi.inference.sys_path', 'jedi.inference.cache', 'jedi.inference.base_value', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.inference.compiled', 'jedi.inference.compiled.value', 'jedi.inference.filters', 'jedi.inference.flow_analysis', 'jedi.inference.recursion', 'jedi.inference.names', 'jedi.inference.docstrings', 'jedi.common', 'jedi.inference.lazy_value', 'jedi.plugins', 'jedi.inference.compiled.access', 'jedi.inference.compiled.getattr_static', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.gradual.typeshed', 'jedi.inference.gradual.stub_value', 'jedi.inference.value', 'jedi.inference.value.module', 'jedi.inference.value.klass', 'jedi.inference.arguments', 'jedi.inference.value.iterable', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.function', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.instance', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.compiled.subprocess', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.inference.syntax_tree', 'jedi.inference.gradual.annotation', 'jedi.inference.param', 'jedi.inference.value.decorator', 'jedi.inference.compiled.mixed', 'jedi.inference.gradual.conversion', 'jedi.api.keywords', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.interpreter', 'jedi.api.completion', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.api.environment', 'filecmp', 'jedi.api.project', 'jedi.inference.references', 'jedi.api.errors', 'jedi.api.refactoring', 'jedi.api.refactoring.extract', 'jedi.inference.gradual.utils', 'jedi.plugins.registry', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'jedi.plugins.django', 'IPython.terminal.ptutils', 'IPython.terminal.shortcuts', 'IPython.terminal.magics', 'IPython.lib.clipboard', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.ipapp', 'IPython.core.magics', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'IPython.core.magics.code', 'urllib.request', 'email', 'http', 'http.client', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'urllib.error', 'urllib.response', '_scproxy', 'IPython.core.magics.config', 'IPython.core.magics.display', 'IPython.core.magics.execution', 'timeit', 'cProfile', '_lsprof', 'profile', 'optparse', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.magics.pylab', 'IPython.core.pylabtools', 'IPython.core.magics.script', 'IPython.lib.backgroundjobs', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.utils.frame', 'jupyter_client', 'jupyter_client._version', 'jupyter_client.connect', 'zmq', 'ctypes', '_ctypes', 'ctypes._endian', 'zmq.backend', 'zmq.backend.select', 'zmq.backend.cython', 'zmq.backend.cython.constants', 'cython_runtime', 'zmq.backend.cython.error', '_cython_0_29_21', 'zmq.backend.cython.message', 'zmq.error', 'zmq.backend.cython.context', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.sugar', 'zmq.sugar.constants', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.context', 'zmq.sugar.attrsettr', 'zmq.sugar.socket', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'jupyter_client.localinterfaces', 'jupyter_core', 'jupyter_core.version', 'jupyter_core.paths', 'jupyter_client.launcher', 'traitlets.log', 'jupyter_client.client', 'jupyter_client.channels', 'jupyter_client.channelsabc', 'jupyter_client.clientabc', 'jupyter_client.manager', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.blocking', 'jupyter_client.blocking.client', 'jupyter_client.blocking.channels', 'jupyter_client.asynchronous', 'jupyter_client.asynchronous.client', 'zmq.asyncio', 'zmq._future', 'jupyter_client.asynchronous.channels', 'jupyter_client.multikernelmanager', 'uuid', 'ctypes.util', 'ctypes.macholib', 'ctypes.macholib.dyld', 'ctypes.macholib.framework', 'ctypes.macholib.dylib', 'ipykernel.kernelapp', 'tornado', 'tornado.ioloop', 'numbers', 'tornado.concurrent', 'tornado.log', 'logging.handlers', 'tornado.escape', 'tornado.util', 'tornado.speedups', 'curses', '_curses', 'zmq.eventloop', 'zmq.eventloop.ioloop', 'tornado.platform', 'tornado.platform.asyncio', 'tornado.gen', 'zmq.eventloop.zmqstream', 'ipykernel.iostream', 'imp', 'jupyter_client.session', 'hmac', 'jupyter_client.jsonutil', 'dateutil', 'dateutil._version', 'dateutil.parser', 'dateutil.parser._parser', 'decimal', '_decimal', 'dateutil.relativedelta', 'dateutil._common', 'dateutil.tz', 'dateutil.tz.tz', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.parser.isoparser', '_strptime', 'jupyter_client.adapter', 'ipykernel.heartbeat', 'ipykernel.ipkernel', 'IPython.utils.tokenutil', 'ipykernel.comm', 'ipykernel.comm.manager', 'ipykernel.comm.comm', 'ipykernel.kernelbase', 'tornado.queues', 'tornado.locks', 'ipykernel.jsonutil', 'ipykernel.zmqshell', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.datapub', 'ipykernel.serialize', 'ipykernel.pickleutil', 'ipykernel.codeutil', 'ipykernel.eventloops', 'distutils', 'distutils.version', 'ipykernel.parentpoller', 'faulthandler', 'IPython.core.completerlib', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'appnope', 'appnope._nope', 'storemagic', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'numpy.core', 'numpy.core.info', 'numpy.core.multiarray', 'numpy.core.overrides', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core._internal', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.shape_base', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.info', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.info', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.utils', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.mixins', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.scimath', 'numpy.lib.polynomial', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft.info', 'numpy.fft.fftpack', 'numpy.fft.fftpack_lite', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random.mtrand', 'mtrand', 'numpy.ctypeslib', 'numpy.core._dtype_ctypes', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.testing', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'numpy.testing._private', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'projects', 'projects.lifting_v2', 'projects.lifting_v2.experiments', 'projects.lifting_v2.experiments.experimentC3', 'projects.lifting_v2.experiments.experimentC3.E1_run', 'mrcfile', 'mrcfile.load_functions', 'mrcfile.bzip2mrcfile', 'mrcfile.mrcfile', 'mrcfile.mrcinterpreter', 'mrcfile.utils', 'mrcfile.constants', 'mrcfile.dtypes', 'mrcfile.mrcobject', 'mrcfile.future_mrcfile', 'mrcfile.gzipmrcfile', 'gzip', 'mrcfile.mrcmemmap', 'mrcfile.validator', 'mrcfile.version', 'scipy', 'scipy._lib', 'scipy._lib._testutils', 'scipy._lib.deprecation', 'scipy._distributor_init', 'scipy.__config__', 'scipy.version', 'scipy._lib._version', 'scipy._lib.six', 'scipy._lib._ccallback', 'scipy._lib._ccallback_c', 'scipy.fft', 'scipy.fft._basic', 'scipy._lib.uarray', 'scipy._lib._uarray', 'scipy._lib._uarray._backend', 'scipy._lib._uarray._uarray', 'scipy.fft._realtransforms', 'scipy.fft._helper', 'scipy.fft._pocketfft', 'scipy.fft._pocketfft.basic', 'scipy.fft._pocketfft.pypocketfft', 'scipy.fft._pocketfft.helper', 'scipy.fft._pocketfft.realtransforms', 'scipy.fft._backend', 'numpy.dual', 'scipy.ndimage', 'scipy.ndimage.filters', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy.ndimage._ni_docstrings', 'scipy._lib.doccer', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', 'scipy.ndimage.measurements', 'scipy.ndimage._ni_label', '_cython_0_29_13', '_ni_label', 'scipy.ndimage.morphology', 'aspire', 'logging.config', 'socketserver', 'importlib_resources', 'importlib_resources._common', 'importlib_resources.abc', 'importlib_resources._compat', 'zipfile', 'zipp', 'importlib_resources._py3', 'aspire.config', 'configparser', 'aspire.exceptions', 'aspire.operators', 'aspire.operators.blk_diag_matrix', 'scipy.linalg', 'scipy.linalg.linalg_version', 'scipy.linalg.misc', 'scipy.linalg.blas', 'scipy.linalg._fblas', 'scipy.linalg.lapack', 'scipy.linalg._flapack', 'scipy._lib._util', 'scipy.linalg.basic', 'scipy.linalg.flinalg', 'scipy.linalg._flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.matfuncs', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg._decomp_update', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._sketches', 'scipy.sparse', 'scipy.sparse.base', 'scipy._lib._numpy_compat', 'scipy.sparse.sputils', 'scipy.sparse.csr', 'scipy.sparse._sparsetools', 'scipy.sparse.compressed', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.csc', 'scipy.sparse.lil', 'scipy.sparse._csparsetools', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'aspire.utils', 'aspire.utils.misc', 'aspire.utils.matrix', 'aspire.utils.matlab_compat', 'aspire.utils.rotation', 'scipy.spatial', 'scipy.spatial.kdtree', 'scipy.spatial.ckdtree', 'scipy.spatial.qhull', 'scipy._lib.messagestream', 'scipy.spatial._spherical_voronoi', 'scipy.spatial._voronoi', 'scipy.spatial._plotutils', 'scipy._lib.decorator', 'scipy.spatial._procrustes', 'scipy.spatial.distance', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.special', 'scipy.special.sf_error', 'scipy.special._ufuncs', 'scipy.special._ufuncs_cxx', 'scipy.special._basic', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm', 'scipy.special._ellip_harm_2', 'scipy.special.lambertw', 'scipy.special._spherical_bessel', 'scipy.spatial.transform', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_groups', 'scipy.constants', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.spatial.transform._rotation_spline', 'aspire.utils.random', 'aspire.utils.types', 'aspire.utils.cell', 'aspire.operators.filters', 'scipy.interpolate', 'scipy.interpolate.interpolate', 'scipy.interpolate.fitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._bsplines', 'scipy.interpolate._bspl', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.rbf', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'aspire.utils.coor_trans', 'aspire.utils.filter_to_fb_mat', 'aspire.basis', 'aspire.basis.basis', 'scipy.sparse.linalg', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.matfuncs', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'aspire.basis.basis_utils', 'aspire.basis.dirac', 'aspire.basis.fb_2d', 'aspire.basis.fb_3d', 'aspire.basis.ffb_2d', 'aspire.image', 'aspire.image.image', 'aspire.volume', 'aspire.nufft', 'aspire.numeric', 'aspire.numeric.numpy', 'aspire.numeric.pyfftw_fft', 'pyfftw', 'pyfftw.pyfftw', 'pyfftw.config', 'pyfftw.builders', 'pyfftw.builders.builders', 'pyfftw.builders._utils', 'pyfftw.interfaces', 'pyfftw.interfaces.numpy_fft', 'pyfftw.interfaces._utils', 'pyfftw.interfaces.cache', 'scipy.fftpack', 'scipy.fftpack.basic', 'scipy.fftpack.helper', 'scipy.fftpack.pseudo_diffs', 'scipy.fftpack.convolve', 'scipy.fftpack.realtransforms', 'pyfftw.interfaces.scipy_fftpack', 'pyfftw.interfaces.scipy_fft', 'pyfftw._version', 'aspire.numeric.base_fft', 'aspire.image.preprocess', 'aspire.basis.ffb_3d', 'aspire.basis.fpswf_2d', 'scipy.optimize', 'scipy.optimize.optimize', 'scipy.optimize.linesearch', 'scipy.optimize.minpack2', 'scipy.optimize._minimize', 'scipy.optimize._trustregion_dogleg', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trlib', 'scipy.optimize._trlib._trlib', 'scipy.optimize._trustregion_exact', 'scipy.optimize._trustregion_constr', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.optimize._differentiable_functions', 'scipy.optimize._numdiff', 'scipy.optimize._group_columns', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._constraints', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize.lbfgsb', 'scipy.optimize._lbfgsb', 'scipy.optimize.tnc', 'scipy.optimize.moduleTNC', 'scipy.optimize.cobyla', 'scipy.optimize._cobyla', 'scipy.optimize.slsqp', 'scipy.optimize._slsqp', 'scipy.optimize._root', 'scipy.optimize.minpack', 'scipy.optimize._minpack', 'scipy.optimize._lsq', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.bvls', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root_scalar', 'scipy.optimize.zeros', 'scipy.optimize._zeros', 'scipy.optimize.nnls', 'scipy.optimize._nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._linprog', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_util', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_simplex', 'scipy.optimize._linprog_rs', 'scipy.optimize._bglu_dense', 'scipy.optimize._lsap', 'scipy.optimize._lsap_module', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.sobol_seq', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._dual_annealing', 'aspire.basis.pswf_2d', 'aspire.basis.pswf_utils', 'aspire.basis.fpswf_3d', 'aspire.basis.pswf_3d', 'aspire.basis.polar_2d', 'aspire.source', 'pandas', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pandas.compat', 'pandas.compat.numpy', 'pandas._libs', 'pandas._libs.tslibs', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.c_timestamp', 'pandas._libs.tslibs.nattype', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.tzconversion', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.ccalendar', 'pandas._config', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.frequencies', 'pandas._libs.tslibs.timestamps', 'pandas._libs.tslibs.resolution', 'pandas._libs.hashtable', 'pandas._libs.missing', 'pandas._libs.lib', 'fractions', 'pandas._libs.tslib', 'pandas.core', 'pandas.core.config_init', 'pandas.core.api', 'pandas.core.arrays', 'pandas.core.arrays.array_', 'pandas.core.dtypes', 'pandas.core.dtypes.common', 'pandas._libs.algos', 'pandas.core.dtypes.dtypes', 'pandas._libs.interval', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.errors', 'pandas.core.dtypes.inference', 'pandas._typing', 'pandas.core.arrays.base', 'pandas.compat.numpy.function', 'pandas.util', 'pandas.util._decorators', 'pandas._libs.properties', 'pandas.core.util', 'pandas.core.util.hashing', 'pandas._libs.hashing', 'pandas.core.dtypes.cast', 'pandas.core.dtypes.missing', 'pandas.util._validators', 'pandas.core.ops', 'pandas._libs.ops', 'pandas.core.common', 'pandas.core.ops.missing', 'pandas.core.ops.roperator', 'pandas.core.ops.docstrings', 'pandas.core.sorting', 'pandas.core.algorithms', 'pandas.core.indexers', 'pandas.core.arrays.categorical', 'pandas.core.accessor', 'pandas.core.base', 'pandas.core.nanops', 'pandas.compat._optional', 'pandas.core.missing', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.datetimelike', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.tseries.offsets', 'dateutil.easter', 'pandas.core.tools', 'pandas.core.tools.datetimes', 'pandas.core.arrays._ranges', 'pandas.core.arrays.integer', 'pandas.core.tools.numeric', 'pandas.core.arrays.interval', 'pandas.core.indexes', 'pandas.core.indexes.base', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.dtypes.concat', 'pandas.core.indexes.frozen', 'pandas.io.formats.printing', 'pandas.core.strings', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.sparse', 'pandas._libs.sparse', 'pandas.core.arrays.timedeltas', 'pandas.core.groupby', 'pandas.core.groupby.generic', 'pandas.core.frame', 'pandas.core.generic', 'pandas.core.index', 'pandas.core.indexes.api', 'pandas.core.indexes.category', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.numeric', 'pandas.core.indexes.interval', 'pandas.util._exceptions', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexing', 'pandas._libs.indexing', 'pandas.core.internals', 'pandas.core.internals.blocks', 'pandas._libs.internals', 'pandas.core.internals.arrays', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.io.formats.format', 'pandas.io.common', 'csv', '_csv', 'mmap', 'pandas.core.internals.construction', 'pandas.core.series', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.plotting', 'pandas.plotting._core', 'pandas.plotting._matplotlib', 'pandas.plotting._matplotlib.boxplot', 'matplotlib', 'matplotlib.cbook', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.animation', 'matplotlib._animation_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'matplotlib._version', 'matplotlib.ft2font', 'kiwisolver']
2022-08-04 11:52:55,298 DEBUG CACHEDIR=/Users/wdiepeveen/.matplotlib
2022-08-04 11:52:55,306 DEBUG Using fontManager instance from /Users/wdiepeveen/.matplotlib/fontlist-v330.json
2022-08-04 11:52:57,544 DEBUG Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2022-08-04 11:52:57,550 DEBUG Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2022-08-04 11:52:59,564 DEBUG label 0:
    q1 = arg(0, name=q1)                     ['q1']
    q2 = arg(1, name=q2)                     ['q2']
    out = arg(2, name=out)                   ['out']
    $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$0.1']
    $0.2 = getattr(value=$0.1, attr=empty)   ['$0.1', '$0.2']
    $const0.3 = const(int, 4)                ['$const0.3']
    qtemp = call $0.2($const0.3, func=$0.2, args=[Var($const0.3, distance.py:44)], kws=(), vararg=None) ['$0.2', '$const0.3', 'qtemp']
    $0.5 = global(_divide: CPUDispatcher(<function divide at 0x7fa2cd1fa950>)) ['$0.5']
    $0.9 = call $0.5(q1, q2, qtemp, func=$0.5, args=[Var(q1, distance.py:44), Var(q2, distance.py:44), Var(qtemp, distance.py:44)], kws=(), vararg=None) ['$0.5', '$0.9', 'q1', 'q2', 'qtemp']
    $0.10 = global(_log: CPUDispatcher(<function log at 0x7fa2cd1faf28>)) ['$0.10']
    $0.13 = call $0.10(qtemp, qtemp, func=$0.10, args=[Var(qtemp, distance.py:44), Var(qtemp, distance.py:44)], kws=(), vararg=None) ['$0.10', '$0.13', 'qtemp', 'qtemp']
    $0.14 = global(_absolute: CPUDispatcher(<function absolute at 0x7fa2cd1fad90>)) ['$0.14']
    $0.17 = call $0.14(qtemp, out, func=$0.14, args=[Var(qtemp, distance.py:44), Var(out, distance.py:44)], kws=(), vararg=None) ['$0.14', '$0.17', 'out', 'qtemp']
    $const0.19 = const(int, 0)               ['$const0.19']
    $0.22 = getitem(value=out, index=$const0.19, fn=<built-in function getitem>) ['$0.22', '$const0.19', 'out']
    $const0.23 = const(int, 2)               ['$const0.23']
    $0.24 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=$0.22, rhs=$const0.23, static_lhs=Undefined, static_rhs=Undefined) ['$0.22', '$0.24', '$const0.23']
    out[$const0.19] = $0.24                  ['$0.24', '$const0.19', 'out']
    $const0.25 = const(NoneType, None)       ['$const0.25']
    $0.26 = cast(value=$const0.25)           ['$0.26', '$const0.25']
    return $0.26                             ['$0.26']

2022-08-04 11:52:59,568 DEBUG ==== SSA block analysis pass on 0
2022-08-04 11:52:59,569 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdb50c18>
2022-08-04 11:52:59,570 DEBUG on stmt: q1 = arg(0, name=q1)
2022-08-04 11:52:59,570 DEBUG on stmt: q2 = arg(1, name=q2)
2022-08-04 11:52:59,570 DEBUG on stmt: out = arg(2, name=out)
2022-08-04 11:52:59,570 DEBUG on stmt: $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:52:59,571 DEBUG on stmt: $0.2 = getattr(value=$0.1, attr=empty)
2022-08-04 11:52:59,571 DEBUG on stmt: $const0.3 = const(int, 4)
2022-08-04 11:52:59,571 DEBUG on stmt: qtemp = call $0.2($const0.3, func=$0.2, args=[Var($const0.3, distance.py:44)], kws=(), vararg=None)
2022-08-04 11:52:59,571 DEBUG on stmt: $0.5 = global(_divide: CPUDispatcher(<function divide at 0x7fa2cd1fa950>))
2022-08-04 11:52:59,571 DEBUG on stmt: $0.9 = call $0.5(q1, q2, qtemp, func=$0.5, args=[Var(q1, distance.py:44), Var(q2, distance.py:44), Var(qtemp, distance.py:44)], kws=(), vararg=None)
2022-08-04 11:52:59,571 DEBUG on stmt: $0.10 = global(_log: CPUDispatcher(<function log at 0x7fa2cd1faf28>))
2022-08-04 11:52:59,571 DEBUG on stmt: $0.13 = call $0.10(qtemp, qtemp, func=$0.10, args=[Var(qtemp, distance.py:44), Var(qtemp, distance.py:44)], kws=(), vararg=None)
2022-08-04 11:52:59,571 DEBUG on stmt: $0.14 = global(_absolute: CPUDispatcher(<function absolute at 0x7fa2cd1fad90>))
2022-08-04 11:52:59,571 DEBUG on stmt: $0.17 = call $0.14(qtemp, out, func=$0.14, args=[Var(qtemp, distance.py:44), Var(out, distance.py:44)], kws=(), vararg=None)
2022-08-04 11:52:59,571 DEBUG on stmt: $const0.19 = const(int, 0)
2022-08-04 11:52:59,571 DEBUG on stmt: $0.22 = static_getitem(value=out, index=0, index_var=$const0.19, fn=<built-in function getitem>)
2022-08-04 11:52:59,571 DEBUG on stmt: $const0.23 = const(int, 2)
2022-08-04 11:52:59,572 DEBUG on stmt: $0.24 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=$0.22, rhs=$const0.23, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:52:59,572 DEBUG on stmt: out[0] = $0.24
2022-08-04 11:52:59,572 DEBUG on stmt: $const0.25 = const(NoneType, None)
2022-08-04 11:52:59,572 DEBUG on stmt: $0.26 = cast(value=$const0.25)
2022-08-04 11:52:59,572 DEBUG on stmt: return $0.26
2022-08-04 11:52:59,573 DEBUG defs defaultdict(<class 'list'>,
            {'$0.1': [<numba.core.ir.Assign object at 0x7fa2cdb47668>],
             '$0.10': [<numba.core.ir.Assign object at 0x7fa2cdb47e48>],
             '$0.13': [<numba.core.ir.Assign object at 0x7fa2cdb500b8>],
             '$0.14': [<numba.core.ir.Assign object at 0x7fa2cdb50198>],
             '$0.17': [<numba.core.ir.Assign object at 0x7fa2cdb503c8>],
             '$0.2': [<numba.core.ir.Assign object at 0x7fa2cdb47748>],
             '$0.22': [<numba.core.ir.Assign object at 0x7fa2cdb50ef0>],
             '$0.24': [<numba.core.ir.Assign object at 0x7fa2cdb50908>],
             '$0.26': [<numba.core.ir.Assign object at 0x7fa2cdb50b38>],
             '$0.5': [<numba.core.ir.Assign object at 0x7fa2cdb47a90>],
             '$0.9': [<numba.core.ir.Assign object at 0x7fa2cdb47d68>],
             '$const0.19': [<numba.core.ir.Assign object at 0x7fa2cdb50550>],
             '$const0.23': [<numba.core.ir.Assign object at 0x7fa2cdb50828>],
             '$const0.25': [<numba.core.ir.Assign object at 0x7fa2cdb50a58>],
             '$const0.3': [<numba.core.ir.Assign object at 0x7fa2cdb47828>],
             'out': [<numba.core.ir.Assign object at 0x7fa2cdb47588>],
             'q1': [<numba.core.ir.Assign object at 0x7fa2cdb47438>],
             'q2': [<numba.core.ir.Assign object at 0x7fa2cdb474e0>],
             'qtemp': [<numba.core.ir.Assign object at 0x7fa2cdb47908>]})
2022-08-04 11:52:59,573 DEBUG SSA violators set()
2022-08-04 11:52:59,588 DEBUG label 0:
    q1 = arg(0, name=q1)                     ['q1']
    q2 = arg(1, name=q2)                     ['q2']
    qout = arg(2, name=qout)                 ['qout']
    $const0.2 = const(int, 0)                ['$const0.2']
    $0.3 = getitem(value=q2, index=$const0.2, fn=<built-in function getitem>) ['$0.3', '$const0.2', 'q2']
    $const0.4 = const(int, 2)                ['$const0.4']
    $0.5 = $0.3 ** $const0.4                 ['$0.3', '$0.5', '$const0.4']
    $const0.7 = const(int, 1)                ['$const0.7']
    $0.8 = getitem(value=q2, index=$const0.7, fn=<built-in function getitem>) ['$0.8', '$const0.7', 'q2']
    $const0.9 = const(int, 2)                ['$const0.9']
    $0.10 = $0.8 ** $const0.9                ['$0.10', '$0.8', '$const0.9']
    $0.11 = $0.5 + $0.10                     ['$0.10', '$0.11', '$0.5']
    $const0.13 = const(int, 2)               ['$const0.13']
    $0.14 = getitem(value=q2, index=$const0.13, fn=<built-in function getitem>) ['$0.14', '$const0.13', 'q2']
    $const0.15 = const(int, 2)               ['$const0.15']
    $0.16 = $0.14 ** $const0.15              ['$0.14', '$0.16', '$const0.15']
    $0.17 = $0.11 + $0.16                    ['$0.11', '$0.16', '$0.17']
    $const0.19 = const(int, 3)               ['$const0.19']
    $0.20 = getitem(value=q2, index=$const0.19, fn=<built-in function getitem>) ['$0.20', '$const0.19', 'q2']
    $const0.21 = const(int, 2)               ['$const0.21']
    $0.22 = $0.20 ** $const0.21              ['$0.20', '$0.22', '$const0.21']
    q2norm = $0.17 + $0.22                   ['$0.17', '$0.22', 'q2norm']
    $const0.25 = const(int, 0)               ['$const0.25']
    $0.26 = getitem(value=q1, index=$const0.25, fn=<built-in function getitem>) ['$0.26', '$const0.25', 'q1']
    $0.27 = unary(fn=<built-in function pos>, value=$0.26) ['$0.26', '$0.27']
    $const0.29 = const(int, 0)               ['$const0.29']
    $0.30 = getitem(value=q2, index=$const0.29, fn=<built-in function getitem>) ['$0.30', '$const0.29', 'q2']
    $0.31 = $0.27 * $0.30                    ['$0.27', '$0.30', '$0.31']
    $const0.33 = const(int, 1)               ['$const0.33']
    $0.34 = getitem(value=q1, index=$const0.33, fn=<built-in function getitem>) ['$0.34', '$const0.33', 'q1']
    $const0.36 = const(int, 1)               ['$const0.36']
    $0.37 = getitem(value=q2, index=$const0.36, fn=<built-in function getitem>) ['$0.37', '$const0.36', 'q2']
    $0.38 = $0.34 * $0.37                    ['$0.34', '$0.37', '$0.38']
    $0.39 = $0.31 + $0.38                    ['$0.31', '$0.38', '$0.39']
    $const0.41 = const(int, 2)               ['$const0.41']
    $0.42 = getitem(value=q1, index=$const0.41, fn=<built-in function getitem>) ['$0.42', '$const0.41', 'q1']
    $const0.44 = const(int, 2)               ['$const0.44']
    $0.45 = getitem(value=q2, index=$const0.44, fn=<built-in function getitem>) ['$0.45', '$const0.44', 'q2']
    $0.46 = $0.42 * $0.45                    ['$0.42', '$0.45', '$0.46']
    $0.47 = $0.39 + $0.46                    ['$0.39', '$0.46', '$0.47']
    $const0.49 = const(int, 3)               ['$const0.49']
    $0.50 = getitem(value=q1, index=$const0.49, fn=<built-in function getitem>) ['$0.50', '$const0.49', 'q1']
    $const0.52 = const(int, 3)               ['$const0.52']
    $0.53 = getitem(value=q2, index=$const0.52, fn=<built-in function getitem>) ['$0.53', '$const0.52', 'q2']
    $0.54 = $0.50 * $0.53                    ['$0.50', '$0.53', '$0.54']
    $0.55 = $0.47 + $0.54                    ['$0.47', '$0.54', '$0.55']
    $0.57 = $0.55 / q2norm                   ['$0.55', '$0.57', 'q2norm']
    $const0.59 = const(int, 0)               ['$const0.59']
    qout[$const0.59] = $0.57                 ['$0.57', '$const0.59', 'qout']
    $const0.61 = const(int, 0)               ['$const0.61']
    $0.62 = getitem(value=q1, index=$const0.61, fn=<built-in function getitem>) ['$0.62', '$const0.61', 'q1']
    $0.63 = unary(fn=<built-in function neg>, value=$0.62) ['$0.62', '$0.63']
    $const0.65 = const(int, 1)               ['$const0.65']
    $0.66 = getitem(value=q2, index=$const0.65, fn=<built-in function getitem>) ['$0.66', '$const0.65', 'q2']
    $0.67 = $0.63 * $0.66                    ['$0.63', '$0.66', '$0.67']
    $const0.69 = const(int, 1)               ['$const0.69']
    $0.70 = getitem(value=q1, index=$const0.69, fn=<built-in function getitem>) ['$0.70', '$const0.69', 'q1']
    $const0.72 = const(int, 0)               ['$const0.72']
    $0.73 = getitem(value=q2, index=$const0.72, fn=<built-in function getitem>) ['$0.73', '$const0.72', 'q2']
    $0.74 = $0.70 * $0.73                    ['$0.70', '$0.73', '$0.74']
    $0.75 = $0.67 + $0.74                    ['$0.67', '$0.74', '$0.75']
    $const0.77 = const(int, 2)               ['$const0.77']
    $0.78 = getitem(value=q1, index=$const0.77, fn=<built-in function getitem>) ['$0.78', '$const0.77', 'q1']
    $const0.80 = const(int, 3)               ['$const0.80']
    $0.81 = getitem(value=q2, index=$const0.80, fn=<built-in function getitem>) ['$0.81', '$const0.80', 'q2']
    $0.82 = $0.78 * $0.81                    ['$0.78', '$0.81', '$0.82']
    $0.83 = $0.75 - $0.82                    ['$0.75', '$0.82', '$0.83']
    $const0.85 = const(int, 3)               ['$const0.85']
    $0.86 = getitem(value=q1, index=$const0.85, fn=<built-in function getitem>) ['$0.86', '$const0.85', 'q1']
    $const0.88 = const(int, 2)               ['$const0.88']
    $0.89 = getitem(value=q2, index=$const0.88, fn=<built-in function getitem>) ['$0.89', '$const0.88', 'q2']
    $0.90 = $0.86 * $0.89                    ['$0.86', '$0.89', '$0.90']
    $0.91 = $0.83 + $0.90                    ['$0.83', '$0.90', '$0.91']
    $0.93 = $0.91 / q2norm                   ['$0.91', '$0.93', 'q2norm']
    $const0.95 = const(int, 1)               ['$const0.95']
    qout[$const0.95] = $0.93                 ['$0.93', '$const0.95', 'qout']
    $const0.97 = const(int, 0)               ['$const0.97']
    $0.98 = getitem(value=q1, index=$const0.97, fn=<built-in function getitem>) ['$0.98', '$const0.97', 'q1']
    $0.99 = unary(fn=<built-in function neg>, value=$0.98) ['$0.98', '$0.99']
    $const0.101 = const(int, 2)              ['$const0.101']
    $0.102 = getitem(value=q2, index=$const0.101, fn=<built-in function getitem>) ['$0.102', '$const0.101', 'q2']
    $0.103 = $0.99 * $0.102                  ['$0.102', '$0.103', '$0.99']
    $const0.105 = const(int, 1)              ['$const0.105']
    $0.106 = getitem(value=q1, index=$const0.105, fn=<built-in function getitem>) ['$0.106', '$const0.105', 'q1']
    $const0.108 = const(int, 3)              ['$const0.108']
    $0.109 = getitem(value=q2, index=$const0.108, fn=<built-in function getitem>) ['$0.109', '$const0.108', 'q2']
    $0.110 = $0.106 * $0.109                 ['$0.106', '$0.109', '$0.110']
    $0.111 = $0.103 + $0.110                 ['$0.103', '$0.110', '$0.111']
    $const0.113 = const(int, 2)              ['$const0.113']
    $0.114 = getitem(value=q1, index=$const0.113, fn=<built-in function getitem>) ['$0.114', '$const0.113', 'q1']
    $const0.116 = const(int, 0)              ['$const0.116']
    $0.117 = getitem(value=q2, index=$const0.116, fn=<built-in function getitem>) ['$0.117', '$const0.116', 'q2']
    $0.118 = $0.114 * $0.117                 ['$0.114', '$0.117', '$0.118']
    $0.119 = $0.111 + $0.118                 ['$0.111', '$0.118', '$0.119']
    $const0.121 = const(int, 3)              ['$const0.121']
    $0.122 = getitem(value=q1, index=$const0.121, fn=<built-in function getitem>) ['$0.122', '$const0.121', 'q1']
    $const0.124 = const(int, 1)              ['$const0.124']
    $0.125 = getitem(value=q2, index=$const0.124, fn=<built-in function getitem>) ['$0.125', '$const0.124', 'q2']
    $0.126 = $0.122 * $0.125                 ['$0.122', '$0.125', '$0.126']
    $0.127 = $0.119 - $0.126                 ['$0.119', '$0.126', '$0.127']
    $0.129 = $0.127 / q2norm                 ['$0.127', '$0.129', 'q2norm']
    $const0.131 = const(int, 2)              ['$const0.131']
    qout[$const0.131] = $0.129               ['$0.129', '$const0.131', 'qout']
    $const0.133 = const(int, 0)              ['$const0.133']
    $0.134 = getitem(value=q1, index=$const0.133, fn=<built-in function getitem>) ['$0.134', '$const0.133', 'q1']
    $0.135 = unary(fn=<built-in function neg>, value=$0.134) ['$0.134', '$0.135']
    $const0.137 = const(int, 3)              ['$const0.137']
    $0.138 = getitem(value=q2, index=$const0.137, fn=<built-in function getitem>) ['$0.138', '$const0.137', 'q2']
    $0.139 = $0.135 * $0.138                 ['$0.135', '$0.138', '$0.139']
    $const0.141 = const(int, 1)              ['$const0.141']
    $0.142 = getitem(value=q1, index=$const0.141, fn=<built-in function getitem>) ['$0.142', '$const0.141', 'q1']
    $const0.144 = const(int, 2)              ['$const0.144']
    $0.145 = getitem(value=q2, index=$const0.144, fn=<built-in function getitem>) ['$0.145', '$const0.144', 'q2']
    $0.146 = $0.142 * $0.145                 ['$0.142', '$0.145', '$0.146']
    $0.147 = $0.139 - $0.146                 ['$0.139', '$0.146', '$0.147']
    $const0.149 = const(int, 2)              ['$const0.149']
    $0.150 = getitem(value=q1, index=$const0.149, fn=<built-in function getitem>) ['$0.150', '$const0.149', 'q1']
    $const0.152 = const(int, 1)              ['$const0.152']
    $0.153 = getitem(value=q2, index=$const0.152, fn=<built-in function getitem>) ['$0.153', '$const0.152', 'q2']
    $0.154 = $0.150 * $0.153                 ['$0.150', '$0.153', '$0.154']
    $0.155 = $0.147 + $0.154                 ['$0.147', '$0.154', '$0.155']
    $const0.157 = const(int, 3)              ['$const0.157']
    $0.158 = getitem(value=q1, index=$const0.157, fn=<built-in function getitem>) ['$0.158', '$const0.157', 'q1']
    $const0.160 = const(int, 0)              ['$const0.160']
    $0.161 = getitem(value=q2, index=$const0.160, fn=<built-in function getitem>) ['$0.161', '$const0.160', 'q2']
    $0.162 = $0.158 * $0.161                 ['$0.158', '$0.161', '$0.162']
    $0.163 = $0.155 + $0.162                 ['$0.155', '$0.162', '$0.163']
    $0.165 = $0.163 / q2norm                 ['$0.163', '$0.165', 'q2norm']
    $const0.167 = const(int, 3)              ['$const0.167']
    qout[$const0.167] = $0.165               ['$0.165', '$const0.167', 'qout']
    $const0.168 = const(NoneType, None)      ['$const0.168']
    $0.169 = cast(value=$const0.168)         ['$0.169', '$const0.168']
    return $0.169                            ['$0.169']

2022-08-04 11:52:59,597 DEBUG ==== SSA block analysis pass on 0
2022-08-04 11:52:59,597 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdba2198>
2022-08-04 11:52:59,598 DEBUG on stmt: q1 = arg(0, name=q1)
2022-08-04 11:52:59,598 DEBUG on stmt: q2 = arg(1, name=q2)
2022-08-04 11:52:59,598 DEBUG on stmt: qout = arg(2, name=qout)
2022-08-04 11:52:59,598 DEBUG on stmt: $const0.2 = const(int, 0)
2022-08-04 11:52:59,598 DEBUG on stmt: $0.3 = static_getitem(value=q2, index=0, index_var=$const0.2, fn=<built-in function getitem>)
2022-08-04 11:52:59,598 DEBUG on stmt: $const0.4 = const(int, 2)
2022-08-04 11:52:59,598 DEBUG on stmt: $0.5 = $0.3 ** $const0.4
2022-08-04 11:52:59,598 DEBUG on stmt: $const0.7 = const(int, 1)
2022-08-04 11:52:59,598 DEBUG on stmt: $0.8 = static_getitem(value=q2, index=1, index_var=$const0.7, fn=<built-in function getitem>)
2022-08-04 11:52:59,598 DEBUG on stmt: $const0.9 = const(int, 2)
2022-08-04 11:52:59,598 DEBUG on stmt: $0.10 = $0.8 ** $const0.9
2022-08-04 11:52:59,598 DEBUG on stmt: $0.11 = $0.5 + $0.10
2022-08-04 11:52:59,598 DEBUG on stmt: $const0.13 = const(int, 2)
2022-08-04 11:52:59,598 DEBUG on stmt: $0.14 = static_getitem(value=q2, index=2, index_var=$const0.13, fn=<built-in function getitem>)
2022-08-04 11:52:59,598 DEBUG on stmt: $const0.15 = const(int, 2)
2022-08-04 11:52:59,598 DEBUG on stmt: $0.16 = $0.14 ** $const0.15
2022-08-04 11:52:59,598 DEBUG on stmt: $0.17 = $0.11 + $0.16
2022-08-04 11:52:59,598 DEBUG on stmt: $const0.19 = const(int, 3)
2022-08-04 11:52:59,598 DEBUG on stmt: $0.20 = static_getitem(value=q2, index=3, index_var=$const0.19, fn=<built-in function getitem>)
2022-08-04 11:52:59,598 DEBUG on stmt: $const0.21 = const(int, 2)
2022-08-04 11:52:59,598 DEBUG on stmt: $0.22 = $0.20 ** $const0.21
2022-08-04 11:52:59,598 DEBUG on stmt: q2norm = $0.17 + $0.22
2022-08-04 11:52:59,598 DEBUG on stmt: $const0.25 = const(int, 0)
2022-08-04 11:52:59,598 DEBUG on stmt: $0.26 = static_getitem(value=q1, index=0, index_var=$const0.25, fn=<built-in function getitem>)
2022-08-04 11:52:59,599 DEBUG on stmt: $0.27 = unary(fn=<built-in function pos>, value=$0.26)
2022-08-04 11:52:59,599 DEBUG on stmt: $const0.29 = const(int, 0)
2022-08-04 11:52:59,599 DEBUG on stmt: $0.30 = static_getitem(value=q2, index=0, index_var=$const0.29, fn=<built-in function getitem>)
2022-08-04 11:52:59,599 DEBUG on stmt: $0.31 = $0.27 * $0.30
2022-08-04 11:52:59,599 DEBUG on stmt: $const0.33 = const(int, 1)
2022-08-04 11:52:59,599 DEBUG on stmt: $0.34 = static_getitem(value=q1, index=1, index_var=$const0.33, fn=<built-in function getitem>)
2022-08-04 11:52:59,599 DEBUG on stmt: $const0.36 = const(int, 1)
2022-08-04 11:52:59,599 DEBUG on stmt: $0.37 = static_getitem(value=q2, index=1, index_var=$const0.36, fn=<built-in function getitem>)
2022-08-04 11:52:59,599 DEBUG on stmt: $0.38 = $0.34 * $0.37
2022-08-04 11:52:59,599 DEBUG on stmt: $0.39 = $0.31 + $0.38
2022-08-04 11:52:59,599 DEBUG on stmt: $const0.41 = const(int, 2)
2022-08-04 11:52:59,599 DEBUG on stmt: $0.42 = static_getitem(value=q1, index=2, index_var=$const0.41, fn=<built-in function getitem>)
2022-08-04 11:52:59,599 DEBUG on stmt: $const0.44 = const(int, 2)
2022-08-04 11:52:59,599 DEBUG on stmt: $0.45 = static_getitem(value=q2, index=2, index_var=$const0.44, fn=<built-in function getitem>)
2022-08-04 11:52:59,599 DEBUG on stmt: $0.46 = $0.42 * $0.45
2022-08-04 11:52:59,599 DEBUG on stmt: $0.47 = $0.39 + $0.46
2022-08-04 11:52:59,599 DEBUG on stmt: $const0.49 = const(int, 3)
2022-08-04 11:52:59,599 DEBUG on stmt: $0.50 = static_getitem(value=q1, index=3, index_var=$const0.49, fn=<built-in function getitem>)
2022-08-04 11:52:59,599 DEBUG on stmt: $const0.52 = const(int, 3)
2022-08-04 11:52:59,599 DEBUG on stmt: $0.53 = static_getitem(value=q2, index=3, index_var=$const0.52, fn=<built-in function getitem>)
2022-08-04 11:52:59,599 DEBUG on stmt: $0.54 = $0.50 * $0.53
2022-08-04 11:52:59,599 DEBUG on stmt: $0.55 = $0.47 + $0.54
2022-08-04 11:52:59,599 DEBUG on stmt: $0.57 = $0.55 / q2norm
2022-08-04 11:52:59,600 DEBUG on stmt: $const0.59 = const(int, 0)
2022-08-04 11:52:59,600 DEBUG on stmt: qout[0] = $0.57
2022-08-04 11:52:59,600 DEBUG on stmt: $const0.61 = const(int, 0)
2022-08-04 11:52:59,600 DEBUG on stmt: $0.62 = static_getitem(value=q1, index=0, index_var=$const0.61, fn=<built-in function getitem>)
2022-08-04 11:52:59,600 DEBUG on stmt: $0.63 = unary(fn=<built-in function neg>, value=$0.62)
2022-08-04 11:52:59,600 DEBUG on stmt: $const0.65 = const(int, 1)
2022-08-04 11:52:59,600 DEBUG on stmt: $0.66 = static_getitem(value=q2, index=1, index_var=$const0.65, fn=<built-in function getitem>)
2022-08-04 11:52:59,600 DEBUG on stmt: $0.67 = $0.63 * $0.66
2022-08-04 11:52:59,600 DEBUG on stmt: $const0.69 = const(int, 1)
2022-08-04 11:52:59,600 DEBUG on stmt: $0.70 = static_getitem(value=q1, index=1, index_var=$const0.69, fn=<built-in function getitem>)
2022-08-04 11:52:59,600 DEBUG on stmt: $const0.72 = const(int, 0)
2022-08-04 11:52:59,600 DEBUG on stmt: $0.73 = static_getitem(value=q2, index=0, index_var=$const0.72, fn=<built-in function getitem>)
2022-08-04 11:52:59,600 DEBUG on stmt: $0.74 = $0.70 * $0.73
2022-08-04 11:52:59,600 DEBUG on stmt: $0.75 = $0.67 + $0.74
2022-08-04 11:52:59,600 DEBUG on stmt: $const0.77 = const(int, 2)
2022-08-04 11:52:59,600 DEBUG on stmt: $0.78 = static_getitem(value=q1, index=2, index_var=$const0.77, fn=<built-in function getitem>)
2022-08-04 11:52:59,600 DEBUG on stmt: $const0.80 = const(int, 3)
2022-08-04 11:52:59,601 DEBUG on stmt: $0.81 = static_getitem(value=q2, index=3, index_var=$const0.80, fn=<built-in function getitem>)
2022-08-04 11:52:59,601 DEBUG on stmt: $0.82 = $0.78 * $0.81
2022-08-04 11:52:59,601 DEBUG on stmt: $0.83 = $0.75 - $0.82
2022-08-04 11:52:59,601 DEBUG on stmt: $const0.85 = const(int, 3)
2022-08-04 11:52:59,601 DEBUG on stmt: $0.86 = static_getitem(value=q1, index=3, index_var=$const0.85, fn=<built-in function getitem>)
2022-08-04 11:52:59,601 DEBUG on stmt: $const0.88 = const(int, 2)
2022-08-04 11:52:59,601 DEBUG on stmt: $0.89 = static_getitem(value=q2, index=2, index_var=$const0.88, fn=<built-in function getitem>)
2022-08-04 11:52:59,601 DEBUG on stmt: $0.90 = $0.86 * $0.89
2022-08-04 11:52:59,601 DEBUG on stmt: $0.91 = $0.83 + $0.90
2022-08-04 11:52:59,601 DEBUG on stmt: $0.93 = $0.91 / q2norm
2022-08-04 11:52:59,601 DEBUG on stmt: $const0.95 = const(int, 1)
2022-08-04 11:52:59,601 DEBUG on stmt: qout[1] = $0.93
2022-08-04 11:52:59,601 DEBUG on stmt: $const0.97 = const(int, 0)
2022-08-04 11:52:59,601 DEBUG on stmt: $0.98 = static_getitem(value=q1, index=0, index_var=$const0.97, fn=<built-in function getitem>)
2022-08-04 11:52:59,601 DEBUG on stmt: $0.99 = unary(fn=<built-in function neg>, value=$0.98)
2022-08-04 11:52:59,602 DEBUG on stmt: $const0.101 = const(int, 2)
2022-08-04 11:52:59,602 DEBUG on stmt: $0.102 = static_getitem(value=q2, index=2, index_var=$const0.101, fn=<built-in function getitem>)
2022-08-04 11:52:59,602 DEBUG on stmt: $0.103 = $0.99 * $0.102
2022-08-04 11:52:59,602 DEBUG on stmt: $const0.105 = const(int, 1)
2022-08-04 11:52:59,602 DEBUG on stmt: $0.106 = static_getitem(value=q1, index=1, index_var=$const0.105, fn=<built-in function getitem>)
2022-08-04 11:52:59,602 DEBUG on stmt: $const0.108 = const(int, 3)
2022-08-04 11:52:59,602 DEBUG on stmt: $0.109 = static_getitem(value=q2, index=3, index_var=$const0.108, fn=<built-in function getitem>)
2022-08-04 11:52:59,602 DEBUG on stmt: $0.110 = $0.106 * $0.109
2022-08-04 11:52:59,602 DEBUG on stmt: $0.111 = $0.103 + $0.110
2022-08-04 11:52:59,602 DEBUG on stmt: $const0.113 = const(int, 2)
2022-08-04 11:52:59,602 DEBUG on stmt: $0.114 = static_getitem(value=q1, index=2, index_var=$const0.113, fn=<built-in function getitem>)
2022-08-04 11:52:59,602 DEBUG on stmt: $const0.116 = const(int, 0)
2022-08-04 11:52:59,602 DEBUG on stmt: $0.117 = static_getitem(value=q2, index=0, index_var=$const0.116, fn=<built-in function getitem>)
2022-08-04 11:52:59,602 DEBUG on stmt: $0.118 = $0.114 * $0.117
2022-08-04 11:52:59,603 DEBUG on stmt: $0.119 = $0.111 + $0.118
2022-08-04 11:52:59,603 DEBUG on stmt: $const0.121 = const(int, 3)
2022-08-04 11:52:59,603 DEBUG on stmt: $0.122 = static_getitem(value=q1, index=3, index_var=$const0.121, fn=<built-in function getitem>)
2022-08-04 11:52:59,603 DEBUG on stmt: $const0.124 = const(int, 1)
2022-08-04 11:52:59,603 DEBUG on stmt: $0.125 = static_getitem(value=q2, index=1, index_var=$const0.124, fn=<built-in function getitem>)
2022-08-04 11:52:59,603 DEBUG on stmt: $0.126 = $0.122 * $0.125
2022-08-04 11:52:59,603 DEBUG on stmt: $0.127 = $0.119 - $0.126
2022-08-04 11:52:59,603 DEBUG on stmt: $0.129 = $0.127 / q2norm
2022-08-04 11:52:59,603 DEBUG on stmt: $const0.131 = const(int, 2)
2022-08-04 11:52:59,603 DEBUG on stmt: qout[2] = $0.129
2022-08-04 11:52:59,603 DEBUG on stmt: $const0.133 = const(int, 0)
2022-08-04 11:52:59,603 DEBUG on stmt: $0.134 = static_getitem(value=q1, index=0, index_var=$const0.133, fn=<built-in function getitem>)
2022-08-04 11:52:59,603 DEBUG on stmt: $0.135 = unary(fn=<built-in function neg>, value=$0.134)
2022-08-04 11:52:59,603 DEBUG on stmt: $const0.137 = const(int, 3)
2022-08-04 11:52:59,604 DEBUG on stmt: $0.138 = static_getitem(value=q2, index=3, index_var=$const0.137, fn=<built-in function getitem>)
2022-08-04 11:52:59,604 DEBUG on stmt: $0.139 = $0.135 * $0.138
2022-08-04 11:52:59,604 DEBUG on stmt: $const0.141 = const(int, 1)
2022-08-04 11:52:59,604 DEBUG on stmt: $0.142 = static_getitem(value=q1, index=1, index_var=$const0.141, fn=<built-in function getitem>)
2022-08-04 11:52:59,604 DEBUG on stmt: $const0.144 = const(int, 2)
2022-08-04 11:52:59,604 DEBUG on stmt: $0.145 = static_getitem(value=q2, index=2, index_var=$const0.144, fn=<built-in function getitem>)
2022-08-04 11:52:59,604 DEBUG on stmt: $0.146 = $0.142 * $0.145
2022-08-04 11:52:59,604 DEBUG on stmt: $0.147 = $0.139 - $0.146
2022-08-04 11:52:59,604 DEBUG on stmt: $const0.149 = const(int, 2)
2022-08-04 11:52:59,604 DEBUG on stmt: $0.150 = static_getitem(value=q1, index=2, index_var=$const0.149, fn=<built-in function getitem>)
2022-08-04 11:52:59,604 DEBUG on stmt: $const0.152 = const(int, 1)
2022-08-04 11:52:59,604 DEBUG on stmt: $0.153 = static_getitem(value=q2, index=1, index_var=$const0.152, fn=<built-in function getitem>)
2022-08-04 11:52:59,604 DEBUG on stmt: $0.154 = $0.150 * $0.153
2022-08-04 11:52:59,604 DEBUG on stmt: $0.155 = $0.147 + $0.154
2022-08-04 11:52:59,604 DEBUG on stmt: $const0.157 = const(int, 3)
2022-08-04 11:52:59,604 DEBUG on stmt: $0.158 = static_getitem(value=q1, index=3, index_var=$const0.157, fn=<built-in function getitem>)
2022-08-04 11:52:59,604 DEBUG on stmt: $const0.160 = const(int, 0)
2022-08-04 11:52:59,605 DEBUG on stmt: $0.161 = static_getitem(value=q2, index=0, index_var=$const0.160, fn=<built-in function getitem>)
2022-08-04 11:52:59,605 DEBUG on stmt: $0.162 = $0.158 * $0.161
2022-08-04 11:52:59,605 DEBUG on stmt: $0.163 = $0.155 + $0.162
2022-08-04 11:52:59,605 DEBUG on stmt: $0.165 = $0.163 / q2norm
2022-08-04 11:52:59,605 DEBUG on stmt: $const0.167 = const(int, 3)
2022-08-04 11:52:59,605 DEBUG on stmt: qout[3] = $0.165
2022-08-04 11:52:59,605 DEBUG on stmt: $const0.168 = const(NoneType, None)
2022-08-04 11:52:59,605 DEBUG on stmt: $0.169 = cast(value=$const0.168)
2022-08-04 11:52:59,605 DEBUG on stmt: return $0.169
2022-08-04 11:52:59,607 DEBUG defs defaultdict(<class 'list'>,
            {'$0.10': [<numba.core.ir.Assign object at 0x7fa2cdbbe630>],
             '$0.102': [<numba.core.ir.Assign object at 0x7fa2cdbaa1d0>],
             '$0.103': [<numba.core.ir.Assign object at 0x7fa2cdbd5518>],
             '$0.106': [<numba.core.ir.Assign object at 0x7fa2cdbaa240>],
             '$0.109': [<numba.core.ir.Assign object at 0x7fa2cdbaa2b0>],
             '$0.11': [<numba.core.ir.Assign object at 0x7fa2cdbbe710>],
             '$0.110': [<numba.core.ir.Assign object at 0x7fa2cdbd5ac8>],
             '$0.111': [<numba.core.ir.Assign object at 0x7fa2cdbd5ba8>],
             '$0.114': [<numba.core.ir.Assign object at 0x7fa2cdbaa320>],
             '$0.117': [<numba.core.ir.Assign object at 0x7fa2cdbaa390>],
             '$0.118': [<numba.core.ir.Assign object at 0x7fa2cdbd8198>],
             '$0.119': [<numba.core.ir.Assign object at 0x7fa2cdbd8278>],
             '$0.122': [<numba.core.ir.Assign object at 0x7fa2cdbaa400>],
             '$0.125': [<numba.core.ir.Assign object at 0x7fa2cdbaa470>],
             '$0.126': [<numba.core.ir.Assign object at 0x7fa2cdbd8828>],
             '$0.127': [<numba.core.ir.Assign object at 0x7fa2cdbd8908>],
             '$0.129': [<numba.core.ir.Assign object at 0x7fa2cdbd8a90>],
             '$0.134': [<numba.core.ir.Assign object at 0x7fa2cdbaa4e0>],
             '$0.135': [<numba.core.ir.Assign object at 0x7fa2cdbd8fd0>],
             '$0.138': [<numba.core.ir.Assign object at 0x7fa2cdbaa550>],
             '$0.139': [<numba.core.ir.Assign object at 0x7fa2cdbdb358>],
             '$0.14': [<numba.core.ir.Assign object at 0x7fa2cdbdb668>],
             '$0.142': [<numba.core.ir.Assign object at 0x7fa2cdbaa5c0>],
             '$0.145': [<numba.core.ir.Assign object at 0x7fa2cdbaa630>],
             '$0.146': [<numba.core.ir.Assign object at 0x7fa2cdbdb908>],
             '$0.147': [<numba.core.ir.Assign object at 0x7fa2cdbdb9e8>],
             '$0.150': [<numba.core.ir.Assign object at 0x7fa2cdbaa6a0>],
             '$0.153': [<numba.core.ir.Assign object at 0x7fa2cdbaa710>],
             '$0.154': [<numba.core.ir.Assign object at 0x7fa2cdbdbf98>],
             '$0.155': [<numba.core.ir.Assign object at 0x7fa2cdbe10b8>],
             '$0.158': [<numba.core.ir.Assign object at 0x7fa2cdbaa780>],
             '$0.16': [<numba.core.ir.Assign object at 0x7fa2cdbbeb38>],
             '$0.161': [<numba.core.ir.Assign object at 0x7fa2cdbaa7f0>],
             '$0.162': [<numba.core.ir.Assign object at 0x7fa2cdbe1668>],
             '$0.163': [<numba.core.ir.Assign object at 0x7fa2cdbe1748>],
             '$0.165': [<numba.core.ir.Assign object at 0x7fa2cdbe18d0>],
             '$0.169': [<numba.core.ir.Assign object at 0x7fa2cdbe1c88>],
             '$0.17': [<numba.core.ir.Assign object at 0x7fa2cdbbec18>],
             '$0.20': [<numba.core.ir.Assign object at 0x7fa2cdbdbcf8>],
             '$0.22': [<numba.core.ir.Assign object at 0x7fa2cdbbf080>],
             '$0.26': [<numba.core.ir.Assign object at 0x7fa2cdbb7ac8>],
             '$0.27': [<numba.core.ir.Assign object at 0x7fa2cdbbf550>],
             '$0.3': [<numba.core.ir.Assign object at 0x7fa2cdbd8b38>],
             '$0.30': [<numba.core.ir.Assign object at 0x7fa2cdbb7ba8>],
             '$0.31': [<numba.core.ir.Assign object at 0x7fa2cdbbf898>],
             '$0.34': [<numba.core.ir.Assign object at 0x7fa2cdbe13c8>],
             '$0.37': [<numba.core.ir.Assign object at 0x7fa2cdbe1978>],
             '$0.38': [<numba.core.ir.Assign object at 0x7fa2cdbbfe48>],
             '$0.39': [<numba.core.ir.Assign object at 0x7fa2cdbbff28>],
             '$0.42': [<numba.core.ir.Assign object at 0x7fa2cdbe1d30>],
             '$0.45': [<numba.core.ir.Assign object at 0x7fa2cdbe1da0>],
             '$0.46': [<numba.core.ir.Assign object at 0x7fa2cdbc6518>],
             '$0.47': [<numba.core.ir.Assign object at 0x7fa2cdbc65f8>],
             '$0.5': [<numba.core.ir.Assign object at 0x7fa2cdbbe208>],
             '$0.50': [<numba.core.ir.Assign object at 0x7fa2cdbe1e10>],
             '$0.53': [<numba.core.ir.Assign object at 0x7fa2cdbe1e80>],
             '$0.54': [<numba.core.ir.Assign object at 0x7fa2cdbc6ba8>],
             '$0.55': [<numba.core.ir.Assign object at 0x7fa2cdbc6c88>],
             '$0.57': [<numba.core.ir.Assign object at 0x7fa2cdbc6e10>],
             '$0.62': [<numba.core.ir.Assign object at 0x7fa2cdbe1ef0>],
             '$0.63': [<numba.core.ir.Assign object at 0x7fa2cdbc9390>],
             '$0.66': [<numba.core.ir.Assign object at 0x7fa2cdbe1f60>],
             '$0.67': [<numba.core.ir.Assign object at 0x7fa2cdbc96d8>],
             '$0.70': [<numba.core.ir.Assign object at 0x7fa2cdbe1fd0>],
             '$0.73': [<numba.core.ir.Assign object at 0x7fa2cdbcf748>],
             '$0.74': [<numba.core.ir.Assign object at 0x7fa2cdbc9c88>],
             '$0.75': [<numba.core.ir.Assign object at 0x7fa2cdbc9d68>],
             '$0.78': [<numba.core.ir.Assign object at 0x7fa2cdbcfcf8>],
             '$0.8': [<numba.core.ir.Assign object at 0x7fa2cdbdb0b8>],
             '$0.81': [<numba.core.ir.Assign object at 0x7fa2cdbcf0b8>],
             '$0.82': [<numba.core.ir.Assign object at 0x7fa2cdbcf358>],
             '$0.83': [<numba.core.ir.Assign object at 0x7fa2cdbcf438>],
             '$0.86': [<numba.core.ir.Assign object at 0x7fa2cdbaa080>],
             '$0.89': [<numba.core.ir.Assign object at 0x7fa2cdbaa0f0>],
             '$0.90': [<numba.core.ir.Assign object at 0x7fa2cdbcf9e8>],
             '$0.91': [<numba.core.ir.Assign object at 0x7fa2cdbcfac8>],
             '$0.93': [<numba.core.ir.Assign object at 0x7fa2cdbcfc50>],
             '$0.98': [<numba.core.ir.Assign object at 0x7fa2cdbaa160>],
             '$0.99': [<numba.core.ir.Assign object at 0x7fa2cdbd51d0>],
             '$const0.101': [<numba.core.ir.Assign object at 0x7fa2cdbd5358>],
             '$const0.105': [<numba.core.ir.Assign object at 0x7fa2cdbd56a0>],
             '$const0.108': [<numba.core.ir.Assign object at 0x7fa2cdbd5908>],
             '$const0.113': [<numba.core.ir.Assign object at 0x7fa2cdbd5d30>],
             '$const0.116': [<numba.core.ir.Assign object at 0x7fa2cdbd5f98>],
             '$const0.121': [<numba.core.ir.Assign object at 0x7fa2cdbd8400>],
             '$const0.124': [<numba.core.ir.Assign object at 0x7fa2cdbd8668>],
             '$const0.13': [<numba.core.ir.Assign object at 0x7fa2cdbbe898>],
             '$const0.131': [<numba.core.ir.Assign object at 0x7fa2cdbd8c18>],
             '$const0.133': [<numba.core.ir.Assign object at 0x7fa2cdbd8e10>],
             '$const0.137': [<numba.core.ir.Assign object at 0x7fa2cdbdb198>],
             '$const0.141': [<numba.core.ir.Assign object at 0x7fa2cdbdb4e0>],
             '$const0.144': [<numba.core.ir.Assign object at 0x7fa2cdbdb748>],
             '$const0.149': [<numba.core.ir.Assign object at 0x7fa2cdbdbb70>],
             '$const0.15': [<numba.core.ir.Assign object at 0x7fa2cdbbea58>],
             '$const0.152': [<numba.core.ir.Assign object at 0x7fa2cdbdbdd8>],
             '$const0.157': [<numba.core.ir.Assign object at 0x7fa2cdbe1240>],
             '$const0.160': [<numba.core.ir.Assign object at 0x7fa2cdbe14a8>],
             '$const0.167': [<numba.core.ir.Assign object at 0x7fa2cdbe1a58>],
             '$const0.168': [<numba.core.ir.Assign object at 0x7fa2cdbe1ba8>],
             '$const0.19': [<numba.core.ir.Assign object at 0x7fa2cdbbeda0>],
             '$const0.2': [<numba.core.ir.Assign object at 0x7fa2cdbb7f28>],
             '$const0.21': [<numba.core.ir.Assign object at 0x7fa2cdbbef60>],
             '$const0.25': [<numba.core.ir.Assign object at 0x7fa2cdbbf390>],
             '$const0.29': [<numba.core.ir.Assign object at 0x7fa2cdbbf6d8>],
             '$const0.33': [<numba.core.ir.Assign object at 0x7fa2cdbbfa20>],
             '$const0.36': [<numba.core.ir.Assign object at 0x7fa2cdbbfc88>],
             '$const0.4': [<numba.core.ir.Assign object at 0x7fa2cdbbe128>],
             '$const0.41': [<numba.core.ir.Assign object at 0x7fa2cdbc60f0>],
             '$const0.44': [<numba.core.ir.Assign object at 0x7fa2cdbc6358>],
             '$const0.49': [<numba.core.ir.Assign object at 0x7fa2cdbc6780>],
             '$const0.52': [<numba.core.ir.Assign object at 0x7fa2cdbc69e8>],
             '$const0.59': [<numba.core.ir.Assign object at 0x7fa2cdbc6f98>],
             '$const0.61': [<numba.core.ir.Assign object at 0x7fa2cdbc91d0>],
             '$const0.65': [<numba.core.ir.Assign object at 0x7fa2cdbc9518>],
             '$const0.69': [<numba.core.ir.Assign object at 0x7fa2cdbc9860>],
             '$const0.7': [<numba.core.ir.Assign object at 0x7fa2cdbbe390>],
             '$const0.72': [<numba.core.ir.Assign object at 0x7fa2cdbc9ac8>],
             '$const0.77': [<numba.core.ir.Assign object at 0x7fa2cdbc9ef0>],
             '$const0.80': [<numba.core.ir.Assign object at 0x7fa2cdbcf198>],
             '$const0.85': [<numba.core.ir.Assign object at 0x7fa2cdbcf5c0>],
             '$const0.88': [<numba.core.ir.Assign object at 0x7fa2cdbcf828>],
             '$const0.9': [<numba.core.ir.Assign object at 0x7fa2cdbbe550>],
             '$const0.95': [<numba.core.ir.Assign object at 0x7fa2cdbcfdd8>],
             '$const0.97': [<numba.core.ir.Assign object at 0x7fa2cdbcffd0>],
             'q1': [<numba.core.ir.Assign object at 0x7fa2cdbb7c50>],
             'q2': [<numba.core.ir.Assign object at 0x7fa2cdbb7cf8>],
             'q2norm': [<numba.core.ir.Assign object at 0x7fa2cdbbf160>],
             'qout': [<numba.core.ir.Assign object at 0x7fa2cdbb7da0>]})
2022-08-04 11:52:59,607 DEBUG SSA violators set()
2022-08-04 11:52:59,759 DEBUG label 0:
    a = arg(0, name=a)                       ['a']
    b = arg(1, name=b)                       ['b']
    $0.1 = freevar(tp: float64)              ['$0.1']
    $const0.2 = const(int, 1)                ['$const0.2']
    r = call $0.1($const0.2, func=$0.1, args=[Var($const0.2, numbers.py:217)], kws=(), vararg=None) ['$0.1', '$const0.2', 'r']
    $0.4 = freevar(tp: float64)              ['$0.4']
    a.1 = call $0.4(a, func=$0.4, args=[Var(a, numbers.py:217)], kws=(), vararg=None) ['$0.4', 'a', 'a.1']
    $const0.8 = const(int, 0)                ['$const0.8']
    $0.9 = b < $const0.8                     ['$0.9', '$const0.8', 'b']
    bool24 = global(bool: <class 'bool'>)    ['bool24']
    $24pred = call bool24($0.9, func=bool24, args=(Var($0.9, numbers.py:219),), kws=(), vararg=None) ['$0.9', '$24pred', 'bool24']
    branch $24pred, 26, 98                   ['$24pred']
label 26:
    invert = const(bool, True)               ['invert']
    exp = unary(fn=<built-in function neg>, value=b) ['b', 'exp']
    $const26.5 = const(int, 0)               ['$const26.5']
    $26.6 = exp < $const26.5                 ['$26.6', '$const26.5', 'exp']
    bool42 = global(bool: <class 'bool'>)    ['bool42']
    $42pred = call bool42($26.6, func=bool42, args=(Var($26.6, numbers.py:222),), kws=(), vararg=None) ['$26.6', '$42pred', 'bool42']
    branch $42pred, 44, 48                   ['$42pred']
label 44:
    $44.1 = global(OverflowError: <class 'OverflowError'>) ['$44.1']
    raise $44.1                              ['$44.1']
label 48:
    $48.1 = freevar(is_integer: False)       ['$48.1']
    bool50 = global(bool: <class 'bool'>)    ['bool50']
    $50pred = call bool50($48.1, func=bool50, args=(Var($48.1, numbers.py:224),), kws=(), vararg=None) ['$48.1', '$50pred', 'bool50']
    branch $50pred, 52, 106                  ['$50pred']
label 52:
    $const52.2 = const(int, 0)               ['$const52.2']
    $52.3 = a.1 == $const52.2                ['$52.3', '$const52.2', 'a.1']
    bool58 = global(bool: <class 'bool'>)    ['bool58']
    $58pred = call bool58($52.3, func=bool58, args=(Var($52.3, numbers.py:225),), kws=(), vararg=None) ['$52.3', '$58pred', 'bool58']
    branch $58pred, 60, 76                   ['$58pred']
label 60:
    $60.1 = freevar(zerodiv_return: False)   ['$60.1']
    bool62 = global(bool: <class 'bool'>)    ['bool62']
    $62pred = call bool62($60.1, func=bool62, args=(Var($60.1, numbers.py:226),), kws=(), vararg=None) ['$60.1', '$62pred', 'bool62']
    branch $62pred, 64, 68                   ['$62pred']
label 64:
    $64.1 = freevar(zerodiv_return: False)   ['$64.1']
    $64.2 = cast(value=$64.1)                ['$64.1', '$64.2']
    return $64.2                             ['$64.2']
label 68:
    $68.1 = global(ZeroDivisionError: <class 'ZeroDivisionError'>) ['$68.1']
    $const68.2 = const(str, 0 cannot be raised to a negative power) ['$const68.2']
    $68.3 = call $68.1($const68.2, func=$68.1, args=[Var($const68.2, numbers.py:229)], kws=(), vararg=None) ['$68.1', '$68.3', '$const68.2']
    raise $68.3                              ['$68.3']
label 76:
    $const76.2 = const(int, 1)               ['$const76.2']
    $76.3 = a.1 != $const76.2                ['$76.3', '$const76.2', 'a.1']
    bool82 = global(bool: <class 'bool'>)    ['bool82']
    $82pred = call bool82($76.3, func=bool82, args=(Var($76.3, numbers.py:230),), kws=(), vararg=None) ['$76.3', '$82pred', 'bool82']
    branch $82pred, 84, 106                  ['$82pred']
label 84:
    $const84.2 = const(int, -1)              ['$const84.2']
    $84.3 = a.1 != $const84.2                ['$84.3', '$const84.2', 'a.1']
    bool90 = global(bool: <class 'bool'>)    ['bool90']
    $90pred = call bool90($84.3, func=bool90, args=(Var($84.3, numbers.py:230),), kws=(), vararg=None) ['$84.3', '$90pred', 'bool90']
    branch $90pred, 92, 106                  ['$90pred']
label 92:
    $const92.1 = const(int, 0)               ['$const92.1']
    $92.2 = cast(value=$const92.1)           ['$92.2', '$const92.1']
    return $92.2                             ['$92.2']
label 98:
    invert = const(bool, False)              ['invert']
    exp = b                                  ['b', 'exp']
    jump 106                                 []
label 106:
    $const106.2 = const(int, 65536)          ['$const106.2']
    $106.3 = exp > $const106.2               ['$106.3', '$const106.2', 'exp']
    bool112 = global(bool: <class 'bool'>)   ['bool112']
    $112pred = call bool112($106.3, func=bool112, args=(Var($106.3, numbers.py:235),), kws=(), vararg=None) ['$106.3', '$112pred', 'bool112']
    branch $112pred, 114, 130                ['$112pred']
label 114:
    $114.1 = global(math: <module 'math' from '/Users/wdiepeveen/anaconda3/envs/aspire_env/lib/python3.6/lib-dynload/math.cpython-36m-darwin.so'>) ['$114.1']
    $114.2 = getattr(value=$114.1, attr=pow) ['$114.1', '$114.2']
    $114.4 = global(float: <class 'float'>)  ['$114.4']
    $114.6 = call $114.4(b, func=$114.4, args=[Var(b, numbers.py:217)], kws=(), vararg=None) ['$114.4', '$114.6', 'b']
    $114.7 = call $114.2(a.1, $114.6, func=$114.2, args=[Var(a.1, numbers.py:218), Var($114.6, numbers.py:237)], kws=(), vararg=None) ['$114.2', '$114.6', '$114.7', 'a.1']
    $114.8 = cast(value=$114.7)              ['$114.7', '$114.8']
    return $114.8                            ['$114.8']
label 130:
    jump 132                                 []
label 132:
    $const132.2 = const(int, 0)              ['$const132.2']
    $132.3 = exp != $const132.2              ['$132.3', '$const132.2', 'exp']
    bool138 = global(bool: <class 'bool'>)   ['bool138']
    $138pred = call bool138($132.3, func=bool138, args=(Var($132.3, numbers.py:238),), kws=(), vararg=None) ['$132.3', '$138pred', 'bool138']
    branch $138pred, 140, 174                ['$138pred']
label 140:
    $const140.2 = const(int, 1)              ['$const140.2']
    $140.3 = exp & $const140.2               ['$140.3', '$const140.2', 'exp']
    bool146 = global(bool: <class 'bool'>)   ['bool146']
    $146pred = call bool146($140.3, func=bool146, args=(Var($140.3, numbers.py:239),), kws=(), vararg=None) ['$140.3', '$146pred', 'bool146']
    branch $146pred, 148, 156                ['$146pred']
label 148:
    $148.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$148.3', 'a.1', 'r']
    r = $148.3                               ['$148.3', 'r']
    jump 156                                 []
label 156:
    $const156.2 = const(int, 1)              ['$const156.2']
    $156.3 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.2, static_lhs=Undefined, static_rhs=Undefined) ['$156.3', '$const156.2', 'exp']
    exp = $156.3                             ['$156.3', 'exp']
    $156.6 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$156.6', 'a.1', 'a.1']
    a.1 = $156.6                             ['$156.6', 'a.1']
    jump 132                                 []
label 174:
    jump 176                                 []
label 176:
    bool178 = global(bool: <class 'bool'>)   ['bool178']
    $178pred = call bool178(invert, func=bool178, args=(Var(invert, numbers.py:220),), kws=(), vararg=None) ['$178pred', 'bool178', 'invert']
    branch $178pred, 180, 188                ['$178pred']
label 180:
    $const180.1 = const(float, 1.0)          ['$const180.1']
    $180.3 = $const180.1 / r                 ['$180.3', '$const180.1', 'r']
    $180.4 = cast(value=$180.3)              ['$180.3', '$180.4']
    return $180.4                            ['$180.4']
label 188:
    $188.2 = cast(value=r)                   ['$188.2', 'r']
    return $188.2                            ['$188.2']

2022-08-04 11:52:59,777 DEBUG ==== SSA block analysis pass on 0
2022-08-04 11:52:59,777 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdc7bfd0>
2022-08-04 11:52:59,777 DEBUG on stmt: a = arg(0, name=a)
2022-08-04 11:52:59,777 DEBUG on stmt: b = arg(1, name=b)
2022-08-04 11:52:59,777 DEBUG on stmt: $0.1 = freevar(tp: float64)
2022-08-04 11:52:59,777 DEBUG on stmt: $const0.2 = const(int, 1)
2022-08-04 11:52:59,777 DEBUG on stmt: r = call $0.1($const0.2, func=$0.1, args=[Var($const0.2, numbers.py:217)], kws=(), vararg=None)
2022-08-04 11:52:59,777 DEBUG on stmt: $0.4 = freevar(tp: float64)
2022-08-04 11:52:59,777 DEBUG on stmt: a.1 = call $0.4(a, func=$0.4, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
2022-08-04 11:52:59,778 DEBUG on stmt: $const0.8 = const(int, 0)
2022-08-04 11:52:59,778 DEBUG on stmt: $0.9 = b < $const0.8
2022-08-04 11:52:59,778 DEBUG on stmt: bool24 = global(bool: <class 'bool'>)
2022-08-04 11:52:59,778 DEBUG on stmt: $24pred = call bool24($0.9, func=bool24, args=(Var($0.9, numbers.py:219),), kws=(), vararg=None)
2022-08-04 11:52:59,778 DEBUG on stmt: branch $24pred, 26, 98
2022-08-04 11:52:59,779 DEBUG ==== SSA block analysis pass on 26
2022-08-04 11:52:59,779 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdc7bfd0>
2022-08-04 11:52:59,779 DEBUG on stmt: invert = const(bool, True)
2022-08-04 11:52:59,779 DEBUG on stmt: exp = unary(fn=<built-in function neg>, value=b)
2022-08-04 11:52:59,779 DEBUG on stmt: $const26.5 = const(int, 0)
2022-08-04 11:52:59,779 DEBUG on stmt: $26.6 = exp < $const26.5
2022-08-04 11:52:59,779 DEBUG on stmt: bool42 = global(bool: <class 'bool'>)
2022-08-04 11:52:59,779 DEBUG on stmt: $42pred = call bool42($26.6, func=bool42, args=(Var($26.6, numbers.py:222),), kws=(), vararg=None)
2022-08-04 11:52:59,779 DEBUG on stmt: branch $42pred, 44, 48
2022-08-04 11:52:59,779 DEBUG ==== SSA block analysis pass on 44
2022-08-04 11:52:59,779 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdc7bfd0>
2022-08-04 11:52:59,779 DEBUG on stmt: $44.1 = global(OverflowError: <class 'OverflowError'>)
2022-08-04 11:52:59,779 DEBUG on stmt: <static> raise <class 'OverflowError'>
2022-08-04 11:52:59,780 DEBUG ==== SSA block analysis pass on 48
2022-08-04 11:52:59,780 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdc7bfd0>
2022-08-04 11:52:59,780 DEBUG on stmt: $48.1 = freevar(is_integer: False)
2022-08-04 11:52:59,780 DEBUG on stmt: bool50 = global(bool: <class 'bool'>)
2022-08-04 11:52:59,780 DEBUG on stmt: $50pred = call bool50($48.1, func=bool50, args=(Var($48.1, numbers.py:224),), kws=(), vararg=None)
2022-08-04 11:52:59,780 DEBUG on stmt: jump 106
2022-08-04 11:52:59,781 DEBUG ==== SSA block analysis pass on 98
2022-08-04 11:52:59,781 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdc7bfd0>
2022-08-04 11:52:59,781 DEBUG on stmt: invert = const(bool, False)
2022-08-04 11:52:59,781 DEBUG on stmt: exp = b
2022-08-04 11:52:59,781 DEBUG on stmt: jump 106
2022-08-04 11:52:59,782 DEBUG ==== SSA block analysis pass on 106
2022-08-04 11:52:59,782 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdc7bfd0>
2022-08-04 11:52:59,782 DEBUG on stmt: $const106.2 = const(int, 65536)
2022-08-04 11:52:59,782 DEBUG on stmt: $106.3 = exp > $const106.2
2022-08-04 11:52:59,782 DEBUG on stmt: bool112 = global(bool: <class 'bool'>)
2022-08-04 11:52:59,782 DEBUG on stmt: $112pred = call bool112($106.3, func=bool112, args=(Var($106.3, numbers.py:235),), kws=(), vararg=None)
2022-08-04 11:52:59,782 DEBUG on stmt: branch $112pred, 114, 130
2022-08-04 11:52:59,782 DEBUG ==== SSA block analysis pass on 114
2022-08-04 11:52:59,782 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdc7bfd0>
2022-08-04 11:52:59,782 DEBUG on stmt: $114.1 = global(math: <module 'math' from '/Users/wdiepeveen/anaconda3/envs/aspire_env/lib/python3.6/lib-dynload/math.cpython-36m-darwin.so'>)
2022-08-04 11:52:59,782 DEBUG on stmt: $114.2 = getattr(value=$114.1, attr=pow)
2022-08-04 11:52:59,782 DEBUG on stmt: $114.4 = global(float: <class 'float'>)
2022-08-04 11:52:59,782 DEBUG on stmt: $114.6 = call $114.4(b, func=$114.4, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
2022-08-04 11:52:59,783 DEBUG on stmt: $114.7 = call $114.2(a.1, $114.6, func=$114.2, args=[Var(a.1, numbers.py:218), Var($114.6, numbers.py:237)], kws=(), vararg=None)
2022-08-04 11:52:59,783 DEBUG on stmt: $114.8 = cast(value=$114.7)
2022-08-04 11:52:59,783 DEBUG on stmt: return $114.8
2022-08-04 11:52:59,783 DEBUG ==== SSA block analysis pass on 130
2022-08-04 11:52:59,783 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdc7bfd0>
2022-08-04 11:52:59,783 DEBUG on stmt: jump 132
2022-08-04 11:52:59,783 DEBUG ==== SSA block analysis pass on 132
2022-08-04 11:52:59,783 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdc7bfd0>
2022-08-04 11:52:59,783 DEBUG on stmt: $const132.2 = const(int, 0)
2022-08-04 11:52:59,783 DEBUG on stmt: $132.3 = exp != $const132.2
2022-08-04 11:52:59,783 DEBUG on stmt: bool138 = global(bool: <class 'bool'>)
2022-08-04 11:52:59,783 DEBUG on stmt: $138pred = call bool138($132.3, func=bool138, args=(Var($132.3, numbers.py:238),), kws=(), vararg=None)
2022-08-04 11:52:59,783 DEBUG on stmt: branch $138pred, 140, 174
2022-08-04 11:52:59,783 DEBUG ==== SSA block analysis pass on 140
2022-08-04 11:52:59,783 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdc7bfd0>
2022-08-04 11:52:59,784 DEBUG on stmt: $const140.2 = const(int, 1)
2022-08-04 11:52:59,784 DEBUG on stmt: $140.3 = exp & $const140.2
2022-08-04 11:52:59,784 DEBUG on stmt: bool146 = global(bool: <class 'bool'>)
2022-08-04 11:52:59,784 DEBUG on stmt: $146pred = call bool146($140.3, func=bool146, args=(Var($140.3, numbers.py:239),), kws=(), vararg=None)
2022-08-04 11:52:59,784 DEBUG on stmt: branch $146pred, 148, 156
2022-08-04 11:52:59,784 DEBUG ==== SSA block analysis pass on 148
2022-08-04 11:52:59,784 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdc7bfd0>
2022-08-04 11:52:59,784 DEBUG on stmt: $148.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:52:59,784 DEBUG on stmt: r = $148.3
2022-08-04 11:52:59,785 DEBUG on stmt: jump 156
2022-08-04 11:52:59,785 DEBUG ==== SSA block analysis pass on 156
2022-08-04 11:52:59,785 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdc7bfd0>
2022-08-04 11:52:59,785 DEBUG on stmt: $const156.2 = const(int, 1)
2022-08-04 11:52:59,785 DEBUG on stmt: $156.3 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.2, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:52:59,785 DEBUG on stmt: exp = $156.3
2022-08-04 11:52:59,785 DEBUG on stmt: $156.6 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:52:59,785 DEBUG on stmt: a.1 = $156.6
2022-08-04 11:52:59,785 DEBUG on stmt: jump 132
2022-08-04 11:52:59,785 DEBUG ==== SSA block analysis pass on 174
2022-08-04 11:52:59,785 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdc7bfd0>
2022-08-04 11:52:59,785 DEBUG on stmt: jump 176
2022-08-04 11:52:59,785 DEBUG ==== SSA block analysis pass on 176
2022-08-04 11:52:59,785 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdc7bfd0>
2022-08-04 11:52:59,785 DEBUG on stmt: bool178 = global(bool: <class 'bool'>)
2022-08-04 11:52:59,785 DEBUG on stmt: $178pred = call bool178(invert, func=bool178, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
2022-08-04 11:52:59,786 DEBUG on stmt: branch $178pred, 180, 188
2022-08-04 11:52:59,786 DEBUG ==== SSA block analysis pass on 180
2022-08-04 11:52:59,786 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdc7bfd0>
2022-08-04 11:52:59,786 DEBUG on stmt: $const180.1 = const(float, 1.0)
2022-08-04 11:52:59,786 DEBUG on stmt: $180.3 = $const180.1 / r
2022-08-04 11:52:59,786 DEBUG on stmt: $180.4 = cast(value=$180.3)
2022-08-04 11:52:59,786 DEBUG on stmt: return $180.4
2022-08-04 11:52:59,786 DEBUG ==== SSA block analysis pass on 188
2022-08-04 11:52:59,786 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdc7bfd0>
2022-08-04 11:52:59,786 DEBUG on stmt: $188.2 = cast(value=r)
2022-08-04 11:52:59,786 DEBUG on stmt: return $188.2
2022-08-04 11:52:59,787 DEBUG defs defaultdict(<class 'list'>,
            {'$0.1': [<numba.core.ir.Assign object at 0x7fa2cdc5dba8>],
             '$0.4': [<numba.core.ir.Assign object at 0x7fa2cdc5def0>],
             '$0.9': [<numba.core.ir.Assign object at 0x7fa2cdc67400>],
             '$106.3': [<numba.core.ir.Assign object at 0x7fa2cdc712b0>],
             '$112pred': [<numba.core.ir.Assign object at 0x7fa2cdc71470>],
             '$114.1': [<numba.core.ir.Assign object at 0x7fa2cdc715c0>],
             '$114.2': [<numba.core.ir.Assign object at 0x7fa2cdc716a0>],
             '$114.4': [<numba.core.ir.Assign object at 0x7fa2cdc71828>],
             '$114.6': [<numba.core.ir.Assign object at 0x7fa2cdc719b0>],
             '$114.7': [<numba.core.ir.Assign object at 0x7fa2cdc71a90>],
             '$114.8': [<numba.core.ir.Assign object at 0x7fa2cdc71b70>],
             '$132.3': [<numba.core.ir.Assign object at 0x7fa2cdc71ef0>],
             '$138pred': [<numba.core.ir.Assign object at 0x7fa2cdc760f0>],
             '$140.3': [<numba.core.ir.Assign object at 0x7fa2cdc763c8>],
             '$146pred': [<numba.core.ir.Assign object at 0x7fa2cdc76588>],
             '$148.3': [<numba.core.ir.Assign object at 0x7fa2cdc76828>],
             '$156.3': [<numba.core.ir.Assign object at 0x7fa2cdc76b38>],
             '$156.6': [<numba.core.ir.Assign object at 0x7fa2cdc76dd8>],
             '$178pred': [<numba.core.ir.Assign object at 0x7fa2cdc7b198>],
             '$180.3': [<numba.core.ir.Assign object at 0x7fa2cdc7b470>],
             '$180.4': [<numba.core.ir.Assign object at 0x7fa2cdc7b550>],
             '$188.2': [<numba.core.ir.Assign object at 0x7fa2cdc7b748>],
             '$24pred': [<numba.core.ir.Assign object at 0x7fa2cdc675f8>],
             '$26.6': [<numba.core.ir.Assign object at 0x7fa2cdc67be0>],
             '$42pred': [<numba.core.ir.Assign object at 0x7fa2cdc67dd8>],
             '$44.1': [<numba.core.ir.Assign object at 0x7fa2cdc67e80>],
             '$48.1': [<numba.core.ir.Assign object at 0x7fa2cdc6a080>],
             '$50pred': [<numba.core.ir.Assign object at 0x7fa2cdc6a278>],
             '$const0.2': [<numba.core.ir.Assign object at 0x7fa2cdc5dc88>],
             '$const0.8': [<numba.core.ir.Assign object at 0x7fa2cdc67320>],
             '$const106.2': [<numba.core.ir.Assign object at 0x7fa2cdc711d0>],
             '$const132.2': [<numba.core.ir.Assign object at 0x7fa2cdc71e10>],
             '$const140.2': [<numba.core.ir.Assign object at 0x7fa2cdc762e8>],
             '$const156.2': [<numba.core.ir.Assign object at 0x7fa2cdc76a58>],
             '$const180.1': [<numba.core.ir.Assign object at 0x7fa2cdc7b2e8>],
             '$const26.5': [<numba.core.ir.Assign object at 0x7fa2cdc67b00>],
             'a': [<numba.core.ir.Assign object at 0x7fa2cdc5da20>],
             'a.1': [<numba.core.ir.Assign object at 0x7fa2cdc670b8>,
                     <numba.core.ir.Assign object at 0x7fa2cdc76e48>],
             'b': [<numba.core.ir.Assign object at 0x7fa2cdc5dac8>],
             'bool112': [<numba.core.ir.Assign object at 0x7fa2cdc713c8>],
             'bool138': [<numba.core.ir.Assign object at 0x7fa2cdc76048>],
             'bool146': [<numba.core.ir.Assign object at 0x7fa2cdc764e0>],
             'bool178': [<numba.core.ir.Assign object at 0x7fa2cdc7b0f0>],
             'bool24': [<numba.core.ir.Assign object at 0x7fa2cdc67518>],
             'bool42': [<numba.core.ir.Assign object at 0x7fa2cdc67cf8>],
             'bool50': [<numba.core.ir.Assign object at 0x7fa2cdc6a198>],
             'exp': [<numba.core.ir.Assign object at 0x7fa2cdc678d0>,
                     <numba.core.ir.Assign object at 0x7fa2cdc71048>,
                     <numba.core.ir.Assign object at 0x7fa2cdc76ba8>],
             'invert': [<numba.core.ir.Assign object at 0x7fa2cdc676a0>,
                        <numba.core.ir.Assign object at 0x7fa2cdc6de80>],
             'r': [<numba.core.ir.Assign object at 0x7fa2cdc5dd68>,
                   <numba.core.ir.Assign object at 0x7fa2cdc76898>]})
2022-08-04 11:52:59,787 DEBUG SSA violators {'invert', 'exp', 'r', 'a.1'}
2022-08-04 11:52:59,787 DEBUG Fix SSA violator on var invert
2022-08-04 11:52:59,787 DEBUG ==== SSA block rewrite pass on 0
2022-08-04 11:52:59,787 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdc7bfd0>
2022-08-04 11:52:59,788 DEBUG on stmt: a = arg(0, name=a)
2022-08-04 11:52:59,788 DEBUG on stmt: b = arg(1, name=b)
2022-08-04 11:52:59,788 DEBUG on stmt: $0.1 = freevar(tp: float64)
2022-08-04 11:52:59,788 DEBUG on stmt: $const0.2 = const(int, 1)
2022-08-04 11:52:59,788 DEBUG on stmt: r = call $0.1($const0.2, func=$0.1, args=[Var($const0.2, numbers.py:217)], kws=(), vararg=None)
2022-08-04 11:52:59,788 DEBUG on stmt: $0.4 = freevar(tp: float64)
2022-08-04 11:52:59,788 DEBUG on stmt: a.1 = call $0.4(a, func=$0.4, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
2022-08-04 11:52:59,789 DEBUG on stmt: $const0.8 = const(int, 0)
2022-08-04 11:52:59,789 DEBUG on stmt: $0.9 = b < $const0.8
2022-08-04 11:52:59,789 DEBUG on stmt: bool24 = global(bool: <class 'bool'>)
2022-08-04 11:52:59,789 DEBUG on stmt: $24pred = call bool24($0.9, func=bool24, args=(Var($0.9, numbers.py:219),), kws=(), vararg=None)
2022-08-04 11:52:59,789 DEBUG on stmt: branch $24pred, 26, 98
2022-08-04 11:52:59,789 DEBUG ==== SSA block rewrite pass on 26
2022-08-04 11:52:59,789 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdc7bfd0>
2022-08-04 11:52:59,789 DEBUG on stmt: invert = const(bool, True)
2022-08-04 11:52:59,789 DEBUG first assign: invert
2022-08-04 11:52:59,790 DEBUG replaced with: invert = const(bool, True)
2022-08-04 11:52:59,790 DEBUG on stmt: exp = unary(fn=<built-in function neg>, value=b)
2022-08-04 11:52:59,790 DEBUG on stmt: $const26.5 = const(int, 0)
2022-08-04 11:52:59,790 DEBUG on stmt: $26.6 = exp < $const26.5
2022-08-04 11:52:59,790 DEBUG on stmt: bool42 = global(bool: <class 'bool'>)
2022-08-04 11:52:59,790 DEBUG on stmt: $42pred = call bool42($26.6, func=bool42, args=(Var($26.6, numbers.py:222),), kws=(), vararg=None)
2022-08-04 11:52:59,790 DEBUG on stmt: branch $42pred, 44, 48
2022-08-04 11:52:59,790 DEBUG ==== SSA block rewrite pass on 44
2022-08-04 11:52:59,790 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdc7bfd0>
2022-08-04 11:52:59,790 DEBUG on stmt: $44.1 = global(OverflowError: <class 'OverflowError'>)
2022-08-04 11:52:59,790 DEBUG on stmt: <static> raise <class 'OverflowError'>
2022-08-04 11:52:59,790 DEBUG ==== SSA block rewrite pass on 48
2022-08-04 11:52:59,790 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdc7bfd0>
2022-08-04 11:52:59,791 DEBUG on stmt: $48.1 = freevar(is_integer: False)
2022-08-04 11:52:59,791 DEBUG on stmt: bool50 = global(bool: <class 'bool'>)
2022-08-04 11:52:59,791 DEBUG on stmt: $50pred = call bool50($48.1, func=bool50, args=(Var($48.1, numbers.py:224),), kws=(), vararg=None)
2022-08-04 11:52:59,791 DEBUG on stmt: jump 106
2022-08-04 11:52:59,791 DEBUG ==== SSA block rewrite pass on 98
2022-08-04 11:52:59,791 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdc7bfd0>
2022-08-04 11:52:59,791 DEBUG on stmt: invert = const(bool, False)
2022-08-04 11:52:59,791 DEBUG replaced with: invert.1 = const(bool, False)
2022-08-04 11:52:59,791 DEBUG on stmt: exp = b
2022-08-04 11:52:59,791 DEBUG on stmt: jump 106
2022-08-04 11:52:59,791 DEBUG ==== SSA block rewrite pass on 106
2022-08-04 11:52:59,791 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdc7bfd0>
2022-08-04 11:52:59,791 DEBUG on stmt: $const106.2 = const(int, 65536)
2022-08-04 11:52:59,791 DEBUG on stmt: $106.3 = exp > $const106.2
2022-08-04 11:52:59,791 DEBUG on stmt: bool112 = global(bool: <class 'bool'>)
2022-08-04 11:52:59,791 DEBUG on stmt: $112pred = call bool112($106.3, func=bool112, args=(Var($106.3, numbers.py:235),), kws=(), vararg=None)
2022-08-04 11:52:59,792 DEBUG on stmt: branch $112pred, 114, 130
2022-08-04 11:52:59,792 DEBUG ==== SSA block rewrite pass on 114
2022-08-04 11:52:59,792 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdc7bfd0>
2022-08-04 11:52:59,792 DEBUG on stmt: $114.1 = global(math: <module 'math' from '/Users/wdiepeveen/anaconda3/envs/aspire_env/lib/python3.6/lib-dynload/math.cpython-36m-darwin.so'>)
2022-08-04 11:52:59,792 DEBUG on stmt: $114.2 = getattr(value=$114.1, attr=pow)
2022-08-04 11:52:59,792 DEBUG on stmt: $114.4 = global(float: <class 'float'>)
2022-08-04 11:52:59,792 DEBUG on stmt: $114.6 = call $114.4(b, func=$114.4, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
2022-08-04 11:52:59,792 DEBUG on stmt: $114.7 = call $114.2(a.1, $114.6, func=$114.2, args=[Var(a.1, numbers.py:218), Var($114.6, numbers.py:237)], kws=(), vararg=None)
2022-08-04 11:52:59,792 DEBUG on stmt: $114.8 = cast(value=$114.7)
2022-08-04 11:52:59,792 DEBUG on stmt: return $114.8
2022-08-04 11:52:59,792 DEBUG ==== SSA block rewrite pass on 130
2022-08-04 11:52:59,792 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdc7bfd0>
2022-08-04 11:52:59,792 DEBUG on stmt: jump 132
2022-08-04 11:52:59,792 DEBUG ==== SSA block rewrite pass on 132
2022-08-04 11:52:59,792 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdc7bfd0>
2022-08-04 11:52:59,792 DEBUG on stmt: $const132.2 = const(int, 0)
2022-08-04 11:52:59,793 DEBUG on stmt: $132.3 = exp != $const132.2
2022-08-04 11:52:59,793 DEBUG on stmt: bool138 = global(bool: <class 'bool'>)
2022-08-04 11:52:59,793 DEBUG on stmt: $138pred = call bool138($132.3, func=bool138, args=(Var($132.3, numbers.py:238),), kws=(), vararg=None)
2022-08-04 11:52:59,793 DEBUG on stmt: branch $138pred, 140, 174
2022-08-04 11:52:59,793 DEBUG ==== SSA block rewrite pass on 140
2022-08-04 11:52:59,793 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdc7bfd0>
2022-08-04 11:52:59,793 DEBUG on stmt: $const140.2 = const(int, 1)
2022-08-04 11:52:59,793 DEBUG on stmt: $140.3 = exp & $const140.2
2022-08-04 11:52:59,793 DEBUG on stmt: bool146 = global(bool: <class 'bool'>)
2022-08-04 11:52:59,793 DEBUG on stmt: $146pred = call bool146($140.3, func=bool146, args=(Var($140.3, numbers.py:239),), kws=(), vararg=None)
2022-08-04 11:52:59,793 DEBUG on stmt: branch $146pred, 148, 156
2022-08-04 11:52:59,793 DEBUG ==== SSA block rewrite pass on 148
2022-08-04 11:52:59,793 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdc7bfd0>
2022-08-04 11:52:59,793 DEBUG on stmt: $148.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:52:59,793 DEBUG on stmt: r = $148.3
2022-08-04 11:52:59,793 DEBUG on stmt: jump 156
2022-08-04 11:52:59,794 DEBUG ==== SSA block rewrite pass on 156
2022-08-04 11:52:59,794 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdc7bfd0>
2022-08-04 11:52:59,794 DEBUG on stmt: $const156.2 = const(int, 1)
2022-08-04 11:52:59,794 DEBUG on stmt: $156.3 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.2, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:52:59,794 DEBUG on stmt: exp = $156.3
2022-08-04 11:52:59,794 DEBUG on stmt: $156.6 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:52:59,794 DEBUG on stmt: a.1 = $156.6
2022-08-04 11:52:59,794 DEBUG on stmt: jump 132
2022-08-04 11:52:59,794 DEBUG ==== SSA block rewrite pass on 174
2022-08-04 11:52:59,794 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdc7bfd0>
2022-08-04 11:52:59,794 DEBUG on stmt: jump 176
2022-08-04 11:52:59,794 DEBUG ==== SSA block rewrite pass on 176
2022-08-04 11:52:59,794 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdc7bfd0>
2022-08-04 11:52:59,794 DEBUG on stmt: bool178 = global(bool: <class 'bool'>)
2022-08-04 11:52:59,794 DEBUG on stmt: $178pred = call bool178(invert, func=bool178, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
2022-08-04 11:52:59,794 DEBUG on stmt: branch $178pred, 180, 188
2022-08-04 11:52:59,794 DEBUG ==== SSA block rewrite pass on 180
2022-08-04 11:52:59,795 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdc7bfd0>
2022-08-04 11:52:59,795 DEBUG on stmt: $const180.1 = const(float, 1.0)
2022-08-04 11:52:59,795 DEBUG on stmt: $180.3 = $const180.1 / r
2022-08-04 11:52:59,795 DEBUG on stmt: $180.4 = cast(value=$180.3)
2022-08-04 11:52:59,795 DEBUG on stmt: return $180.4
2022-08-04 11:52:59,795 DEBUG ==== SSA block rewrite pass on 188
2022-08-04 11:52:59,795 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdc7bfd0>
2022-08-04 11:52:59,795 DEBUG on stmt: $188.2 = cast(value=r)
2022-08-04 11:52:59,795 DEBUG on stmt: return $188.2
2022-08-04 11:52:59,795 DEBUG Replaced assignments: defaultdict(<class 'list'>,
            {26: [<numba.core.ir.Assign object at 0x7fa2cdc7bb70>],
             98: [<numba.core.ir.Assign object at 0x7fa2cdc7bcc0>]})
2022-08-04 11:52:59,796 DEBUG ==== SSA block rewrite pass on 0
2022-08-04 11:52:59,796 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdc7b978>
2022-08-04 11:52:59,797 DEBUG on stmt: a = arg(0, name=a)
2022-08-04 11:52:59,797 DEBUG on stmt: b = arg(1, name=b)
2022-08-04 11:52:59,797 DEBUG on stmt: $0.1 = freevar(tp: float64)
2022-08-04 11:52:59,797 DEBUG on stmt: $const0.2 = const(int, 1)
2022-08-04 11:52:59,797 DEBUG on stmt: r = call $0.1($const0.2, func=$0.1, args=[Var($const0.2, numbers.py:217)], kws=(), vararg=None)
2022-08-04 11:52:59,797 DEBUG on stmt: $0.4 = freevar(tp: float64)
2022-08-04 11:52:59,797 DEBUG on stmt: a.1 = call $0.4(a, func=$0.4, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
2022-08-04 11:52:59,797 DEBUG on stmt: $const0.8 = const(int, 0)
2022-08-04 11:52:59,797 DEBUG on stmt: $0.9 = b < $const0.8
2022-08-04 11:52:59,797 DEBUG on stmt: bool24 = global(bool: <class 'bool'>)
2022-08-04 11:52:59,797 DEBUG on stmt: $24pred = call bool24($0.9, func=bool24, args=(Var($0.9, numbers.py:219),), kws=(), vararg=None)
2022-08-04 11:52:59,797 DEBUG on stmt: branch $24pred, 26, 98
2022-08-04 11:52:59,797 DEBUG ==== SSA block rewrite pass on 26
2022-08-04 11:52:59,797 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdc7b978>
2022-08-04 11:52:59,798 DEBUG on stmt: invert = const(bool, True)
2022-08-04 11:52:59,798 DEBUG on stmt: exp = unary(fn=<built-in function neg>, value=b)
2022-08-04 11:52:59,798 DEBUG on stmt: $const26.5 = const(int, 0)
2022-08-04 11:52:59,798 DEBUG on stmt: $26.6 = exp < $const26.5
2022-08-04 11:52:59,798 DEBUG on stmt: bool42 = global(bool: <class 'bool'>)
2022-08-04 11:52:59,798 DEBUG on stmt: $42pred = call bool42($26.6, func=bool42, args=(Var($26.6, numbers.py:222),), kws=(), vararg=None)
2022-08-04 11:52:59,798 DEBUG on stmt: branch $42pred, 44, 48
2022-08-04 11:52:59,798 DEBUG ==== SSA block rewrite pass on 44
2022-08-04 11:52:59,798 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdc7b978>
2022-08-04 11:52:59,798 DEBUG on stmt: $44.1 = global(OverflowError: <class 'OverflowError'>)
2022-08-04 11:52:59,798 DEBUG on stmt: <static> raise <class 'OverflowError'>
2022-08-04 11:52:59,798 DEBUG ==== SSA block rewrite pass on 48
2022-08-04 11:52:59,798 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdc7b978>
2022-08-04 11:52:59,799 DEBUG on stmt: $48.1 = freevar(is_integer: False)
2022-08-04 11:52:59,799 DEBUG on stmt: bool50 = global(bool: <class 'bool'>)
2022-08-04 11:52:59,799 DEBUG on stmt: $50pred = call bool50($48.1, func=bool50, args=(Var($48.1, numbers.py:224),), kws=(), vararg=None)
2022-08-04 11:52:59,799 DEBUG on stmt: jump 106
2022-08-04 11:52:59,799 DEBUG ==== SSA block rewrite pass on 98
2022-08-04 11:52:59,799 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdc7b978>
2022-08-04 11:52:59,799 DEBUG on stmt: invert.1 = const(bool, False)
2022-08-04 11:52:59,799 DEBUG on stmt: exp = b
2022-08-04 11:52:59,799 DEBUG on stmt: jump 106
2022-08-04 11:52:59,799 DEBUG ==== SSA block rewrite pass on 106
2022-08-04 11:52:59,799 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdc7b978>
2022-08-04 11:52:59,799 DEBUG on stmt: $const106.2 = const(int, 65536)
2022-08-04 11:52:59,799 DEBUG on stmt: $106.3 = exp > $const106.2
2022-08-04 11:52:59,799 DEBUG on stmt: bool112 = global(bool: <class 'bool'>)
2022-08-04 11:52:59,799 DEBUG on stmt: $112pred = call bool112($106.3, func=bool112, args=(Var($106.3, numbers.py:235),), kws=(), vararg=None)
2022-08-04 11:52:59,799 DEBUG on stmt: branch $112pred, 114, 130
2022-08-04 11:52:59,800 DEBUG ==== SSA block rewrite pass on 114
2022-08-04 11:52:59,800 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdc7b978>
2022-08-04 11:52:59,800 DEBUG on stmt: $114.1 = global(math: <module 'math' from '/Users/wdiepeveen/anaconda3/envs/aspire_env/lib/python3.6/lib-dynload/math.cpython-36m-darwin.so'>)
2022-08-04 11:52:59,800 DEBUG on stmt: $114.2 = getattr(value=$114.1, attr=pow)
2022-08-04 11:52:59,800 DEBUG on stmt: $114.4 = global(float: <class 'float'>)
2022-08-04 11:52:59,800 DEBUG on stmt: $114.6 = call $114.4(b, func=$114.4, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
2022-08-04 11:52:59,800 DEBUG on stmt: $114.7 = call $114.2(a.1, $114.6, func=$114.2, args=[Var(a.1, numbers.py:218), Var($114.6, numbers.py:237)], kws=(), vararg=None)
2022-08-04 11:52:59,800 DEBUG on stmt: $114.8 = cast(value=$114.7)
2022-08-04 11:52:59,800 DEBUG on stmt: return $114.8
2022-08-04 11:52:59,800 DEBUG ==== SSA block rewrite pass on 130
2022-08-04 11:52:59,800 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdc7b978>
2022-08-04 11:52:59,800 DEBUG on stmt: jump 132
2022-08-04 11:52:59,800 DEBUG ==== SSA block rewrite pass on 132
2022-08-04 11:52:59,801 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdc7b978>
2022-08-04 11:52:59,801 DEBUG on stmt: $const132.2 = const(int, 0)
2022-08-04 11:52:59,801 DEBUG on stmt: $132.3 = exp != $const132.2
2022-08-04 11:52:59,801 DEBUG on stmt: bool138 = global(bool: <class 'bool'>)
2022-08-04 11:52:59,801 DEBUG on stmt: $138pred = call bool138($132.3, func=bool138, args=(Var($132.3, numbers.py:238),), kws=(), vararg=None)
2022-08-04 11:52:59,801 DEBUG on stmt: branch $138pred, 140, 174
2022-08-04 11:52:59,801 DEBUG ==== SSA block rewrite pass on 140
2022-08-04 11:52:59,801 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdc7b978>
2022-08-04 11:52:59,801 DEBUG on stmt: $const140.2 = const(int, 1)
2022-08-04 11:52:59,801 DEBUG on stmt: $140.3 = exp & $const140.2
2022-08-04 11:52:59,801 DEBUG on stmt: bool146 = global(bool: <class 'bool'>)
2022-08-04 11:52:59,801 DEBUG on stmt: $146pred = call bool146($140.3, func=bool146, args=(Var($140.3, numbers.py:239),), kws=(), vararg=None)
2022-08-04 11:52:59,802 DEBUG on stmt: branch $146pred, 148, 156
2022-08-04 11:52:59,802 DEBUG ==== SSA block rewrite pass on 148
2022-08-04 11:52:59,802 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdc7b978>
2022-08-04 11:52:59,802 DEBUG on stmt: $148.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:52:59,802 DEBUG on stmt: r = $148.3
2022-08-04 11:52:59,802 DEBUG on stmt: jump 156
2022-08-04 11:52:59,802 DEBUG ==== SSA block rewrite pass on 156
2022-08-04 11:52:59,802 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdc7b978>
2022-08-04 11:52:59,802 DEBUG on stmt: $const156.2 = const(int, 1)
2022-08-04 11:52:59,802 DEBUG on stmt: $156.3 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.2, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:52:59,802 DEBUG on stmt: exp = $156.3
2022-08-04 11:52:59,802 DEBUG on stmt: $156.6 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:52:59,802 DEBUG on stmt: a.1 = $156.6
2022-08-04 11:52:59,802 DEBUG on stmt: jump 132
2022-08-04 11:52:59,802 DEBUG ==== SSA block rewrite pass on 174
2022-08-04 11:52:59,802 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdc7b978>
2022-08-04 11:52:59,803 DEBUG on stmt: jump 176
2022-08-04 11:52:59,803 DEBUG ==== SSA block rewrite pass on 176
2022-08-04 11:52:59,803 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdc7b978>
2022-08-04 11:52:59,803 DEBUG on stmt: bool178 = global(bool: <class 'bool'>)
2022-08-04 11:52:59,803 DEBUG on stmt: $178pred = call bool178(invert, func=bool178, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
2022-08-04 11:52:59,803 DEBUG find_def var='invert' stmt=$178pred = call bool178(invert, func=bool178, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
2022-08-04 11:52:59,803 DEBUG find_def_from_top label 176
2022-08-04 11:52:59,803 DEBUG idom 174 from label 176
2022-08-04 11:52:59,803 DEBUG find_def_from_bottom label 174
2022-08-04 11:52:59,803 DEBUG find_def_from_top label 174
2022-08-04 11:52:59,803 DEBUG idom 132 from label 174
2022-08-04 11:52:59,803 DEBUG find_def_from_bottom label 132
2022-08-04 11:52:59,803 DEBUG find_def_from_top label 132
2022-08-04 11:52:59,803 DEBUG idom 130 from label 132
2022-08-04 11:52:59,803 DEBUG find_def_from_bottom label 130
2022-08-04 11:52:59,803 DEBUG find_def_from_top label 130
2022-08-04 11:52:59,804 DEBUG idom 106 from label 130
2022-08-04 11:52:59,804 DEBUG find_def_from_bottom label 106
2022-08-04 11:52:59,804 DEBUG find_def_from_top label 106
2022-08-04 11:52:59,804 DEBUG insert phi node invert.2 = phi(incoming_values=[], incoming_blocks=[]) at 106
2022-08-04 11:52:59,804 DEBUG find_def_from_bottom label 48
2022-08-04 11:52:59,804 DEBUG find_def_from_top label 48
2022-08-04 11:52:59,804 DEBUG idom 26 from label 48
2022-08-04 11:52:59,804 DEBUG find_def_from_bottom label 26
2022-08-04 11:52:59,804 DEBUG incoming_def invert = const(bool, True)
2022-08-04 11:52:59,804 DEBUG find_def_from_bottom label 98
2022-08-04 11:52:59,804 DEBUG incoming_def invert.1 = const(bool, False)
2022-08-04 11:52:59,804 DEBUG replaced with: $178pred = call bool178(invert.2, func=bool178, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
2022-08-04 11:52:59,804 DEBUG on stmt: branch $178pred, 180, 188
2022-08-04 11:52:59,804 DEBUG ==== SSA block rewrite pass on 180
2022-08-04 11:52:59,804 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdc7b978>
2022-08-04 11:52:59,805 DEBUG on stmt: $const180.1 = const(float, 1.0)
2022-08-04 11:52:59,805 DEBUG on stmt: $180.3 = $const180.1 / r
2022-08-04 11:52:59,805 DEBUG on stmt: $180.4 = cast(value=$180.3)
2022-08-04 11:52:59,805 DEBUG on stmt: return $180.4
2022-08-04 11:52:59,805 DEBUG ==== SSA block rewrite pass on 188
2022-08-04 11:52:59,805 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdc7b978>
2022-08-04 11:52:59,805 DEBUG on stmt: $188.2 = cast(value=r)
2022-08-04 11:52:59,805 DEBUG on stmt: return $188.2
2022-08-04 11:52:59,805 DEBUG Fix SSA violator on var exp
2022-08-04 11:52:59,805 DEBUG ==== SSA block rewrite pass on 0
2022-08-04 11:52:59,805 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdc7b8d0>
2022-08-04 11:52:59,805 DEBUG on stmt: a = arg(0, name=a)
2022-08-04 11:52:59,805 DEBUG on stmt: b = arg(1, name=b)
2022-08-04 11:52:59,805 DEBUG on stmt: $0.1 = freevar(tp: float64)
2022-08-04 11:52:59,805 DEBUG on stmt: $const0.2 = const(int, 1)
2022-08-04 11:52:59,805 DEBUG on stmt: r = call $0.1($const0.2, func=$0.1, args=[Var($const0.2, numbers.py:217)], kws=(), vararg=None)
2022-08-04 11:52:59,806 DEBUG on stmt: $0.4 = freevar(tp: float64)
2022-08-04 11:52:59,806 DEBUG on stmt: a.1 = call $0.4(a, func=$0.4, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
2022-08-04 11:52:59,806 DEBUG on stmt: $const0.8 = const(int, 0)
2022-08-04 11:52:59,806 DEBUG on stmt: $0.9 = b < $const0.8
2022-08-04 11:52:59,806 DEBUG on stmt: bool24 = global(bool: <class 'bool'>)
2022-08-04 11:52:59,806 DEBUG on stmt: $24pred = call bool24($0.9, func=bool24, args=(Var($0.9, numbers.py:219),), kws=(), vararg=None)
2022-08-04 11:52:59,806 DEBUG on stmt: branch $24pred, 26, 98
2022-08-04 11:52:59,806 DEBUG ==== SSA block rewrite pass on 26
2022-08-04 11:52:59,806 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdc7b8d0>
2022-08-04 11:52:59,806 DEBUG on stmt: invert = const(bool, True)
2022-08-04 11:52:59,806 DEBUG on stmt: exp = unary(fn=<built-in function neg>, value=b)
2022-08-04 11:52:59,807 DEBUG first assign: exp
2022-08-04 11:52:59,807 DEBUG replaced with: exp = unary(fn=<built-in function neg>, value=b)
2022-08-04 11:52:59,807 DEBUG on stmt: $const26.5 = const(int, 0)
2022-08-04 11:52:59,807 DEBUG on stmt: $26.6 = exp < $const26.5
2022-08-04 11:52:59,807 DEBUG on stmt: bool42 = global(bool: <class 'bool'>)
2022-08-04 11:52:59,807 DEBUG on stmt: $42pred = call bool42($26.6, func=bool42, args=(Var($26.6, numbers.py:222),), kws=(), vararg=None)
2022-08-04 11:52:59,807 DEBUG on stmt: branch $42pred, 44, 48
2022-08-04 11:52:59,807 DEBUG ==== SSA block rewrite pass on 44
2022-08-04 11:52:59,807 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdc7b8d0>
2022-08-04 11:52:59,807 DEBUG on stmt: $44.1 = global(OverflowError: <class 'OverflowError'>)
2022-08-04 11:52:59,807 DEBUG on stmt: <static> raise <class 'OverflowError'>
2022-08-04 11:52:59,807 DEBUG ==== SSA block rewrite pass on 48
2022-08-04 11:52:59,807 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdc7b8d0>
2022-08-04 11:52:59,807 DEBUG on stmt: $48.1 = freevar(is_integer: False)
2022-08-04 11:52:59,807 DEBUG on stmt: bool50 = global(bool: <class 'bool'>)
2022-08-04 11:52:59,807 DEBUG on stmt: $50pred = call bool50($48.1, func=bool50, args=(Var($48.1, numbers.py:224),), kws=(), vararg=None)
2022-08-04 11:52:59,808 DEBUG on stmt: jump 106
2022-08-04 11:52:59,808 DEBUG ==== SSA block rewrite pass on 98
2022-08-04 11:52:59,808 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdc7b8d0>
2022-08-04 11:52:59,808 DEBUG on stmt: invert.1 = const(bool, False)
2022-08-04 11:52:59,808 DEBUG on stmt: exp = b
2022-08-04 11:52:59,808 DEBUG replaced with: exp.1 = b
2022-08-04 11:52:59,808 DEBUG on stmt: jump 106
2022-08-04 11:52:59,808 DEBUG ==== SSA block rewrite pass on 106
2022-08-04 11:52:59,808 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdc7b8d0>
2022-08-04 11:52:59,808 DEBUG on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:220), Var(invert.1, numbers.py:233)], incoming_blocks=[48, 98])
2022-08-04 11:52:59,808 DEBUG on stmt: $const106.2 = const(int, 65536)
2022-08-04 11:52:59,808 DEBUG on stmt: $106.3 = exp > $const106.2
2022-08-04 11:52:59,808 DEBUG on stmt: bool112 = global(bool: <class 'bool'>)
2022-08-04 11:52:59,808 DEBUG on stmt: $112pred = call bool112($106.3, func=bool112, args=(Var($106.3, numbers.py:235),), kws=(), vararg=None)
2022-08-04 11:52:59,808 DEBUG on stmt: branch $112pred, 114, 130
2022-08-04 11:52:59,808 DEBUG ==== SSA block rewrite pass on 114
2022-08-04 11:52:59,808 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdc7b8d0>
2022-08-04 11:52:59,808 DEBUG on stmt: $114.1 = global(math: <module 'math' from '/Users/wdiepeveen/anaconda3/envs/aspire_env/lib/python3.6/lib-dynload/math.cpython-36m-darwin.so'>)
2022-08-04 11:52:59,808 DEBUG on stmt: $114.2 = getattr(value=$114.1, attr=pow)
2022-08-04 11:52:59,808 DEBUG on stmt: $114.4 = global(float: <class 'float'>)
2022-08-04 11:52:59,808 DEBUG on stmt: $114.6 = call $114.4(b, func=$114.4, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
2022-08-04 11:52:59,808 DEBUG on stmt: $114.7 = call $114.2(a.1, $114.6, func=$114.2, args=[Var(a.1, numbers.py:218), Var($114.6, numbers.py:237)], kws=(), vararg=None)
2022-08-04 11:52:59,809 DEBUG on stmt: $114.8 = cast(value=$114.7)
2022-08-04 11:52:59,809 DEBUG on stmt: return $114.8
2022-08-04 11:52:59,809 DEBUG ==== SSA block rewrite pass on 130
2022-08-04 11:52:59,809 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdc7b8d0>
2022-08-04 11:52:59,809 DEBUG on stmt: jump 132
2022-08-04 11:52:59,809 DEBUG ==== SSA block rewrite pass on 132
2022-08-04 11:52:59,809 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdc7b8d0>
2022-08-04 11:52:59,809 DEBUG on stmt: $const132.2 = const(int, 0)
2022-08-04 11:52:59,809 DEBUG on stmt: $132.3 = exp != $const132.2
2022-08-04 11:52:59,809 DEBUG on stmt: bool138 = global(bool: <class 'bool'>)
2022-08-04 11:52:59,809 DEBUG on stmt: $138pred = call bool138($132.3, func=bool138, args=(Var($132.3, numbers.py:238),), kws=(), vararg=None)
2022-08-04 11:52:59,809 DEBUG on stmt: branch $138pred, 140, 174
2022-08-04 11:52:59,809 DEBUG ==== SSA block rewrite pass on 140
2022-08-04 11:52:59,809 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdc7b8d0>
2022-08-04 11:52:59,809 DEBUG on stmt: $const140.2 = const(int, 1)
2022-08-04 11:52:59,809 DEBUG on stmt: $140.3 = exp & $const140.2
2022-08-04 11:52:59,809 DEBUG on stmt: bool146 = global(bool: <class 'bool'>)
2022-08-04 11:52:59,809 DEBUG on stmt: $146pred = call bool146($140.3, func=bool146, args=(Var($140.3, numbers.py:239),), kws=(), vararg=None)
2022-08-04 11:52:59,809 DEBUG on stmt: branch $146pred, 148, 156
2022-08-04 11:52:59,809 DEBUG ==== SSA block rewrite pass on 148
2022-08-04 11:52:59,809 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdc7b8d0>
2022-08-04 11:52:59,809 DEBUG on stmt: $148.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:52:59,809 DEBUG on stmt: r = $148.3
2022-08-04 11:52:59,809 DEBUG on stmt: jump 156
2022-08-04 11:52:59,809 DEBUG ==== SSA block rewrite pass on 156
2022-08-04 11:52:59,809 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdc7b8d0>
2022-08-04 11:52:59,809 DEBUG on stmt: $const156.2 = const(int, 1)
2022-08-04 11:52:59,809 DEBUG on stmt: $156.3 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.2, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:52:59,809 DEBUG on stmt: exp = $156.3
2022-08-04 11:52:59,809 DEBUG replaced with: exp.2 = $156.3
2022-08-04 11:52:59,809 DEBUG on stmt: $156.6 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:52:59,810 DEBUG on stmt: a.1 = $156.6
2022-08-04 11:52:59,810 DEBUG on stmt: jump 132
2022-08-04 11:52:59,810 DEBUG ==== SSA block rewrite pass on 174
2022-08-04 11:52:59,810 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdc7b8d0>
2022-08-04 11:52:59,810 DEBUG on stmt: jump 176
2022-08-04 11:52:59,810 DEBUG ==== SSA block rewrite pass on 176
2022-08-04 11:52:59,810 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdc7b8d0>
2022-08-04 11:52:59,810 DEBUG on stmt: bool178 = global(bool: <class 'bool'>)
2022-08-04 11:52:59,810 DEBUG on stmt: $178pred = call bool178(invert.2, func=bool178, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
2022-08-04 11:52:59,810 DEBUG on stmt: branch $178pred, 180, 188
2022-08-04 11:52:59,810 DEBUG ==== SSA block rewrite pass on 180
2022-08-04 11:52:59,810 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdc7b8d0>
2022-08-04 11:52:59,810 DEBUG on stmt: $const180.1 = const(float, 1.0)
2022-08-04 11:52:59,810 DEBUG on stmt: $180.3 = $const180.1 / r
2022-08-04 11:52:59,810 DEBUG on stmt: $180.4 = cast(value=$180.3)
2022-08-04 11:52:59,810 DEBUG on stmt: return $180.4
2022-08-04 11:52:59,810 DEBUG ==== SSA block rewrite pass on 188
2022-08-04 11:52:59,810 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdc7b8d0>
2022-08-04 11:52:59,810 DEBUG on stmt: $188.2 = cast(value=r)
2022-08-04 11:52:59,810 DEBUG on stmt: return $188.2
2022-08-04 11:52:59,810 DEBUG Replaced assignments: defaultdict(<class 'list'>,
            {26: [<numba.core.ir.Assign object at 0x7fa2cdc7b9e8>],
             98: [<numba.core.ir.Assign object at 0x7fa2cdc7bac8>],
             156: [<numba.core.ir.Assign object at 0x7fa2cdc46470>]})
2022-08-04 11:52:59,810 DEBUG ==== SSA block rewrite pass on 0
2022-08-04 11:52:59,810 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdc5d390>
2022-08-04 11:52:59,810 DEBUG on stmt: a = arg(0, name=a)
2022-08-04 11:52:59,811 DEBUG on stmt: b = arg(1, name=b)
2022-08-04 11:52:59,811 DEBUG on stmt: $0.1 = freevar(tp: float64)
2022-08-04 11:52:59,811 DEBUG on stmt: $const0.2 = const(int, 1)
2022-08-04 11:52:59,811 DEBUG on stmt: r = call $0.1($const0.2, func=$0.1, args=[Var($const0.2, numbers.py:217)], kws=(), vararg=None)
2022-08-04 11:52:59,811 DEBUG on stmt: $0.4 = freevar(tp: float64)
2022-08-04 11:52:59,811 DEBUG on stmt: a.1 = call $0.4(a, func=$0.4, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
2022-08-04 11:52:59,811 DEBUG on stmt: $const0.8 = const(int, 0)
2022-08-04 11:52:59,811 DEBUG on stmt: $0.9 = b < $const0.8
2022-08-04 11:52:59,811 DEBUG on stmt: bool24 = global(bool: <class 'bool'>)
2022-08-04 11:52:59,811 DEBUG on stmt: $24pred = call bool24($0.9, func=bool24, args=(Var($0.9, numbers.py:219),), kws=(), vararg=None)
2022-08-04 11:52:59,811 DEBUG on stmt: branch $24pred, 26, 98
2022-08-04 11:52:59,811 DEBUG ==== SSA block rewrite pass on 26
2022-08-04 11:52:59,811 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdc5d390>
2022-08-04 11:52:59,811 DEBUG on stmt: invert = const(bool, True)
2022-08-04 11:52:59,811 DEBUG on stmt: exp = unary(fn=<built-in function neg>, value=b)
2022-08-04 11:52:59,811 DEBUG on stmt: $const26.5 = const(int, 0)
2022-08-04 11:52:59,811 DEBUG on stmt: $26.6 = exp < $const26.5
2022-08-04 11:52:59,811 DEBUG find_def var='exp' stmt=$26.6 = exp < $const26.5
2022-08-04 11:52:59,811 DEBUG on stmt: bool42 = global(bool: <class 'bool'>)
2022-08-04 11:52:59,811 DEBUG on stmt: $42pred = call bool42($26.6, func=bool42, args=(Var($26.6, numbers.py:222),), kws=(), vararg=None)
2022-08-04 11:52:59,811 DEBUG on stmt: branch $42pred, 44, 48
2022-08-04 11:52:59,811 DEBUG ==== SSA block rewrite pass on 44
2022-08-04 11:52:59,811 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdc5d390>
2022-08-04 11:52:59,811 DEBUG on stmt: $44.1 = global(OverflowError: <class 'OverflowError'>)
2022-08-04 11:52:59,811 DEBUG on stmt: <static> raise <class 'OverflowError'>
2022-08-04 11:52:59,811 DEBUG ==== SSA block rewrite pass on 48
2022-08-04 11:52:59,811 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdc5d390>
2022-08-04 11:52:59,811 DEBUG on stmt: $48.1 = freevar(is_integer: False)
2022-08-04 11:52:59,811 DEBUG on stmt: bool50 = global(bool: <class 'bool'>)
2022-08-04 11:52:59,812 DEBUG on stmt: $50pred = call bool50($48.1, func=bool50, args=(Var($48.1, numbers.py:224),), kws=(), vararg=None)
2022-08-04 11:52:59,812 DEBUG on stmt: jump 106
2022-08-04 11:52:59,812 DEBUG ==== SSA block rewrite pass on 98
2022-08-04 11:52:59,812 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdc5d390>
2022-08-04 11:52:59,812 DEBUG on stmt: invert.1 = const(bool, False)
2022-08-04 11:52:59,812 DEBUG on stmt: exp.1 = b
2022-08-04 11:52:59,812 DEBUG on stmt: jump 106
2022-08-04 11:52:59,812 DEBUG ==== SSA block rewrite pass on 106
2022-08-04 11:52:59,812 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdc5d390>
2022-08-04 11:52:59,812 DEBUG on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:220), Var(invert.1, numbers.py:233)], incoming_blocks=[48, 98])
2022-08-04 11:52:59,812 DEBUG on stmt: $const106.2 = const(int, 65536)
2022-08-04 11:52:59,812 DEBUG on stmt: $106.3 = exp > $const106.2
2022-08-04 11:52:59,812 DEBUG find_def var='exp' stmt=$106.3 = exp > $const106.2
2022-08-04 11:52:59,812 DEBUG find_def_from_top label 106
2022-08-04 11:52:59,812 DEBUG insert phi node exp.3 = phi(incoming_values=[], incoming_blocks=[]) at 106
2022-08-04 11:52:59,812 DEBUG find_def_from_bottom label 48
2022-08-04 11:52:59,812 DEBUG find_def_from_top label 48
2022-08-04 11:52:59,812 DEBUG idom 26 from label 48
2022-08-04 11:52:59,812 DEBUG find_def_from_bottom label 26
2022-08-04 11:52:59,812 DEBUG incoming_def exp = unary(fn=<built-in function neg>, value=b)
2022-08-04 11:52:59,812 DEBUG find_def_from_bottom label 98
2022-08-04 11:52:59,812 DEBUG incoming_def exp.1 = b
2022-08-04 11:52:59,812 DEBUG replaced with: $106.3 = exp.3 > $const106.2
2022-08-04 11:52:59,812 DEBUG on stmt: bool112 = global(bool: <class 'bool'>)
2022-08-04 11:52:59,812 DEBUG on stmt: $112pred = call bool112($106.3, func=bool112, args=(Var($106.3, numbers.py:235),), kws=(), vararg=None)
2022-08-04 11:52:59,812 DEBUG on stmt: branch $112pred, 114, 130
2022-08-04 11:52:59,812 DEBUG ==== SSA block rewrite pass on 114
2022-08-04 11:52:59,812 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdc5d390>
2022-08-04 11:52:59,812 DEBUG on stmt: $114.1 = global(math: <module 'math' from '/Users/wdiepeveen/anaconda3/envs/aspire_env/lib/python3.6/lib-dynload/math.cpython-36m-darwin.so'>)
2022-08-04 11:52:59,813 DEBUG on stmt: $114.2 = getattr(value=$114.1, attr=pow)
2022-08-04 11:52:59,813 DEBUG on stmt: $114.4 = global(float: <class 'float'>)
2022-08-04 11:52:59,813 DEBUG on stmt: $114.6 = call $114.4(b, func=$114.4, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
2022-08-04 11:52:59,813 DEBUG on stmt: $114.7 = call $114.2(a.1, $114.6, func=$114.2, args=[Var(a.1, numbers.py:218), Var($114.6, numbers.py:237)], kws=(), vararg=None)
2022-08-04 11:52:59,813 DEBUG on stmt: $114.8 = cast(value=$114.7)
2022-08-04 11:52:59,813 DEBUG on stmt: return $114.8
2022-08-04 11:52:59,813 DEBUG ==== SSA block rewrite pass on 130
2022-08-04 11:52:59,813 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdc5d390>
2022-08-04 11:52:59,813 DEBUG on stmt: jump 132
2022-08-04 11:52:59,813 DEBUG ==== SSA block rewrite pass on 132
2022-08-04 11:52:59,813 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdc5d390>
2022-08-04 11:52:59,813 DEBUG on stmt: $const132.2 = const(int, 0)
2022-08-04 11:52:59,813 DEBUG on stmt: $132.3 = exp != $const132.2
2022-08-04 11:52:59,813 DEBUG find_def var='exp' stmt=$132.3 = exp != $const132.2
2022-08-04 11:52:59,813 DEBUG find_def_from_top label 132
2022-08-04 11:52:59,813 DEBUG insert phi node exp.4 = phi(incoming_values=[], incoming_blocks=[]) at 132
2022-08-04 11:52:59,813 DEBUG find_def_from_bottom label 130
2022-08-04 11:52:59,813 DEBUG find_def_from_top label 130
2022-08-04 11:52:59,813 DEBUG idom 106 from label 130
2022-08-04 11:52:59,813 DEBUG find_def_from_bottom label 106
2022-08-04 11:52:59,813 DEBUG incoming_def exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
2022-08-04 11:52:59,813 DEBUG find_def_from_bottom label 156
2022-08-04 11:52:59,813 DEBUG incoming_def exp.2 = $156.3
2022-08-04 11:52:59,813 DEBUG replaced with: $132.3 = exp.4 != $const132.2
2022-08-04 11:52:59,813 DEBUG on stmt: bool138 = global(bool: <class 'bool'>)
2022-08-04 11:52:59,813 DEBUG on stmt: $138pred = call bool138($132.3, func=bool138, args=(Var($132.3, numbers.py:238),), kws=(), vararg=None)
2022-08-04 11:52:59,813 DEBUG on stmt: branch $138pred, 140, 174
2022-08-04 11:52:59,813 DEBUG ==== SSA block rewrite pass on 140
2022-08-04 11:52:59,814 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdc5d390>
2022-08-04 11:52:59,814 DEBUG on stmt: $const140.2 = const(int, 1)
2022-08-04 11:52:59,814 DEBUG on stmt: $140.3 = exp & $const140.2
2022-08-04 11:52:59,814 DEBUG find_def var='exp' stmt=$140.3 = exp & $const140.2
2022-08-04 11:52:59,814 DEBUG find_def_from_top label 140
2022-08-04 11:52:59,814 DEBUG idom 132 from label 140
2022-08-04 11:52:59,814 DEBUG find_def_from_bottom label 132
2022-08-04 11:52:59,814 DEBUG replaced with: $140.3 = exp.4 & $const140.2
2022-08-04 11:52:59,814 DEBUG on stmt: bool146 = global(bool: <class 'bool'>)
2022-08-04 11:52:59,814 DEBUG on stmt: $146pred = call bool146($140.3, func=bool146, args=(Var($140.3, numbers.py:239),), kws=(), vararg=None)
2022-08-04 11:52:59,814 DEBUG on stmt: branch $146pred, 148, 156
2022-08-04 11:52:59,814 DEBUG ==== SSA block rewrite pass on 148
2022-08-04 11:52:59,814 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdc5d390>
2022-08-04 11:52:59,814 DEBUG on stmt: $148.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:52:59,814 DEBUG on stmt: r = $148.3
2022-08-04 11:52:59,814 DEBUG on stmt: jump 156
2022-08-04 11:52:59,814 DEBUG ==== SSA block rewrite pass on 156
2022-08-04 11:52:59,814 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdc5d390>
2022-08-04 11:52:59,814 DEBUG on stmt: $const156.2 = const(int, 1)
2022-08-04 11:52:59,814 DEBUG on stmt: $156.3 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.2, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:52:59,814 DEBUG find_def var='exp' stmt=$156.3 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.2, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:52:59,815 DEBUG find_def_from_top label 156
2022-08-04 11:52:59,815 DEBUG idom 140 from label 156
2022-08-04 11:52:59,815 DEBUG find_def_from_bottom label 140
2022-08-04 11:52:59,815 DEBUG find_def_from_top label 140
2022-08-04 11:52:59,815 DEBUG idom 132 from label 140
2022-08-04 11:52:59,815 DEBUG find_def_from_bottom label 132
2022-08-04 11:52:59,815 DEBUG replaced with: $156.3 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.2, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:52:59,815 DEBUG on stmt: exp.2 = $156.3
2022-08-04 11:52:59,815 DEBUG on stmt: $156.6 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:52:59,815 DEBUG on stmt: a.1 = $156.6
2022-08-04 11:52:59,816 DEBUG on stmt: jump 132
2022-08-04 11:52:59,816 DEBUG ==== SSA block rewrite pass on 174
2022-08-04 11:52:59,816 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdc5d390>
2022-08-04 11:52:59,816 DEBUG on stmt: jump 176
2022-08-04 11:52:59,816 DEBUG ==== SSA block rewrite pass on 176
2022-08-04 11:52:59,816 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdc5d390>
2022-08-04 11:52:59,816 DEBUG on stmt: bool178 = global(bool: <class 'bool'>)
2022-08-04 11:52:59,816 DEBUG on stmt: $178pred = call bool178(invert.2, func=bool178, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
2022-08-04 11:52:59,816 DEBUG on stmt: branch $178pred, 180, 188
2022-08-04 11:52:59,816 DEBUG ==== SSA block rewrite pass on 180
2022-08-04 11:52:59,816 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdc5d390>
2022-08-04 11:52:59,816 DEBUG on stmt: $const180.1 = const(float, 1.0)
2022-08-04 11:52:59,816 DEBUG on stmt: $180.3 = $const180.1 / r
2022-08-04 11:52:59,816 DEBUG on stmt: $180.4 = cast(value=$180.3)
2022-08-04 11:52:59,816 DEBUG on stmt: return $180.4
2022-08-04 11:52:59,817 DEBUG ==== SSA block rewrite pass on 188
2022-08-04 11:52:59,817 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdc5d390>
2022-08-04 11:52:59,817 DEBUG on stmt: $188.2 = cast(value=r)
2022-08-04 11:52:59,817 DEBUG on stmt: return $188.2
2022-08-04 11:52:59,817 DEBUG Fix SSA violator on var r
2022-08-04 11:52:59,817 DEBUG ==== SSA block rewrite pass on 0
2022-08-04 11:52:59,817 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdc7bf60>
2022-08-04 11:52:59,817 DEBUG on stmt: a = arg(0, name=a)
2022-08-04 11:52:59,817 DEBUG on stmt: b = arg(1, name=b)
2022-08-04 11:52:59,817 DEBUG on stmt: $0.1 = freevar(tp: float64)
2022-08-04 11:52:59,817 DEBUG on stmt: $const0.2 = const(int, 1)
2022-08-04 11:52:59,818 DEBUG on stmt: r = call $0.1($const0.2, func=$0.1, args=[Var($const0.2, numbers.py:217)], kws=(), vararg=None)
2022-08-04 11:52:59,818 DEBUG first assign: r
2022-08-04 11:52:59,818 DEBUG replaced with: r = call $0.1($const0.2, func=$0.1, args=[Var($const0.2, numbers.py:217)], kws=(), vararg=None)
2022-08-04 11:52:59,818 DEBUG on stmt: $0.4 = freevar(tp: float64)
2022-08-04 11:52:59,818 DEBUG on stmt: a.1 = call $0.4(a, func=$0.4, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
2022-08-04 11:52:59,818 DEBUG on stmt: $const0.8 = const(int, 0)
2022-08-04 11:52:59,818 DEBUG on stmt: $0.9 = b < $const0.8
2022-08-04 11:52:59,818 DEBUG on stmt: bool24 = global(bool: <class 'bool'>)
2022-08-04 11:52:59,818 DEBUG on stmt: $24pred = call bool24($0.9, func=bool24, args=(Var($0.9, numbers.py:219),), kws=(), vararg=None)
2022-08-04 11:52:59,818 DEBUG on stmt: branch $24pred, 26, 98
2022-08-04 11:52:59,818 DEBUG ==== SSA block rewrite pass on 26
2022-08-04 11:52:59,818 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdc7bf60>
2022-08-04 11:52:59,818 DEBUG on stmt: invert = const(bool, True)
2022-08-04 11:52:59,818 DEBUG on stmt: exp = unary(fn=<built-in function neg>, value=b)
2022-08-04 11:52:59,819 DEBUG on stmt: $const26.5 = const(int, 0)
2022-08-04 11:52:59,819 DEBUG on stmt: $26.6 = exp < $const26.5
2022-08-04 11:52:59,819 DEBUG on stmt: bool42 = global(bool: <class 'bool'>)
2022-08-04 11:52:59,819 DEBUG on stmt: $42pred = call bool42($26.6, func=bool42, args=(Var($26.6, numbers.py:222),), kws=(), vararg=None)
2022-08-04 11:52:59,819 DEBUG on stmt: branch $42pred, 44, 48
2022-08-04 11:52:59,819 DEBUG ==== SSA block rewrite pass on 44
2022-08-04 11:52:59,819 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdc7bf60>
2022-08-04 11:52:59,819 DEBUG on stmt: $44.1 = global(OverflowError: <class 'OverflowError'>)
2022-08-04 11:52:59,819 DEBUG on stmt: <static> raise <class 'OverflowError'>
2022-08-04 11:52:59,819 DEBUG ==== SSA block rewrite pass on 48
2022-08-04 11:52:59,819 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdc7bf60>
2022-08-04 11:52:59,819 DEBUG on stmt: $48.1 = freevar(is_integer: False)
2022-08-04 11:52:59,819 DEBUG on stmt: bool50 = global(bool: <class 'bool'>)
2022-08-04 11:52:59,819 DEBUG on stmt: $50pred = call bool50($48.1, func=bool50, args=(Var($48.1, numbers.py:224),), kws=(), vararg=None)
2022-08-04 11:52:59,819 DEBUG on stmt: jump 106
2022-08-04 11:52:59,819 DEBUG ==== SSA block rewrite pass on 98
2022-08-04 11:52:59,820 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdc7bf60>
2022-08-04 11:52:59,820 DEBUG on stmt: invert.1 = const(bool, False)
2022-08-04 11:52:59,820 DEBUG on stmt: exp.1 = b
2022-08-04 11:52:59,820 DEBUG on stmt: jump 106
2022-08-04 11:52:59,820 DEBUG ==== SSA block rewrite pass on 106
2022-08-04 11:52:59,820 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdc7bf60>
2022-08-04 11:52:59,820 DEBUG on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
2022-08-04 11:52:59,820 DEBUG on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:220), Var(invert.1, numbers.py:233)], incoming_blocks=[48, 98])
2022-08-04 11:52:59,820 DEBUG on stmt: $const106.2 = const(int, 65536)
2022-08-04 11:52:59,820 DEBUG on stmt: $106.3 = exp.3 > $const106.2
2022-08-04 11:52:59,820 DEBUG on stmt: bool112 = global(bool: <class 'bool'>)
2022-08-04 11:52:59,820 DEBUG on stmt: $112pred = call bool112($106.3, func=bool112, args=(Var($106.3, numbers.py:235),), kws=(), vararg=None)
2022-08-04 11:52:59,820 DEBUG on stmt: branch $112pred, 114, 130
2022-08-04 11:52:59,820 DEBUG ==== SSA block rewrite pass on 114
2022-08-04 11:52:59,820 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdc7bf60>
2022-08-04 11:52:59,820 DEBUG on stmt: $114.1 = global(math: <module 'math' from '/Users/wdiepeveen/anaconda3/envs/aspire_env/lib/python3.6/lib-dynload/math.cpython-36m-darwin.so'>)
2022-08-04 11:52:59,821 DEBUG on stmt: $114.2 = getattr(value=$114.1, attr=pow)
2022-08-04 11:52:59,821 DEBUG on stmt: $114.4 = global(float: <class 'float'>)
2022-08-04 11:52:59,821 DEBUG on stmt: $114.6 = call $114.4(b, func=$114.4, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
2022-08-04 11:52:59,821 DEBUG on stmt: $114.7 = call $114.2(a.1, $114.6, func=$114.2, args=[Var(a.1, numbers.py:218), Var($114.6, numbers.py:237)], kws=(), vararg=None)
2022-08-04 11:52:59,821 DEBUG on stmt: $114.8 = cast(value=$114.7)
2022-08-04 11:52:59,821 DEBUG on stmt: return $114.8
2022-08-04 11:52:59,821 DEBUG ==== SSA block rewrite pass on 130
2022-08-04 11:52:59,821 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdc7bf60>
2022-08-04 11:52:59,821 DEBUG on stmt: jump 132
2022-08-04 11:52:59,821 DEBUG ==== SSA block rewrite pass on 132
2022-08-04 11:52:59,821 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdc7bf60>
2022-08-04 11:52:59,821 DEBUG on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[130, 156])
2022-08-04 11:52:59,821 DEBUG on stmt: $const132.2 = const(int, 0)
2022-08-04 11:52:59,821 DEBUG on stmt: $132.3 = exp.4 != $const132.2
2022-08-04 11:52:59,821 DEBUG on stmt: bool138 = global(bool: <class 'bool'>)
2022-08-04 11:52:59,821 DEBUG on stmt: $138pred = call bool138($132.3, func=bool138, args=(Var($132.3, numbers.py:238),), kws=(), vararg=None)
2022-08-04 11:52:59,822 DEBUG on stmt: branch $138pred, 140, 174
2022-08-04 11:52:59,822 DEBUG ==== SSA block rewrite pass on 140
2022-08-04 11:52:59,822 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdc7bf60>
2022-08-04 11:52:59,822 DEBUG on stmt: $const140.2 = const(int, 1)
2022-08-04 11:52:59,822 DEBUG on stmt: $140.3 = exp.4 & $const140.2
2022-08-04 11:52:59,822 DEBUG on stmt: bool146 = global(bool: <class 'bool'>)
2022-08-04 11:52:59,822 DEBUG on stmt: $146pred = call bool146($140.3, func=bool146, args=(Var($140.3, numbers.py:239),), kws=(), vararg=None)
2022-08-04 11:52:59,822 DEBUG on stmt: branch $146pred, 148, 156
2022-08-04 11:52:59,822 DEBUG ==== SSA block rewrite pass on 148
2022-08-04 11:52:59,822 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdc7bf60>
2022-08-04 11:52:59,822 DEBUG on stmt: $148.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:52:59,822 DEBUG on stmt: r = $148.3
2022-08-04 11:52:59,822 DEBUG replaced with: r.1 = $148.3
2022-08-04 11:52:59,822 DEBUG on stmt: jump 156
2022-08-04 11:52:59,822 DEBUG ==== SSA block rewrite pass on 156
2022-08-04 11:52:59,822 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdc7bf60>
2022-08-04 11:52:59,823 DEBUG on stmt: $const156.2 = const(int, 1)
2022-08-04 11:52:59,823 DEBUG on stmt: $156.3 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.2, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:52:59,823 DEBUG on stmt: exp.2 = $156.3
2022-08-04 11:52:59,823 DEBUG on stmt: $156.6 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:52:59,823 DEBUG on stmt: a.1 = $156.6
2022-08-04 11:52:59,823 DEBUG on stmt: jump 132
2022-08-04 11:52:59,823 DEBUG ==== SSA block rewrite pass on 174
2022-08-04 11:52:59,823 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdc7bf60>
2022-08-04 11:52:59,823 DEBUG on stmt: jump 176
2022-08-04 11:52:59,823 DEBUG ==== SSA block rewrite pass on 176
2022-08-04 11:52:59,823 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdc7bf60>
2022-08-04 11:52:59,823 DEBUG on stmt: bool178 = global(bool: <class 'bool'>)
2022-08-04 11:52:59,823 DEBUG on stmt: $178pred = call bool178(invert.2, func=bool178, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
2022-08-04 11:52:59,823 DEBUG on stmt: branch $178pred, 180, 188
2022-08-04 11:52:59,823 DEBUG ==== SSA block rewrite pass on 180
2022-08-04 11:52:59,824 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdc7bf60>
2022-08-04 11:52:59,824 DEBUG on stmt: $const180.1 = const(float, 1.0)
2022-08-04 11:52:59,824 DEBUG on stmt: $180.3 = $const180.1 / r
2022-08-04 11:52:59,824 DEBUG on stmt: $180.4 = cast(value=$180.3)
2022-08-04 11:52:59,824 DEBUG on stmt: return $180.4
2022-08-04 11:52:59,824 DEBUG ==== SSA block rewrite pass on 188
2022-08-04 11:52:59,824 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdc7bf60>
2022-08-04 11:52:59,824 DEBUG on stmt: $188.2 = cast(value=r)
2022-08-04 11:52:59,824 DEBUG on stmt: return $188.2
2022-08-04 11:52:59,824 DEBUG Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7fa2cdc7ba90>],
             148: [<numba.core.ir.Assign object at 0x7fa2cdc46be0>]})
2022-08-04 11:52:59,825 DEBUG ==== SSA block rewrite pass on 0
2022-08-04 11:52:59,825 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdc5d198>
2022-08-04 11:52:59,825 DEBUG on stmt: a = arg(0, name=a)
2022-08-04 11:52:59,825 DEBUG on stmt: b = arg(1, name=b)
2022-08-04 11:52:59,825 DEBUG on stmt: $0.1 = freevar(tp: float64)
2022-08-04 11:52:59,825 DEBUG on stmt: $const0.2 = const(int, 1)
2022-08-04 11:52:59,825 DEBUG on stmt: r = call $0.1($const0.2, func=$0.1, args=[Var($const0.2, numbers.py:217)], kws=(), vararg=None)
2022-08-04 11:52:59,825 DEBUG on stmt: $0.4 = freevar(tp: float64)
2022-08-04 11:52:59,825 DEBUG on stmt: a.1 = call $0.4(a, func=$0.4, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
2022-08-04 11:52:59,825 DEBUG on stmt: $const0.8 = const(int, 0)
2022-08-04 11:52:59,825 DEBUG on stmt: $0.9 = b < $const0.8
2022-08-04 11:52:59,826 DEBUG on stmt: bool24 = global(bool: <class 'bool'>)
2022-08-04 11:52:59,826 DEBUG on stmt: $24pred = call bool24($0.9, func=bool24, args=(Var($0.9, numbers.py:219),), kws=(), vararg=None)
2022-08-04 11:52:59,826 DEBUG on stmt: branch $24pred, 26, 98
2022-08-04 11:52:59,826 DEBUG ==== SSA block rewrite pass on 26
2022-08-04 11:52:59,826 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdc5d198>
2022-08-04 11:52:59,826 DEBUG on stmt: invert = const(bool, True)
2022-08-04 11:52:59,826 DEBUG on stmt: exp = unary(fn=<built-in function neg>, value=b)
2022-08-04 11:52:59,826 DEBUG on stmt: $const26.5 = const(int, 0)
2022-08-04 11:52:59,826 DEBUG on stmt: $26.6 = exp < $const26.5
2022-08-04 11:52:59,826 DEBUG on stmt: bool42 = global(bool: <class 'bool'>)
2022-08-04 11:52:59,826 DEBUG on stmt: $42pred = call bool42($26.6, func=bool42, args=(Var($26.6, numbers.py:222),), kws=(), vararg=None)
2022-08-04 11:52:59,826 DEBUG on stmt: branch $42pred, 44, 48
2022-08-04 11:52:59,826 DEBUG ==== SSA block rewrite pass on 44
2022-08-04 11:52:59,826 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdc5d198>
2022-08-04 11:52:59,827 DEBUG on stmt: $44.1 = global(OverflowError: <class 'OverflowError'>)
2022-08-04 11:52:59,827 DEBUG on stmt: <static> raise <class 'OverflowError'>
2022-08-04 11:52:59,827 DEBUG ==== SSA block rewrite pass on 48
2022-08-04 11:52:59,827 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdc5d198>
2022-08-04 11:52:59,827 DEBUG on stmt: $48.1 = freevar(is_integer: False)
2022-08-04 11:52:59,827 DEBUG on stmt: bool50 = global(bool: <class 'bool'>)
2022-08-04 11:52:59,827 DEBUG on stmt: $50pred = call bool50($48.1, func=bool50, args=(Var($48.1, numbers.py:224),), kws=(), vararg=None)
2022-08-04 11:52:59,827 DEBUG on stmt: jump 106
2022-08-04 11:52:59,827 DEBUG ==== SSA block rewrite pass on 98
2022-08-04 11:52:59,827 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdc5d198>
2022-08-04 11:52:59,827 DEBUG on stmt: invert.1 = const(bool, False)
2022-08-04 11:52:59,827 DEBUG on stmt: exp.1 = b
2022-08-04 11:52:59,827 DEBUG on stmt: jump 106
2022-08-04 11:52:59,827 DEBUG ==== SSA block rewrite pass on 106
2022-08-04 11:52:59,827 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdc5d198>
2022-08-04 11:52:59,827 DEBUG on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
2022-08-04 11:52:59,828 DEBUG on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:220), Var(invert.1, numbers.py:233)], incoming_blocks=[48, 98])
2022-08-04 11:52:59,828 DEBUG on stmt: $const106.2 = const(int, 65536)
2022-08-04 11:52:59,828 DEBUG on stmt: $106.3 = exp.3 > $const106.2
2022-08-04 11:52:59,828 DEBUG on stmt: bool112 = global(bool: <class 'bool'>)
2022-08-04 11:52:59,828 DEBUG on stmt: $112pred = call bool112($106.3, func=bool112, args=(Var($106.3, numbers.py:235),), kws=(), vararg=None)
2022-08-04 11:52:59,828 DEBUG on stmt: branch $112pred, 114, 130
2022-08-04 11:52:59,828 DEBUG ==== SSA block rewrite pass on 114
2022-08-04 11:52:59,828 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdc5d198>
2022-08-04 11:52:59,828 DEBUG on stmt: $114.1 = global(math: <module 'math' from '/Users/wdiepeveen/anaconda3/envs/aspire_env/lib/python3.6/lib-dynload/math.cpython-36m-darwin.so'>)
2022-08-04 11:52:59,828 DEBUG on stmt: $114.2 = getattr(value=$114.1, attr=pow)
2022-08-04 11:52:59,828 DEBUG on stmt: $114.4 = global(float: <class 'float'>)
2022-08-04 11:52:59,828 DEBUG on stmt: $114.6 = call $114.4(b, func=$114.4, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
2022-08-04 11:52:59,828 DEBUG on stmt: $114.7 = call $114.2(a.1, $114.6, func=$114.2, args=[Var(a.1, numbers.py:218), Var($114.6, numbers.py:237)], kws=(), vararg=None)
2022-08-04 11:52:59,828 DEBUG on stmt: $114.8 = cast(value=$114.7)
2022-08-04 11:52:59,829 DEBUG on stmt: return $114.8
2022-08-04 11:52:59,829 DEBUG ==== SSA block rewrite pass on 130
2022-08-04 11:52:59,829 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdc5d198>
2022-08-04 11:52:59,829 DEBUG on stmt: jump 132
2022-08-04 11:52:59,829 DEBUG ==== SSA block rewrite pass on 132
2022-08-04 11:52:59,829 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdc5d198>
2022-08-04 11:52:59,829 DEBUG on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[130, 156])
2022-08-04 11:52:59,829 DEBUG on stmt: $const132.2 = const(int, 0)
2022-08-04 11:52:59,829 DEBUG on stmt: $132.3 = exp.4 != $const132.2
2022-08-04 11:52:59,829 DEBUG on stmt: bool138 = global(bool: <class 'bool'>)
2022-08-04 11:52:59,829 DEBUG on stmt: $138pred = call bool138($132.3, func=bool138, args=(Var($132.3, numbers.py:238),), kws=(), vararg=None)
2022-08-04 11:52:59,829 DEBUG on stmt: branch $138pred, 140, 174
2022-08-04 11:52:59,829 DEBUG ==== SSA block rewrite pass on 140
2022-08-04 11:52:59,829 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdc5d198>
2022-08-04 11:52:59,829 DEBUG on stmt: $const140.2 = const(int, 1)
2022-08-04 11:52:59,829 DEBUG on stmt: $140.3 = exp.4 & $const140.2
2022-08-04 11:52:59,829 DEBUG on stmt: bool146 = global(bool: <class 'bool'>)
2022-08-04 11:52:59,829 DEBUG on stmt: $146pred = call bool146($140.3, func=bool146, args=(Var($140.3, numbers.py:239),), kws=(), vararg=None)
2022-08-04 11:52:59,829 DEBUG on stmt: branch $146pred, 148, 156
2022-08-04 11:52:59,830 DEBUG ==== SSA block rewrite pass on 148
2022-08-04 11:52:59,830 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdc5d198>
2022-08-04 11:52:59,830 DEBUG on stmt: $148.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:52:59,830 DEBUG find_def var='r' stmt=$148.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:52:59,830 DEBUG find_def_from_top label 148
2022-08-04 11:52:59,830 DEBUG idom 140 from label 148
2022-08-04 11:52:59,830 DEBUG find_def_from_bottom label 140
2022-08-04 11:52:59,830 DEBUG find_def_from_top label 140
2022-08-04 11:52:59,830 DEBUG idom 132 from label 140
2022-08-04 11:52:59,830 DEBUG find_def_from_bottom label 132
2022-08-04 11:52:59,830 DEBUG find_def_from_top label 132
2022-08-04 11:52:59,830 DEBUG insert phi node r.2 = phi(incoming_values=[], incoming_blocks=[]) at 132
2022-08-04 11:52:59,830 DEBUG find_def_from_bottom label 130
2022-08-04 11:52:59,830 DEBUG find_def_from_top label 130
2022-08-04 11:52:59,830 DEBUG idom 106 from label 130
2022-08-04 11:52:59,830 DEBUG find_def_from_bottom label 106
2022-08-04 11:52:59,830 DEBUG find_def_from_top label 106
2022-08-04 11:52:59,830 DEBUG idom 0 from label 106
2022-08-04 11:52:59,830 DEBUG find_def_from_bottom label 0
2022-08-04 11:52:59,830 DEBUG incoming_def r = call $0.1($const0.2, func=$0.1, args=[Var($const0.2, numbers.py:217)], kws=(), vararg=None)
2022-08-04 11:52:59,830 DEBUG find_def_from_bottom label 156
2022-08-04 11:52:59,830 DEBUG find_def_from_top label 156
2022-08-04 11:52:59,830 DEBUG insert phi node r.3 = phi(incoming_values=[], incoming_blocks=[]) at 156
2022-08-04 11:52:59,830 DEBUG find_def_from_bottom label 148
2022-08-04 11:52:59,830 DEBUG incoming_def r.1 = $148.3
2022-08-04 11:52:59,830 DEBUG find_def_from_bottom label 140
2022-08-04 11:52:59,830 DEBUG find_def_from_top label 140
2022-08-04 11:52:59,831 DEBUG idom 132 from label 140
2022-08-04 11:52:59,831 DEBUG find_def_from_bottom label 132
2022-08-04 11:52:59,831 DEBUG incoming_def r.2 = phi(incoming_values=[Var(r, numbers.py:217)], incoming_blocks=[130])
2022-08-04 11:52:59,831 DEBUG incoming_def r.3 = phi(incoming_values=[Var(r.1, numbers.py:240), Var(r.2, numbers.py:240)], incoming_blocks=[148, 140])
2022-08-04 11:52:59,831 DEBUG replaced with: $148.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:52:59,831 DEBUG on stmt: r.1 = $148.3
2022-08-04 11:52:59,831 DEBUG on stmt: jump 156
2022-08-04 11:52:59,831 DEBUG ==== SSA block rewrite pass on 156
2022-08-04 11:52:59,831 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdc5d198>
2022-08-04 11:52:59,831 DEBUG on stmt: $const156.2 = const(int, 1)
2022-08-04 11:52:59,831 DEBUG on stmt: $156.3 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.2, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:52:59,831 DEBUG on stmt: exp.2 = $156.3
2022-08-04 11:52:59,831 DEBUG on stmt: $156.6 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:52:59,831 DEBUG on stmt: a.1 = $156.6
2022-08-04 11:52:59,831 DEBUG on stmt: jump 132
2022-08-04 11:52:59,831 DEBUG ==== SSA block rewrite pass on 174
2022-08-04 11:52:59,831 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdc5d198>
2022-08-04 11:52:59,832 DEBUG on stmt: jump 176
2022-08-04 11:52:59,832 DEBUG ==== SSA block rewrite pass on 176
2022-08-04 11:52:59,832 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdc5d198>
2022-08-04 11:52:59,832 DEBUG on stmt: bool178 = global(bool: <class 'bool'>)
2022-08-04 11:52:59,832 DEBUG on stmt: $178pred = call bool178(invert.2, func=bool178, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
2022-08-04 11:52:59,832 DEBUG on stmt: branch $178pred, 180, 188
2022-08-04 11:52:59,832 DEBUG ==== SSA block rewrite pass on 180
2022-08-04 11:52:59,832 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdc5d198>
2022-08-04 11:52:59,832 DEBUG on stmt: $const180.1 = const(float, 1.0)
2022-08-04 11:52:59,832 DEBUG on stmt: $180.3 = $const180.1 / r
2022-08-04 11:52:59,832 DEBUG find_def var='r' stmt=$180.3 = $const180.1 / r
2022-08-04 11:52:59,832 DEBUG find_def_from_top label 180
2022-08-04 11:52:59,832 DEBUG idom 176 from label 180
2022-08-04 11:52:59,832 DEBUG find_def_from_bottom label 176
2022-08-04 11:52:59,832 DEBUG find_def_from_top label 176
2022-08-04 11:52:59,832 DEBUG idom 174 from label 176
2022-08-04 11:52:59,833 DEBUG find_def_from_bottom label 174
2022-08-04 11:52:59,833 DEBUG find_def_from_top label 174
2022-08-04 11:52:59,833 DEBUG idom 132 from label 174
2022-08-04 11:52:59,833 DEBUG find_def_from_bottom label 132
2022-08-04 11:52:59,833 DEBUG replaced with: $180.3 = $const180.1 / r.2
2022-08-04 11:52:59,833 DEBUG on stmt: $180.4 = cast(value=$180.3)
2022-08-04 11:52:59,833 DEBUG on stmt: return $180.4
2022-08-04 11:52:59,833 DEBUG ==== SSA block rewrite pass on 188
2022-08-04 11:52:59,833 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdc5d198>
2022-08-04 11:52:59,833 DEBUG on stmt: $188.2 = cast(value=r)
2022-08-04 11:52:59,833 DEBUG find_def var='r' stmt=$188.2 = cast(value=r)
2022-08-04 11:52:59,833 DEBUG find_def_from_top label 188
2022-08-04 11:52:59,833 DEBUG idom 176 from label 188
2022-08-04 11:52:59,833 DEBUG find_def_from_bottom label 176
2022-08-04 11:52:59,833 DEBUG find_def_from_top label 176
2022-08-04 11:52:59,833 DEBUG idom 174 from label 176
2022-08-04 11:52:59,833 DEBUG find_def_from_bottom label 174
2022-08-04 11:52:59,834 DEBUG find_def_from_top label 174
2022-08-04 11:52:59,834 DEBUG idom 132 from label 174
2022-08-04 11:52:59,834 DEBUG find_def_from_bottom label 132
2022-08-04 11:52:59,834 DEBUG replaced with: $188.2 = cast(value=r.2)
2022-08-04 11:52:59,834 DEBUG on stmt: return $188.2
2022-08-04 11:52:59,834 DEBUG Fix SSA violator on var a.1
2022-08-04 11:52:59,834 DEBUG ==== SSA block rewrite pass on 0
2022-08-04 11:52:59,834 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdc46438>
2022-08-04 11:52:59,834 DEBUG on stmt: a = arg(0, name=a)
2022-08-04 11:52:59,834 DEBUG on stmt: b = arg(1, name=b)
2022-08-04 11:52:59,834 DEBUG on stmt: $0.1 = freevar(tp: float64)
2022-08-04 11:52:59,834 DEBUG on stmt: $const0.2 = const(int, 1)
2022-08-04 11:52:59,834 DEBUG on stmt: r = call $0.1($const0.2, func=$0.1, args=[Var($const0.2, numbers.py:217)], kws=(), vararg=None)
2022-08-04 11:52:59,834 DEBUG on stmt: $0.4 = freevar(tp: float64)
2022-08-04 11:52:59,834 DEBUG on stmt: a.1 = call $0.4(a, func=$0.4, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
2022-08-04 11:52:59,834 DEBUG first assign: a.1
2022-08-04 11:52:59,834 DEBUG replaced with: a.1 = call $0.4(a, func=$0.4, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
2022-08-04 11:52:59,835 DEBUG on stmt: $const0.8 = const(int, 0)
2022-08-04 11:52:59,835 DEBUG on stmt: $0.9 = b < $const0.8
2022-08-04 11:52:59,835 DEBUG on stmt: bool24 = global(bool: <class 'bool'>)
2022-08-04 11:52:59,835 DEBUG on stmt: $24pred = call bool24($0.9, func=bool24, args=(Var($0.9, numbers.py:219),), kws=(), vararg=None)
2022-08-04 11:52:59,835 DEBUG on stmt: branch $24pred, 26, 98
2022-08-04 11:52:59,835 DEBUG ==== SSA block rewrite pass on 26
2022-08-04 11:52:59,835 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdc46438>
2022-08-04 11:52:59,835 DEBUG on stmt: invert = const(bool, True)
2022-08-04 11:52:59,835 DEBUG on stmt: exp = unary(fn=<built-in function neg>, value=b)
2022-08-04 11:52:59,835 DEBUG on stmt: $const26.5 = const(int, 0)
2022-08-04 11:52:59,835 DEBUG on stmt: $26.6 = exp < $const26.5
2022-08-04 11:52:59,835 DEBUG on stmt: bool42 = global(bool: <class 'bool'>)
2022-08-04 11:52:59,835 DEBUG on stmt: $42pred = call bool42($26.6, func=bool42, args=(Var($26.6, numbers.py:222),), kws=(), vararg=None)
2022-08-04 11:52:59,835 DEBUG on stmt: branch $42pred, 44, 48
2022-08-04 11:52:59,835 DEBUG ==== SSA block rewrite pass on 44
2022-08-04 11:52:59,835 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdc46438>
2022-08-04 11:52:59,835 DEBUG on stmt: $44.1 = global(OverflowError: <class 'OverflowError'>)
2022-08-04 11:52:59,835 DEBUG on stmt: <static> raise <class 'OverflowError'>
2022-08-04 11:52:59,835 DEBUG ==== SSA block rewrite pass on 48
2022-08-04 11:52:59,835 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdc46438>
2022-08-04 11:52:59,836 DEBUG on stmt: $48.1 = freevar(is_integer: False)
2022-08-04 11:52:59,836 DEBUG on stmt: bool50 = global(bool: <class 'bool'>)
2022-08-04 11:52:59,836 DEBUG on stmt: $50pred = call bool50($48.1, func=bool50, args=(Var($48.1, numbers.py:224),), kws=(), vararg=None)
2022-08-04 11:52:59,836 DEBUG on stmt: jump 106
2022-08-04 11:52:59,836 DEBUG ==== SSA block rewrite pass on 98
2022-08-04 11:52:59,836 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdc46438>
2022-08-04 11:52:59,836 DEBUG on stmt: invert.1 = const(bool, False)
2022-08-04 11:52:59,836 DEBUG on stmt: exp.1 = b
2022-08-04 11:52:59,836 DEBUG on stmt: jump 106
2022-08-04 11:52:59,836 DEBUG ==== SSA block rewrite pass on 106
2022-08-04 11:52:59,836 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdc46438>
2022-08-04 11:52:59,836 DEBUG on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
2022-08-04 11:52:59,836 DEBUG on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:220), Var(invert.1, numbers.py:233)], incoming_blocks=[48, 98])
2022-08-04 11:52:59,836 DEBUG on stmt: $const106.2 = const(int, 65536)
2022-08-04 11:52:59,836 DEBUG on stmt: $106.3 = exp.3 > $const106.2
2022-08-04 11:52:59,836 DEBUG on stmt: bool112 = global(bool: <class 'bool'>)
2022-08-04 11:52:59,836 DEBUG on stmt: $112pred = call bool112($106.3, func=bool112, args=(Var($106.3, numbers.py:235),), kws=(), vararg=None)
2022-08-04 11:52:59,836 DEBUG on stmt: branch $112pred, 114, 130
2022-08-04 11:52:59,836 DEBUG ==== SSA block rewrite pass on 114
2022-08-04 11:52:59,836 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdc46438>
2022-08-04 11:52:59,836 DEBUG on stmt: $114.1 = global(math: <module 'math' from '/Users/wdiepeveen/anaconda3/envs/aspire_env/lib/python3.6/lib-dynload/math.cpython-36m-darwin.so'>)
2022-08-04 11:52:59,836 DEBUG on stmt: $114.2 = getattr(value=$114.1, attr=pow)
2022-08-04 11:52:59,837 DEBUG on stmt: $114.4 = global(float: <class 'float'>)
2022-08-04 11:52:59,837 DEBUG on stmt: $114.6 = call $114.4(b, func=$114.4, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
2022-08-04 11:52:59,837 DEBUG on stmt: $114.7 = call $114.2(a.1, $114.6, func=$114.2, args=[Var(a.1, numbers.py:218), Var($114.6, numbers.py:237)], kws=(), vararg=None)
2022-08-04 11:52:59,837 DEBUG on stmt: $114.8 = cast(value=$114.7)
2022-08-04 11:52:59,837 DEBUG on stmt: return $114.8
2022-08-04 11:52:59,837 DEBUG ==== SSA block rewrite pass on 130
2022-08-04 11:52:59,837 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdc46438>
2022-08-04 11:52:59,837 DEBUG on stmt: jump 132
2022-08-04 11:52:59,837 DEBUG ==== SSA block rewrite pass on 132
2022-08-04 11:52:59,837 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdc46438>
2022-08-04 11:52:59,837 DEBUG on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:217), Var(r.3, numbers.py:240)], incoming_blocks=[130, 156])
2022-08-04 11:52:59,837 DEBUG on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[130, 156])
2022-08-04 11:52:59,837 DEBUG on stmt: $const132.2 = const(int, 0)
2022-08-04 11:52:59,837 DEBUG on stmt: $132.3 = exp.4 != $const132.2
2022-08-04 11:52:59,837 DEBUG on stmt: bool138 = global(bool: <class 'bool'>)
2022-08-04 11:52:59,837 DEBUG on stmt: $138pred = call bool138($132.3, func=bool138, args=(Var($132.3, numbers.py:238),), kws=(), vararg=None)
2022-08-04 11:52:59,837 DEBUG on stmt: branch $138pred, 140, 174
2022-08-04 11:52:59,837 DEBUG ==== SSA block rewrite pass on 140
2022-08-04 11:52:59,837 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdc46438>
2022-08-04 11:52:59,837 DEBUG on stmt: $const140.2 = const(int, 1)
2022-08-04 11:52:59,837 DEBUG on stmt: $140.3 = exp.4 & $const140.2
2022-08-04 11:52:59,837 DEBUG on stmt: bool146 = global(bool: <class 'bool'>)
2022-08-04 11:52:59,837 DEBUG on stmt: $146pred = call bool146($140.3, func=bool146, args=(Var($140.3, numbers.py:239),), kws=(), vararg=None)
2022-08-04 11:52:59,837 DEBUG on stmt: branch $146pred, 148, 156
2022-08-04 11:52:59,837 DEBUG ==== SSA block rewrite pass on 148
2022-08-04 11:52:59,838 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdc46438>
2022-08-04 11:52:59,838 DEBUG on stmt: $148.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:52:59,838 DEBUG on stmt: r.1 = $148.3
2022-08-04 11:52:59,838 DEBUG on stmt: jump 156
2022-08-04 11:52:59,838 DEBUG ==== SSA block rewrite pass on 156
2022-08-04 11:52:59,838 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdc46438>
2022-08-04 11:52:59,838 DEBUG on stmt: r.3 = phi(incoming_values=[Var(r.1, numbers.py:240), Var(r.2, numbers.py:240)], incoming_blocks=[148, 140])
2022-08-04 11:52:59,838 DEBUG on stmt: $const156.2 = const(int, 1)
2022-08-04 11:52:59,838 DEBUG on stmt: $156.3 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.2, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:52:59,838 DEBUG on stmt: exp.2 = $156.3
2022-08-04 11:52:59,838 DEBUG on stmt: $156.6 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:52:59,838 DEBUG on stmt: a.1 = $156.6
2022-08-04 11:52:59,838 DEBUG replaced with: a.1.1 = $156.6
2022-08-04 11:52:59,838 DEBUG on stmt: jump 132
2022-08-04 11:52:59,838 DEBUG ==== SSA block rewrite pass on 174
2022-08-04 11:52:59,838 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdc46438>
2022-08-04 11:52:59,838 DEBUG on stmt: jump 176
2022-08-04 11:52:59,838 DEBUG ==== SSA block rewrite pass on 176
2022-08-04 11:52:59,838 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdc46438>
2022-08-04 11:52:59,838 DEBUG on stmt: bool178 = global(bool: <class 'bool'>)
2022-08-04 11:52:59,838 DEBUG on stmt: $178pred = call bool178(invert.2, func=bool178, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
2022-08-04 11:52:59,838 DEBUG on stmt: branch $178pred, 180, 188
2022-08-04 11:52:59,838 DEBUG ==== SSA block rewrite pass on 180
2022-08-04 11:52:59,838 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdc46438>
2022-08-04 11:52:59,838 DEBUG on stmt: $const180.1 = const(float, 1.0)
2022-08-04 11:52:59,838 DEBUG on stmt: $180.3 = $const180.1 / r.2
2022-08-04 11:52:59,838 DEBUG on stmt: $180.4 = cast(value=$180.3)
2022-08-04 11:52:59,839 DEBUG on stmt: return $180.4
2022-08-04 11:52:59,839 DEBUG ==== SSA block rewrite pass on 188
2022-08-04 11:52:59,839 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdc46438>
2022-08-04 11:52:59,839 DEBUG on stmt: $188.2 = cast(value=r.2)
2022-08-04 11:52:59,839 DEBUG on stmt: return $188.2
2022-08-04 11:52:59,839 DEBUG Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7fa2cdc463c8>],
             156: [<numba.core.ir.Assign object at 0x7fa2cdc80080>]})
2022-08-04 11:52:59,839 DEBUG ==== SSA block rewrite pass on 0
2022-08-04 11:52:59,839 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdc7b7b8>
2022-08-04 11:52:59,839 DEBUG on stmt: a = arg(0, name=a)
2022-08-04 11:52:59,839 DEBUG on stmt: b = arg(1, name=b)
2022-08-04 11:52:59,839 DEBUG on stmt: $0.1 = freevar(tp: float64)
2022-08-04 11:52:59,839 DEBUG on stmt: $const0.2 = const(int, 1)
2022-08-04 11:52:59,839 DEBUG on stmt: r = call $0.1($const0.2, func=$0.1, args=[Var($const0.2, numbers.py:217)], kws=(), vararg=None)
2022-08-04 11:52:59,839 DEBUG on stmt: $0.4 = freevar(tp: float64)
2022-08-04 11:52:59,839 DEBUG on stmt: a.1 = call $0.4(a, func=$0.4, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
2022-08-04 11:52:59,839 DEBUG on stmt: $const0.8 = const(int, 0)
2022-08-04 11:52:59,839 DEBUG on stmt: $0.9 = b < $const0.8
2022-08-04 11:52:59,839 DEBUG on stmt: bool24 = global(bool: <class 'bool'>)
2022-08-04 11:52:59,840 DEBUG on stmt: $24pred = call bool24($0.9, func=bool24, args=(Var($0.9, numbers.py:219),), kws=(), vararg=None)
2022-08-04 11:52:59,840 DEBUG on stmt: branch $24pred, 26, 98
2022-08-04 11:52:59,840 DEBUG ==== SSA block rewrite pass on 26
2022-08-04 11:52:59,840 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdc7b7b8>
2022-08-04 11:52:59,840 DEBUG on stmt: invert = const(bool, True)
2022-08-04 11:52:59,840 DEBUG on stmt: exp = unary(fn=<built-in function neg>, value=b)
2022-08-04 11:52:59,840 DEBUG on stmt: $const26.5 = const(int, 0)
2022-08-04 11:52:59,840 DEBUG on stmt: $26.6 = exp < $const26.5
2022-08-04 11:52:59,840 DEBUG on stmt: bool42 = global(bool: <class 'bool'>)
2022-08-04 11:52:59,840 DEBUG on stmt: $42pred = call bool42($26.6, func=bool42, args=(Var($26.6, numbers.py:222),), kws=(), vararg=None)
2022-08-04 11:52:59,840 DEBUG on stmt: branch $42pred, 44, 48
2022-08-04 11:52:59,840 DEBUG ==== SSA block rewrite pass on 44
2022-08-04 11:52:59,840 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdc7b7b8>
2022-08-04 11:52:59,840 DEBUG on stmt: $44.1 = global(OverflowError: <class 'OverflowError'>)
2022-08-04 11:52:59,840 DEBUG on stmt: <static> raise <class 'OverflowError'>
2022-08-04 11:52:59,840 DEBUG ==== SSA block rewrite pass on 48
2022-08-04 11:52:59,840 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdc7b7b8>
2022-08-04 11:52:59,840 DEBUG on stmt: $48.1 = freevar(is_integer: False)
2022-08-04 11:52:59,840 DEBUG on stmt: bool50 = global(bool: <class 'bool'>)
2022-08-04 11:52:59,840 DEBUG on stmt: $50pred = call bool50($48.1, func=bool50, args=(Var($48.1, numbers.py:224),), kws=(), vararg=None)
2022-08-04 11:52:59,840 DEBUG on stmt: jump 106
2022-08-04 11:52:59,840 DEBUG ==== SSA block rewrite pass on 98
2022-08-04 11:52:59,840 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdc7b7b8>
2022-08-04 11:52:59,841 DEBUG on stmt: invert.1 = const(bool, False)
2022-08-04 11:52:59,841 DEBUG on stmt: exp.1 = b
2022-08-04 11:52:59,841 DEBUG on stmt: jump 106
2022-08-04 11:52:59,841 DEBUG ==== SSA block rewrite pass on 106
2022-08-04 11:52:59,841 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdc7b7b8>
2022-08-04 11:52:59,841 DEBUG on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
2022-08-04 11:52:59,841 DEBUG on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:220), Var(invert.1, numbers.py:233)], incoming_blocks=[48, 98])
2022-08-04 11:52:59,841 DEBUG on stmt: $const106.2 = const(int, 65536)
2022-08-04 11:52:59,841 DEBUG on stmt: $106.3 = exp.3 > $const106.2
2022-08-04 11:52:59,841 DEBUG on stmt: bool112 = global(bool: <class 'bool'>)
2022-08-04 11:52:59,841 DEBUG on stmt: $112pred = call bool112($106.3, func=bool112, args=(Var($106.3, numbers.py:235),), kws=(), vararg=None)
2022-08-04 11:52:59,841 DEBUG on stmt: branch $112pred, 114, 130
2022-08-04 11:52:59,841 DEBUG ==== SSA block rewrite pass on 114
2022-08-04 11:52:59,841 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdc7b7b8>
2022-08-04 11:52:59,841 DEBUG on stmt: $114.1 = global(math: <module 'math' from '/Users/wdiepeveen/anaconda3/envs/aspire_env/lib/python3.6/lib-dynload/math.cpython-36m-darwin.so'>)
2022-08-04 11:52:59,841 DEBUG on stmt: $114.2 = getattr(value=$114.1, attr=pow)
2022-08-04 11:52:59,841 DEBUG on stmt: $114.4 = global(float: <class 'float'>)
2022-08-04 11:52:59,841 DEBUG on stmt: $114.6 = call $114.4(b, func=$114.4, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
2022-08-04 11:52:59,841 DEBUG on stmt: $114.7 = call $114.2(a.1, $114.6, func=$114.2, args=[Var(a.1, numbers.py:218), Var($114.6, numbers.py:237)], kws=(), vararg=None)
2022-08-04 11:52:59,841 DEBUG find_def var='a.1' stmt=$114.7 = call $114.2(a.1, $114.6, func=$114.2, args=[Var(a.1, numbers.py:218), Var($114.6, numbers.py:237)], kws=(), vararg=None)
2022-08-04 11:52:59,841 DEBUG find_def_from_top label 114
2022-08-04 11:52:59,841 DEBUG idom 106 from label 114
2022-08-04 11:52:59,842 DEBUG find_def_from_bottom label 106
2022-08-04 11:52:59,842 DEBUG find_def_from_top label 106
2022-08-04 11:52:59,842 DEBUG idom 0 from label 106
2022-08-04 11:52:59,842 DEBUG find_def_from_bottom label 0
2022-08-04 11:52:59,842 DEBUG on stmt: $114.8 = cast(value=$114.7)
2022-08-04 11:52:59,842 DEBUG on stmt: return $114.8
2022-08-04 11:52:59,842 DEBUG ==== SSA block rewrite pass on 130
2022-08-04 11:52:59,842 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdc7b7b8>
2022-08-04 11:52:59,842 DEBUG on stmt: jump 132
2022-08-04 11:52:59,842 DEBUG ==== SSA block rewrite pass on 132
2022-08-04 11:52:59,842 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdc7b7b8>
2022-08-04 11:52:59,842 DEBUG on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:217), Var(r.3, numbers.py:240)], incoming_blocks=[130, 156])
2022-08-04 11:52:59,842 DEBUG on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[130, 156])
2022-08-04 11:52:59,842 DEBUG on stmt: $const132.2 = const(int, 0)
2022-08-04 11:52:59,842 DEBUG on stmt: $132.3 = exp.4 != $const132.2
2022-08-04 11:52:59,842 DEBUG on stmt: bool138 = global(bool: <class 'bool'>)
2022-08-04 11:52:59,842 DEBUG on stmt: $138pred = call bool138($132.3, func=bool138, args=(Var($132.3, numbers.py:238),), kws=(), vararg=None)
2022-08-04 11:52:59,842 DEBUG on stmt: branch $138pred, 140, 174
2022-08-04 11:52:59,842 DEBUG ==== SSA block rewrite pass on 140
2022-08-04 11:52:59,842 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdc7b7b8>
2022-08-04 11:52:59,842 DEBUG on stmt: $const140.2 = const(int, 1)
2022-08-04 11:52:59,842 DEBUG on stmt: $140.3 = exp.4 & $const140.2
2022-08-04 11:52:59,842 DEBUG on stmt: bool146 = global(bool: <class 'bool'>)
2022-08-04 11:52:59,842 DEBUG on stmt: $146pred = call bool146($140.3, func=bool146, args=(Var($140.3, numbers.py:239),), kws=(), vararg=None)
2022-08-04 11:52:59,843 DEBUG on stmt: branch $146pred, 148, 156
2022-08-04 11:52:59,843 DEBUG ==== SSA block rewrite pass on 148
2022-08-04 11:52:59,843 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdc7b7b8>
2022-08-04 11:52:59,843 DEBUG on stmt: $148.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:52:59,843 DEBUG find_def var='a.1' stmt=$148.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:52:59,843 DEBUG find_def_from_top label 148
2022-08-04 11:52:59,843 DEBUG idom 140 from label 148
2022-08-04 11:52:59,843 DEBUG find_def_from_bottom label 140
2022-08-04 11:52:59,843 DEBUG find_def_from_top label 140
2022-08-04 11:52:59,843 DEBUG idom 132 from label 140
2022-08-04 11:52:59,843 DEBUG find_def_from_bottom label 132
2022-08-04 11:52:59,843 DEBUG find_def_from_top label 132
2022-08-04 11:52:59,843 DEBUG insert phi node a.1.2 = phi(incoming_values=[], incoming_blocks=[]) at 132
2022-08-04 11:52:59,843 DEBUG find_def_from_bottom label 130
2022-08-04 11:52:59,843 DEBUG find_def_from_top label 130
2022-08-04 11:52:59,843 DEBUG idom 106 from label 130
2022-08-04 11:52:59,843 DEBUG find_def_from_bottom label 106
2022-08-04 11:52:59,843 DEBUG find_def_from_top label 106
2022-08-04 11:52:59,843 DEBUG idom 0 from label 106
2022-08-04 11:52:59,844 DEBUG find_def_from_bottom label 0
2022-08-04 11:52:59,844 DEBUG incoming_def a.1 = call $0.4(a, func=$0.4, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
2022-08-04 11:52:59,844 DEBUG find_def_from_bottom label 156
2022-08-04 11:52:59,844 DEBUG incoming_def a.1.1 = $156.6
2022-08-04 11:52:59,844 DEBUG replaced with: $148.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:52:59,844 DEBUG on stmt: r.1 = $148.3
2022-08-04 11:52:59,844 DEBUG on stmt: jump 156
2022-08-04 11:52:59,844 DEBUG ==== SSA block rewrite pass on 156
2022-08-04 11:52:59,844 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdc7b7b8>
2022-08-04 11:52:59,844 DEBUG on stmt: r.3 = phi(incoming_values=[Var(r.1, numbers.py:240), Var(r.2, numbers.py:240)], incoming_blocks=[148, 140])
2022-08-04 11:52:59,844 DEBUG on stmt: $const156.2 = const(int, 1)
2022-08-04 11:52:59,844 DEBUG on stmt: $156.3 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.2, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:52:59,844 DEBUG on stmt: exp.2 = $156.3
2022-08-04 11:52:59,845 DEBUG on stmt: $156.6 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:52:59,845 DEBUG find_def var='a.1' stmt=$156.6 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:52:59,845 DEBUG find_def_from_top label 156
2022-08-04 11:52:59,845 DEBUG idom 140 from label 156
2022-08-04 11:52:59,845 DEBUG find_def_from_bottom label 140
2022-08-04 11:52:59,845 DEBUG find_def_from_top label 140
2022-08-04 11:52:59,845 DEBUG idom 132 from label 140
2022-08-04 11:52:59,845 DEBUG find_def_from_bottom label 132
2022-08-04 11:52:59,845 DEBUG replaced with: $156.6 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:52:59,845 DEBUG on stmt: a.1.1 = $156.6
2022-08-04 11:52:59,845 DEBUG on stmt: jump 132
2022-08-04 11:52:59,845 DEBUG ==== SSA block rewrite pass on 174
2022-08-04 11:52:59,845 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdc7b7b8>
2022-08-04 11:52:59,845 DEBUG on stmt: jump 176
2022-08-04 11:52:59,845 DEBUG ==== SSA block rewrite pass on 176
2022-08-04 11:52:59,846 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdc7b7b8>
2022-08-04 11:52:59,846 DEBUG on stmt: bool178 = global(bool: <class 'bool'>)
2022-08-04 11:52:59,846 DEBUG on stmt: $178pred = call bool178(invert.2, func=bool178, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
2022-08-04 11:52:59,846 DEBUG on stmt: branch $178pred, 180, 188
2022-08-04 11:52:59,846 DEBUG ==== SSA block rewrite pass on 180
2022-08-04 11:52:59,846 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdc7b7b8>
2022-08-04 11:52:59,846 DEBUG on stmt: $const180.1 = const(float, 1.0)
2022-08-04 11:52:59,846 DEBUG on stmt: $180.3 = $const180.1 / r.2
2022-08-04 11:52:59,846 DEBUG on stmt: $180.4 = cast(value=$180.3)
2022-08-04 11:52:59,846 DEBUG on stmt: return $180.4
2022-08-04 11:52:59,846 DEBUG ==== SSA block rewrite pass on 188
2022-08-04 11:52:59,846 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdc7b7b8>
2022-08-04 11:52:59,846 DEBUG on stmt: $188.2 = cast(value=r.2)
2022-08-04 11:52:59,846 DEBUG on stmt: return $188.2
2022-08-04 11:53:00,193 DEBUG label 0:
    q = arg(0, name=q)                       ['q']
    qout = arg(1, name=qout)                 ['qout']
    $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$0.1']
    $0.2 = getattr(value=$0.1, attr=sqrt)    ['$0.1', '$0.2']
    $const0.4 = const(int, 1)                ['$const0.4']
    $0.5 = getitem(value=q, index=$const0.4, fn=<built-in function getitem>) ['$0.5', '$const0.4', 'q']
    $const0.6 = const(int, 2)                ['$const0.6']
    $0.7 = $0.5 ** $const0.6                 ['$0.5', '$0.7', '$const0.6']
    $const0.9 = const(int, 2)                ['$const0.9']
    $0.10 = getitem(value=q, index=$const0.9, fn=<built-in function getitem>) ['$0.10', '$const0.9', 'q']
    $const0.11 = const(int, 2)               ['$const0.11']
    $0.12 = $0.10 ** $const0.11              ['$0.10', '$0.12', '$const0.11']
    $0.13 = $0.7 + $0.12                     ['$0.12', '$0.13', '$0.7']
    $const0.15 = const(int, 3)               ['$const0.15']
    $0.16 = getitem(value=q, index=$const0.15, fn=<built-in function getitem>) ['$0.16', '$const0.15', 'q']
    $const0.17 = const(int, 2)               ['$const0.17']
    $0.18 = $0.16 ** $const0.17              ['$0.16', '$0.18', '$const0.17']
    $0.19 = $0.13 + $0.18                    ['$0.13', '$0.18', '$0.19']
    b = call $0.2($0.19, func=$0.2, args=[Var($0.19, algebra.py:227)], kws=(), vararg=None) ['$0.19', '$0.2', 'b']
    $0.22 = global(_quaternion_resolution: 1.0000000000000002e-14) ['$0.22']
    $0.23 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$0.23']
    $0.24 = getattr(value=$0.23, attr=abs)   ['$0.23', '$0.24']
    $const0.26 = const(int, 0)               ['$const0.26']
    $0.27 = getitem(value=q, index=$const0.26, fn=<built-in function getitem>) ['$0.27', '$const0.26', 'q']
    $0.28 = call $0.24($0.27, func=$0.24, args=[Var($0.27, algebra.py:228)], kws=(), vararg=None) ['$0.24', '$0.27', '$0.28']
    $0.29 = $0.22 * $0.28                    ['$0.22', '$0.28', '$0.29']
    $0.30 = b <= $0.29                       ['$0.29', '$0.30', 'b']
    bool64 = global(bool: <class 'bool'>)    ['bool64']
    $64pred = call bool64($0.30, func=bool64, args=(Var($0.30, algebra.py:228),), kws=(), vararg=None) ['$0.30', '$64pred', 'bool64']
    branch $64pred, 66, 228                  ['$64pred']
label 66:
    $const66.2 = const(int, 0)               ['$const66.2']
    $66.3 = getitem(value=q, index=$const66.2, fn=<built-in function getitem>) ['$66.3', '$const66.2', 'q']
    $const66.4 = const(float, 0.0)           ['$const66.4']
    $66.5 = $66.3 < $const66.4               ['$66.3', '$66.5', '$const66.4']
    bool76 = global(bool: <class 'bool'>)    ['bool76']
    $76pred = call bool76($66.5, func=bool76, args=(Var($66.5, algebra.py:229),), kws=(), vararg=None) ['$66.5', '$76pred', 'bool76']
    branch $76pred, 78, 184                  ['$76pred']
label 78:
    $78.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$78.1']
    $78.2 = getattr(value=$78.1, attr=abs)   ['$78.1', '$78.2']
    $const78.4 = const(int, 0)               ['$const78.4']
    $78.5 = getitem(value=q, index=$const78.4, fn=<built-in function getitem>) ['$78.5', '$const78.4', 'q']
    $const78.6 = const(int, 1)               ['$const78.6']
    $78.7 = $78.5 + $const78.6               ['$78.5', '$78.7', '$const78.6']
    $78.8 = call $78.2($78.7, func=$78.2, args=[Var($78.7, algebra.py:230)], kws=(), vararg=None) ['$78.2', '$78.7', '$78.8']
    $78.9 = global(_quaternion_resolution: 1.0000000000000002e-14) ['$78.9']
    $78.10 = $78.8 > $78.9                   ['$78.10', '$78.8', '$78.9']
    bool98 = global(bool: <class 'bool'>)    ['bool98']
    $98pred = call bool98($78.10, func=bool98, args=(Var($78.10, algebra.py:230),), kws=(), vararg=None) ['$78.10', '$98pred', 'bool98']
    branch $98pred, 100, 148                 ['$98pred']
label 100:
    $100.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$100.1']
    $100.2 = getattr(value=$100.1, attr=log) ['$100.1', '$100.2']
    $const100.4 = const(int, 0)              ['$const100.4']
    $100.5 = getitem(value=q, index=$const100.4, fn=<built-in function getitem>) ['$100.5', '$const100.4', 'q']
    $100.6 = unary(fn=<built-in function neg>, value=$100.5) ['$100.5', '$100.6']
    $100.7 = call $100.2($100.6, func=$100.2, args=[Var($100.6, algebra.py:231)], kws=(), vararg=None) ['$100.2', '$100.6', '$100.7']
    $const100.9 = const(int, 0)              ['$const100.9']
    qout[$const100.9] = $100.7               ['$100.7', '$const100.9', 'qout']
    $100.10 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$100.10']
    $100.11 = getattr(value=$100.10, attr=pi) ['$100.10', '$100.11']
    $const100.13 = const(int, 1)             ['$const100.13']
    qout[$const100.13] = $100.11             ['$100.11', '$const100.13', 'qout']
    $const100.14 = const(float, 0.0)         ['$const100.14']
    $const100.16 = const(int, 2)             ['$const100.16']
    qout[$const100.16] = $const100.14        ['$const100.14', '$const100.16', 'qout']
    $const100.17 = const(float, 0.0)         ['$const100.17']
    $const100.19 = const(int, 3)             ['$const100.19']
    qout[$const100.19] = $const100.17        ['$const100.17', '$const100.19', 'qout']
    jump 226                                 []
label 148:
    $const148.1 = const(float, 0.0)          ['$const148.1']
    $const148.3 = const(int, 0)              ['$const148.3']
    qout[$const148.3] = $const148.1          ['$const148.1', '$const148.3', 'qout']
    $148.4 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$148.4']
    $148.5 = getattr(value=$148.4, attr=pi)  ['$148.4', '$148.5']
    $const148.7 = const(int, 1)              ['$const148.7']
    qout[$const148.7] = $148.5               ['$148.5', '$const148.7', 'qout']
    $const148.8 = const(float, 0.0)          ['$const148.8']
    $const148.10 = const(int, 2)             ['$const148.10']
    qout[$const148.10] = $const148.8         ['$const148.10', '$const148.8', 'qout']
    $const148.11 = const(float, 0.0)         ['$const148.11']
    $const148.13 = const(int, 3)             ['$const148.13']
    qout[$const148.13] = $const148.11        ['$const148.11', '$const148.13', 'qout']
    jump 226                                 []
label 184:
    $184.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$184.1']
    $184.2 = getattr(value=$184.1, attr=log) ['$184.1', '$184.2']
    $const184.4 = const(int, 0)              ['$const184.4']
    $184.5 = getitem(value=q, index=$const184.4, fn=<built-in function getitem>) ['$184.5', '$const184.4', 'q']
    $184.6 = call $184.2($184.5, func=$184.2, args=[Var($184.5, algebra.py:241)], kws=(), vararg=None) ['$184.2', '$184.5', '$184.6']
    $const184.8 = const(int, 0)              ['$const184.8']
    qout[$const184.8] = $184.6               ['$184.6', '$const184.8', 'qout']
    $const184.9 = const(float, 0.0)          ['$const184.9']
    $const184.11 = const(int, 1)             ['$const184.11']
    qout[$const184.11] = $const184.9         ['$const184.11', '$const184.9', 'qout']
    $const184.12 = const(float, 0.0)         ['$const184.12']
    $const184.14 = const(int, 2)             ['$const184.14']
    qout[$const184.14] = $const184.12        ['$const184.12', '$const184.14', 'qout']
    $const184.15 = const(float, 0.0)         ['$const184.15']
    $const184.17 = const(int, 3)             ['$const184.17']
    qout[$const184.17] = $const184.15        ['$const184.15', '$const184.17', 'qout']
    jump 226                                 []
label 226:
    jump 338                                 []
label 228:
    $228.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$228.1']
    $228.2 = getattr(value=$228.1, attr=arctan2) ['$228.1', '$228.2']
    $const228.5 = const(int, 0)              ['$const228.5']
    $228.6 = getitem(value=q, index=$const228.5, fn=<built-in function getitem>) ['$228.6', '$const228.5', 'q']
    v = call $228.2(b, $228.6, func=$228.2, args=[Var(b, algebra.py:227), Var($228.6, algebra.py:246)], kws=(), vararg=None) ['$228.2', '$228.6', 'b', 'v']
    f = v / b                                ['b', 'f', 'v']
    $228.11 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$228.11']
    $228.12 = getattr(value=$228.11, attr=log) ['$228.11', '$228.12']
    $const228.14 = const(int, 0)             ['$const228.14']
    $228.15 = getitem(value=q, index=$const228.14, fn=<built-in function getitem>) ['$228.15', '$const228.14', 'q']
    $const228.17 = const(int, 0)             ['$const228.17']
    $228.18 = getitem(value=q, index=$const228.17, fn=<built-in function getitem>) ['$228.18', '$const228.17', 'q']
    $228.19 = $228.15 * $228.18              ['$228.15', '$228.18', '$228.19']
    $228.22 = b * b                          ['$228.22', 'b', 'b']
    $228.23 = $228.19 + $228.22              ['$228.19', '$228.22', '$228.23']
    $228.24 = call $228.12($228.23, func=$228.12, args=[Var($228.23, algebra.py:248)], kws=(), vararg=None) ['$228.12', '$228.23', '$228.24']
    $const228.25 = const(float, 2.0)         ['$const228.25']
    $228.26 = $228.24 / $const228.25         ['$228.24', '$228.26', '$const228.25']
    $const228.28 = const(int, 0)             ['$const228.28']
    qout[$const228.28] = $228.26             ['$228.26', '$const228.28', 'qout']
    $const228.31 = const(int, 1)             ['$const228.31']
    $228.32 = getitem(value=q, index=$const228.31, fn=<built-in function getitem>) ['$228.32', '$const228.31', 'q']
    $228.33 = f * $228.32                    ['$228.32', '$228.33', 'f']
    $const228.35 = const(int, 1)             ['$const228.35']
    qout[$const228.35] = $228.33             ['$228.33', '$const228.35', 'qout']
    $const228.38 = const(int, 2)             ['$const228.38']
    $228.39 = getitem(value=q, index=$const228.38, fn=<built-in function getitem>) ['$228.39', '$const228.38', 'q']
    $228.40 = f * $228.39                    ['$228.39', '$228.40', 'f']
    $const228.42 = const(int, 2)             ['$const228.42']
    qout[$const228.42] = $228.40             ['$228.40', '$const228.42', 'qout']
    $const228.45 = const(int, 3)             ['$const228.45']
    $228.46 = getitem(value=q, index=$const228.45, fn=<built-in function getitem>) ['$228.46', '$const228.45', 'q']
    $228.47 = f * $228.46                    ['$228.46', '$228.47', 'f']
    $const228.49 = const(int, 3)             ['$const228.49']
    qout[$const228.49] = $228.47             ['$228.47', '$const228.49', 'qout']
    jump 338                                 []
label 338:
    $const338.1 = const(NoneType, None)      ['$const338.1']
    $338.2 = cast(value=$const338.1)         ['$338.2', '$const338.1']
    return $338.2                            ['$338.2']

2022-08-04 11:53:00,207 DEBUG ==== SSA block analysis pass on 0
2022-08-04 11:53:00,208 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdbc6438>
2022-08-04 11:53:00,208 DEBUG on stmt: q = arg(0, name=q)
2022-08-04 11:53:00,208 DEBUG on stmt: qout = arg(1, name=qout)
2022-08-04 11:53:00,208 DEBUG on stmt: $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:00,208 DEBUG on stmt: $0.2 = getattr(value=$0.1, attr=sqrt)
2022-08-04 11:53:00,208 DEBUG on stmt: $const0.4 = const(int, 1)
2022-08-04 11:53:00,208 DEBUG on stmt: $0.5 = static_getitem(value=q, index=1, index_var=$const0.4, fn=<built-in function getitem>)
2022-08-04 11:53:00,208 DEBUG on stmt: $const0.6 = const(int, 2)
2022-08-04 11:53:00,208 DEBUG on stmt: $0.7 = $0.5 ** $const0.6
2022-08-04 11:53:00,208 DEBUG on stmt: $const0.9 = const(int, 2)
2022-08-04 11:53:00,208 DEBUG on stmt: $0.10 = static_getitem(value=q, index=2, index_var=$const0.9, fn=<built-in function getitem>)
2022-08-04 11:53:00,208 DEBUG on stmt: $const0.11 = const(int, 2)
2022-08-04 11:53:00,208 DEBUG on stmt: $0.12 = $0.10 ** $const0.11
2022-08-04 11:53:00,208 DEBUG on stmt: $0.13 = $0.7 + $0.12
2022-08-04 11:53:00,208 DEBUG on stmt: $const0.15 = const(int, 3)
2022-08-04 11:53:00,208 DEBUG on stmt: $0.16 = static_getitem(value=q, index=3, index_var=$const0.15, fn=<built-in function getitem>)
2022-08-04 11:53:00,208 DEBUG on stmt: $const0.17 = const(int, 2)
2022-08-04 11:53:00,208 DEBUG on stmt: $0.18 = $0.16 ** $const0.17
2022-08-04 11:53:00,208 DEBUG on stmt: $0.19 = $0.13 + $0.18
2022-08-04 11:53:00,208 DEBUG on stmt: b = call $0.2($0.19, func=$0.2, args=[Var($0.19, algebra.py:227)], kws=(), vararg=None)
2022-08-04 11:53:00,209 DEBUG on stmt: $0.22 = global(_quaternion_resolution: 1.0000000000000002e-14)
2022-08-04 11:53:00,209 DEBUG on stmt: $0.23 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:00,209 DEBUG on stmt: $0.24 = getattr(value=$0.23, attr=abs)
2022-08-04 11:53:00,209 DEBUG on stmt: $const0.26 = const(int, 0)
2022-08-04 11:53:00,209 DEBUG on stmt: $0.27 = static_getitem(value=q, index=0, index_var=$const0.26, fn=<built-in function getitem>)
2022-08-04 11:53:00,209 DEBUG on stmt: $0.28 = call $0.24($0.27, func=$0.24, args=[Var($0.27, algebra.py:228)], kws=(), vararg=None)
2022-08-04 11:53:00,209 DEBUG on stmt: $0.29 = $0.22 * $0.28
2022-08-04 11:53:00,209 DEBUG on stmt: $0.30 = b <= $0.29
2022-08-04 11:53:00,209 DEBUG on stmt: bool64 = global(bool: <class 'bool'>)
2022-08-04 11:53:00,209 DEBUG on stmt: $64pred = call bool64($0.30, func=bool64, args=(Var($0.30, algebra.py:228),), kws=(), vararg=None)
2022-08-04 11:53:00,209 DEBUG on stmt: branch $64pred, 66, 228
2022-08-04 11:53:00,209 DEBUG ==== SSA block analysis pass on 66
2022-08-04 11:53:00,209 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdbc6438>
2022-08-04 11:53:00,209 DEBUG on stmt: $const66.2 = const(int, 0)
2022-08-04 11:53:00,209 DEBUG on stmt: $66.3 = static_getitem(value=q, index=0, index_var=$const66.2, fn=<built-in function getitem>)
2022-08-04 11:53:00,209 DEBUG on stmt: $const66.4 = const(float, 0.0)
2022-08-04 11:53:00,209 DEBUG on stmt: $66.5 = $66.3 < $const66.4
2022-08-04 11:53:00,209 DEBUG on stmt: bool76 = global(bool: <class 'bool'>)
2022-08-04 11:53:00,209 DEBUG on stmt: $76pred = call bool76($66.5, func=bool76, args=(Var($66.5, algebra.py:229),), kws=(), vararg=None)
2022-08-04 11:53:00,209 DEBUG on stmt: branch $76pred, 78, 184
2022-08-04 11:53:00,210 DEBUG ==== SSA block analysis pass on 78
2022-08-04 11:53:00,210 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdbc6438>
2022-08-04 11:53:00,210 DEBUG on stmt: $78.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:00,210 DEBUG on stmt: $78.2 = getattr(value=$78.1, attr=abs)
2022-08-04 11:53:00,210 DEBUG on stmt: $const78.4 = const(int, 0)
2022-08-04 11:53:00,210 DEBUG on stmt: $78.5 = static_getitem(value=q, index=0, index_var=$const78.4, fn=<built-in function getitem>)
2022-08-04 11:53:00,210 DEBUG on stmt: $const78.6 = const(int, 1)
2022-08-04 11:53:00,210 DEBUG on stmt: $78.7 = $78.5 + $const78.6
2022-08-04 11:53:00,210 DEBUG on stmt: $78.8 = call $78.2($78.7, func=$78.2, args=[Var($78.7, algebra.py:230)], kws=(), vararg=None)
2022-08-04 11:53:00,210 DEBUG on stmt: $78.9 = global(_quaternion_resolution: 1.0000000000000002e-14)
2022-08-04 11:53:00,210 DEBUG on stmt: $78.10 = $78.8 > $78.9
2022-08-04 11:53:00,210 DEBUG on stmt: bool98 = global(bool: <class 'bool'>)
2022-08-04 11:53:00,210 DEBUG on stmt: $98pred = call bool98($78.10, func=bool98, args=(Var($78.10, algebra.py:230),), kws=(), vararg=None)
2022-08-04 11:53:00,210 DEBUG on stmt: branch $98pred, 100, 148
2022-08-04 11:53:00,210 DEBUG ==== SSA block analysis pass on 100
2022-08-04 11:53:00,210 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdbc6438>
2022-08-04 11:53:00,210 DEBUG on stmt: $100.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:00,210 DEBUG on stmt: $100.2 = getattr(value=$100.1, attr=log)
2022-08-04 11:53:00,210 DEBUG on stmt: $const100.4 = const(int, 0)
2022-08-04 11:53:00,210 DEBUG on stmt: $100.5 = static_getitem(value=q, index=0, index_var=$const100.4, fn=<built-in function getitem>)
2022-08-04 11:53:00,210 DEBUG on stmt: $100.6 = unary(fn=<built-in function neg>, value=$100.5)
2022-08-04 11:53:00,210 DEBUG on stmt: $100.7 = call $100.2($100.6, func=$100.2, args=[Var($100.6, algebra.py:231)], kws=(), vararg=None)
2022-08-04 11:53:00,211 DEBUG on stmt: $const100.9 = const(int, 0)
2022-08-04 11:53:00,211 DEBUG on stmt: qout[0] = $100.7
2022-08-04 11:53:00,211 DEBUG on stmt: $100.10 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:00,211 DEBUG on stmt: $100.11 = getattr(value=$100.10, attr=pi)
2022-08-04 11:53:00,211 DEBUG on stmt: $const100.13 = const(int, 1)
2022-08-04 11:53:00,211 DEBUG on stmt: qout[1] = $100.11
2022-08-04 11:53:00,211 DEBUG on stmt: $const100.14 = const(float, 0.0)
2022-08-04 11:53:00,211 DEBUG on stmt: $const100.16 = const(int, 2)
2022-08-04 11:53:00,211 DEBUG on stmt: qout[2] = $const100.14
2022-08-04 11:53:00,211 DEBUG on stmt: $const100.17 = const(float, 0.0)
2022-08-04 11:53:00,211 DEBUG on stmt: $const100.19 = const(int, 3)
2022-08-04 11:53:00,211 DEBUG on stmt: qout[3] = $const100.17
2022-08-04 11:53:00,211 DEBUG on stmt: jump 226
2022-08-04 11:53:00,211 DEBUG ==== SSA block analysis pass on 148
2022-08-04 11:53:00,211 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdbc6438>
2022-08-04 11:53:00,211 DEBUG on stmt: $const148.1 = const(float, 0.0)
2022-08-04 11:53:00,211 DEBUG on stmt: $const148.3 = const(int, 0)
2022-08-04 11:53:00,211 DEBUG on stmt: qout[0] = $const148.1
2022-08-04 11:53:00,211 DEBUG on stmt: $148.4 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:00,211 DEBUG on stmt: $148.5 = getattr(value=$148.4, attr=pi)
2022-08-04 11:53:00,211 DEBUG on stmt: $const148.7 = const(int, 1)
2022-08-04 11:53:00,211 DEBUG on stmt: qout[1] = $148.5
2022-08-04 11:53:00,211 DEBUG on stmt: $const148.8 = const(float, 0.0)
2022-08-04 11:53:00,212 DEBUG on stmt: $const148.10 = const(int, 2)
2022-08-04 11:53:00,212 DEBUG on stmt: qout[2] = $const148.8
2022-08-04 11:53:00,212 DEBUG on stmt: $const148.11 = const(float, 0.0)
2022-08-04 11:53:00,212 DEBUG on stmt: $const148.13 = const(int, 3)
2022-08-04 11:53:00,212 DEBUG on stmt: qout[3] = $const148.11
2022-08-04 11:53:00,212 DEBUG on stmt: jump 226
2022-08-04 11:53:00,212 DEBUG ==== SSA block analysis pass on 184
2022-08-04 11:53:00,212 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdbc6438>
2022-08-04 11:53:00,212 DEBUG on stmt: $184.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:00,212 DEBUG on stmt: $184.2 = getattr(value=$184.1, attr=log)
2022-08-04 11:53:00,212 DEBUG on stmt: $const184.4 = const(int, 0)
2022-08-04 11:53:00,212 DEBUG on stmt: $184.5 = static_getitem(value=q, index=0, index_var=$const184.4, fn=<built-in function getitem>)
2022-08-04 11:53:00,212 DEBUG on stmt: $184.6 = call $184.2($184.5, func=$184.2, args=[Var($184.5, algebra.py:241)], kws=(), vararg=None)
2022-08-04 11:53:00,212 DEBUG on stmt: $const184.8 = const(int, 0)
2022-08-04 11:53:00,212 DEBUG on stmt: qout[0] = $184.6
2022-08-04 11:53:00,212 DEBUG on stmt: $const184.9 = const(float, 0.0)
2022-08-04 11:53:00,212 DEBUG on stmt: $const184.11 = const(int, 1)
2022-08-04 11:53:00,212 DEBUG on stmt: qout[1] = $const184.9
2022-08-04 11:53:00,212 DEBUG on stmt: $const184.12 = const(float, 0.0)
2022-08-04 11:53:00,212 DEBUG on stmt: $const184.14 = const(int, 2)
2022-08-04 11:53:00,212 DEBUG on stmt: qout[2] = $const184.12
2022-08-04 11:53:00,212 DEBUG on stmt: $const184.15 = const(float, 0.0)
2022-08-04 11:53:00,212 DEBUG on stmt: $const184.17 = const(int, 3)
2022-08-04 11:53:00,213 DEBUG on stmt: qout[3] = $const184.15
2022-08-04 11:53:00,213 DEBUG on stmt: jump 226
2022-08-04 11:53:00,213 DEBUG ==== SSA block analysis pass on 226
2022-08-04 11:53:00,213 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdbc6438>
2022-08-04 11:53:00,213 DEBUG on stmt: jump 338
2022-08-04 11:53:00,213 DEBUG ==== SSA block analysis pass on 228
2022-08-04 11:53:00,213 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdbc6438>
2022-08-04 11:53:00,213 DEBUG on stmt: $228.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:00,213 DEBUG on stmt: $228.2 = getattr(value=$228.1, attr=arctan2)
2022-08-04 11:53:00,213 DEBUG on stmt: $const228.5 = const(int, 0)
2022-08-04 11:53:00,213 DEBUG on stmt: $228.6 = static_getitem(value=q, index=0, index_var=$const228.5, fn=<built-in function getitem>)
2022-08-04 11:53:00,213 DEBUG on stmt: v = call $228.2(b, $228.6, func=$228.2, args=[Var(b, algebra.py:227), Var($228.6, algebra.py:246)], kws=(), vararg=None)
2022-08-04 11:53:00,213 DEBUG on stmt: f = v / b
2022-08-04 11:53:00,213 DEBUG on stmt: $228.11 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:00,213 DEBUG on stmt: $228.12 = getattr(value=$228.11, attr=log)
2022-08-04 11:53:00,213 DEBUG on stmt: $const228.14 = const(int, 0)
2022-08-04 11:53:00,213 DEBUG on stmt: $228.15 = static_getitem(value=q, index=0, index_var=$const228.14, fn=<built-in function getitem>)
2022-08-04 11:53:00,213 DEBUG on stmt: $const228.17 = const(int, 0)
2022-08-04 11:53:00,213 DEBUG on stmt: $228.18 = static_getitem(value=q, index=0, index_var=$const228.17, fn=<built-in function getitem>)
2022-08-04 11:53:00,213 DEBUG on stmt: $228.19 = $228.15 * $228.18
2022-08-04 11:53:00,213 DEBUG on stmt: $228.22 = b * b
2022-08-04 11:53:00,214 DEBUG on stmt: $228.23 = $228.19 + $228.22
2022-08-04 11:53:00,214 DEBUG on stmt: $228.24 = call $228.12($228.23, func=$228.12, args=[Var($228.23, algebra.py:248)], kws=(), vararg=None)
2022-08-04 11:53:00,214 DEBUG on stmt: $const228.25 = const(float, 2.0)
2022-08-04 11:53:00,214 DEBUG on stmt: $228.26 = $228.24 / $const228.25
2022-08-04 11:53:00,214 DEBUG on stmt: $const228.28 = const(int, 0)
2022-08-04 11:53:00,214 DEBUG on stmt: qout[0] = $228.26
2022-08-04 11:53:00,214 DEBUG on stmt: $const228.31 = const(int, 1)
2022-08-04 11:53:00,214 DEBUG on stmt: $228.32 = static_getitem(value=q, index=1, index_var=$const228.31, fn=<built-in function getitem>)
2022-08-04 11:53:00,214 DEBUG on stmt: $228.33 = f * $228.32
2022-08-04 11:53:00,214 DEBUG on stmt: $const228.35 = const(int, 1)
2022-08-04 11:53:00,214 DEBUG on stmt: qout[1] = $228.33
2022-08-04 11:53:00,214 DEBUG on stmt: $const228.38 = const(int, 2)
2022-08-04 11:53:00,214 DEBUG on stmt: $228.39 = static_getitem(value=q, index=2, index_var=$const228.38, fn=<built-in function getitem>)
2022-08-04 11:53:00,214 DEBUG on stmt: $228.40 = f * $228.39
2022-08-04 11:53:00,214 DEBUG on stmt: $const228.42 = const(int, 2)
2022-08-04 11:53:00,214 DEBUG on stmt: qout[2] = $228.40
2022-08-04 11:53:00,214 DEBUG on stmt: $const228.45 = const(int, 3)
2022-08-04 11:53:00,214 DEBUG on stmt: $228.46 = static_getitem(value=q, index=3, index_var=$const228.45, fn=<built-in function getitem>)
2022-08-04 11:53:00,214 DEBUG on stmt: $228.47 = f * $228.46
2022-08-04 11:53:00,214 DEBUG on stmt: $const228.49 = const(int, 3)
2022-08-04 11:53:00,214 DEBUG on stmt: qout[3] = $228.47
2022-08-04 11:53:00,214 DEBUG on stmt: jump 338
2022-08-04 11:53:00,214 DEBUG ==== SSA block analysis pass on 338
2022-08-04 11:53:00,214 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdbc6438>
2022-08-04 11:53:00,215 DEBUG on stmt: $const338.1 = const(NoneType, None)
2022-08-04 11:53:00,215 DEBUG on stmt: $338.2 = cast(value=$const338.1)
2022-08-04 11:53:00,215 DEBUG on stmt: return $338.2
2022-08-04 11:53:00,216 DEBUG defs defaultdict(<class 'list'>,
            {'$0.1': [<numba.core.ir.Assign object at 0x7fa2cdba25c0>],
             '$0.10': [<numba.core.ir.Assign object at 0x7fa2ce04ce80>],
             '$0.12': [<numba.core.ir.Assign object at 0x7fa2cdc072e8>],
             '$0.13': [<numba.core.ir.Assign object at 0x7fa2cdc073c8>],
             '$0.16': [<numba.core.ir.Assign object at 0x7fa2ce04cef0>],
             '$0.18': [<numba.core.ir.Assign object at 0x7fa2cdc077f0>],
             '$0.19': [<numba.core.ir.Assign object at 0x7fa2cdc078d0>],
             '$0.2': [<numba.core.ir.Assign object at 0x7fa2cdb679e8>],
             '$0.22': [<numba.core.ir.Assign object at 0x7fa2cdc07d30>],
             '$0.23': [<numba.core.ir.Assign object at 0x7fa2cdc07fd0>],
             '$0.24': [<numba.core.ir.Assign object at 0x7fa2ce00e048>],
             '$0.27': [<numba.core.ir.Assign object at 0x7fa2ce04cf60>],
             '$0.28': [<numba.core.ir.Assign object at 0x7fa2ce01e588>],
             '$0.29': [<numba.core.ir.Assign object at 0x7fa2ce01e668>],
             '$0.30': [<numba.core.ir.Assign object at 0x7fa2ce01e748>],
             '$0.5': [<numba.core.ir.Assign object at 0x7fa2ce04ce10>],
             '$0.7': [<numba.core.ir.Assign object at 0x7fa2cdbc9ba8>],
             '$100.1': [<numba.core.ir.Assign object at 0x7fa2ce035b38>],
             '$100.10': [<numba.core.ir.Assign object at 0x7fa2ce039358>],
             '$100.11': [<numba.core.ir.Assign object at 0x7fa2ce039438>],
             '$100.2': [<numba.core.ir.Assign object at 0x7fa2ce035c18>],
             '$100.5': [<numba.core.ir.Assign object at 0x7fa2ce040b70>],
             '$100.6': [<numba.core.ir.Assign object at 0x7fa2ce035f60>],
             '$100.7': [<numba.core.ir.Assign object at 0x7fa2ce039080>],
             '$148.4': [<numba.core.ir.Assign object at 0x7fa2ce039f60>],
             '$148.5': [<numba.core.ir.Assign object at 0x7fa2ce03c080>],
             '$184.1': [<numba.core.ir.Assign object at 0x7fa2ce03c908>],
             '$184.2': [<numba.core.ir.Assign object at 0x7fa2ce03c9e8>],
             '$184.5': [<numba.core.ir.Assign object at 0x7fa2cdbcfe48>],
             '$184.6': [<numba.core.ir.Assign object at 0x7fa2ce03cd30>],
             '$228.1': [<numba.core.ir.Assign object at 0x7fa2ce040940>],
             '$228.11': [<numba.core.ir.Assign object at 0x7fa2ce0442b0>],
             '$228.12': [<numba.core.ir.Assign object at 0x7fa2ce044390>],
             '$228.15': [<numba.core.ir.Assign object at 0x7fa2cdbfba90>],
             '$228.18': [<numba.core.ir.Assign object at 0x7fa2cdbd59e8>],
             '$228.19': [<numba.core.ir.Assign object at 0x7fa2ce044940>],
             '$228.2': [<numba.core.ir.Assign object at 0x7fa2ce040a20>],
             '$228.22': [<numba.core.ir.Assign object at 0x7fa2ce044b70>],
             '$228.23': [<numba.core.ir.Assign object at 0x7fa2ce044c50>],
             '$228.24': [<numba.core.ir.Assign object at 0x7fa2ce044d30>],
             '$228.26': [<numba.core.ir.Assign object at 0x7fa2ce044ef0>],
             '$228.32': [<numba.core.ir.Assign object at 0x7fa2cdbd5710>],
             '$228.33': [<numba.core.ir.Assign object at 0x7fa2ce049518>],
             '$228.39': [<numba.core.ir.Assign object at 0x7fa2cdbd5080>],
             '$228.40': [<numba.core.ir.Assign object at 0x7fa2ce049b00>],
             '$228.46': [<numba.core.ir.Assign object at 0x7fa2cdbcf278>],
             '$228.47': [<numba.core.ir.Assign object at 0x7fa2ce04c128>],
             '$228.6': [<numba.core.ir.Assign object at 0x7fa2cdbfb320>],
             '$338.2': [<numba.core.ir.Assign object at 0x7fa2ce049ba8>],
             '$64pred': [<numba.core.ir.Assign object at 0x7fa2ce01e940>],
             '$66.3': [<numba.core.ir.Assign object at 0x7fa2ce04cd68>],
             '$66.5': [<numba.core.ir.Assign object at 0x7fa2ce01ecc0>],
             '$76pred': [<numba.core.ir.Assign object at 0x7fa2ce01eeb8>],
             '$78.1': [<numba.core.ir.Assign object at 0x7fa2ce035048>],
             '$78.10': [<numba.core.ir.Assign object at 0x7fa2ce0357f0>],
             '$78.2': [<numba.core.ir.Assign object at 0x7fa2ce035128>],
             '$78.5': [<numba.core.ir.Assign object at 0x7fa2ce040eb8>],
             '$78.7': [<numba.core.ir.Assign object at 0x7fa2ce035550>],
             '$78.8': [<numba.core.ir.Assign object at 0x7fa2ce035630>],
             '$78.9': [<numba.core.ir.Assign object at 0x7fa2ce035710>],
             '$98pred': [<numba.core.ir.Assign object at 0x7fa2ce0359e8>],
             '$const0.11': [<numba.core.ir.Assign object at 0x7fa2cdc07208>],
             '$const0.15': [<numba.core.ir.Assign object at 0x7fa2cdc07550>],
             '$const0.17': [<numba.core.ir.Assign object at 0x7fa2cdc07710>],
             '$const0.26': [<numba.core.ir.Assign object at 0x7fa2ce01e320>],
             '$const0.4': [<numba.core.ir.Assign object at 0x7fa2cdb67e48>],
             '$const0.6': [<numba.core.ir.Assign object at 0x7fa2cdbc95f8>],
             '$const0.9': [<numba.core.ir.Assign object at 0x7fa2cdc07048>],
             '$const100.13': [<numba.core.ir.Assign object at 0x7fa2ce0395c0>],
             '$const100.14': [<numba.core.ir.Assign object at 0x7fa2ce039710>],
             '$const100.16': [<numba.core.ir.Assign object at 0x7fa2ce039898>],
             '$const100.17': [<numba.core.ir.Assign object at 0x7fa2ce0399e8>],
             '$const100.19': [<numba.core.ir.Assign object at 0x7fa2ce039b70>],
             '$const100.4': [<numba.core.ir.Assign object at 0x7fa2ce035da0>],
             '$const100.9': [<numba.core.ir.Assign object at 0x7fa2ce039208>],
             '$const148.1': [<numba.core.ir.Assign object at 0x7fa2ce039c88>],
             '$const148.10': [<numba.core.ir.Assign object at 0x7fa2ce03c4e0>],
             '$const148.11': [<numba.core.ir.Assign object at 0x7fa2ce03c630>],
             '$const148.13': [<numba.core.ir.Assign object at 0x7fa2ce03c7b8>],
             '$const148.3': [<numba.core.ir.Assign object at 0x7fa2ce039e10>],
             '$const148.7': [<numba.core.ir.Assign object at 0x7fa2ce03c208>],
             '$const148.8': [<numba.core.ir.Assign object at 0x7fa2ce03c358>],
             '$const184.11': [<numba.core.ir.Assign object at 0x7fa2ce0401d0>],
             '$const184.12': [<numba.core.ir.Assign object at 0x7fa2ce040320>],
             '$const184.14': [<numba.core.ir.Assign object at 0x7fa2ce0404a8>],
             '$const184.15': [<numba.core.ir.Assign object at 0x7fa2ce0405f8>],
             '$const184.17': [<numba.core.ir.Assign object at 0x7fa2ce040780>],
             '$const184.4': [<numba.core.ir.Assign object at 0x7fa2ce03cb70>],
             '$const184.8': [<numba.core.ir.Assign object at 0x7fa2ce03ceb8>],
             '$const184.9': [<numba.core.ir.Assign object at 0x7fa2ce040048>],
             '$const228.14': [<numba.core.ir.Assign object at 0x7fa2ce044518>],
             '$const228.17': [<numba.core.ir.Assign object at 0x7fa2ce044780>],
             '$const228.25': [<numba.core.ir.Assign object at 0x7fa2ce044e10>],
             '$const228.28': [<numba.core.ir.Assign object at 0x7fa2ce0490b8>],
             '$const228.31': [<numba.core.ir.Assign object at 0x7fa2ce049358>],
             '$const228.35': [<numba.core.ir.Assign object at 0x7fa2ce0496a0>],
             '$const228.38': [<numba.core.ir.Assign object at 0x7fa2ce049940>],
             '$const228.42': [<numba.core.ir.Assign object at 0x7fa2ce049c88>],
             '$const228.45': [<numba.core.ir.Assign object at 0x7fa2ce049f28>],
             '$const228.49': [<numba.core.ir.Assign object at 0x7fa2ce04c2b0>],
             '$const228.5': [<numba.core.ir.Assign object at 0x7fa2ce040c50>],
             '$const338.1': [<numba.core.ir.Assign object at 0x7fa2ce049278>],
             '$const66.2': [<numba.core.ir.Assign object at 0x7fa2ce01ea20>],
             '$const66.4': [<numba.core.ir.Assign object at 0x7fa2ce01ebe0>],
             '$const78.4': [<numba.core.ir.Assign object at 0x7fa2ce0352b0>],
             '$const78.6': [<numba.core.ir.Assign object at 0x7fa2ce035470>],
             'b': [<numba.core.ir.Assign object at 0x7fa2cdc079b0>],
             'bool64': [<numba.core.ir.Assign object at 0x7fa2ce01e860>],
             'bool76': [<numba.core.ir.Assign object at 0x7fa2ce01edd8>],
             'bool98': [<numba.core.ir.Assign object at 0x7fa2ce035908>],
             'f': [<numba.core.ir.Assign object at 0x7fa2ce044128>],
             'q': [<numba.core.ir.Assign object at 0x7fa2cdbbe400>],
             'qout': [<numba.core.ir.Assign object at 0x7fa2cdbbee80>],
             'v': [<numba.core.ir.Assign object at 0x7fa2ce040e10>]})
2022-08-04 11:53:00,217 DEBUG SSA violators set()
2022-08-04 11:53:00,533 DEBUG label 0:
    q = arg(0, name=q)                       ['q']
    qout = arg(1, name=qout)                 ['qout']
    $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$0.1']
    $0.2 = getattr(value=$0.1, attr=sqrt)    ['$0.1', '$0.2']
    $const0.4 = const(int, 0)                ['$const0.4']
    $0.5 = getitem(value=q, index=$const0.4, fn=<built-in function getitem>) ['$0.5', '$const0.4', 'q']
    $const0.6 = const(int, 2)                ['$const0.6']
    $0.7 = $0.5 ** $const0.6                 ['$0.5', '$0.7', '$const0.6']
    $const0.9 = const(int, 1)                ['$const0.9']
    $0.10 = getitem(value=q, index=$const0.9, fn=<built-in function getitem>) ['$0.10', '$const0.9', 'q']
    $const0.11 = const(int, 2)               ['$const0.11']
    $0.12 = $0.10 ** $const0.11              ['$0.10', '$0.12', '$const0.11']
    $0.13 = $0.7 + $0.12                     ['$0.12', '$0.13', '$0.7']
    $const0.15 = const(int, 2)               ['$const0.15']
    $0.16 = getitem(value=q, index=$const0.15, fn=<built-in function getitem>) ['$0.16', '$const0.15', 'q']
    $const0.17 = const(int, 2)               ['$const0.17']
    $0.18 = $0.16 ** $const0.17              ['$0.16', '$0.18', '$const0.17']
    $0.19 = $0.13 + $0.18                    ['$0.13', '$0.18', '$0.19']
    $const0.21 = const(int, 3)               ['$const0.21']
    $0.22 = getitem(value=q, index=$const0.21, fn=<built-in function getitem>) ['$0.22', '$const0.21', 'q']
    $const0.23 = const(int, 2)               ['$const0.23']
    $0.24 = $0.22 ** $const0.23              ['$0.22', '$0.24', '$const0.23']
    $0.25 = $0.19 + $0.24                    ['$0.19', '$0.24', '$0.25']
    $0.26 = call $0.2($0.25, func=$0.2, args=[Var($0.25, algebra.py:191)], kws=(), vararg=None) ['$0.2', '$0.25', '$0.26']
    $const0.28 = const(int, 0)               ['$const0.28']
    qout[$const0.28] = $0.26                 ['$0.26', '$const0.28', 'qout']
    $const0.29 = const(NoneType, None)       ['$const0.29']
    $0.30 = cast(value=$const0.29)           ['$0.30', '$const0.29']
    return $0.30                             ['$0.30']

2022-08-04 11:53:00,538 DEBUG ==== SSA block analysis pass on 0
2022-08-04 11:53:00,538 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdbc6ac8>
2022-08-04 11:53:00,538 DEBUG on stmt: q = arg(0, name=q)
2022-08-04 11:53:00,538 DEBUG on stmt: qout = arg(1, name=qout)
2022-08-04 11:53:00,538 DEBUG on stmt: $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:00,539 DEBUG on stmt: $0.2 = getattr(value=$0.1, attr=sqrt)
2022-08-04 11:53:00,539 DEBUG on stmt: $const0.4 = const(int, 0)
2022-08-04 11:53:00,539 DEBUG on stmt: $0.5 = static_getitem(value=q, index=0, index_var=$const0.4, fn=<built-in function getitem>)
2022-08-04 11:53:00,539 DEBUG on stmt: $const0.6 = const(int, 2)
2022-08-04 11:53:00,539 DEBUG on stmt: $0.7 = $0.5 ** $const0.6
2022-08-04 11:53:00,539 DEBUG on stmt: $const0.9 = const(int, 1)
2022-08-04 11:53:00,539 DEBUG on stmt: $0.10 = static_getitem(value=q, index=1, index_var=$const0.9, fn=<built-in function getitem>)
2022-08-04 11:53:00,539 DEBUG on stmt: $const0.11 = const(int, 2)
2022-08-04 11:53:00,539 DEBUG on stmt: $0.12 = $0.10 ** $const0.11
2022-08-04 11:53:00,540 DEBUG on stmt: $0.13 = $0.7 + $0.12
2022-08-04 11:53:00,540 DEBUG on stmt: $const0.15 = const(int, 2)
2022-08-04 11:53:00,540 DEBUG on stmt: $0.16 = static_getitem(value=q, index=2, index_var=$const0.15, fn=<built-in function getitem>)
2022-08-04 11:53:00,540 DEBUG on stmt: $const0.17 = const(int, 2)
2022-08-04 11:53:00,540 DEBUG on stmt: $0.18 = $0.16 ** $const0.17
2022-08-04 11:53:00,540 DEBUG on stmt: $0.19 = $0.13 + $0.18
2022-08-04 11:53:00,540 DEBUG on stmt: $const0.21 = const(int, 3)
2022-08-04 11:53:00,540 DEBUG on stmt: $0.22 = static_getitem(value=q, index=3, index_var=$const0.21, fn=<built-in function getitem>)
2022-08-04 11:53:00,540 DEBUG on stmt: $const0.23 = const(int, 2)
2022-08-04 11:53:00,540 DEBUG on stmt: $0.24 = $0.22 ** $const0.23
2022-08-04 11:53:00,540 DEBUG on stmt: $0.25 = $0.19 + $0.24
2022-08-04 11:53:00,540 DEBUG on stmt: $0.26 = call $0.2($0.25, func=$0.2, args=[Var($0.25, algebra.py:191)], kws=(), vararg=None)
2022-08-04 11:53:00,540 DEBUG on stmt: $const0.28 = const(int, 0)
2022-08-04 11:53:00,541 DEBUG on stmt: qout[0] = $0.26
2022-08-04 11:53:00,541 DEBUG on stmt: $const0.29 = const(NoneType, None)
2022-08-04 11:53:00,541 DEBUG on stmt: $0.30 = cast(value=$const0.29)
2022-08-04 11:53:00,541 DEBUG on stmt: return $0.30
2022-08-04 11:53:00,541 DEBUG defs defaultdict(<class 'list'>,
            {'$0.1': [<numba.core.ir.Assign object at 0x7fa2ce05c358>],
             '$0.10': [<numba.core.ir.Assign object at 0x7fa2ce061080>],
             '$0.12': [<numba.core.ir.Assign object at 0x7fa2ce049128>],
             '$0.13': [<numba.core.ir.Assign object at 0x7fa2ce049a20>],
             '$0.16': [<numba.core.ir.Assign object at 0x7fa2ce061c18>],
             '$0.18': [<numba.core.ir.Assign object at 0x7fa2ce03c278>],
             '$0.19': [<numba.core.ir.Assign object at 0x7fa2ce039278>],
             '$0.2': [<numba.core.ir.Assign object at 0x7fa2ce0689b0>],
             '$0.22': [<numba.core.ir.Assign object at 0x7fa2ce061ba8>],
             '$0.24': [<numba.core.ir.Assign object at 0x7fa2ce01ef28>],
             '$0.25': [<numba.core.ir.Assign object at 0x7fa2ce01e438>],
             '$0.26': [<numba.core.ir.Assign object at 0x7fa2ce044588>],
             '$0.30': [<numba.core.ir.Assign object at 0x7fa2ce0617f0>],
             '$0.5': [<numba.core.ir.Assign object at 0x7fa2ce248b38>],
             '$0.7': [<numba.core.ir.Assign object at 0x7fa2ce068fd0>],
             '$const0.11': [<numba.core.ir.Assign object at 0x7fa2ce0689e8>],
             '$const0.15': [<numba.core.ir.Assign object at 0x7fa2ce04c320>],
             '$const0.17': [<numba.core.ir.Assign object at 0x7fa2ce03cdd8>],
             '$const0.21': [<numba.core.ir.Assign object at 0x7fa2ce035e10>],
             '$const0.23': [<numba.core.ir.Assign object at 0x7fa2cdc07128>],
             '$const0.28': [<numba.core.ir.Assign object at 0x7fa2cdbcf208>],
             '$const0.29': [<numba.core.ir.Assign object at 0x7fa2ce061438>],
             '$const0.4': [<numba.core.ir.Assign object at 0x7fa2ce068d30>],
             '$const0.6': [<numba.core.ir.Assign object at 0x7fa2ce068ef0>],
             '$const0.9': [<numba.core.ir.Assign object at 0x7fa2ce068b70>],
             'q': [<numba.core.ir.Assign object at 0x7fa2ce05c0f0>],
             'qout': [<numba.core.ir.Assign object at 0x7fa2ce05c1d0>]})
2022-08-04 11:53:00,542 DEBUG SSA violators set()
2022-08-04 11:53:00,823 DEBUG label 0:
    q1 = arg(0, name=q1)                     ['q1']
    q2 = arg(1, name=q2)                     ['q2']
    out = arg(2, name=out)                   ['out']
    $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$0.1']
    $0.2 = getattr(value=$0.1, attr=sqrt)    ['$0.1', '$0.2']
    $const0.4 = const(int, 0)                ['$const0.4']
    $0.5 = getitem(value=q1, index=$const0.4, fn=<built-in function getitem>) ['$0.5', '$const0.4', 'q1']
    $const0.7 = const(int, 0)                ['$const0.7']
    $0.8 = getitem(value=q2, index=$const0.7, fn=<built-in function getitem>) ['$0.8', '$const0.7', 'q2']
    $0.9 = $0.5 - $0.8                       ['$0.5', '$0.8', '$0.9']
    $const0.10 = const(int, 2)               ['$const0.10']
    $0.11 = $0.9 ** $const0.10               ['$0.11', '$0.9', '$const0.10']
    $const0.13 = const(int, 1)               ['$const0.13']
    $0.14 = getitem(value=q1, index=$const0.13, fn=<built-in function getitem>) ['$0.14', '$const0.13', 'q1']
    $const0.16 = const(int, 1)               ['$const0.16']
    $0.17 = getitem(value=q2, index=$const0.16, fn=<built-in function getitem>) ['$0.17', '$const0.16', 'q2']
    $0.18 = $0.14 - $0.17                    ['$0.14', '$0.17', '$0.18']
    $const0.19 = const(int, 2)               ['$const0.19']
    $0.20 = $0.18 ** $const0.19              ['$0.18', '$0.20', '$const0.19']
    $0.21 = $0.11 + $0.20                    ['$0.11', '$0.20', '$0.21']
    $const0.23 = const(int, 2)               ['$const0.23']
    $0.24 = getitem(value=q1, index=$const0.23, fn=<built-in function getitem>) ['$0.24', '$const0.23', 'q1']
    $const0.26 = const(int, 2)               ['$const0.26']
    $0.27 = getitem(value=q2, index=$const0.26, fn=<built-in function getitem>) ['$0.27', '$const0.26', 'q2']
    $0.28 = $0.24 - $0.27                    ['$0.24', '$0.27', '$0.28']
    $const0.29 = const(int, 2)               ['$const0.29']
    $0.30 = $0.28 ** $const0.29              ['$0.28', '$0.30', '$const0.29']
    $0.31 = $0.21 + $0.30                    ['$0.21', '$0.30', '$0.31']
    $const0.33 = const(int, 3)               ['$const0.33']
    $0.34 = getitem(value=q1, index=$const0.33, fn=<built-in function getitem>) ['$0.34', '$const0.33', 'q1']
    $const0.36 = const(int, 3)               ['$const0.36']
    $0.37 = getitem(value=q2, index=$const0.36, fn=<built-in function getitem>) ['$0.37', '$const0.36', 'q2']
    $0.38 = $0.34 - $0.37                    ['$0.34', '$0.37', '$0.38']
    $const0.39 = const(int, 2)               ['$const0.39']
    $0.40 = $0.38 ** $const0.39              ['$0.38', '$0.40', '$const0.39']
    $0.41 = $0.31 + $0.40                    ['$0.31', '$0.40', '$0.41']
    $0.42 = call $0.2($0.41, func=$0.2, args=[Var($0.41, distance.py:76)], kws=(), vararg=None) ['$0.2', '$0.41', '$0.42']
    $const0.44 = const(int, 0)               ['$const0.44']
    out[$const0.44] = $0.42                  ['$0.42', '$const0.44', 'out']
    $const0.45 = const(NoneType, None)       ['$const0.45']
    $0.46 = cast(value=$const0.45)           ['$0.46', '$const0.45']
    return $0.46                             ['$0.46']

2022-08-04 11:53:00,830 DEBUG ==== SSA block analysis pass on 0
2022-08-04 11:53:00,830 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce2d8eb8>
2022-08-04 11:53:00,831 DEBUG on stmt: q1 = arg(0, name=q1)
2022-08-04 11:53:00,831 DEBUG on stmt: q2 = arg(1, name=q2)
2022-08-04 11:53:00,831 DEBUG on stmt: out = arg(2, name=out)
2022-08-04 11:53:00,831 DEBUG on stmt: $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:00,831 DEBUG on stmt: $0.2 = getattr(value=$0.1, attr=sqrt)
2022-08-04 11:53:00,831 DEBUG on stmt: $const0.4 = const(int, 0)
2022-08-04 11:53:00,831 DEBUG on stmt: $0.5 = static_getitem(value=q1, index=0, index_var=$const0.4, fn=<built-in function getitem>)
2022-08-04 11:53:00,831 DEBUG on stmt: $const0.7 = const(int, 0)
2022-08-04 11:53:00,831 DEBUG on stmt: $0.8 = static_getitem(value=q2, index=0, index_var=$const0.7, fn=<built-in function getitem>)
2022-08-04 11:53:00,831 DEBUG on stmt: $0.9 = $0.5 - $0.8
2022-08-04 11:53:00,831 DEBUG on stmt: $const0.10 = const(int, 2)
2022-08-04 11:53:00,831 DEBUG on stmt: $0.11 = $0.9 ** $const0.10
2022-08-04 11:53:00,831 DEBUG on stmt: $const0.13 = const(int, 1)
2022-08-04 11:53:00,831 DEBUG on stmt: $0.14 = static_getitem(value=q1, index=1, index_var=$const0.13, fn=<built-in function getitem>)
2022-08-04 11:53:00,832 DEBUG on stmt: $const0.16 = const(int, 1)
2022-08-04 11:53:00,832 DEBUG on stmt: $0.17 = static_getitem(value=q2, index=1, index_var=$const0.16, fn=<built-in function getitem>)
2022-08-04 11:53:00,832 DEBUG on stmt: $0.18 = $0.14 - $0.17
2022-08-04 11:53:00,832 DEBUG on stmt: $const0.19 = const(int, 2)
2022-08-04 11:53:00,832 DEBUG on stmt: $0.20 = $0.18 ** $const0.19
2022-08-04 11:53:00,832 DEBUG on stmt: $0.21 = $0.11 + $0.20
2022-08-04 11:53:00,832 DEBUG on stmt: $const0.23 = const(int, 2)
2022-08-04 11:53:00,832 DEBUG on stmt: $0.24 = static_getitem(value=q1, index=2, index_var=$const0.23, fn=<built-in function getitem>)
2022-08-04 11:53:00,832 DEBUG on stmt: $const0.26 = const(int, 2)
2022-08-04 11:53:00,832 DEBUG on stmt: $0.27 = static_getitem(value=q2, index=2, index_var=$const0.26, fn=<built-in function getitem>)
2022-08-04 11:53:00,832 DEBUG on stmt: $0.28 = $0.24 - $0.27
2022-08-04 11:53:00,832 DEBUG on stmt: $const0.29 = const(int, 2)
2022-08-04 11:53:00,833 DEBUG on stmt: $0.30 = $0.28 ** $const0.29
2022-08-04 11:53:00,833 DEBUG on stmt: $0.31 = $0.21 + $0.30
2022-08-04 11:53:00,833 DEBUG on stmt: $const0.33 = const(int, 3)
2022-08-04 11:53:00,833 DEBUG on stmt: $0.34 = static_getitem(value=q1, index=3, index_var=$const0.33, fn=<built-in function getitem>)
2022-08-04 11:53:00,833 DEBUG on stmt: $const0.36 = const(int, 3)
2022-08-04 11:53:00,833 DEBUG on stmt: $0.37 = static_getitem(value=q2, index=3, index_var=$const0.36, fn=<built-in function getitem>)
2022-08-04 11:53:00,833 DEBUG on stmt: $0.38 = $0.34 - $0.37
2022-08-04 11:53:00,833 DEBUG on stmt: $const0.39 = const(int, 2)
2022-08-04 11:53:00,833 DEBUG on stmt: $0.40 = $0.38 ** $const0.39
2022-08-04 11:53:00,833 DEBUG on stmt: $0.41 = $0.31 + $0.40
2022-08-04 11:53:00,833 DEBUG on stmt: $0.42 = call $0.2($0.41, func=$0.2, args=[Var($0.41, distance.py:76)], kws=(), vararg=None)
2022-08-04 11:53:00,833 DEBUG on stmt: $const0.44 = const(int, 0)
2022-08-04 11:53:00,833 DEBUG on stmt: out[0] = $0.42
2022-08-04 11:53:00,834 DEBUG on stmt: $const0.45 = const(NoneType, None)
2022-08-04 11:53:00,834 DEBUG on stmt: $0.46 = cast(value=$const0.45)
2022-08-04 11:53:00,834 DEBUG on stmt: return $0.46
2022-08-04 11:53:00,834 DEBUG defs defaultdict(<class 'list'>,
            {'$0.1': [<numba.core.ir.Assign object at 0x7fa2ce2d9d30>],
             '$0.11': [<numba.core.ir.Assign object at 0x7fa2ce2cd780>],
             '$0.14': [<numba.core.ir.Assign object at 0x7fa2ce34b8d0>],
             '$0.17': [<numba.core.ir.Assign object at 0x7fa2ce34b940>],
             '$0.18': [<numba.core.ir.Assign object at 0x7fa2ce2cdd68>],
             '$0.2': [<numba.core.ir.Assign object at 0x7fa2ce2d9e10>],
             '$0.20': [<numba.core.ir.Assign object at 0x7fa2ce2cdeb8>],
             '$0.21': [<numba.core.ir.Assign object at 0x7fa2ce2cdfd0>],
             '$0.24': [<numba.core.ir.Assign object at 0x7fa2ce34b9b0>],
             '$0.27': [<numba.core.ir.Assign object at 0x7fa2ce34ba20>],
             '$0.28': [<numba.core.ir.Assign object at 0x7fa2ce348400>],
             '$0.30': [<numba.core.ir.Assign object at 0x7fa2ce3485c0>],
             '$0.31': [<numba.core.ir.Assign object at 0x7fa2ce3486a0>],
             '$0.34': [<numba.core.ir.Assign object at 0x7fa2ce34ba90>],
             '$0.37': [<numba.core.ir.Assign object at 0x7fa2ce34bb00>],
             '$0.38': [<numba.core.ir.Assign object at 0x7fa2ce348c50>],
             '$0.40': [<numba.core.ir.Assign object at 0x7fa2ce348e10>],
             '$0.41': [<numba.core.ir.Assign object at 0x7fa2ce348ef0>],
             '$0.42': [<numba.core.ir.Assign object at 0x7fa2ce348fd0>],
             '$0.46': [<numba.core.ir.Assign object at 0x7fa2ce34b3c8>],
             '$0.5': [<numba.core.ir.Assign object at 0x7fa2ce34b7f0>],
             '$0.8': [<numba.core.ir.Assign object at 0x7fa2ce34b860>],
             '$0.9': [<numba.core.ir.Assign object at 0x7fa2ce2cd588>],
             '$const0.10': [<numba.core.ir.Assign object at 0x7fa2ce2cd630>],
             '$const0.13': [<numba.core.ir.Assign object at 0x7fa2ce2cd8d0>],
             '$const0.16': [<numba.core.ir.Assign object at 0x7fa2ce2cdb70>],
             '$const0.19': [<numba.core.ir.Assign object at 0x7fa2ce2cdb38>],
             '$const0.23': [<numba.core.ir.Assign object at 0x7fa2ce2cd128>],
             '$const0.26': [<numba.core.ir.Assign object at 0x7fa2ce348240>],
             '$const0.29': [<numba.core.ir.Assign object at 0x7fa2ce3484e0>],
             '$const0.33': [<numba.core.ir.Assign object at 0x7fa2ce348828>],
             '$const0.36': [<numba.core.ir.Assign object at 0x7fa2ce348a90>],
             '$const0.39': [<numba.core.ir.Assign object at 0x7fa2ce348d30>],
             '$const0.4': [<numba.core.ir.Assign object at 0x7fa2ce2d9f98>],
             '$const0.44': [<numba.core.ir.Assign object at 0x7fa2ce34b198>],
             '$const0.45': [<numba.core.ir.Assign object at 0x7fa2ce34b2e8>],
             '$const0.7': [<numba.core.ir.Assign object at 0x7fa2ce2cd3c8>],
             'out': [<numba.core.ir.Assign object at 0x7fa2ce2d9c50>],
             'q1': [<numba.core.ir.Assign object at 0x7fa2ce2d9b00>],
             'q2': [<numba.core.ir.Assign object at 0x7fa2ce2d9ba8>]})
2022-08-04 11:53:00,834 DEBUG SSA violators set()
2022-08-04 11:53:00,961 DEBUG label 0:
    a = arg(0, name=a)                       ['a']
    b = arg(1, name=b)                       ['b']
    $0.1 = freevar(tp: float64)              ['$0.1']
    $const0.2 = const(int, 1)                ['$const0.2']
    r = call $0.1($const0.2, func=$0.1, args=[Var($const0.2, numbers.py:217)], kws=(), vararg=None) ['$0.1', '$const0.2', 'r']
    $0.4 = freevar(tp: float64)              ['$0.4']
    a.1 = call $0.4(a, func=$0.4, args=[Var(a, numbers.py:217)], kws=(), vararg=None) ['$0.4', 'a', 'a.1']
    $const0.8 = const(int, 0)                ['$const0.8']
    $0.9 = b < $const0.8                     ['$0.9', '$const0.8', 'b']
    bool24 = global(bool: <class 'bool'>)    ['bool24']
    $24pred = call bool24($0.9, func=bool24, args=(Var($0.9, numbers.py:219),), kws=(), vararg=None) ['$0.9', '$24pred', 'bool24']
    branch $24pred, 26, 98                   ['$24pred']
label 26:
    invert = const(bool, True)               ['invert']
    exp = unary(fn=<built-in function neg>, value=b) ['b', 'exp']
    $const26.5 = const(int, 0)               ['$const26.5']
    $26.6 = exp < $const26.5                 ['$26.6', '$const26.5', 'exp']
    bool42 = global(bool: <class 'bool'>)    ['bool42']
    $42pred = call bool42($26.6, func=bool42, args=(Var($26.6, numbers.py:222),), kws=(), vararg=None) ['$26.6', '$42pred', 'bool42']
    branch $42pred, 44, 48                   ['$42pred']
label 44:
    $44.1 = global(OverflowError: <class 'OverflowError'>) ['$44.1']
    raise $44.1                              ['$44.1']
label 48:
    $48.1 = freevar(is_integer: False)       ['$48.1']
    bool50 = global(bool: <class 'bool'>)    ['bool50']
    $50pred = call bool50($48.1, func=bool50, args=(Var($48.1, numbers.py:224),), kws=(), vararg=None) ['$48.1', '$50pred', 'bool50']
    branch $50pred, 52, 106                  ['$50pred']
label 52:
    $const52.2 = const(int, 0)               ['$const52.2']
    $52.3 = a.1 == $const52.2                ['$52.3', '$const52.2', 'a.1']
    bool58 = global(bool: <class 'bool'>)    ['bool58']
    $58pred = call bool58($52.3, func=bool58, args=(Var($52.3, numbers.py:225),), kws=(), vararg=None) ['$52.3', '$58pred', 'bool58']
    branch $58pred, 60, 76                   ['$58pred']
label 60:
    $60.1 = freevar(zerodiv_return: False)   ['$60.1']
    bool62 = global(bool: <class 'bool'>)    ['bool62']
    $62pred = call bool62($60.1, func=bool62, args=(Var($60.1, numbers.py:226),), kws=(), vararg=None) ['$60.1', '$62pred', 'bool62']
    branch $62pred, 64, 68                   ['$62pred']
label 64:
    $64.1 = freevar(zerodiv_return: False)   ['$64.1']
    $64.2 = cast(value=$64.1)                ['$64.1', '$64.2']
    return $64.2                             ['$64.2']
label 68:
    $68.1 = global(ZeroDivisionError: <class 'ZeroDivisionError'>) ['$68.1']
    $const68.2 = const(str, 0 cannot be raised to a negative power) ['$const68.2']
    $68.3 = call $68.1($const68.2, func=$68.1, args=[Var($const68.2, numbers.py:229)], kws=(), vararg=None) ['$68.1', '$68.3', '$const68.2']
    raise $68.3                              ['$68.3']
label 76:
    $const76.2 = const(int, 1)               ['$const76.2']
    $76.3 = a.1 != $const76.2                ['$76.3', '$const76.2', 'a.1']
    bool82 = global(bool: <class 'bool'>)    ['bool82']
    $82pred = call bool82($76.3, func=bool82, args=(Var($76.3, numbers.py:230),), kws=(), vararg=None) ['$76.3', '$82pred', 'bool82']
    branch $82pred, 84, 106                  ['$82pred']
label 84:
    $const84.2 = const(int, -1)              ['$const84.2']
    $84.3 = a.1 != $const84.2                ['$84.3', '$const84.2', 'a.1']
    bool90 = global(bool: <class 'bool'>)    ['bool90']
    $90pred = call bool90($84.3, func=bool90, args=(Var($84.3, numbers.py:230),), kws=(), vararg=None) ['$84.3', '$90pred', 'bool90']
    branch $90pred, 92, 106                  ['$90pred']
label 92:
    $const92.1 = const(int, 0)               ['$const92.1']
    $92.2 = cast(value=$const92.1)           ['$92.2', '$const92.1']
    return $92.2                             ['$92.2']
label 98:
    invert = const(bool, False)              ['invert']
    exp = b                                  ['b', 'exp']
    jump 106                                 []
label 106:
    $const106.2 = const(int, 65536)          ['$const106.2']
    $106.3 = exp > $const106.2               ['$106.3', '$const106.2', 'exp']
    bool112 = global(bool: <class 'bool'>)   ['bool112']
    $112pred = call bool112($106.3, func=bool112, args=(Var($106.3, numbers.py:235),), kws=(), vararg=None) ['$106.3', '$112pred', 'bool112']
    branch $112pred, 114, 130                ['$112pred']
label 114:
    $114.1 = global(math: <module 'math' from '/Users/wdiepeveen/anaconda3/envs/aspire_env/lib/python3.6/lib-dynload/math.cpython-36m-darwin.so'>) ['$114.1']
    $114.2 = getattr(value=$114.1, attr=pow) ['$114.1', '$114.2']
    $114.4 = global(float: <class 'float'>)  ['$114.4']
    $114.6 = call $114.4(b, func=$114.4, args=[Var(b, numbers.py:217)], kws=(), vararg=None) ['$114.4', '$114.6', 'b']
    $114.7 = call $114.2(a.1, $114.6, func=$114.2, args=[Var(a.1, numbers.py:218), Var($114.6, numbers.py:237)], kws=(), vararg=None) ['$114.2', '$114.6', '$114.7', 'a.1']
    $114.8 = cast(value=$114.7)              ['$114.7', '$114.8']
    return $114.8                            ['$114.8']
label 130:
    jump 132                                 []
label 132:
    $const132.2 = const(int, 0)              ['$const132.2']
    $132.3 = exp != $const132.2              ['$132.3', '$const132.2', 'exp']
    bool138 = global(bool: <class 'bool'>)   ['bool138']
    $138pred = call bool138($132.3, func=bool138, args=(Var($132.3, numbers.py:238),), kws=(), vararg=None) ['$132.3', '$138pred', 'bool138']
    branch $138pred, 140, 174                ['$138pred']
label 140:
    $const140.2 = const(int, 1)              ['$const140.2']
    $140.3 = exp & $const140.2               ['$140.3', '$const140.2', 'exp']
    bool146 = global(bool: <class 'bool'>)   ['bool146']
    $146pred = call bool146($140.3, func=bool146, args=(Var($140.3, numbers.py:239),), kws=(), vararg=None) ['$140.3', '$146pred', 'bool146']
    branch $146pred, 148, 156                ['$146pred']
label 148:
    $148.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$148.3', 'a.1', 'r']
    r = $148.3                               ['$148.3', 'r']
    jump 156                                 []
label 156:
    $const156.2 = const(int, 1)              ['$const156.2']
    $156.3 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.2, static_lhs=Undefined, static_rhs=Undefined) ['$156.3', '$const156.2', 'exp']
    exp = $156.3                             ['$156.3', 'exp']
    $156.6 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$156.6', 'a.1', 'a.1']
    a.1 = $156.6                             ['$156.6', 'a.1']
    jump 132                                 []
label 174:
    jump 176                                 []
label 176:
    bool178 = global(bool: <class 'bool'>)   ['bool178']
    $178pred = call bool178(invert, func=bool178, args=(Var(invert, numbers.py:220),), kws=(), vararg=None) ['$178pred', 'bool178', 'invert']
    branch $178pred, 180, 188                ['$178pred']
label 180:
    $const180.1 = const(float, 1.0)          ['$const180.1']
    $180.3 = $const180.1 / r                 ['$180.3', '$const180.1', 'r']
    $180.4 = cast(value=$180.3)              ['$180.3', '$180.4']
    return $180.4                            ['$180.4']
label 188:
    $188.2 = cast(value=r)                   ['$188.2', 'r']
    return $188.2                            ['$188.2']

2022-08-04 11:53:00,984 DEBUG ==== SSA block analysis pass on 0
2022-08-04 11:53:00,984 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdb1bd30>
2022-08-04 11:53:00,984 DEBUG on stmt: a = arg(0, name=a)
2022-08-04 11:53:00,984 DEBUG on stmt: b = arg(1, name=b)
2022-08-04 11:53:00,984 DEBUG on stmt: $0.1 = freevar(tp: float64)
2022-08-04 11:53:00,984 DEBUG on stmt: $const0.2 = const(int, 1)
2022-08-04 11:53:00,984 DEBUG on stmt: r = call $0.1($const0.2, func=$0.1, args=[Var($const0.2, numbers.py:217)], kws=(), vararg=None)
2022-08-04 11:53:00,984 DEBUG on stmt: $0.4 = freevar(tp: float64)
2022-08-04 11:53:00,985 DEBUG on stmt: a.1 = call $0.4(a, func=$0.4, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
2022-08-04 11:53:00,985 DEBUG on stmt: $const0.8 = const(int, 0)
2022-08-04 11:53:00,985 DEBUG on stmt: $0.9 = b < $const0.8
2022-08-04 11:53:00,985 DEBUG on stmt: bool24 = global(bool: <class 'bool'>)
2022-08-04 11:53:00,985 DEBUG on stmt: $24pred = call bool24($0.9, func=bool24, args=(Var($0.9, numbers.py:219),), kws=(), vararg=None)
2022-08-04 11:53:00,985 DEBUG on stmt: branch $24pred, 26, 98
2022-08-04 11:53:00,985 DEBUG ==== SSA block analysis pass on 26
2022-08-04 11:53:00,985 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdb1bd30>
2022-08-04 11:53:00,985 DEBUG on stmt: invert = const(bool, True)
2022-08-04 11:53:00,985 DEBUG on stmt: exp = unary(fn=<built-in function neg>, value=b)
2022-08-04 11:53:00,985 DEBUG on stmt: $const26.5 = const(int, 0)
2022-08-04 11:53:00,985 DEBUG on stmt: $26.6 = exp < $const26.5
2022-08-04 11:53:00,985 DEBUG on stmt: bool42 = global(bool: <class 'bool'>)
2022-08-04 11:53:00,986 DEBUG on stmt: $42pred = call bool42($26.6, func=bool42, args=(Var($26.6, numbers.py:222),), kws=(), vararg=None)
2022-08-04 11:53:00,986 DEBUG on stmt: branch $42pred, 44, 48
2022-08-04 11:53:00,986 DEBUG ==== SSA block analysis pass on 44
2022-08-04 11:53:00,986 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdb1bd30>
2022-08-04 11:53:00,986 DEBUG on stmt: $44.1 = global(OverflowError: <class 'OverflowError'>)
2022-08-04 11:53:00,986 DEBUG on stmt: <static> raise <class 'OverflowError'>
2022-08-04 11:53:00,986 DEBUG ==== SSA block analysis pass on 48
2022-08-04 11:53:00,986 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdb1bd30>
2022-08-04 11:53:00,986 DEBUG on stmt: $48.1 = freevar(is_integer: False)
2022-08-04 11:53:00,986 DEBUG on stmt: bool50 = global(bool: <class 'bool'>)
2022-08-04 11:53:00,986 DEBUG on stmt: $50pred = call bool50($48.1, func=bool50, args=(Var($48.1, numbers.py:224),), kws=(), vararg=None)
2022-08-04 11:53:00,986 DEBUG on stmt: jump 106
2022-08-04 11:53:00,986 DEBUG ==== SSA block analysis pass on 98
2022-08-04 11:53:00,987 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdb1bd30>
2022-08-04 11:53:00,987 DEBUG on stmt: invert = const(bool, False)
2022-08-04 11:53:00,987 DEBUG on stmt: exp = b
2022-08-04 11:53:00,987 DEBUG on stmt: jump 106
2022-08-04 11:53:00,987 DEBUG ==== SSA block analysis pass on 106
2022-08-04 11:53:00,987 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdb1bd30>
2022-08-04 11:53:00,987 DEBUG on stmt: $const106.2 = const(int, 65536)
2022-08-04 11:53:00,987 DEBUG on stmt: $106.3 = exp > $const106.2
2022-08-04 11:53:00,987 DEBUG on stmt: bool112 = global(bool: <class 'bool'>)
2022-08-04 11:53:00,987 DEBUG on stmt: $112pred = call bool112($106.3, func=bool112, args=(Var($106.3, numbers.py:235),), kws=(), vararg=None)
2022-08-04 11:53:00,987 DEBUG on stmt: branch $112pred, 114, 130
2022-08-04 11:53:00,987 DEBUG ==== SSA block analysis pass on 114
2022-08-04 11:53:00,987 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdb1bd30>
2022-08-04 11:53:00,987 DEBUG on stmt: $114.1 = global(math: <module 'math' from '/Users/wdiepeveen/anaconda3/envs/aspire_env/lib/python3.6/lib-dynload/math.cpython-36m-darwin.so'>)
2022-08-04 11:53:00,987 DEBUG on stmt: $114.2 = getattr(value=$114.1, attr=pow)
2022-08-04 11:53:00,988 DEBUG on stmt: $114.4 = global(float: <class 'float'>)
2022-08-04 11:53:00,988 DEBUG on stmt: $114.6 = call $114.4(b, func=$114.4, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
2022-08-04 11:53:00,988 DEBUG on stmt: $114.7 = call $114.2(a.1, $114.6, func=$114.2, args=[Var(a.1, numbers.py:218), Var($114.6, numbers.py:237)], kws=(), vararg=None)
2022-08-04 11:53:00,988 DEBUG on stmt: $114.8 = cast(value=$114.7)
2022-08-04 11:53:00,988 DEBUG on stmt: return $114.8
2022-08-04 11:53:00,988 DEBUG ==== SSA block analysis pass on 130
2022-08-04 11:53:00,988 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdb1bd30>
2022-08-04 11:53:00,988 DEBUG on stmt: jump 132
2022-08-04 11:53:00,988 DEBUG ==== SSA block analysis pass on 132
2022-08-04 11:53:00,988 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdb1bd30>
2022-08-04 11:53:00,988 DEBUG on stmt: $const132.2 = const(int, 0)
2022-08-04 11:53:00,988 DEBUG on stmt: $132.3 = exp != $const132.2
2022-08-04 11:53:00,988 DEBUG on stmt: bool138 = global(bool: <class 'bool'>)
2022-08-04 11:53:00,988 DEBUG on stmt: $138pred = call bool138($132.3, func=bool138, args=(Var($132.3, numbers.py:238),), kws=(), vararg=None)
2022-08-04 11:53:00,989 DEBUG on stmt: branch $138pred, 140, 174
2022-08-04 11:53:00,989 DEBUG ==== SSA block analysis pass on 140
2022-08-04 11:53:00,989 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdb1bd30>
2022-08-04 11:53:00,989 DEBUG on stmt: $const140.2 = const(int, 1)
2022-08-04 11:53:00,989 DEBUG on stmt: $140.3 = exp & $const140.2
2022-08-04 11:53:00,989 DEBUG on stmt: bool146 = global(bool: <class 'bool'>)
2022-08-04 11:53:00,989 DEBUG on stmt: $146pred = call bool146($140.3, func=bool146, args=(Var($140.3, numbers.py:239),), kws=(), vararg=None)
2022-08-04 11:53:00,989 DEBUG on stmt: branch $146pred, 148, 156
2022-08-04 11:53:00,989 DEBUG ==== SSA block analysis pass on 148
2022-08-04 11:53:00,989 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdb1bd30>
2022-08-04 11:53:00,990 DEBUG on stmt: $148.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:53:00,990 DEBUG on stmt: r = $148.3
2022-08-04 11:53:00,990 DEBUG on stmt: jump 156
2022-08-04 11:53:00,990 DEBUG ==== SSA block analysis pass on 156
2022-08-04 11:53:00,990 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdb1bd30>
2022-08-04 11:53:00,990 DEBUG on stmt: $const156.2 = const(int, 1)
2022-08-04 11:53:00,990 DEBUG on stmt: $156.3 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.2, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:53:00,990 DEBUG on stmt: exp = $156.3
2022-08-04 11:53:00,990 DEBUG on stmt: $156.6 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:53:00,990 DEBUG on stmt: a.1 = $156.6
2022-08-04 11:53:00,990 DEBUG on stmt: jump 132
2022-08-04 11:53:00,990 DEBUG ==== SSA block analysis pass on 174
2022-08-04 11:53:00,990 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdb1bd30>
2022-08-04 11:53:00,990 DEBUG on stmt: jump 176
2022-08-04 11:53:00,990 DEBUG ==== SSA block analysis pass on 176
2022-08-04 11:53:00,991 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdb1bd30>
2022-08-04 11:53:00,991 DEBUG on stmt: bool178 = global(bool: <class 'bool'>)
2022-08-04 11:53:00,991 DEBUG on stmt: $178pred = call bool178(invert, func=bool178, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
2022-08-04 11:53:00,991 DEBUG on stmt: branch $178pred, 180, 188
2022-08-04 11:53:00,991 DEBUG ==== SSA block analysis pass on 180
2022-08-04 11:53:00,991 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdb1bd30>
2022-08-04 11:53:00,991 DEBUG on stmt: $const180.1 = const(float, 1.0)
2022-08-04 11:53:00,991 DEBUG on stmt: $180.3 = $const180.1 / r
2022-08-04 11:53:00,991 DEBUG on stmt: $180.4 = cast(value=$180.3)
2022-08-04 11:53:00,991 DEBUG on stmt: return $180.4
2022-08-04 11:53:00,991 DEBUG ==== SSA block analysis pass on 188
2022-08-04 11:53:00,991 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdb1bd30>
2022-08-04 11:53:00,991 DEBUG on stmt: $188.2 = cast(value=r)
2022-08-04 11:53:00,992 DEBUG on stmt: return $188.2
2022-08-04 11:53:00,993 DEBUG defs defaultdict(<class 'list'>,
            {'$0.1': [<numba.core.ir.Assign object at 0x7fa2ce0239e8>],
             '$0.4': [<numba.core.ir.Assign object at 0x7fa2ce0232e8>],
             '$0.9': [<numba.core.ir.Assign object at 0x7fa2ce0610f0>],
             '$106.3': [<numba.core.ir.Assign object at 0x7fa2ce21c2b0>],
             '$112pred': [<numba.core.ir.Assign object at 0x7fa2ce21c4a8>],
             '$114.1': [<numba.core.ir.Assign object at 0x7fa2ce21c630>],
             '$114.2': [<numba.core.ir.Assign object at 0x7fa2ce21c6d8>],
             '$114.4': [<numba.core.ir.Assign object at 0x7fa2ce21c860>],
             '$114.6': [<numba.core.ir.Assign object at 0x7fa2ce21c978>],
             '$114.7': [<numba.core.ir.Assign object at 0x7fa2ce21cac8>],
             '$114.8': [<numba.core.ir.Assign object at 0x7fa2ce21cb38>],
             '$132.3': [<numba.core.ir.Assign object at 0x7fa2ce21ceb8>],
             '$138pred': [<numba.core.ir.Assign object at 0x7fa2ce21c278>],
             '$140.3': [<numba.core.ir.Assign object at 0x7fa2ce265fd0>],
             '$146pred': [<numba.core.ir.Assign object at 0x7fa2ce265a58>],
             '$148.3': [<numba.core.ir.Assign object at 0x7fa2ce265588>],
             '$156.3': [<numba.core.ir.Assign object at 0x7fa2ce265908>],
             '$156.6': [<numba.core.ir.Assign object at 0x7fa2ce2650b8>],
             '$178pred': [<numba.core.ir.Assign object at 0x7fa2cdbc6438>],
             '$180.3': [<numba.core.ir.Assign object at 0x7fa2ce30c6d8>],
             '$180.4': [<numba.core.ir.Assign object at 0x7fa2ce30c6a0>],
             '$188.2': [<numba.core.ir.Assign object at 0x7fa2ce30cc50>],
             '$24pred': [<numba.core.ir.Assign object at 0x7fa2cdb50cc0>],
             '$26.6': [<numba.core.ir.Assign object at 0x7fa2cdb67978>],
             '$42pred': [<numba.core.ir.Assign object at 0x7fa2cdb67780>],
             '$44.1': [<numba.core.ir.Assign object at 0x7fa2cdb67a58>],
             '$48.1': [<numba.core.ir.Assign object at 0x7fa2cdb672e8>],
             '$50pred': [<numba.core.ir.Assign object at 0x7fa2ce02eda0>],
             '$const0.2': [<numba.core.ir.Assign object at 0x7fa2ce023438>],
             '$const0.8': [<numba.core.ir.Assign object at 0x7fa2ce061668>],
             '$const106.2': [<numba.core.ir.Assign object at 0x7fa2ce21c0b8>],
             '$const132.2': [<numba.core.ir.Assign object at 0x7fa2ce21cdd8>],
             '$const140.2': [<numba.core.ir.Assign object at 0x7fa2ce265ef0>],
             '$const156.2': [<numba.core.ir.Assign object at 0x7fa2ce2657b8>],
             '$const180.1': [<numba.core.ir.Assign object at 0x7fa2cdbc6278>],
             '$const26.5': [<numba.core.ir.Assign object at 0x7fa2cdb67cf8>],
             'a': [<numba.core.ir.Assign object at 0x7fa2ce023908>],
             'a.1': [<numba.core.ir.Assign object at 0x7fa2ce061470>,
                     <numba.core.ir.Assign object at 0x7fa2ce2652e8>],
             'b': [<numba.core.ir.Assign object at 0x7fa2ce0239b0>],
             'bool112': [<numba.core.ir.Assign object at 0x7fa2ce21c400>],
             'bool138': [<numba.core.ir.Assign object at 0x7fa2ce21c048>],
             'bool146': [<numba.core.ir.Assign object at 0x7fa2ce265da0>],
             'bool178': [<numba.core.ir.Assign object at 0x7fa2ce265b00>],
             'bool24': [<numba.core.ir.Assign object at 0x7fa2ce061b70>],
             'bool42': [<numba.core.ir.Assign object at 0x7fa2cdb67438>],
             'bool50': [<numba.core.ir.Assign object at 0x7fa2cdb67828>],
             'exp': [<numba.core.ir.Assign object at 0x7fa2ce068da0>,
                     <numba.core.ir.Assign object at 0x7fa2ce3367b8>,
                     <numba.core.ir.Assign object at 0x7fa2ce265898>],
             'invert': [<numba.core.ir.Assign object at 0x7fa2cdb50470>,
                        <numba.core.ir.Assign object at 0x7fa2ce336a20>],
             'r': [<numba.core.ir.Assign object at 0x7fa2ce023588>,
                   <numba.core.ir.Assign object at 0x7fa2ce2655c0>]})
2022-08-04 11:53:00,993 DEBUG SSA violators {'invert', 'exp', 'r', 'a.1'}
2022-08-04 11:53:00,993 DEBUG Fix SSA violator on var invert
2022-08-04 11:53:00,993 DEBUG ==== SSA block rewrite pass on 0
2022-08-04 11:53:00,993 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdb1bd30>
2022-08-04 11:53:00,993 DEBUG on stmt: a = arg(0, name=a)
2022-08-04 11:53:00,993 DEBUG on stmt: b = arg(1, name=b)
2022-08-04 11:53:00,994 DEBUG on stmt: $0.1 = freevar(tp: float64)
2022-08-04 11:53:00,994 DEBUG on stmt: $const0.2 = const(int, 1)
2022-08-04 11:53:00,994 DEBUG on stmt: r = call $0.1($const0.2, func=$0.1, args=[Var($const0.2, numbers.py:217)], kws=(), vararg=None)
2022-08-04 11:53:00,994 DEBUG on stmt: $0.4 = freevar(tp: float64)
2022-08-04 11:53:00,994 DEBUG on stmt: a.1 = call $0.4(a, func=$0.4, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
2022-08-04 11:53:00,994 DEBUG on stmt: $const0.8 = const(int, 0)
2022-08-04 11:53:00,994 DEBUG on stmt: $0.9 = b < $const0.8
2022-08-04 11:53:00,994 DEBUG on stmt: bool24 = global(bool: <class 'bool'>)
2022-08-04 11:53:00,994 DEBUG on stmt: $24pred = call bool24($0.9, func=bool24, args=(Var($0.9, numbers.py:219),), kws=(), vararg=None)
2022-08-04 11:53:00,994 DEBUG on stmt: branch $24pred, 26, 98
2022-08-04 11:53:00,994 DEBUG ==== SSA block rewrite pass on 26
2022-08-04 11:53:00,994 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdb1bd30>
2022-08-04 11:53:00,995 DEBUG on stmt: invert = const(bool, True)
2022-08-04 11:53:00,995 DEBUG first assign: invert
2022-08-04 11:53:00,995 DEBUG replaced with: invert = const(bool, True)
2022-08-04 11:53:00,995 DEBUG on stmt: exp = unary(fn=<built-in function neg>, value=b)
2022-08-04 11:53:00,995 DEBUG on stmt: $const26.5 = const(int, 0)
2022-08-04 11:53:00,995 DEBUG on stmt: $26.6 = exp < $const26.5
2022-08-04 11:53:00,995 DEBUG on stmt: bool42 = global(bool: <class 'bool'>)
2022-08-04 11:53:00,995 DEBUG on stmt: $42pred = call bool42($26.6, func=bool42, args=(Var($26.6, numbers.py:222),), kws=(), vararg=None)
2022-08-04 11:53:00,995 DEBUG on stmt: branch $42pred, 44, 48
2022-08-04 11:53:00,995 DEBUG ==== SSA block rewrite pass on 44
2022-08-04 11:53:00,995 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdb1bd30>
2022-08-04 11:53:00,995 DEBUG on stmt: $44.1 = global(OverflowError: <class 'OverflowError'>)
2022-08-04 11:53:00,995 DEBUG on stmt: <static> raise <class 'OverflowError'>
2022-08-04 11:53:00,995 DEBUG ==== SSA block rewrite pass on 48
2022-08-04 11:53:00,995 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdb1bd30>
2022-08-04 11:53:00,995 DEBUG on stmt: $48.1 = freevar(is_integer: False)
2022-08-04 11:53:00,996 DEBUG on stmt: bool50 = global(bool: <class 'bool'>)
2022-08-04 11:53:00,996 DEBUG on stmt: $50pred = call bool50($48.1, func=bool50, args=(Var($48.1, numbers.py:224),), kws=(), vararg=None)
2022-08-04 11:53:00,996 DEBUG on stmt: jump 106
2022-08-04 11:53:00,996 DEBUG ==== SSA block rewrite pass on 98
2022-08-04 11:53:00,996 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdb1bd30>
2022-08-04 11:53:00,996 DEBUG on stmt: invert = const(bool, False)
2022-08-04 11:53:00,996 DEBUG replaced with: invert.1 = const(bool, False)
2022-08-04 11:53:00,996 DEBUG on stmt: exp = b
2022-08-04 11:53:00,996 DEBUG on stmt: jump 106
2022-08-04 11:53:00,996 DEBUG ==== SSA block rewrite pass on 106
2022-08-04 11:53:00,996 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdb1bd30>
2022-08-04 11:53:00,996 DEBUG on stmt: $const106.2 = const(int, 65536)
2022-08-04 11:53:00,996 DEBUG on stmt: $106.3 = exp > $const106.2
2022-08-04 11:53:00,996 DEBUG on stmt: bool112 = global(bool: <class 'bool'>)
2022-08-04 11:53:00,997 DEBUG on stmt: $112pred = call bool112($106.3, func=bool112, args=(Var($106.3, numbers.py:235),), kws=(), vararg=None)
2022-08-04 11:53:00,997 DEBUG on stmt: branch $112pred, 114, 130
2022-08-04 11:53:00,997 DEBUG ==== SSA block rewrite pass on 114
2022-08-04 11:53:00,997 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdb1bd30>
2022-08-04 11:53:00,997 DEBUG on stmt: $114.1 = global(math: <module 'math' from '/Users/wdiepeveen/anaconda3/envs/aspire_env/lib/python3.6/lib-dynload/math.cpython-36m-darwin.so'>)
2022-08-04 11:53:00,997 DEBUG on stmt: $114.2 = getattr(value=$114.1, attr=pow)
2022-08-04 11:53:00,997 DEBUG on stmt: $114.4 = global(float: <class 'float'>)
2022-08-04 11:53:00,997 DEBUG on stmt: $114.6 = call $114.4(b, func=$114.4, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
2022-08-04 11:53:00,997 DEBUG on stmt: $114.7 = call $114.2(a.1, $114.6, func=$114.2, args=[Var(a.1, numbers.py:218), Var($114.6, numbers.py:237)], kws=(), vararg=None)
2022-08-04 11:53:00,997 DEBUG on stmt: $114.8 = cast(value=$114.7)
2022-08-04 11:53:00,997 DEBUG on stmt: return $114.8
2022-08-04 11:53:00,997 DEBUG ==== SSA block rewrite pass on 130
2022-08-04 11:53:00,997 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdb1bd30>
2022-08-04 11:53:00,998 DEBUG on stmt: jump 132
2022-08-04 11:53:00,998 DEBUG ==== SSA block rewrite pass on 132
2022-08-04 11:53:00,998 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdb1bd30>
2022-08-04 11:53:00,998 DEBUG on stmt: $const132.2 = const(int, 0)
2022-08-04 11:53:00,998 DEBUG on stmt: $132.3 = exp != $const132.2
2022-08-04 11:53:00,998 DEBUG on stmt: bool138 = global(bool: <class 'bool'>)
2022-08-04 11:53:00,998 DEBUG on stmt: $138pred = call bool138($132.3, func=bool138, args=(Var($132.3, numbers.py:238),), kws=(), vararg=None)
2022-08-04 11:53:00,998 DEBUG on stmt: branch $138pred, 140, 174
2022-08-04 11:53:00,998 DEBUG ==== SSA block rewrite pass on 140
2022-08-04 11:53:00,998 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdb1bd30>
2022-08-04 11:53:00,998 DEBUG on stmt: $const140.2 = const(int, 1)
2022-08-04 11:53:00,998 DEBUG on stmt: $140.3 = exp & $const140.2
2022-08-04 11:53:00,998 DEBUG on stmt: bool146 = global(bool: <class 'bool'>)
2022-08-04 11:53:00,999 DEBUG on stmt: $146pred = call bool146($140.3, func=bool146, args=(Var($140.3, numbers.py:239),), kws=(), vararg=None)
2022-08-04 11:53:00,999 DEBUG on stmt: branch $146pred, 148, 156
2022-08-04 11:53:00,999 DEBUG ==== SSA block rewrite pass on 148
2022-08-04 11:53:00,999 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdb1bd30>
2022-08-04 11:53:00,999 DEBUG on stmt: $148.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:53:00,999 DEBUG on stmt: r = $148.3
2022-08-04 11:53:00,999 DEBUG on stmt: jump 156
2022-08-04 11:53:00,999 DEBUG ==== SSA block rewrite pass on 156
2022-08-04 11:53:00,999 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdb1bd30>
2022-08-04 11:53:00,999 DEBUG on stmt: $const156.2 = const(int, 1)
2022-08-04 11:53:00,999 DEBUG on stmt: $156.3 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.2, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:53:00,999 DEBUG on stmt: exp = $156.3
2022-08-04 11:53:00,999 DEBUG on stmt: $156.6 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:53:01,000 DEBUG on stmt: a.1 = $156.6
2022-08-04 11:53:01,000 DEBUG on stmt: jump 132
2022-08-04 11:53:01,000 DEBUG ==== SSA block rewrite pass on 174
2022-08-04 11:53:01,000 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdb1bd30>
2022-08-04 11:53:01,000 DEBUG on stmt: jump 176
2022-08-04 11:53:01,000 DEBUG ==== SSA block rewrite pass on 176
2022-08-04 11:53:01,000 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdb1bd30>
2022-08-04 11:53:01,000 DEBUG on stmt: bool178 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,000 DEBUG on stmt: $178pred = call bool178(invert, func=bool178, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
2022-08-04 11:53:01,001 DEBUG on stmt: branch $178pred, 180, 188
2022-08-04 11:53:01,001 DEBUG ==== SSA block rewrite pass on 180
2022-08-04 11:53:01,001 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdb1bd30>
2022-08-04 11:53:01,001 DEBUG on stmt: $const180.1 = const(float, 1.0)
2022-08-04 11:53:01,001 DEBUG on stmt: $180.3 = $const180.1 / r
2022-08-04 11:53:01,001 DEBUG on stmt: $180.4 = cast(value=$180.3)
2022-08-04 11:53:01,001 DEBUG on stmt: return $180.4
2022-08-04 11:53:01,001 DEBUG ==== SSA block rewrite pass on 188
2022-08-04 11:53:01,001 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdb1bd30>
2022-08-04 11:53:01,001 DEBUG on stmt: $188.2 = cast(value=r)
2022-08-04 11:53:01,001 DEBUG on stmt: return $188.2
2022-08-04 11:53:01,001 DEBUG Replaced assignments: defaultdict(<class 'list'>,
            {26: [<numba.core.ir.Assign object at 0x7fa2ce34beb8>],
             98: [<numba.core.ir.Assign object at 0x7fa2ce34bb38>]})
2022-08-04 11:53:01,002 DEBUG ==== SSA block rewrite pass on 0
2022-08-04 11:53:01,002 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce352d68>
2022-08-04 11:53:01,002 DEBUG on stmt: a = arg(0, name=a)
2022-08-04 11:53:01,002 DEBUG on stmt: b = arg(1, name=b)
2022-08-04 11:53:01,002 DEBUG on stmt: $0.1 = freevar(tp: float64)
2022-08-04 11:53:01,002 DEBUG on stmt: $const0.2 = const(int, 1)
2022-08-04 11:53:01,002 DEBUG on stmt: r = call $0.1($const0.2, func=$0.1, args=[Var($const0.2, numbers.py:217)], kws=(), vararg=None)
2022-08-04 11:53:01,002 DEBUG on stmt: $0.4 = freevar(tp: float64)
2022-08-04 11:53:01,003 DEBUG on stmt: a.1 = call $0.4(a, func=$0.4, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
2022-08-04 11:53:01,003 DEBUG on stmt: $const0.8 = const(int, 0)
2022-08-04 11:53:01,003 DEBUG on stmt: $0.9 = b < $const0.8
2022-08-04 11:53:01,003 DEBUG on stmt: bool24 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,003 DEBUG on stmt: $24pred = call bool24($0.9, func=bool24, args=(Var($0.9, numbers.py:219),), kws=(), vararg=None)
2022-08-04 11:53:01,003 DEBUG on stmt: branch $24pred, 26, 98
2022-08-04 11:53:01,003 DEBUG ==== SSA block rewrite pass on 26
2022-08-04 11:53:01,003 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce352d68>
2022-08-04 11:53:01,003 DEBUG on stmt: invert = const(bool, True)
2022-08-04 11:53:01,003 DEBUG on stmt: exp = unary(fn=<built-in function neg>, value=b)
2022-08-04 11:53:01,003 DEBUG on stmt: $const26.5 = const(int, 0)
2022-08-04 11:53:01,004 DEBUG on stmt: $26.6 = exp < $const26.5
2022-08-04 11:53:01,004 DEBUG on stmt: bool42 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,004 DEBUG on stmt: $42pred = call bool42($26.6, func=bool42, args=(Var($26.6, numbers.py:222),), kws=(), vararg=None)
2022-08-04 11:53:01,004 DEBUG on stmt: branch $42pred, 44, 48
2022-08-04 11:53:01,004 DEBUG ==== SSA block rewrite pass on 44
2022-08-04 11:53:01,004 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce352d68>
2022-08-04 11:53:01,004 DEBUG on stmt: $44.1 = global(OverflowError: <class 'OverflowError'>)
2022-08-04 11:53:01,004 DEBUG on stmt: <static> raise <class 'OverflowError'>
2022-08-04 11:53:01,004 DEBUG ==== SSA block rewrite pass on 48
2022-08-04 11:53:01,004 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce352d68>
2022-08-04 11:53:01,004 DEBUG on stmt: $48.1 = freevar(is_integer: False)
2022-08-04 11:53:01,004 DEBUG on stmt: bool50 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,004 DEBUG on stmt: $50pred = call bool50($48.1, func=bool50, args=(Var($48.1, numbers.py:224),), kws=(), vararg=None)
2022-08-04 11:53:01,005 DEBUG on stmt: jump 106
2022-08-04 11:53:01,005 DEBUG ==== SSA block rewrite pass on 98
2022-08-04 11:53:01,005 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce352d68>
2022-08-04 11:53:01,005 DEBUG on stmt: invert.1 = const(bool, False)
2022-08-04 11:53:01,005 DEBUG on stmt: exp = b
2022-08-04 11:53:01,005 DEBUG on stmt: jump 106
2022-08-04 11:53:01,005 DEBUG ==== SSA block rewrite pass on 106
2022-08-04 11:53:01,005 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce352d68>
2022-08-04 11:53:01,005 DEBUG on stmt: $const106.2 = const(int, 65536)
2022-08-04 11:53:01,005 DEBUG on stmt: $106.3 = exp > $const106.2
2022-08-04 11:53:01,005 DEBUG on stmt: bool112 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,005 DEBUG on stmt: $112pred = call bool112($106.3, func=bool112, args=(Var($106.3, numbers.py:235),), kws=(), vararg=None)
2022-08-04 11:53:01,005 DEBUG on stmt: branch $112pred, 114, 130
2022-08-04 11:53:01,005 DEBUG ==== SSA block rewrite pass on 114
2022-08-04 11:53:01,006 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce352d68>
2022-08-04 11:53:01,006 DEBUG on stmt: $114.1 = global(math: <module 'math' from '/Users/wdiepeveen/anaconda3/envs/aspire_env/lib/python3.6/lib-dynload/math.cpython-36m-darwin.so'>)
2022-08-04 11:53:01,006 DEBUG on stmt: $114.2 = getattr(value=$114.1, attr=pow)
2022-08-04 11:53:01,006 DEBUG on stmt: $114.4 = global(float: <class 'float'>)
2022-08-04 11:53:01,006 DEBUG on stmt: $114.6 = call $114.4(b, func=$114.4, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
2022-08-04 11:53:01,006 DEBUG on stmt: $114.7 = call $114.2(a.1, $114.6, func=$114.2, args=[Var(a.1, numbers.py:218), Var($114.6, numbers.py:237)], kws=(), vararg=None)
2022-08-04 11:53:01,006 DEBUG on stmt: $114.8 = cast(value=$114.7)
2022-08-04 11:53:01,006 DEBUG on stmt: return $114.8
2022-08-04 11:53:01,006 DEBUG ==== SSA block rewrite pass on 130
2022-08-04 11:53:01,006 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce352d68>
2022-08-04 11:53:01,006 DEBUG on stmt: jump 132
2022-08-04 11:53:01,006 DEBUG ==== SSA block rewrite pass on 132
2022-08-04 11:53:01,006 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce352d68>
2022-08-04 11:53:01,007 DEBUG on stmt: $const132.2 = const(int, 0)
2022-08-04 11:53:01,007 DEBUG on stmt: $132.3 = exp != $const132.2
2022-08-04 11:53:01,007 DEBUG on stmt: bool138 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,007 DEBUG on stmt: $138pred = call bool138($132.3, func=bool138, args=(Var($132.3, numbers.py:238),), kws=(), vararg=None)
2022-08-04 11:53:01,007 DEBUG on stmt: branch $138pred, 140, 174
2022-08-04 11:53:01,007 DEBUG ==== SSA block rewrite pass on 140
2022-08-04 11:53:01,007 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce352d68>
2022-08-04 11:53:01,007 DEBUG on stmt: $const140.2 = const(int, 1)
2022-08-04 11:53:01,007 DEBUG on stmt: $140.3 = exp & $const140.2
2022-08-04 11:53:01,007 DEBUG on stmt: bool146 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,007 DEBUG on stmt: $146pred = call bool146($140.3, func=bool146, args=(Var($140.3, numbers.py:239),), kws=(), vararg=None)
2022-08-04 11:53:01,007 DEBUG on stmt: branch $146pred, 148, 156
2022-08-04 11:53:01,007 DEBUG ==== SSA block rewrite pass on 148
2022-08-04 11:53:01,007 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce352d68>
2022-08-04 11:53:01,007 DEBUG on stmt: $148.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:53:01,007 DEBUG on stmt: r = $148.3
2022-08-04 11:53:01,007 DEBUG on stmt: jump 156
2022-08-04 11:53:01,007 DEBUG ==== SSA block rewrite pass on 156
2022-08-04 11:53:01,007 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce352d68>
2022-08-04 11:53:01,007 DEBUG on stmt: $const156.2 = const(int, 1)
2022-08-04 11:53:01,007 DEBUG on stmt: $156.3 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.2, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:53:01,008 DEBUG on stmt: exp = $156.3
2022-08-04 11:53:01,008 DEBUG on stmt: $156.6 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:53:01,008 DEBUG on stmt: a.1 = $156.6
2022-08-04 11:53:01,008 DEBUG on stmt: jump 132
2022-08-04 11:53:01,008 DEBUG ==== SSA block rewrite pass on 174
2022-08-04 11:53:01,008 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce352d68>
2022-08-04 11:53:01,008 DEBUG on stmt: jump 176
2022-08-04 11:53:01,008 DEBUG ==== SSA block rewrite pass on 176
2022-08-04 11:53:01,009 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce352d68>
2022-08-04 11:53:01,009 DEBUG on stmt: bool178 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,009 DEBUG on stmt: $178pred = call bool178(invert, func=bool178, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
2022-08-04 11:53:01,009 DEBUG find_def var='invert' stmt=$178pred = call bool178(invert, func=bool178, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
2022-08-04 11:53:01,009 DEBUG find_def_from_top label 176
2022-08-04 11:53:01,009 DEBUG idom 174 from label 176
2022-08-04 11:53:01,009 DEBUG find_def_from_bottom label 174
2022-08-04 11:53:01,009 DEBUG find_def_from_top label 174
2022-08-04 11:53:01,009 DEBUG idom 132 from label 174
2022-08-04 11:53:01,009 DEBUG find_def_from_bottom label 132
2022-08-04 11:53:01,009 DEBUG find_def_from_top label 132
2022-08-04 11:53:01,009 DEBUG idom 130 from label 132
2022-08-04 11:53:01,009 DEBUG find_def_from_bottom label 130
2022-08-04 11:53:01,009 DEBUG find_def_from_top label 130
2022-08-04 11:53:01,009 DEBUG idom 106 from label 130
2022-08-04 11:53:01,009 DEBUG find_def_from_bottom label 106
2022-08-04 11:53:01,009 DEBUG find_def_from_top label 106
2022-08-04 11:53:01,009 DEBUG insert phi node invert.2 = phi(incoming_values=[], incoming_blocks=[]) at 106
2022-08-04 11:53:01,009 DEBUG find_def_from_bottom label 48
2022-08-04 11:53:01,010 DEBUG find_def_from_top label 48
2022-08-04 11:53:01,010 DEBUG idom 26 from label 48
2022-08-04 11:53:01,010 DEBUG find_def_from_bottom label 26
2022-08-04 11:53:01,010 DEBUG incoming_def invert = const(bool, True)
2022-08-04 11:53:01,010 DEBUG find_def_from_bottom label 98
2022-08-04 11:53:01,010 DEBUG incoming_def invert.1 = const(bool, False)
2022-08-04 11:53:01,010 DEBUG replaced with: $178pred = call bool178(invert.2, func=bool178, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
2022-08-04 11:53:01,010 DEBUG on stmt: branch $178pred, 180, 188
2022-08-04 11:53:01,010 DEBUG ==== SSA block rewrite pass on 180
2022-08-04 11:53:01,010 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce352d68>
2022-08-04 11:53:01,010 DEBUG on stmt: $const180.1 = const(float, 1.0)
2022-08-04 11:53:01,010 DEBUG on stmt: $180.3 = $const180.1 / r
2022-08-04 11:53:01,010 DEBUG on stmt: $180.4 = cast(value=$180.3)
2022-08-04 11:53:01,010 DEBUG on stmt: return $180.4
2022-08-04 11:53:01,010 DEBUG ==== SSA block rewrite pass on 188
2022-08-04 11:53:01,011 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce352d68>
2022-08-04 11:53:01,011 DEBUG on stmt: $188.2 = cast(value=r)
2022-08-04 11:53:01,011 DEBUG on stmt: return $188.2
2022-08-04 11:53:01,011 DEBUG Fix SSA violator on var exp
2022-08-04 11:53:01,011 DEBUG ==== SSA block rewrite pass on 0
2022-08-04 11:53:01,011 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ccf996d8>
2022-08-04 11:53:01,011 DEBUG on stmt: a = arg(0, name=a)
2022-08-04 11:53:01,011 DEBUG on stmt: b = arg(1, name=b)
2022-08-04 11:53:01,011 DEBUG on stmt: $0.1 = freevar(tp: float64)
2022-08-04 11:53:01,011 DEBUG on stmt: $const0.2 = const(int, 1)
2022-08-04 11:53:01,011 DEBUG on stmt: r = call $0.1($const0.2, func=$0.1, args=[Var($const0.2, numbers.py:217)], kws=(), vararg=None)
2022-08-04 11:53:01,011 DEBUG on stmt: $0.4 = freevar(tp: float64)
2022-08-04 11:53:01,011 DEBUG on stmt: a.1 = call $0.4(a, func=$0.4, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
2022-08-04 11:53:01,011 DEBUG on stmt: $const0.8 = const(int, 0)
2022-08-04 11:53:01,011 DEBUG on stmt: $0.9 = b < $const0.8
2022-08-04 11:53:01,011 DEBUG on stmt: bool24 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,012 DEBUG on stmt: $24pred = call bool24($0.9, func=bool24, args=(Var($0.9, numbers.py:219),), kws=(), vararg=None)
2022-08-04 11:53:01,012 DEBUG on stmt: branch $24pred, 26, 98
2022-08-04 11:53:01,012 DEBUG ==== SSA block rewrite pass on 26
2022-08-04 11:53:01,012 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ccf996d8>
2022-08-04 11:53:01,012 DEBUG on stmt: invert = const(bool, True)
2022-08-04 11:53:01,012 DEBUG on stmt: exp = unary(fn=<built-in function neg>, value=b)
2022-08-04 11:53:01,012 DEBUG first assign: exp
2022-08-04 11:53:01,012 DEBUG replaced with: exp = unary(fn=<built-in function neg>, value=b)
2022-08-04 11:53:01,012 DEBUG on stmt: $const26.5 = const(int, 0)
2022-08-04 11:53:01,012 DEBUG on stmt: $26.6 = exp < $const26.5
2022-08-04 11:53:01,012 DEBUG on stmt: bool42 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,012 DEBUG on stmt: $42pred = call bool42($26.6, func=bool42, args=(Var($26.6, numbers.py:222),), kws=(), vararg=None)
2022-08-04 11:53:01,012 DEBUG on stmt: branch $42pred, 44, 48
2022-08-04 11:53:01,012 DEBUG ==== SSA block rewrite pass on 44
2022-08-04 11:53:01,012 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ccf996d8>
2022-08-04 11:53:01,012 DEBUG on stmt: $44.1 = global(OverflowError: <class 'OverflowError'>)
2022-08-04 11:53:01,012 DEBUG on stmt: <static> raise <class 'OverflowError'>
2022-08-04 11:53:01,012 DEBUG ==== SSA block rewrite pass on 48
2022-08-04 11:53:01,012 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ccf996d8>
2022-08-04 11:53:01,013 DEBUG on stmt: $48.1 = freevar(is_integer: False)
2022-08-04 11:53:01,013 DEBUG on stmt: bool50 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,013 DEBUG on stmt: $50pred = call bool50($48.1, func=bool50, args=(Var($48.1, numbers.py:224),), kws=(), vararg=None)
2022-08-04 11:53:01,013 DEBUG on stmt: jump 106
2022-08-04 11:53:01,013 DEBUG ==== SSA block rewrite pass on 98
2022-08-04 11:53:01,013 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ccf996d8>
2022-08-04 11:53:01,013 DEBUG on stmt: invert.1 = const(bool, False)
2022-08-04 11:53:01,013 DEBUG on stmt: exp = b
2022-08-04 11:53:01,013 DEBUG replaced with: exp.1 = b
2022-08-04 11:53:01,013 DEBUG on stmt: jump 106
2022-08-04 11:53:01,013 DEBUG ==== SSA block rewrite pass on 106
2022-08-04 11:53:01,013 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ccf996d8>
2022-08-04 11:53:01,013 DEBUG on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:220), Var(invert.1, numbers.py:233)], incoming_blocks=[48, 98])
2022-08-04 11:53:01,013 DEBUG on stmt: $const106.2 = const(int, 65536)
2022-08-04 11:53:01,013 DEBUG on stmt: $106.3 = exp > $const106.2
2022-08-04 11:53:01,013 DEBUG on stmt: bool112 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,013 DEBUG on stmt: $112pred = call bool112($106.3, func=bool112, args=(Var($106.3, numbers.py:235),), kws=(), vararg=None)
2022-08-04 11:53:01,013 DEBUG on stmt: branch $112pred, 114, 130
2022-08-04 11:53:01,013 DEBUG ==== SSA block rewrite pass on 114
2022-08-04 11:53:01,013 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ccf996d8>
2022-08-04 11:53:01,013 DEBUG on stmt: $114.1 = global(math: <module 'math' from '/Users/wdiepeveen/anaconda3/envs/aspire_env/lib/python3.6/lib-dynload/math.cpython-36m-darwin.so'>)
2022-08-04 11:53:01,013 DEBUG on stmt: $114.2 = getattr(value=$114.1, attr=pow)
2022-08-04 11:53:01,014 DEBUG on stmt: $114.4 = global(float: <class 'float'>)
2022-08-04 11:53:01,014 DEBUG on stmt: $114.6 = call $114.4(b, func=$114.4, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
2022-08-04 11:53:01,014 DEBUG on stmt: $114.7 = call $114.2(a.1, $114.6, func=$114.2, args=[Var(a.1, numbers.py:218), Var($114.6, numbers.py:237)], kws=(), vararg=None)
2022-08-04 11:53:01,014 DEBUG on stmt: $114.8 = cast(value=$114.7)
2022-08-04 11:53:01,014 DEBUG on stmt: return $114.8
2022-08-04 11:53:01,014 DEBUG ==== SSA block rewrite pass on 130
2022-08-04 11:53:01,014 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ccf996d8>
2022-08-04 11:53:01,014 DEBUG on stmt: jump 132
2022-08-04 11:53:01,014 DEBUG ==== SSA block rewrite pass on 132
2022-08-04 11:53:01,014 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ccf996d8>
2022-08-04 11:53:01,014 DEBUG on stmt: $const132.2 = const(int, 0)
2022-08-04 11:53:01,014 DEBUG on stmt: $132.3 = exp != $const132.2
2022-08-04 11:53:01,014 DEBUG on stmt: bool138 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,014 DEBUG on stmt: $138pred = call bool138($132.3, func=bool138, args=(Var($132.3, numbers.py:238),), kws=(), vararg=None)
2022-08-04 11:53:01,014 DEBUG on stmt: branch $138pred, 140, 174
2022-08-04 11:53:01,015 DEBUG ==== SSA block rewrite pass on 140
2022-08-04 11:53:01,015 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ccf996d8>
2022-08-04 11:53:01,015 DEBUG on stmt: $const140.2 = const(int, 1)
2022-08-04 11:53:01,015 DEBUG on stmt: $140.3 = exp & $const140.2
2022-08-04 11:53:01,015 DEBUG on stmt: bool146 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,015 DEBUG on stmt: $146pred = call bool146($140.3, func=bool146, args=(Var($140.3, numbers.py:239),), kws=(), vararg=None)
2022-08-04 11:53:01,015 DEBUG on stmt: branch $146pred, 148, 156
2022-08-04 11:53:01,015 DEBUG ==== SSA block rewrite pass on 148
2022-08-04 11:53:01,015 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ccf996d8>
2022-08-04 11:53:01,015 DEBUG on stmt: $148.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:53:01,015 DEBUG on stmt: r = $148.3
2022-08-04 11:53:01,015 DEBUG on stmt: jump 156
2022-08-04 11:53:01,015 DEBUG ==== SSA block rewrite pass on 156
2022-08-04 11:53:01,015 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ccf996d8>
2022-08-04 11:53:01,016 DEBUG on stmt: $const156.2 = const(int, 1)
2022-08-04 11:53:01,016 DEBUG on stmt: $156.3 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.2, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:53:01,016 DEBUG on stmt: exp = $156.3
2022-08-04 11:53:01,016 DEBUG replaced with: exp.2 = $156.3
2022-08-04 11:53:01,016 DEBUG on stmt: $156.6 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:53:01,016 DEBUG on stmt: a.1 = $156.6
2022-08-04 11:53:01,016 DEBUG on stmt: jump 132
2022-08-04 11:53:01,017 DEBUG ==== SSA block rewrite pass on 174
2022-08-04 11:53:01,017 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ccf996d8>
2022-08-04 11:53:01,017 DEBUG on stmt: jump 176
2022-08-04 11:53:01,017 DEBUG ==== SSA block rewrite pass on 176
2022-08-04 11:53:01,017 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ccf996d8>
2022-08-04 11:53:01,017 DEBUG on stmt: bool178 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,017 DEBUG on stmt: $178pred = call bool178(invert.2, func=bool178, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
2022-08-04 11:53:01,017 DEBUG on stmt: branch $178pred, 180, 188
2022-08-04 11:53:01,017 DEBUG ==== SSA block rewrite pass on 180
2022-08-04 11:53:01,017 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ccf996d8>
2022-08-04 11:53:01,017 DEBUG on stmt: $const180.1 = const(float, 1.0)
2022-08-04 11:53:01,017 DEBUG on stmt: $180.3 = $const180.1 / r
2022-08-04 11:53:01,017 DEBUG on stmt: $180.4 = cast(value=$180.3)
2022-08-04 11:53:01,017 DEBUG on stmt: return $180.4
2022-08-04 11:53:01,017 DEBUG ==== SSA block rewrite pass on 188
2022-08-04 11:53:01,018 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ccf996d8>
2022-08-04 11:53:01,018 DEBUG on stmt: $188.2 = cast(value=r)
2022-08-04 11:53:01,018 DEBUG on stmt: return $188.2
2022-08-04 11:53:01,018 DEBUG Replaced assignments: defaultdict(<class 'list'>,
            {26: [<numba.core.ir.Assign object at 0x7fa2ce34bd30>],
             98: [<numba.core.ir.Assign object at 0x7fa2ce34bcf8>],
             156: [<numba.core.ir.Assign object at 0x7fa2ce069358>]})
2022-08-04 11:53:01,018 DEBUG ==== SSA block rewrite pass on 0
2022-08-04 11:53:01,018 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce069518>
2022-08-04 11:53:01,018 DEBUG on stmt: a = arg(0, name=a)
2022-08-04 11:53:01,019 DEBUG on stmt: b = arg(1, name=b)
2022-08-04 11:53:01,019 DEBUG on stmt: $0.1 = freevar(tp: float64)
2022-08-04 11:53:01,019 DEBUG on stmt: $const0.2 = const(int, 1)
2022-08-04 11:53:01,019 DEBUG on stmt: r = call $0.1($const0.2, func=$0.1, args=[Var($const0.2, numbers.py:217)], kws=(), vararg=None)
2022-08-04 11:53:01,019 DEBUG on stmt: $0.4 = freevar(tp: float64)
2022-08-04 11:53:01,019 DEBUG on stmt: a.1 = call $0.4(a, func=$0.4, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
2022-08-04 11:53:01,019 DEBUG on stmt: $const0.8 = const(int, 0)
2022-08-04 11:53:01,019 DEBUG on stmt: $0.9 = b < $const0.8
2022-08-04 11:53:01,019 DEBUG on stmt: bool24 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,019 DEBUG on stmt: $24pred = call bool24($0.9, func=bool24, args=(Var($0.9, numbers.py:219),), kws=(), vararg=None)
2022-08-04 11:53:01,019 DEBUG on stmt: branch $24pred, 26, 98
2022-08-04 11:53:01,019 DEBUG ==== SSA block rewrite pass on 26
2022-08-04 11:53:01,019 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce069518>
2022-08-04 11:53:01,020 DEBUG on stmt: invert = const(bool, True)
2022-08-04 11:53:01,020 DEBUG on stmt: exp = unary(fn=<built-in function neg>, value=b)
2022-08-04 11:53:01,020 DEBUG on stmt: $const26.5 = const(int, 0)
2022-08-04 11:53:01,020 DEBUG on stmt: $26.6 = exp < $const26.5
2022-08-04 11:53:01,020 DEBUG find_def var='exp' stmt=$26.6 = exp < $const26.5
2022-08-04 11:53:01,020 DEBUG on stmt: bool42 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,020 DEBUG on stmt: $42pred = call bool42($26.6, func=bool42, args=(Var($26.6, numbers.py:222),), kws=(), vararg=None)
2022-08-04 11:53:01,020 DEBUG on stmt: branch $42pred, 44, 48
2022-08-04 11:53:01,020 DEBUG ==== SSA block rewrite pass on 44
2022-08-04 11:53:01,020 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce069518>
2022-08-04 11:53:01,020 DEBUG on stmt: $44.1 = global(OverflowError: <class 'OverflowError'>)
2022-08-04 11:53:01,020 DEBUG on stmt: <static> raise <class 'OverflowError'>
2022-08-04 11:53:01,020 DEBUG ==== SSA block rewrite pass on 48
2022-08-04 11:53:01,020 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce069518>
2022-08-04 11:53:01,020 DEBUG on stmt: $48.1 = freevar(is_integer: False)
2022-08-04 11:53:01,020 DEBUG on stmt: bool50 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,021 DEBUG on stmt: $50pred = call bool50($48.1, func=bool50, args=(Var($48.1, numbers.py:224),), kws=(), vararg=None)
2022-08-04 11:53:01,021 DEBUG on stmt: jump 106
2022-08-04 11:53:01,021 DEBUG ==== SSA block rewrite pass on 98
2022-08-04 11:53:01,021 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce069518>
2022-08-04 11:53:01,021 DEBUG on stmt: invert.1 = const(bool, False)
2022-08-04 11:53:01,021 DEBUG on stmt: exp.1 = b
2022-08-04 11:53:01,021 DEBUG on stmt: jump 106
2022-08-04 11:53:01,021 DEBUG ==== SSA block rewrite pass on 106
2022-08-04 11:53:01,021 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce069518>
2022-08-04 11:53:01,021 DEBUG on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:220), Var(invert.1, numbers.py:233)], incoming_blocks=[48, 98])
2022-08-04 11:53:01,021 DEBUG on stmt: $const106.2 = const(int, 65536)
2022-08-04 11:53:01,021 DEBUG on stmt: $106.3 = exp > $const106.2
2022-08-04 11:53:01,021 DEBUG find_def var='exp' stmt=$106.3 = exp > $const106.2
2022-08-04 11:53:01,022 DEBUG find_def_from_top label 106
2022-08-04 11:53:01,022 DEBUG insert phi node exp.3 = phi(incoming_values=[], incoming_blocks=[]) at 106
2022-08-04 11:53:01,022 DEBUG find_def_from_bottom label 48
2022-08-04 11:53:01,022 DEBUG find_def_from_top label 48
2022-08-04 11:53:01,022 DEBUG idom 26 from label 48
2022-08-04 11:53:01,022 DEBUG find_def_from_bottom label 26
2022-08-04 11:53:01,022 DEBUG incoming_def exp = unary(fn=<built-in function neg>, value=b)
2022-08-04 11:53:01,022 DEBUG find_def_from_bottom label 98
2022-08-04 11:53:01,022 DEBUG incoming_def exp.1 = b
2022-08-04 11:53:01,022 DEBUG replaced with: $106.3 = exp.3 > $const106.2
2022-08-04 11:53:01,022 DEBUG on stmt: bool112 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,022 DEBUG on stmt: $112pred = call bool112($106.3, func=bool112, args=(Var($106.3, numbers.py:235),), kws=(), vararg=None)
2022-08-04 11:53:01,022 DEBUG on stmt: branch $112pred, 114, 130
2022-08-04 11:53:01,022 DEBUG ==== SSA block rewrite pass on 114
2022-08-04 11:53:01,022 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce069518>
2022-08-04 11:53:01,022 DEBUG on stmt: $114.1 = global(math: <module 'math' from '/Users/wdiepeveen/anaconda3/envs/aspire_env/lib/python3.6/lib-dynload/math.cpython-36m-darwin.so'>)
2022-08-04 11:53:01,022 DEBUG on stmt: $114.2 = getattr(value=$114.1, attr=pow)
2022-08-04 11:53:01,022 DEBUG on stmt: $114.4 = global(float: <class 'float'>)
2022-08-04 11:53:01,022 DEBUG on stmt: $114.6 = call $114.4(b, func=$114.4, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
2022-08-04 11:53:01,022 DEBUG on stmt: $114.7 = call $114.2(a.1, $114.6, func=$114.2, args=[Var(a.1, numbers.py:218), Var($114.6, numbers.py:237)], kws=(), vararg=None)
2022-08-04 11:53:01,022 DEBUG on stmt: $114.8 = cast(value=$114.7)
2022-08-04 11:53:01,023 DEBUG on stmt: return $114.8
2022-08-04 11:53:01,023 DEBUG ==== SSA block rewrite pass on 130
2022-08-04 11:53:01,023 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce069518>
2022-08-04 11:53:01,023 DEBUG on stmt: jump 132
2022-08-04 11:53:01,023 DEBUG ==== SSA block rewrite pass on 132
2022-08-04 11:53:01,023 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce069518>
2022-08-04 11:53:01,023 DEBUG on stmt: $const132.2 = const(int, 0)
2022-08-04 11:53:01,023 DEBUG on stmt: $132.3 = exp != $const132.2
2022-08-04 11:53:01,023 DEBUG find_def var='exp' stmt=$132.3 = exp != $const132.2
2022-08-04 11:53:01,023 DEBUG find_def_from_top label 132
2022-08-04 11:53:01,023 DEBUG insert phi node exp.4 = phi(incoming_values=[], incoming_blocks=[]) at 132
2022-08-04 11:53:01,023 DEBUG find_def_from_bottom label 130
2022-08-04 11:53:01,023 DEBUG find_def_from_top label 130
2022-08-04 11:53:01,023 DEBUG idom 106 from label 130
2022-08-04 11:53:01,023 DEBUG find_def_from_bottom label 106
2022-08-04 11:53:01,023 DEBUG incoming_def exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
2022-08-04 11:53:01,023 DEBUG find_def_from_bottom label 156
2022-08-04 11:53:01,023 DEBUG incoming_def exp.2 = $156.3
2022-08-04 11:53:01,024 DEBUG replaced with: $132.3 = exp.4 != $const132.2
2022-08-04 11:53:01,024 DEBUG on stmt: bool138 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,024 DEBUG on stmt: $138pred = call bool138($132.3, func=bool138, args=(Var($132.3, numbers.py:238),), kws=(), vararg=None)
2022-08-04 11:53:01,024 DEBUG on stmt: branch $138pred, 140, 174
2022-08-04 11:53:01,024 DEBUG ==== SSA block rewrite pass on 140
2022-08-04 11:53:01,024 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce069518>
2022-08-04 11:53:01,024 DEBUG on stmt: $const140.2 = const(int, 1)
2022-08-04 11:53:01,024 DEBUG on stmt: $140.3 = exp & $const140.2
2022-08-04 11:53:01,025 DEBUG find_def var='exp' stmt=$140.3 = exp & $const140.2
2022-08-04 11:53:01,025 DEBUG find_def_from_top label 140
2022-08-04 11:53:01,025 DEBUG idom 132 from label 140
2022-08-04 11:53:01,025 DEBUG find_def_from_bottom label 132
2022-08-04 11:53:01,025 DEBUG replaced with: $140.3 = exp.4 & $const140.2
2022-08-04 11:53:01,025 DEBUG on stmt: bool146 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,025 DEBUG on stmt: $146pred = call bool146($140.3, func=bool146, args=(Var($140.3, numbers.py:239),), kws=(), vararg=None)
2022-08-04 11:53:01,025 DEBUG on stmt: branch $146pred, 148, 156
2022-08-04 11:53:01,025 DEBUG ==== SSA block rewrite pass on 148
2022-08-04 11:53:01,025 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce069518>
2022-08-04 11:53:01,025 DEBUG on stmt: $148.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:53:01,026 DEBUG on stmt: r = $148.3
2022-08-04 11:53:01,026 DEBUG on stmt: jump 156
2022-08-04 11:53:01,026 DEBUG ==== SSA block rewrite pass on 156
2022-08-04 11:53:01,026 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce069518>
2022-08-04 11:53:01,026 DEBUG on stmt: $const156.2 = const(int, 1)
2022-08-04 11:53:01,026 DEBUG on stmt: $156.3 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.2, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:53:01,026 DEBUG find_def var='exp' stmt=$156.3 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.2, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:53:01,026 DEBUG find_def_from_top label 156
2022-08-04 11:53:01,026 DEBUG idom 140 from label 156
2022-08-04 11:53:01,026 DEBUG find_def_from_bottom label 140
2022-08-04 11:53:01,026 DEBUG find_def_from_top label 140
2022-08-04 11:53:01,026 DEBUG idom 132 from label 140
2022-08-04 11:53:01,027 DEBUG find_def_from_bottom label 132
2022-08-04 11:53:01,027 DEBUG replaced with: $156.3 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.2, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:53:01,027 DEBUG on stmt: exp.2 = $156.3
2022-08-04 11:53:01,027 DEBUG on stmt: $156.6 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:53:01,027 DEBUG on stmt: a.1 = $156.6
2022-08-04 11:53:01,027 DEBUG on stmt: jump 132
2022-08-04 11:53:01,027 DEBUG ==== SSA block rewrite pass on 174
2022-08-04 11:53:01,027 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce069518>
2022-08-04 11:53:01,027 DEBUG on stmt: jump 176
2022-08-04 11:53:01,027 DEBUG ==== SSA block rewrite pass on 176
2022-08-04 11:53:01,027 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce069518>
2022-08-04 11:53:01,027 DEBUG on stmt: bool178 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,027 DEBUG on stmt: $178pred = call bool178(invert.2, func=bool178, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
2022-08-04 11:53:01,028 DEBUG on stmt: branch $178pred, 180, 188
2022-08-04 11:53:01,028 DEBUG ==== SSA block rewrite pass on 180
2022-08-04 11:53:01,028 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce069518>
2022-08-04 11:53:01,028 DEBUG on stmt: $const180.1 = const(float, 1.0)
2022-08-04 11:53:01,028 DEBUG on stmt: $180.3 = $const180.1 / r
2022-08-04 11:53:01,028 DEBUG on stmt: $180.4 = cast(value=$180.3)
2022-08-04 11:53:01,028 DEBUG on stmt: return $180.4
2022-08-04 11:53:01,028 DEBUG ==== SSA block rewrite pass on 188
2022-08-04 11:53:01,028 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce069518>
2022-08-04 11:53:01,028 DEBUG on stmt: $188.2 = cast(value=r)
2022-08-04 11:53:01,029 DEBUG on stmt: return $188.2
2022-08-04 11:53:01,029 DEBUG Fix SSA violator on var r
2022-08-04 11:53:01,029 DEBUG ==== SSA block rewrite pass on 0
2022-08-04 11:53:01,029 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdb1bd30>
2022-08-04 11:53:01,029 DEBUG on stmt: a = arg(0, name=a)
2022-08-04 11:53:01,029 DEBUG on stmt: b = arg(1, name=b)
2022-08-04 11:53:01,029 DEBUG on stmt: $0.1 = freevar(tp: float64)
2022-08-04 11:53:01,029 DEBUG on stmt: $const0.2 = const(int, 1)
2022-08-04 11:53:01,029 DEBUG on stmt: r = call $0.1($const0.2, func=$0.1, args=[Var($const0.2, numbers.py:217)], kws=(), vararg=None)
2022-08-04 11:53:01,029 DEBUG first assign: r
2022-08-04 11:53:01,029 DEBUG replaced with: r = call $0.1($const0.2, func=$0.1, args=[Var($const0.2, numbers.py:217)], kws=(), vararg=None)
2022-08-04 11:53:01,029 DEBUG on stmt: $0.4 = freevar(tp: float64)
2022-08-04 11:53:01,029 DEBUG on stmt: a.1 = call $0.4(a, func=$0.4, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
2022-08-04 11:53:01,029 DEBUG on stmt: $const0.8 = const(int, 0)
2022-08-04 11:53:01,030 DEBUG on stmt: $0.9 = b < $const0.8
2022-08-04 11:53:01,030 DEBUG on stmt: bool24 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,030 DEBUG on stmt: $24pred = call bool24($0.9, func=bool24, args=(Var($0.9, numbers.py:219),), kws=(), vararg=None)
2022-08-04 11:53:01,030 DEBUG on stmt: branch $24pred, 26, 98
2022-08-04 11:53:01,030 DEBUG ==== SSA block rewrite pass on 26
2022-08-04 11:53:01,030 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdb1bd30>
2022-08-04 11:53:01,030 DEBUG on stmt: invert = const(bool, True)
2022-08-04 11:53:01,030 DEBUG on stmt: exp = unary(fn=<built-in function neg>, value=b)
2022-08-04 11:53:01,030 DEBUG on stmt: $const26.5 = const(int, 0)
2022-08-04 11:53:01,030 DEBUG on stmt: $26.6 = exp < $const26.5
2022-08-04 11:53:01,030 DEBUG on stmt: bool42 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,030 DEBUG on stmt: $42pred = call bool42($26.6, func=bool42, args=(Var($26.6, numbers.py:222),), kws=(), vararg=None)
2022-08-04 11:53:01,030 DEBUG on stmt: branch $42pred, 44, 48
2022-08-04 11:53:01,030 DEBUG ==== SSA block rewrite pass on 44
2022-08-04 11:53:01,030 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdb1bd30>
2022-08-04 11:53:01,031 DEBUG on stmt: $44.1 = global(OverflowError: <class 'OverflowError'>)
2022-08-04 11:53:01,031 DEBUG on stmt: <static> raise <class 'OverflowError'>
2022-08-04 11:53:01,031 DEBUG ==== SSA block rewrite pass on 48
2022-08-04 11:53:01,031 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdb1bd30>
2022-08-04 11:53:01,031 DEBUG on stmt: $48.1 = freevar(is_integer: False)
2022-08-04 11:53:01,031 DEBUG on stmt: bool50 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,031 DEBUG on stmt: $50pred = call bool50($48.1, func=bool50, args=(Var($48.1, numbers.py:224),), kws=(), vararg=None)
2022-08-04 11:53:01,031 DEBUG on stmt: jump 106
2022-08-04 11:53:01,031 DEBUG ==== SSA block rewrite pass on 98
2022-08-04 11:53:01,031 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdb1bd30>
2022-08-04 11:53:01,031 DEBUG on stmt: invert.1 = const(bool, False)
2022-08-04 11:53:01,032 DEBUG on stmt: exp.1 = b
2022-08-04 11:53:01,032 DEBUG on stmt: jump 106
2022-08-04 11:53:01,032 DEBUG ==== SSA block rewrite pass on 106
2022-08-04 11:53:01,032 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdb1bd30>
2022-08-04 11:53:01,032 DEBUG on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
2022-08-04 11:53:01,032 DEBUG on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:220), Var(invert.1, numbers.py:233)], incoming_blocks=[48, 98])
2022-08-04 11:53:01,032 DEBUG on stmt: $const106.2 = const(int, 65536)
2022-08-04 11:53:01,032 DEBUG on stmt: $106.3 = exp.3 > $const106.2
2022-08-04 11:53:01,033 DEBUG on stmt: bool112 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,033 DEBUG on stmt: $112pred = call bool112($106.3, func=bool112, args=(Var($106.3, numbers.py:235),), kws=(), vararg=None)
2022-08-04 11:53:01,033 DEBUG on stmt: branch $112pred, 114, 130
2022-08-04 11:53:01,033 DEBUG ==== SSA block rewrite pass on 114
2022-08-04 11:53:01,033 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdb1bd30>
2022-08-04 11:53:01,033 DEBUG on stmt: $114.1 = global(math: <module 'math' from '/Users/wdiepeveen/anaconda3/envs/aspire_env/lib/python3.6/lib-dynload/math.cpython-36m-darwin.so'>)
2022-08-04 11:53:01,033 DEBUG on stmt: $114.2 = getattr(value=$114.1, attr=pow)
2022-08-04 11:53:01,033 DEBUG on stmt: $114.4 = global(float: <class 'float'>)
2022-08-04 11:53:01,033 DEBUG on stmt: $114.6 = call $114.4(b, func=$114.4, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
2022-08-04 11:53:01,033 DEBUG on stmt: $114.7 = call $114.2(a.1, $114.6, func=$114.2, args=[Var(a.1, numbers.py:218), Var($114.6, numbers.py:237)], kws=(), vararg=None)
2022-08-04 11:53:01,034 DEBUG on stmt: $114.8 = cast(value=$114.7)
2022-08-04 11:53:01,034 DEBUG on stmt: return $114.8
2022-08-04 11:53:01,034 DEBUG ==== SSA block rewrite pass on 130
2022-08-04 11:53:01,034 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdb1bd30>
2022-08-04 11:53:01,034 DEBUG on stmt: jump 132
2022-08-04 11:53:01,034 DEBUG ==== SSA block rewrite pass on 132
2022-08-04 11:53:01,034 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdb1bd30>
2022-08-04 11:53:01,034 DEBUG on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[130, 156])
2022-08-04 11:53:01,034 DEBUG on stmt: $const132.2 = const(int, 0)
2022-08-04 11:53:01,034 DEBUG on stmt: $132.3 = exp.4 != $const132.2
2022-08-04 11:53:01,035 DEBUG on stmt: bool138 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,035 DEBUG on stmt: $138pred = call bool138($132.3, func=bool138, args=(Var($132.3, numbers.py:238),), kws=(), vararg=None)
2022-08-04 11:53:01,035 DEBUG on stmt: branch $138pred, 140, 174
2022-08-04 11:53:01,035 DEBUG ==== SSA block rewrite pass on 140
2022-08-04 11:53:01,035 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdb1bd30>
2022-08-04 11:53:01,035 DEBUG on stmt: $const140.2 = const(int, 1)
2022-08-04 11:53:01,035 DEBUG on stmt: $140.3 = exp.4 & $const140.2
2022-08-04 11:53:01,035 DEBUG on stmt: bool146 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,035 DEBUG on stmt: $146pred = call bool146($140.3, func=bool146, args=(Var($140.3, numbers.py:239),), kws=(), vararg=None)
2022-08-04 11:53:01,035 DEBUG on stmt: branch $146pred, 148, 156
2022-08-04 11:53:01,035 DEBUG ==== SSA block rewrite pass on 148
2022-08-04 11:53:01,036 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdb1bd30>
2022-08-04 11:53:01,036 DEBUG on stmt: $148.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:53:01,036 DEBUG on stmt: r = $148.3
2022-08-04 11:53:01,036 DEBUG replaced with: r.1 = $148.3
2022-08-04 11:53:01,036 DEBUG on stmt: jump 156
2022-08-04 11:53:01,036 DEBUG ==== SSA block rewrite pass on 156
2022-08-04 11:53:01,036 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdb1bd30>
2022-08-04 11:53:01,036 DEBUG on stmt: $const156.2 = const(int, 1)
2022-08-04 11:53:01,036 DEBUG on stmt: $156.3 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.2, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:53:01,036 DEBUG on stmt: exp.2 = $156.3
2022-08-04 11:53:01,036 DEBUG on stmt: $156.6 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:53:01,036 DEBUG on stmt: a.1 = $156.6
2022-08-04 11:53:01,036 DEBUG on stmt: jump 132
2022-08-04 11:53:01,037 DEBUG ==== SSA block rewrite pass on 174
2022-08-04 11:53:01,037 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdb1bd30>
2022-08-04 11:53:01,037 DEBUG on stmt: jump 176
2022-08-04 11:53:01,037 DEBUG ==== SSA block rewrite pass on 176
2022-08-04 11:53:01,037 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdb1bd30>
2022-08-04 11:53:01,037 DEBUG on stmt: bool178 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,037 DEBUG on stmt: $178pred = call bool178(invert.2, func=bool178, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
2022-08-04 11:53:01,037 DEBUG on stmt: branch $178pred, 180, 188
2022-08-04 11:53:01,037 DEBUG ==== SSA block rewrite pass on 180
2022-08-04 11:53:01,037 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdb1bd30>
2022-08-04 11:53:01,037 DEBUG on stmt: $const180.1 = const(float, 1.0)
2022-08-04 11:53:01,037 DEBUG on stmt: $180.3 = $const180.1 / r
2022-08-04 11:53:01,037 DEBUG on stmt: $180.4 = cast(value=$180.3)
2022-08-04 11:53:01,037 DEBUG on stmt: return $180.4
2022-08-04 11:53:01,037 DEBUG ==== SSA block rewrite pass on 188
2022-08-04 11:53:01,038 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cdb1bd30>
2022-08-04 11:53:01,038 DEBUG on stmt: $188.2 = cast(value=r)
2022-08-04 11:53:01,038 DEBUG on stmt: return $188.2
2022-08-04 11:53:01,038 DEBUG Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7fa2ce352d68>],
             148: [<numba.core.ir.Assign object at 0x7fa2ce30c668>]})
2022-08-04 11:53:01,038 DEBUG ==== SSA block rewrite pass on 0
2022-08-04 11:53:01,038 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdbc9438>
2022-08-04 11:53:01,038 DEBUG on stmt: a = arg(0, name=a)
2022-08-04 11:53:01,038 DEBUG on stmt: b = arg(1, name=b)
2022-08-04 11:53:01,039 DEBUG on stmt: $0.1 = freevar(tp: float64)
2022-08-04 11:53:01,039 DEBUG on stmt: $const0.2 = const(int, 1)
2022-08-04 11:53:01,039 DEBUG on stmt: r = call $0.1($const0.2, func=$0.1, args=[Var($const0.2, numbers.py:217)], kws=(), vararg=None)
2022-08-04 11:53:01,039 DEBUG on stmt: $0.4 = freevar(tp: float64)
2022-08-04 11:53:01,039 DEBUG on stmt: a.1 = call $0.4(a, func=$0.4, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
2022-08-04 11:53:01,039 DEBUG on stmt: $const0.8 = const(int, 0)
2022-08-04 11:53:01,039 DEBUG on stmt: $0.9 = b < $const0.8
2022-08-04 11:53:01,039 DEBUG on stmt: bool24 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,039 DEBUG on stmt: $24pred = call bool24($0.9, func=bool24, args=(Var($0.9, numbers.py:219),), kws=(), vararg=None)
2022-08-04 11:53:01,039 DEBUG on stmt: branch $24pred, 26, 98
2022-08-04 11:53:01,040 DEBUG ==== SSA block rewrite pass on 26
2022-08-04 11:53:01,040 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdbc9438>
2022-08-04 11:53:01,040 DEBUG on stmt: invert = const(bool, True)
2022-08-04 11:53:01,040 DEBUG on stmt: exp = unary(fn=<built-in function neg>, value=b)
2022-08-04 11:53:01,040 DEBUG on stmt: $const26.5 = const(int, 0)
2022-08-04 11:53:01,040 DEBUG on stmt: $26.6 = exp < $const26.5
2022-08-04 11:53:01,040 DEBUG on stmt: bool42 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,040 DEBUG on stmt: $42pred = call bool42($26.6, func=bool42, args=(Var($26.6, numbers.py:222),), kws=(), vararg=None)
2022-08-04 11:53:01,041 DEBUG on stmt: branch $42pred, 44, 48
2022-08-04 11:53:01,041 DEBUG ==== SSA block rewrite pass on 44
2022-08-04 11:53:01,041 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdbc9438>
2022-08-04 11:53:01,041 DEBUG on stmt: $44.1 = global(OverflowError: <class 'OverflowError'>)
2022-08-04 11:53:01,041 DEBUG on stmt: <static> raise <class 'OverflowError'>
2022-08-04 11:53:01,041 DEBUG ==== SSA block rewrite pass on 48
2022-08-04 11:53:01,041 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdbc9438>
2022-08-04 11:53:01,041 DEBUG on stmt: $48.1 = freevar(is_integer: False)
2022-08-04 11:53:01,041 DEBUG on stmt: bool50 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,041 DEBUG on stmt: $50pred = call bool50($48.1, func=bool50, args=(Var($48.1, numbers.py:224),), kws=(), vararg=None)
2022-08-04 11:53:01,042 DEBUG on stmt: jump 106
2022-08-04 11:53:01,042 DEBUG ==== SSA block rewrite pass on 98
2022-08-04 11:53:01,042 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdbc9438>
2022-08-04 11:53:01,042 DEBUG on stmt: invert.1 = const(bool, False)
2022-08-04 11:53:01,042 DEBUG on stmt: exp.1 = b
2022-08-04 11:53:01,042 DEBUG on stmt: jump 106
2022-08-04 11:53:01,042 DEBUG ==== SSA block rewrite pass on 106
2022-08-04 11:53:01,042 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdbc9438>
2022-08-04 11:53:01,042 DEBUG on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
2022-08-04 11:53:01,042 DEBUG on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:220), Var(invert.1, numbers.py:233)], incoming_blocks=[48, 98])
2022-08-04 11:53:01,042 DEBUG on stmt: $const106.2 = const(int, 65536)
2022-08-04 11:53:01,042 DEBUG on stmt: $106.3 = exp.3 > $const106.2
2022-08-04 11:53:01,043 DEBUG on stmt: bool112 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,043 DEBUG on stmt: $112pred = call bool112($106.3, func=bool112, args=(Var($106.3, numbers.py:235),), kws=(), vararg=None)
2022-08-04 11:53:01,043 DEBUG on stmt: branch $112pred, 114, 130
2022-08-04 11:53:01,043 DEBUG ==== SSA block rewrite pass on 114
2022-08-04 11:53:01,043 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdbc9438>
2022-08-04 11:53:01,043 DEBUG on stmt: $114.1 = global(math: <module 'math' from '/Users/wdiepeveen/anaconda3/envs/aspire_env/lib/python3.6/lib-dynload/math.cpython-36m-darwin.so'>)
2022-08-04 11:53:01,043 DEBUG on stmt: $114.2 = getattr(value=$114.1, attr=pow)
2022-08-04 11:53:01,043 DEBUG on stmt: $114.4 = global(float: <class 'float'>)
2022-08-04 11:53:01,043 DEBUG on stmt: $114.6 = call $114.4(b, func=$114.4, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
2022-08-04 11:53:01,043 DEBUG on stmt: $114.7 = call $114.2(a.1, $114.6, func=$114.2, args=[Var(a.1, numbers.py:218), Var($114.6, numbers.py:237)], kws=(), vararg=None)
2022-08-04 11:53:01,043 DEBUG on stmt: $114.8 = cast(value=$114.7)
2022-08-04 11:53:01,043 DEBUG on stmt: return $114.8
2022-08-04 11:53:01,044 DEBUG ==== SSA block rewrite pass on 130
2022-08-04 11:53:01,044 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdbc9438>
2022-08-04 11:53:01,044 DEBUG on stmt: jump 132
2022-08-04 11:53:01,044 DEBUG ==== SSA block rewrite pass on 132
2022-08-04 11:53:01,044 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdbc9438>
2022-08-04 11:53:01,044 DEBUG on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[130, 156])
2022-08-04 11:53:01,044 DEBUG on stmt: $const132.2 = const(int, 0)
2022-08-04 11:53:01,044 DEBUG on stmt: $132.3 = exp.4 != $const132.2
2022-08-04 11:53:01,044 DEBUG on stmt: bool138 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,044 DEBUG on stmt: $138pred = call bool138($132.3, func=bool138, args=(Var($132.3, numbers.py:238),), kws=(), vararg=None)
2022-08-04 11:53:01,044 DEBUG on stmt: branch $138pred, 140, 174
2022-08-04 11:53:01,044 DEBUG ==== SSA block rewrite pass on 140
2022-08-04 11:53:01,044 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdbc9438>
2022-08-04 11:53:01,045 DEBUG on stmt: $const140.2 = const(int, 1)
2022-08-04 11:53:01,045 DEBUG on stmt: $140.3 = exp.4 & $const140.2
2022-08-04 11:53:01,045 DEBUG on stmt: bool146 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,045 DEBUG on stmt: $146pred = call bool146($140.3, func=bool146, args=(Var($140.3, numbers.py:239),), kws=(), vararg=None)
2022-08-04 11:53:01,045 DEBUG on stmt: branch $146pred, 148, 156
2022-08-04 11:53:01,045 DEBUG ==== SSA block rewrite pass on 148
2022-08-04 11:53:01,045 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdbc9438>
2022-08-04 11:53:01,045 DEBUG on stmt: $148.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:53:01,045 DEBUG find_def var='r' stmt=$148.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:53:01,045 DEBUG find_def_from_top label 148
2022-08-04 11:53:01,045 DEBUG idom 140 from label 148
2022-08-04 11:53:01,045 DEBUG find_def_from_bottom label 140
2022-08-04 11:53:01,045 DEBUG find_def_from_top label 140
2022-08-04 11:53:01,046 DEBUG idom 132 from label 140
2022-08-04 11:53:01,046 DEBUG find_def_from_bottom label 132
2022-08-04 11:53:01,046 DEBUG find_def_from_top label 132
2022-08-04 11:53:01,046 DEBUG insert phi node r.2 = phi(incoming_values=[], incoming_blocks=[]) at 132
2022-08-04 11:53:01,046 DEBUG find_def_from_bottom label 130
2022-08-04 11:53:01,046 DEBUG find_def_from_top label 130
2022-08-04 11:53:01,046 DEBUG idom 106 from label 130
2022-08-04 11:53:01,046 DEBUG find_def_from_bottom label 106
2022-08-04 11:53:01,046 DEBUG find_def_from_top label 106
2022-08-04 11:53:01,046 DEBUG idom 0 from label 106
2022-08-04 11:53:01,046 DEBUG find_def_from_bottom label 0
2022-08-04 11:53:01,046 DEBUG incoming_def r = call $0.1($const0.2, func=$0.1, args=[Var($const0.2, numbers.py:217)], kws=(), vararg=None)
2022-08-04 11:53:01,046 DEBUG find_def_from_bottom label 156
2022-08-04 11:53:01,046 DEBUG find_def_from_top label 156
2022-08-04 11:53:01,046 DEBUG insert phi node r.3 = phi(incoming_values=[], incoming_blocks=[]) at 156
2022-08-04 11:53:01,047 DEBUG find_def_from_bottom label 148
2022-08-04 11:53:01,047 DEBUG incoming_def r.1 = $148.3
2022-08-04 11:53:01,047 DEBUG find_def_from_bottom label 140
2022-08-04 11:53:01,047 DEBUG find_def_from_top label 140
2022-08-04 11:53:01,047 DEBUG idom 132 from label 140
2022-08-04 11:53:01,047 DEBUG find_def_from_bottom label 132
2022-08-04 11:53:01,047 DEBUG incoming_def r.2 = phi(incoming_values=[Var(r, numbers.py:217)], incoming_blocks=[130])
2022-08-04 11:53:01,047 DEBUG incoming_def r.3 = phi(incoming_values=[Var(r.1, numbers.py:240), Var(r.2, numbers.py:240)], incoming_blocks=[148, 140])
2022-08-04 11:53:01,047 DEBUG replaced with: $148.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:53:01,047 DEBUG on stmt: r.1 = $148.3
2022-08-04 11:53:01,047 DEBUG on stmt: jump 156
2022-08-04 11:53:01,047 DEBUG ==== SSA block rewrite pass on 156
2022-08-04 11:53:01,047 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdbc9438>
2022-08-04 11:53:01,047 DEBUG on stmt: $const156.2 = const(int, 1)
2022-08-04 11:53:01,047 DEBUG on stmt: $156.3 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.2, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:53:01,048 DEBUG on stmt: exp.2 = $156.3
2022-08-04 11:53:01,048 DEBUG on stmt: $156.6 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:53:01,048 DEBUG on stmt: a.1 = $156.6
2022-08-04 11:53:01,048 DEBUG on stmt: jump 132
2022-08-04 11:53:01,048 DEBUG ==== SSA block rewrite pass on 174
2022-08-04 11:53:01,048 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdbc9438>
2022-08-04 11:53:01,049 DEBUG on stmt: jump 176
2022-08-04 11:53:01,049 DEBUG ==== SSA block rewrite pass on 176
2022-08-04 11:53:01,049 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdbc9438>
2022-08-04 11:53:01,049 DEBUG on stmt: bool178 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,049 DEBUG on stmt: $178pred = call bool178(invert.2, func=bool178, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
2022-08-04 11:53:01,049 DEBUG on stmt: branch $178pred, 180, 188
2022-08-04 11:53:01,049 DEBUG ==== SSA block rewrite pass on 180
2022-08-04 11:53:01,049 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdbc9438>
2022-08-04 11:53:01,049 DEBUG on stmt: $const180.1 = const(float, 1.0)
2022-08-04 11:53:01,049 DEBUG on stmt: $180.3 = $const180.1 / r
2022-08-04 11:53:01,050 DEBUG find_def var='r' stmt=$180.3 = $const180.1 / r
2022-08-04 11:53:01,050 DEBUG find_def_from_top label 180
2022-08-04 11:53:01,050 DEBUG idom 176 from label 180
2022-08-04 11:53:01,050 DEBUG find_def_from_bottom label 176
2022-08-04 11:53:01,050 DEBUG find_def_from_top label 176
2022-08-04 11:53:01,050 DEBUG idom 174 from label 176
2022-08-04 11:53:01,050 DEBUG find_def_from_bottom label 174
2022-08-04 11:53:01,050 DEBUG find_def_from_top label 174
2022-08-04 11:53:01,050 DEBUG idom 132 from label 174
2022-08-04 11:53:01,050 DEBUG find_def_from_bottom label 132
2022-08-04 11:53:01,050 DEBUG replaced with: $180.3 = $const180.1 / r.2
2022-08-04 11:53:01,050 DEBUG on stmt: $180.4 = cast(value=$180.3)
2022-08-04 11:53:01,050 DEBUG on stmt: return $180.4
2022-08-04 11:53:01,051 DEBUG ==== SSA block rewrite pass on 188
2022-08-04 11:53:01,051 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdbc9438>
2022-08-04 11:53:01,051 DEBUG on stmt: $188.2 = cast(value=r)
2022-08-04 11:53:01,051 DEBUG find_def var='r' stmt=$188.2 = cast(value=r)
2022-08-04 11:53:01,051 DEBUG find_def_from_top label 188
2022-08-04 11:53:01,051 DEBUG idom 176 from label 188
2022-08-04 11:53:01,051 DEBUG find_def_from_bottom label 176
2022-08-04 11:53:01,051 DEBUG find_def_from_top label 176
2022-08-04 11:53:01,051 DEBUG idom 174 from label 176
2022-08-04 11:53:01,051 DEBUG find_def_from_bottom label 174
2022-08-04 11:53:01,051 DEBUG find_def_from_top label 174
2022-08-04 11:53:01,051 DEBUG idom 132 from label 174
2022-08-04 11:53:01,051 DEBUG find_def_from_bottom label 132
2022-08-04 11:53:01,051 DEBUG replaced with: $188.2 = cast(value=r.2)
2022-08-04 11:53:01,052 DEBUG on stmt: return $188.2
2022-08-04 11:53:01,052 DEBUG Fix SSA violator on var a.1
2022-08-04 11:53:01,052 DEBUG ==== SSA block rewrite pass on 0
2022-08-04 11:53:01,052 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce069400>
2022-08-04 11:53:01,052 DEBUG on stmt: a = arg(0, name=a)
2022-08-04 11:53:01,052 DEBUG on stmt: b = arg(1, name=b)
2022-08-04 11:53:01,052 DEBUG on stmt: $0.1 = freevar(tp: float64)
2022-08-04 11:53:01,052 DEBUG on stmt: $const0.2 = const(int, 1)
2022-08-04 11:53:01,052 DEBUG on stmt: r = call $0.1($const0.2, func=$0.1, args=[Var($const0.2, numbers.py:217)], kws=(), vararg=None)
2022-08-04 11:53:01,052 DEBUG on stmt: $0.4 = freevar(tp: float64)
2022-08-04 11:53:01,052 DEBUG on stmt: a.1 = call $0.4(a, func=$0.4, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
2022-08-04 11:53:01,052 DEBUG first assign: a.1
2022-08-04 11:53:01,053 DEBUG replaced with: a.1 = call $0.4(a, func=$0.4, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
2022-08-04 11:53:01,053 DEBUG on stmt: $const0.8 = const(int, 0)
2022-08-04 11:53:01,053 DEBUG on stmt: $0.9 = b < $const0.8
2022-08-04 11:53:01,053 DEBUG on stmt: bool24 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,053 DEBUG on stmt: $24pred = call bool24($0.9, func=bool24, args=(Var($0.9, numbers.py:219),), kws=(), vararg=None)
2022-08-04 11:53:01,053 DEBUG on stmt: branch $24pred, 26, 98
2022-08-04 11:53:01,053 DEBUG ==== SSA block rewrite pass on 26
2022-08-04 11:53:01,053 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce069400>
2022-08-04 11:53:01,053 DEBUG on stmt: invert = const(bool, True)
2022-08-04 11:53:01,053 DEBUG on stmt: exp = unary(fn=<built-in function neg>, value=b)
2022-08-04 11:53:01,053 DEBUG on stmt: $const26.5 = const(int, 0)
2022-08-04 11:53:01,053 DEBUG on stmt: $26.6 = exp < $const26.5
2022-08-04 11:53:01,053 DEBUG on stmt: bool42 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,053 DEBUG on stmt: $42pred = call bool42($26.6, func=bool42, args=(Var($26.6, numbers.py:222),), kws=(), vararg=None)
2022-08-04 11:53:01,053 DEBUG on stmt: branch $42pred, 44, 48
2022-08-04 11:53:01,054 DEBUG ==== SSA block rewrite pass on 44
2022-08-04 11:53:01,054 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce069400>
2022-08-04 11:53:01,054 DEBUG on stmt: $44.1 = global(OverflowError: <class 'OverflowError'>)
2022-08-04 11:53:01,054 DEBUG on stmt: <static> raise <class 'OverflowError'>
2022-08-04 11:53:01,054 DEBUG ==== SSA block rewrite pass on 48
2022-08-04 11:53:01,054 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce069400>
2022-08-04 11:53:01,054 DEBUG on stmt: $48.1 = freevar(is_integer: False)
2022-08-04 11:53:01,054 DEBUG on stmt: bool50 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,054 DEBUG on stmt: $50pred = call bool50($48.1, func=bool50, args=(Var($48.1, numbers.py:224),), kws=(), vararg=None)
2022-08-04 11:53:01,054 DEBUG on stmt: jump 106
2022-08-04 11:53:01,054 DEBUG ==== SSA block rewrite pass on 98
2022-08-04 11:53:01,054 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce069400>
2022-08-04 11:53:01,054 DEBUG on stmt: invert.1 = const(bool, False)
2022-08-04 11:53:01,054 DEBUG on stmt: exp.1 = b
2022-08-04 11:53:01,054 DEBUG on stmt: jump 106
2022-08-04 11:53:01,054 DEBUG ==== SSA block rewrite pass on 106
2022-08-04 11:53:01,055 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce069400>
2022-08-04 11:53:01,055 DEBUG on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
2022-08-04 11:53:01,055 DEBUG on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:220), Var(invert.1, numbers.py:233)], incoming_blocks=[48, 98])
2022-08-04 11:53:01,055 DEBUG on stmt: $const106.2 = const(int, 65536)
2022-08-04 11:53:01,055 DEBUG on stmt: $106.3 = exp.3 > $const106.2
2022-08-04 11:53:01,055 DEBUG on stmt: bool112 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,055 DEBUG on stmt: $112pred = call bool112($106.3, func=bool112, args=(Var($106.3, numbers.py:235),), kws=(), vararg=None)
2022-08-04 11:53:01,055 DEBUG on stmt: branch $112pred, 114, 130
2022-08-04 11:53:01,055 DEBUG ==== SSA block rewrite pass on 114
2022-08-04 11:53:01,055 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce069400>
2022-08-04 11:53:01,055 DEBUG on stmt: $114.1 = global(math: <module 'math' from '/Users/wdiepeveen/anaconda3/envs/aspire_env/lib/python3.6/lib-dynload/math.cpython-36m-darwin.so'>)
2022-08-04 11:53:01,055 DEBUG on stmt: $114.2 = getattr(value=$114.1, attr=pow)
2022-08-04 11:53:01,056 DEBUG on stmt: $114.4 = global(float: <class 'float'>)
2022-08-04 11:53:01,056 DEBUG on stmt: $114.6 = call $114.4(b, func=$114.4, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
2022-08-04 11:53:01,056 DEBUG on stmt: $114.7 = call $114.2(a.1, $114.6, func=$114.2, args=[Var(a.1, numbers.py:218), Var($114.6, numbers.py:237)], kws=(), vararg=None)
2022-08-04 11:53:01,056 DEBUG on stmt: $114.8 = cast(value=$114.7)
2022-08-04 11:53:01,056 DEBUG on stmt: return $114.8
2022-08-04 11:53:01,056 DEBUG ==== SSA block rewrite pass on 130
2022-08-04 11:53:01,056 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce069400>
2022-08-04 11:53:01,056 DEBUG on stmt: jump 132
2022-08-04 11:53:01,056 DEBUG ==== SSA block rewrite pass on 132
2022-08-04 11:53:01,056 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce069400>
2022-08-04 11:53:01,057 DEBUG on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:217), Var(r.3, numbers.py:240)], incoming_blocks=[130, 156])
2022-08-04 11:53:01,057 DEBUG on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[130, 156])
2022-08-04 11:53:01,057 DEBUG on stmt: $const132.2 = const(int, 0)
2022-08-04 11:53:01,057 DEBUG on stmt: $132.3 = exp.4 != $const132.2
2022-08-04 11:53:01,057 DEBUG on stmt: bool138 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,057 DEBUG on stmt: $138pred = call bool138($132.3, func=bool138, args=(Var($132.3, numbers.py:238),), kws=(), vararg=None)
2022-08-04 11:53:01,057 DEBUG on stmt: branch $138pred, 140, 174
2022-08-04 11:53:01,057 DEBUG ==== SSA block rewrite pass on 140
2022-08-04 11:53:01,058 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce069400>
2022-08-04 11:53:01,058 DEBUG on stmt: $const140.2 = const(int, 1)
2022-08-04 11:53:01,058 DEBUG on stmt: $140.3 = exp.4 & $const140.2
2022-08-04 11:53:01,058 DEBUG on stmt: bool146 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,058 DEBUG on stmt: $146pred = call bool146($140.3, func=bool146, args=(Var($140.3, numbers.py:239),), kws=(), vararg=None)
2022-08-04 11:53:01,058 DEBUG on stmt: branch $146pred, 148, 156
2022-08-04 11:53:01,058 DEBUG ==== SSA block rewrite pass on 148
2022-08-04 11:53:01,058 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce069400>
2022-08-04 11:53:01,058 DEBUG on stmt: $148.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:53:01,058 DEBUG on stmt: r.1 = $148.3
2022-08-04 11:53:01,058 DEBUG on stmt: jump 156
2022-08-04 11:53:01,058 DEBUG ==== SSA block rewrite pass on 156
2022-08-04 11:53:01,059 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce069400>
2022-08-04 11:53:01,059 DEBUG on stmt: r.3 = phi(incoming_values=[Var(r.1, numbers.py:240), Var(r.2, numbers.py:240)], incoming_blocks=[148, 140])
2022-08-04 11:53:01,059 DEBUG on stmt: $const156.2 = const(int, 1)
2022-08-04 11:53:01,059 DEBUG on stmt: $156.3 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.2, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:53:01,059 DEBUG on stmt: exp.2 = $156.3
2022-08-04 11:53:01,059 DEBUG on stmt: $156.6 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:53:01,059 DEBUG on stmt: a.1 = $156.6
2022-08-04 11:53:01,059 DEBUG replaced with: a.1.1 = $156.6
2022-08-04 11:53:01,059 DEBUG on stmt: jump 132
2022-08-04 11:53:01,059 DEBUG ==== SSA block rewrite pass on 174
2022-08-04 11:53:01,059 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce069400>
2022-08-04 11:53:01,059 DEBUG on stmt: jump 176
2022-08-04 11:53:01,059 DEBUG ==== SSA block rewrite pass on 176
2022-08-04 11:53:01,059 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce069400>
2022-08-04 11:53:01,059 DEBUG on stmt: bool178 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,059 DEBUG on stmt: $178pred = call bool178(invert.2, func=bool178, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
2022-08-04 11:53:01,059 DEBUG on stmt: branch $178pred, 180, 188
2022-08-04 11:53:01,059 DEBUG ==== SSA block rewrite pass on 180
2022-08-04 11:53:01,059 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce069400>
2022-08-04 11:53:01,060 DEBUG on stmt: $const180.1 = const(float, 1.0)
2022-08-04 11:53:01,060 DEBUG on stmt: $180.3 = $const180.1 / r.2
2022-08-04 11:53:01,060 DEBUG on stmt: $180.4 = cast(value=$180.3)
2022-08-04 11:53:01,060 DEBUG on stmt: return $180.4
2022-08-04 11:53:01,060 DEBUG ==== SSA block rewrite pass on 188
2022-08-04 11:53:01,060 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce069400>
2022-08-04 11:53:01,060 DEBUG on stmt: $188.2 = cast(value=r.2)
2022-08-04 11:53:01,060 DEBUG on stmt: return $188.2
2022-08-04 11:53:01,060 DEBUG Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7fa2ce34bc18>],
             156: [<numba.core.ir.Assign object at 0x7fa2ce30cf60>]})
2022-08-04 11:53:01,061 DEBUG ==== SSA block rewrite pass on 0
2022-08-04 11:53:01,061 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce354828>
2022-08-04 11:53:01,061 DEBUG on stmt: a = arg(0, name=a)
2022-08-04 11:53:01,061 DEBUG on stmt: b = arg(1, name=b)
2022-08-04 11:53:01,061 DEBUG on stmt: $0.1 = freevar(tp: float64)
2022-08-04 11:53:01,061 DEBUG on stmt: $const0.2 = const(int, 1)
2022-08-04 11:53:01,061 DEBUG on stmt: r = call $0.1($const0.2, func=$0.1, args=[Var($const0.2, numbers.py:217)], kws=(), vararg=None)
2022-08-04 11:53:01,061 DEBUG on stmt: $0.4 = freevar(tp: float64)
2022-08-04 11:53:01,062 DEBUG on stmt: a.1 = call $0.4(a, func=$0.4, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
2022-08-04 11:53:01,062 DEBUG on stmt: $const0.8 = const(int, 0)
2022-08-04 11:53:01,062 DEBUG on stmt: $0.9 = b < $const0.8
2022-08-04 11:53:01,062 DEBUG on stmt: bool24 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,062 DEBUG on stmt: $24pred = call bool24($0.9, func=bool24, args=(Var($0.9, numbers.py:219),), kws=(), vararg=None)
2022-08-04 11:53:01,062 DEBUG on stmt: branch $24pred, 26, 98
2022-08-04 11:53:01,062 DEBUG ==== SSA block rewrite pass on 26
2022-08-04 11:53:01,062 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce354828>
2022-08-04 11:53:01,062 DEBUG on stmt: invert = const(bool, True)
2022-08-04 11:53:01,062 DEBUG on stmt: exp = unary(fn=<built-in function neg>, value=b)
2022-08-04 11:53:01,062 DEBUG on stmt: $const26.5 = const(int, 0)
2022-08-04 11:53:01,062 DEBUG on stmt: $26.6 = exp < $const26.5
2022-08-04 11:53:01,062 DEBUG on stmt: bool42 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,062 DEBUG on stmt: $42pred = call bool42($26.6, func=bool42, args=(Var($26.6, numbers.py:222),), kws=(), vararg=None)
2022-08-04 11:53:01,062 DEBUG on stmt: branch $42pred, 44, 48
2022-08-04 11:53:01,062 DEBUG ==== SSA block rewrite pass on 44
2022-08-04 11:53:01,062 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce354828>
2022-08-04 11:53:01,062 DEBUG on stmt: $44.1 = global(OverflowError: <class 'OverflowError'>)
2022-08-04 11:53:01,063 DEBUG on stmt: <static> raise <class 'OverflowError'>
2022-08-04 11:53:01,063 DEBUG ==== SSA block rewrite pass on 48
2022-08-04 11:53:01,063 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce354828>
2022-08-04 11:53:01,063 DEBUG on stmt: $48.1 = freevar(is_integer: False)
2022-08-04 11:53:01,063 DEBUG on stmt: bool50 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,063 DEBUG on stmt: $50pred = call bool50($48.1, func=bool50, args=(Var($48.1, numbers.py:224),), kws=(), vararg=None)
2022-08-04 11:53:01,063 DEBUG on stmt: jump 106
2022-08-04 11:53:01,063 DEBUG ==== SSA block rewrite pass on 98
2022-08-04 11:53:01,063 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce354828>
2022-08-04 11:53:01,063 DEBUG on stmt: invert.1 = const(bool, False)
2022-08-04 11:53:01,063 DEBUG on stmt: exp.1 = b
2022-08-04 11:53:01,063 DEBUG on stmt: jump 106
2022-08-04 11:53:01,063 DEBUG ==== SSA block rewrite pass on 106
2022-08-04 11:53:01,063 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce354828>
2022-08-04 11:53:01,063 DEBUG on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
2022-08-04 11:53:01,063 DEBUG on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:220), Var(invert.1, numbers.py:233)], incoming_blocks=[48, 98])
2022-08-04 11:53:01,063 DEBUG on stmt: $const106.2 = const(int, 65536)
2022-08-04 11:53:01,063 DEBUG on stmt: $106.3 = exp.3 > $const106.2
2022-08-04 11:53:01,064 DEBUG on stmt: bool112 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,064 DEBUG on stmt: $112pred = call bool112($106.3, func=bool112, args=(Var($106.3, numbers.py:235),), kws=(), vararg=None)
2022-08-04 11:53:01,064 DEBUG on stmt: branch $112pred, 114, 130
2022-08-04 11:53:01,064 DEBUG ==== SSA block rewrite pass on 114
2022-08-04 11:53:01,064 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce354828>
2022-08-04 11:53:01,064 DEBUG on stmt: $114.1 = global(math: <module 'math' from '/Users/wdiepeveen/anaconda3/envs/aspire_env/lib/python3.6/lib-dynload/math.cpython-36m-darwin.so'>)
2022-08-04 11:53:01,064 DEBUG on stmt: $114.2 = getattr(value=$114.1, attr=pow)
2022-08-04 11:53:01,065 DEBUG on stmt: $114.4 = global(float: <class 'float'>)
2022-08-04 11:53:01,065 DEBUG on stmt: $114.6 = call $114.4(b, func=$114.4, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
2022-08-04 11:53:01,065 DEBUG on stmt: $114.7 = call $114.2(a.1, $114.6, func=$114.2, args=[Var(a.1, numbers.py:218), Var($114.6, numbers.py:237)], kws=(), vararg=None)
2022-08-04 11:53:01,065 DEBUG find_def var='a.1' stmt=$114.7 = call $114.2(a.1, $114.6, func=$114.2, args=[Var(a.1, numbers.py:218), Var($114.6, numbers.py:237)], kws=(), vararg=None)
2022-08-04 11:53:01,065 DEBUG find_def_from_top label 114
2022-08-04 11:53:01,065 DEBUG idom 106 from label 114
2022-08-04 11:53:01,065 DEBUG find_def_from_bottom label 106
2022-08-04 11:53:01,065 DEBUG find_def_from_top label 106
2022-08-04 11:53:01,065 DEBUG idom 0 from label 106
2022-08-04 11:53:01,065 DEBUG find_def_from_bottom label 0
2022-08-04 11:53:01,065 DEBUG on stmt: $114.8 = cast(value=$114.7)
2022-08-04 11:53:01,066 DEBUG on stmt: return $114.8
2022-08-04 11:53:01,066 DEBUG ==== SSA block rewrite pass on 130
2022-08-04 11:53:01,066 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce354828>
2022-08-04 11:53:01,066 DEBUG on stmt: jump 132
2022-08-04 11:53:01,066 DEBUG ==== SSA block rewrite pass on 132
2022-08-04 11:53:01,066 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce354828>
2022-08-04 11:53:01,066 DEBUG on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:217), Var(r.3, numbers.py:240)], incoming_blocks=[130, 156])
2022-08-04 11:53:01,066 DEBUG on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[130, 156])
2022-08-04 11:53:01,066 DEBUG on stmt: $const132.2 = const(int, 0)
2022-08-04 11:53:01,066 DEBUG on stmt: $132.3 = exp.4 != $const132.2
2022-08-04 11:53:01,066 DEBUG on stmt: bool138 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,067 DEBUG on stmt: $138pred = call bool138($132.3, func=bool138, args=(Var($132.3, numbers.py:238),), kws=(), vararg=None)
2022-08-04 11:53:01,067 DEBUG on stmt: branch $138pred, 140, 174
2022-08-04 11:53:01,067 DEBUG ==== SSA block rewrite pass on 140
2022-08-04 11:53:01,067 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce354828>
2022-08-04 11:53:01,067 DEBUG on stmt: $const140.2 = const(int, 1)
2022-08-04 11:53:01,067 DEBUG on stmt: $140.3 = exp.4 & $const140.2
2022-08-04 11:53:01,067 DEBUG on stmt: bool146 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,067 DEBUG on stmt: $146pred = call bool146($140.3, func=bool146, args=(Var($140.3, numbers.py:239),), kws=(), vararg=None)
2022-08-04 11:53:01,067 DEBUG on stmt: branch $146pred, 148, 156
2022-08-04 11:53:01,067 DEBUG ==== SSA block rewrite pass on 148
2022-08-04 11:53:01,067 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce354828>
2022-08-04 11:53:01,068 DEBUG on stmt: $148.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:53:01,068 DEBUG find_def var='a.1' stmt=$148.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:53:01,068 DEBUG find_def_from_top label 148
2022-08-04 11:53:01,068 DEBUG idom 140 from label 148
2022-08-04 11:53:01,068 DEBUG find_def_from_bottom label 140
2022-08-04 11:53:01,068 DEBUG find_def_from_top label 140
2022-08-04 11:53:01,068 DEBUG idom 132 from label 140
2022-08-04 11:53:01,068 DEBUG find_def_from_bottom label 132
2022-08-04 11:53:01,068 DEBUG find_def_from_top label 132
2022-08-04 11:53:01,068 DEBUG insert phi node a.1.2 = phi(incoming_values=[], incoming_blocks=[]) at 132
2022-08-04 11:53:01,068 DEBUG find_def_from_bottom label 130
2022-08-04 11:53:01,068 DEBUG find_def_from_top label 130
2022-08-04 11:53:01,068 DEBUG idom 106 from label 130
2022-08-04 11:53:01,068 DEBUG find_def_from_bottom label 106
2022-08-04 11:53:01,069 DEBUG find_def_from_top label 106
2022-08-04 11:53:01,069 DEBUG idom 0 from label 106
2022-08-04 11:53:01,069 DEBUG find_def_from_bottom label 0
2022-08-04 11:53:01,069 DEBUG incoming_def a.1 = call $0.4(a, func=$0.4, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
2022-08-04 11:53:01,069 DEBUG find_def_from_bottom label 156
2022-08-04 11:53:01,069 DEBUG incoming_def a.1.1 = $156.6
2022-08-04 11:53:01,070 DEBUG replaced with: $148.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:53:01,070 DEBUG on stmt: r.1 = $148.3
2022-08-04 11:53:01,070 DEBUG on stmt: jump 156
2022-08-04 11:53:01,070 DEBUG ==== SSA block rewrite pass on 156
2022-08-04 11:53:01,070 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce354828>
2022-08-04 11:53:01,070 DEBUG on stmt: r.3 = phi(incoming_values=[Var(r.1, numbers.py:240), Var(r.2, numbers.py:240)], incoming_blocks=[148, 140])
2022-08-04 11:53:01,070 DEBUG on stmt: $const156.2 = const(int, 1)
2022-08-04 11:53:01,071 DEBUG on stmt: $156.3 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.2, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:53:01,071 DEBUG on stmt: exp.2 = $156.3
2022-08-04 11:53:01,071 DEBUG on stmt: $156.6 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:53:01,071 DEBUG find_def var='a.1' stmt=$156.6 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:53:01,071 DEBUG find_def_from_top label 156
2022-08-04 11:53:01,071 DEBUG idom 140 from label 156
2022-08-04 11:53:01,071 DEBUG find_def_from_bottom label 140
2022-08-04 11:53:01,071 DEBUG find_def_from_top label 140
2022-08-04 11:53:01,071 DEBUG idom 132 from label 140
2022-08-04 11:53:01,071 DEBUG find_def_from_bottom label 132
2022-08-04 11:53:01,071 DEBUG replaced with: $156.6 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:53:01,071 DEBUG on stmt: a.1.1 = $156.6
2022-08-04 11:53:01,072 DEBUG on stmt: jump 132
2022-08-04 11:53:01,072 DEBUG ==== SSA block rewrite pass on 174
2022-08-04 11:53:01,072 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce354828>
2022-08-04 11:53:01,072 DEBUG on stmt: jump 176
2022-08-04 11:53:01,072 DEBUG ==== SSA block rewrite pass on 176
2022-08-04 11:53:01,072 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce354828>
2022-08-04 11:53:01,072 DEBUG on stmt: bool178 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,072 DEBUG on stmt: $178pred = call bool178(invert.2, func=bool178, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
2022-08-04 11:53:01,072 DEBUG on stmt: branch $178pred, 180, 188
2022-08-04 11:53:01,073 DEBUG ==== SSA block rewrite pass on 180
2022-08-04 11:53:01,073 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce354828>
2022-08-04 11:53:01,073 DEBUG on stmt: $const180.1 = const(float, 1.0)
2022-08-04 11:53:01,073 DEBUG on stmt: $180.3 = $const180.1 / r.2
2022-08-04 11:53:01,073 DEBUG on stmt: $180.4 = cast(value=$180.3)
2022-08-04 11:53:01,073 DEBUG on stmt: return $180.4
2022-08-04 11:53:01,073 DEBUG ==== SSA block rewrite pass on 188
2022-08-04 11:53:01,073 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce354828>
2022-08-04 11:53:01,073 DEBUG on stmt: $188.2 = cast(value=r.2)
2022-08-04 11:53:01,073 DEBUG on stmt: return $188.2
2022-08-04 11:53:01,286 DEBUG label 0:
    q1 = arg(0, name=q1)                     ['q1']
    q2 = arg(1, name=q2)                     ['q2']
    out = arg(2, name=out)                   ['out']
    $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$0.1']
    $0.2 = getattr(value=$0.1, attr=empty)   ['$0.1', '$0.2']
    $const0.3 = const(int, 4)                ['$const0.3']
    qtemp = call $0.2($const0.3, func=$0.2, args=[Var($const0.3, distance.py:111)], kws=(), vararg=None) ['$0.2', '$const0.3', 'qtemp']
    $const0.6 = const(int, 0)                ['$const0.6']
    $0.7 = getitem(value=q1, index=$const0.6, fn=<built-in function getitem>) ['$0.7', '$const0.6', 'q1']
    $const0.9 = const(int, 0)                ['$const0.9']
    $0.10 = getitem(value=q2, index=$const0.9, fn=<built-in function getitem>) ['$0.10', '$const0.9', 'q2']
    $0.11 = $0.7 - $0.10                     ['$0.10', '$0.11', '$0.7']
    $const0.12 = const(int, 2)               ['$const0.12']
    $0.13 = $0.11 ** $const0.12              ['$0.11', '$0.13', '$const0.12']
    $const0.15 = const(int, 1)               ['$const0.15']
    $0.16 = getitem(value=q1, index=$const0.15, fn=<built-in function getitem>) ['$0.16', '$const0.15', 'q1']
    $const0.18 = const(int, 1)               ['$const0.18']
    $0.19 = getitem(value=q2, index=$const0.18, fn=<built-in function getitem>) ['$0.19', '$const0.18', 'q2']
    $0.20 = $0.16 - $0.19                    ['$0.16', '$0.19', '$0.20']
    $const0.21 = const(int, 2)               ['$const0.21']
    $0.22 = $0.20 ** $const0.21              ['$0.20', '$0.22', '$const0.21']
    $0.23 = $0.13 + $0.22                    ['$0.13', '$0.22', '$0.23']
    $const0.25 = const(int, 2)               ['$const0.25']
    $0.26 = getitem(value=q1, index=$const0.25, fn=<built-in function getitem>) ['$0.26', '$const0.25', 'q1']
    $const0.28 = const(int, 2)               ['$const0.28']
    $0.29 = getitem(value=q2, index=$const0.28, fn=<built-in function getitem>) ['$0.29', '$const0.28', 'q2']
    $0.30 = $0.26 - $0.29                    ['$0.26', '$0.29', '$0.30']
    $const0.31 = const(int, 2)               ['$const0.31']
    $0.32 = $0.30 ** $const0.31              ['$0.30', '$0.32', '$const0.31']
    $0.33 = $0.23 + $0.32                    ['$0.23', '$0.32', '$0.33']
    $const0.35 = const(int, 3)               ['$const0.35']
    $0.36 = getitem(value=q1, index=$const0.35, fn=<built-in function getitem>) ['$0.36', '$const0.35', 'q1']
    $const0.38 = const(int, 3)               ['$const0.38']
    $0.39 = getitem(value=q2, index=$const0.38, fn=<built-in function getitem>) ['$0.39', '$const0.38', 'q2']
    $0.40 = $0.36 - $0.39                    ['$0.36', '$0.39', '$0.40']
    $const0.41 = const(int, 2)               ['$const0.41']
    $0.42 = $0.40 ** $const0.41              ['$0.40', '$0.42', '$const0.41']
    a = $0.33 + $0.42                        ['$0.33', '$0.42', 'a']
    $const0.45 = const(int, 0)               ['$const0.45']
    $0.46 = getitem(value=q1, index=$const0.45, fn=<built-in function getitem>) ['$0.46', '$const0.45', 'q1']
    $const0.48 = const(int, 0)               ['$const0.48']
    $0.49 = getitem(value=q2, index=$const0.48, fn=<built-in function getitem>) ['$0.49', '$const0.48', 'q2']
    $0.50 = $0.46 + $0.49                    ['$0.46', '$0.49', '$0.50']
    $const0.51 = const(int, 2)               ['$const0.51']
    $0.52 = $0.50 ** $const0.51              ['$0.50', '$0.52', '$const0.51']
    $const0.54 = const(int, 1)               ['$const0.54']
    $0.55 = getitem(value=q1, index=$const0.54, fn=<built-in function getitem>) ['$0.55', '$const0.54', 'q1']
    $const0.57 = const(int, 1)               ['$const0.57']
    $0.58 = getitem(value=q2, index=$const0.57, fn=<built-in function getitem>) ['$0.58', '$const0.57', 'q2']
    $0.59 = $0.55 + $0.58                    ['$0.55', '$0.58', '$0.59']
    $const0.60 = const(int, 2)               ['$const0.60']
    $0.61 = $0.59 ** $const0.60              ['$0.59', '$0.61', '$const0.60']
    $0.62 = $0.52 + $0.61                    ['$0.52', '$0.61', '$0.62']
    $const0.64 = const(int, 2)               ['$const0.64']
    $0.65 = getitem(value=q1, index=$const0.64, fn=<built-in function getitem>) ['$0.65', '$const0.64', 'q1']
    $const0.67 = const(int, 2)               ['$const0.67']
    $0.68 = getitem(value=q2, index=$const0.67, fn=<built-in function getitem>) ['$0.68', '$const0.67', 'q2']
    $0.69 = $0.65 + $0.68                    ['$0.65', '$0.68', '$0.69']
    $const0.70 = const(int, 2)               ['$const0.70']
    $0.71 = $0.69 ** $const0.70              ['$0.69', '$0.71', '$const0.70']
    $0.72 = $0.62 + $0.71                    ['$0.62', '$0.71', '$0.72']
    $const0.74 = const(int, 3)               ['$const0.74']
    $0.75 = getitem(value=q1, index=$const0.74, fn=<built-in function getitem>) ['$0.75', '$const0.74', 'q1']
    $const0.77 = const(int, 3)               ['$const0.77']
    $0.78 = getitem(value=q2, index=$const0.77, fn=<built-in function getitem>) ['$0.78', '$const0.77', 'q2']
    $0.79 = $0.75 + $0.78                    ['$0.75', '$0.78', '$0.79']
    $const0.80 = const(int, 2)               ['$const0.80']
    $0.81 = $0.79 ** $const0.80              ['$0.79', '$0.81', '$const0.80']
    b = $0.72 + $0.81                        ['$0.72', '$0.81', 'b']
    $0.85 = b > a                            ['$0.85', 'a', 'b']
    bool178 = global(bool: <class 'bool'>)   ['bool178']
    $178pred = call bool178($0.85, func=bool178, args=(Var($0.85, distance.py:114),), kws=(), vararg=None) ['$0.85', '$178pred', 'bool178']
    branch $178pred, 180, 194                ['$178pred']
label 180:
    $180.1 = global(_divide: CPUDispatcher(<function divide at 0x7fa2cd1fa950>)) ['$180.1']
    $180.5 = call $180.1(q1, q2, qtemp, func=$180.1, args=[Var(q1, distance.py:111), Var(q2, distance.py:111), Var(qtemp, distance.py:111)], kws=(), vararg=None) ['$180.1', '$180.5', 'q1', 'q2', 'qtemp']
    jump 208                                 []
label 194:
    $194.1 = global(_divide: CPUDispatcher(<function divide at 0x7fa2cd1fa950>)) ['$194.1']
    $194.4 = unary(fn=<built-in function neg>, value=q2) ['$194.4', 'q2']
    $194.6 = call $194.1(q1, $194.4, qtemp, func=$194.1, args=[Var(q1, distance.py:111), Var($194.4, distance.py:117), Var(qtemp, distance.py:111)], kws=(), vararg=None) ['$194.1', '$194.4', '$194.6', 'q1', 'qtemp']
    jump 208                                 []
label 208:
    $208.1 = global(_log: CPUDispatcher(<function log at 0x7fa2cd1faf28>)) ['$208.1']
    $208.4 = call $208.1(qtemp, qtemp, func=$208.1, args=[Var(qtemp, distance.py:111), Var(qtemp, distance.py:111)], kws=(), vararg=None) ['$208.1', '$208.4', 'qtemp', 'qtemp']
    $208.5 = global(_absolute: CPUDispatcher(<function absolute at 0x7fa2cd1fad90>)) ['$208.5']
    $208.8 = call $208.5(qtemp, out, func=$208.5, args=[Var(qtemp, distance.py:111), Var(out, distance.py:111)], kws=(), vararg=None) ['$208.5', '$208.8', 'out', 'qtemp']
    $const208.10 = const(int, 0)             ['$const208.10']
    $208.13 = getitem(value=out, index=$const208.10, fn=<built-in function getitem>) ['$208.13', '$const208.10', 'out']
    $const208.14 = const(int, 2)             ['$const208.14']
    $208.15 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=$208.13, rhs=$const208.14, static_lhs=Undefined, static_rhs=Undefined) ['$208.13', '$208.15', '$const208.14']
    out[$const208.10] = $208.15              ['$208.15', '$const208.10', 'out']
    $const208.16 = const(NoneType, None)     ['$const208.16']
    $208.17 = cast(value=$const208.16)       ['$208.17', '$const208.16']
    return $208.17                           ['$208.17']

2022-08-04 11:53:01,301 DEBUG ==== SSA block analysis pass on 0
2022-08-04 11:53:01,301 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce378d30>
2022-08-04 11:53:01,301 DEBUG on stmt: q1 = arg(0, name=q1)
2022-08-04 11:53:01,301 DEBUG on stmt: q2 = arg(1, name=q2)
2022-08-04 11:53:01,301 DEBUG on stmt: out = arg(2, name=out)
2022-08-04 11:53:01,301 DEBUG on stmt: $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:01,301 DEBUG on stmt: $0.2 = getattr(value=$0.1, attr=empty)
2022-08-04 11:53:01,301 DEBUG on stmt: $const0.3 = const(int, 4)
2022-08-04 11:53:01,301 DEBUG on stmt: qtemp = call $0.2($const0.3, func=$0.2, args=[Var($const0.3, distance.py:111)], kws=(), vararg=None)
2022-08-04 11:53:01,301 DEBUG on stmt: $const0.6 = const(int, 0)
2022-08-04 11:53:01,301 DEBUG on stmt: $0.7 = static_getitem(value=q1, index=0, index_var=$const0.6, fn=<built-in function getitem>)
2022-08-04 11:53:01,302 DEBUG on stmt: $const0.9 = const(int, 0)
2022-08-04 11:53:01,302 DEBUG on stmt: $0.10 = static_getitem(value=q2, index=0, index_var=$const0.9, fn=<built-in function getitem>)
2022-08-04 11:53:01,302 DEBUG on stmt: $0.11 = $0.7 - $0.10
2022-08-04 11:53:01,302 DEBUG on stmt: $const0.12 = const(int, 2)
2022-08-04 11:53:01,302 DEBUG on stmt: $0.13 = $0.11 ** $const0.12
2022-08-04 11:53:01,302 DEBUG on stmt: $const0.15 = const(int, 1)
2022-08-04 11:53:01,302 DEBUG on stmt: $0.16 = static_getitem(value=q1, index=1, index_var=$const0.15, fn=<built-in function getitem>)
2022-08-04 11:53:01,302 DEBUG on stmt: $const0.18 = const(int, 1)
2022-08-04 11:53:01,302 DEBUG on stmt: $0.19 = static_getitem(value=q2, index=1, index_var=$const0.18, fn=<built-in function getitem>)
2022-08-04 11:53:01,302 DEBUG on stmt: $0.20 = $0.16 - $0.19
2022-08-04 11:53:01,302 DEBUG on stmt: $const0.21 = const(int, 2)
2022-08-04 11:53:01,302 DEBUG on stmt: $0.22 = $0.20 ** $const0.21
2022-08-04 11:53:01,302 DEBUG on stmt: $0.23 = $0.13 + $0.22
2022-08-04 11:53:01,302 DEBUG on stmt: $const0.25 = const(int, 2)
2022-08-04 11:53:01,302 DEBUG on stmt: $0.26 = static_getitem(value=q1, index=2, index_var=$const0.25, fn=<built-in function getitem>)
2022-08-04 11:53:01,302 DEBUG on stmt: $const0.28 = const(int, 2)
2022-08-04 11:53:01,303 DEBUG on stmt: $0.29 = static_getitem(value=q2, index=2, index_var=$const0.28, fn=<built-in function getitem>)
2022-08-04 11:53:01,303 DEBUG on stmt: $0.30 = $0.26 - $0.29
2022-08-04 11:53:01,303 DEBUG on stmt: $const0.31 = const(int, 2)
2022-08-04 11:53:01,303 DEBUG on stmt: $0.32 = $0.30 ** $const0.31
2022-08-04 11:53:01,303 DEBUG on stmt: $0.33 = $0.23 + $0.32
2022-08-04 11:53:01,303 DEBUG on stmt: $const0.35 = const(int, 3)
2022-08-04 11:53:01,303 DEBUG on stmt: $0.36 = static_getitem(value=q1, index=3, index_var=$const0.35, fn=<built-in function getitem>)
2022-08-04 11:53:01,303 DEBUG on stmt: $const0.38 = const(int, 3)
2022-08-04 11:53:01,303 DEBUG on stmt: $0.39 = static_getitem(value=q2, index=3, index_var=$const0.38, fn=<built-in function getitem>)
2022-08-04 11:53:01,303 DEBUG on stmt: $0.40 = $0.36 - $0.39
2022-08-04 11:53:01,303 DEBUG on stmt: $const0.41 = const(int, 2)
2022-08-04 11:53:01,303 DEBUG on stmt: $0.42 = $0.40 ** $const0.41
2022-08-04 11:53:01,303 DEBUG on stmt: a = $0.33 + $0.42
2022-08-04 11:53:01,303 DEBUG on stmt: $const0.45 = const(int, 0)
2022-08-04 11:53:01,304 DEBUG on stmt: $0.46 = static_getitem(value=q1, index=0, index_var=$const0.45, fn=<built-in function getitem>)
2022-08-04 11:53:01,304 DEBUG on stmt: $const0.48 = const(int, 0)
2022-08-04 11:53:01,304 DEBUG on stmt: $0.49 = static_getitem(value=q2, index=0, index_var=$const0.48, fn=<built-in function getitem>)
2022-08-04 11:53:01,304 DEBUG on stmt: $0.50 = $0.46 + $0.49
2022-08-04 11:53:01,304 DEBUG on stmt: $const0.51 = const(int, 2)
2022-08-04 11:53:01,304 DEBUG on stmt: $0.52 = $0.50 ** $const0.51
2022-08-04 11:53:01,304 DEBUG on stmt: $const0.54 = const(int, 1)
2022-08-04 11:53:01,304 DEBUG on stmt: $0.55 = static_getitem(value=q1, index=1, index_var=$const0.54, fn=<built-in function getitem>)
2022-08-04 11:53:01,304 DEBUG on stmt: $const0.57 = const(int, 1)
2022-08-04 11:53:01,304 DEBUG on stmt: $0.58 = static_getitem(value=q2, index=1, index_var=$const0.57, fn=<built-in function getitem>)
2022-08-04 11:53:01,304 DEBUG on stmt: $0.59 = $0.55 + $0.58
2022-08-04 11:53:01,304 DEBUG on stmt: $const0.60 = const(int, 2)
2022-08-04 11:53:01,304 DEBUG on stmt: $0.61 = $0.59 ** $const0.60
2022-08-04 11:53:01,304 DEBUG on stmt: $0.62 = $0.52 + $0.61
2022-08-04 11:53:01,305 DEBUG on stmt: $const0.64 = const(int, 2)
2022-08-04 11:53:01,305 DEBUG on stmt: $0.65 = static_getitem(value=q1, index=2, index_var=$const0.64, fn=<built-in function getitem>)
2022-08-04 11:53:01,305 DEBUG on stmt: $const0.67 = const(int, 2)
2022-08-04 11:53:01,305 DEBUG on stmt: $0.68 = static_getitem(value=q2, index=2, index_var=$const0.67, fn=<built-in function getitem>)
2022-08-04 11:53:01,305 DEBUG on stmt: $0.69 = $0.65 + $0.68
2022-08-04 11:53:01,305 DEBUG on stmt: $const0.70 = const(int, 2)
2022-08-04 11:53:01,305 DEBUG on stmt: $0.71 = $0.69 ** $const0.70
2022-08-04 11:53:01,305 DEBUG on stmt: $0.72 = $0.62 + $0.71
2022-08-04 11:53:01,305 DEBUG on stmt: $const0.74 = const(int, 3)
2022-08-04 11:53:01,305 DEBUG on stmt: $0.75 = static_getitem(value=q1, index=3, index_var=$const0.74, fn=<built-in function getitem>)
2022-08-04 11:53:01,305 DEBUG on stmt: $const0.77 = const(int, 3)
2022-08-04 11:53:01,305 DEBUG on stmt: $0.78 = static_getitem(value=q2, index=3, index_var=$const0.77, fn=<built-in function getitem>)
2022-08-04 11:53:01,305 DEBUG on stmt: $0.79 = $0.75 + $0.78
2022-08-04 11:53:01,305 DEBUG on stmt: $const0.80 = const(int, 2)
2022-08-04 11:53:01,305 DEBUG on stmt: $0.81 = $0.79 ** $const0.80
2022-08-04 11:53:01,305 DEBUG on stmt: b = $0.72 + $0.81
2022-08-04 11:53:01,306 DEBUG on stmt: $0.85 = b > a
2022-08-04 11:53:01,306 DEBUG on stmt: bool178 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,306 DEBUG on stmt: $178pred = call bool178($0.85, func=bool178, args=(Var($0.85, distance.py:114),), kws=(), vararg=None)
2022-08-04 11:53:01,306 DEBUG on stmt: branch $178pred, 180, 194
2022-08-04 11:53:01,306 DEBUG ==== SSA block analysis pass on 180
2022-08-04 11:53:01,306 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce378d30>
2022-08-04 11:53:01,306 DEBUG on stmt: $180.1 = global(_divide: CPUDispatcher(<function divide at 0x7fa2cd1fa950>))
2022-08-04 11:53:01,306 DEBUG on stmt: $180.5 = call $180.1(q1, q2, qtemp, func=$180.1, args=[Var(q1, distance.py:111), Var(q2, distance.py:111), Var(qtemp, distance.py:111)], kws=(), vararg=None)
2022-08-04 11:53:01,306 DEBUG on stmt: jump 208
2022-08-04 11:53:01,306 DEBUG ==== SSA block analysis pass on 194
2022-08-04 11:53:01,306 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce378d30>
2022-08-04 11:53:01,306 DEBUG on stmt: $194.1 = global(_divide: CPUDispatcher(<function divide at 0x7fa2cd1fa950>))
2022-08-04 11:53:01,306 DEBUG on stmt: $194.4 = unary(fn=<built-in function neg>, value=q2)
2022-08-04 11:53:01,306 DEBUG on stmt: $194.6 = call $194.1(q1, $194.4, qtemp, func=$194.1, args=[Var(q1, distance.py:111), Var($194.4, distance.py:117), Var(qtemp, distance.py:111)], kws=(), vararg=None)
2022-08-04 11:53:01,307 DEBUG on stmt: jump 208
2022-08-04 11:53:01,307 DEBUG ==== SSA block analysis pass on 208
2022-08-04 11:53:01,307 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce378d30>
2022-08-04 11:53:01,307 DEBUG on stmt: $208.1 = global(_log: CPUDispatcher(<function log at 0x7fa2cd1faf28>))
2022-08-04 11:53:01,307 DEBUG on stmt: $208.4 = call $208.1(qtemp, qtemp, func=$208.1, args=[Var(qtemp, distance.py:111), Var(qtemp, distance.py:111)], kws=(), vararg=None)
2022-08-04 11:53:01,307 DEBUG on stmt: $208.5 = global(_absolute: CPUDispatcher(<function absolute at 0x7fa2cd1fad90>))
2022-08-04 11:53:01,307 DEBUG on stmt: $208.8 = call $208.5(qtemp, out, func=$208.5, args=[Var(qtemp, distance.py:111), Var(out, distance.py:111)], kws=(), vararg=None)
2022-08-04 11:53:01,307 DEBUG on stmt: $const208.10 = const(int, 0)
2022-08-04 11:53:01,307 DEBUG on stmt: $208.13 = static_getitem(value=out, index=0, index_var=$const208.10, fn=<built-in function getitem>)
2022-08-04 11:53:01,307 DEBUG on stmt: $const208.14 = const(int, 2)
2022-08-04 11:53:01,307 DEBUG on stmt: $208.15 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=$208.13, rhs=$const208.14, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:53:01,307 DEBUG on stmt: out[0] = $208.15
2022-08-04 11:53:01,307 DEBUG on stmt: $const208.16 = const(NoneType, None)
2022-08-04 11:53:01,307 DEBUG on stmt: $208.17 = cast(value=$const208.16)
2022-08-04 11:53:01,308 DEBUG on stmt: return $208.17
2022-08-04 11:53:01,309 DEBUG defs defaultdict(<class 'list'>,
            {'$0.1': [<numba.core.ir.Assign object at 0x7fa2ce37b6d8>],
             '$0.10': [<numba.core.ir.Assign object at 0x7fa2ce37e518>],
             '$0.11': [<numba.core.ir.Assign object at 0x7fa2ce37bfd0>],
             '$0.13': [<numba.core.ir.Assign object at 0x7fa2ce3791d0>],
             '$0.16': [<numba.core.ir.Assign object at 0x7fa2ce37eb38>],
             '$0.19': [<numba.core.ir.Assign object at 0x7fa2ce37eeb8>],
             '$0.2': [<numba.core.ir.Assign object at 0x7fa2ce37b7b8>],
             '$0.20': [<numba.core.ir.Assign object at 0x7fa2ce379780>],
             '$0.22': [<numba.core.ir.Assign object at 0x7fa2ce379940>],
             '$0.23': [<numba.core.ir.Assign object at 0x7fa2ce379a20>],
             '$0.26': [<numba.core.ir.Assign object at 0x7fa2ce37ddd8>],
             '$0.29': [<numba.core.ir.Assign object at 0x7fa2ce37f470>],
             '$0.30': [<numba.core.ir.Assign object at 0x7fa2ce379fd0>],
             '$0.32': [<numba.core.ir.Assign object at 0x7fa2ce3761d0>],
             '$0.33': [<numba.core.ir.Assign object at 0x7fa2ce3762b0>],
             '$0.36': [<numba.core.ir.Assign object at 0x7fa2ce37f4e0>],
             '$0.39': [<numba.core.ir.Assign object at 0x7fa2ce37f550>],
             '$0.40': [<numba.core.ir.Assign object at 0x7fa2ce376860>],
             '$0.42': [<numba.core.ir.Assign object at 0x7fa2ce376a20>],
             '$0.46': [<numba.core.ir.Assign object at 0x7fa2ce37f5c0>],
             '$0.49': [<numba.core.ir.Assign object at 0x7fa2ce37f630>],
             '$0.50': [<numba.core.ir.Assign object at 0x7fa2ce37c198>],
             '$0.52': [<numba.core.ir.Assign object at 0x7fa2ce37c358>],
             '$0.55': [<numba.core.ir.Assign object at 0x7fa2ce37f6a0>],
             '$0.58': [<numba.core.ir.Assign object at 0x7fa2ce37f710>],
             '$0.59': [<numba.core.ir.Assign object at 0x7fa2ce37c908>],
             '$0.61': [<numba.core.ir.Assign object at 0x7fa2ce37cac8>],
             '$0.62': [<numba.core.ir.Assign object at 0x7fa2ce37cba8>],
             '$0.65': [<numba.core.ir.Assign object at 0x7fa2ce37f780>],
             '$0.68': [<numba.core.ir.Assign object at 0x7fa2ce37f7f0>],
             '$0.69': [<numba.core.ir.Assign object at 0x7fa2ce37d198>],
             '$0.7': [<numba.core.ir.Assign object at 0x7fa2ce378ba8>],
             '$0.71': [<numba.core.ir.Assign object at 0x7fa2ce37d358>],
             '$0.72': [<numba.core.ir.Assign object at 0x7fa2ce37d438>],
             '$0.75': [<numba.core.ir.Assign object at 0x7fa2ce37f860>],
             '$0.78': [<numba.core.ir.Assign object at 0x7fa2ce37f8d0>],
             '$0.79': [<numba.core.ir.Assign object at 0x7fa2ce37d9e8>],
             '$0.81': [<numba.core.ir.Assign object at 0x7fa2ce37dba8>],
             '$0.85': [<numba.core.ir.Assign object at 0x7fa2ce37df60>],
             '$178pred': [<numba.core.ir.Assign object at 0x7fa2ce37e160>],
             '$180.1': [<numba.core.ir.Assign object at 0x7fa2ce376c50>],
             '$180.5': [<numba.core.ir.Assign object at 0x7fa2ce37bac8>],
             '$194.1': [<numba.core.ir.Assign object at 0x7fa2ce37e240>],
             '$194.4': [<numba.core.ir.Assign object at 0x7fa2ce37e470>],
             '$194.6': [<numba.core.ir.Assign object at 0x7fa2ce37e5f8>],
             '$208.1': [<numba.core.ir.Assign object at 0x7fa2ce37e6d8>],
             '$208.13': [<numba.core.ir.Assign object at 0x7fa2ce378a90>],
             '$208.15': [<numba.core.ir.Assign object at 0x7fa2ce37f198>],
             '$208.17': [<numba.core.ir.Assign object at 0x7fa2ce37f3c8>],
             '$208.4': [<numba.core.ir.Assign object at 0x7fa2ce37e908>],
             '$208.5': [<numba.core.ir.Assign object at 0x7fa2ce37e9e8>],
             '$208.8': [<numba.core.ir.Assign object at 0x7fa2ce37ec18>],
             '$const0.12': [<numba.core.ir.Assign object at 0x7fa2ce3790f0>],
             '$const0.15': [<numba.core.ir.Assign object at 0x7fa2ce379358>],
             '$const0.18': [<numba.core.ir.Assign object at 0x7fa2ce3795c0>],
             '$const0.21': [<numba.core.ir.Assign object at 0x7fa2ce379860>],
             '$const0.25': [<numba.core.ir.Assign object at 0x7fa2ce379ba8>],
             '$const0.28': [<numba.core.ir.Assign object at 0x7fa2ce379e10>],
             '$const0.3': [<numba.core.ir.Assign object at 0x7fa2ce37b898>],
             '$const0.31': [<numba.core.ir.Assign object at 0x7fa2ce3760f0>],
             '$const0.35': [<numba.core.ir.Assign object at 0x7fa2ce376438>],
             '$const0.38': [<numba.core.ir.Assign object at 0x7fa2ce3766a0>],
             '$const0.41': [<numba.core.ir.Assign object at 0x7fa2ce376940>],
             '$const0.45': [<numba.core.ir.Assign object at 0x7fa2ce376d30>],
             '$const0.48': [<numba.core.ir.Assign object at 0x7fa2ce376f98>],
             '$const0.51': [<numba.core.ir.Assign object at 0x7fa2ce37c278>],
             '$const0.54': [<numba.core.ir.Assign object at 0x7fa2ce37c4e0>],
             '$const0.57': [<numba.core.ir.Assign object at 0x7fa2ce37c748>],
             '$const0.6': [<numba.core.ir.Assign object at 0x7fa2ce37bba8>],
             '$const0.60': [<numba.core.ir.Assign object at 0x7fa2ce37c9e8>],
             '$const0.64': [<numba.core.ir.Assign object at 0x7fa2ce37cd30>],
             '$const0.67': [<numba.core.ir.Assign object at 0x7fa2ce37cf98>],
             '$const0.70': [<numba.core.ir.Assign object at 0x7fa2ce37d278>],
             '$const0.74': [<numba.core.ir.Assign object at 0x7fa2ce37d5c0>],
             '$const0.77': [<numba.core.ir.Assign object at 0x7fa2ce37d828>],
             '$const0.80': [<numba.core.ir.Assign object at 0x7fa2ce37dac8>],
             '$const0.9': [<numba.core.ir.Assign object at 0x7fa2ce37be10>],
             '$const208.10': [<numba.core.ir.Assign object at 0x7fa2ce37eda0>],
             '$const208.14': [<numba.core.ir.Assign object at 0x7fa2ce37f0b8>],
             '$const208.16': [<numba.core.ir.Assign object at 0x7fa2ce37f2e8>],
             'a': [<numba.core.ir.Assign object at 0x7fa2ce376b00>],
             'b': [<numba.core.ir.Assign object at 0x7fa2ce37dc88>],
             'bool178': [<numba.core.ir.Assign object at 0x7fa2ce37e0b8>],
             'out': [<numba.core.ir.Assign object at 0x7fa2ce37b5f8>],
             'q1': [<numba.core.ir.Assign object at 0x7fa2ce37b4a8>],
             'q2': [<numba.core.ir.Assign object at 0x7fa2ce37b550>],
             'qtemp': [<numba.core.ir.Assign object at 0x7fa2ce37b978>]})
2022-08-04 11:53:01,309 DEBUG SSA violators set()
2022-08-04 11:53:01,349 DEBUG label 0:
    q1 = arg(0, name=q1)                     ['q1']
    q2 = arg(1, name=q2)                     ['q2']
    qout = arg(2, name=qout)                 ['qout']
    $const0.2 = const(int, 0)                ['$const0.2']
    $0.3 = getitem(value=q2, index=$const0.2, fn=<built-in function getitem>) ['$0.3', '$const0.2', 'q2']
    $const0.4 = const(int, 2)                ['$const0.4']
    $0.5 = $0.3 ** $const0.4                 ['$0.3', '$0.5', '$const0.4']
    $const0.7 = const(int, 1)                ['$const0.7']
    $0.8 = getitem(value=q2, index=$const0.7, fn=<built-in function getitem>) ['$0.8', '$const0.7', 'q2']
    $const0.9 = const(int, 2)                ['$const0.9']
    $0.10 = $0.8 ** $const0.9                ['$0.10', '$0.8', '$const0.9']
    $0.11 = $0.5 + $0.10                     ['$0.10', '$0.11', '$0.5']
    $const0.13 = const(int, 2)               ['$const0.13']
    $0.14 = getitem(value=q2, index=$const0.13, fn=<built-in function getitem>) ['$0.14', '$const0.13', 'q2']
    $const0.15 = const(int, 2)               ['$const0.15']
    $0.16 = $0.14 ** $const0.15              ['$0.14', '$0.16', '$const0.15']
    $0.17 = $0.11 + $0.16                    ['$0.11', '$0.16', '$0.17']
    $const0.19 = const(int, 3)               ['$const0.19']
    $0.20 = getitem(value=q2, index=$const0.19, fn=<built-in function getitem>) ['$0.20', '$const0.19', 'q2']
    $const0.21 = const(int, 2)               ['$const0.21']
    $0.22 = $0.20 ** $const0.21              ['$0.20', '$0.22', '$const0.21']
    q2norm = $0.17 + $0.22                   ['$0.17', '$0.22', 'q2norm']
    $const0.25 = const(int, 0)               ['$const0.25']
    $0.26 = getitem(value=q1, index=$const0.25, fn=<built-in function getitem>) ['$0.26', '$const0.25', 'q1']
    $0.27 = unary(fn=<built-in function pos>, value=$0.26) ['$0.26', '$0.27']
    $const0.29 = const(int, 0)               ['$const0.29']
    $0.30 = getitem(value=q2, index=$const0.29, fn=<built-in function getitem>) ['$0.30', '$const0.29', 'q2']
    $0.31 = $0.27 * $0.30                    ['$0.27', '$0.30', '$0.31']
    $const0.33 = const(int, 1)               ['$const0.33']
    $0.34 = getitem(value=q1, index=$const0.33, fn=<built-in function getitem>) ['$0.34', '$const0.33', 'q1']
    $const0.36 = const(int, 1)               ['$const0.36']
    $0.37 = getitem(value=q2, index=$const0.36, fn=<built-in function getitem>) ['$0.37', '$const0.36', 'q2']
    $0.38 = $0.34 * $0.37                    ['$0.34', '$0.37', '$0.38']
    $0.39 = $0.31 + $0.38                    ['$0.31', '$0.38', '$0.39']
    $const0.41 = const(int, 2)               ['$const0.41']
    $0.42 = getitem(value=q1, index=$const0.41, fn=<built-in function getitem>) ['$0.42', '$const0.41', 'q1']
    $const0.44 = const(int, 2)               ['$const0.44']
    $0.45 = getitem(value=q2, index=$const0.44, fn=<built-in function getitem>) ['$0.45', '$const0.44', 'q2']
    $0.46 = $0.42 * $0.45                    ['$0.42', '$0.45', '$0.46']
    $0.47 = $0.39 + $0.46                    ['$0.39', '$0.46', '$0.47']
    $const0.49 = const(int, 3)               ['$const0.49']
    $0.50 = getitem(value=q1, index=$const0.49, fn=<built-in function getitem>) ['$0.50', '$const0.49', 'q1']
    $const0.52 = const(int, 3)               ['$const0.52']
    $0.53 = getitem(value=q2, index=$const0.52, fn=<built-in function getitem>) ['$0.53', '$const0.52', 'q2']
    $0.54 = $0.50 * $0.53                    ['$0.50', '$0.53', '$0.54']
    $0.55 = $0.47 + $0.54                    ['$0.47', '$0.54', '$0.55']
    $0.57 = $0.55 / q2norm                   ['$0.55', '$0.57', 'q2norm']
    $const0.59 = const(int, 0)               ['$const0.59']
    qout[$const0.59] = $0.57                 ['$0.57', '$const0.59', 'qout']
    $const0.61 = const(int, 0)               ['$const0.61']
    $0.62 = getitem(value=q1, index=$const0.61, fn=<built-in function getitem>) ['$0.62', '$const0.61', 'q1']
    $0.63 = unary(fn=<built-in function neg>, value=$0.62) ['$0.62', '$0.63']
    $const0.65 = const(int, 1)               ['$const0.65']
    $0.66 = getitem(value=q2, index=$const0.65, fn=<built-in function getitem>) ['$0.66', '$const0.65', 'q2']
    $0.67 = $0.63 * $0.66                    ['$0.63', '$0.66', '$0.67']
    $const0.69 = const(int, 1)               ['$const0.69']
    $0.70 = getitem(value=q1, index=$const0.69, fn=<built-in function getitem>) ['$0.70', '$const0.69', 'q1']
    $const0.72 = const(int, 0)               ['$const0.72']
    $0.73 = getitem(value=q2, index=$const0.72, fn=<built-in function getitem>) ['$0.73', '$const0.72', 'q2']
    $0.74 = $0.70 * $0.73                    ['$0.70', '$0.73', '$0.74']
    $0.75 = $0.67 + $0.74                    ['$0.67', '$0.74', '$0.75']
    $const0.77 = const(int, 2)               ['$const0.77']
    $0.78 = getitem(value=q1, index=$const0.77, fn=<built-in function getitem>) ['$0.78', '$const0.77', 'q1']
    $const0.80 = const(int, 3)               ['$const0.80']
    $0.81 = getitem(value=q2, index=$const0.80, fn=<built-in function getitem>) ['$0.81', '$const0.80', 'q2']
    $0.82 = $0.78 * $0.81                    ['$0.78', '$0.81', '$0.82']
    $0.83 = $0.75 - $0.82                    ['$0.75', '$0.82', '$0.83']
    $const0.85 = const(int, 3)               ['$const0.85']
    $0.86 = getitem(value=q1, index=$const0.85, fn=<built-in function getitem>) ['$0.86', '$const0.85', 'q1']
    $const0.88 = const(int, 2)               ['$const0.88']
    $0.89 = getitem(value=q2, index=$const0.88, fn=<built-in function getitem>) ['$0.89', '$const0.88', 'q2']
    $0.90 = $0.86 * $0.89                    ['$0.86', '$0.89', '$0.90']
    $0.91 = $0.83 + $0.90                    ['$0.83', '$0.90', '$0.91']
    $0.93 = $0.91 / q2norm                   ['$0.91', '$0.93', 'q2norm']
    $const0.95 = const(int, 1)               ['$const0.95']
    qout[$const0.95] = $0.93                 ['$0.93', '$const0.95', 'qout']
    $const0.97 = const(int, 0)               ['$const0.97']
    $0.98 = getitem(value=q1, index=$const0.97, fn=<built-in function getitem>) ['$0.98', '$const0.97', 'q1']
    $0.99 = unary(fn=<built-in function neg>, value=$0.98) ['$0.98', '$0.99']
    $const0.101 = const(int, 2)              ['$const0.101']
    $0.102 = getitem(value=q2, index=$const0.101, fn=<built-in function getitem>) ['$0.102', '$const0.101', 'q2']
    $0.103 = $0.99 * $0.102                  ['$0.102', '$0.103', '$0.99']
    $const0.105 = const(int, 1)              ['$const0.105']
    $0.106 = getitem(value=q1, index=$const0.105, fn=<built-in function getitem>) ['$0.106', '$const0.105', 'q1']
    $const0.108 = const(int, 3)              ['$const0.108']
    $0.109 = getitem(value=q2, index=$const0.108, fn=<built-in function getitem>) ['$0.109', '$const0.108', 'q2']
    $0.110 = $0.106 * $0.109                 ['$0.106', '$0.109', '$0.110']
    $0.111 = $0.103 + $0.110                 ['$0.103', '$0.110', '$0.111']
    $const0.113 = const(int, 2)              ['$const0.113']
    $0.114 = getitem(value=q1, index=$const0.113, fn=<built-in function getitem>) ['$0.114', '$const0.113', 'q1']
    $const0.116 = const(int, 0)              ['$const0.116']
    $0.117 = getitem(value=q2, index=$const0.116, fn=<built-in function getitem>) ['$0.117', '$const0.116', 'q2']
    $0.118 = $0.114 * $0.117                 ['$0.114', '$0.117', '$0.118']
    $0.119 = $0.111 + $0.118                 ['$0.111', '$0.118', '$0.119']
    $const0.121 = const(int, 3)              ['$const0.121']
    $0.122 = getitem(value=q1, index=$const0.121, fn=<built-in function getitem>) ['$0.122', '$const0.121', 'q1']
    $const0.124 = const(int, 1)              ['$const0.124']
    $0.125 = getitem(value=q2, index=$const0.124, fn=<built-in function getitem>) ['$0.125', '$const0.124', 'q2']
    $0.126 = $0.122 * $0.125                 ['$0.122', '$0.125', '$0.126']
    $0.127 = $0.119 - $0.126                 ['$0.119', '$0.126', '$0.127']
    $0.129 = $0.127 / q2norm                 ['$0.127', '$0.129', 'q2norm']
    $const0.131 = const(int, 2)              ['$const0.131']
    qout[$const0.131] = $0.129               ['$0.129', '$const0.131', 'qout']
    $const0.133 = const(int, 0)              ['$const0.133']
    $0.134 = getitem(value=q1, index=$const0.133, fn=<built-in function getitem>) ['$0.134', '$const0.133', 'q1']
    $0.135 = unary(fn=<built-in function neg>, value=$0.134) ['$0.134', '$0.135']
    $const0.137 = const(int, 3)              ['$const0.137']
    $0.138 = getitem(value=q2, index=$const0.137, fn=<built-in function getitem>) ['$0.138', '$const0.137', 'q2']
    $0.139 = $0.135 * $0.138                 ['$0.135', '$0.138', '$0.139']
    $const0.141 = const(int, 1)              ['$const0.141']
    $0.142 = getitem(value=q1, index=$const0.141, fn=<built-in function getitem>) ['$0.142', '$const0.141', 'q1']
    $const0.144 = const(int, 2)              ['$const0.144']
    $0.145 = getitem(value=q2, index=$const0.144, fn=<built-in function getitem>) ['$0.145', '$const0.144', 'q2']
    $0.146 = $0.142 * $0.145                 ['$0.142', '$0.145', '$0.146']
    $0.147 = $0.139 - $0.146                 ['$0.139', '$0.146', '$0.147']
    $const0.149 = const(int, 2)              ['$const0.149']
    $0.150 = getitem(value=q1, index=$const0.149, fn=<built-in function getitem>) ['$0.150', '$const0.149', 'q1']
    $const0.152 = const(int, 1)              ['$const0.152']
    $0.153 = getitem(value=q2, index=$const0.152, fn=<built-in function getitem>) ['$0.153', '$const0.152', 'q2']
    $0.154 = $0.150 * $0.153                 ['$0.150', '$0.153', '$0.154']
    $0.155 = $0.147 + $0.154                 ['$0.147', '$0.154', '$0.155']
    $const0.157 = const(int, 3)              ['$const0.157']
    $0.158 = getitem(value=q1, index=$const0.157, fn=<built-in function getitem>) ['$0.158', '$const0.157', 'q1']
    $const0.160 = const(int, 0)              ['$const0.160']
    $0.161 = getitem(value=q2, index=$const0.160, fn=<built-in function getitem>) ['$0.161', '$const0.160', 'q2']
    $0.162 = $0.158 * $0.161                 ['$0.158', '$0.161', '$0.162']
    $0.163 = $0.155 + $0.162                 ['$0.155', '$0.162', '$0.163']
    $0.165 = $0.163 / q2norm                 ['$0.163', '$0.165', 'q2norm']
    $const0.167 = const(int, 3)              ['$const0.167']
    qout[$const0.167] = $0.165               ['$0.165', '$const0.167', 'qout']
    $const0.168 = const(NoneType, None)      ['$const0.168']
    $0.169 = cast(value=$const0.168)         ['$0.169', '$const0.168']
    return $0.169                            ['$0.169']

2022-08-04 11:53:01,362 DEBUG ==== SSA block analysis pass on 0
2022-08-04 11:53:01,362 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce386828>
2022-08-04 11:53:01,362 DEBUG on stmt: q1 = arg(0, name=q1)
2022-08-04 11:53:01,363 DEBUG on stmt: q2 = arg(1, name=q2)
2022-08-04 11:53:01,363 DEBUG on stmt: qout = arg(2, name=qout)
2022-08-04 11:53:01,363 DEBUG on stmt: $const0.2 = const(int, 0)
2022-08-04 11:53:01,363 DEBUG on stmt: $0.3 = static_getitem(value=q2, index=0, index_var=$const0.2, fn=<built-in function getitem>)
2022-08-04 11:53:01,363 DEBUG on stmt: $const0.4 = const(int, 2)
2022-08-04 11:53:01,363 DEBUG on stmt: $0.5 = $0.3 ** $const0.4
2022-08-04 11:53:01,363 DEBUG on stmt: $const0.7 = const(int, 1)
2022-08-04 11:53:01,363 DEBUG on stmt: $0.8 = static_getitem(value=q2, index=1, index_var=$const0.7, fn=<built-in function getitem>)
2022-08-04 11:53:01,363 DEBUG on stmt: $const0.9 = const(int, 2)
2022-08-04 11:53:01,363 DEBUG on stmt: $0.10 = $0.8 ** $const0.9
2022-08-04 11:53:01,363 DEBUG on stmt: $0.11 = $0.5 + $0.10
2022-08-04 11:53:01,363 DEBUG on stmt: $const0.13 = const(int, 2)
2022-08-04 11:53:01,363 DEBUG on stmt: $0.14 = static_getitem(value=q2, index=2, index_var=$const0.13, fn=<built-in function getitem>)
2022-08-04 11:53:01,363 DEBUG on stmt: $const0.15 = const(int, 2)
2022-08-04 11:53:01,363 DEBUG on stmt: $0.16 = $0.14 ** $const0.15
2022-08-04 11:53:01,363 DEBUG on stmt: $0.17 = $0.11 + $0.16
2022-08-04 11:53:01,363 DEBUG on stmt: $const0.19 = const(int, 3)
2022-08-04 11:53:01,363 DEBUG on stmt: $0.20 = static_getitem(value=q2, index=3, index_var=$const0.19, fn=<built-in function getitem>)
2022-08-04 11:53:01,363 DEBUG on stmt: $const0.21 = const(int, 2)
2022-08-04 11:53:01,363 DEBUG on stmt: $0.22 = $0.20 ** $const0.21
2022-08-04 11:53:01,364 DEBUG on stmt: q2norm = $0.17 + $0.22
2022-08-04 11:53:01,364 DEBUG on stmt: $const0.25 = const(int, 0)
2022-08-04 11:53:01,364 DEBUG on stmt: $0.26 = static_getitem(value=q1, index=0, index_var=$const0.25, fn=<built-in function getitem>)
2022-08-04 11:53:01,364 DEBUG on stmt: $0.27 = unary(fn=<built-in function pos>, value=$0.26)
2022-08-04 11:53:01,364 DEBUG on stmt: $const0.29 = const(int, 0)
2022-08-04 11:53:01,364 DEBUG on stmt: $0.30 = static_getitem(value=q2, index=0, index_var=$const0.29, fn=<built-in function getitem>)
2022-08-04 11:53:01,364 DEBUG on stmt: $0.31 = $0.27 * $0.30
2022-08-04 11:53:01,364 DEBUG on stmt: $const0.33 = const(int, 1)
2022-08-04 11:53:01,364 DEBUG on stmt: $0.34 = static_getitem(value=q1, index=1, index_var=$const0.33, fn=<built-in function getitem>)
2022-08-04 11:53:01,364 DEBUG on stmt: $const0.36 = const(int, 1)
2022-08-04 11:53:01,364 DEBUG on stmt: $0.37 = static_getitem(value=q2, index=1, index_var=$const0.36, fn=<built-in function getitem>)
2022-08-04 11:53:01,364 DEBUG on stmt: $0.38 = $0.34 * $0.37
2022-08-04 11:53:01,364 DEBUG on stmt: $0.39 = $0.31 + $0.38
2022-08-04 11:53:01,364 DEBUG on stmt: $const0.41 = const(int, 2)
2022-08-04 11:53:01,364 DEBUG on stmt: $0.42 = static_getitem(value=q1, index=2, index_var=$const0.41, fn=<built-in function getitem>)
2022-08-04 11:53:01,364 DEBUG on stmt: $const0.44 = const(int, 2)
2022-08-04 11:53:01,365 DEBUG on stmt: $0.45 = static_getitem(value=q2, index=2, index_var=$const0.44, fn=<built-in function getitem>)
2022-08-04 11:53:01,365 DEBUG on stmt: $0.46 = $0.42 * $0.45
2022-08-04 11:53:01,365 DEBUG on stmt: $0.47 = $0.39 + $0.46
2022-08-04 11:53:01,365 DEBUG on stmt: $const0.49 = const(int, 3)
2022-08-04 11:53:01,365 DEBUG on stmt: $0.50 = static_getitem(value=q1, index=3, index_var=$const0.49, fn=<built-in function getitem>)
2022-08-04 11:53:01,365 DEBUG on stmt: $const0.52 = const(int, 3)
2022-08-04 11:53:01,365 DEBUG on stmt: $0.53 = static_getitem(value=q2, index=3, index_var=$const0.52, fn=<built-in function getitem>)
2022-08-04 11:53:01,365 DEBUG on stmt: $0.54 = $0.50 * $0.53
2022-08-04 11:53:01,365 DEBUG on stmt: $0.55 = $0.47 + $0.54
2022-08-04 11:53:01,365 DEBUG on stmt: $0.57 = $0.55 / q2norm
2022-08-04 11:53:01,365 DEBUG on stmt: $const0.59 = const(int, 0)
2022-08-04 11:53:01,365 DEBUG on stmt: qout[0] = $0.57
2022-08-04 11:53:01,365 DEBUG on stmt: $const0.61 = const(int, 0)
2022-08-04 11:53:01,366 DEBUG on stmt: $0.62 = static_getitem(value=q1, index=0, index_var=$const0.61, fn=<built-in function getitem>)
2022-08-04 11:53:01,366 DEBUG on stmt: $0.63 = unary(fn=<built-in function neg>, value=$0.62)
2022-08-04 11:53:01,366 DEBUG on stmt: $const0.65 = const(int, 1)
2022-08-04 11:53:01,366 DEBUG on stmt: $0.66 = static_getitem(value=q2, index=1, index_var=$const0.65, fn=<built-in function getitem>)
2022-08-04 11:53:01,366 DEBUG on stmt: $0.67 = $0.63 * $0.66
2022-08-04 11:53:01,366 DEBUG on stmt: $const0.69 = const(int, 1)
2022-08-04 11:53:01,366 DEBUG on stmt: $0.70 = static_getitem(value=q1, index=1, index_var=$const0.69, fn=<built-in function getitem>)
2022-08-04 11:53:01,366 DEBUG on stmt: $const0.72 = const(int, 0)
2022-08-04 11:53:01,366 DEBUG on stmt: $0.73 = static_getitem(value=q2, index=0, index_var=$const0.72, fn=<built-in function getitem>)
2022-08-04 11:53:01,366 DEBUG on stmt: $0.74 = $0.70 * $0.73
2022-08-04 11:53:01,366 DEBUG on stmt: $0.75 = $0.67 + $0.74
2022-08-04 11:53:01,366 DEBUG on stmt: $const0.77 = const(int, 2)
2022-08-04 11:53:01,366 DEBUG on stmt: $0.78 = static_getitem(value=q1, index=2, index_var=$const0.77, fn=<built-in function getitem>)
2022-08-04 11:53:01,366 DEBUG on stmt: $const0.80 = const(int, 3)
2022-08-04 11:53:01,367 DEBUG on stmt: $0.81 = static_getitem(value=q2, index=3, index_var=$const0.80, fn=<built-in function getitem>)
2022-08-04 11:53:01,367 DEBUG on stmt: $0.82 = $0.78 * $0.81
2022-08-04 11:53:01,367 DEBUG on stmt: $0.83 = $0.75 - $0.82
2022-08-04 11:53:01,367 DEBUG on stmt: $const0.85 = const(int, 3)
2022-08-04 11:53:01,367 DEBUG on stmt: $0.86 = static_getitem(value=q1, index=3, index_var=$const0.85, fn=<built-in function getitem>)
2022-08-04 11:53:01,367 DEBUG on stmt: $const0.88 = const(int, 2)
2022-08-04 11:53:01,367 DEBUG on stmt: $0.89 = static_getitem(value=q2, index=2, index_var=$const0.88, fn=<built-in function getitem>)
2022-08-04 11:53:01,367 DEBUG on stmt: $0.90 = $0.86 * $0.89
2022-08-04 11:53:01,367 DEBUG on stmt: $0.91 = $0.83 + $0.90
2022-08-04 11:53:01,367 DEBUG on stmt: $0.93 = $0.91 / q2norm
2022-08-04 11:53:01,367 DEBUG on stmt: $const0.95 = const(int, 1)
2022-08-04 11:53:01,367 DEBUG on stmt: qout[1] = $0.93
2022-08-04 11:53:01,367 DEBUG on stmt: $const0.97 = const(int, 0)
2022-08-04 11:53:01,367 DEBUG on stmt: $0.98 = static_getitem(value=q1, index=0, index_var=$const0.97, fn=<built-in function getitem>)
2022-08-04 11:53:01,367 DEBUG on stmt: $0.99 = unary(fn=<built-in function neg>, value=$0.98)
2022-08-04 11:53:01,368 DEBUG on stmt: $const0.101 = const(int, 2)
2022-08-04 11:53:01,368 DEBUG on stmt: $0.102 = static_getitem(value=q2, index=2, index_var=$const0.101, fn=<built-in function getitem>)
2022-08-04 11:53:01,368 DEBUG on stmt: $0.103 = $0.99 * $0.102
2022-08-04 11:53:01,368 DEBUG on stmt: $const0.105 = const(int, 1)
2022-08-04 11:53:01,368 DEBUG on stmt: $0.106 = static_getitem(value=q1, index=1, index_var=$const0.105, fn=<built-in function getitem>)
2022-08-04 11:53:01,368 DEBUG on stmt: $const0.108 = const(int, 3)
2022-08-04 11:53:01,368 DEBUG on stmt: $0.109 = static_getitem(value=q2, index=3, index_var=$const0.108, fn=<built-in function getitem>)
2022-08-04 11:53:01,368 DEBUG on stmt: $0.110 = $0.106 * $0.109
2022-08-04 11:53:01,368 DEBUG on stmt: $0.111 = $0.103 + $0.110
2022-08-04 11:53:01,368 DEBUG on stmt: $const0.113 = const(int, 2)
2022-08-04 11:53:01,368 DEBUG on stmt: $0.114 = static_getitem(value=q1, index=2, index_var=$const0.113, fn=<built-in function getitem>)
2022-08-04 11:53:01,368 DEBUG on stmt: $const0.116 = const(int, 0)
2022-08-04 11:53:01,368 DEBUG on stmt: $0.117 = static_getitem(value=q2, index=0, index_var=$const0.116, fn=<built-in function getitem>)
2022-08-04 11:53:01,368 DEBUG on stmt: $0.118 = $0.114 * $0.117
2022-08-04 11:53:01,369 DEBUG on stmt: $0.119 = $0.111 + $0.118
2022-08-04 11:53:01,369 DEBUG on stmt: $const0.121 = const(int, 3)
2022-08-04 11:53:01,369 DEBUG on stmt: $0.122 = static_getitem(value=q1, index=3, index_var=$const0.121, fn=<built-in function getitem>)
2022-08-04 11:53:01,369 DEBUG on stmt: $const0.124 = const(int, 1)
2022-08-04 11:53:01,369 DEBUG on stmt: $0.125 = static_getitem(value=q2, index=1, index_var=$const0.124, fn=<built-in function getitem>)
2022-08-04 11:53:01,369 DEBUG on stmt: $0.126 = $0.122 * $0.125
2022-08-04 11:53:01,369 DEBUG on stmt: $0.127 = $0.119 - $0.126
2022-08-04 11:53:01,369 DEBUG on stmt: $0.129 = $0.127 / q2norm
2022-08-04 11:53:01,369 DEBUG on stmt: $const0.131 = const(int, 2)
2022-08-04 11:53:01,369 DEBUG on stmt: qout[2] = $0.129
2022-08-04 11:53:01,369 DEBUG on stmt: $const0.133 = const(int, 0)
2022-08-04 11:53:01,369 DEBUG on stmt: $0.134 = static_getitem(value=q1, index=0, index_var=$const0.133, fn=<built-in function getitem>)
2022-08-04 11:53:01,369 DEBUG on stmt: $0.135 = unary(fn=<built-in function neg>, value=$0.134)
2022-08-04 11:53:01,369 DEBUG on stmt: $const0.137 = const(int, 3)
2022-08-04 11:53:01,369 DEBUG on stmt: $0.138 = static_getitem(value=q2, index=3, index_var=$const0.137, fn=<built-in function getitem>)
2022-08-04 11:53:01,370 DEBUG on stmt: $0.139 = $0.135 * $0.138
2022-08-04 11:53:01,370 DEBUG on stmt: $const0.141 = const(int, 1)
2022-08-04 11:53:01,370 DEBUG on stmt: $0.142 = static_getitem(value=q1, index=1, index_var=$const0.141, fn=<built-in function getitem>)
2022-08-04 11:53:01,370 DEBUG on stmt: $const0.144 = const(int, 2)
2022-08-04 11:53:01,370 DEBUG on stmt: $0.145 = static_getitem(value=q2, index=2, index_var=$const0.144, fn=<built-in function getitem>)
2022-08-04 11:53:01,370 DEBUG on stmt: $0.146 = $0.142 * $0.145
2022-08-04 11:53:01,370 DEBUG on stmt: $0.147 = $0.139 - $0.146
2022-08-04 11:53:01,370 DEBUG on stmt: $const0.149 = const(int, 2)
2022-08-04 11:53:01,370 DEBUG on stmt: $0.150 = static_getitem(value=q1, index=2, index_var=$const0.149, fn=<built-in function getitem>)
2022-08-04 11:53:01,370 DEBUG on stmt: $const0.152 = const(int, 1)
2022-08-04 11:53:01,370 DEBUG on stmt: $0.153 = static_getitem(value=q2, index=1, index_var=$const0.152, fn=<built-in function getitem>)
2022-08-04 11:53:01,370 DEBUG on stmt: $0.154 = $0.150 * $0.153
2022-08-04 11:53:01,370 DEBUG on stmt: $0.155 = $0.147 + $0.154
2022-08-04 11:53:01,370 DEBUG on stmt: $const0.157 = const(int, 3)
2022-08-04 11:53:01,371 DEBUG on stmt: $0.158 = static_getitem(value=q1, index=3, index_var=$const0.157, fn=<built-in function getitem>)
2022-08-04 11:53:01,371 DEBUG on stmt: $const0.160 = const(int, 0)
2022-08-04 11:53:01,371 DEBUG on stmt: $0.161 = static_getitem(value=q2, index=0, index_var=$const0.160, fn=<built-in function getitem>)
2022-08-04 11:53:01,371 DEBUG on stmt: $0.162 = $0.158 * $0.161
2022-08-04 11:53:01,371 DEBUG on stmt: $0.163 = $0.155 + $0.162
2022-08-04 11:53:01,371 DEBUG on stmt: $0.165 = $0.163 / q2norm
2022-08-04 11:53:01,371 DEBUG on stmt: $const0.167 = const(int, 3)
2022-08-04 11:53:01,371 DEBUG on stmt: qout[3] = $0.165
2022-08-04 11:53:01,371 DEBUG on stmt: $const0.168 = const(NoneType, None)
2022-08-04 11:53:01,371 DEBUG on stmt: $0.169 = cast(value=$const0.168)
2022-08-04 11:53:01,371 DEBUG on stmt: return $0.169
2022-08-04 11:53:01,373 DEBUG defs defaultdict(<class 'list'>,
            {'$0.10': [<numba.core.ir.Assign object at 0x7fa2cdfeb2b0>],
             '$0.102': [<numba.core.ir.Assign object at 0x7fa2ce2596d8>],
             '$0.103': [<numba.core.ir.Assign object at 0x7fa2ce378400>],
             '$0.106': [<numba.core.ir.Assign object at 0x7fa2ce259080>],
             '$0.109': [<numba.core.ir.Assign object at 0x7fa2ce259940>],
             '$0.11': [<numba.core.ir.Assign object at 0x7fa2cdfeb390>],
             '$0.110': [<numba.core.ir.Assign object at 0x7fa2ce31ff60>],
             '$0.111': [<numba.core.ir.Assign object at 0x7fa2ce31f278>],
             '$0.114': [<numba.core.ir.Assign object at 0x7fa2ce259dd8>],
             '$0.117': [<numba.core.ir.Assign object at 0x7fa2ce259390>],
             '$0.118': [<numba.core.ir.Assign object at 0x7fa2ce31f128>],
             '$0.119': [<numba.core.ir.Assign object at 0x7fa2ce31ff28>],
             '$0.122': [<numba.core.ir.Assign object at 0x7fa2ce259198>],
             '$0.125': [<numba.core.ir.Assign object at 0x7fa2ce259208>],
             '$0.126': [<numba.core.ir.Assign object at 0x7fa2ce31f1d0>],
             '$0.127': [<numba.core.ir.Assign object at 0x7fa2ce31f940>],
             '$0.129': [<numba.core.ir.Assign object at 0x7fa2ce354b00>],
             '$0.134': [<numba.core.ir.Assign object at 0x7fa2ce259438>],
             '$0.135': [<numba.core.ir.Assign object at 0x7fa2ce354518>],
             '$0.138': [<numba.core.ir.Assign object at 0x7fa2ce2594e0>],
             '$0.139': [<numba.core.ir.Assign object at 0x7fa2ce3549b0>],
             '$0.14': [<numba.core.ir.Assign object at 0x7fa2ce373358>],
             '$0.142': [<numba.core.ir.Assign object at 0x7fa2ce259320>],
             '$0.145': [<numba.core.ir.Assign object at 0x7fa2ce259470>],
             '$0.146': [<numba.core.ir.Assign object at 0x7fa2ce373b70>],
             '$0.147': [<numba.core.ir.Assign object at 0x7fa2ce373198>],
             '$0.150': [<numba.core.ir.Assign object at 0x7fa2ce2595c0>],
             '$0.153': [<numba.core.ir.Assign object at 0x7fa2ce259748>],
             '$0.154': [<numba.core.ir.Assign object at 0x7fa2ce373a90>],
             '$0.155': [<numba.core.ir.Assign object at 0x7fa2ce3734a8>],
             '$0.158': [<numba.core.ir.Assign object at 0x7fa2ce259c88>],
             '$0.16': [<numba.core.ir.Assign object at 0x7fa2cdfeb208>],
             '$0.161': [<numba.core.ir.Assign object at 0x7fa2ce259f98>],
             '$0.162': [<numba.core.ir.Assign object at 0x7fa2ce2a3518>],
             '$0.163': [<numba.core.ir.Assign object at 0x7fa2ce2a3588>],
             '$0.165': [<numba.core.ir.Assign object at 0x7fa2ce2a30b8>],
             '$0.169': [<numba.core.ir.Assign object at 0x7fa2ce2a36d8>],
             '$0.17': [<numba.core.ir.Assign object at 0x7fa2cdff8e48>],
             '$0.20': [<numba.core.ir.Assign object at 0x7fa2ce373550>],
             '$0.22': [<numba.core.ir.Assign object at 0x7fa2cdff8400>],
             '$0.26': [<numba.core.ir.Assign object at 0x7fa2cdff2f98>],
             '$0.27': [<numba.core.ir.Assign object at 0x7fa2cdff8828>],
             '$0.3': [<numba.core.ir.Assign object at 0x7fa2ce354278>],
             '$0.30': [<numba.core.ir.Assign object at 0x7fa2cdff2fd0>],
             '$0.31': [<numba.core.ir.Assign object at 0x7fa2cdff8208>],
             '$0.34': [<numba.core.ir.Assign object at 0x7fa2ce2a34e0>],
             '$0.37': [<numba.core.ir.Assign object at 0x7fa2ce2a3978>],
             '$0.38': [<numba.core.ir.Assign object at 0x7fa2ce0062b0>],
             '$0.39': [<numba.core.ir.Assign object at 0x7fa2ce006390>],
             '$0.42': [<numba.core.ir.Assign object at 0x7fa2ce2a39e8>],
             '$0.45': [<numba.core.ir.Assign object at 0x7fa2ce2a3f28>],
             '$0.46': [<numba.core.ir.Assign object at 0x7fa2ce006940>],
             '$0.47': [<numba.core.ir.Assign object at 0x7fa2ce006a20>],
             '$0.5': [<numba.core.ir.Assign object at 0x7fa2cdfeb828>],
             '$0.50': [<numba.core.ir.Assign object at 0x7fa2ce34b208>],
             '$0.53': [<numba.core.ir.Assign object at 0x7fa2ce34bef0>],
             '$0.54': [<numba.core.ir.Assign object at 0x7fa2ce006fd0>],
             '$0.55': [<numba.core.ir.Assign object at 0x7fa2ce00b0f0>],
             '$0.57': [<numba.core.ir.Assign object at 0x7fa2ce00b278>],
             '$0.62': [<numba.core.ir.Assign object at 0x7fa2ce34b5c0>],
             '$0.63': [<numba.core.ir.Assign object at 0x7fa2ce00b7b8>],
             '$0.66': [<numba.core.ir.Assign object at 0x7fa2ce255f28>],
             '$0.67': [<numba.core.ir.Assign object at 0x7fa2ce00bb00>],
             '$0.70': [<numba.core.ir.Assign object at 0x7fa2ce2559e8>],
             '$0.73': [<numba.core.ir.Assign object at 0x7fa2ce259630>],
             '$0.74': [<numba.core.ir.Assign object at 0x7fa2cdfed0f0>],
             '$0.75': [<numba.core.ir.Assign object at 0x7fa2cdfed1d0>],
             '$0.78': [<numba.core.ir.Assign object at 0x7fa2ce2594a8>],
             '$0.8': [<numba.core.ir.Assign object at 0x7fa2ce2df2b0>],
             '$0.81': [<numba.core.ir.Assign object at 0x7fa2ce2590f0>],
             '$0.82': [<numba.core.ir.Assign object at 0x7fa2cdfed780>],
             '$0.83': [<numba.core.ir.Assign object at 0x7fa2cdfed860>],
             '$0.86': [<numba.core.ir.Assign object at 0x7fa2ce259a58>],
             '$0.89': [<numba.core.ir.Assign object at 0x7fa2ce2593c8>],
             '$0.90': [<numba.core.ir.Assign object at 0x7fa2ce36e898>],
             '$0.91': [<numba.core.ir.Assign object at 0x7fa2ce36e828>],
             '$0.93': [<numba.core.ir.Assign object at 0x7fa2ce36eb70>],
             '$0.98': [<numba.core.ir.Assign object at 0x7fa2ce259a90>],
             '$0.99': [<numba.core.ir.Assign object at 0x7fa2ce36ea20>],
             '$const0.101': [<numba.core.ir.Assign object at 0x7fa2ce378710>],
             '$const0.105': [<numba.core.ir.Assign object at 0x7fa2ce378240>],
             '$const0.108': [<numba.core.ir.Assign object at 0x7fa2ce378080>],
             '$const0.113': [<numba.core.ir.Assign object at 0x7fa2ce31f8d0>],
             '$const0.116': [<numba.core.ir.Assign object at 0x7fa2ce31f5f8>],
             '$const0.121': [<numba.core.ir.Assign object at 0x7fa2ce31fd68>],
             '$const0.124': [<numba.core.ir.Assign object at 0x7fa2ce31f438>],
             '$const0.13': [<numba.core.ir.Assign object at 0x7fa2cdfeb0f0>],
             '$const0.131': [<numba.core.ir.Assign object at 0x7fa2ce354160>],
             '$const0.133': [<numba.core.ir.Assign object at 0x7fa2ce354358>],
             '$const0.137': [<numba.core.ir.Assign object at 0x7fa2ce3546a0>],
             '$const0.141': [<numba.core.ir.Assign object at 0x7fa2ce2cdc18>],
             '$const0.144': [<numba.core.ir.Assign object at 0x7fa2ce373240>],
             '$const0.149': [<numba.core.ir.Assign object at 0x7fa2ce373f28>],
             '$const0.15': [<numba.core.ir.Assign object at 0x7fa2cdfeb710>],
             '$const0.152': [<numba.core.ir.Assign object at 0x7fa2ce373cf8>],
             '$const0.157': [<numba.core.ir.Assign object at 0x7fa2ce373630>],
             '$const0.160': [<numba.core.ir.Assign object at 0x7fa2ce373898>],
             '$const0.167': [<numba.core.ir.Assign object at 0x7fa2ce2a3198>],
             '$const0.168': [<numba.core.ir.Assign object at 0x7fa2ce2a3470>],
             '$const0.19': [<numba.core.ir.Assign object at 0x7fa2cdff80b8>],
             '$const0.2': [<numba.core.ir.Assign object at 0x7fa2cdfebcc0>],
             '$const0.21': [<numba.core.ir.Assign object at 0x7fa2cdff82e8>],
             '$const0.25': [<numba.core.ir.Assign object at 0x7fa2cdff8748>],
             '$const0.29': [<numba.core.ir.Assign object at 0x7fa2cdff8f60>],
             '$const0.33': [<numba.core.ir.Assign object at 0x7fa2cdff89e8>],
             '$const0.36': [<numba.core.ir.Assign object at 0x7fa2ce0060f0>],
             '$const0.4': [<numba.core.ir.Assign object at 0x7fa2cdfebac8>],
             '$const0.41': [<numba.core.ir.Assign object at 0x7fa2ce006518>],
             '$const0.44': [<numba.core.ir.Assign object at 0x7fa2ce006780>],
             '$const0.49': [<numba.core.ir.Assign object at 0x7fa2ce006ba8>],
             '$const0.52': [<numba.core.ir.Assign object at 0x7fa2ce006e10>],
             '$const0.59': [<numba.core.ir.Assign object at 0x7fa2ce00b400>],
             '$const0.61': [<numba.core.ir.Assign object at 0x7fa2ce00b5f8>],
             '$const0.65': [<numba.core.ir.Assign object at 0x7fa2ce00b940>],
             '$const0.69': [<numba.core.ir.Assign object at 0x7fa2ce00bc88>],
             '$const0.7': [<numba.core.ir.Assign object at 0x7fa2cdfeb668>],
             '$const0.72': [<numba.core.ir.Assign object at 0x7fa2ce00bef0>],
             '$const0.77': [<numba.core.ir.Assign object at 0x7fa2cdfed358>],
             '$const0.80': [<numba.core.ir.Assign object at 0x7fa2cdfed5c0>],
             '$const0.85': [<numba.core.ir.Assign object at 0x7fa2cdfed9e8>],
             '$const0.88': [<numba.core.ir.Assign object at 0x7fa2cdfedc50>],
             '$const0.9': [<numba.core.ir.Assign object at 0x7fa2cdfeb860>],
             '$const0.95': [<numba.core.ir.Assign object at 0x7fa2ce36ec50>],
             '$const0.97': [<numba.core.ir.Assign object at 0x7fa2ce36ee80>],
             'q1': [<numba.core.ir.Assign object at 0x7fa2cdfebda0>],
             'q2': [<numba.core.ir.Assign object at 0x7fa2cdfeba58>],
             'q2norm': [<numba.core.ir.Assign object at 0x7fa2cdff8860>],
             'qout': [<numba.core.ir.Assign object at 0x7fa2cdfebe80>]})
2022-08-04 11:53:01,373 DEBUG SSA violators set()
2022-08-04 11:53:01,939 DEBUG label 0:
    q2_1 = arg(0, name=q2_1)                 ['q2_1']
    $0.2 = unary(fn=<built-in function neg>, value=q2_1) ['$0.2', 'q2_1']
    $0.3 = cast(value=$0.2)                  ['$0.2', '$0.3']
    return $0.3                              ['$0.3']

2022-08-04 11:53:01,941 DEBUG ==== SSA block analysis pass on 0
2022-08-04 11:53:01,941 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce1a0668>
2022-08-04 11:53:01,941 DEBUG on stmt: q2_1 = arg(0, name=q2_1)
2022-08-04 11:53:01,941 DEBUG on stmt: $0.2 = unary(fn=<built-in function neg>, value=q2_1)
2022-08-04 11:53:01,941 DEBUG on stmt: $0.3 = cast(value=$0.2)
2022-08-04 11:53:01,941 DEBUG on stmt: return $0.3
2022-08-04 11:53:01,941 DEBUG defs defaultdict(<class 'list'>,
            {'$0.2': [<numba.core.ir.Assign object at 0x7fa2ce1a0860>],
             '$0.3': [<numba.core.ir.Assign object at 0x7fa2ce1a0908>],
             'q2_1': [<numba.core.ir.Assign object at 0x7fa2ce1a06d8>]})
2022-08-04 11:53:01,941 DEBUG SSA violators set()
2022-08-04 11:53:01,960 DEBUG label 0:
    src_ndim = arg(0, name=src_ndim)         ['src_ndim']
    src_shape = arg(1, name=src_shape)       ['src_shape']
    dest_ndim = arg(2, name=dest_ndim)       ['dest_ndim']
    dest_shape = arg(3, name=dest_shape)     ['dest_shape']
    $0.3 = src_ndim > dest_ndim              ['$0.3', 'dest_ndim', 'src_ndim']
    bool8 = global(bool: <class 'bool'>)     ['bool8']
    $8pred = call bool8($0.3, func=bool8, args=(Var($0.3, npyimpl.py:205),), kws=(), vararg=None) ['$0.3', '$8pred', 'bool8']
    branch $8pred, 10, 14                    ['$8pred']
label 10:
    $const10.1 = const(int, 0)               ['$const10.1']
    $10.2 = cast(value=$const10.1)           ['$10.2', '$const10.1']
    return $10.2                             ['$10.2']
label 14:
    src_index = const(int, 0)                ['src_index']
    dest_index = dest_ndim - src_ndim        ['dest_index', 'dest_ndim', 'src_ndim']
    jump 26                                  []
label 26:
    jump 28                                  []
label 28:
    $28.3 = src_index < src_ndim             ['$28.3', 'src_index', 'src_ndim']
    bool34 = global(bool: <class 'bool'>)    ['bool34']
    $34pred = call bool34($28.3, func=bool34, args=(Var($28.3, npyimpl.py:212),), kws=(), vararg=None) ['$28.3', '$34pred', 'bool34']
    branch $34pred, 36, 122                  ['$34pred']
label 36:
    src_dim_size = getitem(value=src_shape, index=src_index, fn=<built-in function getitem>) ['src_dim_size', 'src_index', 'src_shape']
    dest_dim_size = getitem(value=dest_shape, index=dest_index, fn=<built-in function getitem>) ['dest_dim_size', 'dest_index', 'dest_shape']
    $const36.8 = const(int, 1)               ['$const36.8']
    $36.9 = dest_dim_size != $const36.8      ['$36.9', '$const36.8', 'dest_dim_size']
    bool58 = global(bool: <class 'bool'>)    ['bool58']
    $58pred = call bool58($36.9, func=bool58, args=(Var($36.9, npyimpl.py:217),), kws=(), vararg=None) ['$36.9', '$58pred', 'bool58']
    branch $58pred, 60, 88                   ['$58pred']
label 60:
    $60.3 = src_dim_size != dest_dim_size    ['$60.3', 'dest_dim_size', 'src_dim_size']
    bool66 = global(bool: <class 'bool'>)    ['bool66']
    $66pred = call bool66($60.3, func=bool66, args=(Var($60.3, npyimpl.py:221),), kws=(), vararg=None) ['$60.3', '$66pred', 'bool66']
    branch $66pred, 68, 104                  ['$66pred']
label 68:
    $const68.2 = const(int, 1)               ['$const68.2']
    $68.3 = src_dim_size != $const68.2       ['$68.3', '$const68.2', 'src_dim_size']
    bool74 = global(bool: <class 'bool'>)    ['bool74']
    $74pred = call bool74($68.3, func=bool74, args=(Var($68.3, npyimpl.py:221),), kws=(), vararg=None) ['$68.3', '$74pred', 'bool74']
    branch $74pred, 76, 104                  ['$74pred']
label 76:
    $const76.2 = const(int, 1)               ['$const76.2']
    $76.3 = dest_index + $const76.2          ['$76.3', '$const76.2', 'dest_index']
    $76.4 = unary(fn=<built-in function neg>, value=$76.3) ['$76.3', '$76.4']
    $76.5 = cast(value=$76.4)                ['$76.4', '$76.5']
    return $76.5                             ['$76.5']
label 88:
    $const88.2 = const(int, 1)               ['$const88.2']
    $88.3 = src_dim_size != $const88.2       ['$88.3', '$const88.2', 'src_dim_size']
    bool94 = global(bool: <class 'bool'>)    ['bool94']
    $94pred = call bool94($88.3, func=bool94, args=(Var($88.3, npyimpl.py:223),), kws=(), vararg=None) ['$88.3', '$94pred', 'bool94']
    branch $94pred, 96, 104                  ['$94pred']
label 96:
    dest_shape[dest_index] = src_dim_size    ['dest_index', 'dest_shape', 'src_dim_size']
    jump 104                                 []
label 104:
    $const104.2 = const(int, 1)              ['$const104.2']
    $104.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=src_index, rhs=$const104.2, static_lhs=Undefined, static_rhs=Undefined) ['$104.3', '$const104.2', 'src_index']
    src_index = $104.3                       ['$104.3', 'src_index']
    $const104.5 = const(int, 1)              ['$const104.5']
    $104.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dest_index, rhs=$const104.5, static_lhs=Undefined, static_rhs=Undefined) ['$104.6', '$const104.5', 'dest_index']
    dest_index = $104.6                      ['$104.6', 'dest_index']
    jump 28                                  []
label 122:
    jump 124                                 []
label 124:
    $124.2 = cast(value=dest_index)          ['$124.2', 'dest_index']
    return $124.2                            ['$124.2']

2022-08-04 11:53:01,969 DEBUG ==== SSA block analysis pass on 0
2022-08-04 11:53:01,970 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce0bdba8>
2022-08-04 11:53:01,970 DEBUG on stmt: src_ndim = arg(0, name=src_ndim)
2022-08-04 11:53:01,970 DEBUG on stmt: src_shape = arg(1, name=src_shape)
2022-08-04 11:53:01,970 DEBUG on stmt: dest_ndim = arg(2, name=dest_ndim)
2022-08-04 11:53:01,970 DEBUG on stmt: dest_shape = arg(3, name=dest_shape)
2022-08-04 11:53:01,970 DEBUG on stmt: $0.3 = src_ndim > dest_ndim
2022-08-04 11:53:01,970 DEBUG on stmt: bool8 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,970 DEBUG on stmt: $8pred = call bool8($0.3, func=bool8, args=(Var($0.3, npyimpl.py:205),), kws=(), vararg=None)
2022-08-04 11:53:01,970 DEBUG on stmt: branch $8pred, 10, 14
2022-08-04 11:53:01,970 DEBUG ==== SSA block analysis pass on 10
2022-08-04 11:53:01,970 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce0bdba8>
2022-08-04 11:53:01,971 DEBUG on stmt: $const10.1 = const(int, 0)
2022-08-04 11:53:01,971 DEBUG on stmt: $10.2 = cast(value=$const10.1)
2022-08-04 11:53:01,971 DEBUG on stmt: return $10.2
2022-08-04 11:53:01,971 DEBUG ==== SSA block analysis pass on 14
2022-08-04 11:53:01,971 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce0bdba8>
2022-08-04 11:53:01,971 DEBUG on stmt: src_index = const(int, 0)
2022-08-04 11:53:01,971 DEBUG on stmt: dest_index = dest_ndim - src_ndim
2022-08-04 11:53:01,971 DEBUG on stmt: jump 26
2022-08-04 11:53:01,971 DEBUG ==== SSA block analysis pass on 26
2022-08-04 11:53:01,971 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce0bdba8>
2022-08-04 11:53:01,971 DEBUG on stmt: jump 28
2022-08-04 11:53:01,971 DEBUG ==== SSA block analysis pass on 28
2022-08-04 11:53:01,971 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce0bdba8>
2022-08-04 11:53:01,971 DEBUG on stmt: $28.3 = src_index < src_ndim
2022-08-04 11:53:01,971 DEBUG on stmt: bool34 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,971 DEBUG on stmt: $34pred = call bool34($28.3, func=bool34, args=(Var($28.3, npyimpl.py:212),), kws=(), vararg=None)
2022-08-04 11:53:01,972 DEBUG on stmt: branch $34pred, 36, 122
2022-08-04 11:53:01,972 DEBUG ==== SSA block analysis pass on 36
2022-08-04 11:53:01,972 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce0bdba8>
2022-08-04 11:53:01,972 DEBUG on stmt: src_dim_size = getitem(value=src_shape, index=src_index, fn=<built-in function getitem>)
2022-08-04 11:53:01,972 DEBUG on stmt: dest_dim_size = getitem(value=dest_shape, index=dest_index, fn=<built-in function getitem>)
2022-08-04 11:53:01,972 DEBUG on stmt: $const36.8 = const(int, 1)
2022-08-04 11:53:01,972 DEBUG on stmt: $36.9 = dest_dim_size != $const36.8
2022-08-04 11:53:01,972 DEBUG on stmt: bool58 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,972 DEBUG on stmt: $58pred = call bool58($36.9, func=bool58, args=(Var($36.9, npyimpl.py:217),), kws=(), vararg=None)
2022-08-04 11:53:01,972 DEBUG on stmt: branch $58pred, 60, 88
2022-08-04 11:53:01,972 DEBUG ==== SSA block analysis pass on 60
2022-08-04 11:53:01,972 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce0bdba8>
2022-08-04 11:53:01,972 DEBUG on stmt: $60.3 = src_dim_size != dest_dim_size
2022-08-04 11:53:01,972 DEBUG on stmt: bool66 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,972 DEBUG on stmt: $66pred = call bool66($60.3, func=bool66, args=(Var($60.3, npyimpl.py:221),), kws=(), vararg=None)
2022-08-04 11:53:01,973 DEBUG on stmt: branch $66pred, 68, 104
2022-08-04 11:53:01,973 DEBUG ==== SSA block analysis pass on 68
2022-08-04 11:53:01,973 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce0bdba8>
2022-08-04 11:53:01,973 DEBUG on stmt: $const68.2 = const(int, 1)
2022-08-04 11:53:01,973 DEBUG on stmt: $68.3 = src_dim_size != $const68.2
2022-08-04 11:53:01,973 DEBUG on stmt: bool74 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,973 DEBUG on stmt: $74pred = call bool74($68.3, func=bool74, args=(Var($68.3, npyimpl.py:221),), kws=(), vararg=None)
2022-08-04 11:53:01,973 DEBUG on stmt: branch $74pred, 76, 104
2022-08-04 11:53:01,973 DEBUG ==== SSA block analysis pass on 76
2022-08-04 11:53:01,973 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce0bdba8>
2022-08-04 11:53:01,973 DEBUG on stmt: $const76.2 = const(int, 1)
2022-08-04 11:53:01,973 DEBUG on stmt: $76.3 = dest_index + $const76.2
2022-08-04 11:53:01,973 DEBUG on stmt: $76.4 = unary(fn=<built-in function neg>, value=$76.3)
2022-08-04 11:53:01,973 DEBUG on stmt: $76.5 = cast(value=$76.4)
2022-08-04 11:53:01,973 DEBUG on stmt: return $76.5
2022-08-04 11:53:01,974 DEBUG ==== SSA block analysis pass on 88
2022-08-04 11:53:01,974 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce0bdba8>
2022-08-04 11:53:01,974 DEBUG on stmt: $const88.2 = const(int, 1)
2022-08-04 11:53:01,974 DEBUG on stmt: $88.3 = src_dim_size != $const88.2
2022-08-04 11:53:01,974 DEBUG on stmt: bool94 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,974 DEBUG on stmt: $94pred = call bool94($88.3, func=bool94, args=(Var($88.3, npyimpl.py:223),), kws=(), vararg=None)
2022-08-04 11:53:01,974 DEBUG on stmt: branch $94pred, 96, 104
2022-08-04 11:53:01,974 DEBUG ==== SSA block analysis pass on 96
2022-08-04 11:53:01,974 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce0bdba8>
2022-08-04 11:53:01,974 DEBUG on stmt: dest_shape[dest_index] = src_dim_size
2022-08-04 11:53:01,975 DEBUG on stmt: jump 104
2022-08-04 11:53:01,975 DEBUG ==== SSA block analysis pass on 104
2022-08-04 11:53:01,975 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce0bdba8>
2022-08-04 11:53:01,975 DEBUG on stmt: $const104.2 = const(int, 1)
2022-08-04 11:53:01,975 DEBUG on stmt: $104.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=src_index, rhs=$const104.2, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:53:01,975 DEBUG on stmt: src_index = $104.3
2022-08-04 11:53:01,975 DEBUG on stmt: $const104.5 = const(int, 1)
2022-08-04 11:53:01,976 DEBUG on stmt: $104.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dest_index, rhs=$const104.5, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:53:01,976 DEBUG on stmt: dest_index = $104.6
2022-08-04 11:53:01,976 DEBUG on stmt: jump 28
2022-08-04 11:53:01,976 DEBUG ==== SSA block analysis pass on 122
2022-08-04 11:53:01,976 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce0bdba8>
2022-08-04 11:53:01,976 DEBUG on stmt: jump 124
2022-08-04 11:53:01,976 DEBUG ==== SSA block analysis pass on 124
2022-08-04 11:53:01,976 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce0bdba8>
2022-08-04 11:53:01,976 DEBUG on stmt: $124.2 = cast(value=dest_index)
2022-08-04 11:53:01,976 DEBUG on stmt: return $124.2
2022-08-04 11:53:01,976 DEBUG defs defaultdict(<class 'list'>,
            {'$0.3': [<numba.core.ir.Assign object at 0x7fa2ce0b15c0>],
             '$10.2': [<numba.core.ir.Assign object at 0x7fa2ce0b19b0>],
             '$104.3': [<numba.core.ir.Assign object at 0x7fa2ce0bd668>],
             '$104.6': [<numba.core.ir.Assign object at 0x7fa2ce0bdac8>],
             '$124.2': [<numba.core.ir.Assign object at 0x7fa2ce0bdeb8>],
             '$28.3': [<numba.core.ir.Assign object at 0x7fa2ce0b51d0>],
             '$34pred': [<numba.core.ir.Assign object at 0x7fa2ce0b53c8>],
             '$36.9': [<numba.core.ir.Assign object at 0x7fa2ce0b5c18>],
             '$58pred': [<numba.core.ir.Assign object at 0x7fa2ce0b5e10>],
             '$60.3': [<numba.core.ir.Assign object at 0x7fa2ce0b5f60>],
             '$66pred': [<numba.core.ir.Assign object at 0x7fa2ce0b9160>],
             '$68.3': [<numba.core.ir.Assign object at 0x7fa2ce0b9470>],
             '$74pred': [<numba.core.ir.Assign object at 0x7fa2ce0b96a0>],
             '$76.3': [<numba.core.ir.Assign object at 0x7fa2ce0b9940>],
             '$76.4': [<numba.core.ir.Assign object at 0x7fa2ce0b9a20>],
             '$76.5': [<numba.core.ir.Assign object at 0x7fa2ce0b9a58>],
             '$88.3': [<numba.core.ir.Assign object at 0x7fa2ce0b9da0>],
             '$8pred': [<numba.core.ir.Assign object at 0x7fa2ce0b17b8>],
             '$94pred': [<numba.core.ir.Assign object at 0x7fa2ce0b9f28>],
             '$const10.1': [<numba.core.ir.Assign object at 0x7fa2ce0b18d0>],
             '$const104.2': [<numba.core.ir.Assign object at 0x7fa2ce0bd320>],
             '$const104.5': [<numba.core.ir.Assign object at 0x7fa2ce0bd8d0>],
             '$const36.8': [<numba.core.ir.Assign object at 0x7fa2ce0b5b38>],
             '$const68.2': [<numba.core.ir.Assign object at 0x7fa2ce0b9358>],
             '$const76.2': [<numba.core.ir.Assign object at 0x7fa2ce0b97f0>],
             '$const88.2': [<numba.core.ir.Assign object at 0x7fa2ce0b9cc0>],
             'bool34': [<numba.core.ir.Assign object at 0x7fa2ce0b52e8>],
             'bool58': [<numba.core.ir.Assign object at 0x7fa2ce0b5d30>],
             'bool66': [<numba.core.ir.Assign object at 0x7fa2ce0b90b8>],
             'bool74': [<numba.core.ir.Assign object at 0x7fa2ce0b9550>],
             'bool8': [<numba.core.ir.Assign object at 0x7fa2ce0b16d8>],
             'bool94': [<numba.core.ir.Assign object at 0x7fa2ce0b9f98>],
             'dest_dim_size': [<numba.core.ir.Assign object at 0x7fa2ce0b5908>],
             'dest_index': [<numba.core.ir.Assign object at 0x7fa2ce0b1e10>,
                            <numba.core.ir.Assign object at 0x7fa2ce0bdb00>],
             'dest_ndim': [<numba.core.ir.Assign object at 0x7fa2ce0b12e8>],
             'dest_shape': [<numba.core.ir.Assign object at 0x7fa2ce0b1390>],
             'src_dim_size': [<numba.core.ir.Assign object at 0x7fa2ce0b5630>],
             'src_index': [<numba.core.ir.Assign object at 0x7fa2ce0b1b38>,
                           <numba.core.ir.Assign object at 0x7fa2ce0bd630>],
             'src_ndim': [<numba.core.ir.Assign object at 0x7fa2ce0b1198>],
             'src_shape': [<numba.core.ir.Assign object at 0x7fa2ce0b1240>]})
2022-08-04 11:53:01,976 DEBUG SSA violators {'src_index', 'dest_index'}
2022-08-04 11:53:01,976 DEBUG Fix SSA violator on var src_index
2022-08-04 11:53:01,976 DEBUG ==== SSA block rewrite pass on 0
2022-08-04 11:53:01,976 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce0bdba8>
2022-08-04 11:53:01,977 DEBUG on stmt: src_ndim = arg(0, name=src_ndim)
2022-08-04 11:53:01,977 DEBUG on stmt: src_shape = arg(1, name=src_shape)
2022-08-04 11:53:01,977 DEBUG on stmt: dest_ndim = arg(2, name=dest_ndim)
2022-08-04 11:53:01,977 DEBUG on stmt: dest_shape = arg(3, name=dest_shape)
2022-08-04 11:53:01,977 DEBUG on stmt: $0.3 = src_ndim > dest_ndim
2022-08-04 11:53:01,977 DEBUG on stmt: bool8 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,977 DEBUG on stmt: $8pred = call bool8($0.3, func=bool8, args=(Var($0.3, npyimpl.py:205),), kws=(), vararg=None)
2022-08-04 11:53:01,977 DEBUG on stmt: branch $8pred, 10, 14
2022-08-04 11:53:01,977 DEBUG ==== SSA block rewrite pass on 10
2022-08-04 11:53:01,977 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce0bdba8>
2022-08-04 11:53:01,977 DEBUG on stmt: $const10.1 = const(int, 0)
2022-08-04 11:53:01,977 DEBUG on stmt: $10.2 = cast(value=$const10.1)
2022-08-04 11:53:01,977 DEBUG on stmt: return $10.2
2022-08-04 11:53:01,977 DEBUG ==== SSA block rewrite pass on 14
2022-08-04 11:53:01,977 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce0bdba8>
2022-08-04 11:53:01,977 DEBUG on stmt: src_index = const(int, 0)
2022-08-04 11:53:01,977 DEBUG first assign: src_index
2022-08-04 11:53:01,977 DEBUG replaced with: src_index = const(int, 0)
2022-08-04 11:53:01,977 DEBUG on stmt: dest_index = dest_ndim - src_ndim
2022-08-04 11:53:01,977 DEBUG on stmt: jump 26
2022-08-04 11:53:01,977 DEBUG ==== SSA block rewrite pass on 26
2022-08-04 11:53:01,977 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce0bdba8>
2022-08-04 11:53:01,977 DEBUG on stmt: jump 28
2022-08-04 11:53:01,977 DEBUG ==== SSA block rewrite pass on 28
2022-08-04 11:53:01,978 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce0bdba8>
2022-08-04 11:53:01,978 DEBUG on stmt: $28.3 = src_index < src_ndim
2022-08-04 11:53:01,978 DEBUG on stmt: bool34 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,978 DEBUG on stmt: $34pred = call bool34($28.3, func=bool34, args=(Var($28.3, npyimpl.py:212),), kws=(), vararg=None)
2022-08-04 11:53:01,978 DEBUG on stmt: branch $34pred, 36, 122
2022-08-04 11:53:01,978 DEBUG ==== SSA block rewrite pass on 36
2022-08-04 11:53:01,978 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce0bdba8>
2022-08-04 11:53:01,978 DEBUG on stmt: src_dim_size = getitem(value=src_shape, index=src_index, fn=<built-in function getitem>)
2022-08-04 11:53:01,978 DEBUG on stmt: dest_dim_size = getitem(value=dest_shape, index=dest_index, fn=<built-in function getitem>)
2022-08-04 11:53:01,978 DEBUG on stmt: $const36.8 = const(int, 1)
2022-08-04 11:53:01,978 DEBUG on stmt: $36.9 = dest_dim_size != $const36.8
2022-08-04 11:53:01,978 DEBUG on stmt: bool58 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,978 DEBUG on stmt: $58pred = call bool58($36.9, func=bool58, args=(Var($36.9, npyimpl.py:217),), kws=(), vararg=None)
2022-08-04 11:53:01,978 DEBUG on stmt: branch $58pred, 60, 88
2022-08-04 11:53:01,978 DEBUG ==== SSA block rewrite pass on 60
2022-08-04 11:53:01,978 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce0bdba8>
2022-08-04 11:53:01,978 DEBUG on stmt: $60.3 = src_dim_size != dest_dim_size
2022-08-04 11:53:01,978 DEBUG on stmt: bool66 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,978 DEBUG on stmt: $66pred = call bool66($60.3, func=bool66, args=(Var($60.3, npyimpl.py:221),), kws=(), vararg=None)
2022-08-04 11:53:01,978 DEBUG on stmt: branch $66pred, 68, 104
2022-08-04 11:53:01,978 DEBUG ==== SSA block rewrite pass on 68
2022-08-04 11:53:01,978 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce0bdba8>
2022-08-04 11:53:01,979 DEBUG on stmt: $const68.2 = const(int, 1)
2022-08-04 11:53:01,979 DEBUG on stmt: $68.3 = src_dim_size != $const68.2
2022-08-04 11:53:01,979 DEBUG on stmt: bool74 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,979 DEBUG on stmt: $74pred = call bool74($68.3, func=bool74, args=(Var($68.3, npyimpl.py:221),), kws=(), vararg=None)
2022-08-04 11:53:01,979 DEBUG on stmt: branch $74pred, 76, 104
2022-08-04 11:53:01,979 DEBUG ==== SSA block rewrite pass on 76
2022-08-04 11:53:01,979 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce0bdba8>
2022-08-04 11:53:01,979 DEBUG on stmt: $const76.2 = const(int, 1)
2022-08-04 11:53:01,979 DEBUG on stmt: $76.3 = dest_index + $const76.2
2022-08-04 11:53:01,979 DEBUG on stmt: $76.4 = unary(fn=<built-in function neg>, value=$76.3)
2022-08-04 11:53:01,979 DEBUG on stmt: $76.5 = cast(value=$76.4)
2022-08-04 11:53:01,979 DEBUG on stmt: return $76.5
2022-08-04 11:53:01,980 DEBUG ==== SSA block rewrite pass on 88
2022-08-04 11:53:01,980 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce0bdba8>
2022-08-04 11:53:01,980 DEBUG on stmt: $const88.2 = const(int, 1)
2022-08-04 11:53:01,980 DEBUG on stmt: $88.3 = src_dim_size != $const88.2
2022-08-04 11:53:01,980 DEBUG on stmt: bool94 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,980 DEBUG on stmt: $94pred = call bool94($88.3, func=bool94, args=(Var($88.3, npyimpl.py:223),), kws=(), vararg=None)
2022-08-04 11:53:01,980 DEBUG on stmt: branch $94pred, 96, 104
2022-08-04 11:53:01,980 DEBUG ==== SSA block rewrite pass on 96
2022-08-04 11:53:01,980 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce0bdba8>
2022-08-04 11:53:01,980 DEBUG on stmt: dest_shape[dest_index] = src_dim_size
2022-08-04 11:53:01,980 DEBUG on stmt: jump 104
2022-08-04 11:53:01,980 DEBUG ==== SSA block rewrite pass on 104
2022-08-04 11:53:01,980 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce0bdba8>
2022-08-04 11:53:01,980 DEBUG on stmt: $const104.2 = const(int, 1)
2022-08-04 11:53:01,980 DEBUG on stmt: $104.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=src_index, rhs=$const104.2, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:53:01,981 DEBUG on stmt: src_index = $104.3
2022-08-04 11:53:01,981 DEBUG replaced with: src_index.1 = $104.3
2022-08-04 11:53:01,981 DEBUG on stmt: $const104.5 = const(int, 1)
2022-08-04 11:53:01,981 DEBUG on stmt: $104.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dest_index, rhs=$const104.5, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:53:01,981 DEBUG on stmt: dest_index = $104.6
2022-08-04 11:53:01,981 DEBUG on stmt: jump 28
2022-08-04 11:53:01,981 DEBUG ==== SSA block rewrite pass on 122
2022-08-04 11:53:01,981 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce0bdba8>
2022-08-04 11:53:01,981 DEBUG on stmt: jump 124
2022-08-04 11:53:01,981 DEBUG ==== SSA block rewrite pass on 124
2022-08-04 11:53:01,981 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce0bdba8>
2022-08-04 11:53:01,981 DEBUG on stmt: $124.2 = cast(value=dest_index)
2022-08-04 11:53:01,981 DEBUG on stmt: return $124.2
2022-08-04 11:53:01,982 DEBUG Replaced assignments: defaultdict(<class 'list'>,
            {14: [<numba.core.ir.Assign object at 0x7fa2ce0bd4a8>],
             104: [<numba.core.ir.Assign object at 0x7fa2ce0bd048>]})
2022-08-04 11:53:01,982 DEBUG ==== SSA block rewrite pass on 0
2022-08-04 11:53:01,982 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce0bdc88>
2022-08-04 11:53:01,982 DEBUG on stmt: src_ndim = arg(0, name=src_ndim)
2022-08-04 11:53:01,982 DEBUG on stmt: src_shape = arg(1, name=src_shape)
2022-08-04 11:53:01,982 DEBUG on stmt: dest_ndim = arg(2, name=dest_ndim)
2022-08-04 11:53:01,982 DEBUG on stmt: dest_shape = arg(3, name=dest_shape)
2022-08-04 11:53:01,982 DEBUG on stmt: $0.3 = src_ndim > dest_ndim
2022-08-04 11:53:01,982 DEBUG on stmt: bool8 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,982 DEBUG on stmt: $8pred = call bool8($0.3, func=bool8, args=(Var($0.3, npyimpl.py:205),), kws=(), vararg=None)
2022-08-04 11:53:01,983 DEBUG on stmt: branch $8pred, 10, 14
2022-08-04 11:53:01,983 DEBUG ==== SSA block rewrite pass on 10
2022-08-04 11:53:01,983 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce0bdc88>
2022-08-04 11:53:01,983 DEBUG on stmt: $const10.1 = const(int, 0)
2022-08-04 11:53:01,983 DEBUG on stmt: $10.2 = cast(value=$const10.1)
2022-08-04 11:53:01,983 DEBUG on stmt: return $10.2
2022-08-04 11:53:01,983 DEBUG ==== SSA block rewrite pass on 14
2022-08-04 11:53:01,983 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce0bdc88>
2022-08-04 11:53:01,983 DEBUG on stmt: src_index = const(int, 0)
2022-08-04 11:53:01,983 DEBUG on stmt: dest_index = dest_ndim - src_ndim
2022-08-04 11:53:01,983 DEBUG on stmt: jump 26
2022-08-04 11:53:01,984 DEBUG ==== SSA block rewrite pass on 26
2022-08-04 11:53:01,984 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce0bdc88>
2022-08-04 11:53:01,984 DEBUG on stmt: jump 28
2022-08-04 11:53:01,984 DEBUG ==== SSA block rewrite pass on 28
2022-08-04 11:53:01,984 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce0bdc88>
2022-08-04 11:53:01,984 DEBUG on stmt: $28.3 = src_index < src_ndim
2022-08-04 11:53:01,984 DEBUG find_def var='src_index' stmt=$28.3 = src_index < src_ndim
2022-08-04 11:53:01,984 DEBUG find_def_from_top label 28
2022-08-04 11:53:01,984 DEBUG insert phi node src_index.2 = phi(incoming_values=[], incoming_blocks=[]) at 28
2022-08-04 11:53:01,984 DEBUG find_def_from_bottom label 104
2022-08-04 11:53:01,984 DEBUG incoming_def src_index.1 = $104.3
2022-08-04 11:53:01,984 DEBUG find_def_from_bottom label 26
2022-08-04 11:53:01,985 DEBUG find_def_from_top label 26
2022-08-04 11:53:01,985 DEBUG idom 14 from label 26
2022-08-04 11:53:01,985 DEBUG find_def_from_bottom label 14
2022-08-04 11:53:01,985 DEBUG incoming_def src_index = const(int, 0)
2022-08-04 11:53:01,985 DEBUG replaced with: $28.3 = src_index.2 < src_ndim
2022-08-04 11:53:01,985 DEBUG on stmt: bool34 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,985 DEBUG on stmt: $34pred = call bool34($28.3, func=bool34, args=(Var($28.3, npyimpl.py:212),), kws=(), vararg=None)
2022-08-04 11:53:01,985 DEBUG on stmt: branch $34pred, 36, 122
2022-08-04 11:53:01,985 DEBUG ==== SSA block rewrite pass on 36
2022-08-04 11:53:01,985 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce0bdc88>
2022-08-04 11:53:01,985 DEBUG on stmt: src_dim_size = getitem(value=src_shape, index=src_index, fn=<built-in function getitem>)
2022-08-04 11:53:01,985 DEBUG find_def var='src_index' stmt=src_dim_size = getitem(value=src_shape, index=src_index, fn=<built-in function getitem>)
2022-08-04 11:53:01,986 DEBUG find_def_from_top label 36
2022-08-04 11:53:01,986 DEBUG idom 28 from label 36
2022-08-04 11:53:01,986 DEBUG find_def_from_bottom label 28
2022-08-04 11:53:01,986 DEBUG replaced with: src_dim_size = getitem(value=src_shape, index=src_index.2, fn=<built-in function getitem>)
2022-08-04 11:53:01,986 DEBUG on stmt: dest_dim_size = getitem(value=dest_shape, index=dest_index, fn=<built-in function getitem>)
2022-08-04 11:53:01,986 DEBUG on stmt: $const36.8 = const(int, 1)
2022-08-04 11:53:01,986 DEBUG on stmt: $36.9 = dest_dim_size != $const36.8
2022-08-04 11:53:01,986 DEBUG on stmt: bool58 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,986 DEBUG on stmt: $58pred = call bool58($36.9, func=bool58, args=(Var($36.9, npyimpl.py:217),), kws=(), vararg=None)
2022-08-04 11:53:01,986 DEBUG on stmt: branch $58pred, 60, 88
2022-08-04 11:53:01,986 DEBUG ==== SSA block rewrite pass on 60
2022-08-04 11:53:01,986 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce0bdc88>
2022-08-04 11:53:01,986 DEBUG on stmt: $60.3 = src_dim_size != dest_dim_size
2022-08-04 11:53:01,987 DEBUG on stmt: bool66 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,987 DEBUG on stmt: $66pred = call bool66($60.3, func=bool66, args=(Var($60.3, npyimpl.py:221),), kws=(), vararg=None)
2022-08-04 11:53:01,987 DEBUG on stmt: branch $66pred, 68, 104
2022-08-04 11:53:01,987 DEBUG ==== SSA block rewrite pass on 68
2022-08-04 11:53:01,987 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce0bdc88>
2022-08-04 11:53:01,987 DEBUG on stmt: $const68.2 = const(int, 1)
2022-08-04 11:53:01,987 DEBUG on stmt: $68.3 = src_dim_size != $const68.2
2022-08-04 11:53:01,987 DEBUG on stmt: bool74 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,987 DEBUG on stmt: $74pred = call bool74($68.3, func=bool74, args=(Var($68.3, npyimpl.py:221),), kws=(), vararg=None)
2022-08-04 11:53:01,987 DEBUG on stmt: branch $74pred, 76, 104
2022-08-04 11:53:01,987 DEBUG ==== SSA block rewrite pass on 76
2022-08-04 11:53:01,988 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce0bdc88>
2022-08-04 11:53:01,988 DEBUG on stmt: $const76.2 = const(int, 1)
2022-08-04 11:53:01,988 DEBUG on stmt: $76.3 = dest_index + $const76.2
2022-08-04 11:53:01,988 DEBUG on stmt: $76.4 = unary(fn=<built-in function neg>, value=$76.3)
2022-08-04 11:53:01,988 DEBUG on stmt: $76.5 = cast(value=$76.4)
2022-08-04 11:53:01,988 DEBUG on stmt: return $76.5
2022-08-04 11:53:01,988 DEBUG ==== SSA block rewrite pass on 88
2022-08-04 11:53:01,988 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce0bdc88>
2022-08-04 11:53:01,988 DEBUG on stmt: $const88.2 = const(int, 1)
2022-08-04 11:53:01,988 DEBUG on stmt: $88.3 = src_dim_size != $const88.2
2022-08-04 11:53:01,988 DEBUG on stmt: bool94 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,988 DEBUG on stmt: $94pred = call bool94($88.3, func=bool94, args=(Var($88.3, npyimpl.py:223),), kws=(), vararg=None)
2022-08-04 11:53:01,989 DEBUG on stmt: branch $94pred, 96, 104
2022-08-04 11:53:01,989 DEBUG ==== SSA block rewrite pass on 96
2022-08-04 11:53:01,989 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce0bdc88>
2022-08-04 11:53:01,989 DEBUG on stmt: dest_shape[dest_index] = src_dim_size
2022-08-04 11:53:01,989 DEBUG on stmt: jump 104
2022-08-04 11:53:01,989 DEBUG ==== SSA block rewrite pass on 104
2022-08-04 11:53:01,989 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce0bdc88>
2022-08-04 11:53:01,989 DEBUG on stmt: $const104.2 = const(int, 1)
2022-08-04 11:53:01,989 DEBUG on stmt: $104.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=src_index, rhs=$const104.2, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:53:01,989 DEBUG find_def var='src_index' stmt=$104.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=src_index, rhs=$const104.2, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:53:01,989 DEBUG find_def_from_top label 104
2022-08-04 11:53:01,989 DEBUG idom 36 from label 104
2022-08-04 11:53:01,990 DEBUG find_def_from_bottom label 36
2022-08-04 11:53:01,990 DEBUG find_def_from_top label 36
2022-08-04 11:53:01,990 DEBUG idom 28 from label 36
2022-08-04 11:53:01,990 DEBUG find_def_from_bottom label 28
2022-08-04 11:53:01,990 DEBUG replaced with: $104.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=src_index.2, rhs=$const104.2, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:53:01,990 DEBUG on stmt: src_index.1 = $104.3
2022-08-04 11:53:01,990 DEBUG on stmt: $const104.5 = const(int, 1)
2022-08-04 11:53:01,990 DEBUG on stmt: $104.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dest_index, rhs=$const104.5, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:53:01,990 DEBUG on stmt: dest_index = $104.6
2022-08-04 11:53:01,990 DEBUG on stmt: jump 28
2022-08-04 11:53:01,990 DEBUG ==== SSA block rewrite pass on 122
2022-08-04 11:53:01,990 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce0bdc88>
2022-08-04 11:53:01,990 DEBUG on stmt: jump 124
2022-08-04 11:53:01,990 DEBUG ==== SSA block rewrite pass on 124
2022-08-04 11:53:01,990 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce0bdc88>
2022-08-04 11:53:01,990 DEBUG on stmt: $124.2 = cast(value=dest_index)
2022-08-04 11:53:01,991 DEBUG on stmt: return $124.2
2022-08-04 11:53:01,991 DEBUG Fix SSA violator on var dest_index
2022-08-04 11:53:01,991 DEBUG ==== SSA block rewrite pass on 0
2022-08-04 11:53:01,991 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce0bdf28>
2022-08-04 11:53:01,991 DEBUG on stmt: src_ndim = arg(0, name=src_ndim)
2022-08-04 11:53:01,991 DEBUG on stmt: src_shape = arg(1, name=src_shape)
2022-08-04 11:53:01,991 DEBUG on stmt: dest_ndim = arg(2, name=dest_ndim)
2022-08-04 11:53:01,991 DEBUG on stmt: dest_shape = arg(3, name=dest_shape)
2022-08-04 11:53:01,991 DEBUG on stmt: $0.3 = src_ndim > dest_ndim
2022-08-04 11:53:01,991 DEBUG on stmt: bool8 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,991 DEBUG on stmt: $8pred = call bool8($0.3, func=bool8, args=(Var($0.3, npyimpl.py:205),), kws=(), vararg=None)
2022-08-04 11:53:01,991 DEBUG on stmt: branch $8pred, 10, 14
2022-08-04 11:53:01,991 DEBUG ==== SSA block rewrite pass on 10
2022-08-04 11:53:01,992 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce0bdf28>
2022-08-04 11:53:01,992 DEBUG on stmt: $const10.1 = const(int, 0)
2022-08-04 11:53:01,992 DEBUG on stmt: $10.2 = cast(value=$const10.1)
2022-08-04 11:53:01,992 DEBUG on stmt: return $10.2
2022-08-04 11:53:01,992 DEBUG ==== SSA block rewrite pass on 14
2022-08-04 11:53:01,992 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce0bdf28>
2022-08-04 11:53:01,992 DEBUG on stmt: src_index = const(int, 0)
2022-08-04 11:53:01,992 DEBUG on stmt: dest_index = dest_ndim - src_ndim
2022-08-04 11:53:01,992 DEBUG first assign: dest_index
2022-08-04 11:53:01,992 DEBUG replaced with: dest_index = dest_ndim - src_ndim
2022-08-04 11:53:01,992 DEBUG on stmt: jump 26
2022-08-04 11:53:01,992 DEBUG ==== SSA block rewrite pass on 26
2022-08-04 11:53:01,992 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce0bdf28>
2022-08-04 11:53:01,992 DEBUG on stmt: jump 28
2022-08-04 11:53:01,992 DEBUG ==== SSA block rewrite pass on 28
2022-08-04 11:53:01,992 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce0bdf28>
2022-08-04 11:53:01,993 DEBUG on stmt: src_index.2 = phi(incoming_values=[Var(src_index.1, npyimpl.py:226), Var(src_index, npyimpl.py:210)], incoming_blocks=[104, 26])
2022-08-04 11:53:01,993 DEBUG on stmt: $28.3 = src_index.2 < src_ndim
2022-08-04 11:53:01,993 DEBUG on stmt: bool34 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,993 DEBUG on stmt: $34pred = call bool34($28.3, func=bool34, args=(Var($28.3, npyimpl.py:212),), kws=(), vararg=None)
2022-08-04 11:53:01,993 DEBUG on stmt: branch $34pred, 36, 122
2022-08-04 11:53:01,993 DEBUG ==== SSA block rewrite pass on 36
2022-08-04 11:53:01,993 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce0bdf28>
2022-08-04 11:53:01,993 DEBUG on stmt: src_dim_size = getitem(value=src_shape, index=src_index.2, fn=<built-in function getitem>)
2022-08-04 11:53:01,993 DEBUG on stmt: dest_dim_size = getitem(value=dest_shape, index=dest_index, fn=<built-in function getitem>)
2022-08-04 11:53:01,993 DEBUG on stmt: $const36.8 = const(int, 1)
2022-08-04 11:53:01,993 DEBUG on stmt: $36.9 = dest_dim_size != $const36.8
2022-08-04 11:53:01,993 DEBUG on stmt: bool58 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,993 DEBUG on stmt: $58pred = call bool58($36.9, func=bool58, args=(Var($36.9, npyimpl.py:217),), kws=(), vararg=None)
2022-08-04 11:53:01,993 DEBUG on stmt: branch $58pred, 60, 88
2022-08-04 11:53:01,994 DEBUG ==== SSA block rewrite pass on 60
2022-08-04 11:53:01,994 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce0bdf28>
2022-08-04 11:53:01,994 DEBUG on stmt: $60.3 = src_dim_size != dest_dim_size
2022-08-04 11:53:01,994 DEBUG on stmt: bool66 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,994 DEBUG on stmt: $66pred = call bool66($60.3, func=bool66, args=(Var($60.3, npyimpl.py:221),), kws=(), vararg=None)
2022-08-04 11:53:01,994 DEBUG on stmt: branch $66pred, 68, 104
2022-08-04 11:53:01,994 DEBUG ==== SSA block rewrite pass on 68
2022-08-04 11:53:01,994 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce0bdf28>
2022-08-04 11:53:01,994 DEBUG on stmt: $const68.2 = const(int, 1)
2022-08-04 11:53:01,994 DEBUG on stmt: $68.3 = src_dim_size != $const68.2
2022-08-04 11:53:01,994 DEBUG on stmt: bool74 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,994 DEBUG on stmt: $74pred = call bool74($68.3, func=bool74, args=(Var($68.3, npyimpl.py:221),), kws=(), vararg=None)
2022-08-04 11:53:01,994 DEBUG on stmt: branch $74pred, 76, 104
2022-08-04 11:53:01,994 DEBUG ==== SSA block rewrite pass on 76
2022-08-04 11:53:01,994 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce0bdf28>
2022-08-04 11:53:01,995 DEBUG on stmt: $const76.2 = const(int, 1)
2022-08-04 11:53:01,995 DEBUG on stmt: $76.3 = dest_index + $const76.2
2022-08-04 11:53:01,995 DEBUG on stmt: $76.4 = unary(fn=<built-in function neg>, value=$76.3)
2022-08-04 11:53:01,995 DEBUG on stmt: $76.5 = cast(value=$76.4)
2022-08-04 11:53:01,995 DEBUG on stmt: return $76.5
2022-08-04 11:53:01,995 DEBUG ==== SSA block rewrite pass on 88
2022-08-04 11:53:01,995 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce0bdf28>
2022-08-04 11:53:01,995 DEBUG on stmt: $const88.2 = const(int, 1)
2022-08-04 11:53:01,995 DEBUG on stmt: $88.3 = src_dim_size != $const88.2
2022-08-04 11:53:01,995 DEBUG on stmt: bool94 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,995 DEBUG on stmt: $94pred = call bool94($88.3, func=bool94, args=(Var($88.3, npyimpl.py:223),), kws=(), vararg=None)
2022-08-04 11:53:01,995 DEBUG on stmt: branch $94pred, 96, 104
2022-08-04 11:53:01,995 DEBUG ==== SSA block rewrite pass on 96
2022-08-04 11:53:01,995 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce0bdf28>
2022-08-04 11:53:01,995 DEBUG on stmt: dest_shape[dest_index] = src_dim_size
2022-08-04 11:53:01,995 DEBUG on stmt: jump 104
2022-08-04 11:53:01,996 DEBUG ==== SSA block rewrite pass on 104
2022-08-04 11:53:01,996 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce0bdf28>
2022-08-04 11:53:01,996 DEBUG on stmt: $const104.2 = const(int, 1)
2022-08-04 11:53:01,996 DEBUG on stmt: $104.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=src_index.2, rhs=$const104.2, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:53:01,996 DEBUG on stmt: src_index.1 = $104.3
2022-08-04 11:53:01,996 DEBUG on stmt: $const104.5 = const(int, 1)
2022-08-04 11:53:01,996 DEBUG on stmt: $104.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dest_index, rhs=$const104.5, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:53:01,996 DEBUG on stmt: dest_index = $104.6
2022-08-04 11:53:01,996 DEBUG replaced with: dest_index.1 = $104.6
2022-08-04 11:53:01,996 DEBUG on stmt: jump 28
2022-08-04 11:53:01,996 DEBUG ==== SSA block rewrite pass on 122
2022-08-04 11:53:01,996 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce0bdf28>
2022-08-04 11:53:01,996 DEBUG on stmt: jump 124
2022-08-04 11:53:01,996 DEBUG ==== SSA block rewrite pass on 124
2022-08-04 11:53:01,996 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce0bdf28>
2022-08-04 11:53:01,996 DEBUG on stmt: $124.2 = cast(value=dest_index)
2022-08-04 11:53:01,997 DEBUG on stmt: return $124.2
2022-08-04 11:53:01,997 DEBUG Replaced assignments: defaultdict(<class 'list'>,
            {14: [<numba.core.ir.Assign object at 0x7fa2ce0bdda0>],
             104: [<numba.core.ir.Assign object at 0x7fa2ce0d4a58>]})
2022-08-04 11:53:01,997 DEBUG ==== SSA block rewrite pass on 0
2022-08-04 11:53:01,997 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce0bdf28>
2022-08-04 11:53:01,997 DEBUG on stmt: src_ndim = arg(0, name=src_ndim)
2022-08-04 11:53:01,997 DEBUG on stmt: src_shape = arg(1, name=src_shape)
2022-08-04 11:53:01,997 DEBUG on stmt: dest_ndim = arg(2, name=dest_ndim)
2022-08-04 11:53:01,997 DEBUG on stmt: dest_shape = arg(3, name=dest_shape)
2022-08-04 11:53:01,998 DEBUG on stmt: $0.3 = src_ndim > dest_ndim
2022-08-04 11:53:01,998 DEBUG on stmt: bool8 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,998 DEBUG on stmt: $8pred = call bool8($0.3, func=bool8, args=(Var($0.3, npyimpl.py:205),), kws=(), vararg=None)
2022-08-04 11:53:01,998 DEBUG on stmt: branch $8pred, 10, 14
2022-08-04 11:53:01,998 DEBUG ==== SSA block rewrite pass on 10
2022-08-04 11:53:01,998 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce0bdf28>
2022-08-04 11:53:01,998 DEBUG on stmt: $const10.1 = const(int, 0)
2022-08-04 11:53:01,998 DEBUG on stmt: $10.2 = cast(value=$const10.1)
2022-08-04 11:53:01,998 DEBUG on stmt: return $10.2
2022-08-04 11:53:01,998 DEBUG ==== SSA block rewrite pass on 14
2022-08-04 11:53:01,998 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce0bdf28>
2022-08-04 11:53:01,998 DEBUG on stmt: src_index = const(int, 0)
2022-08-04 11:53:01,998 DEBUG on stmt: dest_index = dest_ndim - src_ndim
2022-08-04 11:53:01,998 DEBUG on stmt: jump 26
2022-08-04 11:53:01,999 DEBUG ==== SSA block rewrite pass on 26
2022-08-04 11:53:01,999 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce0bdf28>
2022-08-04 11:53:01,999 DEBUG on stmt: jump 28
2022-08-04 11:53:01,999 DEBUG ==== SSA block rewrite pass on 28
2022-08-04 11:53:01,999 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce0bdf28>
2022-08-04 11:53:01,999 DEBUG on stmt: src_index.2 = phi(incoming_values=[Var(src_index.1, npyimpl.py:226), Var(src_index, npyimpl.py:210)], incoming_blocks=[104, 26])
2022-08-04 11:53:01,999 DEBUG on stmt: $28.3 = src_index.2 < src_ndim
2022-08-04 11:53:01,999 DEBUG on stmt: bool34 = global(bool: <class 'bool'>)
2022-08-04 11:53:01,999 DEBUG on stmt: $34pred = call bool34($28.3, func=bool34, args=(Var($28.3, npyimpl.py:212),), kws=(), vararg=None)
2022-08-04 11:53:01,999 DEBUG on stmt: branch $34pred, 36, 122
2022-08-04 11:53:01,999 DEBUG ==== SSA block rewrite pass on 36
2022-08-04 11:53:02,000 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce0bdf28>
2022-08-04 11:53:02,000 DEBUG on stmt: src_dim_size = getitem(value=src_shape, index=src_index.2, fn=<built-in function getitem>)
2022-08-04 11:53:02,000 DEBUG on stmt: dest_dim_size = getitem(value=dest_shape, index=dest_index, fn=<built-in function getitem>)
2022-08-04 11:53:02,000 DEBUG find_def var='dest_index' stmt=dest_dim_size = getitem(value=dest_shape, index=dest_index, fn=<built-in function getitem>)
2022-08-04 11:53:02,000 DEBUG find_def_from_top label 36
2022-08-04 11:53:02,000 DEBUG idom 28 from label 36
2022-08-04 11:53:02,000 DEBUG find_def_from_bottom label 28
2022-08-04 11:53:02,000 DEBUG find_def_from_top label 28
2022-08-04 11:53:02,000 DEBUG insert phi node dest_index.2 = phi(incoming_values=[], incoming_blocks=[]) at 28
2022-08-04 11:53:02,000 DEBUG find_def_from_bottom label 104
2022-08-04 11:53:02,000 DEBUG incoming_def dest_index.1 = $104.6
2022-08-04 11:53:02,000 DEBUG find_def_from_bottom label 26
2022-08-04 11:53:02,001 DEBUG find_def_from_top label 26
2022-08-04 11:53:02,001 DEBUG idom 14 from label 26
2022-08-04 11:53:02,001 DEBUG find_def_from_bottom label 14
2022-08-04 11:53:02,001 DEBUG incoming_def dest_index = dest_ndim - src_ndim
2022-08-04 11:53:02,001 DEBUG replaced with: dest_dim_size = getitem(value=dest_shape, index=dest_index.2, fn=<built-in function getitem>)
2022-08-04 11:53:02,001 DEBUG on stmt: $const36.8 = const(int, 1)
2022-08-04 11:53:02,001 DEBUG on stmt: $36.9 = dest_dim_size != $const36.8
2022-08-04 11:53:02,001 DEBUG on stmt: bool58 = global(bool: <class 'bool'>)
2022-08-04 11:53:02,001 DEBUG on stmt: $58pred = call bool58($36.9, func=bool58, args=(Var($36.9, npyimpl.py:217),), kws=(), vararg=None)
2022-08-04 11:53:02,001 DEBUG on stmt: branch $58pred, 60, 88
2022-08-04 11:53:02,001 DEBUG ==== SSA block rewrite pass on 60
2022-08-04 11:53:02,001 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce0bdf28>
2022-08-04 11:53:02,002 DEBUG on stmt: $60.3 = src_dim_size != dest_dim_size
2022-08-04 11:53:02,002 DEBUG on stmt: bool66 = global(bool: <class 'bool'>)
2022-08-04 11:53:02,002 DEBUG on stmt: $66pred = call bool66($60.3, func=bool66, args=(Var($60.3, npyimpl.py:221),), kws=(), vararg=None)
2022-08-04 11:53:02,002 DEBUG on stmt: branch $66pred, 68, 104
2022-08-04 11:53:02,002 DEBUG ==== SSA block rewrite pass on 68
2022-08-04 11:53:02,002 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce0bdf28>
2022-08-04 11:53:02,002 DEBUG on stmt: $const68.2 = const(int, 1)
2022-08-04 11:53:02,002 DEBUG on stmt: $68.3 = src_dim_size != $const68.2
2022-08-04 11:53:02,002 DEBUG on stmt: bool74 = global(bool: <class 'bool'>)
2022-08-04 11:53:02,002 DEBUG on stmt: $74pred = call bool74($68.3, func=bool74, args=(Var($68.3, npyimpl.py:221),), kws=(), vararg=None)
2022-08-04 11:53:02,002 DEBUG on stmt: branch $74pred, 76, 104
2022-08-04 11:53:02,002 DEBUG ==== SSA block rewrite pass on 76
2022-08-04 11:53:02,002 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce0bdf28>
2022-08-04 11:53:02,002 DEBUG on stmt: $const76.2 = const(int, 1)
2022-08-04 11:53:02,003 DEBUG on stmt: $76.3 = dest_index + $const76.2
2022-08-04 11:53:02,003 DEBUG find_def var='dest_index' stmt=$76.3 = dest_index + $const76.2
2022-08-04 11:53:02,003 DEBUG find_def_from_top label 76
2022-08-04 11:53:02,003 DEBUG idom 68 from label 76
2022-08-04 11:53:02,003 DEBUG find_def_from_bottom label 68
2022-08-04 11:53:02,003 DEBUG find_def_from_top label 68
2022-08-04 11:53:02,003 DEBUG idom 60 from label 68
2022-08-04 11:53:02,003 DEBUG find_def_from_bottom label 60
2022-08-04 11:53:02,003 DEBUG find_def_from_top label 60
2022-08-04 11:53:02,003 DEBUG idom 36 from label 60
2022-08-04 11:53:02,003 DEBUG find_def_from_bottom label 36
2022-08-04 11:53:02,003 DEBUG find_def_from_top label 36
2022-08-04 11:53:02,003 DEBUG idom 28 from label 36
2022-08-04 11:53:02,003 DEBUG find_def_from_bottom label 28
2022-08-04 11:53:02,003 DEBUG replaced with: $76.3 = dest_index.2 + $const76.2
2022-08-04 11:53:02,004 DEBUG on stmt: $76.4 = unary(fn=<built-in function neg>, value=$76.3)
2022-08-04 11:53:02,004 DEBUG on stmt: $76.5 = cast(value=$76.4)
2022-08-04 11:53:02,004 DEBUG on stmt: return $76.5
2022-08-04 11:53:02,004 DEBUG ==== SSA block rewrite pass on 88
2022-08-04 11:53:02,004 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce0bdf28>
2022-08-04 11:53:02,004 DEBUG on stmt: $const88.2 = const(int, 1)
2022-08-04 11:53:02,004 DEBUG on stmt: $88.3 = src_dim_size != $const88.2
2022-08-04 11:53:02,004 DEBUG on stmt: bool94 = global(bool: <class 'bool'>)
2022-08-04 11:53:02,004 DEBUG on stmt: $94pred = call bool94($88.3, func=bool94, args=(Var($88.3, npyimpl.py:223),), kws=(), vararg=None)
2022-08-04 11:53:02,004 DEBUG on stmt: branch $94pred, 96, 104
2022-08-04 11:53:02,004 DEBUG ==== SSA block rewrite pass on 96
2022-08-04 11:53:02,004 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce0bdf28>
2022-08-04 11:53:02,005 DEBUG on stmt: dest_shape[dest_index] = src_dim_size
2022-08-04 11:53:02,005 DEBUG find_def var='dest_index' stmt=dest_shape[dest_index] = src_dim_size
2022-08-04 11:53:02,005 DEBUG find_def_from_top label 96
2022-08-04 11:53:02,005 DEBUG idom 88 from label 96
2022-08-04 11:53:02,005 DEBUG find_def_from_bottom label 88
2022-08-04 11:53:02,005 DEBUG find_def_from_top label 88
2022-08-04 11:53:02,005 DEBUG idom 36 from label 88
2022-08-04 11:53:02,005 DEBUG find_def_from_bottom label 36
2022-08-04 11:53:02,005 DEBUG find_def_from_top label 36
2022-08-04 11:53:02,005 DEBUG idom 28 from label 36
2022-08-04 11:53:02,005 DEBUG find_def_from_bottom label 28
2022-08-04 11:53:02,005 DEBUG replaced with: dest_shape[dest_index.2] = src_dim_size
2022-08-04 11:53:02,005 DEBUG on stmt: jump 104
2022-08-04 11:53:02,005 DEBUG ==== SSA block rewrite pass on 104
2022-08-04 11:53:02,005 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce0bdf28>
2022-08-04 11:53:02,005 DEBUG on stmt: $const104.2 = const(int, 1)
2022-08-04 11:53:02,006 DEBUG on stmt: $104.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=src_index.2, rhs=$const104.2, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:53:02,006 DEBUG on stmt: src_index.1 = $104.3
2022-08-04 11:53:02,006 DEBUG on stmt: $const104.5 = const(int, 1)
2022-08-04 11:53:02,006 DEBUG on stmt: $104.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dest_index, rhs=$const104.5, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:53:02,006 DEBUG find_def var='dest_index' stmt=$104.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dest_index, rhs=$const104.5, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:53:02,006 DEBUG find_def_from_top label 104
2022-08-04 11:53:02,006 DEBUG idom 36 from label 104
2022-08-04 11:53:02,006 DEBUG find_def_from_bottom label 36
2022-08-04 11:53:02,006 DEBUG find_def_from_top label 36
2022-08-04 11:53:02,006 DEBUG idom 28 from label 36
2022-08-04 11:53:02,006 DEBUG find_def_from_bottom label 28
2022-08-04 11:53:02,006 DEBUG replaced with: $104.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dest_index.2, rhs=$const104.5, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:53:02,006 DEBUG on stmt: dest_index.1 = $104.6
2022-08-04 11:53:02,006 DEBUG on stmt: jump 28
2022-08-04 11:53:02,006 DEBUG ==== SSA block rewrite pass on 122
2022-08-04 11:53:02,007 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce0bdf28>
2022-08-04 11:53:02,007 DEBUG on stmt: jump 124
2022-08-04 11:53:02,007 DEBUG ==== SSA block rewrite pass on 124
2022-08-04 11:53:02,007 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce0bdf28>
2022-08-04 11:53:02,007 DEBUG on stmt: $124.2 = cast(value=dest_index)
2022-08-04 11:53:02,007 DEBUG find_def var='dest_index' stmt=$124.2 = cast(value=dest_index)
2022-08-04 11:53:02,007 DEBUG find_def_from_top label 124
2022-08-04 11:53:02,007 DEBUG idom 122 from label 124
2022-08-04 11:53:02,007 DEBUG find_def_from_bottom label 122
2022-08-04 11:53:02,007 DEBUG find_def_from_top label 122
2022-08-04 11:53:02,007 DEBUG idom 28 from label 122
2022-08-04 11:53:02,007 DEBUG find_def_from_bottom label 28
2022-08-04 11:53:02,007 DEBUG replaced with: $124.2 = cast(value=dest_index.2)
2022-08-04 11:53:02,007 DEBUG on stmt: return $124.2
2022-08-04 11:53:02,384 DEBUG label 0:
    q1 = arg(0, name=q1)                     ['q1']
    q2 = arg(1, name=q2)                     ['q2']
    out = arg(2, name=out)                   ['out']
    $const0.2 = const(int, 0)                ['$const0.2']
    $0.3 = getitem(value=q1, index=$const0.2, fn=<built-in function getitem>) ['$0.3', '$const0.2', 'q1']
    $const0.5 = const(int, 0)                ['$const0.5']
    $0.6 = getitem(value=q2, index=$const0.5, fn=<built-in function getitem>) ['$0.6', '$const0.5', 'q2']
    $0.7 = $0.3 - $0.6                       ['$0.3', '$0.6', '$0.7']
    $const0.8 = const(int, 2)                ['$const0.8']
    $0.9 = $0.7 ** $const0.8                 ['$0.7', '$0.9', '$const0.8']
    $const0.11 = const(int, 1)               ['$const0.11']
    $0.12 = getitem(value=q1, index=$const0.11, fn=<built-in function getitem>) ['$0.12', '$const0.11', 'q1']
    $const0.14 = const(int, 1)               ['$const0.14']
    $0.15 = getitem(value=q2, index=$const0.14, fn=<built-in function getitem>) ['$0.15', '$const0.14', 'q2']
    $0.16 = $0.12 - $0.15                    ['$0.12', '$0.15', '$0.16']
    $const0.17 = const(int, 2)               ['$const0.17']
    $0.18 = $0.16 ** $const0.17              ['$0.16', '$0.18', '$const0.17']
    $0.19 = $0.9 + $0.18                     ['$0.18', '$0.19', '$0.9']
    $const0.21 = const(int, 2)               ['$const0.21']
    $0.22 = getitem(value=q1, index=$const0.21, fn=<built-in function getitem>) ['$0.22', '$const0.21', 'q1']
    $const0.24 = const(int, 2)               ['$const0.24']
    $0.25 = getitem(value=q2, index=$const0.24, fn=<built-in function getitem>) ['$0.25', '$const0.24', 'q2']
    $0.26 = $0.22 - $0.25                    ['$0.22', '$0.25', '$0.26']
    $const0.27 = const(int, 2)               ['$const0.27']
    $0.28 = $0.26 ** $const0.27              ['$0.26', '$0.28', '$const0.27']
    $0.29 = $0.19 + $0.28                    ['$0.19', '$0.28', '$0.29']
    $const0.31 = const(int, 3)               ['$const0.31']
    $0.32 = getitem(value=q1, index=$const0.31, fn=<built-in function getitem>) ['$0.32', '$const0.31', 'q1']
    $const0.34 = const(int, 3)               ['$const0.34']
    $0.35 = getitem(value=q2, index=$const0.34, fn=<built-in function getitem>) ['$0.35', '$const0.34', 'q2']
    $0.36 = $0.32 - $0.35                    ['$0.32', '$0.35', '$0.36']
    $const0.37 = const(int, 2)               ['$const0.37']
    $0.38 = $0.36 ** $const0.37              ['$0.36', '$0.38', '$const0.37']
    a = $0.29 + $0.38                        ['$0.29', '$0.38', 'a']
    $const0.41 = const(int, 0)               ['$const0.41']
    $0.42 = getitem(value=q1, index=$const0.41, fn=<built-in function getitem>) ['$0.42', '$const0.41', 'q1']
    $const0.44 = const(int, 0)               ['$const0.44']
    $0.45 = getitem(value=q2, index=$const0.44, fn=<built-in function getitem>) ['$0.45', '$const0.44', 'q2']
    $0.46 = $0.42 + $0.45                    ['$0.42', '$0.45', '$0.46']
    $const0.47 = const(int, 2)               ['$const0.47']
    $0.48 = $0.46 ** $const0.47              ['$0.46', '$0.48', '$const0.47']
    $const0.50 = const(int, 1)               ['$const0.50']
    $0.51 = getitem(value=q1, index=$const0.50, fn=<built-in function getitem>) ['$0.51', '$const0.50', 'q1']
    $const0.53 = const(int, 1)               ['$const0.53']
    $0.54 = getitem(value=q2, index=$const0.53, fn=<built-in function getitem>) ['$0.54', '$const0.53', 'q2']
    $0.55 = $0.51 + $0.54                    ['$0.51', '$0.54', '$0.55']
    $const0.56 = const(int, 2)               ['$const0.56']
    $0.57 = $0.55 ** $const0.56              ['$0.55', '$0.57', '$const0.56']
    $0.58 = $0.48 + $0.57                    ['$0.48', '$0.57', '$0.58']
    $const0.60 = const(int, 2)               ['$const0.60']
    $0.61 = getitem(value=q1, index=$const0.60, fn=<built-in function getitem>) ['$0.61', '$const0.60', 'q1']
    $const0.63 = const(int, 2)               ['$const0.63']
    $0.64 = getitem(value=q2, index=$const0.63, fn=<built-in function getitem>) ['$0.64', '$const0.63', 'q2']
    $0.65 = $0.61 + $0.64                    ['$0.61', '$0.64', '$0.65']
    $const0.66 = const(int, 2)               ['$const0.66']
    $0.67 = $0.65 ** $const0.66              ['$0.65', '$0.67', '$const0.66']
    $0.68 = $0.58 + $0.67                    ['$0.58', '$0.67', '$0.68']
    $const0.70 = const(int, 3)               ['$const0.70']
    $0.71 = getitem(value=q1, index=$const0.70, fn=<built-in function getitem>) ['$0.71', '$const0.70', 'q1']
    $const0.73 = const(int, 3)               ['$const0.73']
    $0.74 = getitem(value=q2, index=$const0.73, fn=<built-in function getitem>) ['$0.74', '$const0.73', 'q2']
    $0.75 = $0.71 + $0.74                    ['$0.71', '$0.74', '$0.75']
    $const0.76 = const(int, 2)               ['$const0.76']
    $0.77 = $0.75 ** $const0.76              ['$0.75', '$0.77', '$const0.76']
    b = $0.68 + $0.77                        ['$0.68', '$0.77', 'b']
    $0.81 = b > a                            ['$0.81', 'a', 'b']
    bool168 = global(bool: <class 'bool'>)   ['bool168']
    $168pred = call bool168($0.81, func=bool168, args=(Var($0.81, distance.py:153),), kws=(), vararg=None) ['$0.81', '$168pred', 'bool168']
    branch $168pred, 170, 186                ['$168pred']
label 170:
    $170.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$170.1']
    $170.2 = getattr(value=$170.1, attr=sqrt) ['$170.1', '$170.2']
    $170.4 = call $170.2(a, func=$170.2, args=[Var(a, distance.py:151)], kws=(), vararg=None) ['$170.2', '$170.4', 'a']
    $const170.6 = const(int, 0)              ['$const170.6']
    out[$const170.6] = $170.4                ['$170.4', '$const170.6', 'out']
    jump 200                                 []
label 186:
    $186.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$186.1']
    $186.2 = getattr(value=$186.1, attr=sqrt) ['$186.1', '$186.2']
    $186.4 = call $186.2(b, func=$186.2, args=[Var(b, distance.py:152)], kws=(), vararg=None) ['$186.2', '$186.4', 'b']
    $const186.6 = const(int, 0)              ['$const186.6']
    out[$const186.6] = $186.4                ['$186.4', '$const186.6', 'out']
    jump 200                                 []
label 200:
    $const200.1 = const(NoneType, None)      ['$const200.1']
    $200.2 = cast(value=$const200.1)         ['$200.2', '$const200.1']
    return $200.2                            ['$200.2']

2022-08-04 11:53:02,397 DEBUG ==== SSA block analysis pass on 0
2022-08-04 11:53:02,398 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cde75fd0>
2022-08-04 11:53:02,398 DEBUG on stmt: q1 = arg(0, name=q1)
2022-08-04 11:53:02,398 DEBUG on stmt: q2 = arg(1, name=q2)
2022-08-04 11:53:02,398 DEBUG on stmt: out = arg(2, name=out)
2022-08-04 11:53:02,398 DEBUG on stmt: $const0.2 = const(int, 0)
2022-08-04 11:53:02,398 DEBUG on stmt: $0.3 = static_getitem(value=q1, index=0, index_var=$const0.2, fn=<built-in function getitem>)
2022-08-04 11:53:02,398 DEBUG on stmt: $const0.5 = const(int, 0)
2022-08-04 11:53:02,398 DEBUG on stmt: $0.6 = static_getitem(value=q2, index=0, index_var=$const0.5, fn=<built-in function getitem>)
2022-08-04 11:53:02,398 DEBUG on stmt: $0.7 = $0.3 - $0.6
2022-08-04 11:53:02,398 DEBUG on stmt: $const0.8 = const(int, 2)
2022-08-04 11:53:02,398 DEBUG on stmt: $0.9 = $0.7 ** $const0.8
2022-08-04 11:53:02,398 DEBUG on stmt: $const0.11 = const(int, 1)
2022-08-04 11:53:02,399 DEBUG on stmt: $0.12 = static_getitem(value=q1, index=1, index_var=$const0.11, fn=<built-in function getitem>)
2022-08-04 11:53:02,399 DEBUG on stmt: $const0.14 = const(int, 1)
2022-08-04 11:53:02,399 DEBUG on stmt: $0.15 = static_getitem(value=q2, index=1, index_var=$const0.14, fn=<built-in function getitem>)
2022-08-04 11:53:02,399 DEBUG on stmt: $0.16 = $0.12 - $0.15
2022-08-04 11:53:02,399 DEBUG on stmt: $const0.17 = const(int, 2)
2022-08-04 11:53:02,399 DEBUG on stmt: $0.18 = $0.16 ** $const0.17
2022-08-04 11:53:02,399 DEBUG on stmt: $0.19 = $0.9 + $0.18
2022-08-04 11:53:02,399 DEBUG on stmt: $const0.21 = const(int, 2)
2022-08-04 11:53:02,399 DEBUG on stmt: $0.22 = static_getitem(value=q1, index=2, index_var=$const0.21, fn=<built-in function getitem>)
2022-08-04 11:53:02,399 DEBUG on stmt: $const0.24 = const(int, 2)
2022-08-04 11:53:02,399 DEBUG on stmt: $0.25 = static_getitem(value=q2, index=2, index_var=$const0.24, fn=<built-in function getitem>)
2022-08-04 11:53:02,399 DEBUG on stmt: $0.26 = $0.22 - $0.25
2022-08-04 11:53:02,399 DEBUG on stmt: $const0.27 = const(int, 2)
2022-08-04 11:53:02,400 DEBUG on stmt: $0.28 = $0.26 ** $const0.27
2022-08-04 11:53:02,400 DEBUG on stmt: $0.29 = $0.19 + $0.28
2022-08-04 11:53:02,400 DEBUG on stmt: $const0.31 = const(int, 3)
2022-08-04 11:53:02,400 DEBUG on stmt: $0.32 = static_getitem(value=q1, index=3, index_var=$const0.31, fn=<built-in function getitem>)
2022-08-04 11:53:02,400 DEBUG on stmt: $const0.34 = const(int, 3)
2022-08-04 11:53:02,400 DEBUG on stmt: $0.35 = static_getitem(value=q2, index=3, index_var=$const0.34, fn=<built-in function getitem>)
2022-08-04 11:53:02,400 DEBUG on stmt: $0.36 = $0.32 - $0.35
2022-08-04 11:53:02,400 DEBUG on stmt: $const0.37 = const(int, 2)
2022-08-04 11:53:02,400 DEBUG on stmt: $0.38 = $0.36 ** $const0.37
2022-08-04 11:53:02,401 DEBUG on stmt: a = $0.29 + $0.38
2022-08-04 11:53:02,401 DEBUG on stmt: $const0.41 = const(int, 0)
2022-08-04 11:53:02,401 DEBUG on stmt: $0.42 = static_getitem(value=q1, index=0, index_var=$const0.41, fn=<built-in function getitem>)
2022-08-04 11:53:02,401 DEBUG on stmt: $const0.44 = const(int, 0)
2022-08-04 11:53:02,401 DEBUG on stmt: $0.45 = static_getitem(value=q2, index=0, index_var=$const0.44, fn=<built-in function getitem>)
2022-08-04 11:53:02,401 DEBUG on stmt: $0.46 = $0.42 + $0.45
2022-08-04 11:53:02,401 DEBUG on stmt: $const0.47 = const(int, 2)
2022-08-04 11:53:02,401 DEBUG on stmt: $0.48 = $0.46 ** $const0.47
2022-08-04 11:53:02,401 DEBUG on stmt: $const0.50 = const(int, 1)
2022-08-04 11:53:02,401 DEBUG on stmt: $0.51 = static_getitem(value=q1, index=1, index_var=$const0.50, fn=<built-in function getitem>)
2022-08-04 11:53:02,401 DEBUG on stmt: $const0.53 = const(int, 1)
2022-08-04 11:53:02,402 DEBUG on stmt: $0.54 = static_getitem(value=q2, index=1, index_var=$const0.53, fn=<built-in function getitem>)
2022-08-04 11:53:02,402 DEBUG on stmt: $0.55 = $0.51 + $0.54
2022-08-04 11:53:02,402 DEBUG on stmt: $const0.56 = const(int, 2)
2022-08-04 11:53:02,402 DEBUG on stmt: $0.57 = $0.55 ** $const0.56
2022-08-04 11:53:02,402 DEBUG on stmt: $0.58 = $0.48 + $0.57
2022-08-04 11:53:02,402 DEBUG on stmt: $const0.60 = const(int, 2)
2022-08-04 11:53:02,402 DEBUG on stmt: $0.61 = static_getitem(value=q1, index=2, index_var=$const0.60, fn=<built-in function getitem>)
2022-08-04 11:53:02,402 DEBUG on stmt: $const0.63 = const(int, 2)
2022-08-04 11:53:02,402 DEBUG on stmt: $0.64 = static_getitem(value=q2, index=2, index_var=$const0.63, fn=<built-in function getitem>)
2022-08-04 11:53:02,402 DEBUG on stmt: $0.65 = $0.61 + $0.64
2022-08-04 11:53:02,402 DEBUG on stmt: $const0.66 = const(int, 2)
2022-08-04 11:53:02,402 DEBUG on stmt: $0.67 = $0.65 ** $const0.66
2022-08-04 11:53:02,402 DEBUG on stmt: $0.68 = $0.58 + $0.67
2022-08-04 11:53:02,402 DEBUG on stmt: $const0.70 = const(int, 3)
2022-08-04 11:53:02,403 DEBUG on stmt: $0.71 = static_getitem(value=q1, index=3, index_var=$const0.70, fn=<built-in function getitem>)
2022-08-04 11:53:02,403 DEBUG on stmt: $const0.73 = const(int, 3)
2022-08-04 11:53:02,403 DEBUG on stmt: $0.74 = static_getitem(value=q2, index=3, index_var=$const0.73, fn=<built-in function getitem>)
2022-08-04 11:53:02,403 DEBUG on stmt: $0.75 = $0.71 + $0.74
2022-08-04 11:53:02,403 DEBUG on stmt: $const0.76 = const(int, 2)
2022-08-04 11:53:02,403 DEBUG on stmt: $0.77 = $0.75 ** $const0.76
2022-08-04 11:53:02,403 DEBUG on stmt: b = $0.68 + $0.77
2022-08-04 11:53:02,403 DEBUG on stmt: $0.81 = b > a
2022-08-04 11:53:02,403 DEBUG on stmt: bool168 = global(bool: <class 'bool'>)
2022-08-04 11:53:02,403 DEBUG on stmt: $168pred = call bool168($0.81, func=bool168, args=(Var($0.81, distance.py:153),), kws=(), vararg=None)
2022-08-04 11:53:02,403 DEBUG on stmt: branch $168pred, 170, 186
2022-08-04 11:53:02,403 DEBUG ==== SSA block analysis pass on 170
2022-08-04 11:53:02,403 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cde75fd0>
2022-08-04 11:53:02,403 DEBUG on stmt: $170.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:02,404 DEBUG on stmt: $170.2 = getattr(value=$170.1, attr=sqrt)
2022-08-04 11:53:02,404 DEBUG on stmt: $170.4 = call $170.2(a, func=$170.2, args=[Var(a, distance.py:151)], kws=(), vararg=None)
2022-08-04 11:53:02,404 DEBUG on stmt: $const170.6 = const(int, 0)
2022-08-04 11:53:02,404 DEBUG on stmt: out[0] = $170.4
2022-08-04 11:53:02,404 DEBUG on stmt: jump 200
2022-08-04 11:53:02,404 DEBUG ==== SSA block analysis pass on 186
2022-08-04 11:53:02,404 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cde75fd0>
2022-08-04 11:53:02,404 DEBUG on stmt: $186.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:02,404 DEBUG on stmt: $186.2 = getattr(value=$186.1, attr=sqrt)
2022-08-04 11:53:02,404 DEBUG on stmt: $186.4 = call $186.2(b, func=$186.2, args=[Var(b, distance.py:152)], kws=(), vararg=None)
2022-08-04 11:53:02,404 DEBUG on stmt: $const186.6 = const(int, 0)
2022-08-04 11:53:02,404 DEBUG on stmt: out[0] = $186.4
2022-08-04 11:53:02,404 DEBUG on stmt: jump 200
2022-08-04 11:53:02,404 DEBUG ==== SSA block analysis pass on 200
2022-08-04 11:53:02,405 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cde75fd0>
2022-08-04 11:53:02,405 DEBUG on stmt: $const200.1 = const(NoneType, None)
2022-08-04 11:53:02,405 DEBUG on stmt: $200.2 = cast(value=$const200.1)
2022-08-04 11:53:02,405 DEBUG on stmt: return $200.2
2022-08-04 11:53:02,406 DEBUG defs defaultdict(<class 'list'>,
            {'$0.12': [<numba.core.ir.Assign object at 0x7fa2ce3bd278>],
             '$0.15': [<numba.core.ir.Assign object at 0x7fa2ce3bd4a8>],
             '$0.16': [<numba.core.ir.Assign object at 0x7fa2ce3ad128>],
             '$0.18': [<numba.core.ir.Assign object at 0x7fa2ce3ad2e8>],
             '$0.19': [<numba.core.ir.Assign object at 0x7fa2ce3ad3c8>],
             '$0.22': [<numba.core.ir.Assign object at 0x7fa2ce3bd550>],
             '$0.25': [<numba.core.ir.Assign object at 0x7fa2ce3bd5c0>],
             '$0.26': [<numba.core.ir.Assign object at 0x7fa2ce3ad978>],
             '$0.28': [<numba.core.ir.Assign object at 0x7fa2ce3adb38>],
             '$0.29': [<numba.core.ir.Assign object at 0x7fa2ce3adc18>],
             '$0.3': [<numba.core.ir.Assign object at 0x7fa2ce3a20f0>],
             '$0.32': [<numba.core.ir.Assign object at 0x7fa2ce3bd630>],
             '$0.35': [<numba.core.ir.Assign object at 0x7fa2ce3bd6a0>],
             '$0.36': [<numba.core.ir.Assign object at 0x7fa2ce3b2208>],
             '$0.38': [<numba.core.ir.Assign object at 0x7fa2ce3b23c8>],
             '$0.42': [<numba.core.ir.Assign object at 0x7fa2ce3bd710>],
             '$0.45': [<numba.core.ir.Assign object at 0x7fa2ce3bd780>],
             '$0.46': [<numba.core.ir.Assign object at 0x7fa2ce3b2b00>],
             '$0.48': [<numba.core.ir.Assign object at 0x7fa2ce3b2cc0>],
             '$0.51': [<numba.core.ir.Assign object at 0x7fa2ce3bd7f0>],
             '$0.54': [<numba.core.ir.Assign object at 0x7fa2ce3bd860>],
             '$0.55': [<numba.core.ir.Assign object at 0x7fa2ce3b52b0>],
             '$0.57': [<numba.core.ir.Assign object at 0x7fa2ce3b5470>],
             '$0.58': [<numba.core.ir.Assign object at 0x7fa2ce3b5550>],
             '$0.6': [<numba.core.ir.Assign object at 0x7fa2ce3a2080>],
             '$0.61': [<numba.core.ir.Assign object at 0x7fa2ce3bd8d0>],
             '$0.64': [<numba.core.ir.Assign object at 0x7fa2ce3bd940>],
             '$0.65': [<numba.core.ir.Assign object at 0x7fa2ce3b5b00>],
             '$0.67': [<numba.core.ir.Assign object at 0x7fa2ce3b5cc0>],
             '$0.68': [<numba.core.ir.Assign object at 0x7fa2ce3b5da0>],
             '$0.7': [<numba.core.ir.Assign object at 0x7fa2ce3aa978>],
             '$0.71': [<numba.core.ir.Assign object at 0x7fa2ce3bd9b0>],
             '$0.74': [<numba.core.ir.Assign object at 0x7fa2ce3bda20>],
             '$0.75': [<numba.core.ir.Assign object at 0x7fa2ce3b9390>],
             '$0.77': [<numba.core.ir.Assign object at 0x7fa2ce3b9550>],
             '$0.81': [<numba.core.ir.Assign object at 0x7fa2ce3b9908>],
             '$0.9': [<numba.core.ir.Assign object at 0x7fa2ce3aab38>],
             '$168pred': [<numba.core.ir.Assign object at 0x7fa2ce3b9ac8>],
             '$170.1': [<numba.core.ir.Assign object at 0x7fa2ce3b2d68>],
             '$170.2': [<numba.core.ir.Assign object at 0x7fa2ce3b5e48>],
             '$170.4': [<numba.core.ir.Assign object at 0x7fa2ce3b90f0>],
             '$186.1': [<numba.core.ir.Assign object at 0x7fa2ce3b9da0>],
             '$186.2': [<numba.core.ir.Assign object at 0x7fa2ce3b9e80>],
             '$186.4': [<numba.core.ir.Assign object at 0x7fa2ce3bd048>],
             '$200.2': [<numba.core.ir.Assign object at 0x7fa2ce3bd438>],
             '$const0.11': [<numba.core.ir.Assign object at 0x7fa2ce3aacc0>],
             '$const0.14': [<numba.core.ir.Assign object at 0x7fa2ce3aaf28>],
             '$const0.17': [<numba.core.ir.Assign object at 0x7fa2ce3ad208>],
             '$const0.2': [<numba.core.ir.Assign object at 0x7fa2ce3aa550>],
             '$const0.21': [<numba.core.ir.Assign object at 0x7fa2ce3ad550>],
             '$const0.24': [<numba.core.ir.Assign object at 0x7fa2ce3ad7b8>],
             '$const0.27': [<numba.core.ir.Assign object at 0x7fa2ce3ada58>],
             '$const0.31': [<numba.core.ir.Assign object at 0x7fa2ce3adda0>],
             '$const0.34': [<numba.core.ir.Assign object at 0x7fa2ce3b2048>],
             '$const0.37': [<numba.core.ir.Assign object at 0x7fa2ce3b22e8>],
             '$const0.41': [<numba.core.ir.Assign object at 0x7fa2ce3b26d8>],
             '$const0.44': [<numba.core.ir.Assign object at 0x7fa2ce3b2940>],
             '$const0.47': [<numba.core.ir.Assign object at 0x7fa2ce3b2be0>],
             '$const0.5': [<numba.core.ir.Assign object at 0x7fa2ce3aa7b8>],
             '$const0.50': [<numba.core.ir.Assign object at 0x7fa2ce3b2e48>],
             '$const0.53': [<numba.core.ir.Assign object at 0x7fa2ce3b50f0>],
             '$const0.56': [<numba.core.ir.Assign object at 0x7fa2ce3b5390>],
             '$const0.60': [<numba.core.ir.Assign object at 0x7fa2ce3b56d8>],
             '$const0.63': [<numba.core.ir.Assign object at 0x7fa2ce3b5940>],
             '$const0.66': [<numba.core.ir.Assign object at 0x7fa2ce3b5be0>],
             '$const0.70': [<numba.core.ir.Assign object at 0x7fa2ce3b5f28>],
             '$const0.73': [<numba.core.ir.Assign object at 0x7fa2ce3b91d0>],
             '$const0.76': [<numba.core.ir.Assign object at 0x7fa2ce3b9470>],
             '$const0.8': [<numba.core.ir.Assign object at 0x7fa2ce3aaa58>],
             '$const170.6': [<numba.core.ir.Assign object at 0x7fa2ce3b9be0>],
             '$const186.6': [<numba.core.ir.Assign object at 0x7fa2ce3bd1d0>],
             '$const200.1': [<numba.core.ir.Assign object at 0x7fa2ce3bd358>],
             'a': [<numba.core.ir.Assign object at 0x7fa2ce3b24a8>],
             'b': [<numba.core.ir.Assign object at 0x7fa2ce3b9630>],
             'bool168': [<numba.core.ir.Assign object at 0x7fa2ce3b9a20>],
             'out': [<numba.core.ir.Assign object at 0x7fa2ce3aa3c8>],
             'q1': [<numba.core.ir.Assign object at 0x7fa2ce3aa278>],
             'q2': [<numba.core.ir.Assign object at 0x7fa2ce3aa320>]})
2022-08-04 11:53:02,406 DEBUG SSA violators set()
2022-08-04 11:53:02,671 DEBUG label 0:
    q1 = arg(0, name=q1)                     ['q1']
    q2 = arg(1, name=q2)                     ['q2']
    qout = arg(2, name=qout)                 ['qout']
    $const0.2 = const(int, 0)                ['$const0.2']
    $0.3 = getitem(value=q1, index=$const0.2, fn=<built-in function getitem>) ['$0.3', '$const0.2', 'q1']
    $const0.5 = const(int, 0)                ['$const0.5']
    $0.6 = getitem(value=q2, index=$const0.5, fn=<built-in function getitem>) ['$0.6', '$const0.5', 'q2']
    $0.7 = $0.3 + $0.6                       ['$0.3', '$0.6', '$0.7']
    $const0.9 = const(int, 0)                ['$const0.9']
    qout[$const0.9] = $0.7                   ['$0.7', '$const0.9', 'qout']
    $const0.11 = const(int, 1)               ['$const0.11']
    $0.12 = getitem(value=q1, index=$const0.11, fn=<built-in function getitem>) ['$0.12', '$const0.11', 'q1']
    $const0.14 = const(int, 1)               ['$const0.14']
    $0.15 = getitem(value=q2, index=$const0.14, fn=<built-in function getitem>) ['$0.15', '$const0.14', 'q2']
    $0.16 = $0.12 + $0.15                    ['$0.12', '$0.15', '$0.16']
    $const0.18 = const(int, 1)               ['$const0.18']
    qout[$const0.18] = $0.16                 ['$0.16', '$const0.18', 'qout']
    $const0.20 = const(int, 2)               ['$const0.20']
    $0.21 = getitem(value=q1, index=$const0.20, fn=<built-in function getitem>) ['$0.21', '$const0.20', 'q1']
    $const0.23 = const(int, 2)               ['$const0.23']
    $0.24 = getitem(value=q2, index=$const0.23, fn=<built-in function getitem>) ['$0.24', '$const0.23', 'q2']
    $0.25 = $0.21 + $0.24                    ['$0.21', '$0.24', '$0.25']
    $const0.27 = const(int, 2)               ['$const0.27']
    qout[$const0.27] = $0.25                 ['$0.25', '$const0.27', 'qout']
    $const0.29 = const(int, 3)               ['$const0.29']
    $0.30 = getitem(value=q1, index=$const0.29, fn=<built-in function getitem>) ['$0.30', '$const0.29', 'q1']
    $const0.32 = const(int, 3)               ['$const0.32']
    $0.33 = getitem(value=q2, index=$const0.32, fn=<built-in function getitem>) ['$0.33', '$const0.32', 'q2']
    $0.34 = $0.30 + $0.33                    ['$0.30', '$0.33', '$0.34']
    $const0.36 = const(int, 3)               ['$const0.36']
    qout[$const0.36] = $0.34                 ['$0.34', '$const0.36', 'qout']
    $const0.37 = const(NoneType, None)       ['$const0.37']
    $0.38 = cast(value=$const0.37)           ['$0.38', '$const0.37']
    return $0.38                             ['$0.38']

2022-08-04 11:53:02,675 DEBUG ==== SSA block analysis pass on 0
2022-08-04 11:53:02,675 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce3a2f28>
2022-08-04 11:53:02,675 DEBUG on stmt: q1 = arg(0, name=q1)
2022-08-04 11:53:02,675 DEBUG on stmt: q2 = arg(1, name=q2)
2022-08-04 11:53:02,675 DEBUG on stmt: qout = arg(2, name=qout)
2022-08-04 11:53:02,676 DEBUG on stmt: $const0.2 = const(int, 0)
2022-08-04 11:53:02,676 DEBUG on stmt: $0.3 = static_getitem(value=q1, index=0, index_var=$const0.2, fn=<built-in function getitem>)
2022-08-04 11:53:02,676 DEBUG on stmt: $const0.5 = const(int, 0)
2022-08-04 11:53:02,676 DEBUG on stmt: $0.6 = static_getitem(value=q2, index=0, index_var=$const0.5, fn=<built-in function getitem>)
2022-08-04 11:53:02,676 DEBUG on stmt: $0.7 = $0.3 + $0.6
2022-08-04 11:53:02,676 DEBUG on stmt: $const0.9 = const(int, 0)
2022-08-04 11:53:02,676 DEBUG on stmt: qout[0] = $0.7
2022-08-04 11:53:02,676 DEBUG on stmt: $const0.11 = const(int, 1)
2022-08-04 11:53:02,676 DEBUG on stmt: $0.12 = static_getitem(value=q1, index=1, index_var=$const0.11, fn=<built-in function getitem>)
2022-08-04 11:53:02,676 DEBUG on stmt: $const0.14 = const(int, 1)
2022-08-04 11:53:02,676 DEBUG on stmt: $0.15 = static_getitem(value=q2, index=1, index_var=$const0.14, fn=<built-in function getitem>)
2022-08-04 11:53:02,676 DEBUG on stmt: $0.16 = $0.12 + $0.15
2022-08-04 11:53:02,676 DEBUG on stmt: $const0.18 = const(int, 1)
2022-08-04 11:53:02,676 DEBUG on stmt: qout[1] = $0.16
2022-08-04 11:53:02,676 DEBUG on stmt: $const0.20 = const(int, 2)
2022-08-04 11:53:02,676 DEBUG on stmt: $0.21 = static_getitem(value=q1, index=2, index_var=$const0.20, fn=<built-in function getitem>)
2022-08-04 11:53:02,676 DEBUG on stmt: $const0.23 = const(int, 2)
2022-08-04 11:53:02,676 DEBUG on stmt: $0.24 = static_getitem(value=q2, index=2, index_var=$const0.23, fn=<built-in function getitem>)
2022-08-04 11:53:02,676 DEBUG on stmt: $0.25 = $0.21 + $0.24
2022-08-04 11:53:02,676 DEBUG on stmt: $const0.27 = const(int, 2)
2022-08-04 11:53:02,676 DEBUG on stmt: qout[2] = $0.25
2022-08-04 11:53:02,676 DEBUG on stmt: $const0.29 = const(int, 3)
2022-08-04 11:53:02,676 DEBUG on stmt: $0.30 = static_getitem(value=q1, index=3, index_var=$const0.29, fn=<built-in function getitem>)
2022-08-04 11:53:02,676 DEBUG on stmt: $const0.32 = const(int, 3)
2022-08-04 11:53:02,677 DEBUG on stmt: $0.33 = static_getitem(value=q2, index=3, index_var=$const0.32, fn=<built-in function getitem>)
2022-08-04 11:53:02,677 DEBUG on stmt: $0.34 = $0.30 + $0.33
2022-08-04 11:53:02,677 DEBUG on stmt: $const0.36 = const(int, 3)
2022-08-04 11:53:02,677 DEBUG on stmt: qout[3] = $0.34
2022-08-04 11:53:02,677 DEBUG on stmt: $const0.37 = const(NoneType, None)
2022-08-04 11:53:02,677 DEBUG on stmt: $0.38 = cast(value=$const0.37)
2022-08-04 11:53:02,677 DEBUG on stmt: return $0.38
2022-08-04 11:53:02,677 DEBUG defs defaultdict(<class 'list'>,
            {'$0.12': [<numba.core.ir.Assign object at 0x7fa2ce5c4748>],
             '$0.15': [<numba.core.ir.Assign object at 0x7fa2ce5c47b8>],
             '$0.16': [<numba.core.ir.Assign object at 0x7fa2ce5bdf60>],
             '$0.21': [<numba.core.ir.Assign object at 0x7fa2ce5c4828>],
             '$0.24': [<numba.core.ir.Assign object at 0x7fa2ce5c4898>],
             '$0.25': [<numba.core.ir.Assign object at 0x7fa2ce5c1748>],
             '$0.3': [<numba.core.ir.Assign object at 0x7fa2ce5c4668>],
             '$0.30': [<numba.core.ir.Assign object at 0x7fa2ce5c4908>],
             '$0.33': [<numba.core.ir.Assign object at 0x7fa2ce5c4978>],
             '$0.34': [<numba.core.ir.Assign object at 0x7fa2ce5c1ef0>],
             '$0.38': [<numba.core.ir.Assign object at 0x7fa2ce5c42e8>],
             '$0.6': [<numba.core.ir.Assign object at 0x7fa2ce5c46d8>],
             '$0.7': [<numba.core.ir.Assign object at 0x7fa2ce5bd7b8>],
             '$const0.11': [<numba.core.ir.Assign object at 0x7fa2ce5bdb38>],
             '$const0.14': [<numba.core.ir.Assign object at 0x7fa2ce5bdda0>],
             '$const0.18': [<numba.core.ir.Assign object at 0x7fa2ce5c1128>],
             '$const0.2': [<numba.core.ir.Assign object at 0x7fa2ce5bd390>],
             '$const0.20': [<numba.core.ir.Assign object at 0x7fa2ce5c1320>],
             '$const0.23': [<numba.core.ir.Assign object at 0x7fa2ce5c1588>],
             '$const0.27': [<numba.core.ir.Assign object at 0x7fa2ce5c18d0>],
             '$const0.29': [<numba.core.ir.Assign object at 0x7fa2ce5c1ac8>],
             '$const0.32': [<numba.core.ir.Assign object at 0x7fa2ce5c1d30>],
             '$const0.36': [<numba.core.ir.Assign object at 0x7fa2ce5c40b8>],
             '$const0.37': [<numba.core.ir.Assign object at 0x7fa2ce5c4208>],
             '$const0.5': [<numba.core.ir.Assign object at 0x7fa2ce5bd5f8>],
             '$const0.9': [<numba.core.ir.Assign object at 0x7fa2ce5bd940>],
             'q1': [<numba.core.ir.Assign object at 0x7fa2ce5bd0b8>],
             'q2': [<numba.core.ir.Assign object at 0x7fa2ce5bd160>],
             'qout': [<numba.core.ir.Assign object at 0x7fa2ce5bd208>]})
2022-08-04 11:53:02,677 DEBUG SSA violators set()
2022-08-04 11:53:02,819 DEBUG label 0:
    q1 = arg(0, name=q1)                     ['q1']
    q2 = arg(1, name=q2)                     ['q2']
    qout = arg(2, name=qout)                 ['qout']
    $const0.2 = const(int, 0)                ['$const0.2']
    $0.3 = getitem(value=q1, index=$const0.2, fn=<built-in function getitem>) ['$0.3', '$const0.2', 'q1']
    $const0.5 = const(int, 0)                ['$const0.5']
    $0.6 = getitem(value=q2, index=$const0.5, fn=<built-in function getitem>) ['$0.6', '$const0.5', 'q2']
    $0.7 = $0.3 - $0.6                       ['$0.3', '$0.6', '$0.7']
    $const0.9 = const(int, 0)                ['$const0.9']
    qout[$const0.9] = $0.7                   ['$0.7', '$const0.9', 'qout']
    $const0.11 = const(int, 1)               ['$const0.11']
    $0.12 = getitem(value=q1, index=$const0.11, fn=<built-in function getitem>) ['$0.12', '$const0.11', 'q1']
    $const0.14 = const(int, 1)               ['$const0.14']
    $0.15 = getitem(value=q2, index=$const0.14, fn=<built-in function getitem>) ['$0.15', '$const0.14', 'q2']
    $0.16 = $0.12 - $0.15                    ['$0.12', '$0.15', '$0.16']
    $const0.18 = const(int, 1)               ['$const0.18']
    qout[$const0.18] = $0.16                 ['$0.16', '$const0.18', 'qout']
    $const0.20 = const(int, 2)               ['$const0.20']
    $0.21 = getitem(value=q1, index=$const0.20, fn=<built-in function getitem>) ['$0.21', '$const0.20', 'q1']
    $const0.23 = const(int, 2)               ['$const0.23']
    $0.24 = getitem(value=q2, index=$const0.23, fn=<built-in function getitem>) ['$0.24', '$const0.23', 'q2']
    $0.25 = $0.21 - $0.24                    ['$0.21', '$0.24', '$0.25']
    $const0.27 = const(int, 2)               ['$const0.27']
    qout[$const0.27] = $0.25                 ['$0.25', '$const0.27', 'qout']
    $const0.29 = const(int, 3)               ['$const0.29']
    $0.30 = getitem(value=q1, index=$const0.29, fn=<built-in function getitem>) ['$0.30', '$const0.29', 'q1']
    $const0.32 = const(int, 3)               ['$const0.32']
    $0.33 = getitem(value=q2, index=$const0.32, fn=<built-in function getitem>) ['$0.33', '$const0.32', 'q2']
    $0.34 = $0.30 - $0.33                    ['$0.30', '$0.33', '$0.34']
    $const0.36 = const(int, 3)               ['$const0.36']
    qout[$const0.36] = $0.34                 ['$0.34', '$const0.36', 'qout']
    $const0.37 = const(NoneType, None)       ['$const0.37']
    $0.38 = cast(value=$const0.37)           ['$0.38', '$const0.37']
    return $0.38                             ['$0.38']

2022-08-04 11:53:02,825 DEBUG ==== SSA block analysis pass on 0
2022-08-04 11:53:02,825 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce698668>
2022-08-04 11:53:02,825 DEBUG on stmt: q1 = arg(0, name=q1)
2022-08-04 11:53:02,825 DEBUG on stmt: q2 = arg(1, name=q2)
2022-08-04 11:53:02,825 DEBUG on stmt: qout = arg(2, name=qout)
2022-08-04 11:53:02,825 DEBUG on stmt: $const0.2 = const(int, 0)
2022-08-04 11:53:02,825 DEBUG on stmt: $0.3 = static_getitem(value=q1, index=0, index_var=$const0.2, fn=<built-in function getitem>)
2022-08-04 11:53:02,825 DEBUG on stmt: $const0.5 = const(int, 0)
2022-08-04 11:53:02,825 DEBUG on stmt: $0.6 = static_getitem(value=q2, index=0, index_var=$const0.5, fn=<built-in function getitem>)
2022-08-04 11:53:02,825 DEBUG on stmt: $0.7 = $0.3 - $0.6
2022-08-04 11:53:02,825 DEBUG on stmt: $const0.9 = const(int, 0)
2022-08-04 11:53:02,825 DEBUG on stmt: qout[0] = $0.7
2022-08-04 11:53:02,826 DEBUG on stmt: $const0.11 = const(int, 1)
2022-08-04 11:53:02,826 DEBUG on stmt: $0.12 = static_getitem(value=q1, index=1, index_var=$const0.11, fn=<built-in function getitem>)
2022-08-04 11:53:02,826 DEBUG on stmt: $const0.14 = const(int, 1)
2022-08-04 11:53:02,826 DEBUG on stmt: $0.15 = static_getitem(value=q2, index=1, index_var=$const0.14, fn=<built-in function getitem>)
2022-08-04 11:53:02,826 DEBUG on stmt: $0.16 = $0.12 - $0.15
2022-08-04 11:53:02,826 DEBUG on stmt: $const0.18 = const(int, 1)
2022-08-04 11:53:02,826 DEBUG on stmt: qout[1] = $0.16
2022-08-04 11:53:02,826 DEBUG on stmt: $const0.20 = const(int, 2)
2022-08-04 11:53:02,826 DEBUG on stmt: $0.21 = static_getitem(value=q1, index=2, index_var=$const0.20, fn=<built-in function getitem>)
2022-08-04 11:53:02,826 DEBUG on stmt: $const0.23 = const(int, 2)
2022-08-04 11:53:02,826 DEBUG on stmt: $0.24 = static_getitem(value=q2, index=2, index_var=$const0.23, fn=<built-in function getitem>)
2022-08-04 11:53:02,826 DEBUG on stmt: $0.25 = $0.21 - $0.24
2022-08-04 11:53:02,826 DEBUG on stmt: $const0.27 = const(int, 2)
2022-08-04 11:53:02,827 DEBUG on stmt: qout[2] = $0.25
2022-08-04 11:53:02,827 DEBUG on stmt: $const0.29 = const(int, 3)
2022-08-04 11:53:02,827 DEBUG on stmt: $0.30 = static_getitem(value=q1, index=3, index_var=$const0.29, fn=<built-in function getitem>)
2022-08-04 11:53:02,827 DEBUG on stmt: $const0.32 = const(int, 3)
2022-08-04 11:53:02,827 DEBUG on stmt: $0.33 = static_getitem(value=q2, index=3, index_var=$const0.32, fn=<built-in function getitem>)
2022-08-04 11:53:02,827 DEBUG on stmt: $0.34 = $0.30 - $0.33
2022-08-04 11:53:02,827 DEBUG on stmt: $const0.36 = const(int, 3)
2022-08-04 11:53:02,827 DEBUG on stmt: qout[3] = $0.34
2022-08-04 11:53:02,827 DEBUG on stmt: $const0.37 = const(NoneType, None)
2022-08-04 11:53:02,827 DEBUG on stmt: $0.38 = cast(value=$const0.37)
2022-08-04 11:53:02,827 DEBUG on stmt: return $0.38
2022-08-04 11:53:02,828 DEBUG defs defaultdict(<class 'list'>,
            {'$0.12': [<numba.core.ir.Assign object at 0x7fa2ce69f550>],
             '$0.15': [<numba.core.ir.Assign object at 0x7fa2ce69f5c0>],
             '$0.16': [<numba.core.ir.Assign object at 0x7fa2ce698d68>],
             '$0.21': [<numba.core.ir.Assign object at 0x7fa2ce69f630>],
             '$0.24': [<numba.core.ir.Assign object at 0x7fa2ce69f6a0>],
             '$0.25': [<numba.core.ir.Assign object at 0x7fa2ce69b550>],
             '$0.3': [<numba.core.ir.Assign object at 0x7fa2ce69f470>],
             '$0.30': [<numba.core.ir.Assign object at 0x7fa2ce69f710>],
             '$0.33': [<numba.core.ir.Assign object at 0x7fa2ce69f780>],
             '$0.34': [<numba.core.ir.Assign object at 0x7fa2ce69bcf8>],
             '$0.38': [<numba.core.ir.Assign object at 0x7fa2ce69f0f0>],
             '$0.6': [<numba.core.ir.Assign object at 0x7fa2ce69f4e0>],
             '$0.7': [<numba.core.ir.Assign object at 0x7fa2ce6985c0>],
             '$const0.11': [<numba.core.ir.Assign object at 0x7fa2ce698940>],
             '$const0.14': [<numba.core.ir.Assign object at 0x7fa2ce698ba8>],
             '$const0.18': [<numba.core.ir.Assign object at 0x7fa2ce698ef0>],
             '$const0.2': [<numba.core.ir.Assign object at 0x7fa2ce698198>],
             '$const0.20': [<numba.core.ir.Assign object at 0x7fa2ce69b128>],
             '$const0.23': [<numba.core.ir.Assign object at 0x7fa2ce69b390>],
             '$const0.27': [<numba.core.ir.Assign object at 0x7fa2ce69b6d8>],
             '$const0.29': [<numba.core.ir.Assign object at 0x7fa2ce69b8d0>],
             '$const0.32': [<numba.core.ir.Assign object at 0x7fa2ce69bb38>],
             '$const0.36': [<numba.core.ir.Assign object at 0x7fa2ce69be80>],
             '$const0.37': [<numba.core.ir.Assign object at 0x7fa2ce69bfd0>],
             '$const0.5': [<numba.core.ir.Assign object at 0x7fa2ce698400>],
             '$const0.9': [<numba.core.ir.Assign object at 0x7fa2ce698748>],
             'q1': [<numba.core.ir.Assign object at 0x7fa2ce690e80>],
             'q2': [<numba.core.ir.Assign object at 0x7fa2ce690f28>],
             'qout': [<numba.core.ir.Assign object at 0x7fa2ce690fd0>]})
2022-08-04 11:53:02,828 DEBUG SSA violators set()
2022-08-04 11:53:02,966 DEBUG label 0:
    q1 = arg(0, name=q1)                     ['q1']
    q2 = arg(1, name=q2)                     ['q2']
    qout = arg(2, name=qout)                 ['qout']
    $const0.2 = const(int, 0)                ['$const0.2']
    $0.3 = getitem(value=q1, index=$const0.2, fn=<built-in function getitem>) ['$0.3', '$const0.2', 'q1']
    $const0.5 = const(int, 0)                ['$const0.5']
    $0.6 = getitem(value=q2, index=$const0.5, fn=<built-in function getitem>) ['$0.6', '$const0.5', 'q2']
    $0.7 = $0.3 * $0.6                       ['$0.3', '$0.6', '$0.7']
    $const0.9 = const(int, 1)                ['$const0.9']
    $0.10 = getitem(value=q1, index=$const0.9, fn=<built-in function getitem>) ['$0.10', '$const0.9', 'q1']
    $const0.12 = const(int, 1)               ['$const0.12']
    $0.13 = getitem(value=q2, index=$const0.12, fn=<built-in function getitem>) ['$0.13', '$const0.12', 'q2']
    $0.14 = $0.10 * $0.13                    ['$0.10', '$0.13', '$0.14']
    $0.15 = $0.7 - $0.14                     ['$0.14', '$0.15', '$0.7']
    $const0.17 = const(int, 2)               ['$const0.17']
    $0.18 = getitem(value=q1, index=$const0.17, fn=<built-in function getitem>) ['$0.18', '$const0.17', 'q1']
    $const0.20 = const(int, 2)               ['$const0.20']
    $0.21 = getitem(value=q2, index=$const0.20, fn=<built-in function getitem>) ['$0.21', '$const0.20', 'q2']
    $0.22 = $0.18 * $0.21                    ['$0.18', '$0.21', '$0.22']
    $0.23 = $0.15 - $0.22                    ['$0.15', '$0.22', '$0.23']
    $const0.25 = const(int, 3)               ['$const0.25']
    $0.26 = getitem(value=q1, index=$const0.25, fn=<built-in function getitem>) ['$0.26', '$const0.25', 'q1']
    $const0.28 = const(int, 3)               ['$const0.28']
    $0.29 = getitem(value=q2, index=$const0.28, fn=<built-in function getitem>) ['$0.29', '$const0.28', 'q2']
    $0.30 = $0.26 * $0.29                    ['$0.26', '$0.29', '$0.30']
    $0.31 = $0.23 - $0.30                    ['$0.23', '$0.30', '$0.31']
    $const0.33 = const(int, 0)               ['$const0.33']
    qout[$const0.33] = $0.31                 ['$0.31', '$const0.33', 'qout']
    $const0.35 = const(int, 0)               ['$const0.35']
    $0.36 = getitem(value=q1, index=$const0.35, fn=<built-in function getitem>) ['$0.36', '$const0.35', 'q1']
    $const0.38 = const(int, 1)               ['$const0.38']
    $0.39 = getitem(value=q2, index=$const0.38, fn=<built-in function getitem>) ['$0.39', '$const0.38', 'q2']
    $0.40 = $0.36 * $0.39                    ['$0.36', '$0.39', '$0.40']
    $const0.42 = const(int, 1)               ['$const0.42']
    $0.43 = getitem(value=q1, index=$const0.42, fn=<built-in function getitem>) ['$0.43', '$const0.42', 'q1']
    $const0.45 = const(int, 0)               ['$const0.45']
    $0.46 = getitem(value=q2, index=$const0.45, fn=<built-in function getitem>) ['$0.46', '$const0.45', 'q2']
    $0.47 = $0.43 * $0.46                    ['$0.43', '$0.46', '$0.47']
    $0.48 = $0.40 + $0.47                    ['$0.40', '$0.47', '$0.48']
    $const0.50 = const(int, 2)               ['$const0.50']
    $0.51 = getitem(value=q1, index=$const0.50, fn=<built-in function getitem>) ['$0.51', '$const0.50', 'q1']
    $const0.53 = const(int, 3)               ['$const0.53']
    $0.54 = getitem(value=q2, index=$const0.53, fn=<built-in function getitem>) ['$0.54', '$const0.53', 'q2']
    $0.55 = $0.51 * $0.54                    ['$0.51', '$0.54', '$0.55']
    $0.56 = $0.48 + $0.55                    ['$0.48', '$0.55', '$0.56']
    $const0.58 = const(int, 3)               ['$const0.58']
    $0.59 = getitem(value=q1, index=$const0.58, fn=<built-in function getitem>) ['$0.59', '$const0.58', 'q1']
    $const0.61 = const(int, 2)               ['$const0.61']
    $0.62 = getitem(value=q2, index=$const0.61, fn=<built-in function getitem>) ['$0.62', '$const0.61', 'q2']
    $0.63 = $0.59 * $0.62                    ['$0.59', '$0.62', '$0.63']
    $0.64 = $0.56 - $0.63                    ['$0.56', '$0.63', '$0.64']
    $const0.66 = const(int, 1)               ['$const0.66']
    qout[$const0.66] = $0.64                 ['$0.64', '$const0.66', 'qout']
    $const0.68 = const(int, 0)               ['$const0.68']
    $0.69 = getitem(value=q1, index=$const0.68, fn=<built-in function getitem>) ['$0.69', '$const0.68', 'q1']
    $const0.71 = const(int, 2)               ['$const0.71']
    $0.72 = getitem(value=q2, index=$const0.71, fn=<built-in function getitem>) ['$0.72', '$const0.71', 'q2']
    $0.73 = $0.69 * $0.72                    ['$0.69', '$0.72', '$0.73']
    $const0.75 = const(int, 1)               ['$const0.75']
    $0.76 = getitem(value=q1, index=$const0.75, fn=<built-in function getitem>) ['$0.76', '$const0.75', 'q1']
    $const0.78 = const(int, 3)               ['$const0.78']
    $0.79 = getitem(value=q2, index=$const0.78, fn=<built-in function getitem>) ['$0.79', '$const0.78', 'q2']
    $0.80 = $0.76 * $0.79                    ['$0.76', '$0.79', '$0.80']
    $0.81 = $0.73 - $0.80                    ['$0.73', '$0.80', '$0.81']
    $const0.83 = const(int, 2)               ['$const0.83']
    $0.84 = getitem(value=q1, index=$const0.83, fn=<built-in function getitem>) ['$0.84', '$const0.83', 'q1']
    $const0.86 = const(int, 0)               ['$const0.86']
    $0.87 = getitem(value=q2, index=$const0.86, fn=<built-in function getitem>) ['$0.87', '$const0.86', 'q2']
    $0.88 = $0.84 * $0.87                    ['$0.84', '$0.87', '$0.88']
    $0.89 = $0.81 + $0.88                    ['$0.81', '$0.88', '$0.89']
    $const0.91 = const(int, 3)               ['$const0.91']
    $0.92 = getitem(value=q1, index=$const0.91, fn=<built-in function getitem>) ['$0.92', '$const0.91', 'q1']
    $const0.94 = const(int, 1)               ['$const0.94']
    $0.95 = getitem(value=q2, index=$const0.94, fn=<built-in function getitem>) ['$0.95', '$const0.94', 'q2']
    $0.96 = $0.92 * $0.95                    ['$0.92', '$0.95', '$0.96']
    $0.97 = $0.89 + $0.96                    ['$0.89', '$0.96', '$0.97']
    $const0.99 = const(int, 2)               ['$const0.99']
    qout[$const0.99] = $0.97                 ['$0.97', '$const0.99', 'qout']
    $const0.101 = const(int, 0)              ['$const0.101']
    $0.102 = getitem(value=q1, index=$const0.101, fn=<built-in function getitem>) ['$0.102', '$const0.101', 'q1']
    $const0.104 = const(int, 3)              ['$const0.104']
    $0.105 = getitem(value=q2, index=$const0.104, fn=<built-in function getitem>) ['$0.105', '$const0.104', 'q2']
    $0.106 = $0.102 * $0.105                 ['$0.102', '$0.105', '$0.106']
    $const0.108 = const(int, 1)              ['$const0.108']
    $0.109 = getitem(value=q1, index=$const0.108, fn=<built-in function getitem>) ['$0.109', '$const0.108', 'q1']
    $const0.111 = const(int, 2)              ['$const0.111']
    $0.112 = getitem(value=q2, index=$const0.111, fn=<built-in function getitem>) ['$0.112', '$const0.111', 'q2']
    $0.113 = $0.109 * $0.112                 ['$0.109', '$0.112', '$0.113']
    $0.114 = $0.106 + $0.113                 ['$0.106', '$0.113', '$0.114']
    $const0.116 = const(int, 2)              ['$const0.116']
    $0.117 = getitem(value=q1, index=$const0.116, fn=<built-in function getitem>) ['$0.117', '$const0.116', 'q1']
    $const0.119 = const(int, 1)              ['$const0.119']
    $0.120 = getitem(value=q2, index=$const0.119, fn=<built-in function getitem>) ['$0.120', '$const0.119', 'q2']
    $0.121 = $0.117 * $0.120                 ['$0.117', '$0.120', '$0.121']
    $0.122 = $0.114 - $0.121                 ['$0.114', '$0.121', '$0.122']
    $const0.124 = const(int, 3)              ['$const0.124']
    $0.125 = getitem(value=q1, index=$const0.124, fn=<built-in function getitem>) ['$0.125', '$const0.124', 'q1']
    $const0.127 = const(int, 0)              ['$const0.127']
    $0.128 = getitem(value=q2, index=$const0.127, fn=<built-in function getitem>) ['$0.128', '$const0.127', 'q2']
    $0.129 = $0.125 * $0.128                 ['$0.125', '$0.128', '$0.129']
    $0.130 = $0.122 + $0.129                 ['$0.122', '$0.129', '$0.130']
    $const0.132 = const(int, 3)              ['$const0.132']
    qout[$const0.132] = $0.130               ['$0.130', '$const0.132', 'qout']
    $const0.133 = const(NoneType, None)      ['$const0.133']
    $0.134 = cast(value=$const0.133)         ['$0.134', '$const0.133']
    return $0.134                            ['$0.134']

2022-08-04 11:53:02,977 DEBUG ==== SSA block analysis pass on 0
2022-08-04 11:53:02,977 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce76b8d0>
2022-08-04 11:53:02,977 DEBUG on stmt: q1 = arg(0, name=q1)
2022-08-04 11:53:02,977 DEBUG on stmt: q2 = arg(1, name=q2)
2022-08-04 11:53:02,977 DEBUG on stmt: qout = arg(2, name=qout)
2022-08-04 11:53:02,977 DEBUG on stmt: $const0.2 = const(int, 0)
2022-08-04 11:53:02,977 DEBUG on stmt: $0.3 = static_getitem(value=q1, index=0, index_var=$const0.2, fn=<built-in function getitem>)
2022-08-04 11:53:02,977 DEBUG on stmt: $const0.5 = const(int, 0)
2022-08-04 11:53:02,977 DEBUG on stmt: $0.6 = static_getitem(value=q2, index=0, index_var=$const0.5, fn=<built-in function getitem>)
2022-08-04 11:53:02,977 DEBUG on stmt: $0.7 = $0.3 * $0.6
2022-08-04 11:53:02,977 DEBUG on stmt: $const0.9 = const(int, 1)
2022-08-04 11:53:02,977 DEBUG on stmt: $0.10 = static_getitem(value=q1, index=1, index_var=$const0.9, fn=<built-in function getitem>)
2022-08-04 11:53:02,978 DEBUG on stmt: $const0.12 = const(int, 1)
2022-08-04 11:53:02,978 DEBUG on stmt: $0.13 = static_getitem(value=q2, index=1, index_var=$const0.12, fn=<built-in function getitem>)
2022-08-04 11:53:02,978 DEBUG on stmt: $0.14 = $0.10 * $0.13
2022-08-04 11:53:02,978 DEBUG on stmt: $0.15 = $0.7 - $0.14
2022-08-04 11:53:02,978 DEBUG on stmt: $const0.17 = const(int, 2)
2022-08-04 11:53:02,978 DEBUG on stmt: $0.18 = static_getitem(value=q1, index=2, index_var=$const0.17, fn=<built-in function getitem>)
2022-08-04 11:53:02,978 DEBUG on stmt: $const0.20 = const(int, 2)
2022-08-04 11:53:02,978 DEBUG on stmt: $0.21 = static_getitem(value=q2, index=2, index_var=$const0.20, fn=<built-in function getitem>)
2022-08-04 11:53:02,978 DEBUG on stmt: $0.22 = $0.18 * $0.21
2022-08-04 11:53:02,978 DEBUG on stmt: $0.23 = $0.15 - $0.22
2022-08-04 11:53:02,978 DEBUG on stmt: $const0.25 = const(int, 3)
2022-08-04 11:53:02,978 DEBUG on stmt: $0.26 = static_getitem(value=q1, index=3, index_var=$const0.25, fn=<built-in function getitem>)
2022-08-04 11:53:02,978 DEBUG on stmt: $const0.28 = const(int, 3)
2022-08-04 11:53:02,978 DEBUG on stmt: $0.29 = static_getitem(value=q2, index=3, index_var=$const0.28, fn=<built-in function getitem>)
2022-08-04 11:53:02,979 DEBUG on stmt: $0.30 = $0.26 * $0.29
2022-08-04 11:53:02,979 DEBUG on stmt: $0.31 = $0.23 - $0.30
2022-08-04 11:53:02,979 DEBUG on stmt: $const0.33 = const(int, 0)
2022-08-04 11:53:02,979 DEBUG on stmt: qout[0] = $0.31
2022-08-04 11:53:02,979 DEBUG on stmt: $const0.35 = const(int, 0)
2022-08-04 11:53:02,979 DEBUG on stmt: $0.36 = static_getitem(value=q1, index=0, index_var=$const0.35, fn=<built-in function getitem>)
2022-08-04 11:53:02,979 DEBUG on stmt: $const0.38 = const(int, 1)
2022-08-04 11:53:02,979 DEBUG on stmt: $0.39 = static_getitem(value=q2, index=1, index_var=$const0.38, fn=<built-in function getitem>)
2022-08-04 11:53:02,979 DEBUG on stmt: $0.40 = $0.36 * $0.39
2022-08-04 11:53:02,979 DEBUG on stmt: $const0.42 = const(int, 1)
2022-08-04 11:53:02,979 DEBUG on stmt: $0.43 = static_getitem(value=q1, index=1, index_var=$const0.42, fn=<built-in function getitem>)
2022-08-04 11:53:02,979 DEBUG on stmt: $const0.45 = const(int, 0)
2022-08-04 11:53:02,979 DEBUG on stmt: $0.46 = static_getitem(value=q2, index=0, index_var=$const0.45, fn=<built-in function getitem>)
2022-08-04 11:53:02,980 DEBUG on stmt: $0.47 = $0.43 * $0.46
2022-08-04 11:53:02,980 DEBUG on stmt: $0.48 = $0.40 + $0.47
2022-08-04 11:53:02,980 DEBUG on stmt: $const0.50 = const(int, 2)
2022-08-04 11:53:02,980 DEBUG on stmt: $0.51 = static_getitem(value=q1, index=2, index_var=$const0.50, fn=<built-in function getitem>)
2022-08-04 11:53:02,980 DEBUG on stmt: $const0.53 = const(int, 3)
2022-08-04 11:53:02,980 DEBUG on stmt: $0.54 = static_getitem(value=q2, index=3, index_var=$const0.53, fn=<built-in function getitem>)
2022-08-04 11:53:02,980 DEBUG on stmt: $0.55 = $0.51 * $0.54
2022-08-04 11:53:02,980 DEBUG on stmt: $0.56 = $0.48 + $0.55
2022-08-04 11:53:02,980 DEBUG on stmt: $const0.58 = const(int, 3)
2022-08-04 11:53:02,980 DEBUG on stmt: $0.59 = static_getitem(value=q1, index=3, index_var=$const0.58, fn=<built-in function getitem>)
2022-08-04 11:53:02,980 DEBUG on stmt: $const0.61 = const(int, 2)
2022-08-04 11:53:02,980 DEBUG on stmt: $0.62 = static_getitem(value=q2, index=2, index_var=$const0.61, fn=<built-in function getitem>)
2022-08-04 11:53:02,980 DEBUG on stmt: $0.63 = $0.59 * $0.62
2022-08-04 11:53:02,980 DEBUG on stmt: $0.64 = $0.56 - $0.63
2022-08-04 11:53:02,980 DEBUG on stmt: $const0.66 = const(int, 1)
2022-08-04 11:53:02,981 DEBUG on stmt: qout[1] = $0.64
2022-08-04 11:53:02,981 DEBUG on stmt: $const0.68 = const(int, 0)
2022-08-04 11:53:02,981 DEBUG on stmt: $0.69 = static_getitem(value=q1, index=0, index_var=$const0.68, fn=<built-in function getitem>)
2022-08-04 11:53:02,981 DEBUG on stmt: $const0.71 = const(int, 2)
2022-08-04 11:53:02,981 DEBUG on stmt: $0.72 = static_getitem(value=q2, index=2, index_var=$const0.71, fn=<built-in function getitem>)
2022-08-04 11:53:02,981 DEBUG on stmt: $0.73 = $0.69 * $0.72
2022-08-04 11:53:02,981 DEBUG on stmt: $const0.75 = const(int, 1)
2022-08-04 11:53:02,981 DEBUG on stmt: $0.76 = static_getitem(value=q1, index=1, index_var=$const0.75, fn=<built-in function getitem>)
2022-08-04 11:53:02,981 DEBUG on stmt: $const0.78 = const(int, 3)
2022-08-04 11:53:02,981 DEBUG on stmt: $0.79 = static_getitem(value=q2, index=3, index_var=$const0.78, fn=<built-in function getitem>)
2022-08-04 11:53:02,981 DEBUG on stmt: $0.80 = $0.76 * $0.79
2022-08-04 11:53:02,981 DEBUG on stmt: $0.81 = $0.73 - $0.80
2022-08-04 11:53:02,981 DEBUG on stmt: $const0.83 = const(int, 2)
2022-08-04 11:53:02,981 DEBUG on stmt: $0.84 = static_getitem(value=q1, index=2, index_var=$const0.83, fn=<built-in function getitem>)
2022-08-04 11:53:02,981 DEBUG on stmt: $const0.86 = const(int, 0)
2022-08-04 11:53:02,981 DEBUG on stmt: $0.87 = static_getitem(value=q2, index=0, index_var=$const0.86, fn=<built-in function getitem>)
2022-08-04 11:53:02,981 DEBUG on stmt: $0.88 = $0.84 * $0.87
2022-08-04 11:53:02,982 DEBUG on stmt: $0.89 = $0.81 + $0.88
2022-08-04 11:53:02,982 DEBUG on stmt: $const0.91 = const(int, 3)
2022-08-04 11:53:02,982 DEBUG on stmt: $0.92 = static_getitem(value=q1, index=3, index_var=$const0.91, fn=<built-in function getitem>)
2022-08-04 11:53:02,982 DEBUG on stmt: $const0.94 = const(int, 1)
2022-08-04 11:53:02,982 DEBUG on stmt: $0.95 = static_getitem(value=q2, index=1, index_var=$const0.94, fn=<built-in function getitem>)
2022-08-04 11:53:02,982 DEBUG on stmt: $0.96 = $0.92 * $0.95
2022-08-04 11:53:02,982 DEBUG on stmt: $0.97 = $0.89 + $0.96
2022-08-04 11:53:02,982 DEBUG on stmt: $const0.99 = const(int, 2)
2022-08-04 11:53:02,982 DEBUG on stmt: qout[2] = $0.97
2022-08-04 11:53:02,982 DEBUG on stmt: $const0.101 = const(int, 0)
2022-08-04 11:53:02,982 DEBUG on stmt: $0.102 = static_getitem(value=q1, index=0, index_var=$const0.101, fn=<built-in function getitem>)
2022-08-04 11:53:02,982 DEBUG on stmt: $const0.104 = const(int, 3)
2022-08-04 11:53:02,982 DEBUG on stmt: $0.105 = static_getitem(value=q2, index=3, index_var=$const0.104, fn=<built-in function getitem>)
2022-08-04 11:53:02,982 DEBUG on stmt: $0.106 = $0.102 * $0.105
2022-08-04 11:53:02,982 DEBUG on stmt: $const0.108 = const(int, 1)
2022-08-04 11:53:02,982 DEBUG on stmt: $0.109 = static_getitem(value=q1, index=1, index_var=$const0.108, fn=<built-in function getitem>)
2022-08-04 11:53:02,983 DEBUG on stmt: $const0.111 = const(int, 2)
2022-08-04 11:53:02,983 DEBUG on stmt: $0.112 = static_getitem(value=q2, index=2, index_var=$const0.111, fn=<built-in function getitem>)
2022-08-04 11:53:02,983 DEBUG on stmt: $0.113 = $0.109 * $0.112
2022-08-04 11:53:02,983 DEBUG on stmt: $0.114 = $0.106 + $0.113
2022-08-04 11:53:02,983 DEBUG on stmt: $const0.116 = const(int, 2)
2022-08-04 11:53:02,983 DEBUG on stmt: $0.117 = static_getitem(value=q1, index=2, index_var=$const0.116, fn=<built-in function getitem>)
2022-08-04 11:53:02,983 DEBUG on stmt: $const0.119 = const(int, 1)
2022-08-04 11:53:02,983 DEBUG on stmt: $0.120 = static_getitem(value=q2, index=1, index_var=$const0.119, fn=<built-in function getitem>)
2022-08-04 11:53:02,983 DEBUG on stmt: $0.121 = $0.117 * $0.120
2022-08-04 11:53:02,983 DEBUG on stmt: $0.122 = $0.114 - $0.121
2022-08-04 11:53:02,984 DEBUG on stmt: $const0.124 = const(int, 3)
2022-08-04 11:53:02,984 DEBUG on stmt: $0.125 = static_getitem(value=q1, index=3, index_var=$const0.124, fn=<built-in function getitem>)
2022-08-04 11:53:02,984 DEBUG on stmt: $const0.127 = const(int, 0)
2022-08-04 11:53:02,984 DEBUG on stmt: $0.128 = static_getitem(value=q2, index=0, index_var=$const0.127, fn=<built-in function getitem>)
2022-08-04 11:53:02,984 DEBUG on stmt: $0.129 = $0.125 * $0.128
2022-08-04 11:53:02,984 DEBUG on stmt: $0.130 = $0.122 + $0.129
2022-08-04 11:53:02,984 DEBUG on stmt: $const0.132 = const(int, 3)
2022-08-04 11:53:02,984 DEBUG on stmt: qout[3] = $0.130
2022-08-04 11:53:02,984 DEBUG on stmt: $const0.133 = const(NoneType, None)
2022-08-04 11:53:02,984 DEBUG on stmt: $0.134 = cast(value=$const0.133)
2022-08-04 11:53:02,984 DEBUG on stmt: return $0.134
2022-08-04 11:53:02,985 DEBUG defs defaultdict(<class 'list'>,
            {'$0.10': [<numba.core.ir.Assign object at 0x7fa2ce775fd0>],
             '$0.102': [<numba.core.ir.Assign object at 0x7fa2ce772668>],
             '$0.105': [<numba.core.ir.Assign object at 0x7fa2ce7726d8>],
             '$0.106': [<numba.core.ir.Assign object at 0x7fa2ce78f5f8>],
             '$0.109': [<numba.core.ir.Assign object at 0x7fa2ce772748>],
             '$0.112': [<numba.core.ir.Assign object at 0x7fa2ce7727b8>],
             '$0.113': [<numba.core.ir.Assign object at 0x7fa2ce78fba8>],
             '$0.114': [<numba.core.ir.Assign object at 0x7fa2ce78fc88>],
             '$0.117': [<numba.core.ir.Assign object at 0x7fa2ce772828>],
             '$0.120': [<numba.core.ir.Assign object at 0x7fa2ce772898>],
             '$0.121': [<numba.core.ir.Assign object at 0x7fa2ce793278>],
             '$0.122': [<numba.core.ir.Assign object at 0x7fa2ce793358>],
             '$0.125': [<numba.core.ir.Assign object at 0x7fa2ce772908>],
             '$0.128': [<numba.core.ir.Assign object at 0x7fa2ce772978>],
             '$0.129': [<numba.core.ir.Assign object at 0x7fa2ce793908>],
             '$0.13': [<numba.core.ir.Assign object at 0x7fa2ce793400>],
             '$0.130': [<numba.core.ir.Assign object at 0x7fa2ce7939e8>],
             '$0.134': [<numba.core.ir.Assign object at 0x7fa2ce793da0>],
             '$0.14': [<numba.core.ir.Assign object at 0x7fa2ce76e860>],
             '$0.15': [<numba.core.ir.Assign object at 0x7fa2ce76e940>],
             '$0.18': [<numba.core.ir.Assign object at 0x7fa2ce793a90>],
             '$0.21': [<numba.core.ir.Assign object at 0x7fa2ce793e48>],
             '$0.22': [<numba.core.ir.Assign object at 0x7fa2ce76eef0>],
             '$0.23': [<numba.core.ir.Assign object at 0x7fa2ce76efd0>],
             '$0.26': [<numba.core.ir.Assign object at 0x7fa2ce793eb8>],
             '$0.29': [<numba.core.ir.Assign object at 0x7fa2ce793f28>],
             '$0.3': [<numba.core.ir.Assign object at 0x7fa2ce78ff98>],
             '$0.30': [<numba.core.ir.Assign object at 0x7fa2ce77e5c0>],
             '$0.31': [<numba.core.ir.Assign object at 0x7fa2ce77e6a0>],
             '$0.36': [<numba.core.ir.Assign object at 0x7fa2ce793f98>],
             '$0.39': [<numba.core.ir.Assign object at 0x7fa2ce788518>],
             '$0.40': [<numba.core.ir.Assign object at 0x7fa2ce77ee48>],
             '$0.43': [<numba.core.ir.Assign object at 0x7fa2ce772048>],
             '$0.46': [<numba.core.ir.Assign object at 0x7fa2ce7720b8>],
             '$0.47': [<numba.core.ir.Assign object at 0x7fa2ce783438>],
             '$0.48': [<numba.core.ir.Assign object at 0x7fa2ce783518>],
             '$0.51': [<numba.core.ir.Assign object at 0x7fa2ce772128>],
             '$0.54': [<numba.core.ir.Assign object at 0x7fa2ce772198>],
             '$0.55': [<numba.core.ir.Assign object at 0x7fa2ce783ac8>],
             '$0.56': [<numba.core.ir.Assign object at 0x7fa2ce783ba8>],
             '$0.59': [<numba.core.ir.Assign object at 0x7fa2ce772208>],
             '$0.6': [<numba.core.ir.Assign object at 0x7fa2ce775a20>],
             '$0.62': [<numba.core.ir.Assign object at 0x7fa2ce772278>],
             '$0.63': [<numba.core.ir.Assign object at 0x7fa2ce788198>],
             '$0.64': [<numba.core.ir.Assign object at 0x7fa2ce788278>],
             '$0.69': [<numba.core.ir.Assign object at 0x7fa2ce7722e8>],
             '$0.7': [<numba.core.ir.Assign object at 0x7fa2ce76e2b0>],
             '$0.72': [<numba.core.ir.Assign object at 0x7fa2ce772358>],
             '$0.73': [<numba.core.ir.Assign object at 0x7fa2ce788a20>],
             '$0.76': [<numba.core.ir.Assign object at 0x7fa2ce7723c8>],
             '$0.79': [<numba.core.ir.Assign object at 0x7fa2ce772438>],
             '$0.80': [<numba.core.ir.Assign object at 0x7fa2ce788fd0>],
             '$0.81': [<numba.core.ir.Assign object at 0x7fa2ce78b0f0>],
             '$0.84': [<numba.core.ir.Assign object at 0x7fa2ce7724a8>],
             '$0.87': [<numba.core.ir.Assign object at 0x7fa2ce772518>],
             '$0.88': [<numba.core.ir.Assign object at 0x7fa2ce78b6a0>],
             '$0.89': [<numba.core.ir.Assign object at 0x7fa2ce78b780>],
             '$0.92': [<numba.core.ir.Assign object at 0x7fa2ce772588>],
             '$0.95': [<numba.core.ir.Assign object at 0x7fa2ce7725f8>],
             '$0.96': [<numba.core.ir.Assign object at 0x7fa2ce78bd30>],
             '$0.97': [<numba.core.ir.Assign object at 0x7fa2ce78be10>],
             '$const0.101': [<numba.core.ir.Assign object at 0x7fa2ce78f1d0>],
             '$const0.104': [<numba.core.ir.Assign object at 0x7fa2ce78f438>],
             '$const0.108': [<numba.core.ir.Assign object at 0x7fa2ce78f780>],
             '$const0.111': [<numba.core.ir.Assign object at 0x7fa2ce78f9e8>],
             '$const0.116': [<numba.core.ir.Assign object at 0x7fa2ce78fe10>],
             '$const0.119': [<numba.core.ir.Assign object at 0x7fa2ce7930b8>],
             '$const0.12': [<numba.core.ir.Assign object at 0x7fa2ce76e6a0>],
             '$const0.124': [<numba.core.ir.Assign object at 0x7fa2ce7934e0>],
             '$const0.127': [<numba.core.ir.Assign object at 0x7fa2ce793748>],
             '$const0.132': [<numba.core.ir.Assign object at 0x7fa2ce793b70>],
             '$const0.133': [<numba.core.ir.Assign object at 0x7fa2ce793cc0>],
             '$const0.17': [<numba.core.ir.Assign object at 0x7fa2ce76eac8>],
             '$const0.2': [<numba.core.ir.Assign object at 0x7fa2ce775e48>],
             '$const0.20': [<numba.core.ir.Assign object at 0x7fa2ce76ed30>],
             '$const0.25': [<numba.core.ir.Assign object at 0x7fa2ce77e198>],
             '$const0.28': [<numba.core.ir.Assign object at 0x7fa2ce77e400>],
             '$const0.33': [<numba.core.ir.Assign object at 0x7fa2ce77e828>],
             '$const0.35': [<numba.core.ir.Assign object at 0x7fa2ce77ea20>],
             '$const0.38': [<numba.core.ir.Assign object at 0x7fa2ce77ec88>],
             '$const0.42': [<numba.core.ir.Assign object at 0x7fa2ce77efd0>],
             '$const0.45': [<numba.core.ir.Assign object at 0x7fa2ce783278>],
             '$const0.5': [<numba.core.ir.Assign object at 0x7fa2ce76e0f0>],
             '$const0.50': [<numba.core.ir.Assign object at 0x7fa2ce7836a0>],
             '$const0.53': [<numba.core.ir.Assign object at 0x7fa2ce783908>],
             '$const0.58': [<numba.core.ir.Assign object at 0x7fa2ce783d30>],
             '$const0.61': [<numba.core.ir.Assign object at 0x7fa2ce783f98>],
             '$const0.66': [<numba.core.ir.Assign object at 0x7fa2ce788400>],
             '$const0.68': [<numba.core.ir.Assign object at 0x7fa2ce7885f8>],
             '$const0.71': [<numba.core.ir.Assign object at 0x7fa2ce788860>],
             '$const0.75': [<numba.core.ir.Assign object at 0x7fa2ce788ba8>],
             '$const0.78': [<numba.core.ir.Assign object at 0x7fa2ce788e10>],
             '$const0.83': [<numba.core.ir.Assign object at 0x7fa2ce78b278>],
             '$const0.86': [<numba.core.ir.Assign object at 0x7fa2ce78b4e0>],
             '$const0.9': [<numba.core.ir.Assign object at 0x7fa2ce76e438>],
             '$const0.91': [<numba.core.ir.Assign object at 0x7fa2ce78b908>],
             '$const0.94': [<numba.core.ir.Assign object at 0x7fa2ce78bb70>],
             '$const0.99': [<numba.core.ir.Assign object at 0x7fa2ce78bf98>],
             'q1': [<numba.core.ir.Assign object at 0x7fa2ce775ba8>],
             'q2': [<numba.core.ir.Assign object at 0x7fa2ce775c50>],
             'qout': [<numba.core.ir.Assign object at 0x7fa2ce764828>]})
2022-08-04 11:53:02,986 DEBUG SSA violators set()
2022-08-04 11:53:03,386 DEBUG label 0:
    q1 = arg(0, name=q1)                     ['q1']
    q2 = arg(1, name=q2)                     ['q2']
    qout = arg(2, name=qout)                 ['qout']
    $const0.2 = const(int, 0)                ['$const0.2']
    $0.3 = getitem(value=q2, index=$const0.2, fn=<built-in function getitem>) ['$0.3', '$const0.2', 'q2']
    $const0.4 = const(int, 2)                ['$const0.4']
    $0.5 = $0.3 ** $const0.4                 ['$0.3', '$0.5', '$const0.4']
    $const0.7 = const(int, 1)                ['$const0.7']
    $0.8 = getitem(value=q2, index=$const0.7, fn=<built-in function getitem>) ['$0.8', '$const0.7', 'q2']
    $const0.9 = const(int, 2)                ['$const0.9']
    $0.10 = $0.8 ** $const0.9                ['$0.10', '$0.8', '$const0.9']
    $0.11 = $0.5 + $0.10                     ['$0.10', '$0.11', '$0.5']
    $const0.13 = const(int, 2)               ['$const0.13']
    $0.14 = getitem(value=q2, index=$const0.13, fn=<built-in function getitem>) ['$0.14', '$const0.13', 'q2']
    $const0.15 = const(int, 2)               ['$const0.15']
    $0.16 = $0.14 ** $const0.15              ['$0.14', '$0.16', '$const0.15']
    $0.17 = $0.11 + $0.16                    ['$0.11', '$0.16', '$0.17']
    $const0.19 = const(int, 3)               ['$const0.19']
    $0.20 = getitem(value=q2, index=$const0.19, fn=<built-in function getitem>) ['$0.20', '$const0.19', 'q2']
    $const0.21 = const(int, 2)               ['$const0.21']
    $0.22 = $0.20 ** $const0.21              ['$0.20', '$0.22', '$const0.21']
    q2norm = $0.17 + $0.22                   ['$0.17', '$0.22', 'q2norm']
    $const0.25 = const(int, 0)               ['$const0.25']
    $0.26 = getitem(value=q1, index=$const0.25, fn=<built-in function getitem>) ['$0.26', '$const0.25', 'q1']
    $0.27 = unary(fn=<built-in function pos>, value=$0.26) ['$0.26', '$0.27']
    $const0.29 = const(int, 0)               ['$const0.29']
    $0.30 = getitem(value=q2, index=$const0.29, fn=<built-in function getitem>) ['$0.30', '$const0.29', 'q2']
    $0.31 = $0.27 * $0.30                    ['$0.27', '$0.30', '$0.31']
    $const0.33 = const(int, 1)               ['$const0.33']
    $0.34 = getitem(value=q1, index=$const0.33, fn=<built-in function getitem>) ['$0.34', '$const0.33', 'q1']
    $const0.36 = const(int, 1)               ['$const0.36']
    $0.37 = getitem(value=q2, index=$const0.36, fn=<built-in function getitem>) ['$0.37', '$const0.36', 'q2']
    $0.38 = $0.34 * $0.37                    ['$0.34', '$0.37', '$0.38']
    $0.39 = $0.31 + $0.38                    ['$0.31', '$0.38', '$0.39']
    $const0.41 = const(int, 2)               ['$const0.41']
    $0.42 = getitem(value=q1, index=$const0.41, fn=<built-in function getitem>) ['$0.42', '$const0.41', 'q1']
    $const0.44 = const(int, 2)               ['$const0.44']
    $0.45 = getitem(value=q2, index=$const0.44, fn=<built-in function getitem>) ['$0.45', '$const0.44', 'q2']
    $0.46 = $0.42 * $0.45                    ['$0.42', '$0.45', '$0.46']
    $0.47 = $0.39 + $0.46                    ['$0.39', '$0.46', '$0.47']
    $const0.49 = const(int, 3)               ['$const0.49']
    $0.50 = getitem(value=q1, index=$const0.49, fn=<built-in function getitem>) ['$0.50', '$const0.49', 'q1']
    $const0.52 = const(int, 3)               ['$const0.52']
    $0.53 = getitem(value=q2, index=$const0.52, fn=<built-in function getitem>) ['$0.53', '$const0.52', 'q2']
    $0.54 = $0.50 * $0.53                    ['$0.50', '$0.53', '$0.54']
    $0.55 = $0.47 + $0.54                    ['$0.47', '$0.54', '$0.55']
    $0.57 = $0.55 / q2norm                   ['$0.55', '$0.57', 'q2norm']
    $const0.59 = const(int, 0)               ['$const0.59']
    qout[$const0.59] = $0.57                 ['$0.57', '$const0.59', 'qout']
    $const0.61 = const(int, 0)               ['$const0.61']
    $0.62 = getitem(value=q1, index=$const0.61, fn=<built-in function getitem>) ['$0.62', '$const0.61', 'q1']
    $0.63 = unary(fn=<built-in function neg>, value=$0.62) ['$0.62', '$0.63']
    $const0.65 = const(int, 1)               ['$const0.65']
    $0.66 = getitem(value=q2, index=$const0.65, fn=<built-in function getitem>) ['$0.66', '$const0.65', 'q2']
    $0.67 = $0.63 * $0.66                    ['$0.63', '$0.66', '$0.67']
    $const0.69 = const(int, 1)               ['$const0.69']
    $0.70 = getitem(value=q1, index=$const0.69, fn=<built-in function getitem>) ['$0.70', '$const0.69', 'q1']
    $const0.72 = const(int, 0)               ['$const0.72']
    $0.73 = getitem(value=q2, index=$const0.72, fn=<built-in function getitem>) ['$0.73', '$const0.72', 'q2']
    $0.74 = $0.70 * $0.73                    ['$0.70', '$0.73', '$0.74']
    $0.75 = $0.67 + $0.74                    ['$0.67', '$0.74', '$0.75']
    $const0.77 = const(int, 2)               ['$const0.77']
    $0.78 = getitem(value=q1, index=$const0.77, fn=<built-in function getitem>) ['$0.78', '$const0.77', 'q1']
    $const0.80 = const(int, 3)               ['$const0.80']
    $0.81 = getitem(value=q2, index=$const0.80, fn=<built-in function getitem>) ['$0.81', '$const0.80', 'q2']
    $0.82 = $0.78 * $0.81                    ['$0.78', '$0.81', '$0.82']
    $0.83 = $0.75 - $0.82                    ['$0.75', '$0.82', '$0.83']
    $const0.85 = const(int, 3)               ['$const0.85']
    $0.86 = getitem(value=q1, index=$const0.85, fn=<built-in function getitem>) ['$0.86', '$const0.85', 'q1']
    $const0.88 = const(int, 2)               ['$const0.88']
    $0.89 = getitem(value=q2, index=$const0.88, fn=<built-in function getitem>) ['$0.89', '$const0.88', 'q2']
    $0.90 = $0.86 * $0.89                    ['$0.86', '$0.89', '$0.90']
    $0.91 = $0.83 + $0.90                    ['$0.83', '$0.90', '$0.91']
    $0.93 = $0.91 / q2norm                   ['$0.91', '$0.93', 'q2norm']
    $const0.95 = const(int, 1)               ['$const0.95']
    qout[$const0.95] = $0.93                 ['$0.93', '$const0.95', 'qout']
    $const0.97 = const(int, 0)               ['$const0.97']
    $0.98 = getitem(value=q1, index=$const0.97, fn=<built-in function getitem>) ['$0.98', '$const0.97', 'q1']
    $0.99 = unary(fn=<built-in function neg>, value=$0.98) ['$0.98', '$0.99']
    $const0.101 = const(int, 2)              ['$const0.101']
    $0.102 = getitem(value=q2, index=$const0.101, fn=<built-in function getitem>) ['$0.102', '$const0.101', 'q2']
    $0.103 = $0.99 * $0.102                  ['$0.102', '$0.103', '$0.99']
    $const0.105 = const(int, 1)              ['$const0.105']
    $0.106 = getitem(value=q1, index=$const0.105, fn=<built-in function getitem>) ['$0.106', '$const0.105', 'q1']
    $const0.108 = const(int, 3)              ['$const0.108']
    $0.109 = getitem(value=q2, index=$const0.108, fn=<built-in function getitem>) ['$0.109', '$const0.108', 'q2']
    $0.110 = $0.106 * $0.109                 ['$0.106', '$0.109', '$0.110']
    $0.111 = $0.103 + $0.110                 ['$0.103', '$0.110', '$0.111']
    $const0.113 = const(int, 2)              ['$const0.113']
    $0.114 = getitem(value=q1, index=$const0.113, fn=<built-in function getitem>) ['$0.114', '$const0.113', 'q1']
    $const0.116 = const(int, 0)              ['$const0.116']
    $0.117 = getitem(value=q2, index=$const0.116, fn=<built-in function getitem>) ['$0.117', '$const0.116', 'q2']
    $0.118 = $0.114 * $0.117                 ['$0.114', '$0.117', '$0.118']
    $0.119 = $0.111 + $0.118                 ['$0.111', '$0.118', '$0.119']
    $const0.121 = const(int, 3)              ['$const0.121']
    $0.122 = getitem(value=q1, index=$const0.121, fn=<built-in function getitem>) ['$0.122', '$const0.121', 'q1']
    $const0.124 = const(int, 1)              ['$const0.124']
    $0.125 = getitem(value=q2, index=$const0.124, fn=<built-in function getitem>) ['$0.125', '$const0.124', 'q2']
    $0.126 = $0.122 * $0.125                 ['$0.122', '$0.125', '$0.126']
    $0.127 = $0.119 - $0.126                 ['$0.119', '$0.126', '$0.127']
    $0.129 = $0.127 / q2norm                 ['$0.127', '$0.129', 'q2norm']
    $const0.131 = const(int, 2)              ['$const0.131']
    qout[$const0.131] = $0.129               ['$0.129', '$const0.131', 'qout']
    $const0.133 = const(int, 0)              ['$const0.133']
    $0.134 = getitem(value=q1, index=$const0.133, fn=<built-in function getitem>) ['$0.134', '$const0.133', 'q1']
    $0.135 = unary(fn=<built-in function neg>, value=$0.134) ['$0.134', '$0.135']
    $const0.137 = const(int, 3)              ['$const0.137']
    $0.138 = getitem(value=q2, index=$const0.137, fn=<built-in function getitem>) ['$0.138', '$const0.137', 'q2']
    $0.139 = $0.135 * $0.138                 ['$0.135', '$0.138', '$0.139']
    $const0.141 = const(int, 1)              ['$const0.141']
    $0.142 = getitem(value=q1, index=$const0.141, fn=<built-in function getitem>) ['$0.142', '$const0.141', 'q1']
    $const0.144 = const(int, 2)              ['$const0.144']
    $0.145 = getitem(value=q2, index=$const0.144, fn=<built-in function getitem>) ['$0.145', '$const0.144', 'q2']
    $0.146 = $0.142 * $0.145                 ['$0.142', '$0.145', '$0.146']
    $0.147 = $0.139 - $0.146                 ['$0.139', '$0.146', '$0.147']
    $const0.149 = const(int, 2)              ['$const0.149']
    $0.150 = getitem(value=q1, index=$const0.149, fn=<built-in function getitem>) ['$0.150', '$const0.149', 'q1']
    $const0.152 = const(int, 1)              ['$const0.152']
    $0.153 = getitem(value=q2, index=$const0.152, fn=<built-in function getitem>) ['$0.153', '$const0.152', 'q2']
    $0.154 = $0.150 * $0.153                 ['$0.150', '$0.153', '$0.154']
    $0.155 = $0.147 + $0.154                 ['$0.147', '$0.154', '$0.155']
    $const0.157 = const(int, 3)              ['$const0.157']
    $0.158 = getitem(value=q1, index=$const0.157, fn=<built-in function getitem>) ['$0.158', '$const0.157', 'q1']
    $const0.160 = const(int, 0)              ['$const0.160']
    $0.161 = getitem(value=q2, index=$const0.160, fn=<built-in function getitem>) ['$0.161', '$const0.160', 'q2']
    $0.162 = $0.158 * $0.161                 ['$0.158', '$0.161', '$0.162']
    $0.163 = $0.155 + $0.162                 ['$0.155', '$0.162', '$0.163']
    $0.165 = $0.163 / q2norm                 ['$0.163', '$0.165', 'q2norm']
    $const0.167 = const(int, 3)              ['$const0.167']
    qout[$const0.167] = $0.165               ['$0.165', '$const0.167', 'qout']
    $const0.168 = const(NoneType, None)      ['$const0.168']
    $0.169 = cast(value=$const0.168)         ['$0.169', '$const0.168']
    return $0.169                            ['$0.169']

2022-08-04 11:53:03,402 DEBUG ==== SSA block analysis pass on 0
2022-08-04 11:53:03,402 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce35ba90>
2022-08-04 11:53:03,402 DEBUG on stmt: q1 = arg(0, name=q1)
2022-08-04 11:53:03,402 DEBUG on stmt: q2 = arg(1, name=q2)
2022-08-04 11:53:03,402 DEBUG on stmt: qout = arg(2, name=qout)
2022-08-04 11:53:03,402 DEBUG on stmt: $const0.2 = const(int, 0)
2022-08-04 11:53:03,402 DEBUG on stmt: $0.3 = static_getitem(value=q2, index=0, index_var=$const0.2, fn=<built-in function getitem>)
2022-08-04 11:53:03,402 DEBUG on stmt: $const0.4 = const(int, 2)
2022-08-04 11:53:03,402 DEBUG on stmt: $0.5 = $0.3 ** $const0.4
2022-08-04 11:53:03,402 DEBUG on stmt: $const0.7 = const(int, 1)
2022-08-04 11:53:03,402 DEBUG on stmt: $0.8 = static_getitem(value=q2, index=1, index_var=$const0.7, fn=<built-in function getitem>)
2022-08-04 11:53:03,402 DEBUG on stmt: $const0.9 = const(int, 2)
2022-08-04 11:53:03,403 DEBUG on stmt: $0.10 = $0.8 ** $const0.9
2022-08-04 11:53:03,403 DEBUG on stmt: $0.11 = $0.5 + $0.10
2022-08-04 11:53:03,403 DEBUG on stmt: $const0.13 = const(int, 2)
2022-08-04 11:53:03,403 DEBUG on stmt: $0.14 = static_getitem(value=q2, index=2, index_var=$const0.13, fn=<built-in function getitem>)
2022-08-04 11:53:03,403 DEBUG on stmt: $const0.15 = const(int, 2)
2022-08-04 11:53:03,403 DEBUG on stmt: $0.16 = $0.14 ** $const0.15
2022-08-04 11:53:03,403 DEBUG on stmt: $0.17 = $0.11 + $0.16
2022-08-04 11:53:03,403 DEBUG on stmt: $const0.19 = const(int, 3)
2022-08-04 11:53:03,403 DEBUG on stmt: $0.20 = static_getitem(value=q2, index=3, index_var=$const0.19, fn=<built-in function getitem>)
2022-08-04 11:53:03,403 DEBUG on stmt: $const0.21 = const(int, 2)
2022-08-04 11:53:03,403 DEBUG on stmt: $0.22 = $0.20 ** $const0.21
2022-08-04 11:53:03,403 DEBUG on stmt: q2norm = $0.17 + $0.22
2022-08-04 11:53:03,403 DEBUG on stmt: $const0.25 = const(int, 0)
2022-08-04 11:53:03,403 DEBUG on stmt: $0.26 = static_getitem(value=q1, index=0, index_var=$const0.25, fn=<built-in function getitem>)
2022-08-04 11:53:03,403 DEBUG on stmt: $0.27 = unary(fn=<built-in function pos>, value=$0.26)
2022-08-04 11:53:03,403 DEBUG on stmt: $const0.29 = const(int, 0)
2022-08-04 11:53:03,403 DEBUG on stmt: $0.30 = static_getitem(value=q2, index=0, index_var=$const0.29, fn=<built-in function getitem>)
2022-08-04 11:53:03,403 DEBUG on stmt: $0.31 = $0.27 * $0.30
2022-08-04 11:53:03,403 DEBUG on stmt: $const0.33 = const(int, 1)
2022-08-04 11:53:03,403 DEBUG on stmt: $0.34 = static_getitem(value=q1, index=1, index_var=$const0.33, fn=<built-in function getitem>)
2022-08-04 11:53:03,403 DEBUG on stmt: $const0.36 = const(int, 1)
2022-08-04 11:53:03,403 DEBUG on stmt: $0.37 = static_getitem(value=q2, index=1, index_var=$const0.36, fn=<built-in function getitem>)
2022-08-04 11:53:03,404 DEBUG on stmt: $0.38 = $0.34 * $0.37
2022-08-04 11:53:03,404 DEBUG on stmt: $0.39 = $0.31 + $0.38
2022-08-04 11:53:03,404 DEBUG on stmt: $const0.41 = const(int, 2)
2022-08-04 11:53:03,404 DEBUG on stmt: $0.42 = static_getitem(value=q1, index=2, index_var=$const0.41, fn=<built-in function getitem>)
2022-08-04 11:53:03,404 DEBUG on stmt: $const0.44 = const(int, 2)
2022-08-04 11:53:03,404 DEBUG on stmt: $0.45 = static_getitem(value=q2, index=2, index_var=$const0.44, fn=<built-in function getitem>)
2022-08-04 11:53:03,404 DEBUG on stmt: $0.46 = $0.42 * $0.45
2022-08-04 11:53:03,404 DEBUG on stmt: $0.47 = $0.39 + $0.46
2022-08-04 11:53:03,404 DEBUG on stmt: $const0.49 = const(int, 3)
2022-08-04 11:53:03,404 DEBUG on stmt: $0.50 = static_getitem(value=q1, index=3, index_var=$const0.49, fn=<built-in function getitem>)
2022-08-04 11:53:03,404 DEBUG on stmt: $const0.52 = const(int, 3)
2022-08-04 11:53:03,404 DEBUG on stmt: $0.53 = static_getitem(value=q2, index=3, index_var=$const0.52, fn=<built-in function getitem>)
2022-08-04 11:53:03,404 DEBUG on stmt: $0.54 = $0.50 * $0.53
2022-08-04 11:53:03,404 DEBUG on stmt: $0.55 = $0.47 + $0.54
2022-08-04 11:53:03,404 DEBUG on stmt: $0.57 = $0.55 / q2norm
2022-08-04 11:53:03,404 DEBUG on stmt: $const0.59 = const(int, 0)
2022-08-04 11:53:03,404 DEBUG on stmt: qout[0] = $0.57
2022-08-04 11:53:03,404 DEBUG on stmt: $const0.61 = const(int, 0)
2022-08-04 11:53:03,404 DEBUG on stmt: $0.62 = static_getitem(value=q1, index=0, index_var=$const0.61, fn=<built-in function getitem>)
2022-08-04 11:53:03,404 DEBUG on stmt: $0.63 = unary(fn=<built-in function neg>, value=$0.62)
2022-08-04 11:53:03,404 DEBUG on stmt: $const0.65 = const(int, 1)
2022-08-04 11:53:03,405 DEBUG on stmt: $0.66 = static_getitem(value=q2, index=1, index_var=$const0.65, fn=<built-in function getitem>)
2022-08-04 11:53:03,405 DEBUG on stmt: $0.67 = $0.63 * $0.66
2022-08-04 11:53:03,405 DEBUG on stmt: $const0.69 = const(int, 1)
2022-08-04 11:53:03,405 DEBUG on stmt: $0.70 = static_getitem(value=q1, index=1, index_var=$const0.69, fn=<built-in function getitem>)
2022-08-04 11:53:03,405 DEBUG on stmt: $const0.72 = const(int, 0)
2022-08-04 11:53:03,405 DEBUG on stmt: $0.73 = static_getitem(value=q2, index=0, index_var=$const0.72, fn=<built-in function getitem>)
2022-08-04 11:53:03,405 DEBUG on stmt: $0.74 = $0.70 * $0.73
2022-08-04 11:53:03,405 DEBUG on stmt: $0.75 = $0.67 + $0.74
2022-08-04 11:53:03,405 DEBUG on stmt: $const0.77 = const(int, 2)
2022-08-04 11:53:03,405 DEBUG on stmt: $0.78 = static_getitem(value=q1, index=2, index_var=$const0.77, fn=<built-in function getitem>)
2022-08-04 11:53:03,405 DEBUG on stmt: $const0.80 = const(int, 3)
2022-08-04 11:53:03,405 DEBUG on stmt: $0.81 = static_getitem(value=q2, index=3, index_var=$const0.80, fn=<built-in function getitem>)
2022-08-04 11:53:03,405 DEBUG on stmt: $0.82 = $0.78 * $0.81
2022-08-04 11:53:03,405 DEBUG on stmt: $0.83 = $0.75 - $0.82
2022-08-04 11:53:03,405 DEBUG on stmt: $const0.85 = const(int, 3)
2022-08-04 11:53:03,406 DEBUG on stmt: $0.86 = static_getitem(value=q1, index=3, index_var=$const0.85, fn=<built-in function getitem>)
2022-08-04 11:53:03,406 DEBUG on stmt: $const0.88 = const(int, 2)
2022-08-04 11:53:03,406 DEBUG on stmt: $0.89 = static_getitem(value=q2, index=2, index_var=$const0.88, fn=<built-in function getitem>)
2022-08-04 11:53:03,406 DEBUG on stmt: $0.90 = $0.86 * $0.89
2022-08-04 11:53:03,406 DEBUG on stmt: $0.91 = $0.83 + $0.90
2022-08-04 11:53:03,406 DEBUG on stmt: $0.93 = $0.91 / q2norm
2022-08-04 11:53:03,406 DEBUG on stmt: $const0.95 = const(int, 1)
2022-08-04 11:53:03,406 DEBUG on stmt: qout[1] = $0.93
2022-08-04 11:53:03,406 DEBUG on stmt: $const0.97 = const(int, 0)
2022-08-04 11:53:03,406 DEBUG on stmt: $0.98 = static_getitem(value=q1, index=0, index_var=$const0.97, fn=<built-in function getitem>)
2022-08-04 11:53:03,406 DEBUG on stmt: $0.99 = unary(fn=<built-in function neg>, value=$0.98)
2022-08-04 11:53:03,406 DEBUG on stmt: $const0.101 = const(int, 2)
2022-08-04 11:53:03,406 DEBUG on stmt: $0.102 = static_getitem(value=q2, index=2, index_var=$const0.101, fn=<built-in function getitem>)
2022-08-04 11:53:03,406 DEBUG on stmt: $0.103 = $0.99 * $0.102
2022-08-04 11:53:03,406 DEBUG on stmt: $const0.105 = const(int, 1)
2022-08-04 11:53:03,406 DEBUG on stmt: $0.106 = static_getitem(value=q1, index=1, index_var=$const0.105, fn=<built-in function getitem>)
2022-08-04 11:53:03,406 DEBUG on stmt: $const0.108 = const(int, 3)
2022-08-04 11:53:03,406 DEBUG on stmt: $0.109 = static_getitem(value=q2, index=3, index_var=$const0.108, fn=<built-in function getitem>)
2022-08-04 11:53:03,406 DEBUG on stmt: $0.110 = $0.106 * $0.109
2022-08-04 11:53:03,406 DEBUG on stmt: $0.111 = $0.103 + $0.110
2022-08-04 11:53:03,406 DEBUG on stmt: $const0.113 = const(int, 2)
2022-08-04 11:53:03,407 DEBUG on stmt: $0.114 = static_getitem(value=q1, index=2, index_var=$const0.113, fn=<built-in function getitem>)
2022-08-04 11:53:03,407 DEBUG on stmt: $const0.116 = const(int, 0)
2022-08-04 11:53:03,407 DEBUG on stmt: $0.117 = static_getitem(value=q2, index=0, index_var=$const0.116, fn=<built-in function getitem>)
2022-08-04 11:53:03,407 DEBUG on stmt: $0.118 = $0.114 * $0.117
2022-08-04 11:53:03,407 DEBUG on stmt: $0.119 = $0.111 + $0.118
2022-08-04 11:53:03,407 DEBUG on stmt: $const0.121 = const(int, 3)
2022-08-04 11:53:03,407 DEBUG on stmt: $0.122 = static_getitem(value=q1, index=3, index_var=$const0.121, fn=<built-in function getitem>)
2022-08-04 11:53:03,407 DEBUG on stmt: $const0.124 = const(int, 1)
2022-08-04 11:53:03,407 DEBUG on stmt: $0.125 = static_getitem(value=q2, index=1, index_var=$const0.124, fn=<built-in function getitem>)
2022-08-04 11:53:03,407 DEBUG on stmt: $0.126 = $0.122 * $0.125
2022-08-04 11:53:03,407 DEBUG on stmt: $0.127 = $0.119 - $0.126
2022-08-04 11:53:03,407 DEBUG on stmt: $0.129 = $0.127 / q2norm
2022-08-04 11:53:03,407 DEBUG on stmt: $const0.131 = const(int, 2)
2022-08-04 11:53:03,407 DEBUG on stmt: qout[2] = $0.129
2022-08-04 11:53:03,407 DEBUG on stmt: $const0.133 = const(int, 0)
2022-08-04 11:53:03,407 DEBUG on stmt: $0.134 = static_getitem(value=q1, index=0, index_var=$const0.133, fn=<built-in function getitem>)
2022-08-04 11:53:03,407 DEBUG on stmt: $0.135 = unary(fn=<built-in function neg>, value=$0.134)
2022-08-04 11:53:03,408 DEBUG on stmt: $const0.137 = const(int, 3)
2022-08-04 11:53:03,408 DEBUG on stmt: $0.138 = static_getitem(value=q2, index=3, index_var=$const0.137, fn=<built-in function getitem>)
2022-08-04 11:53:03,408 DEBUG on stmt: $0.139 = $0.135 * $0.138
2022-08-04 11:53:03,408 DEBUG on stmt: $const0.141 = const(int, 1)
2022-08-04 11:53:03,408 DEBUG on stmt: $0.142 = static_getitem(value=q1, index=1, index_var=$const0.141, fn=<built-in function getitem>)
2022-08-04 11:53:03,408 DEBUG on stmt: $const0.144 = const(int, 2)
2022-08-04 11:53:03,408 DEBUG on stmt: $0.145 = static_getitem(value=q2, index=2, index_var=$const0.144, fn=<built-in function getitem>)
2022-08-04 11:53:03,408 DEBUG on stmt: $0.146 = $0.142 * $0.145
2022-08-04 11:53:03,408 DEBUG on stmt: $0.147 = $0.139 - $0.146
2022-08-04 11:53:03,408 DEBUG on stmt: $const0.149 = const(int, 2)
2022-08-04 11:53:03,408 DEBUG on stmt: $0.150 = static_getitem(value=q1, index=2, index_var=$const0.149, fn=<built-in function getitem>)
2022-08-04 11:53:03,408 DEBUG on stmt: $const0.152 = const(int, 1)
2022-08-04 11:53:03,408 DEBUG on stmt: $0.153 = static_getitem(value=q2, index=1, index_var=$const0.152, fn=<built-in function getitem>)
2022-08-04 11:53:03,408 DEBUG on stmt: $0.154 = $0.150 * $0.153
2022-08-04 11:53:03,408 DEBUG on stmt: $0.155 = $0.147 + $0.154
2022-08-04 11:53:03,408 DEBUG on stmt: $const0.157 = const(int, 3)
2022-08-04 11:53:03,408 DEBUG on stmt: $0.158 = static_getitem(value=q1, index=3, index_var=$const0.157, fn=<built-in function getitem>)
2022-08-04 11:53:03,408 DEBUG on stmt: $const0.160 = const(int, 0)
2022-08-04 11:53:03,408 DEBUG on stmt: $0.161 = static_getitem(value=q2, index=0, index_var=$const0.160, fn=<built-in function getitem>)
2022-08-04 11:53:03,408 DEBUG on stmt: $0.162 = $0.158 * $0.161
2022-08-04 11:53:03,408 DEBUG on stmt: $0.163 = $0.155 + $0.162
2022-08-04 11:53:03,408 DEBUG on stmt: $0.165 = $0.163 / q2norm
2022-08-04 11:53:03,408 DEBUG on stmt: $const0.167 = const(int, 3)
2022-08-04 11:53:03,409 DEBUG on stmt: qout[3] = $0.165
2022-08-04 11:53:03,409 DEBUG on stmt: $const0.168 = const(NoneType, None)
2022-08-04 11:53:03,409 DEBUG on stmt: $0.169 = cast(value=$const0.168)
2022-08-04 11:53:03,409 DEBUG on stmt: return $0.169
2022-08-04 11:53:03,410 DEBUG defs defaultdict(<class 'list'>,
            {'$0.10': [<numba.core.ir.Assign object at 0x7fa2ce3680f0>],
             '$0.102': [<numba.core.ir.Assign object at 0x7fa2ce6b2cf8>],
             '$0.103': [<numba.core.ir.Assign object at 0x7fa2ce68df98>],
             '$0.106': [<numba.core.ir.Assign object at 0x7fa2ce6b2d68>],
             '$0.109': [<numba.core.ir.Assign object at 0x7fa2ce6b2dd8>],
             '$0.11': [<numba.core.ir.Assign object at 0x7fa2ce3681d0>],
             '$0.110': [<numba.core.ir.Assign object at 0x7fa2ce676fd0>],
             '$0.111': [<numba.core.ir.Assign object at 0x7fa2ce676080>],
             '$0.114': [<numba.core.ir.Assign object at 0x7fa2ce6b2e48>],
             '$0.117': [<numba.core.ir.Assign object at 0x7fa2ce6b2eb8>],
             '$0.118': [<numba.core.ir.Assign object at 0x7fa2ce676630>],
             '$0.119': [<numba.core.ir.Assign object at 0x7fa2ce676470>],
             '$0.122': [<numba.core.ir.Assign object at 0x7fa2ce6b2f28>],
             '$0.125': [<numba.core.ir.Assign object at 0x7fa2ce6b2f98>],
             '$0.126': [<numba.core.ir.Assign object at 0x7fa2ce6b32e8>],
             '$0.127': [<numba.core.ir.Assign object at 0x7fa2ce6b33c8>],
             '$0.129': [<numba.core.ir.Assign object at 0x7fa2ce6b3550>],
             '$0.134': [<numba.core.ir.Assign object at 0x7fa2ce6844a8>],
             '$0.135': [<numba.core.ir.Assign object at 0x7fa2ce6b3a90>],
             '$0.138': [<numba.core.ir.Assign object at 0x7fa2ce6ac048>],
             '$0.139': [<numba.core.ir.Assign object at 0x7fa2ce6b3dd8>],
             '$0.14': [<numba.core.ir.Assign object at 0x7fa2ce6b3b38>],
             '$0.142': [<numba.core.ir.Assign object at 0x7fa2ce6ac0b8>],
             '$0.145': [<numba.core.ir.Assign object at 0x7fa2ce6ac128>],
             '$0.146': [<numba.core.ir.Assign object at 0x7fa2ce6ae3c8>],
             '$0.147': [<numba.core.ir.Assign object at 0x7fa2ce6ae4a8>],
             '$0.150': [<numba.core.ir.Assign object at 0x7fa2ce6ac198>],
             '$0.153': [<numba.core.ir.Assign object at 0x7fa2ce6ac208>],
             '$0.154': [<numba.core.ir.Assign object at 0x7fa2ce6aea58>],
             '$0.155': [<numba.core.ir.Assign object at 0x7fa2ce6aeb38>],
             '$0.158': [<numba.core.ir.Assign object at 0x7fa2ce6ac278>],
             '$0.16': [<numba.core.ir.Assign object at 0x7fa2ce3685f8>],
             '$0.161': [<numba.core.ir.Assign object at 0x7fa2ce6ac2e8>],
             '$0.162': [<numba.core.ir.Assign object at 0x7fa2ce6b2128>],
             '$0.163': [<numba.core.ir.Assign object at 0x7fa2ce6b2208>],
             '$0.165': [<numba.core.ir.Assign object at 0x7fa2ce6b2390>],
             '$0.169': [<numba.core.ir.Assign object at 0x7fa2ce6b2748>],
             '$0.17': [<numba.core.ir.Assign object at 0x7fa2ce3686d8>],
             '$0.20': [<numba.core.ir.Assign object at 0x7fa2ce6ae128>],
             '$0.22': [<numba.core.ir.Assign object at 0x7fa2ce368b00>],
             '$0.26': [<numba.core.ir.Assign object at 0x7fa2ce6ae7b8>],
             '$0.27': [<numba.core.ir.Assign object at 0x7fa2ce368fd0>],
             '$0.3': [<numba.core.ir.Assign object at 0x7fa2ce6b3048>],
             '$0.30': [<numba.core.ir.Assign object at 0x7fa2ce6aee48>],
             '$0.31': [<numba.core.ir.Assign object at 0x7fa2ce367358>],
             '$0.34': [<numba.core.ir.Assign object at 0x7fa2ce361588>],
             '$0.37': [<numba.core.ir.Assign object at 0x7fa2ce361d30>],
             '$0.38': [<numba.core.ir.Assign object at 0x7fa2ce367908>],
             '$0.39': [<numba.core.ir.Assign object at 0x7fa2ce3679e8>],
             '$0.42': [<numba.core.ir.Assign object at 0x7fa2ce6b22b0>],
             '$0.45': [<numba.core.ir.Assign object at 0x7fa2ce6b27b8>],
             '$0.46': [<numba.core.ir.Assign object at 0x7fa2ce367f98>],
             '$0.47': [<numba.core.ir.Assign object at 0x7fa2ce6820b8>],
             '$0.5': [<numba.core.ir.Assign object at 0x7fa2ce361c88>],
             '$0.50': [<numba.core.ir.Assign object at 0x7fa2ce6b2828>],
             '$0.53': [<numba.core.ir.Assign object at 0x7fa2ce6b2898>],
             '$0.54': [<numba.core.ir.Assign object at 0x7fa2ce682668>],
             '$0.55': [<numba.core.ir.Assign object at 0x7fa2ce682748>],
             '$0.57': [<numba.core.ir.Assign object at 0x7fa2ce6828d0>],
             '$0.62': [<numba.core.ir.Assign object at 0x7fa2ce6b2908>],
             '$0.63': [<numba.core.ir.Assign object at 0x7fa2ce682e10>],
             '$0.66': [<numba.core.ir.Assign object at 0x7fa2ce6b2978>],
             '$0.67': [<numba.core.ir.Assign object at 0x7fa2ce684198>],
             '$0.70': [<numba.core.ir.Assign object at 0x7fa2ce6b29e8>],
             '$0.73': [<numba.core.ir.Assign object at 0x7fa2ce6b2a58>],
             '$0.74': [<numba.core.ir.Assign object at 0x7fa2ce684748>],
             '$0.75': [<numba.core.ir.Assign object at 0x7fa2ce684828>],
             '$0.78': [<numba.core.ir.Assign object at 0x7fa2ce6b2ac8>],
             '$0.8': [<numba.core.ir.Assign object at 0x7fa2ce6b35f8>],
             '$0.81': [<numba.core.ir.Assign object at 0x7fa2ce6b2b38>],
             '$0.82': [<numba.core.ir.Assign object at 0x7fa2ce684dd8>],
             '$0.83': [<numba.core.ir.Assign object at 0x7fa2ce684eb8>],
             '$0.86': [<numba.core.ir.Assign object at 0x7fa2ce6b2ba8>],
             '$0.89': [<numba.core.ir.Assign object at 0x7fa2ce6b2c18>],
             '$0.90': [<numba.core.ir.Assign object at 0x7fa2ce68d4a8>],
             '$0.91': [<numba.core.ir.Assign object at 0x7fa2ce68d588>],
             '$0.93': [<numba.core.ir.Assign object at 0x7fa2ce68d710>],
             '$0.98': [<numba.core.ir.Assign object at 0x7fa2ce6b2c88>],
             '$0.99': [<numba.core.ir.Assign object at 0x7fa2ce68dc50>],
             '$const0.101': [<numba.core.ir.Assign object at 0x7fa2ce68ddd8>],
             '$const0.105': [<numba.core.ir.Assign object at 0x7fa2ce676be0>],
             '$const0.108': [<numba.core.ir.Assign object at 0x7fa2ce676e10>],
             '$const0.113': [<numba.core.ir.Assign object at 0x7fa2ce6761d0>],
             '$const0.116': [<numba.core.ir.Assign object at 0x7fa2ce676390>],
             '$const0.121': [<numba.core.ir.Assign object at 0x7fa2ce676828>],
             '$const0.124': [<numba.core.ir.Assign object at 0x7fa2ce6b3128>],
             '$const0.13': [<numba.core.ir.Assign object at 0x7fa2ce368358>],
             '$const0.131': [<numba.core.ir.Assign object at 0x7fa2ce6b36d8>],
             '$const0.133': [<numba.core.ir.Assign object at 0x7fa2ce6b38d0>],
             '$const0.137': [<numba.core.ir.Assign object at 0x7fa2ce6b3c18>],
             '$const0.141': [<numba.core.ir.Assign object at 0x7fa2ce6b3f60>],
             '$const0.144': [<numba.core.ir.Assign object at 0x7fa2ce6ae208>],
             '$const0.149': [<numba.core.ir.Assign object at 0x7fa2ce6ae630>],
             '$const0.15': [<numba.core.ir.Assign object at 0x7fa2ce368518>],
             '$const0.152': [<numba.core.ir.Assign object at 0x7fa2ce6ae898>],
             '$const0.157': [<numba.core.ir.Assign object at 0x7fa2ce6aecc0>],
             '$const0.160': [<numba.core.ir.Assign object at 0x7fa2ce6aef28>],
             '$const0.167': [<numba.core.ir.Assign object at 0x7fa2ce6b2518>],
             '$const0.168': [<numba.core.ir.Assign object at 0x7fa2ce6b2668>],
             '$const0.19': [<numba.core.ir.Assign object at 0x7fa2ce368860>],
             '$const0.2': [<numba.core.ir.Assign object at 0x7fa2ce3619e8>],
             '$const0.21': [<numba.core.ir.Assign object at 0x7fa2ce368a20>],
             '$const0.25': [<numba.core.ir.Assign object at 0x7fa2ce368e10>],
             '$const0.29': [<numba.core.ir.Assign object at 0x7fa2ce367198>],
             '$const0.33': [<numba.core.ir.Assign object at 0x7fa2ce3674e0>],
             '$const0.36': [<numba.core.ir.Assign object at 0x7fa2ce367748>],
             '$const0.4': [<numba.core.ir.Assign object at 0x7fa2ce361ba8>],
             '$const0.41': [<numba.core.ir.Assign object at 0x7fa2ce367b70>],
             '$const0.44': [<numba.core.ir.Assign object at 0x7fa2ce367dd8>],
             '$const0.49': [<numba.core.ir.Assign object at 0x7fa2ce682240>],
             '$const0.52': [<numba.core.ir.Assign object at 0x7fa2ce6824a8>],
             '$const0.59': [<numba.core.ir.Assign object at 0x7fa2ce682a58>],
             '$const0.61': [<numba.core.ir.Assign object at 0x7fa2ce682c50>],
             '$const0.65': [<numba.core.ir.Assign object at 0x7fa2ce682f98>],
             '$const0.69': [<numba.core.ir.Assign object at 0x7fa2ce684320>],
             '$const0.7': [<numba.core.ir.Assign object at 0x7fa2ce361e10>],
             '$const0.72': [<numba.core.ir.Assign object at 0x7fa2ce684588>],
             '$const0.77': [<numba.core.ir.Assign object at 0x7fa2ce6849b0>],
             '$const0.80': [<numba.core.ir.Assign object at 0x7fa2ce684c18>],
             '$const0.85': [<numba.core.ir.Assign object at 0x7fa2ce68d080>],
             '$const0.88': [<numba.core.ir.Assign object at 0x7fa2ce68d2e8>],
             '$const0.9': [<numba.core.ir.Assign object at 0x7fa2ce361fd0>],
             '$const0.95': [<numba.core.ir.Assign object at 0x7fa2ce68d898>],
             '$const0.97': [<numba.core.ir.Assign object at 0x7fa2ce68da90>],
             'q1': [<numba.core.ir.Assign object at 0x7fa2ce361710>],
             'q2': [<numba.core.ir.Assign object at 0x7fa2ce3617b8>],
             'q2norm': [<numba.core.ir.Assign object at 0x7fa2ce368be0>],
             'qout': [<numba.core.ir.Assign object at 0x7fa2ce361860>]})
2022-08-04 11:53:03,410 DEBUG SSA violators set()
2022-08-04 11:53:03,774 DEBUG label 0:
    s = arg(0, name=s)                       ['s']
    q = arg(1, name=q)                       ['q']
    qout = arg(2, name=qout)                 ['qout']
    $const0.3 = const(int, 0)                ['$const0.3']
    $0.4 = getitem(value=q, index=$const0.3, fn=<built-in function getitem>) ['$0.4', '$const0.3', 'q']
    $0.5 = s * $0.4                          ['$0.4', '$0.5', 's']
    $const0.7 = const(int, 0)                ['$const0.7']
    qout[$const0.7] = $0.5                   ['$0.5', '$const0.7', 'qout']
    $const0.10 = const(int, 1)               ['$const0.10']
    $0.11 = getitem(value=q, index=$const0.10, fn=<built-in function getitem>) ['$0.11', '$const0.10', 'q']
    $0.12 = s * $0.11                        ['$0.11', '$0.12', 's']
    $const0.14 = const(int, 1)               ['$const0.14']
    qout[$const0.14] = $0.12                 ['$0.12', '$const0.14', 'qout']
    $const0.17 = const(int, 2)               ['$const0.17']
    $0.18 = getitem(value=q, index=$const0.17, fn=<built-in function getitem>) ['$0.18', '$const0.17', 'q']
    $0.19 = s * $0.18                        ['$0.18', '$0.19', 's']
    $const0.21 = const(int, 2)               ['$const0.21']
    qout[$const0.21] = $0.19                 ['$0.19', '$const0.21', 'qout']
    $const0.24 = const(int, 3)               ['$const0.24']
    $0.25 = getitem(value=q, index=$const0.24, fn=<built-in function getitem>) ['$0.25', '$const0.24', 'q']
    $0.26 = s * $0.25                        ['$0.25', '$0.26', 's']
    $const0.28 = const(int, 3)               ['$const0.28']
    qout[$const0.28] = $0.26                 ['$0.26', '$const0.28', 'qout']
    $const0.29 = const(NoneType, None)       ['$const0.29']
    $0.30 = cast(value=$const0.29)           ['$0.30', '$const0.29']
    return $0.30                             ['$0.30']

2022-08-04 11:53:03,777 DEBUG ==== SSA block analysis pass on 0
2022-08-04 11:53:03,777 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdf73588>
2022-08-04 11:53:03,777 DEBUG on stmt: s = arg(0, name=s)
2022-08-04 11:53:03,777 DEBUG on stmt: q = arg(1, name=q)
2022-08-04 11:53:03,777 DEBUG on stmt: qout = arg(2, name=qout)
2022-08-04 11:53:03,777 DEBUG on stmt: $const0.3 = const(int, 0)
2022-08-04 11:53:03,777 DEBUG on stmt: $0.4 = static_getitem(value=q, index=0, index_var=$const0.3, fn=<built-in function getitem>)
2022-08-04 11:53:03,777 DEBUG on stmt: $0.5 = s * $0.4
2022-08-04 11:53:03,778 DEBUG on stmt: $const0.7 = const(int, 0)
2022-08-04 11:53:03,778 DEBUG on stmt: qout[0] = $0.5
2022-08-04 11:53:03,778 DEBUG on stmt: $const0.10 = const(int, 1)
2022-08-04 11:53:03,778 DEBUG on stmt: $0.11 = static_getitem(value=q, index=1, index_var=$const0.10, fn=<built-in function getitem>)
2022-08-04 11:53:03,778 DEBUG on stmt: $0.12 = s * $0.11
2022-08-04 11:53:03,778 DEBUG on stmt: $const0.14 = const(int, 1)
2022-08-04 11:53:03,778 DEBUG on stmt: qout[1] = $0.12
2022-08-04 11:53:03,778 DEBUG on stmt: $const0.17 = const(int, 2)
2022-08-04 11:53:03,778 DEBUG on stmt: $0.18 = static_getitem(value=q, index=2, index_var=$const0.17, fn=<built-in function getitem>)
2022-08-04 11:53:03,778 DEBUG on stmt: $0.19 = s * $0.18
2022-08-04 11:53:03,778 DEBUG on stmt: $const0.21 = const(int, 2)
2022-08-04 11:53:03,778 DEBUG on stmt: qout[2] = $0.19
2022-08-04 11:53:03,778 DEBUG on stmt: $const0.24 = const(int, 3)
2022-08-04 11:53:03,779 DEBUG on stmt: $0.25 = static_getitem(value=q, index=3, index_var=$const0.24, fn=<built-in function getitem>)
2022-08-04 11:53:03,779 DEBUG on stmt: $0.26 = s * $0.25
2022-08-04 11:53:03,779 DEBUG on stmt: $const0.28 = const(int, 3)
2022-08-04 11:53:03,779 DEBUG on stmt: qout[3] = $0.26
2022-08-04 11:53:03,779 DEBUG on stmt: $const0.29 = const(NoneType, None)
2022-08-04 11:53:03,779 DEBUG on stmt: $0.30 = cast(value=$const0.29)
2022-08-04 11:53:03,779 DEBUG on stmt: return $0.30
2022-08-04 11:53:03,779 DEBUG defs defaultdict(<class 'list'>,
            {'$0.11': [<numba.core.ir.Assign object at 0x7fa2cdf7ac88>],
             '$0.12': [<numba.core.ir.Assign object at 0x7fa2cdf738d0>],
             '$0.18': [<numba.core.ir.Assign object at 0x7fa2cdf7acf8>],
             '$0.19': [<numba.core.ir.Assign object at 0x7fa2cdf73eb8>],
             '$0.25': [<numba.core.ir.Assign object at 0x7fa2cdf7ad68>],
             '$0.26': [<numba.core.ir.Assign object at 0x7fa2cdf7a4e0>],
             '$0.30': [<numba.core.ir.Assign object at 0x7fa2cdf7a898>],
             '$0.4': [<numba.core.ir.Assign object at 0x7fa2cdf7ac18>],
             '$0.5': [<numba.core.ir.Assign object at 0x7fa2cdf732e8>],
             '$const0.10': [<numba.core.ir.Assign object at 0x7fa2cdf73710>],
             '$const0.14': [<numba.core.ir.Assign object at 0x7fa2cdf73a58>],
             '$const0.17': [<numba.core.ir.Assign object at 0x7fa2cdf73cf8>],
             '$const0.21': [<numba.core.ir.Assign object at 0x7fa2cdf7a080>],
             '$const0.24': [<numba.core.ir.Assign object at 0x7fa2cdf7a320>],
             '$const0.28': [<numba.core.ir.Assign object at 0x7fa2cdf7a668>],
             '$const0.29': [<numba.core.ir.Assign object at 0x7fa2cdf7a7b8>],
             '$const0.3': [<numba.core.ir.Assign object at 0x7fa2cdf73128>],
             '$const0.7': [<numba.core.ir.Assign object at 0x7fa2cdf73470>],
             'q': [<numba.core.ir.Assign object at 0x7fa2ce089e10>],
             'qout': [<numba.core.ir.Assign object at 0x7fa2ce089eb8>],
             's': [<numba.core.ir.Assign object at 0x7fa2ce089d68>]})
2022-08-04 11:53:03,780 DEBUG SSA violators set()
2022-08-04 11:53:03,901 DEBUG label 0:
    s = arg(0, name=s)                       ['s']
    q = arg(1, name=q)                       ['q']
    qout = arg(2, name=qout)                 ['qout']
    $const0.2 = const(int, 0)                ['$const0.2']
    $0.3 = getitem(value=q, index=$const0.2, fn=<built-in function getitem>) ['$0.3', '$const0.2', 'q']
    $const0.4 = const(int, 2)                ['$const0.4']
    $0.5 = $0.3 ** $const0.4                 ['$0.3', '$0.5', '$const0.4']
    $const0.7 = const(int, 1)                ['$const0.7']
    $0.8 = getitem(value=q, index=$const0.7, fn=<built-in function getitem>) ['$0.8', '$const0.7', 'q']
    $const0.9 = const(int, 2)                ['$const0.9']
    $0.10 = $0.8 ** $const0.9                ['$0.10', '$0.8', '$const0.9']
    $0.11 = $0.5 + $0.10                     ['$0.10', '$0.11', '$0.5']
    $const0.13 = const(int, 2)               ['$const0.13']
    $0.14 = getitem(value=q, index=$const0.13, fn=<built-in function getitem>) ['$0.14', '$const0.13', 'q']
    $const0.15 = const(int, 2)               ['$const0.15']
    $0.16 = $0.14 ** $const0.15              ['$0.14', '$0.16', '$const0.15']
    $0.17 = $0.11 + $0.16                    ['$0.11', '$0.16', '$0.17']
    $const0.19 = const(int, 3)               ['$const0.19']
    $0.20 = getitem(value=q, index=$const0.19, fn=<built-in function getitem>) ['$0.20', '$const0.19', 'q']
    $const0.21 = const(int, 2)               ['$const0.21']
    $0.22 = $0.20 ** $const0.21              ['$0.20', '$0.22', '$const0.21']
    qnorm = $0.17 + $0.22                    ['$0.17', '$0.22', 'qnorm']
    $const0.26 = const(int, 0)               ['$const0.26']
    $0.27 = getitem(value=q, index=$const0.26, fn=<built-in function getitem>) ['$0.27', '$const0.26', 'q']
    $0.28 = s * $0.27                        ['$0.27', '$0.28', 's']
    $0.30 = $0.28 / qnorm                    ['$0.28', '$0.30', 'qnorm']
    $const0.32 = const(int, 0)               ['$const0.32']
    qout[$const0.32] = $0.30                 ['$0.30', '$const0.32', 'qout']
    $0.34 = unary(fn=<built-in function neg>, value=s) ['$0.34', 's']
    $const0.36 = const(int, 1)               ['$const0.36']
    $0.37 = getitem(value=q, index=$const0.36, fn=<built-in function getitem>) ['$0.37', '$const0.36', 'q']
    $0.38 = $0.34 * $0.37                    ['$0.34', '$0.37', '$0.38']
    $0.40 = $0.38 / qnorm                    ['$0.38', '$0.40', 'qnorm']
    $const0.42 = const(int, 1)               ['$const0.42']
    qout[$const0.42] = $0.40                 ['$0.40', '$const0.42', 'qout']
    $0.44 = unary(fn=<built-in function neg>, value=s) ['$0.44', 's']
    $const0.46 = const(int, 2)               ['$const0.46']
    $0.47 = getitem(value=q, index=$const0.46, fn=<built-in function getitem>) ['$0.47', '$const0.46', 'q']
    $0.48 = $0.44 * $0.47                    ['$0.44', '$0.47', '$0.48']
    $0.50 = $0.48 / qnorm                    ['$0.48', '$0.50', 'qnorm']
    $const0.52 = const(int, 2)               ['$const0.52']
    qout[$const0.52] = $0.50                 ['$0.50', '$const0.52', 'qout']
    $0.54 = unary(fn=<built-in function neg>, value=s) ['$0.54', 's']
    $const0.56 = const(int, 3)               ['$const0.56']
    $0.57 = getitem(value=q, index=$const0.56, fn=<built-in function getitem>) ['$0.57', '$const0.56', 'q']
    $0.58 = $0.54 * $0.57                    ['$0.54', '$0.57', '$0.58']
    $0.60 = $0.58 / qnorm                    ['$0.58', '$0.60', 'qnorm']
    $const0.62 = const(int, 3)               ['$const0.62']
    qout[$const0.62] = $0.60                 ['$0.60', '$const0.62', 'qout']
    $const0.63 = const(NoneType, None)       ['$const0.63']
    $0.64 = cast(value=$const0.63)           ['$0.64', '$const0.63']
    return $0.64                             ['$0.64']

2022-08-04 11:53:03,908 DEBUG ==== SSA block analysis pass on 0
2022-08-04 11:53:03,908 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cddf0518>
2022-08-04 11:53:03,908 DEBUG on stmt: s = arg(0, name=s)
2022-08-04 11:53:03,908 DEBUG on stmt: q = arg(1, name=q)
2022-08-04 11:53:03,909 DEBUG on stmt: qout = arg(2, name=qout)
2022-08-04 11:53:03,909 DEBUG on stmt: $const0.2 = const(int, 0)
2022-08-04 11:53:03,909 DEBUG on stmt: $0.3 = static_getitem(value=q, index=0, index_var=$const0.2, fn=<built-in function getitem>)
2022-08-04 11:53:03,909 DEBUG on stmt: $const0.4 = const(int, 2)
2022-08-04 11:53:03,909 DEBUG on stmt: $0.5 = $0.3 ** $const0.4
2022-08-04 11:53:03,909 DEBUG on stmt: $const0.7 = const(int, 1)
2022-08-04 11:53:03,909 DEBUG on stmt: $0.8 = static_getitem(value=q, index=1, index_var=$const0.7, fn=<built-in function getitem>)
2022-08-04 11:53:03,909 DEBUG on stmt: $const0.9 = const(int, 2)
2022-08-04 11:53:03,909 DEBUG on stmt: $0.10 = $0.8 ** $const0.9
2022-08-04 11:53:03,909 DEBUG on stmt: $0.11 = $0.5 + $0.10
2022-08-04 11:53:03,909 DEBUG on stmt: $const0.13 = const(int, 2)
2022-08-04 11:53:03,909 DEBUG on stmt: $0.14 = static_getitem(value=q, index=2, index_var=$const0.13, fn=<built-in function getitem>)
2022-08-04 11:53:03,909 DEBUG on stmt: $const0.15 = const(int, 2)
2022-08-04 11:53:03,909 DEBUG on stmt: $0.16 = $0.14 ** $const0.15
2022-08-04 11:53:03,909 DEBUG on stmt: $0.17 = $0.11 + $0.16
2022-08-04 11:53:03,909 DEBUG on stmt: $const0.19 = const(int, 3)
2022-08-04 11:53:03,909 DEBUG on stmt: $0.20 = static_getitem(value=q, index=3, index_var=$const0.19, fn=<built-in function getitem>)
2022-08-04 11:53:03,909 DEBUG on stmt: $const0.21 = const(int, 2)
2022-08-04 11:53:03,909 DEBUG on stmt: $0.22 = $0.20 ** $const0.21
2022-08-04 11:53:03,909 DEBUG on stmt: qnorm = $0.17 + $0.22
2022-08-04 11:53:03,909 DEBUG on stmt: $const0.26 = const(int, 0)
2022-08-04 11:53:03,909 DEBUG on stmt: $0.27 = static_getitem(value=q, index=0, index_var=$const0.26, fn=<built-in function getitem>)
2022-08-04 11:53:03,909 DEBUG on stmt: $0.28 = s * $0.27
2022-08-04 11:53:03,910 DEBUG on stmt: $0.30 = $0.28 / qnorm
2022-08-04 11:53:03,910 DEBUG on stmt: $const0.32 = const(int, 0)
2022-08-04 11:53:03,910 DEBUG on stmt: qout[0] = $0.30
2022-08-04 11:53:03,910 DEBUG on stmt: $0.34 = unary(fn=<built-in function neg>, value=s)
2022-08-04 11:53:03,910 DEBUG on stmt: $const0.36 = const(int, 1)
2022-08-04 11:53:03,910 DEBUG on stmt: $0.37 = static_getitem(value=q, index=1, index_var=$const0.36, fn=<built-in function getitem>)
2022-08-04 11:53:03,910 DEBUG on stmt: $0.38 = $0.34 * $0.37
2022-08-04 11:53:03,910 DEBUG on stmt: $0.40 = $0.38 / qnorm
2022-08-04 11:53:03,910 DEBUG on stmt: $const0.42 = const(int, 1)
2022-08-04 11:53:03,910 DEBUG on stmt: qout[1] = $0.40
2022-08-04 11:53:03,910 DEBUG on stmt: $0.44 = unary(fn=<built-in function neg>, value=s)
2022-08-04 11:53:03,910 DEBUG on stmt: $const0.46 = const(int, 2)
2022-08-04 11:53:03,910 DEBUG on stmt: $0.47 = static_getitem(value=q, index=2, index_var=$const0.46, fn=<built-in function getitem>)
2022-08-04 11:53:03,910 DEBUG on stmt: $0.48 = $0.44 * $0.47
2022-08-04 11:53:03,910 DEBUG on stmt: $0.50 = $0.48 / qnorm
2022-08-04 11:53:03,910 DEBUG on stmt: $const0.52 = const(int, 2)
2022-08-04 11:53:03,911 DEBUG on stmt: qout[2] = $0.50
2022-08-04 11:53:03,911 DEBUG on stmt: $0.54 = unary(fn=<built-in function neg>, value=s)
2022-08-04 11:53:03,911 DEBUG on stmt: $const0.56 = const(int, 3)
2022-08-04 11:53:03,911 DEBUG on stmt: $0.57 = static_getitem(value=q, index=3, index_var=$const0.56, fn=<built-in function getitem>)
2022-08-04 11:53:03,911 DEBUG on stmt: $0.58 = $0.54 * $0.57
2022-08-04 11:53:03,911 DEBUG on stmt: $0.60 = $0.58 / qnorm
2022-08-04 11:53:03,911 DEBUG on stmt: $const0.62 = const(int, 3)
2022-08-04 11:53:03,911 DEBUG on stmt: qout[3] = $0.60
2022-08-04 11:53:03,911 DEBUG on stmt: $const0.63 = const(NoneType, None)
2022-08-04 11:53:03,911 DEBUG on stmt: $0.64 = cast(value=$const0.63)
2022-08-04 11:53:03,911 DEBUG on stmt: return $0.64
2022-08-04 11:53:03,912 DEBUG defs defaultdict(<class 'list'>,
            {'$0.10': [<numba.core.ir.Assign object at 0x7fa2ce4e6e80>],
             '$0.11': [<numba.core.ir.Assign object at 0x7fa2ce4e6f60>],
             '$0.14': [<numba.core.ir.Assign object at 0x7fa2ce4e7860>],
             '$0.16': [<numba.core.ir.Assign object at 0x7fa2ce4e6518>],
             '$0.17': [<numba.core.ir.Assign object at 0x7fa2ce4e65f8>],
             '$0.20': [<numba.core.ir.Assign object at 0x7fa2ce4e78d0>],
             '$0.22': [<numba.core.ir.Assign object at 0x7fa2ce4b6240>],
             '$0.27': [<numba.core.ir.Assign object at 0x7fa2ce4e7940>],
             '$0.28': [<numba.core.ir.Assign object at 0x7fa2ce4b6780>],
             '$0.3': [<numba.core.ir.Assign object at 0x7fa2ce4e7780>],
             '$0.30': [<numba.core.ir.Assign object at 0x7fa2ce4b6908>],
             '$0.34': [<numba.core.ir.Assign object at 0x7fa2ce4b6c88>],
             '$0.37': [<numba.core.ir.Assign object at 0x7fa2ce4e79b0>],
             '$0.38': [<numba.core.ir.Assign object at 0x7fa2ce4b6fd0>],
             '$0.40': [<numba.core.ir.Assign object at 0x7fa2ce4eb198>],
             '$0.44': [<numba.core.ir.Assign object at 0x7fa2ce4eb518>],
             '$0.47': [<numba.core.ir.Assign object at 0x7fa2ce4e7a20>],
             '$0.48': [<numba.core.ir.Assign object at 0x7fa2ce4eb860>],
             '$0.5': [<numba.core.ir.Assign object at 0x7fa2ce4e6a58>],
             '$0.50': [<numba.core.ir.Assign object at 0x7fa2ce4eb9e8>],
             '$0.54': [<numba.core.ir.Assign object at 0x7fa2ce4ebd68>],
             '$0.57': [<numba.core.ir.Assign object at 0x7fa2ce4e7a90>],
             '$0.58': [<numba.core.ir.Assign object at 0x7fa2ce4e70f0>],
             '$0.60': [<numba.core.ir.Assign object at 0x7fa2ce4e7278>],
             '$0.64': [<numba.core.ir.Assign object at 0x7fa2ce4e7630>],
             '$0.8': [<numba.core.ir.Assign object at 0x7fa2ce4e77f0>],
             '$const0.13': [<numba.core.ir.Assign object at 0x7fa2ce4e61d0>],
             '$const0.15': [<numba.core.ir.Assign object at 0x7fa2ce4e6438>],
             '$const0.19': [<numba.core.ir.Assign object at 0x7fa2ce4e6080>],
             '$const0.2': [<numba.core.ir.Assign object at 0x7fa2ce4e6588>],
             '$const0.21': [<numba.core.ir.Assign object at 0x7fa2ce4b6160>],
             '$const0.26': [<numba.core.ir.Assign object at 0x7fa2ce4b65f8>],
             '$const0.32': [<numba.core.ir.Assign object at 0x7fa2ce4b6a90>],
             '$const0.36': [<numba.core.ir.Assign object at 0x7fa2ce4b6e10>],
             '$const0.4': [<numba.core.ir.Assign object at 0x7fa2ce4e6978>],
             '$const0.42': [<numba.core.ir.Assign object at 0x7fa2ce4eb320>],
             '$const0.46': [<numba.core.ir.Assign object at 0x7fa2ce4eb6a0>],
             '$const0.52': [<numba.core.ir.Assign object at 0x7fa2ce4ebb70>],
             '$const0.56': [<numba.core.ir.Assign object at 0x7fa2ce4ebef0>],
             '$const0.62': [<numba.core.ir.Assign object at 0x7fa2ce4e7400>],
             '$const0.63': [<numba.core.ir.Assign object at 0x7fa2ce4e7550>],
             '$const0.7': [<numba.core.ir.Assign object at 0x7fa2ce4e6be0>],
             '$const0.9': [<numba.core.ir.Assign object at 0x7fa2ce4e6da0>],
             'q': [<numba.core.ir.Assign object at 0x7fa2ce085eb8>],
             'qnorm': [<numba.core.ir.Assign object at 0x7fa2ce4b6320>],
             'qout': [<numba.core.ir.Assign object at 0x7fa2ce085f60>],
             's': [<numba.core.ir.Assign object at 0x7fa2ce085e10>]})
2022-08-04 11:53:03,912 DEBUG SSA violators set()
2022-08-04 11:53:04,078 DEBUG label 0:
    q = arg(0, name=q)                       ['q']
    s = arg(1, name=s)                       ['s']
    qout = arg(2, name=qout)                 ['qout']
    $const0.2 = const(int, 0)                ['$const0.2']
    $0.3 = getitem(value=q, index=$const0.2, fn=<built-in function getitem>) ['$0.3', '$const0.2', 'q']
    $0.5 = $0.3 * s                          ['$0.3', '$0.5', 's']
    $const0.7 = const(int, 0)                ['$const0.7']
    qout[$const0.7] = $0.5                   ['$0.5', '$const0.7', 'qout']
    $const0.9 = const(int, 1)                ['$const0.9']
    $0.10 = getitem(value=q, index=$const0.9, fn=<built-in function getitem>) ['$0.10', '$const0.9', 'q']
    $0.12 = $0.10 * s                        ['$0.10', '$0.12', 's']
    $const0.14 = const(int, 1)               ['$const0.14']
    qout[$const0.14] = $0.12                 ['$0.12', '$const0.14', 'qout']
    $const0.16 = const(int, 2)               ['$const0.16']
    $0.17 = getitem(value=q, index=$const0.16, fn=<built-in function getitem>) ['$0.17', '$const0.16', 'q']
    $0.19 = $0.17 * s                        ['$0.17', '$0.19', 's']
    $const0.21 = const(int, 2)               ['$const0.21']
    qout[$const0.21] = $0.19                 ['$0.19', '$const0.21', 'qout']
    $const0.23 = const(int, 3)               ['$const0.23']
    $0.24 = getitem(value=q, index=$const0.23, fn=<built-in function getitem>) ['$0.24', '$const0.23', 'q']
    $0.26 = $0.24 * s                        ['$0.24', '$0.26', 's']
    $const0.28 = const(int, 3)               ['$const0.28']
    qout[$const0.28] = $0.26                 ['$0.26', '$const0.28', 'qout']
    $const0.29 = const(NoneType, None)       ['$const0.29']
    $0.30 = cast(value=$const0.29)           ['$0.30', '$const0.29']
    return $0.30                             ['$0.30']

2022-08-04 11:53:04,081 DEBUG ==== SSA block analysis pass on 0
2022-08-04 11:53:04,081 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdf83978>
2022-08-04 11:53:04,082 DEBUG on stmt: q = arg(0, name=q)
2022-08-04 11:53:04,082 DEBUG on stmt: s = arg(1, name=s)
2022-08-04 11:53:04,082 DEBUG on stmt: qout = arg(2, name=qout)
2022-08-04 11:53:04,082 DEBUG on stmt: $const0.2 = const(int, 0)
2022-08-04 11:53:04,082 DEBUG on stmt: $0.3 = static_getitem(value=q, index=0, index_var=$const0.2, fn=<built-in function getitem>)
2022-08-04 11:53:04,082 DEBUG on stmt: $0.5 = $0.3 * s
2022-08-04 11:53:04,082 DEBUG on stmt: $const0.7 = const(int, 0)
2022-08-04 11:53:04,082 DEBUG on stmt: qout[0] = $0.5
2022-08-04 11:53:04,082 DEBUG on stmt: $const0.9 = const(int, 1)
2022-08-04 11:53:04,082 DEBUG on stmt: $0.10 = static_getitem(value=q, index=1, index_var=$const0.9, fn=<built-in function getitem>)
2022-08-04 11:53:04,082 DEBUG on stmt: $0.12 = $0.10 * s
2022-08-04 11:53:04,082 DEBUG on stmt: $const0.14 = const(int, 1)
2022-08-04 11:53:04,082 DEBUG on stmt: qout[1] = $0.12
2022-08-04 11:53:04,082 DEBUG on stmt: $const0.16 = const(int, 2)
2022-08-04 11:53:04,082 DEBUG on stmt: $0.17 = static_getitem(value=q, index=2, index_var=$const0.16, fn=<built-in function getitem>)
2022-08-04 11:53:04,082 DEBUG on stmt: $0.19 = $0.17 * s
2022-08-04 11:53:04,082 DEBUG on stmt: $const0.21 = const(int, 2)
2022-08-04 11:53:04,083 DEBUG on stmt: qout[2] = $0.19
2022-08-04 11:53:04,083 DEBUG on stmt: $const0.23 = const(int, 3)
2022-08-04 11:53:04,083 DEBUG on stmt: $0.24 = static_getitem(value=q, index=3, index_var=$const0.23, fn=<built-in function getitem>)
2022-08-04 11:53:04,083 DEBUG on stmt: $0.26 = $0.24 * s
2022-08-04 11:53:04,083 DEBUG on stmt: $const0.28 = const(int, 3)
2022-08-04 11:53:04,083 DEBUG on stmt: qout[3] = $0.26
2022-08-04 11:53:04,083 DEBUG on stmt: $const0.29 = const(NoneType, None)
2022-08-04 11:53:04,083 DEBUG on stmt: $0.30 = cast(value=$const0.29)
2022-08-04 11:53:04,083 DEBUG on stmt: return $0.30
2022-08-04 11:53:04,084 DEBUG defs defaultdict(<class 'list'>,
            {'$0.10': [<numba.core.ir.Assign object at 0x7fa2ce1ad240>],
             '$0.12': [<numba.core.ir.Assign object at 0x7fa2cdf9be80>],
             '$0.17': [<numba.core.ir.Assign object at 0x7fa2ce1ad2b0>],
             '$0.19': [<numba.core.ir.Assign object at 0x7fa2ce1cf4e0>],
             '$0.24': [<numba.core.ir.Assign object at 0x7fa2ce1ad320>],
             '$0.26': [<numba.core.ir.Assign object at 0x7fa2ce1cfac8>],
             '$0.3': [<numba.core.ir.Assign object at 0x7fa2ce1ad1d0>],
             '$0.30': [<numba.core.ir.Assign object at 0x7fa2ce1cfe80>],
             '$0.5': [<numba.core.ir.Assign object at 0x7fa2cdf9b898>],
             '$const0.14': [<numba.core.ir.Assign object at 0x7fa2ce1cf080>],
             '$const0.16': [<numba.core.ir.Assign object at 0x7fa2ce1cf278>],
             '$const0.2': [<numba.core.ir.Assign object at 0x7fa2cdf9b6d8>],
             '$const0.21': [<numba.core.ir.Assign object at 0x7fa2ce1cf668>],
             '$const0.23': [<numba.core.ir.Assign object at 0x7fa2ce1cf860>],
             '$const0.28': [<numba.core.ir.Assign object at 0x7fa2ce1cfc50>],
             '$const0.29': [<numba.core.ir.Assign object at 0x7fa2ce1cfda0>],
             '$const0.7': [<numba.core.ir.Assign object at 0x7fa2cdf9ba58>],
             '$const0.9': [<numba.core.ir.Assign object at 0x7fa2cdf9bc50>],
             'q': [<numba.core.ir.Assign object at 0x7fa2cdf9b3c8>],
             'qout': [<numba.core.ir.Assign object at 0x7fa2cdf9b518>],
             's': [<numba.core.ir.Assign object at 0x7fa2cdf9b438>]})
2022-08-04 11:53:04,084 DEBUG SSA violators set()
2022-08-04 11:53:04,189 DEBUG label 0:
    q = arg(0, name=q)                       ['q']
    s = arg(1, name=s)                       ['s']
    qout = arg(2, name=qout)                 ['qout']
    $const0.2 = const(int, 0)                ['$const0.2']
    $0.3 = getitem(value=q, index=$const0.2, fn=<built-in function getitem>) ['$0.3', '$const0.2', 'q']
    $0.5 = $0.3 / s                          ['$0.3', '$0.5', 's']
    $const0.7 = const(int, 0)                ['$const0.7']
    qout[$const0.7] = $0.5                   ['$0.5', '$const0.7', 'qout']
    $const0.9 = const(int, 1)                ['$const0.9']
    $0.10 = getitem(value=q, index=$const0.9, fn=<built-in function getitem>) ['$0.10', '$const0.9', 'q']
    $0.12 = $0.10 / s                        ['$0.10', '$0.12', 's']
    $const0.14 = const(int, 1)               ['$const0.14']
    qout[$const0.14] = $0.12                 ['$0.12', '$const0.14', 'qout']
    $const0.16 = const(int, 2)               ['$const0.16']
    $0.17 = getitem(value=q, index=$const0.16, fn=<built-in function getitem>) ['$0.17', '$const0.16', 'q']
    $0.19 = $0.17 / s                        ['$0.17', '$0.19', 's']
    $const0.21 = const(int, 2)               ['$const0.21']
    qout[$const0.21] = $0.19                 ['$0.19', '$const0.21', 'qout']
    $const0.23 = const(int, 3)               ['$const0.23']
    $0.24 = getitem(value=q, index=$const0.23, fn=<built-in function getitem>) ['$0.24', '$const0.23', 'q']
    $0.26 = $0.24 / s                        ['$0.24', '$0.26', 's']
    $const0.28 = const(int, 3)               ['$const0.28']
    qout[$const0.28] = $0.26                 ['$0.26', '$const0.28', 'qout']
    $const0.29 = const(NoneType, None)       ['$const0.29']
    $0.30 = cast(value=$const0.29)           ['$0.30', '$const0.29']
    return $0.30                             ['$0.30']

2022-08-04 11:53:04,194 DEBUG ==== SSA block analysis pass on 0
2022-08-04 11:53:04,194 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdeb86d8>
2022-08-04 11:53:04,194 DEBUG on stmt: q = arg(0, name=q)
2022-08-04 11:53:04,194 DEBUG on stmt: s = arg(1, name=s)
2022-08-04 11:53:04,194 DEBUG on stmt: qout = arg(2, name=qout)
2022-08-04 11:53:04,194 DEBUG on stmt: $const0.2 = const(int, 0)
2022-08-04 11:53:04,194 DEBUG on stmt: $0.3 = static_getitem(value=q, index=0, index_var=$const0.2, fn=<built-in function getitem>)
2022-08-04 11:53:04,194 DEBUG on stmt: $0.5 = $0.3 / s
2022-08-04 11:53:04,194 DEBUG on stmt: $const0.7 = const(int, 0)
2022-08-04 11:53:04,194 DEBUG on stmt: qout[0] = $0.5
2022-08-04 11:53:04,194 DEBUG on stmt: $const0.9 = const(int, 1)
2022-08-04 11:53:04,195 DEBUG on stmt: $0.10 = static_getitem(value=q, index=1, index_var=$const0.9, fn=<built-in function getitem>)
2022-08-04 11:53:04,195 DEBUG on stmt: $0.12 = $0.10 / s
2022-08-04 11:53:04,195 DEBUG on stmt: $const0.14 = const(int, 1)
2022-08-04 11:53:04,195 DEBUG on stmt: qout[1] = $0.12
2022-08-04 11:53:04,195 DEBUG on stmt: $const0.16 = const(int, 2)
2022-08-04 11:53:04,195 DEBUG on stmt: $0.17 = static_getitem(value=q, index=2, index_var=$const0.16, fn=<built-in function getitem>)
2022-08-04 11:53:04,195 DEBUG on stmt: $0.19 = $0.17 / s
2022-08-04 11:53:04,195 DEBUG on stmt: $const0.21 = const(int, 2)
2022-08-04 11:53:04,195 DEBUG on stmt: qout[2] = $0.19
2022-08-04 11:53:04,195 DEBUG on stmt: $const0.23 = const(int, 3)
2022-08-04 11:53:04,195 DEBUG on stmt: $0.24 = static_getitem(value=q, index=3, index_var=$const0.23, fn=<built-in function getitem>)
2022-08-04 11:53:04,195 DEBUG on stmt: $0.26 = $0.24 / s
2022-08-04 11:53:04,195 DEBUG on stmt: $const0.28 = const(int, 3)
2022-08-04 11:53:04,196 DEBUG on stmt: qout[3] = $0.26
2022-08-04 11:53:04,196 DEBUG on stmt: $const0.29 = const(NoneType, None)
2022-08-04 11:53:04,196 DEBUG on stmt: $0.30 = cast(value=$const0.29)
2022-08-04 11:53:04,196 DEBUG on stmt: return $0.30
2022-08-04 11:53:04,196 DEBUG defs defaultdict(<class 'list'>,
            {'$0.10': [<numba.core.ir.Assign object at 0x7fa2cde83a20>],
             '$0.12': [<numba.core.ir.Assign object at 0x7fa2cdeb88d0>],
             '$0.17': [<numba.core.ir.Assign object at 0x7fa2cde83a90>],
             '$0.19': [<numba.core.ir.Assign object at 0x7fa2cdeb8208>],
             '$0.24': [<numba.core.ir.Assign object at 0x7fa2cde83b00>],
             '$0.26': [<numba.core.ir.Assign object at 0x7fa2cde832b0>],
             '$0.3': [<numba.core.ir.Assign object at 0x7fa2cde839b0>],
             '$0.30': [<numba.core.ir.Assign object at 0x7fa2cde83668>],
             '$0.5': [<numba.core.ir.Assign object at 0x7fa2cdeb8f60>],
             '$const0.14': [<numba.core.ir.Assign object at 0x7fa2cdeb89b0>],
             '$const0.16': [<numba.core.ir.Assign object at 0x7fa2cdeb8c50>],
             '$const0.2': [<numba.core.ir.Assign object at 0x7fa2cde8ce10>],
             '$const0.21': [<numba.core.ir.Assign object at 0x7fa2cdeb8080>],
             '$const0.23': [<numba.core.ir.Assign object at 0x7fa2cde83048>],
             '$const0.28': [<numba.core.ir.Assign object at 0x7fa2cde83438>],
             '$const0.29': [<numba.core.ir.Assign object at 0x7fa2cde83588>],
             '$const0.7': [<numba.core.ir.Assign object at 0x7fa2cdeb8470>],
             '$const0.9': [<numba.core.ir.Assign object at 0x7fa2cdeb8668>],
             'q': [<numba.core.ir.Assign object at 0x7fa2cde8cb38>],
             'qout': [<numba.core.ir.Assign object at 0x7fa2cde8cc88>],
             's': [<numba.core.ir.Assign object at 0x7fa2cde8cbe0>]})
2022-08-04 11:53:04,196 DEBUG SSA violators set()
2022-08-04 11:53:04,306 DEBUG label 0:
    q = arg(0, name=q)                       ['q']
    qout = arg(1, name=qout)                 ['qout']
    $const0.2 = const(int, 0)                ['$const0.2']
    $0.3 = getitem(value=q, index=$const0.2, fn=<built-in function getitem>) ['$0.3', '$const0.2', 'q']
    $0.4 = unary(fn=<built-in function neg>, value=$0.3) ['$0.3', '$0.4']
    $const0.6 = const(int, 0)                ['$const0.6']
    qout[$const0.6] = $0.4                   ['$0.4', '$const0.6', 'qout']
    $const0.8 = const(int, 1)                ['$const0.8']
    $0.9 = getitem(value=q, index=$const0.8, fn=<built-in function getitem>) ['$0.9', '$const0.8', 'q']
    $0.10 = unary(fn=<built-in function neg>, value=$0.9) ['$0.10', '$0.9']
    $const0.12 = const(int, 1)               ['$const0.12']
    qout[$const0.12] = $0.10                 ['$0.10', '$const0.12', 'qout']
    $const0.14 = const(int, 2)               ['$const0.14']
    $0.15 = getitem(value=q, index=$const0.14, fn=<built-in function getitem>) ['$0.15', '$const0.14', 'q']
    $0.16 = unary(fn=<built-in function neg>, value=$0.15) ['$0.15', '$0.16']
    $const0.18 = const(int, 2)               ['$const0.18']
    qout[$const0.18] = $0.16                 ['$0.16', '$const0.18', 'qout']
    $const0.20 = const(int, 3)               ['$const0.20']
    $0.21 = getitem(value=q, index=$const0.20, fn=<built-in function getitem>) ['$0.21', '$const0.20', 'q']
    $0.22 = unary(fn=<built-in function neg>, value=$0.21) ['$0.21', '$0.22']
    $const0.24 = const(int, 3)               ['$const0.24']
    qout[$const0.24] = $0.22                 ['$0.22', '$const0.24', 'qout']
    $const0.25 = const(NoneType, None)       ['$const0.25']
    $0.26 = cast(value=$const0.25)           ['$0.26', '$const0.25']
    return $0.26                             ['$0.26']

2022-08-04 11:53:04,308 DEBUG ==== SSA block analysis pass on 0
2022-08-04 11:53:04,308 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdebd240>
2022-08-04 11:53:04,308 DEBUG on stmt: q = arg(0, name=q)
2022-08-04 11:53:04,308 DEBUG on stmt: qout = arg(1, name=qout)
2022-08-04 11:53:04,308 DEBUG on stmt: $const0.2 = const(int, 0)
2022-08-04 11:53:04,308 DEBUG on stmt: $0.3 = static_getitem(value=q, index=0, index_var=$const0.2, fn=<built-in function getitem>)
2022-08-04 11:53:04,309 DEBUG on stmt: $0.4 = unary(fn=<built-in function neg>, value=$0.3)
2022-08-04 11:53:04,309 DEBUG on stmt: $const0.6 = const(int, 0)
2022-08-04 11:53:04,309 DEBUG on stmt: qout[0] = $0.4
2022-08-04 11:53:04,309 DEBUG on stmt: $const0.8 = const(int, 1)
2022-08-04 11:53:04,309 DEBUG on stmt: $0.9 = static_getitem(value=q, index=1, index_var=$const0.8, fn=<built-in function getitem>)
2022-08-04 11:53:04,309 DEBUG on stmt: $0.10 = unary(fn=<built-in function neg>, value=$0.9)
2022-08-04 11:53:04,309 DEBUG on stmt: $const0.12 = const(int, 1)
2022-08-04 11:53:04,309 DEBUG on stmt: qout[1] = $0.10
2022-08-04 11:53:04,309 DEBUG on stmt: $const0.14 = const(int, 2)
2022-08-04 11:53:04,309 DEBUG on stmt: $0.15 = static_getitem(value=q, index=2, index_var=$const0.14, fn=<built-in function getitem>)
2022-08-04 11:53:04,309 DEBUG on stmt: $0.16 = unary(fn=<built-in function neg>, value=$0.15)
2022-08-04 11:53:04,309 DEBUG on stmt: $const0.18 = const(int, 2)
2022-08-04 11:53:04,309 DEBUG on stmt: qout[2] = $0.16
2022-08-04 11:53:04,309 DEBUG on stmt: $const0.20 = const(int, 3)
2022-08-04 11:53:04,309 DEBUG on stmt: $0.21 = static_getitem(value=q, index=3, index_var=$const0.20, fn=<built-in function getitem>)
2022-08-04 11:53:04,309 DEBUG on stmt: $0.22 = unary(fn=<built-in function neg>, value=$0.21)
2022-08-04 11:53:04,309 DEBUG on stmt: $const0.24 = const(int, 3)
2022-08-04 11:53:04,309 DEBUG on stmt: qout[3] = $0.22
2022-08-04 11:53:04,309 DEBUG on stmt: $const0.25 = const(NoneType, None)
2022-08-04 11:53:04,309 DEBUG on stmt: $0.26 = cast(value=$const0.25)
2022-08-04 11:53:04,309 DEBUG on stmt: return $0.26
2022-08-04 11:53:04,310 DEBUG defs defaultdict(<class 'list'>,
            {'$0.10': [<numba.core.ir.Assign object at 0x7fa2cdfa6908>],
             '$0.15': [<numba.core.ir.Assign object at 0x7fa2ce162198>],
             '$0.16': [<numba.core.ir.Assign object at 0x7fa2cdfa63c8>],
             '$0.21': [<numba.core.ir.Assign object at 0x7fa2ce162208>],
             '$0.22': [<numba.core.ir.Assign object at 0x7fa2ce14a588>],
             '$0.26': [<numba.core.ir.Assign object at 0x7fa2ce14ad68>],
             '$0.3': [<numba.core.ir.Assign object at 0x7fa2ce1620b8>],
             '$0.4': [<numba.core.ir.Assign object at 0x7fa2cdfa6ac8>],
             '$0.9': [<numba.core.ir.Assign object at 0x7fa2ce162128>],
             '$const0.12': [<numba.core.ir.Assign object at 0x7fa2cdfa6630>],
             '$const0.14': [<numba.core.ir.Assign object at 0x7fa2cdfa6710>],
             '$const0.18': [<numba.core.ir.Assign object at 0x7fa2cdfa60f0>],
             '$const0.2': [<numba.core.ir.Assign object at 0x7fa2cdf83fd0>],
             '$const0.20': [<numba.core.ir.Assign object at 0x7fa2cdfa6208>],
             '$const0.24': [<numba.core.ir.Assign object at 0x7fa2ce14a9b0>],
             '$const0.25': [<numba.core.ir.Assign object at 0x7fa2ce14aba8>],
             '$const0.6': [<numba.core.ir.Assign object at 0x7fa2cdfa6cc0>],
             '$const0.8': [<numba.core.ir.Assign object at 0x7fa2cdfa6ba8>],
             'q': [<numba.core.ir.Assign object at 0x7fa2cdf886a0>],
             'qout': [<numba.core.ir.Assign object at 0x7fa2cdf83828>]})
2022-08-04 11:53:04,310 DEBUG SSA violators set()
2022-08-04 11:53:04,400 DEBUG label 0:
    q = arg(0, name=q)                       ['q']
    qout = arg(1, name=qout)                 ['qout']
    $const0.2 = const(int, 0)                ['$const0.2']
    $0.3 = getitem(value=q, index=$const0.2, fn=<built-in function getitem>) ['$0.3', '$const0.2', 'q']
    $const0.5 = const(int, 0)                ['$const0.5']
    qout[$const0.5] = $0.3                   ['$0.3', '$const0.5', 'qout']
    $const0.7 = const(int, 1)                ['$const0.7']
    $0.8 = getitem(value=q, index=$const0.7, fn=<built-in function getitem>) ['$0.8', '$const0.7', 'q']
    $const0.10 = const(int, 1)               ['$const0.10']
    qout[$const0.10] = $0.8                  ['$0.8', '$const0.10', 'qout']
    $const0.12 = const(int, 2)               ['$const0.12']
    $0.13 = getitem(value=q, index=$const0.12, fn=<built-in function getitem>) ['$0.13', '$const0.12', 'q']
    $const0.15 = const(int, 2)               ['$const0.15']
    qout[$const0.15] = $0.13                 ['$0.13', '$const0.15', 'qout']
    $const0.17 = const(int, 3)               ['$const0.17']
    $0.18 = getitem(value=q, index=$const0.17, fn=<built-in function getitem>) ['$0.18', '$const0.17', 'q']
    $const0.20 = const(int, 3)               ['$const0.20']
    qout[$const0.20] = $0.18                 ['$0.18', '$const0.20', 'qout']
    $const0.21 = const(NoneType, None)       ['$const0.21']
    $0.22 = cast(value=$const0.21)           ['$0.22', '$const0.21']
    return $0.22                             ['$0.22']

2022-08-04 11:53:04,402 DEBUG ==== SSA block analysis pass on 0
2022-08-04 11:53:04,402 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdda7c18>
2022-08-04 11:53:04,402 DEBUG on stmt: q = arg(0, name=q)
2022-08-04 11:53:04,402 DEBUG on stmt: qout = arg(1, name=qout)
2022-08-04 11:53:04,402 DEBUG on stmt: $const0.2 = const(int, 0)
2022-08-04 11:53:04,402 DEBUG on stmt: $0.3 = static_getitem(value=q, index=0, index_var=$const0.2, fn=<built-in function getitem>)
2022-08-04 11:53:04,402 DEBUG on stmt: $const0.5 = const(int, 0)
2022-08-04 11:53:04,402 DEBUG on stmt: qout[0] = $0.3
2022-08-04 11:53:04,402 DEBUG on stmt: $const0.7 = const(int, 1)
2022-08-04 11:53:04,402 DEBUG on stmt: $0.8 = static_getitem(value=q, index=1, index_var=$const0.7, fn=<built-in function getitem>)
2022-08-04 11:53:04,402 DEBUG on stmt: $const0.10 = const(int, 1)
2022-08-04 11:53:04,402 DEBUG on stmt: qout[1] = $0.8
2022-08-04 11:53:04,402 DEBUG on stmt: $const0.12 = const(int, 2)
2022-08-04 11:53:04,402 DEBUG on stmt: $0.13 = static_getitem(value=q, index=2, index_var=$const0.12, fn=<built-in function getitem>)
2022-08-04 11:53:04,402 DEBUG on stmt: $const0.15 = const(int, 2)
2022-08-04 11:53:04,402 DEBUG on stmt: qout[2] = $0.13
2022-08-04 11:53:04,402 DEBUG on stmt: $const0.17 = const(int, 3)
2022-08-04 11:53:04,402 DEBUG on stmt: $0.18 = static_getitem(value=q, index=3, index_var=$const0.17, fn=<built-in function getitem>)
2022-08-04 11:53:04,403 DEBUG on stmt: $const0.20 = const(int, 3)
2022-08-04 11:53:04,403 DEBUG on stmt: qout[3] = $0.18
2022-08-04 11:53:04,403 DEBUG on stmt: $const0.21 = const(NoneType, None)
2022-08-04 11:53:04,403 DEBUG on stmt: $0.22 = cast(value=$const0.21)
2022-08-04 11:53:04,403 DEBUG on stmt: return $0.22
2022-08-04 11:53:04,403 DEBUG defs defaultdict(<class 'list'>,
            {'$0.13': [<numba.core.ir.Assign object at 0x7fa2cdda94a8>],
             '$0.18': [<numba.core.ir.Assign object at 0x7fa2cdda9198>],
             '$0.22': [<numba.core.ir.Assign object at 0x7fa2cdd80f28>],
             '$0.3': [<numba.core.ir.Assign object at 0x7fa2cdda93c8>],
             '$0.8': [<numba.core.ir.Assign object at 0x7fa2cdda9438>],
             '$const0.10': [<numba.core.ir.Assign object at 0x7fa2cdd80470>],
             '$const0.12': [<numba.core.ir.Assign object at 0x7fa2cdd80668>],
             '$const0.15': [<numba.core.ir.Assign object at 0x7fa2cdd808d0>],
             '$const0.17': [<numba.core.ir.Assign object at 0x7fa2cdd80ac8>],
             '$const0.2': [<numba.core.ir.Assign object at 0x7fa2cdda7f98>],
             '$const0.20': [<numba.core.ir.Assign object at 0x7fa2cdd80cf8>],
             '$const0.21': [<numba.core.ir.Assign object at 0x7fa2cdd80e48>],
             '$const0.5': [<numba.core.ir.Assign object at 0x7fa2cdda7358>],
             '$const0.7': [<numba.core.ir.Assign object at 0x7fa2cdd80208>],
             'q': [<numba.core.ir.Assign object at 0x7fa2cdda7da0>],
             'qout': [<numba.core.ir.Assign object at 0x7fa2cdda7eb8>]})
2022-08-04 11:53:04,403 DEBUG SSA violators set()
2022-08-04 11:53:04,509 DEBUG label 0:
    q = arg(0, name=q)                       ['q']
    s = arg(1, name=s)                       ['s']
    qout = arg(2, name=qout)                 ['qout']
    $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$0.1']
    $0.2 = getattr(value=$0.1, attr=sqrt)    ['$0.1', '$0.2']
    $const0.4 = const(int, 1)                ['$const0.4']
    $0.5 = getitem(value=q, index=$const0.4, fn=<built-in function getitem>) ['$0.5', '$const0.4', 'q']
    $const0.6 = const(int, 2)                ['$const0.6']
    $0.7 = $0.5 ** $const0.6                 ['$0.5', '$0.7', '$const0.6']
    $const0.9 = const(int, 2)                ['$const0.9']
    $0.10 = getitem(value=q, index=$const0.9, fn=<built-in function getitem>) ['$0.10', '$const0.9', 'q']
    $const0.11 = const(int, 2)               ['$const0.11']
    $0.12 = $0.10 ** $const0.11              ['$0.10', '$0.12', '$const0.11']
    $0.13 = $0.7 + $0.12                     ['$0.12', '$0.13', '$0.7']
    $const0.15 = const(int, 3)               ['$const0.15']
    $0.16 = getitem(value=q, index=$const0.15, fn=<built-in function getitem>) ['$0.16', '$const0.15', 'q']
    $const0.17 = const(int, 2)               ['$const0.17']
    $0.18 = $0.16 ** $const0.17              ['$0.16', '$0.18', '$const0.17']
    $0.19 = $0.13 + $0.18                    ['$0.13', '$0.18', '$0.19']
    b = call $0.2($0.19, func=$0.2, args=[Var($0.19, algebra.py:150)], kws=(), vararg=None) ['$0.19', '$0.2', 'b']
    $0.21 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$0.21']
    $0.22 = getattr(value=$0.21, attr=abs)   ['$0.21', '$0.22']
    $0.24 = call $0.22(b, func=$0.22, args=[Var(b, algebra.py:150)], kws=(), vararg=None) ['$0.22', '$0.24', 'b']
    $0.25 = global(_quaternion_resolution: 1.0000000000000002e-14) ['$0.25']
    $0.26 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$0.26']
    $0.27 = getattr(value=$0.26, attr=abs)   ['$0.26', '$0.27']
    $const0.29 = const(int, 0)               ['$const0.29']
    $0.30 = getitem(value=q, index=$const0.29, fn=<built-in function getitem>) ['$0.30', '$const0.29', 'q']
    $0.31 = call $0.27($0.30, func=$0.27, args=[Var($0.30, algebra.py:151)], kws=(), vararg=None) ['$0.27', '$0.30', '$0.31']
    $0.32 = $0.25 * $0.31                    ['$0.25', '$0.31', '$0.32']
    $0.33 = $0.24 <= $0.32                   ['$0.24', '$0.32', '$0.33']
    bool70 = global(bool: <class 'bool'>)    ['bool70']
    $70pred = call bool70($0.33, func=bool70, args=(Var($0.33, algebra.py:151),), kws=(), vararg=None) ['$0.33', '$70pred', 'bool70']
    branch $70pred, 72, 234                  ['$70pred']
label 72:
    $const72.2 = const(int, 0)               ['$const72.2']
    $72.3 = getitem(value=q, index=$const72.2, fn=<built-in function getitem>) ['$72.3', '$const72.2', 'q']
    $const72.4 = const(float, 0.0)           ['$const72.4']
    $72.5 = $72.3 < $const72.4               ['$72.3', '$72.5', '$const72.4']
    bool82 = global(bool: <class 'bool'>)    ['bool82']
    $82pred = call bool82($72.5, func=bool82, args=(Var($72.5, algebra.py:152),), kws=(), vararg=None) ['$72.5', '$82pred', 'bool82']
    branch $82pred, 84, 190                  ['$82pred']
label 84:
    $84.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$84.1']
    $84.2 = getattr(value=$84.1, attr=abs)   ['$84.1', '$84.2']
    $const84.4 = const(int, 0)               ['$const84.4']
    $84.5 = getitem(value=q, index=$const84.4, fn=<built-in function getitem>) ['$84.5', '$const84.4', 'q']
    $const84.6 = const(int, 1)               ['$const84.6']
    $84.7 = $84.5 + $const84.6               ['$84.5', '$84.7', '$const84.6']
    $84.8 = call $84.2($84.7, func=$84.2, args=[Var($84.7, algebra.py:153)], kws=(), vararg=None) ['$84.2', '$84.7', '$84.8']
    $84.9 = global(_quaternion_resolution: 1.0000000000000002e-14) ['$84.9']
    $84.10 = $84.8 > $84.9                   ['$84.10', '$84.8', '$84.9']
    bool104 = global(bool: <class 'bool'>)   ['bool104']
    $104pred = call bool104($84.10, func=bool104, args=(Var($84.10, algebra.py:153),), kws=(), vararg=None) ['$104pred', '$84.10', 'bool104']
    branch $104pred, 106, 154                ['$104pred']
label 106:
    $106.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$106.1']
    $106.2 = getattr(value=$106.1, attr=log) ['$106.1', '$106.2']
    $const106.4 = const(int, 0)              ['$const106.4']
    $106.5 = getitem(value=q, index=$const106.4, fn=<built-in function getitem>) ['$106.5', '$const106.4', 'q']
    $106.6 = unary(fn=<built-in function neg>, value=$106.5) ['$106.5', '$106.6']
    $106.7 = call $106.2($106.6, func=$106.2, args=[Var($106.6, algebra.py:154)], kws=(), vararg=None) ['$106.2', '$106.6', '$106.7']
    $const106.9 = const(int, 0)              ['$const106.9']
    qout[$const106.9] = $106.7               ['$106.7', '$const106.9', 'qout']
    $106.10 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$106.10']
    $106.11 = getattr(value=$106.10, attr=pi) ['$106.10', '$106.11']
    $const106.13 = const(int, 1)             ['$const106.13']
    qout[$const106.13] = $106.11             ['$106.11', '$const106.13', 'qout']
    $const106.14 = const(float, 0.0)         ['$const106.14']
    $const106.16 = const(int, 2)             ['$const106.16']
    qout[$const106.16] = $const106.14        ['$const106.14', '$const106.16', 'qout']
    $const106.17 = const(float, 0.0)         ['$const106.17']
    $const106.19 = const(int, 3)             ['$const106.19']
    qout[$const106.19] = $const106.17        ['$const106.17', '$const106.19', 'qout']
    jump 232                                 []
label 154:
    $const154.1 = const(float, 0.0)          ['$const154.1']
    $const154.3 = const(int, 0)              ['$const154.3']
    qout[$const154.3] = $const154.1          ['$const154.1', '$const154.3', 'qout']
    $154.4 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$154.4']
    $154.5 = getattr(value=$154.4, attr=pi)  ['$154.4', '$154.5']
    $const154.7 = const(int, 1)              ['$const154.7']
    qout[$const154.7] = $154.5               ['$154.5', '$const154.7', 'qout']
    $const154.8 = const(float, 0.0)          ['$const154.8']
    $const154.10 = const(int, 2)             ['$const154.10']
    qout[$const154.10] = $const154.8         ['$const154.10', '$const154.8', 'qout']
    $const154.11 = const(float, 0.0)         ['$const154.11']
    $const154.13 = const(int, 3)             ['$const154.13']
    qout[$const154.13] = $const154.11        ['$const154.11', '$const154.13', 'qout']
    jump 232                                 []
label 190:
    $190.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$190.1']
    $190.2 = getattr(value=$190.1, attr=log) ['$190.1', '$190.2']
    $const190.4 = const(int, 0)              ['$const190.4']
    $190.5 = getitem(value=q, index=$const190.4, fn=<built-in function getitem>) ['$190.5', '$const190.4', 'q']
    $190.6 = call $190.2($190.5, func=$190.2, args=[Var($190.5, algebra.py:164)], kws=(), vararg=None) ['$190.2', '$190.5', '$190.6']
    $const190.8 = const(int, 0)              ['$const190.8']
    qout[$const190.8] = $190.6               ['$190.6', '$const190.8', 'qout']
    $const190.9 = const(float, 0.0)          ['$const190.9']
    $const190.11 = const(int, 1)             ['$const190.11']
    qout[$const190.11] = $const190.9         ['$const190.11', '$const190.9', 'qout']
    $const190.12 = const(float, 0.0)         ['$const190.12']
    $const190.14 = const(int, 2)             ['$const190.14']
    qout[$const190.14] = $const190.12        ['$const190.12', '$const190.14', 'qout']
    $const190.15 = const(float, 0.0)         ['$const190.15']
    $const190.17 = const(int, 3)             ['$const190.17']
    qout[$const190.17] = $const190.15        ['$const190.15', '$const190.17', 'qout']
    jump 232                                 []
label 232:
    jump 344                                 []
label 234:
    $234.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$234.1']
    $234.2 = getattr(value=$234.1, attr=arctan2) ['$234.1', '$234.2']
    $const234.5 = const(int, 0)              ['$const234.5']
    $234.6 = getitem(value=q, index=$const234.5, fn=<built-in function getitem>) ['$234.6', '$const234.5', 'q']
    v = call $234.2(b, $234.6, func=$234.2, args=[Var(b, algebra.py:150), Var($234.6, algebra.py:169)], kws=(), vararg=None) ['$234.2', '$234.6', 'b', 'v']
    f = v / b                                ['b', 'f', 'v']
    $234.11 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$234.11']
    $234.12 = getattr(value=$234.11, attr=log) ['$234.11', '$234.12']
    $const234.14 = const(int, 0)             ['$const234.14']
    $234.15 = getitem(value=q, index=$const234.14, fn=<built-in function getitem>) ['$234.15', '$const234.14', 'q']
    $const234.17 = const(int, 0)             ['$const234.17']
    $234.18 = getitem(value=q, index=$const234.17, fn=<built-in function getitem>) ['$234.18', '$const234.17', 'q']
    $234.19 = $234.15 * $234.18              ['$234.15', '$234.18', '$234.19']
    $234.22 = b * b                          ['$234.22', 'b', 'b']
    $234.23 = $234.19 + $234.22              ['$234.19', '$234.22', '$234.23']
    $234.24 = call $234.12($234.23, func=$234.12, args=[Var($234.23, algebra.py:171)], kws=(), vararg=None) ['$234.12', '$234.23', '$234.24']
    $const234.25 = const(float, 2.0)         ['$const234.25']
    $234.26 = $234.24 / $const234.25         ['$234.24', '$234.26', '$const234.25']
    $const234.28 = const(int, 0)             ['$const234.28']
    qout[$const234.28] = $234.26             ['$234.26', '$const234.28', 'qout']
    $const234.31 = const(int, 1)             ['$const234.31']
    $234.32 = getitem(value=q, index=$const234.31, fn=<built-in function getitem>) ['$234.32', '$const234.31', 'q']
    $234.33 = f * $234.32                    ['$234.32', '$234.33', 'f']
    $const234.35 = const(int, 1)             ['$const234.35']
    qout[$const234.35] = $234.33             ['$234.33', '$const234.35', 'qout']
    $const234.38 = const(int, 2)             ['$const234.38']
    $234.39 = getitem(value=q, index=$const234.38, fn=<built-in function getitem>) ['$234.39', '$const234.38', 'q']
    $234.40 = f * $234.39                    ['$234.39', '$234.40', 'f']
    $const234.42 = const(int, 2)             ['$const234.42']
    qout[$const234.42] = $234.40             ['$234.40', '$const234.42', 'qout']
    $const234.45 = const(int, 3)             ['$const234.45']
    $234.46 = getitem(value=q, index=$const234.45, fn=<built-in function getitem>) ['$234.46', '$const234.45', 'q']
    $234.47 = f * $234.46                    ['$234.46', '$234.47', 'f']
    $const234.49 = const(int, 3)             ['$const234.49']
    qout[$const234.49] = $234.47             ['$234.47', '$const234.49', 'qout']
    jump 344                                 []
label 344:
    qout.1 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=qout, rhs=s, static_lhs=Undefined, static_rhs=Undefined) ['qout', 'qout.1', 's']
    $344.4 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$344.4']
    $344.5 = getattr(value=$344.4, attr=sqrt) ['$344.4', '$344.5']
    $const344.7 = const(int, 1)              ['$const344.7']
    $344.8 = getitem(value=qout.1, index=$const344.7, fn=<built-in function getitem>) ['$344.8', '$const344.7', 'qout.1']
    $const344.9 = const(int, 2)              ['$const344.9']
    $344.10 = $344.8 ** $const344.9          ['$344.10', '$344.8', '$const344.9']
    $const344.12 = const(int, 2)             ['$const344.12']
    $344.13 = getitem(value=qout.1, index=$const344.12, fn=<built-in function getitem>) ['$344.13', '$const344.12', 'qout.1']
    $const344.14 = const(int, 2)             ['$const344.14']
    $344.15 = $344.13 ** $const344.14        ['$344.13', '$344.15', '$const344.14']
    $344.16 = $344.10 + $344.15              ['$344.10', '$344.15', '$344.16']
    $const344.18 = const(int, 3)             ['$const344.18']
    $344.19 = getitem(value=qout.1, index=$const344.18, fn=<built-in function getitem>) ['$344.19', '$const344.18', 'qout.1']
    $const344.20 = const(int, 2)             ['$const344.20']
    $344.21 = $344.19 ** $const344.20        ['$344.19', '$344.21', '$const344.20']
    $344.22 = $344.16 + $344.21              ['$344.16', '$344.21', '$344.22']
    vnorm = call $344.5($344.22, func=$344.5, args=[Var($344.22, algebra.py:176)], kws=(), vararg=None) ['$344.22', '$344.5', 'vnorm']
    $344.25 = global(_quaternion_resolution: 1.0000000000000002e-14) ['$344.25']
    $344.26 = vnorm > $344.25                ['$344.25', '$344.26', 'vnorm']
    bool400 = global(bool: <class 'bool'>)   ['bool400']
    $400pred = call bool400($344.26, func=bool400, args=(Var($344.26, algebra.py:177),), kws=(), vararg=None) ['$344.26', '$400pred', 'bool400']
    branch $400pred, 404, 472                ['$400pred']
label 404:
    $404.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$404.1']
    $404.2 = getattr(value=$404.1, attr=exp) ['$404.1', '$404.2']
    $const404.4 = const(int, 0)              ['$const404.4']
    $404.5 = getitem(value=qout.1, index=$const404.4, fn=<built-in function getitem>) ['$404.5', '$const404.4', 'qout.1']
    e = call $404.2($404.5, func=$404.2, args=[Var($404.5, algebra.py:178)], kws=(), vararg=None) ['$404.2', '$404.5', 'e']
    $404.8 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$404.8']
    $404.9 = getattr(value=$404.8, attr=cos) ['$404.8', '$404.9']
    $404.11 = call $404.9(vnorm, func=$404.9, args=[Var(vnorm, algebra.py:176)], kws=(), vararg=None) ['$404.11', '$404.9', 'vnorm']
    $404.12 = e * $404.11                    ['$404.11', '$404.12', 'e']
    $const404.14 = const(int, 0)             ['$const404.14']
    qout.1[$const404.14] = $404.12           ['$404.12', '$const404.14', 'qout.1']
    $const404.16 = const(int, 1)             ['$const404.16']
    $const404.17 = const(NoneType, None)     ['$const404.17']
    $404.18 = global(slice: <class 'slice'>) ['$404.18']
    $404.19 = call $404.18($const404.16, $const404.17, func=$404.18, args=(Var($const404.16, algebra.py:180), Var($const404.17, algebra.py:180)), kws=(), vararg=None) ['$404.18', '$404.19', '$const404.16', '$const404.17']
    $404.22 = getitem(value=qout.1, index=$404.19, fn=<built-in function getitem>) ['$404.19', '$404.22', 'qout.1']
    $404.24 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$404.24']
    $404.25 = getattr(value=$404.24, attr=sin) ['$404.24', '$404.25']
    $404.27 = call $404.25(vnorm, func=$404.25, args=[Var(vnorm, algebra.py:176)], kws=(), vararg=None) ['$404.25', '$404.27', 'vnorm']
    $404.28 = e * $404.27                    ['$404.27', '$404.28', 'e']
    $404.30 = $404.28 / vnorm                ['$404.28', '$404.30', 'vnorm']
    $404.31 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=$404.22, rhs=$404.30, static_lhs=Undefined, static_rhs=Undefined) ['$404.22', '$404.30', '$404.31']
    qout.1[$404.19] = $404.31                ['$404.19', '$404.31', 'qout.1']
    jump 514                                 []
label 472:
    $472.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$472.1']
    $472.2 = getattr(value=$472.1, attr=exp) ['$472.1', '$472.2']
    $const472.4 = const(int, 0)              ['$const472.4']
    $472.5 = getitem(value=qout.1, index=$const472.4, fn=<built-in function getitem>) ['$472.5', '$const472.4', 'qout.1']
    $472.6 = call $472.2($472.5, func=$472.2, args=[Var($472.5, algebra.py:182)], kws=(), vararg=None) ['$472.2', '$472.5', '$472.6']
    $const472.8 = const(int, 0)              ['$const472.8']
    qout.1[$const472.8] = $472.6             ['$472.6', '$const472.8', 'qout.1']
    $const472.9 = const(float, 0.0)          ['$const472.9']
    $const472.11 = const(int, 1)             ['$const472.11']
    qout.1[$const472.11] = $const472.9       ['$const472.11', '$const472.9', 'qout.1']
    $const472.12 = const(float, 0.0)         ['$const472.12']
    $const472.14 = const(int, 2)             ['$const472.14']
    qout.1[$const472.14] = $const472.12      ['$const472.12', '$const472.14', 'qout.1']
    $const472.15 = const(float, 0.0)         ['$const472.15']
    $const472.17 = const(int, 3)             ['$const472.17']
    qout.1[$const472.17] = $const472.15      ['$const472.15', '$const472.17', 'qout.1']
    jump 514                                 []
label 514:
    $const514.1 = const(NoneType, None)      ['$const514.1']
    $514.2 = cast(value=$const514.1)         ['$514.2', '$const514.1']
    return $514.2                            ['$514.2']

2022-08-04 11:53:04,540 DEBUG ==== SSA block analysis pass on 0
2022-08-04 11:53:04,540 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdec47f0>
2022-08-04 11:53:04,540 DEBUG on stmt: q = arg(0, name=q)
2022-08-04 11:53:04,540 DEBUG on stmt: s = arg(1, name=s)
2022-08-04 11:53:04,540 DEBUG on stmt: qout = arg(2, name=qout)
2022-08-04 11:53:04,540 DEBUG on stmt: $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:04,540 DEBUG on stmt: $0.2 = getattr(value=$0.1, attr=sqrt)
2022-08-04 11:53:04,540 DEBUG on stmt: $const0.4 = const(int, 1)
2022-08-04 11:53:04,540 DEBUG on stmt: $0.5 = static_getitem(value=q, index=1, index_var=$const0.4, fn=<built-in function getitem>)
2022-08-04 11:53:04,540 DEBUG on stmt: $const0.6 = const(int, 2)
2022-08-04 11:53:04,541 DEBUG on stmt: $0.7 = $0.5 ** $const0.6
2022-08-04 11:53:04,541 DEBUG on stmt: $const0.9 = const(int, 2)
2022-08-04 11:53:04,541 DEBUG on stmt: $0.10 = static_getitem(value=q, index=2, index_var=$const0.9, fn=<built-in function getitem>)
2022-08-04 11:53:04,541 DEBUG on stmt: $const0.11 = const(int, 2)
2022-08-04 11:53:04,541 DEBUG on stmt: $0.12 = $0.10 ** $const0.11
2022-08-04 11:53:04,541 DEBUG on stmt: $0.13 = $0.7 + $0.12
2022-08-04 11:53:04,541 DEBUG on stmt: $const0.15 = const(int, 3)
2022-08-04 11:53:04,541 DEBUG on stmt: $0.16 = static_getitem(value=q, index=3, index_var=$const0.15, fn=<built-in function getitem>)
2022-08-04 11:53:04,541 DEBUG on stmt: $const0.17 = const(int, 2)
2022-08-04 11:53:04,541 DEBUG on stmt: $0.18 = $0.16 ** $const0.17
2022-08-04 11:53:04,541 DEBUG on stmt: $0.19 = $0.13 + $0.18
2022-08-04 11:53:04,541 DEBUG on stmt: b = call $0.2($0.19, func=$0.2, args=[Var($0.19, algebra.py:150)], kws=(), vararg=None)
2022-08-04 11:53:04,541 DEBUG on stmt: $0.21 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:04,542 DEBUG on stmt: $0.22 = getattr(value=$0.21, attr=abs)
2022-08-04 11:53:04,542 DEBUG on stmt: $0.24 = call $0.22(b, func=$0.22, args=[Var(b, algebra.py:150)], kws=(), vararg=None)
2022-08-04 11:53:04,542 DEBUG on stmt: $0.25 = global(_quaternion_resolution: 1.0000000000000002e-14)
2022-08-04 11:53:04,542 DEBUG on stmt: $0.26 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:04,542 DEBUG on stmt: $0.27 = getattr(value=$0.26, attr=abs)
2022-08-04 11:53:04,542 DEBUG on stmt: $const0.29 = const(int, 0)
2022-08-04 11:53:04,542 DEBUG on stmt: $0.30 = static_getitem(value=q, index=0, index_var=$const0.29, fn=<built-in function getitem>)
2022-08-04 11:53:04,542 DEBUG on stmt: $0.31 = call $0.27($0.30, func=$0.27, args=[Var($0.30, algebra.py:151)], kws=(), vararg=None)
2022-08-04 11:53:04,542 DEBUG on stmt: $0.32 = $0.25 * $0.31
2022-08-04 11:53:04,542 DEBUG on stmt: $0.33 = $0.24 <= $0.32
2022-08-04 11:53:04,542 DEBUG on stmt: bool70 = global(bool: <class 'bool'>)
2022-08-04 11:53:04,543 DEBUG on stmt: $70pred = call bool70($0.33, func=bool70, args=(Var($0.33, algebra.py:151),), kws=(), vararg=None)
2022-08-04 11:53:04,543 DEBUG on stmt: branch $70pred, 72, 234
2022-08-04 11:53:04,543 DEBUG ==== SSA block analysis pass on 72
2022-08-04 11:53:04,543 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdec47f0>
2022-08-04 11:53:04,543 DEBUG on stmt: $const72.2 = const(int, 0)
2022-08-04 11:53:04,543 DEBUG on stmt: $72.3 = static_getitem(value=q, index=0, index_var=$const72.2, fn=<built-in function getitem>)
2022-08-04 11:53:04,543 DEBUG on stmt: $const72.4 = const(float, 0.0)
2022-08-04 11:53:04,543 DEBUG on stmt: $72.5 = $72.3 < $const72.4
2022-08-04 11:53:04,543 DEBUG on stmt: bool82 = global(bool: <class 'bool'>)
2022-08-04 11:53:04,543 DEBUG on stmt: $82pred = call bool82($72.5, func=bool82, args=(Var($72.5, algebra.py:152),), kws=(), vararg=None)
2022-08-04 11:53:04,543 DEBUG on stmt: branch $82pred, 84, 190
2022-08-04 11:53:04,543 DEBUG ==== SSA block analysis pass on 84
2022-08-04 11:53:04,544 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdec47f0>
2022-08-04 11:53:04,544 DEBUG on stmt: $84.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:04,544 DEBUG on stmt: $84.2 = getattr(value=$84.1, attr=abs)
2022-08-04 11:53:04,544 DEBUG on stmt: $const84.4 = const(int, 0)
2022-08-04 11:53:04,544 DEBUG on stmt: $84.5 = static_getitem(value=q, index=0, index_var=$const84.4, fn=<built-in function getitem>)
2022-08-04 11:53:04,544 DEBUG on stmt: $const84.6 = const(int, 1)
2022-08-04 11:53:04,544 DEBUG on stmt: $84.7 = $84.5 + $const84.6
2022-08-04 11:53:04,544 DEBUG on stmt: $84.8 = call $84.2($84.7, func=$84.2, args=[Var($84.7, algebra.py:153)], kws=(), vararg=None)
2022-08-04 11:53:04,544 DEBUG on stmt: $84.9 = global(_quaternion_resolution: 1.0000000000000002e-14)
2022-08-04 11:53:04,544 DEBUG on stmt: $84.10 = $84.8 > $84.9
2022-08-04 11:53:04,544 DEBUG on stmt: bool104 = global(bool: <class 'bool'>)
2022-08-04 11:53:04,544 DEBUG on stmt: $104pred = call bool104($84.10, func=bool104, args=(Var($84.10, algebra.py:153),), kws=(), vararg=None)
2022-08-04 11:53:04,545 DEBUG on stmt: branch $104pred, 106, 154
2022-08-04 11:53:04,545 DEBUG ==== SSA block analysis pass on 106
2022-08-04 11:53:04,545 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdec47f0>
2022-08-04 11:53:04,545 DEBUG on stmt: $106.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:04,545 DEBUG on stmt: $106.2 = getattr(value=$106.1, attr=log)
2022-08-04 11:53:04,545 DEBUG on stmt: $const106.4 = const(int, 0)
2022-08-04 11:53:04,545 DEBUG on stmt: $106.5 = static_getitem(value=q, index=0, index_var=$const106.4, fn=<built-in function getitem>)
2022-08-04 11:53:04,545 DEBUG on stmt: $106.6 = unary(fn=<built-in function neg>, value=$106.5)
2022-08-04 11:53:04,545 DEBUG on stmt: $106.7 = call $106.2($106.6, func=$106.2, args=[Var($106.6, algebra.py:154)], kws=(), vararg=None)
2022-08-04 11:53:04,545 DEBUG on stmt: $const106.9 = const(int, 0)
2022-08-04 11:53:04,546 DEBUG on stmt: qout[0] = $106.7
2022-08-04 11:53:04,546 DEBUG on stmt: $106.10 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:04,546 DEBUG on stmt: $106.11 = getattr(value=$106.10, attr=pi)
2022-08-04 11:53:04,546 DEBUG on stmt: $const106.13 = const(int, 1)
2022-08-04 11:53:04,546 DEBUG on stmt: qout[1] = $106.11
2022-08-04 11:53:04,546 DEBUG on stmt: $const106.14 = const(float, 0.0)
2022-08-04 11:53:04,546 DEBUG on stmt: $const106.16 = const(int, 2)
2022-08-04 11:53:04,546 DEBUG on stmt: qout[2] = $const106.14
2022-08-04 11:53:04,546 DEBUG on stmt: $const106.17 = const(float, 0.0)
2022-08-04 11:53:04,546 DEBUG on stmt: $const106.19 = const(int, 3)
2022-08-04 11:53:04,546 DEBUG on stmt: qout[3] = $const106.17
2022-08-04 11:53:04,546 DEBUG on stmt: jump 232
2022-08-04 11:53:04,546 DEBUG ==== SSA block analysis pass on 154
2022-08-04 11:53:04,546 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdec47f0>
2022-08-04 11:53:04,547 DEBUG on stmt: $const154.1 = const(float, 0.0)
2022-08-04 11:53:04,547 DEBUG on stmt: $const154.3 = const(int, 0)
2022-08-04 11:53:04,547 DEBUG on stmt: qout[0] = $const154.1
2022-08-04 11:53:04,547 DEBUG on stmt: $154.4 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:04,547 DEBUG on stmt: $154.5 = getattr(value=$154.4, attr=pi)
2022-08-04 11:53:04,547 DEBUG on stmt: $const154.7 = const(int, 1)
2022-08-04 11:53:04,547 DEBUG on stmt: qout[1] = $154.5
2022-08-04 11:53:04,547 DEBUG on stmt: $const154.8 = const(float, 0.0)
2022-08-04 11:53:04,547 DEBUG on stmt: $const154.10 = const(int, 2)
2022-08-04 11:53:04,547 DEBUG on stmt: qout[2] = $const154.8
2022-08-04 11:53:04,547 DEBUG on stmt: $const154.11 = const(float, 0.0)
2022-08-04 11:53:04,547 DEBUG on stmt: $const154.13 = const(int, 3)
2022-08-04 11:53:04,548 DEBUG on stmt: qout[3] = $const154.11
2022-08-04 11:53:04,548 DEBUG on stmt: jump 232
2022-08-04 11:53:04,548 DEBUG ==== SSA block analysis pass on 190
2022-08-04 11:53:04,548 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdec47f0>
2022-08-04 11:53:04,548 DEBUG on stmt: $190.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:04,548 DEBUG on stmt: $190.2 = getattr(value=$190.1, attr=log)
2022-08-04 11:53:04,548 DEBUG on stmt: $const190.4 = const(int, 0)
2022-08-04 11:53:04,548 DEBUG on stmt: $190.5 = static_getitem(value=q, index=0, index_var=$const190.4, fn=<built-in function getitem>)
2022-08-04 11:53:04,548 DEBUG on stmt: $190.6 = call $190.2($190.5, func=$190.2, args=[Var($190.5, algebra.py:164)], kws=(), vararg=None)
2022-08-04 11:53:04,548 DEBUG on stmt: $const190.8 = const(int, 0)
2022-08-04 11:53:04,548 DEBUG on stmt: qout[0] = $190.6
2022-08-04 11:53:04,548 DEBUG on stmt: $const190.9 = const(float, 0.0)
2022-08-04 11:53:04,549 DEBUG on stmt: $const190.11 = const(int, 1)
2022-08-04 11:53:04,549 DEBUG on stmt: qout[1] = $const190.9
2022-08-04 11:53:04,549 DEBUG on stmt: $const190.12 = const(float, 0.0)
2022-08-04 11:53:04,549 DEBUG on stmt: $const190.14 = const(int, 2)
2022-08-04 11:53:04,549 DEBUG on stmt: qout[2] = $const190.12
2022-08-04 11:53:04,549 DEBUG on stmt: $const190.15 = const(float, 0.0)
2022-08-04 11:53:04,549 DEBUG on stmt: $const190.17 = const(int, 3)
2022-08-04 11:53:04,549 DEBUG on stmt: qout[3] = $const190.15
2022-08-04 11:53:04,549 DEBUG on stmt: jump 232
2022-08-04 11:53:04,549 DEBUG ==== SSA block analysis pass on 232
2022-08-04 11:53:04,549 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdec47f0>
2022-08-04 11:53:04,549 DEBUG on stmt: jump 344
2022-08-04 11:53:04,549 DEBUG ==== SSA block analysis pass on 234
2022-08-04 11:53:04,550 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdec47f0>
2022-08-04 11:53:04,550 DEBUG on stmt: $234.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:04,550 DEBUG on stmt: $234.2 = getattr(value=$234.1, attr=arctan2)
2022-08-04 11:53:04,550 DEBUG on stmt: $const234.5 = const(int, 0)
2022-08-04 11:53:04,550 DEBUG on stmt: $234.6 = static_getitem(value=q, index=0, index_var=$const234.5, fn=<built-in function getitem>)
2022-08-04 11:53:04,550 DEBUG on stmt: v = call $234.2(b, $234.6, func=$234.2, args=[Var(b, algebra.py:150), Var($234.6, algebra.py:169)], kws=(), vararg=None)
2022-08-04 11:53:04,550 DEBUG on stmt: f = v / b
2022-08-04 11:53:04,550 DEBUG on stmt: $234.11 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:04,550 DEBUG on stmt: $234.12 = getattr(value=$234.11, attr=log)
2022-08-04 11:53:04,550 DEBUG on stmt: $const234.14 = const(int, 0)
2022-08-04 11:53:04,551 DEBUG on stmt: $234.15 = static_getitem(value=q, index=0, index_var=$const234.14, fn=<built-in function getitem>)
2022-08-04 11:53:04,551 DEBUG on stmt: $const234.17 = const(int, 0)
2022-08-04 11:53:04,551 DEBUG on stmt: $234.18 = static_getitem(value=q, index=0, index_var=$const234.17, fn=<built-in function getitem>)
2022-08-04 11:53:04,551 DEBUG on stmt: $234.19 = $234.15 * $234.18
2022-08-04 11:53:04,551 DEBUG on stmt: $234.22 = b * b
2022-08-04 11:53:04,551 DEBUG on stmt: $234.23 = $234.19 + $234.22
2022-08-04 11:53:04,551 DEBUG on stmt: $234.24 = call $234.12($234.23, func=$234.12, args=[Var($234.23, algebra.py:171)], kws=(), vararg=None)
2022-08-04 11:53:04,551 DEBUG on stmt: $const234.25 = const(float, 2.0)
2022-08-04 11:53:04,551 DEBUG on stmt: $234.26 = $234.24 / $const234.25
2022-08-04 11:53:04,551 DEBUG on stmt: $const234.28 = const(int, 0)
2022-08-04 11:53:04,551 DEBUG on stmt: qout[0] = $234.26
2022-08-04 11:53:04,551 DEBUG on stmt: $const234.31 = const(int, 1)
2022-08-04 11:53:04,552 DEBUG on stmt: $234.32 = static_getitem(value=q, index=1, index_var=$const234.31, fn=<built-in function getitem>)
2022-08-04 11:53:04,552 DEBUG on stmt: $234.33 = f * $234.32
2022-08-04 11:53:04,552 DEBUG on stmt: $const234.35 = const(int, 1)
2022-08-04 11:53:04,552 DEBUG on stmt: qout[1] = $234.33
2022-08-04 11:53:04,552 DEBUG on stmt: $const234.38 = const(int, 2)
2022-08-04 11:53:04,552 DEBUG on stmt: $234.39 = static_getitem(value=q, index=2, index_var=$const234.38, fn=<built-in function getitem>)
2022-08-04 11:53:04,552 DEBUG on stmt: $234.40 = f * $234.39
2022-08-04 11:53:04,552 DEBUG on stmt: $const234.42 = const(int, 2)
2022-08-04 11:53:04,552 DEBUG on stmt: qout[2] = $234.40
2022-08-04 11:53:04,552 DEBUG on stmt: $const234.45 = const(int, 3)
2022-08-04 11:53:04,552 DEBUG on stmt: $234.46 = static_getitem(value=q, index=3, index_var=$const234.45, fn=<built-in function getitem>)
2022-08-04 11:53:04,552 DEBUG on stmt: $234.47 = f * $234.46
2022-08-04 11:53:04,552 DEBUG on stmt: $const234.49 = const(int, 3)
2022-08-04 11:53:04,553 DEBUG on stmt: qout[3] = $234.47
2022-08-04 11:53:04,553 DEBUG on stmt: jump 344
2022-08-04 11:53:04,553 DEBUG ==== SSA block analysis pass on 344
2022-08-04 11:53:04,553 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdec47f0>
2022-08-04 11:53:04,553 DEBUG on stmt: qout.1 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=qout, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:53:04,553 DEBUG on stmt: $344.4 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:04,553 DEBUG on stmt: $344.5 = getattr(value=$344.4, attr=sqrt)
2022-08-04 11:53:04,553 DEBUG on stmt: $const344.7 = const(int, 1)
2022-08-04 11:53:04,553 DEBUG on stmt: $344.8 = static_getitem(value=qout.1, index=1, index_var=$const344.7, fn=<built-in function getitem>)
2022-08-04 11:53:04,553 DEBUG on stmt: $const344.9 = const(int, 2)
2022-08-04 11:53:04,553 DEBUG on stmt: $344.10 = $344.8 ** $const344.9
2022-08-04 11:53:04,553 DEBUG on stmt: $const344.12 = const(int, 2)
2022-08-04 11:53:04,553 DEBUG on stmt: $344.13 = static_getitem(value=qout.1, index=2, index_var=$const344.12, fn=<built-in function getitem>)
2022-08-04 11:53:04,554 DEBUG on stmt: $const344.14 = const(int, 2)
2022-08-04 11:53:04,554 DEBUG on stmt: $344.15 = $344.13 ** $const344.14
2022-08-04 11:53:04,554 DEBUG on stmt: $344.16 = $344.10 + $344.15
2022-08-04 11:53:04,554 DEBUG on stmt: $const344.18 = const(int, 3)
2022-08-04 11:53:04,554 DEBUG on stmt: $344.19 = static_getitem(value=qout.1, index=3, index_var=$const344.18, fn=<built-in function getitem>)
2022-08-04 11:53:04,554 DEBUG on stmt: $const344.20 = const(int, 2)
2022-08-04 11:53:04,554 DEBUG on stmt: $344.21 = $344.19 ** $const344.20
2022-08-04 11:53:04,554 DEBUG on stmt: $344.22 = $344.16 + $344.21
2022-08-04 11:53:04,554 DEBUG on stmt: vnorm = call $344.5($344.22, func=$344.5, args=[Var($344.22, algebra.py:176)], kws=(), vararg=None)
2022-08-04 11:53:04,554 DEBUG on stmt: $344.25 = global(_quaternion_resolution: 1.0000000000000002e-14)
2022-08-04 11:53:04,554 DEBUG on stmt: $344.26 = vnorm > $344.25
2022-08-04 11:53:04,555 DEBUG on stmt: bool400 = global(bool: <class 'bool'>)
2022-08-04 11:53:04,555 DEBUG on stmt: $400pred = call bool400($344.26, func=bool400, args=(Var($344.26, algebra.py:177),), kws=(), vararg=None)
2022-08-04 11:53:04,555 DEBUG on stmt: branch $400pred, 404, 472
2022-08-04 11:53:04,555 DEBUG ==== SSA block analysis pass on 404
2022-08-04 11:53:04,555 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdec47f0>
2022-08-04 11:53:04,555 DEBUG on stmt: $404.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:04,555 DEBUG on stmt: $404.2 = getattr(value=$404.1, attr=exp)
2022-08-04 11:53:04,555 DEBUG on stmt: $const404.4 = const(int, 0)
2022-08-04 11:53:04,555 DEBUG on stmt: $404.5 = static_getitem(value=qout.1, index=0, index_var=$const404.4, fn=<built-in function getitem>)
2022-08-04 11:53:04,555 DEBUG on stmt: e = call $404.2($404.5, func=$404.2, args=[Var($404.5, algebra.py:178)], kws=(), vararg=None)
2022-08-04 11:53:04,555 DEBUG on stmt: $404.8 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:04,556 DEBUG on stmt: $404.9 = getattr(value=$404.8, attr=cos)
2022-08-04 11:53:04,556 DEBUG on stmt: $404.11 = call $404.9(vnorm, func=$404.9, args=[Var(vnorm, algebra.py:176)], kws=(), vararg=None)
2022-08-04 11:53:04,556 DEBUG on stmt: $404.12 = e * $404.11
2022-08-04 11:53:04,556 DEBUG on stmt: $const404.14 = const(int, 0)
2022-08-04 11:53:04,556 DEBUG on stmt: qout.1[0] = $404.12
2022-08-04 11:53:04,556 DEBUG on stmt: $const404.16 = const(int, 1)
2022-08-04 11:53:04,556 DEBUG on stmt: $const404.17 = const(NoneType, None)
2022-08-04 11:53:04,556 DEBUG on stmt: $404.18 = global(slice: <class 'slice'>)
2022-08-04 11:53:04,556 DEBUG on stmt: $404.19 = call $404.18($const404.16, $const404.17, func=$404.18, args=(Var($const404.16, algebra.py:180), Var($const404.17, algebra.py:180)), kws=(), vararg=None)
2022-08-04 11:53:04,556 DEBUG on stmt: $404.22 = static_getitem(value=qout.1, index=slice(1, None, None), index_var=$404.19, fn=<built-in function getitem>)
2022-08-04 11:53:04,556 DEBUG on stmt: $404.24 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:04,556 DEBUG on stmt: $404.25 = getattr(value=$404.24, attr=sin)
2022-08-04 11:53:04,557 DEBUG on stmt: $404.27 = call $404.25(vnorm, func=$404.25, args=[Var(vnorm, algebra.py:176)], kws=(), vararg=None)
2022-08-04 11:53:04,557 DEBUG on stmt: $404.28 = e * $404.27
2022-08-04 11:53:04,557 DEBUG on stmt: $404.30 = $404.28 / vnorm
2022-08-04 11:53:04,557 DEBUG on stmt: $404.31 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=$404.22, rhs=$404.30, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:53:04,557 DEBUG on stmt: qout.1[slice(1, None, None)] = $404.31
2022-08-04 11:53:04,557 DEBUG on stmt: jump 514
2022-08-04 11:53:04,557 DEBUG ==== SSA block analysis pass on 472
2022-08-04 11:53:04,557 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdec47f0>
2022-08-04 11:53:04,557 DEBUG on stmt: $472.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:04,557 DEBUG on stmt: $472.2 = getattr(value=$472.1, attr=exp)
2022-08-04 11:53:04,557 DEBUG on stmt: $const472.4 = const(int, 0)
2022-08-04 11:53:04,558 DEBUG on stmt: $472.5 = static_getitem(value=qout.1, index=0, index_var=$const472.4, fn=<built-in function getitem>)
2022-08-04 11:53:04,558 DEBUG on stmt: $472.6 = call $472.2($472.5, func=$472.2, args=[Var($472.5, algebra.py:182)], kws=(), vararg=None)
2022-08-04 11:53:04,558 DEBUG on stmt: $const472.8 = const(int, 0)
2022-08-04 11:53:04,558 DEBUG on stmt: qout.1[0] = $472.6
2022-08-04 11:53:04,558 DEBUG on stmt: $const472.9 = const(float, 0.0)
2022-08-04 11:53:04,558 DEBUG on stmt: $const472.11 = const(int, 1)
2022-08-04 11:53:04,558 DEBUG on stmt: qout.1[1] = $const472.9
2022-08-04 11:53:04,558 DEBUG on stmt: $const472.12 = const(float, 0.0)
2022-08-04 11:53:04,558 DEBUG on stmt: $const472.14 = const(int, 2)
2022-08-04 11:53:04,558 DEBUG on stmt: qout.1[2] = $const472.12
2022-08-04 11:53:04,558 DEBUG on stmt: $const472.15 = const(float, 0.0)
2022-08-04 11:53:04,558 DEBUG on stmt: $const472.17 = const(int, 3)
2022-08-04 11:53:04,558 DEBUG on stmt: qout.1[3] = $const472.15
2022-08-04 11:53:04,559 DEBUG on stmt: jump 514
2022-08-04 11:53:04,559 DEBUG ==== SSA block analysis pass on 514
2022-08-04 11:53:04,559 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdec47f0>
2022-08-04 11:53:04,559 DEBUG on stmt: $const514.1 = const(NoneType, None)
2022-08-04 11:53:04,559 DEBUG on stmt: $514.2 = cast(value=$const514.1)
2022-08-04 11:53:04,559 DEBUG on stmt: return $514.2
2022-08-04 11:53:04,560 DEBUG defs defaultdict(<class 'list'>,
            {'$0.1': [<numba.core.ir.Assign object at 0x7fa2ce71ff60>],
             '$0.10': [<numba.core.ir.Assign object at 0x7fa2ce4a0da0>],
             '$0.12': [<numba.core.ir.Assign object at 0x7fa2ce6fc908>],
             '$0.13': [<numba.core.ir.Assign object at 0x7fa2ce6fc9e8>],
             '$0.16': [<numba.core.ir.Assign object at 0x7fa2ce4a0e10>],
             '$0.18': [<numba.core.ir.Assign object at 0x7fa2ce6fce10>],
             '$0.19': [<numba.core.ir.Assign object at 0x7fa2ce6fcef0>],
             '$0.2': [<numba.core.ir.Assign object at 0x7fa2ce6fc0b8>],
             '$0.21': [<numba.core.ir.Assign object at 0x7fa2ce6ff198>],
             '$0.22': [<numba.core.ir.Assign object at 0x7fa2ce6ff278>],
             '$0.24': [<numba.core.ir.Assign object at 0x7fa2ce6ff400>],
             '$0.25': [<numba.core.ir.Assign object at 0x7fa2ce6ff4e0>],
             '$0.26': [<numba.core.ir.Assign object at 0x7fa2ce6ff5c0>],
             '$0.27': [<numba.core.ir.Assign object at 0x7fa2ce6ff6a0>],
             '$0.30': [<numba.core.ir.Assign object at 0x7fa2ce4a0898>],
             '$0.31': [<numba.core.ir.Assign object at 0x7fa2ce6ff9e8>],
             '$0.32': [<numba.core.ir.Assign object at 0x7fa2ce6ffac8>],
             '$0.33': [<numba.core.ir.Assign object at 0x7fa2ce6ffba8>],
             '$0.5': [<numba.core.ir.Assign object at 0x7fa2ce4a0d30>],
             '$0.7': [<numba.core.ir.Assign object at 0x7fa2ce6fc4e0>],
             '$104pred': [<numba.core.ir.Assign object at 0x7fa2ce704e10>],
             '$106.1': [<numba.core.ir.Assign object at 0x7fa2ce704f60>],
             '$106.10': [<numba.core.ir.Assign object at 0x7fa2ce707780>],
             '$106.11': [<numba.core.ir.Assign object at 0x7fa2ce707860>],
             '$106.2': [<numba.core.ir.Assign object at 0x7fa2ce707080>],
             '$106.5': [<numba.core.ir.Assign object at 0x7fa2ce4a0b38>],
             '$106.6': [<numba.core.ir.Assign object at 0x7fa2ce7073c8>],
             '$106.7': [<numba.core.ir.Assign object at 0x7fa2ce7074a8>],
             '$154.4': [<numba.core.ir.Assign object at 0x7fa2ce70c3c8>],
             '$154.5': [<numba.core.ir.Assign object at 0x7fa2ce70c4a8>],
             '$190.1': [<numba.core.ir.Assign object at 0x7fa2ce70cd30>],
             '$190.2': [<numba.core.ir.Assign object at 0x7fa2ce70ce10>],
             '$190.5': [<numba.core.ir.Assign object at 0x7fa2ce4a0fd0>],
             '$190.6': [<numba.core.ir.Assign object at 0x7fa2ce70f198>],
             '$234.1': [<numba.core.ir.Assign object at 0x7fa2ce70fd68>],
             '$234.11': [<numba.core.ir.Assign object at 0x7fa2ce7156d8>],
             '$234.12': [<numba.core.ir.Assign object at 0x7fa2ce7157b8>],
             '$234.15': [<numba.core.ir.Assign object at 0x7fa2cdec4be0>],
             '$234.18': [<numba.core.ir.Assign object at 0x7fa2cdec4e10>],
             '$234.19': [<numba.core.ir.Assign object at 0x7fa2ce715d68>],
             '$234.2': [<numba.core.ir.Assign object at 0x7fa2ce70fe48>],
             '$234.22': [<numba.core.ir.Assign object at 0x7fa2ce715f98>],
             '$234.23': [<numba.core.ir.Assign object at 0x7fa2ce7210b8>],
             '$234.24': [<numba.core.ir.Assign object at 0x7fa2ce721198>],
             '$234.26': [<numba.core.ir.Assign object at 0x7fa2ce721358>],
             '$234.32': [<numba.core.ir.Assign object at 0x7fa2ce4a0e48>],
             '$234.33': [<numba.core.ir.Assign object at 0x7fa2ce721940>],
             '$234.39': [<numba.core.ir.Assign object at 0x7fa2ce4a0eb8>],
             '$234.40': [<numba.core.ir.Assign object at 0x7fa2ce721f28>],
             '$234.46': [<numba.core.ir.Assign object at 0x7fa2ce4a0f28>],
             '$234.47': [<numba.core.ir.Assign object at 0x7fa2ce725550>],
             '$234.6': [<numba.core.ir.Assign object at 0x7fa2cdec4b70>],
             '$344.10': [<numba.core.ir.Assign object at 0x7fa2ce725c88>],
             '$344.13': [<numba.core.ir.Assign object at 0x7fa2cdec49e8>],
             '$344.15': [<numba.core.ir.Assign object at 0x7fa2ce4760f0>],
             '$344.16': [<numba.core.ir.Assign object at 0x7fa2ce4761d0>],
             '$344.19': [<numba.core.ir.Assign object at 0x7fa2cdec4a90>],
             '$344.21': [<numba.core.ir.Assign object at 0x7fa2ce4765f8>],
             '$344.22': [<numba.core.ir.Assign object at 0x7fa2ce4766d8>],
             '$344.25': [<numba.core.ir.Assign object at 0x7fa2ce4769e8>],
             '$344.26': [<numba.core.ir.Assign object at 0x7fa2ce476ac8>],
             '$344.4': [<numba.core.ir.Assign object at 0x7fa2ce725780>],
             '$344.5': [<numba.core.ir.Assign object at 0x7fa2ce725860>],
             '$344.8': [<numba.core.ir.Assign object at 0x7fa2cdec4f28>],
             '$400pred': [<numba.core.ir.Assign object at 0x7fa2ce476c88>],
             '$404.1': [<numba.core.ir.Assign object at 0x7fa2ce476278>],
             '$404.11': [<numba.core.ir.Assign object at 0x7fa2ce492550>],
             '$404.12': [<numba.core.ir.Assign object at 0x7fa2ce492630>],
             '$404.18': [<numba.core.ir.Assign object at 0x7fa2ce492b70>],
             '$404.19': [<numba.core.ir.Assign object at 0x7fa2ce492c18>],
             '$404.2': [<numba.core.ir.Assign object at 0x7fa2ce476d30>],
             '$404.22': [<numba.core.ir.Assign object at 0x7fa2cdec4d68>],
             '$404.24': [<numba.core.ir.Assign object at 0x7fa2ce492f98>],
             '$404.25': [<numba.core.ir.Assign object at 0x7fa2ce49a0b8>],
             '$404.27': [<numba.core.ir.Assign object at 0x7fa2ce49a240>],
             '$404.28': [<numba.core.ir.Assign object at 0x7fa2ce49a320>],
             '$404.30': [<numba.core.ir.Assign object at 0x7fa2ce49a4a8>],
             '$404.31': [<numba.core.ir.Assign object at 0x7fa2ce49a588>],
             '$404.5': [<numba.core.ir.Assign object at 0x7fa2cdec4ef0>],
             '$404.8': [<numba.core.ir.Assign object at 0x7fa2ce4922e8>],
             '$404.9': [<numba.core.ir.Assign object at 0x7fa2ce4923c8>],
             '$472.1': [<numba.core.ir.Assign object at 0x7fa2ce492da0>],
             '$472.2': [<numba.core.ir.Assign object at 0x7fa2ce49a160>],
             '$472.5': [<numba.core.ir.Assign object at 0x7fa2ce71f6a0>],
             '$472.6': [<numba.core.ir.Assign object at 0x7fa2ce49a978>],
             '$514.2': [<numba.core.ir.Assign object at 0x7fa2ce4a0588>],
             '$70pred': [<numba.core.ir.Assign object at 0x7fa2ce6ffda0>],
             '$72.3': [<numba.core.ir.Assign object at 0x7fa2ce4a0c88>],
             '$72.5': [<numba.core.ir.Assign object at 0x7fa2ce704160>],
             '$82pred': [<numba.core.ir.Assign object at 0x7fa2ce704358>],
             '$84.1': [<numba.core.ir.Assign object at 0x7fa2ce7044a8>],
             '$84.10': [<numba.core.ir.Assign object at 0x7fa2ce704c50>],
             '$84.2': [<numba.core.ir.Assign object at 0x7fa2ce704588>],
             '$84.5': [<numba.core.ir.Assign object at 0x7fa2ce4a0be0>],
             '$84.7': [<numba.core.ir.Assign object at 0x7fa2ce7049b0>],
             '$84.8': [<numba.core.ir.Assign object at 0x7fa2ce704a90>],
             '$84.9': [<numba.core.ir.Assign object at 0x7fa2ce704b70>],
             '$const0.11': [<numba.core.ir.Assign object at 0x7fa2ce6fc828>],
             '$const0.15': [<numba.core.ir.Assign object at 0x7fa2ce6fcb70>],
             '$const0.17': [<numba.core.ir.Assign object at 0x7fa2ce6fcd30>],
             '$const0.29': [<numba.core.ir.Assign object at 0x7fa2ce6ff828>],
             '$const0.4': [<numba.core.ir.Assign object at 0x7fa2ce6fc240>],
             '$const0.6': [<numba.core.ir.Assign object at 0x7fa2ce6fc400>],
             '$const0.9': [<numba.core.ir.Assign object at 0x7fa2ce6fc668>],
             '$const106.13': [<numba.core.ir.Assign object at 0x7fa2ce7079e8>],
             '$const106.14': [<numba.core.ir.Assign object at 0x7fa2ce707b38>],
             '$const106.16': [<numba.core.ir.Assign object at 0x7fa2ce707cc0>],
             '$const106.17': [<numba.core.ir.Assign object at 0x7fa2ce707e10>],
             '$const106.19': [<numba.core.ir.Assign object at 0x7fa2ce707f98>],
             '$const106.4': [<numba.core.ir.Assign object at 0x7fa2ce707208>],
             '$const106.9': [<numba.core.ir.Assign object at 0x7fa2ce707630>],
             '$const154.1': [<numba.core.ir.Assign object at 0x7fa2ce70c0f0>],
             '$const154.10': [<numba.core.ir.Assign object at 0x7fa2ce70c908>],
             '$const154.11': [<numba.core.ir.Assign object at 0x7fa2ce70ca58>],
             '$const154.13': [<numba.core.ir.Assign object at 0x7fa2ce70cbe0>],
             '$const154.3': [<numba.core.ir.Assign object at 0x7fa2ce70c278>],
             '$const154.7': [<numba.core.ir.Assign object at 0x7fa2ce70c630>],
             '$const154.8': [<numba.core.ir.Assign object at 0x7fa2ce70c780>],
             '$const190.11': [<numba.core.ir.Assign object at 0x7fa2ce70f5f8>],
             '$const190.12': [<numba.core.ir.Assign object at 0x7fa2ce70f748>],
             '$const190.14': [<numba.core.ir.Assign object at 0x7fa2ce70f8d0>],
             '$const190.15': [<numba.core.ir.Assign object at 0x7fa2ce70fa20>],
             '$const190.17': [<numba.core.ir.Assign object at 0x7fa2ce70fba8>],
             '$const190.4': [<numba.core.ir.Assign object at 0x7fa2ce70cf98>],
             '$const190.8': [<numba.core.ir.Assign object at 0x7fa2ce70f320>],
             '$const190.9': [<numba.core.ir.Assign object at 0x7fa2ce70f470>],
             '$const234.14': [<numba.core.ir.Assign object at 0x7fa2ce715940>],
             '$const234.17': [<numba.core.ir.Assign object at 0x7fa2ce715ba8>],
             '$const234.25': [<numba.core.ir.Assign object at 0x7fa2ce721278>],
             '$const234.28': [<numba.core.ir.Assign object at 0x7fa2ce7214e0>],
             '$const234.31': [<numba.core.ir.Assign object at 0x7fa2ce721780>],
             '$const234.35': [<numba.core.ir.Assign object at 0x7fa2ce721ac8>],
             '$const234.38': [<numba.core.ir.Assign object at 0x7fa2ce721d68>],
             '$const234.42': [<numba.core.ir.Assign object at 0x7fa2ce7250f0>],
             '$const234.45': [<numba.core.ir.Assign object at 0x7fa2ce725390>],
             '$const234.49': [<numba.core.ir.Assign object at 0x7fa2ce7256d8>],
             '$const234.5': [<numba.core.ir.Assign object at 0x7fa2ce7150b8>],
             '$const344.12': [<numba.core.ir.Assign object at 0x7fa2ce725e10>],
             '$const344.14': [<numba.core.ir.Assign object at 0x7fa2ce725fd0>],
             '$const344.18': [<numba.core.ir.Assign object at 0x7fa2ce476358>],
             '$const344.20': [<numba.core.ir.Assign object at 0x7fa2ce476518>],
             '$const344.7': [<numba.core.ir.Assign object at 0x7fa2ce7259e8>],
             '$const344.9': [<numba.core.ir.Assign object at 0x7fa2ce725ba8>],
             '$const404.14': [<numba.core.ir.Assign object at 0x7fa2ce4927b8>],
             '$const404.16': [<numba.core.ir.Assign object at 0x7fa2ce4929b0>],
             '$const404.17': [<numba.core.ir.Assign object at 0x7fa2ce492a90>],
             '$const404.4': [<numba.core.ir.Assign object at 0x7fa2ce476eb8>],
             '$const472.11': [<numba.core.ir.Assign object at 0x7fa2ce49add8>],
             '$const472.12': [<numba.core.ir.Assign object at 0x7fa2ce49af28>],
             '$const472.14': [<numba.core.ir.Assign object at 0x7fa2ce4a00f0>],
             '$const472.15': [<numba.core.ir.Assign object at 0x7fa2ce4a0240>],
             '$const472.17': [<numba.core.ir.Assign object at 0x7fa2ce4a03c8>],
             '$const472.4': [<numba.core.ir.Assign object at 0x7fa2ce49a7b8>],
             '$const472.8': [<numba.core.ir.Assign object at 0x7fa2ce49ab00>],
             '$const472.9': [<numba.core.ir.Assign object at 0x7fa2ce49ac50>],
             '$const514.1': [<numba.core.ir.Assign object at 0x7fa2ce4a04a8>],
             '$const72.2': [<numba.core.ir.Assign object at 0x7fa2ce6ffe80>],
             '$const72.4': [<numba.core.ir.Assign object at 0x7fa2ce704080>],
             '$const84.4': [<numba.core.ir.Assign object at 0x7fa2ce704710>],
             '$const84.6': [<numba.core.ir.Assign object at 0x7fa2ce7048d0>],
             'b': [<numba.core.ir.Assign object at 0x7fa2ce6fcfd0>],
             'bool104': [<numba.core.ir.Assign object at 0x7fa2ce704d68>],
             'bool400': [<numba.core.ir.Assign object at 0x7fa2ce476be0>],
             'bool70': [<numba.core.ir.Assign object at 0x7fa2ce6ffcc0>],
             'bool82': [<numba.core.ir.Assign object at 0x7fa2ce704278>],
             'e': [<numba.core.ir.Assign object at 0x7fa2ce4920b8>],
             'f': [<numba.core.ir.Assign object at 0x7fa2ce715550>],
             'q': [<numba.core.ir.Assign object at 0x7fa2ce71f080>],
             'qout': [<numba.core.ir.Assign object at 0x7fa2ce71fe80>],
             'qout.1': [<numba.core.ir.Assign object at 0x7fa2ce721fd0>],
             's': [<numba.core.ir.Assign object at 0x7fa2ce71fc18>],
             'v': [<numba.core.ir.Assign object at 0x7fa2ce715278>],
             'vnorm': [<numba.core.ir.Assign object at 0x7fa2ce4767b8>]})
2022-08-04 11:53:04,561 DEBUG SSA violators set()
2022-08-04 11:53:05,196 DEBUG label 0:
    q = arg(0, name=q)                       ['q']
    qout = arg(1, name=qout)                 ['qout']
    $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$0.1']
    $0.2 = getattr(value=$0.1, attr=sqrt)    ['$0.1', '$0.2']
    $const0.4 = const(int, 0)                ['$const0.4']
    $0.5 = getitem(value=q, index=$const0.4, fn=<built-in function getitem>) ['$0.5', '$const0.4', 'q']
    $const0.6 = const(int, 2)                ['$const0.6']
    $0.7 = $0.5 ** $const0.6                 ['$0.5', '$0.7', '$const0.6']
    $const0.9 = const(int, 1)                ['$const0.9']
    $0.10 = getitem(value=q, index=$const0.9, fn=<built-in function getitem>) ['$0.10', '$const0.9', 'q']
    $const0.11 = const(int, 2)               ['$const0.11']
    $0.12 = $0.10 ** $const0.11              ['$0.10', '$0.12', '$const0.11']
    $0.13 = $0.7 + $0.12                     ['$0.12', '$0.13', '$0.7']
    $const0.15 = const(int, 2)               ['$const0.15']
    $0.16 = getitem(value=q, index=$const0.15, fn=<built-in function getitem>) ['$0.16', '$const0.15', 'q']
    $const0.17 = const(int, 2)               ['$const0.17']
    $0.18 = $0.16 ** $const0.17              ['$0.16', '$0.18', '$const0.17']
    $0.19 = $0.13 + $0.18                    ['$0.13', '$0.18', '$0.19']
    $const0.21 = const(int, 3)               ['$const0.21']
    $0.22 = getitem(value=q, index=$const0.21, fn=<built-in function getitem>) ['$0.22', '$const0.21', 'q']
    $const0.23 = const(int, 2)               ['$const0.23']
    $0.24 = $0.22 ** $const0.23              ['$0.22', '$0.24', '$const0.23']
    $0.25 = $0.19 + $0.24                    ['$0.19', '$0.24', '$0.25']
    $0.26 = call $0.2($0.25, func=$0.2, args=[Var($0.25, algebra.py:191)], kws=(), vararg=None) ['$0.2', '$0.25', '$0.26']
    $const0.28 = const(int, 0)               ['$const0.28']
    qout[$const0.28] = $0.26                 ['$0.26', '$const0.28', 'qout']
    $const0.29 = const(NoneType, None)       ['$const0.29']
    $0.30 = cast(value=$const0.29)           ['$0.30', '$const0.29']
    return $0.30                             ['$0.30']

2022-08-04 11:53:05,201 DEBUG ==== SSA block analysis pass on 0
2022-08-04 11:53:05,201 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce595b38>
2022-08-04 11:53:05,201 DEBUG on stmt: q = arg(0, name=q)
2022-08-04 11:53:05,201 DEBUG on stmt: qout = arg(1, name=qout)
2022-08-04 11:53:05,201 DEBUG on stmt: $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:05,201 DEBUG on stmt: $0.2 = getattr(value=$0.1, attr=sqrt)
2022-08-04 11:53:05,201 DEBUG on stmt: $const0.4 = const(int, 0)
2022-08-04 11:53:05,201 DEBUG on stmt: $0.5 = static_getitem(value=q, index=0, index_var=$const0.4, fn=<built-in function getitem>)
2022-08-04 11:53:05,201 DEBUG on stmt: $const0.6 = const(int, 2)
2022-08-04 11:53:05,202 DEBUG on stmt: $0.7 = $0.5 ** $const0.6
2022-08-04 11:53:05,202 DEBUG on stmt: $const0.9 = const(int, 1)
2022-08-04 11:53:05,202 DEBUG on stmt: $0.10 = static_getitem(value=q, index=1, index_var=$const0.9, fn=<built-in function getitem>)
2022-08-04 11:53:05,202 DEBUG on stmt: $const0.11 = const(int, 2)
2022-08-04 11:53:05,202 DEBUG on stmt: $0.12 = $0.10 ** $const0.11
2022-08-04 11:53:05,202 DEBUG on stmt: $0.13 = $0.7 + $0.12
2022-08-04 11:53:05,202 DEBUG on stmt: $const0.15 = const(int, 2)
2022-08-04 11:53:05,202 DEBUG on stmt: $0.16 = static_getitem(value=q, index=2, index_var=$const0.15, fn=<built-in function getitem>)
2022-08-04 11:53:05,202 DEBUG on stmt: $const0.17 = const(int, 2)
2022-08-04 11:53:05,202 DEBUG on stmt: $0.18 = $0.16 ** $const0.17
2022-08-04 11:53:05,202 DEBUG on stmt: $0.19 = $0.13 + $0.18
2022-08-04 11:53:05,202 DEBUG on stmt: $const0.21 = const(int, 3)
2022-08-04 11:53:05,203 DEBUG on stmt: $0.22 = static_getitem(value=q, index=3, index_var=$const0.21, fn=<built-in function getitem>)
2022-08-04 11:53:05,203 DEBUG on stmt: $const0.23 = const(int, 2)
2022-08-04 11:53:05,203 DEBUG on stmt: $0.24 = $0.22 ** $const0.23
2022-08-04 11:53:05,203 DEBUG on stmt: $0.25 = $0.19 + $0.24
2022-08-04 11:53:05,203 DEBUG on stmt: $0.26 = call $0.2($0.25, func=$0.2, args=[Var($0.25, algebra.py:191)], kws=(), vararg=None)
2022-08-04 11:53:05,203 DEBUG on stmt: $const0.28 = const(int, 0)
2022-08-04 11:53:05,203 DEBUG on stmt: qout[0] = $0.26
2022-08-04 11:53:05,203 DEBUG on stmt: $const0.29 = const(NoneType, None)
2022-08-04 11:53:05,203 DEBUG on stmt: $0.30 = cast(value=$const0.29)
2022-08-04 11:53:05,203 DEBUG on stmt: return $0.30
2022-08-04 11:53:05,204 DEBUG defs defaultdict(<class 'list'>,
            {'$0.1': [<numba.core.ir.Assign object at 0x7fa2ce2873c8>],
             '$0.10': [<numba.core.ir.Assign object at 0x7fa2ce595cf8>],
             '$0.12': [<numba.core.ir.Assign object at 0x7fa2ce02eeb8>],
             '$0.13': [<numba.core.ir.Assign object at 0x7fa2ce02e9b0>],
             '$0.16': [<numba.core.ir.Assign object at 0x7fa2ce595da0>],
             '$0.18': [<numba.core.ir.Assign object at 0x7fa2ce265588>],
             '$0.19': [<numba.core.ir.Assign object at 0x7fa2ce265828>],
             '$0.2': [<numba.core.ir.Assign object at 0x7fa2ce0692e8>],
             '$0.22': [<numba.core.ir.Assign object at 0x7fa2ce5950f0>],
             '$0.24': [<numba.core.ir.Assign object at 0x7fa2ce76b198>],
             '$0.25': [<numba.core.ir.Assign object at 0x7fa2ce76b240>],
             '$0.26': [<numba.core.ir.Assign object at 0x7fa2ce76b358>],
             '$0.30': [<numba.core.ir.Assign object at 0x7fa2ce5950b8>],
             '$0.5': [<numba.core.ir.Assign object at 0x7fa2ce595cc0>],
             '$0.7': [<numba.core.ir.Assign object at 0x7fa2ce02e240>],
             '$const0.11': [<numba.core.ir.Assign object at 0x7fa2ce02e6a0>],
             '$const0.15': [<numba.core.ir.Assign object at 0x7fa2ce02e4a8>],
             '$const0.17': [<numba.core.ir.Assign object at 0x7fa2ce02e630>],
             '$const0.21': [<numba.core.ir.Assign object at 0x7fa2ce265fd0>],
             '$const0.23': [<numba.core.ir.Assign object at 0x7fa2ce76b390>],
             '$const0.28': [<numba.core.ir.Assign object at 0x7fa2ce76b748>],
             '$const0.29': [<numba.core.ir.Assign object at 0x7fa2ce595a20>],
             '$const0.4': [<numba.core.ir.Assign object at 0x7fa2ce023c88>],
             '$const0.6': [<numba.core.ir.Assign object at 0x7fa2ce023e48>],
             '$const0.9': [<numba.core.ir.Assign object at 0x7fa2ce02edd8>],
             'q': [<numba.core.ir.Assign object at 0x7fa2ce287978>],
             'qout': [<numba.core.ir.Assign object at 0x7fa2ce287ac8>]})
2022-08-04 11:53:05,204 DEBUG SSA violators set()
2022-08-04 11:53:05,326 DEBUG label 0:
    q = arg(0, name=q)                       ['q']
    qout = arg(1, name=qout)                 ['qout']
    $const0.2 = const(int, 0)                ['$const0.2']
    $0.3 = getitem(value=q, index=$const0.2, fn=<built-in function getitem>) ['$0.3', '$const0.2', 'q']
    $0.4 = unary(fn=<built-in function pos>, value=$0.3) ['$0.3', '$0.4']
    $const0.6 = const(int, 0)                ['$const0.6']
    qout[$const0.6] = $0.4                   ['$0.4', '$const0.6', 'qout']
    $const0.8 = const(int, 1)                ['$const0.8']
    $0.9 = getitem(value=q, index=$const0.8, fn=<built-in function getitem>) ['$0.9', '$const0.8', 'q']
    $0.10 = unary(fn=<built-in function neg>, value=$0.9) ['$0.10', '$0.9']
    $const0.12 = const(int, 1)               ['$const0.12']
    qout[$const0.12] = $0.10                 ['$0.10', '$const0.12', 'qout']
    $const0.14 = const(int, 2)               ['$const0.14']
    $0.15 = getitem(value=q, index=$const0.14, fn=<built-in function getitem>) ['$0.15', '$const0.14', 'q']
    $0.16 = unary(fn=<built-in function neg>, value=$0.15) ['$0.15', '$0.16']
    $const0.18 = const(int, 2)               ['$const0.18']
    qout[$const0.18] = $0.16                 ['$0.16', '$const0.18', 'qout']
    $const0.20 = const(int, 3)               ['$const0.20']
    $0.21 = getitem(value=q, index=$const0.20, fn=<built-in function getitem>) ['$0.21', '$const0.20', 'q']
    $0.22 = unary(fn=<built-in function neg>, value=$0.21) ['$0.21', '$0.22']
    $const0.24 = const(int, 3)               ['$const0.24']
    qout[$const0.24] = $0.22                 ['$0.22', '$const0.24', 'qout']
    $const0.25 = const(NoneType, None)       ['$const0.25']
    $0.26 = cast(value=$const0.25)           ['$0.26', '$const0.25']
    return $0.26                             ['$0.26']

2022-08-04 11:53:05,330 DEBUG ==== SSA block analysis pass on 0
2022-08-04 11:53:05,330 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdccc278>
2022-08-04 11:53:05,330 DEBUG on stmt: q = arg(0, name=q)
2022-08-04 11:53:05,330 DEBUG on stmt: qout = arg(1, name=qout)
2022-08-04 11:53:05,330 DEBUG on stmt: $const0.2 = const(int, 0)
2022-08-04 11:53:05,330 DEBUG on stmt: $0.3 = static_getitem(value=q, index=0, index_var=$const0.2, fn=<built-in function getitem>)
2022-08-04 11:53:05,330 DEBUG on stmt: $0.4 = unary(fn=<built-in function pos>, value=$0.3)
2022-08-04 11:53:05,331 DEBUG on stmt: $const0.6 = const(int, 0)
2022-08-04 11:53:05,331 DEBUG on stmt: qout[0] = $0.4
2022-08-04 11:53:05,331 DEBUG on stmt: $const0.8 = const(int, 1)
2022-08-04 11:53:05,331 DEBUG on stmt: $0.9 = static_getitem(value=q, index=1, index_var=$const0.8, fn=<built-in function getitem>)
2022-08-04 11:53:05,331 DEBUG on stmt: $0.10 = unary(fn=<built-in function neg>, value=$0.9)
2022-08-04 11:53:05,331 DEBUG on stmt: $const0.12 = const(int, 1)
2022-08-04 11:53:05,331 DEBUG on stmt: qout[1] = $0.10
2022-08-04 11:53:05,331 DEBUG on stmt: $const0.14 = const(int, 2)
2022-08-04 11:53:05,331 DEBUG on stmt: $0.15 = static_getitem(value=q, index=2, index_var=$const0.14, fn=<built-in function getitem>)
2022-08-04 11:53:05,331 DEBUG on stmt: $0.16 = unary(fn=<built-in function neg>, value=$0.15)
2022-08-04 11:53:05,331 DEBUG on stmt: $const0.18 = const(int, 2)
2022-08-04 11:53:05,331 DEBUG on stmt: qout[2] = $0.16
2022-08-04 11:53:05,331 DEBUG on stmt: $const0.20 = const(int, 3)
2022-08-04 11:53:05,332 DEBUG on stmt: $0.21 = static_getitem(value=q, index=3, index_var=$const0.20, fn=<built-in function getitem>)
2022-08-04 11:53:05,332 DEBUG on stmt: $0.22 = unary(fn=<built-in function neg>, value=$0.21)
2022-08-04 11:53:05,332 DEBUG on stmt: $const0.24 = const(int, 3)
2022-08-04 11:53:05,332 DEBUG on stmt: qout[3] = $0.22
2022-08-04 11:53:05,332 DEBUG on stmt: $const0.25 = const(NoneType, None)
2022-08-04 11:53:05,332 DEBUG on stmt: $0.26 = cast(value=$const0.25)
2022-08-04 11:53:05,332 DEBUG on stmt: return $0.26
2022-08-04 11:53:05,332 DEBUG defs defaultdict(<class 'list'>,
            {'$0.10': [<numba.core.ir.Assign object at 0x7fa2cdce2080>],
             '$0.15': [<numba.core.ir.Assign object at 0x7fa2ce2598d0>],
             '$0.16': [<numba.core.ir.Assign object at 0x7fa2cdccce10>],
             '$0.21': [<numba.core.ir.Assign object at 0x7fa2ce259550>],
             '$0.22': [<numba.core.ir.Assign object at 0x7fa2cdccc400>],
             '$0.26': [<numba.core.ir.Assign object at 0x7fa2cdccc978>],
             '$0.3': [<numba.core.ir.Assign object at 0x7fa2ce259400>],
             '$0.4': [<numba.core.ir.Assign object at 0x7fa2cdce2a20>],
             '$0.9': [<numba.core.ir.Assign object at 0x7fa2ce259be0>],
             '$const0.12': [<numba.core.ir.Assign object at 0x7fa2cdce20f0>],
             '$const0.14': [<numba.core.ir.Assign object at 0x7fa2cdcccf28>],
             '$const0.18': [<numba.core.ir.Assign object at 0x7fa2cdcccc18>],
             '$const0.2': [<numba.core.ir.Assign object at 0x7fa2cdce2588>],
             '$const0.20': [<numba.core.ir.Assign object at 0x7fa2cdcccb38>],
             '$const0.24': [<numba.core.ir.Assign object at 0x7fa2cdccc5c0>],
             '$const0.25': [<numba.core.ir.Assign object at 0x7fa2cdccc710>],
             '$const0.6': [<numba.core.ir.Assign object at 0x7fa2cdce22e8>],
             '$const0.8': [<numba.core.ir.Assign object at 0x7fa2cdce2748>],
             'q': [<numba.core.ir.Assign object at 0x7fa2cdce2f28>],
             'qout': [<numba.core.ir.Assign object at 0x7fa2cdce2978>]})
2022-08-04 11:53:05,333 DEBUG SSA violators set()
2022-08-04 11:53:05,451 DEBUG label 0:
    q = arg(0, name=q)                       ['q']
    qout = arg(1, name=qout)                 ['qout']
    $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$0.1']
    $0.2 = getattr(value=$0.1, attr=sqrt)    ['$0.1', '$0.2']
    $const0.4 = const(int, 1)                ['$const0.4']
    $0.5 = getitem(value=q, index=$const0.4, fn=<built-in function getitem>) ['$0.5', '$const0.4', 'q']
    $const0.6 = const(int, 2)                ['$const0.6']
    $0.7 = $0.5 ** $const0.6                 ['$0.5', '$0.7', '$const0.6']
    $const0.9 = const(int, 2)                ['$const0.9']
    $0.10 = getitem(value=q, index=$const0.9, fn=<built-in function getitem>) ['$0.10', '$const0.9', 'q']
    $const0.11 = const(int, 2)               ['$const0.11']
    $0.12 = $0.10 ** $const0.11              ['$0.10', '$0.12', '$const0.11']
    $0.13 = $0.7 + $0.12                     ['$0.12', '$0.13', '$0.7']
    $const0.15 = const(int, 3)               ['$const0.15']
    $0.16 = getitem(value=q, index=$const0.15, fn=<built-in function getitem>) ['$0.16', '$const0.15', 'q']
    $const0.17 = const(int, 2)               ['$const0.17']
    $0.18 = $0.16 ** $const0.17              ['$0.16', '$0.18', '$const0.17']
    $0.19 = $0.13 + $0.18                    ['$0.13', '$0.18', '$0.19']
    vnorm = call $0.2($0.19, func=$0.2, args=[Var($0.19, algebra.py:209)], kws=(), vararg=None) ['$0.19', '$0.2', 'vnorm']
    $0.22 = global(_quaternion_resolution: 1.0000000000000002e-14) ['$0.22']
    $0.23 = vnorm > $0.22                    ['$0.22', '$0.23', 'vnorm']
    bool50 = global(bool: <class 'bool'>)    ['bool50']
    $50pred = call bool50($0.23, func=bool50, args=(Var($0.23, algebra.py:210),), kws=(), vararg=None) ['$0.23', '$50pred', 'bool50']
    branch $50pred, 52, 160                  ['$50pred']
label 52:
    $52.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$52.1']
    $52.2 = getattr(value=$52.1, attr=sin)   ['$52.1', '$52.2']
    $52.4 = call $52.2(vnorm, func=$52.2, args=[Var(vnorm, algebra.py:209)], kws=(), vararg=None) ['$52.2', '$52.4', 'vnorm']
    s = $52.4 / vnorm                        ['$52.4', 's', 'vnorm']
    $52.7 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$52.7']
    $52.8 = getattr(value=$52.7, attr=exp)   ['$52.7', '$52.8']
    $const52.10 = const(int, 0)              ['$const52.10']
    $52.11 = getitem(value=q, index=$const52.10, fn=<built-in function getitem>) ['$52.11', '$const52.10', 'q']
    e = call $52.8($52.11, func=$52.8, args=[Var($52.11, algebra.py:212)], kws=(), vararg=None) ['$52.11', '$52.8', 'e']
    $52.14 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$52.14']
    $52.15 = getattr(value=$52.14, attr=cos) ['$52.14', '$52.15']
    $52.17 = call $52.15(vnorm, func=$52.15, args=[Var(vnorm, algebra.py:209)], kws=(), vararg=None) ['$52.15', '$52.17', 'vnorm']
    $52.18 = e * $52.17                      ['$52.17', '$52.18', 'e']
    $const52.20 = const(int, 0)              ['$const52.20']
    qout[$const52.20] = $52.18               ['$52.18', '$const52.20', 'qout']
    $52.23 = e * s                           ['$52.23', 'e', 's']
    $const52.25 = const(int, 1)              ['$const52.25']
    $52.26 = getitem(value=q, index=$const52.25, fn=<built-in function getitem>) ['$52.26', '$const52.25', 'q']
    $52.27 = $52.23 * $52.26                 ['$52.23', '$52.26', '$52.27']
    $const52.29 = const(int, 1)              ['$const52.29']
    qout[$const52.29] = $52.27               ['$52.27', '$const52.29', 'qout']
    $52.32 = e * s                           ['$52.32', 'e', 's']
    $const52.34 = const(int, 2)              ['$const52.34']
    $52.35 = getitem(value=q, index=$const52.34, fn=<built-in function getitem>) ['$52.35', '$const52.34', 'q']
    $52.36 = $52.32 * $52.35                 ['$52.32', '$52.35', '$52.36']
    $const52.38 = const(int, 2)              ['$const52.38']
    qout[$const52.38] = $52.36               ['$52.36', '$const52.38', 'qout']
    $52.41 = e * s                           ['$52.41', 'e', 's']
    $const52.43 = const(int, 3)              ['$const52.43']
    $52.44 = getitem(value=q, index=$const52.43, fn=<built-in function getitem>) ['$52.44', '$const52.43', 'q']
    $52.45 = $52.41 * $52.44                 ['$52.41', '$52.44', '$52.45']
    $const52.47 = const(int, 3)              ['$const52.47']
    qout[$const52.47] = $52.45               ['$52.45', '$const52.47', 'qout']
    jump 202                                 []
label 160:
    $160.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$160.1']
    $160.2 = getattr(value=$160.1, attr=exp) ['$160.1', '$160.2']
    $const160.4 = const(int, 0)              ['$const160.4']
    $160.5 = getitem(value=q, index=$const160.4, fn=<built-in function getitem>) ['$160.5', '$const160.4', 'q']
    $160.6 = call $160.2($160.5, func=$160.2, args=[Var($160.5, algebra.py:218)], kws=(), vararg=None) ['$160.2', '$160.5', '$160.6']
    $const160.8 = const(int, 0)              ['$const160.8']
    qout[$const160.8] = $160.6               ['$160.6', '$const160.8', 'qout']
    $const160.9 = const(float, 0.0)          ['$const160.9']
    $const160.11 = const(int, 1)             ['$const160.11']
    qout[$const160.11] = $const160.9         ['$const160.11', '$const160.9', 'qout']
    $const160.12 = const(float, 0.0)         ['$const160.12']
    $const160.14 = const(int, 2)             ['$const160.14']
    qout[$const160.14] = $const160.12        ['$const160.12', '$const160.14', 'qout']
    $const160.15 = const(float, 0.0)         ['$const160.15']
    $const160.17 = const(int, 3)             ['$const160.17']
    qout[$const160.17] = $const160.15        ['$const160.15', '$const160.17', 'qout']
    jump 202                                 []
label 202:
    $const202.1 = const(NoneType, None)      ['$const202.1']
    $202.2 = cast(value=$const202.1)         ['$202.2', '$const202.1']
    return $202.2                            ['$202.2']

2022-08-04 11:53:05,461 DEBUG ==== SSA block analysis pass on 0
2022-08-04 11:53:05,461 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce0a07b8>
2022-08-04 11:53:05,461 DEBUG on stmt: q = arg(0, name=q)
2022-08-04 11:53:05,461 DEBUG on stmt: qout = arg(1, name=qout)
2022-08-04 11:53:05,461 DEBUG on stmt: $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:05,461 DEBUG on stmt: $0.2 = getattr(value=$0.1, attr=sqrt)
2022-08-04 11:53:05,461 DEBUG on stmt: $const0.4 = const(int, 1)
2022-08-04 11:53:05,461 DEBUG on stmt: $0.5 = static_getitem(value=q, index=1, index_var=$const0.4, fn=<built-in function getitem>)
2022-08-04 11:53:05,461 DEBUG on stmt: $const0.6 = const(int, 2)
2022-08-04 11:53:05,461 DEBUG on stmt: $0.7 = $0.5 ** $const0.6
2022-08-04 11:53:05,462 DEBUG on stmt: $const0.9 = const(int, 2)
2022-08-04 11:53:05,462 DEBUG on stmt: $0.10 = static_getitem(value=q, index=2, index_var=$const0.9, fn=<built-in function getitem>)
2022-08-04 11:53:05,462 DEBUG on stmt: $const0.11 = const(int, 2)
2022-08-04 11:53:05,462 DEBUG on stmt: $0.12 = $0.10 ** $const0.11
2022-08-04 11:53:05,462 DEBUG on stmt: $0.13 = $0.7 + $0.12
2022-08-04 11:53:05,462 DEBUG on stmt: $const0.15 = const(int, 3)
2022-08-04 11:53:05,462 DEBUG on stmt: $0.16 = static_getitem(value=q, index=3, index_var=$const0.15, fn=<built-in function getitem>)
2022-08-04 11:53:05,462 DEBUG on stmt: $const0.17 = const(int, 2)
2022-08-04 11:53:05,462 DEBUG on stmt: $0.18 = $0.16 ** $const0.17
2022-08-04 11:53:05,462 DEBUG on stmt: $0.19 = $0.13 + $0.18
2022-08-04 11:53:05,462 DEBUG on stmt: vnorm = call $0.2($0.19, func=$0.2, args=[Var($0.19, algebra.py:209)], kws=(), vararg=None)
2022-08-04 11:53:05,462 DEBUG on stmt: $0.22 = global(_quaternion_resolution: 1.0000000000000002e-14)
2022-08-04 11:53:05,462 DEBUG on stmt: $0.23 = vnorm > $0.22
2022-08-04 11:53:05,462 DEBUG on stmt: bool50 = global(bool: <class 'bool'>)
2022-08-04 11:53:05,462 DEBUG on stmt: $50pred = call bool50($0.23, func=bool50, args=(Var($0.23, algebra.py:210),), kws=(), vararg=None)
2022-08-04 11:53:05,462 DEBUG on stmt: branch $50pred, 52, 160
2022-08-04 11:53:05,463 DEBUG ==== SSA block analysis pass on 52
2022-08-04 11:53:05,463 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce0a07b8>
2022-08-04 11:53:05,463 DEBUG on stmt: $52.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:05,463 DEBUG on stmt: $52.2 = getattr(value=$52.1, attr=sin)
2022-08-04 11:53:05,463 DEBUG on stmt: $52.4 = call $52.2(vnorm, func=$52.2, args=[Var(vnorm, algebra.py:209)], kws=(), vararg=None)
2022-08-04 11:53:05,463 DEBUG on stmt: s = $52.4 / vnorm
2022-08-04 11:53:05,463 DEBUG on stmt: $52.7 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:05,463 DEBUG on stmt: $52.8 = getattr(value=$52.7, attr=exp)
2022-08-04 11:53:05,463 DEBUG on stmt: $const52.10 = const(int, 0)
2022-08-04 11:53:05,463 DEBUG on stmt: $52.11 = static_getitem(value=q, index=0, index_var=$const52.10, fn=<built-in function getitem>)
2022-08-04 11:53:05,463 DEBUG on stmt: e = call $52.8($52.11, func=$52.8, args=[Var($52.11, algebra.py:212)], kws=(), vararg=None)
2022-08-04 11:53:05,463 DEBUG on stmt: $52.14 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:05,463 DEBUG on stmt: $52.15 = getattr(value=$52.14, attr=cos)
2022-08-04 11:53:05,463 DEBUG on stmt: $52.17 = call $52.15(vnorm, func=$52.15, args=[Var(vnorm, algebra.py:209)], kws=(), vararg=None)
2022-08-04 11:53:05,463 DEBUG on stmt: $52.18 = e * $52.17
2022-08-04 11:53:05,463 DEBUG on stmt: $const52.20 = const(int, 0)
2022-08-04 11:53:05,463 DEBUG on stmt: qout[0] = $52.18
2022-08-04 11:53:05,463 DEBUG on stmt: $52.23 = e * s
2022-08-04 11:53:05,463 DEBUG on stmt: $const52.25 = const(int, 1)
2022-08-04 11:53:05,463 DEBUG on stmt: $52.26 = static_getitem(value=q, index=1, index_var=$const52.25, fn=<built-in function getitem>)
2022-08-04 11:53:05,464 DEBUG on stmt: $52.27 = $52.23 * $52.26
2022-08-04 11:53:05,464 DEBUG on stmt: $const52.29 = const(int, 1)
2022-08-04 11:53:05,464 DEBUG on stmt: qout[1] = $52.27
2022-08-04 11:53:05,464 DEBUG on stmt: $52.32 = e * s
2022-08-04 11:53:05,464 DEBUG on stmt: $const52.34 = const(int, 2)
2022-08-04 11:53:05,464 DEBUG on stmt: $52.35 = static_getitem(value=q, index=2, index_var=$const52.34, fn=<built-in function getitem>)
2022-08-04 11:53:05,464 DEBUG on stmt: $52.36 = $52.32 * $52.35
2022-08-04 11:53:05,464 DEBUG on stmt: $const52.38 = const(int, 2)
2022-08-04 11:53:05,464 DEBUG on stmt: qout[2] = $52.36
2022-08-04 11:53:05,464 DEBUG on stmt: $52.41 = e * s
2022-08-04 11:53:05,464 DEBUG on stmt: $const52.43 = const(int, 3)
2022-08-04 11:53:05,464 DEBUG on stmt: $52.44 = static_getitem(value=q, index=3, index_var=$const52.43, fn=<built-in function getitem>)
2022-08-04 11:53:05,464 DEBUG on stmt: $52.45 = $52.41 * $52.44
2022-08-04 11:53:05,464 DEBUG on stmt: $const52.47 = const(int, 3)
2022-08-04 11:53:05,464 DEBUG on stmt: qout[3] = $52.45
2022-08-04 11:53:05,464 DEBUG on stmt: jump 202
2022-08-04 11:53:05,464 DEBUG ==== SSA block analysis pass on 160
2022-08-04 11:53:05,464 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce0a07b8>
2022-08-04 11:53:05,464 DEBUG on stmt: $160.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:05,464 DEBUG on stmt: $160.2 = getattr(value=$160.1, attr=exp)
2022-08-04 11:53:05,465 DEBUG on stmt: $const160.4 = const(int, 0)
2022-08-04 11:53:05,465 DEBUG on stmt: $160.5 = static_getitem(value=q, index=0, index_var=$const160.4, fn=<built-in function getitem>)
2022-08-04 11:53:05,465 DEBUG on stmt: $160.6 = call $160.2($160.5, func=$160.2, args=[Var($160.5, algebra.py:218)], kws=(), vararg=None)
2022-08-04 11:53:05,465 DEBUG on stmt: $const160.8 = const(int, 0)
2022-08-04 11:53:05,465 DEBUG on stmt: qout[0] = $160.6
2022-08-04 11:53:05,465 DEBUG on stmt: $const160.9 = const(float, 0.0)
2022-08-04 11:53:05,465 DEBUG on stmt: $const160.11 = const(int, 1)
2022-08-04 11:53:05,465 DEBUG on stmt: qout[1] = $const160.9
2022-08-04 11:53:05,465 DEBUG on stmt: $const160.12 = const(float, 0.0)
2022-08-04 11:53:05,465 DEBUG on stmt: $const160.14 = const(int, 2)
2022-08-04 11:53:05,465 DEBUG on stmt: qout[2] = $const160.12
2022-08-04 11:53:05,465 DEBUG on stmt: $const160.15 = const(float, 0.0)
2022-08-04 11:53:05,465 DEBUG on stmt: $const160.17 = const(int, 3)
2022-08-04 11:53:05,465 DEBUG on stmt: qout[3] = $const160.15
2022-08-04 11:53:05,465 DEBUG on stmt: jump 202
2022-08-04 11:53:05,465 DEBUG ==== SSA block analysis pass on 202
2022-08-04 11:53:05,465 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce0a07b8>
2022-08-04 11:53:05,465 DEBUG on stmt: $const202.1 = const(NoneType, None)
2022-08-04 11:53:05,465 DEBUG on stmt: $202.2 = cast(value=$const202.1)
2022-08-04 11:53:05,465 DEBUG on stmt: return $202.2
2022-08-04 11:53:05,466 DEBUG defs defaultdict(<class 'list'>,
            {'$0.1': [<numba.core.ir.Assign object at 0x7fa2ce4c3630>],
             '$0.10': [<numba.core.ir.Assign object at 0x7fa2ce5f8d30>],
             '$0.12': [<numba.core.ir.Assign object at 0x7fa2ce4c3f60>],
             '$0.13': [<numba.core.ir.Assign object at 0x7fa2ce6a8080>],
             '$0.16': [<numba.core.ir.Assign object at 0x7fa2ce5f8da0>],
             '$0.18': [<numba.core.ir.Assign object at 0x7fa2ce6a84a8>],
             '$0.19': [<numba.core.ir.Assign object at 0x7fa2ce6a8588>],
             '$0.2': [<numba.core.ir.Assign object at 0x7fa2ce4c3710>],
             '$0.22': [<numba.core.ir.Assign object at 0x7fa2ce6a8898>],
             '$0.23': [<numba.core.ir.Assign object at 0x7fa2ce6a8978>],
             '$0.5': [<numba.core.ir.Assign object at 0x7fa2ce5f8cc0>],
             '$0.7': [<numba.core.ir.Assign object at 0x7fa2ce4c3b38>],
             '$160.1': [<numba.core.ir.Assign object at 0x7fa2ce680be0>],
             '$160.2': [<numba.core.ir.Assign object at 0x7fa2ce628390>],
             '$160.5': [<numba.core.ir.Assign object at 0x7fa2ce0a05c0>],
             '$160.6': [<numba.core.ir.Assign object at 0x7fa2ce610588>],
             '$202.2': [<numba.core.ir.Assign object at 0x7fa2ce5f8198>],
             '$50pred': [<numba.core.ir.Assign object at 0x7fa2ce6a8b70>],
             '$52.1': [<numba.core.ir.Assign object at 0x7fa2ce6a8be0>],
             '$52.11': [<numba.core.ir.Assign object at 0x7fa2ce0a06a0>],
             '$52.14': [<numba.core.ir.Assign object at 0x7fa2ce6807f0>],
             '$52.15': [<numba.core.ir.Assign object at 0x7fa2ce6808d0>],
             '$52.17': [<numba.core.ir.Assign object at 0x7fa2ce680a58>],
             '$52.18': [<numba.core.ir.Assign object at 0x7fa2ce680b38>],
             '$52.2': [<numba.core.ir.Assign object at 0x7fa2ce6a8cc0>],
             '$52.23': [<numba.core.ir.Assign object at 0x7fa2ce680f60>],
             '$52.26': [<numba.core.ir.Assign object at 0x7fa2ce5f8f60>],
             '$52.27': [<numba.core.ir.Assign object at 0x7fa2ce6282e8>],
             '$52.32': [<numba.core.ir.Assign object at 0x7fa2ce628710>],
             '$52.35': [<numba.core.ir.Assign object at 0x7fa2ce5f8ba8>],
             '$52.36': [<numba.core.ir.Assign object at 0x7fa2ce628a58>],
             '$52.4': [<numba.core.ir.Assign object at 0x7fa2ce6a8e48>],
             '$52.41': [<numba.core.ir.Assign object at 0x7fa2ce628e80>],
             '$52.44': [<numba.core.ir.Assign object at 0x7fa2ce5f8c18>],
             '$52.45': [<numba.core.ir.Assign object at 0x7fa2ce610208>],
             '$52.7': [<numba.core.ir.Assign object at 0x7fa2ce680198>],
             '$52.8': [<numba.core.ir.Assign object at 0x7fa2ce680278>],
             '$const0.11': [<numba.core.ir.Assign object at 0x7fa2ce4c3e80>],
             '$const0.15': [<numba.core.ir.Assign object at 0x7fa2ce6a8208>],
             '$const0.17': [<numba.core.ir.Assign object at 0x7fa2ce6a83c8>],
             '$const0.4': [<numba.core.ir.Assign object at 0x7fa2ce4c3898>],
             '$const0.6': [<numba.core.ir.Assign object at 0x7fa2ce4c3a58>],
             '$const0.9': [<numba.core.ir.Assign object at 0x7fa2ce4c3cc0>],
             '$const160.11': [<numba.core.ir.Assign object at 0x7fa2ce6109e8>],
             '$const160.12': [<numba.core.ir.Assign object at 0x7fa2ce610b38>],
             '$const160.14': [<numba.core.ir.Assign object at 0x7fa2ce610cc0>],
             '$const160.15': [<numba.core.ir.Assign object at 0x7fa2ce610e10>],
             '$const160.17': [<numba.core.ir.Assign object at 0x7fa2ce610f98>],
             '$const160.4': [<numba.core.ir.Assign object at 0x7fa2ce628f28>],
             '$const160.8': [<numba.core.ir.Assign object at 0x7fa2ce610710>],
             '$const160.9': [<numba.core.ir.Assign object at 0x7fa2ce610860>],
             '$const202.1': [<numba.core.ir.Assign object at 0x7fa2ce5f80b8>],
             '$const52.10': [<numba.core.ir.Assign object at 0x7fa2ce680400>],
             '$const52.20': [<numba.core.ir.Assign object at 0x7fa2ce680cc0>],
             '$const52.25': [<numba.core.ir.Assign object at 0x7fa2ce628128>],
             '$const52.29': [<numba.core.ir.Assign object at 0x7fa2ce628470>],
             '$const52.34': [<numba.core.ir.Assign object at 0x7fa2ce628898>],
             '$const52.38': [<numba.core.ir.Assign object at 0x7fa2ce628be0>],
             '$const52.43': [<numba.core.ir.Assign object at 0x7fa2ce610048>],
             '$const52.47': [<numba.core.ir.Assign object at 0x7fa2ce610390>],
             'bool50': [<numba.core.ir.Assign object at 0x7fa2ce6a8a90>],
             'e': [<numba.core.ir.Assign object at 0x7fa2ce6805c0>],
             'q': [<numba.core.ir.Assign object at 0x7fa2ce4c34a8>],
             'qout': [<numba.core.ir.Assign object at 0x7fa2ce4c3550>],
             's': [<numba.core.ir.Assign object at 0x7fa2ce6a8fd0>],
             'vnorm': [<numba.core.ir.Assign object at 0x7fa2ce6a8668>]})
2022-08-04 11:53:05,466 DEBUG SSA violators set()
2022-08-04 11:53:05,633 DEBUG label 0:
    q = arg(0, name=q)                       ['q']
    qout = arg(1, name=qout)                 ['qout']
    $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$0.1']
    $0.2 = getattr(value=$0.1, attr=sqrt)    ['$0.1', '$0.2']
    $const0.4 = const(int, 1)                ['$const0.4']
    $0.5 = getitem(value=q, index=$const0.4, fn=<built-in function getitem>) ['$0.5', '$const0.4', 'q']
    $const0.6 = const(int, 2)                ['$const0.6']
    $0.7 = $0.5 ** $const0.6                 ['$0.5', '$0.7', '$const0.6']
    $const0.9 = const(int, 2)                ['$const0.9']
    $0.10 = getitem(value=q, index=$const0.9, fn=<built-in function getitem>) ['$0.10', '$const0.9', 'q']
    $const0.11 = const(int, 2)               ['$const0.11']
    $0.12 = $0.10 ** $const0.11              ['$0.10', '$0.12', '$const0.11']
    $0.13 = $0.7 + $0.12                     ['$0.12', '$0.13', '$0.7']
    $const0.15 = const(int, 3)               ['$const0.15']
    $0.16 = getitem(value=q, index=$const0.15, fn=<built-in function getitem>) ['$0.16', '$const0.15', 'q']
    $const0.17 = const(int, 2)               ['$const0.17']
    $0.18 = $0.16 ** $const0.17              ['$0.16', '$0.18', '$const0.17']
    $0.19 = $0.13 + $0.18                    ['$0.13', '$0.18', '$0.19']
    b = call $0.2($0.19, func=$0.2, args=[Var($0.19, algebra.py:227)], kws=(), vararg=None) ['$0.19', '$0.2', 'b']
    $0.22 = global(_quaternion_resolution: 1.0000000000000002e-14) ['$0.22']
    $0.23 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$0.23']
    $0.24 = getattr(value=$0.23, attr=abs)   ['$0.23', '$0.24']
    $const0.26 = const(int, 0)               ['$const0.26']
    $0.27 = getitem(value=q, index=$const0.26, fn=<built-in function getitem>) ['$0.27', '$const0.26', 'q']
    $0.28 = call $0.24($0.27, func=$0.24, args=[Var($0.27, algebra.py:228)], kws=(), vararg=None) ['$0.24', '$0.27', '$0.28']
    $0.29 = $0.22 * $0.28                    ['$0.22', '$0.28', '$0.29']
    $0.30 = b <= $0.29                       ['$0.29', '$0.30', 'b']
    bool64 = global(bool: <class 'bool'>)    ['bool64']
    $64pred = call bool64($0.30, func=bool64, args=(Var($0.30, algebra.py:228),), kws=(), vararg=None) ['$0.30', '$64pred', 'bool64']
    branch $64pred, 66, 228                  ['$64pred']
label 66:
    $const66.2 = const(int, 0)               ['$const66.2']
    $66.3 = getitem(value=q, index=$const66.2, fn=<built-in function getitem>) ['$66.3', '$const66.2', 'q']
    $const66.4 = const(float, 0.0)           ['$const66.4']
    $66.5 = $66.3 < $const66.4               ['$66.3', '$66.5', '$const66.4']
    bool76 = global(bool: <class 'bool'>)    ['bool76']
    $76pred = call bool76($66.5, func=bool76, args=(Var($66.5, algebra.py:229),), kws=(), vararg=None) ['$66.5', '$76pred', 'bool76']
    branch $76pred, 78, 184                  ['$76pred']
label 78:
    $78.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$78.1']
    $78.2 = getattr(value=$78.1, attr=abs)   ['$78.1', '$78.2']
    $const78.4 = const(int, 0)               ['$const78.4']
    $78.5 = getitem(value=q, index=$const78.4, fn=<built-in function getitem>) ['$78.5', '$const78.4', 'q']
    $const78.6 = const(int, 1)               ['$const78.6']
    $78.7 = $78.5 + $const78.6               ['$78.5', '$78.7', '$const78.6']
    $78.8 = call $78.2($78.7, func=$78.2, args=[Var($78.7, algebra.py:230)], kws=(), vararg=None) ['$78.2', '$78.7', '$78.8']
    $78.9 = global(_quaternion_resolution: 1.0000000000000002e-14) ['$78.9']
    $78.10 = $78.8 > $78.9                   ['$78.10', '$78.8', '$78.9']
    bool98 = global(bool: <class 'bool'>)    ['bool98']
    $98pred = call bool98($78.10, func=bool98, args=(Var($78.10, algebra.py:230),), kws=(), vararg=None) ['$78.10', '$98pred', 'bool98']
    branch $98pred, 100, 148                 ['$98pred']
label 100:
    $100.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$100.1']
    $100.2 = getattr(value=$100.1, attr=log) ['$100.1', '$100.2']
    $const100.4 = const(int, 0)              ['$const100.4']
    $100.5 = getitem(value=q, index=$const100.4, fn=<built-in function getitem>) ['$100.5', '$const100.4', 'q']
    $100.6 = unary(fn=<built-in function neg>, value=$100.5) ['$100.5', '$100.6']
    $100.7 = call $100.2($100.6, func=$100.2, args=[Var($100.6, algebra.py:231)], kws=(), vararg=None) ['$100.2', '$100.6', '$100.7']
    $const100.9 = const(int, 0)              ['$const100.9']
    qout[$const100.9] = $100.7               ['$100.7', '$const100.9', 'qout']
    $100.10 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$100.10']
    $100.11 = getattr(value=$100.10, attr=pi) ['$100.10', '$100.11']
    $const100.13 = const(int, 1)             ['$const100.13']
    qout[$const100.13] = $100.11             ['$100.11', '$const100.13', 'qout']
    $const100.14 = const(float, 0.0)         ['$const100.14']
    $const100.16 = const(int, 2)             ['$const100.16']
    qout[$const100.16] = $const100.14        ['$const100.14', '$const100.16', 'qout']
    $const100.17 = const(float, 0.0)         ['$const100.17']
    $const100.19 = const(int, 3)             ['$const100.19']
    qout[$const100.19] = $const100.17        ['$const100.17', '$const100.19', 'qout']
    jump 226                                 []
label 148:
    $const148.1 = const(float, 0.0)          ['$const148.1']
    $const148.3 = const(int, 0)              ['$const148.3']
    qout[$const148.3] = $const148.1          ['$const148.1', '$const148.3', 'qout']
    $148.4 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$148.4']
    $148.5 = getattr(value=$148.4, attr=pi)  ['$148.4', '$148.5']
    $const148.7 = const(int, 1)              ['$const148.7']
    qout[$const148.7] = $148.5               ['$148.5', '$const148.7', 'qout']
    $const148.8 = const(float, 0.0)          ['$const148.8']
    $const148.10 = const(int, 2)             ['$const148.10']
    qout[$const148.10] = $const148.8         ['$const148.10', '$const148.8', 'qout']
    $const148.11 = const(float, 0.0)         ['$const148.11']
    $const148.13 = const(int, 3)             ['$const148.13']
    qout[$const148.13] = $const148.11        ['$const148.11', '$const148.13', 'qout']
    jump 226                                 []
label 184:
    $184.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$184.1']
    $184.2 = getattr(value=$184.1, attr=log) ['$184.1', '$184.2']
    $const184.4 = const(int, 0)              ['$const184.4']
    $184.5 = getitem(value=q, index=$const184.4, fn=<built-in function getitem>) ['$184.5', '$const184.4', 'q']
    $184.6 = call $184.2($184.5, func=$184.2, args=[Var($184.5, algebra.py:241)], kws=(), vararg=None) ['$184.2', '$184.5', '$184.6']
    $const184.8 = const(int, 0)              ['$const184.8']
    qout[$const184.8] = $184.6               ['$184.6', '$const184.8', 'qout']
    $const184.9 = const(float, 0.0)          ['$const184.9']
    $const184.11 = const(int, 1)             ['$const184.11']
    qout[$const184.11] = $const184.9         ['$const184.11', '$const184.9', 'qout']
    $const184.12 = const(float, 0.0)         ['$const184.12']
    $const184.14 = const(int, 2)             ['$const184.14']
    qout[$const184.14] = $const184.12        ['$const184.12', '$const184.14', 'qout']
    $const184.15 = const(float, 0.0)         ['$const184.15']
    $const184.17 = const(int, 3)             ['$const184.17']
    qout[$const184.17] = $const184.15        ['$const184.15', '$const184.17', 'qout']
    jump 226                                 []
label 226:
    jump 338                                 []
label 228:
    $228.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$228.1']
    $228.2 = getattr(value=$228.1, attr=arctan2) ['$228.1', '$228.2']
    $const228.5 = const(int, 0)              ['$const228.5']
    $228.6 = getitem(value=q, index=$const228.5, fn=<built-in function getitem>) ['$228.6', '$const228.5', 'q']
    v = call $228.2(b, $228.6, func=$228.2, args=[Var(b, algebra.py:227), Var($228.6, algebra.py:246)], kws=(), vararg=None) ['$228.2', '$228.6', 'b', 'v']
    f = v / b                                ['b', 'f', 'v']
    $228.11 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$228.11']
    $228.12 = getattr(value=$228.11, attr=log) ['$228.11', '$228.12']
    $const228.14 = const(int, 0)             ['$const228.14']
    $228.15 = getitem(value=q, index=$const228.14, fn=<built-in function getitem>) ['$228.15', '$const228.14', 'q']
    $const228.17 = const(int, 0)             ['$const228.17']
    $228.18 = getitem(value=q, index=$const228.17, fn=<built-in function getitem>) ['$228.18', '$const228.17', 'q']
    $228.19 = $228.15 * $228.18              ['$228.15', '$228.18', '$228.19']
    $228.22 = b * b                          ['$228.22', 'b', 'b']
    $228.23 = $228.19 + $228.22              ['$228.19', '$228.22', '$228.23']
    $228.24 = call $228.12($228.23, func=$228.12, args=[Var($228.23, algebra.py:248)], kws=(), vararg=None) ['$228.12', '$228.23', '$228.24']
    $const228.25 = const(float, 2.0)         ['$const228.25']
    $228.26 = $228.24 / $const228.25         ['$228.24', '$228.26', '$const228.25']
    $const228.28 = const(int, 0)             ['$const228.28']
    qout[$const228.28] = $228.26             ['$228.26', '$const228.28', 'qout']
    $const228.31 = const(int, 1)             ['$const228.31']
    $228.32 = getitem(value=q, index=$const228.31, fn=<built-in function getitem>) ['$228.32', '$const228.31', 'q']
    $228.33 = f * $228.32                    ['$228.32', '$228.33', 'f']
    $const228.35 = const(int, 1)             ['$const228.35']
    qout[$const228.35] = $228.33             ['$228.33', '$const228.35', 'qout']
    $const228.38 = const(int, 2)             ['$const228.38']
    $228.39 = getitem(value=q, index=$const228.38, fn=<built-in function getitem>) ['$228.39', '$const228.38', 'q']
    $228.40 = f * $228.39                    ['$228.39', '$228.40', 'f']
    $const228.42 = const(int, 2)             ['$const228.42']
    qout[$const228.42] = $228.40             ['$228.40', '$const228.42', 'qout']
    $const228.45 = const(int, 3)             ['$const228.45']
    $228.46 = getitem(value=q, index=$const228.45, fn=<built-in function getitem>) ['$228.46', '$const228.45', 'q']
    $228.47 = f * $228.46                    ['$228.46', '$228.47', 'f']
    $const228.49 = const(int, 3)             ['$const228.49']
    qout[$const228.49] = $228.47             ['$228.47', '$const228.49', 'qout']
    jump 338                                 []
label 338:
    $const338.1 = const(NoneType, None)      ['$const338.1']
    $338.2 = cast(value=$const338.1)         ['$338.2', '$const338.1']
    return $338.2                            ['$338.2']

2022-08-04 11:53:05,647 DEBUG ==== SSA block analysis pass on 0
2022-08-04 11:53:05,647 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdd0c2e8>
2022-08-04 11:53:05,647 DEBUG on stmt: q = arg(0, name=q)
2022-08-04 11:53:05,647 DEBUG on stmt: qout = arg(1, name=qout)
2022-08-04 11:53:05,647 DEBUG on stmt: $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:05,647 DEBUG on stmt: $0.2 = getattr(value=$0.1, attr=sqrt)
2022-08-04 11:53:05,647 DEBUG on stmt: $const0.4 = const(int, 1)
2022-08-04 11:53:05,647 DEBUG on stmt: $0.5 = static_getitem(value=q, index=1, index_var=$const0.4, fn=<built-in function getitem>)
2022-08-04 11:53:05,647 DEBUG on stmt: $const0.6 = const(int, 2)
2022-08-04 11:53:05,647 DEBUG on stmt: $0.7 = $0.5 ** $const0.6
2022-08-04 11:53:05,647 DEBUG on stmt: $const0.9 = const(int, 2)
2022-08-04 11:53:05,647 DEBUG on stmt: $0.10 = static_getitem(value=q, index=2, index_var=$const0.9, fn=<built-in function getitem>)
2022-08-04 11:53:05,647 DEBUG on stmt: $const0.11 = const(int, 2)
2022-08-04 11:53:05,647 DEBUG on stmt: $0.12 = $0.10 ** $const0.11
2022-08-04 11:53:05,648 DEBUG on stmt: $0.13 = $0.7 + $0.12
2022-08-04 11:53:05,648 DEBUG on stmt: $const0.15 = const(int, 3)
2022-08-04 11:53:05,648 DEBUG on stmt: $0.16 = static_getitem(value=q, index=3, index_var=$const0.15, fn=<built-in function getitem>)
2022-08-04 11:53:05,648 DEBUG on stmt: $const0.17 = const(int, 2)
2022-08-04 11:53:05,648 DEBUG on stmt: $0.18 = $0.16 ** $const0.17
2022-08-04 11:53:05,648 DEBUG on stmt: $0.19 = $0.13 + $0.18
2022-08-04 11:53:05,648 DEBUG on stmt: b = call $0.2($0.19, func=$0.2, args=[Var($0.19, algebra.py:227)], kws=(), vararg=None)
2022-08-04 11:53:05,648 DEBUG on stmt: $0.22 = global(_quaternion_resolution: 1.0000000000000002e-14)
2022-08-04 11:53:05,648 DEBUG on stmt: $0.23 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:05,648 DEBUG on stmt: $0.24 = getattr(value=$0.23, attr=abs)
2022-08-04 11:53:05,648 DEBUG on stmt: $const0.26 = const(int, 0)
2022-08-04 11:53:05,648 DEBUG on stmt: $0.27 = static_getitem(value=q, index=0, index_var=$const0.26, fn=<built-in function getitem>)
2022-08-04 11:53:05,648 DEBUG on stmt: $0.28 = call $0.24($0.27, func=$0.24, args=[Var($0.27, algebra.py:228)], kws=(), vararg=None)
2022-08-04 11:53:05,648 DEBUG on stmt: $0.29 = $0.22 * $0.28
2022-08-04 11:53:05,648 DEBUG on stmt: $0.30 = b <= $0.29
2022-08-04 11:53:05,648 DEBUG on stmt: bool64 = global(bool: <class 'bool'>)
2022-08-04 11:53:05,648 DEBUG on stmt: $64pred = call bool64($0.30, func=bool64, args=(Var($0.30, algebra.py:228),), kws=(), vararg=None)
2022-08-04 11:53:05,648 DEBUG on stmt: branch $64pred, 66, 228
2022-08-04 11:53:05,648 DEBUG ==== SSA block analysis pass on 66
2022-08-04 11:53:05,648 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdd0c2e8>
2022-08-04 11:53:05,648 DEBUG on stmt: $const66.2 = const(int, 0)
2022-08-04 11:53:05,648 DEBUG on stmt: $66.3 = static_getitem(value=q, index=0, index_var=$const66.2, fn=<built-in function getitem>)
2022-08-04 11:53:05,648 DEBUG on stmt: $const66.4 = const(float, 0.0)
2022-08-04 11:53:05,648 DEBUG on stmt: $66.5 = $66.3 < $const66.4
2022-08-04 11:53:05,648 DEBUG on stmt: bool76 = global(bool: <class 'bool'>)
2022-08-04 11:53:05,648 DEBUG on stmt: $76pred = call bool76($66.5, func=bool76, args=(Var($66.5, algebra.py:229),), kws=(), vararg=None)
2022-08-04 11:53:05,649 DEBUG on stmt: branch $76pred, 78, 184
2022-08-04 11:53:05,649 DEBUG ==== SSA block analysis pass on 78
2022-08-04 11:53:05,649 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdd0c2e8>
2022-08-04 11:53:05,649 DEBUG on stmt: $78.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:05,649 DEBUG on stmt: $78.2 = getattr(value=$78.1, attr=abs)
2022-08-04 11:53:05,649 DEBUG on stmt: $const78.4 = const(int, 0)
2022-08-04 11:53:05,649 DEBUG on stmt: $78.5 = static_getitem(value=q, index=0, index_var=$const78.4, fn=<built-in function getitem>)
2022-08-04 11:53:05,649 DEBUG on stmt: $const78.6 = const(int, 1)
2022-08-04 11:53:05,649 DEBUG on stmt: $78.7 = $78.5 + $const78.6
2022-08-04 11:53:05,649 DEBUG on stmt: $78.8 = call $78.2($78.7, func=$78.2, args=[Var($78.7, algebra.py:230)], kws=(), vararg=None)
2022-08-04 11:53:05,649 DEBUG on stmt: $78.9 = global(_quaternion_resolution: 1.0000000000000002e-14)
2022-08-04 11:53:05,649 DEBUG on stmt: $78.10 = $78.8 > $78.9
2022-08-04 11:53:05,649 DEBUG on stmt: bool98 = global(bool: <class 'bool'>)
2022-08-04 11:53:05,649 DEBUG on stmt: $98pred = call bool98($78.10, func=bool98, args=(Var($78.10, algebra.py:230),), kws=(), vararg=None)
2022-08-04 11:53:05,649 DEBUG on stmt: branch $98pred, 100, 148
2022-08-04 11:53:05,649 DEBUG ==== SSA block analysis pass on 100
2022-08-04 11:53:05,649 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdd0c2e8>
2022-08-04 11:53:05,649 DEBUG on stmt: $100.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:05,649 DEBUG on stmt: $100.2 = getattr(value=$100.1, attr=log)
2022-08-04 11:53:05,649 DEBUG on stmt: $const100.4 = const(int, 0)
2022-08-04 11:53:05,649 DEBUG on stmt: $100.5 = static_getitem(value=q, index=0, index_var=$const100.4, fn=<built-in function getitem>)
2022-08-04 11:53:05,649 DEBUG on stmt: $100.6 = unary(fn=<built-in function neg>, value=$100.5)
2022-08-04 11:53:05,649 DEBUG on stmt: $100.7 = call $100.2($100.6, func=$100.2, args=[Var($100.6, algebra.py:231)], kws=(), vararg=None)
2022-08-04 11:53:05,649 DEBUG on stmt: $const100.9 = const(int, 0)
2022-08-04 11:53:05,649 DEBUG on stmt: qout[0] = $100.7
2022-08-04 11:53:05,650 DEBUG on stmt: $100.10 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:05,650 DEBUG on stmt: $100.11 = getattr(value=$100.10, attr=pi)
2022-08-04 11:53:05,650 DEBUG on stmt: $const100.13 = const(int, 1)
2022-08-04 11:53:05,650 DEBUG on stmt: qout[1] = $100.11
2022-08-04 11:53:05,650 DEBUG on stmt: $const100.14 = const(float, 0.0)
2022-08-04 11:53:05,650 DEBUG on stmt: $const100.16 = const(int, 2)
2022-08-04 11:53:05,650 DEBUG on stmt: qout[2] = $const100.14
2022-08-04 11:53:05,650 DEBUG on stmt: $const100.17 = const(float, 0.0)
2022-08-04 11:53:05,650 DEBUG on stmt: $const100.19 = const(int, 3)
2022-08-04 11:53:05,650 DEBUG on stmt: qout[3] = $const100.17
2022-08-04 11:53:05,650 DEBUG on stmt: jump 226
2022-08-04 11:53:05,650 DEBUG ==== SSA block analysis pass on 148
2022-08-04 11:53:05,650 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdd0c2e8>
2022-08-04 11:53:05,650 DEBUG on stmt: $const148.1 = const(float, 0.0)
2022-08-04 11:53:05,650 DEBUG on stmt: $const148.3 = const(int, 0)
2022-08-04 11:53:05,650 DEBUG on stmt: qout[0] = $const148.1
2022-08-04 11:53:05,650 DEBUG on stmt: $148.4 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:05,650 DEBUG on stmt: $148.5 = getattr(value=$148.4, attr=pi)
2022-08-04 11:53:05,650 DEBUG on stmt: $const148.7 = const(int, 1)
2022-08-04 11:53:05,650 DEBUG on stmt: qout[1] = $148.5
2022-08-04 11:53:05,650 DEBUG on stmt: $const148.8 = const(float, 0.0)
2022-08-04 11:53:05,650 DEBUG on stmt: $const148.10 = const(int, 2)
2022-08-04 11:53:05,650 DEBUG on stmt: qout[2] = $const148.8
2022-08-04 11:53:05,650 DEBUG on stmt: $const148.11 = const(float, 0.0)
2022-08-04 11:53:05,650 DEBUG on stmt: $const148.13 = const(int, 3)
2022-08-04 11:53:05,650 DEBUG on stmt: qout[3] = $const148.11
2022-08-04 11:53:05,650 DEBUG on stmt: jump 226
2022-08-04 11:53:05,651 DEBUG ==== SSA block analysis pass on 184
2022-08-04 11:53:05,651 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdd0c2e8>
2022-08-04 11:53:05,651 DEBUG on stmt: $184.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:05,651 DEBUG on stmt: $184.2 = getattr(value=$184.1, attr=log)
2022-08-04 11:53:05,651 DEBUG on stmt: $const184.4 = const(int, 0)
2022-08-04 11:53:05,651 DEBUG on stmt: $184.5 = static_getitem(value=q, index=0, index_var=$const184.4, fn=<built-in function getitem>)
2022-08-04 11:53:05,651 DEBUG on stmt: $184.6 = call $184.2($184.5, func=$184.2, args=[Var($184.5, algebra.py:241)], kws=(), vararg=None)
2022-08-04 11:53:05,651 DEBUG on stmt: $const184.8 = const(int, 0)
2022-08-04 11:53:05,651 DEBUG on stmt: qout[0] = $184.6
2022-08-04 11:53:05,651 DEBUG on stmt: $const184.9 = const(float, 0.0)
2022-08-04 11:53:05,651 DEBUG on stmt: $const184.11 = const(int, 1)
2022-08-04 11:53:05,651 DEBUG on stmt: qout[1] = $const184.9
2022-08-04 11:53:05,651 DEBUG on stmt: $const184.12 = const(float, 0.0)
2022-08-04 11:53:05,651 DEBUG on stmt: $const184.14 = const(int, 2)
2022-08-04 11:53:05,651 DEBUG on stmt: qout[2] = $const184.12
2022-08-04 11:53:05,651 DEBUG on stmt: $const184.15 = const(float, 0.0)
2022-08-04 11:53:05,651 DEBUG on stmt: $const184.17 = const(int, 3)
2022-08-04 11:53:05,651 DEBUG on stmt: qout[3] = $const184.15
2022-08-04 11:53:05,651 DEBUG on stmt: jump 226
2022-08-04 11:53:05,651 DEBUG ==== SSA block analysis pass on 226
2022-08-04 11:53:05,651 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdd0c2e8>
2022-08-04 11:53:05,651 DEBUG on stmt: jump 338
2022-08-04 11:53:05,651 DEBUG ==== SSA block analysis pass on 228
2022-08-04 11:53:05,651 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdd0c2e8>
2022-08-04 11:53:05,651 DEBUG on stmt: $228.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:05,651 DEBUG on stmt: $228.2 = getattr(value=$228.1, attr=arctan2)
2022-08-04 11:53:05,651 DEBUG on stmt: $const228.5 = const(int, 0)
2022-08-04 11:53:05,652 DEBUG on stmt: $228.6 = static_getitem(value=q, index=0, index_var=$const228.5, fn=<built-in function getitem>)
2022-08-04 11:53:05,652 DEBUG on stmt: v = call $228.2(b, $228.6, func=$228.2, args=[Var(b, algebra.py:227), Var($228.6, algebra.py:246)], kws=(), vararg=None)
2022-08-04 11:53:05,652 DEBUG on stmt: f = v / b
2022-08-04 11:53:05,652 DEBUG on stmt: $228.11 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:05,652 DEBUG on stmt: $228.12 = getattr(value=$228.11, attr=log)
2022-08-04 11:53:05,652 DEBUG on stmt: $const228.14 = const(int, 0)
2022-08-04 11:53:05,652 DEBUG on stmt: $228.15 = static_getitem(value=q, index=0, index_var=$const228.14, fn=<built-in function getitem>)
2022-08-04 11:53:05,652 DEBUG on stmt: $const228.17 = const(int, 0)
2022-08-04 11:53:05,652 DEBUG on stmt: $228.18 = static_getitem(value=q, index=0, index_var=$const228.17, fn=<built-in function getitem>)
2022-08-04 11:53:05,652 DEBUG on stmt: $228.19 = $228.15 * $228.18
2022-08-04 11:53:05,652 DEBUG on stmt: $228.22 = b * b
2022-08-04 11:53:05,652 DEBUG on stmt: $228.23 = $228.19 + $228.22
2022-08-04 11:53:05,652 DEBUG on stmt: $228.24 = call $228.12($228.23, func=$228.12, args=[Var($228.23, algebra.py:248)], kws=(), vararg=None)
2022-08-04 11:53:05,652 DEBUG on stmt: $const228.25 = const(float, 2.0)
2022-08-04 11:53:05,652 DEBUG on stmt: $228.26 = $228.24 / $const228.25
2022-08-04 11:53:05,652 DEBUG on stmt: $const228.28 = const(int, 0)
2022-08-04 11:53:05,652 DEBUG on stmt: qout[0] = $228.26
2022-08-04 11:53:05,652 DEBUG on stmt: $const228.31 = const(int, 1)
2022-08-04 11:53:05,652 DEBUG on stmt: $228.32 = static_getitem(value=q, index=1, index_var=$const228.31, fn=<built-in function getitem>)
2022-08-04 11:53:05,652 DEBUG on stmt: $228.33 = f * $228.32
2022-08-04 11:53:05,652 DEBUG on stmt: $const228.35 = const(int, 1)
2022-08-04 11:53:05,652 DEBUG on stmt: qout[1] = $228.33
2022-08-04 11:53:05,653 DEBUG on stmt: $const228.38 = const(int, 2)
2022-08-04 11:53:05,653 DEBUG on stmt: $228.39 = static_getitem(value=q, index=2, index_var=$const228.38, fn=<built-in function getitem>)
2022-08-04 11:53:05,653 DEBUG on stmt: $228.40 = f * $228.39
2022-08-04 11:53:05,653 DEBUG on stmt: $const228.42 = const(int, 2)
2022-08-04 11:53:05,653 DEBUG on stmt: qout[2] = $228.40
2022-08-04 11:53:05,653 DEBUG on stmt: $const228.45 = const(int, 3)
2022-08-04 11:53:05,653 DEBUG on stmt: $228.46 = static_getitem(value=q, index=3, index_var=$const228.45, fn=<built-in function getitem>)
2022-08-04 11:53:05,653 DEBUG on stmt: $228.47 = f * $228.46
2022-08-04 11:53:05,653 DEBUG on stmt: $const228.49 = const(int, 3)
2022-08-04 11:53:05,653 DEBUG on stmt: qout[3] = $228.47
2022-08-04 11:53:05,653 DEBUG on stmt: jump 338
2022-08-04 11:53:05,653 DEBUG ==== SSA block analysis pass on 338
2022-08-04 11:53:05,653 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdd0c2e8>
2022-08-04 11:53:05,653 DEBUG on stmt: $const338.1 = const(NoneType, None)
2022-08-04 11:53:05,653 DEBUG on stmt: $338.2 = cast(value=$const338.1)
2022-08-04 11:53:05,653 DEBUG on stmt: return $338.2
2022-08-04 11:53:05,655 DEBUG defs defaultdict(<class 'list'>,
            {'$0.1': [<numba.core.ir.Assign object at 0x7fa2cdd2f2b0>],
             '$0.10': [<numba.core.ir.Assign object at 0x7fa2ce306fd0>],
             '$0.12': [<numba.core.ir.Assign object at 0x7fa2cdeaccf8>],
             '$0.13': [<numba.core.ir.Assign object at 0x7fa2ce0a0518>],
             '$0.16': [<numba.core.ir.Assign object at 0x7fa2ce306c88>],
             '$0.18': [<numba.core.ir.Assign object at 0x7fa2ce2c0a58>],
             '$0.19': [<numba.core.ir.Assign object at 0x7fa2ce2c0860>],
             '$0.2': [<numba.core.ir.Assign object at 0x7fa2cdd2f198>],
             '$0.22': [<numba.core.ir.Assign object at 0x7fa2ce2c0198>],
             '$0.23': [<numba.core.ir.Assign object at 0x7fa2ce2c0748>],
             '$0.24': [<numba.core.ir.Assign object at 0x7fa2ce2c0780>],
             '$0.27': [<numba.core.ir.Assign object at 0x7fa2ce306cf8>],
             '$0.28': [<numba.core.ir.Assign object at 0x7fa2ce2c0b70>],
             '$0.29': [<numba.core.ir.Assign object at 0x7fa2ce2c0eb8>],
             '$0.30': [<numba.core.ir.Assign object at 0x7fa2ce2c0da0>],
             '$0.5': [<numba.core.ir.Assign object at 0x7fa2ce306f60>],
             '$0.7': [<numba.core.ir.Assign object at 0x7fa2cdeac748>],
             '$100.1': [<numba.core.ir.Assign object at 0x7fa2ce28cc18>],
             '$100.10': [<numba.core.ir.Assign object at 0x7fa2ce28c1d0>],
             '$100.11': [<numba.core.ir.Assign object at 0x7fa2ce28c128>],
             '$100.2': [<numba.core.ir.Assign object at 0x7fa2ce28cda0>],
             '$100.5': [<numba.core.ir.Assign object at 0x7fa2cdd0ccf8>],
             '$100.6': [<numba.core.ir.Assign object at 0x7fa2ce28c4e0>],
             '$100.7': [<numba.core.ir.Assign object at 0x7fa2ce28c358>],
             '$148.4': [<numba.core.ir.Assign object at 0x7fa2ce2e94a8>],
             '$148.5': [<numba.core.ir.Assign object at 0x7fa2ce2e9278>],
             '$184.1': [<numba.core.ir.Assign object at 0x7fa2ce2fec50>],
             '$184.2': [<numba.core.ir.Assign object at 0x7fa2ce2fe5c0>],
             '$184.5': [<numba.core.ir.Assign object at 0x7fa2cdd0c0f0>],
             '$184.6': [<numba.core.ir.Assign object at 0x7fa2ce2fe8d0>],
             '$228.1': [<numba.core.ir.Assign object at 0x7fa2ce2fc2b0>],
             '$228.11': [<numba.core.ir.Assign object at 0x7fa2ce2fcbe0>],
             '$228.12': [<numba.core.ir.Assign object at 0x7fa2ce2fccc0>],
             '$228.15': [<numba.core.ir.Assign object at 0x7fa2cdd2f668>],
             '$228.18': [<numba.core.ir.Assign object at 0x7fa2cdd2f5c0>],
             '$228.19': [<numba.core.ir.Assign object at 0x7fa2ce305b38>],
             '$228.2': [<numba.core.ir.Assign object at 0x7fa2ce2fc390>],
             '$228.22': [<numba.core.ir.Assign object at 0x7fa2ce305978>],
             '$228.23': [<numba.core.ir.Assign object at 0x7fa2ce305940>],
             '$228.24': [<numba.core.ir.Assign object at 0x7fa2ce3052e8>],
             '$228.26': [<numba.core.ir.Assign object at 0x7fa2ce305278>],
             '$228.32': [<numba.core.ir.Assign object at 0x7fa2cdd2f550>],
             '$228.33': [<numba.core.ir.Assign object at 0x7fa2ce305748>],
             '$228.39': [<numba.core.ir.Assign object at 0x7fa2cdd2f828>],
             '$228.40': [<numba.core.ir.Assign object at 0x7fa2ce306470>],
             '$228.46': [<numba.core.ir.Assign object at 0x7fa2cdd2f6d8>],
             '$228.47': [<numba.core.ir.Assign object at 0x7fa2ce306a58>],
             '$228.6': [<numba.core.ir.Assign object at 0x7fa2cdd2f8d0>],
             '$338.2': [<numba.core.ir.Assign object at 0x7fa2ce305208>],
             '$64pred': [<numba.core.ir.Assign object at 0x7fa2ce2c06a0>],
             '$66.3': [<numba.core.ir.Assign object at 0x7fa2ce306eb8>],
             '$66.5': [<numba.core.ir.Assign object at 0x7fa2cde9ef98>],
             '$76pred': [<numba.core.ir.Assign object at 0x7fa2cde9e908>],
             '$78.1': [<numba.core.ir.Assign object at 0x7fa2cde9ea58>],
             '$78.10': [<numba.core.ir.Assign object at 0x7fa2ce28c860>],
             '$78.2': [<numba.core.ir.Assign object at 0x7fa2cde9eba8>],
             '$78.5': [<numba.core.ir.Assign object at 0x7fa2ce306e10>],
             '$78.7': [<numba.core.ir.Assign object at 0x7fa2ce28cbe0>],
             '$78.8': [<numba.core.ir.Assign object at 0x7fa2ce28c5f8>],
             '$78.9': [<numba.core.ir.Assign object at 0x7fa2ce28c748>],
             '$98pred': [<numba.core.ir.Assign object at 0x7fa2ce28cb00>],
             '$const0.11': [<numba.core.ir.Assign object at 0x7fa2cdeac7f0>],
             '$const0.15': [<numba.core.ir.Assign object at 0x7fa2ce628978>],
             '$const0.17': [<numba.core.ir.Assign object at 0x7fa2ce2c0c50>],
             '$const0.26': [<numba.core.ir.Assign object at 0x7fa2ce2c0278>],
             '$const0.4': [<numba.core.ir.Assign object at 0x7fa2cdd2f358>],
             '$const0.6': [<numba.core.ir.Assign object at 0x7fa2cdeacb70>],
             '$const0.9': [<numba.core.ir.Assign object at 0x7fa2cdeac710>],
             '$const100.13': [<numba.core.ir.Assign object at 0x7fa2ce2e9940>],
             '$const100.14': [<numba.core.ir.Assign object at 0x7fa2ce2e9e80>],
             '$const100.16': [<numba.core.ir.Assign object at 0x7fa2ce2e9438>],
             '$const100.17': [<numba.core.ir.Assign object at 0x7fa2ce2e9f28>],
             '$const100.19': [<numba.core.ir.Assign object at 0x7fa2ce2e9ba8>],
             '$const100.4': [<numba.core.ir.Assign object at 0x7fa2ce28cf98>],
             '$const100.9': [<numba.core.ir.Assign object at 0x7fa2ce28c2e8>],
             '$const148.1': [<numba.core.ir.Assign object at 0x7fa2ce2e9c88>],
             '$const148.10': [<numba.core.ir.Assign object at 0x7fa2ce2fe470>],
             '$const148.11': [<numba.core.ir.Assign object at 0x7fa2ce2fe400>],
             '$const148.13': [<numba.core.ir.Assign object at 0x7fa2ce2feef0>],
             '$const148.3': [<numba.core.ir.Assign object at 0x7fa2ce2e9588>],
             '$const148.7': [<numba.core.ir.Assign object at 0x7fa2ce2e9048>],
             '$const148.8': [<numba.core.ir.Assign object at 0x7fa2ce2e90f0>],
             '$const184.11': [<numba.core.ir.Assign object at 0x7fa2cdd0c710>],
             '$const184.12': [<numba.core.ir.Assign object at 0x7fa2cdd0cc50>],
             '$const184.14': [<numba.core.ir.Assign object at 0x7fa2cdd0cdd8>],
             '$const184.15': [<numba.core.ir.Assign object at 0x7fa2cdd0cf28>],
             '$const184.17': [<numba.core.ir.Assign object at 0x7fa2ce2fc0f0>],
             '$const184.4': [<numba.core.ir.Assign object at 0x7fa2ce2fe710>],
             '$const184.8': [<numba.core.ir.Assign object at 0x7fa2ce2fea58>],
             '$const184.9': [<numba.core.ir.Assign object at 0x7fa2ce2feba8>],
             '$const228.14': [<numba.core.ir.Assign object at 0x7fa2ce2fce48>],
             '$const228.17': [<numba.core.ir.Assign object at 0x7fa2ce305e48>],
             '$const228.25': [<numba.core.ir.Assign object at 0x7fa2ce305390>],
             '$const228.28': [<numba.core.ir.Assign object at 0x7fa2ce305470>],
             '$const228.31': [<numba.core.ir.Assign object at 0x7fa2ce305a90>],
             '$const228.35': [<numba.core.ir.Assign object at 0x7fa2ce305588>],
             '$const228.38': [<numba.core.ir.Assign object at 0x7fa2ce3062b0>],
             '$const228.42': [<numba.core.ir.Assign object at 0x7fa2ce3065f8>],
             '$const228.45': [<numba.core.ir.Assign object at 0x7fa2ce306898>],
             '$const228.49': [<numba.core.ir.Assign object at 0x7fa2ce306be0>],
             '$const228.5': [<numba.core.ir.Assign object at 0x7fa2ce2fc5c0>],
             '$const338.1': [<numba.core.ir.Assign object at 0x7fa2ce2fcfd0>],
             '$const66.2': [<numba.core.ir.Assign object at 0x7fa2ce2c06d8>],
             '$const66.4': [<numba.core.ir.Assign object at 0x7fa2cde9e6d8>],
             '$const78.4': [<numba.core.ir.Assign object at 0x7fa2cde9ed30>],
             '$const78.6': [<numba.core.ir.Assign object at 0x7fa2cde9ef60>],
             'b': [<numba.core.ir.Assign object at 0x7fa2ce2c0390>],
             'bool64': [<numba.core.ir.Assign object at 0x7fa2ce2c0f28>],
             'bool76': [<numba.core.ir.Assign object at 0x7fa2cde9e828>],
             'bool98': [<numba.core.ir.Assign object at 0x7fa2ce28ca20>],
             'f': [<numba.core.ir.Assign object at 0x7fa2ce2fca58>],
             'q': [<numba.core.ir.Assign object at 0x7fa2ce4c3160>],
             'qout': [<numba.core.ir.Assign object at 0x7fa2cdd2f4a8>],
             'v': [<numba.core.ir.Assign object at 0x7fa2ce2fc780>]})
2022-08-04 11:53:05,655 DEBUG SSA violators set()
2022-08-04 11:53:05,902 DEBUG label 0:
    q = arg(0, name=q)                       ['q']
    qout = arg(1, name=qout)                 ['qout']
    $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$0.1']
    $0.2 = getattr(value=$0.1, attr=sqrt)    ['$0.1', '$0.2']
    $const0.4 = const(int, 0)                ['$const0.4']
    $0.5 = getitem(value=q, index=$const0.4, fn=<built-in function getitem>) ['$0.5', '$const0.4', 'q']
    $const0.6 = const(int, 2)                ['$const0.6']
    $0.7 = $0.5 ** $const0.6                 ['$0.5', '$0.7', '$const0.6']
    $const0.9 = const(int, 1)                ['$const0.9']
    $0.10 = getitem(value=q, index=$const0.9, fn=<built-in function getitem>) ['$0.10', '$const0.9', 'q']
    $const0.11 = const(int, 2)               ['$const0.11']
    $0.12 = $0.10 ** $const0.11              ['$0.10', '$0.12', '$const0.11']
    $0.13 = $0.7 + $0.12                     ['$0.12', '$0.13', '$0.7']
    $const0.15 = const(int, 2)               ['$const0.15']
    $0.16 = getitem(value=q, index=$const0.15, fn=<built-in function getitem>) ['$0.16', '$const0.15', 'q']
    $const0.17 = const(int, 2)               ['$const0.17']
    $0.18 = $0.16 ** $const0.17              ['$0.16', '$0.18', '$const0.17']
    $0.19 = $0.13 + $0.18                    ['$0.13', '$0.18', '$0.19']
    $const0.21 = const(int, 3)               ['$const0.21']
    $0.22 = getitem(value=q, index=$const0.21, fn=<built-in function getitem>) ['$0.22', '$const0.21', 'q']
    $const0.23 = const(int, 2)               ['$const0.23']
    $0.24 = $0.22 ** $const0.23              ['$0.22', '$0.24', '$const0.23']
    $0.25 = $0.19 + $0.24                    ['$0.19', '$0.24', '$0.25']
    a = call $0.2($0.25, func=$0.2, args=[Var($0.25, algebra.py:274)], kws=(), vararg=None) ['$0.2', '$0.25', 'a']
    $0.27 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$0.27']
    $0.28 = getattr(value=$0.27, attr=abs)   ['$0.27', '$0.28']
    $const0.31 = const(int, 0)               ['$const0.31']
    $0.32 = getitem(value=q, index=$const0.31, fn=<built-in function getitem>) ['$0.32', '$const0.31', 'q']
    $0.33 = a + $0.32                        ['$0.32', '$0.33', 'a']
    $0.34 = call $0.28($0.33, func=$0.28, args=[Var($0.33, algebra.py:275)], kws=(), vararg=None) ['$0.28', '$0.33', '$0.34']
    $0.35 = global(_quaternion_resolution: 1.0000000000000002e-14) ['$0.35']
    $0.37 = $0.35 * a                        ['$0.35', '$0.37', 'a']
    $0.38 = $0.34 < $0.37                    ['$0.34', '$0.37', '$0.38']
    bool80 = global(bool: <class 'bool'>)    ['bool80']
    $80pred = call bool80($0.38, func=bool80, args=(Var($0.38, algebra.py:275),), kws=(), vararg=None) ['$0.38', '$80pred', 'bool80']
    branch $80pred, 82, 122                  ['$80pred']
label 82:
    $const82.1 = const(float, 0.0)           ['$const82.1']
    $const82.3 = const(int, 0)               ['$const82.3']
    qout[$const82.3] = $const82.1            ['$const82.1', '$const82.3', 'qout']
    $82.4 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$82.4']
    $82.5 = getattr(value=$82.4, attr=sqrt)  ['$82.4', '$82.5']
    $82.7 = call $82.5(a, func=$82.5, args=[Var(a, algebra.py:274)], kws=(), vararg=None) ['$82.5', '$82.7', 'a']
    $const82.9 = const(int, 1)               ['$const82.9']
    qout[$const82.9] = $82.7                 ['$82.7', '$const82.9', 'qout']
    $const82.10 = const(float, 0.0)          ['$const82.10']
    $const82.12 = const(int, 2)              ['$const82.12']
    qout[$const82.12] = $const82.10          ['$const82.10', '$const82.12', 'qout']
    $const82.13 = const(float, 0.0)          ['$const82.13']
    $const82.15 = const(int, 3)              ['$const82.15']
    qout[$const82.15] = $const82.13          ['$const82.13', '$const82.15', 'qout']
    jump 212                                 []
label 122:
    $122.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$122.1']
    $122.2 = getattr(value=$122.1, attr=sqrt) ['$122.1', '$122.2']
    $const122.3 = const(float, 0.5)          ['$const122.3']
    $const122.6 = const(int, 0)              ['$const122.6']
    $122.7 = getitem(value=q, index=$const122.6, fn=<built-in function getitem>) ['$122.7', '$const122.6', 'q']
    $122.8 = a + $122.7                      ['$122.7', '$122.8', 'a']
    $122.9 = $const122.3 / $122.8            ['$122.8', '$122.9', '$const122.3']
    c = call $122.2($122.9, func=$122.2, args=[Var($122.9, algebra.py:281)], kws=(), vararg=None) ['$122.2', '$122.9', 'c']
    $const122.13 = const(int, 0)             ['$const122.13']
    $122.14 = getitem(value=q, index=$const122.13, fn=<built-in function getitem>) ['$122.14', '$const122.13', 'q']
    $122.15 = a + $122.14                    ['$122.14', '$122.15', 'a']
    $122.17 = $122.15 * c                    ['$122.15', '$122.17', 'c']
    $const122.19 = const(int, 0)             ['$const122.19']
    qout[$const122.19] = $122.17             ['$122.17', '$const122.19', 'qout']
    $const122.21 = const(int, 1)             ['$const122.21']
    $122.22 = getitem(value=q, index=$const122.21, fn=<built-in function getitem>) ['$122.22', '$const122.21', 'q']
    $122.24 = $122.22 * c                    ['$122.22', '$122.24', 'c']
    $const122.26 = const(int, 1)             ['$const122.26']
    qout[$const122.26] = $122.24             ['$122.24', '$const122.26', 'qout']
    $const122.28 = const(int, 2)             ['$const122.28']
    $122.29 = getitem(value=q, index=$const122.28, fn=<built-in function getitem>) ['$122.29', '$const122.28', 'q']
    $122.31 = $122.29 * c                    ['$122.29', '$122.31', 'c']
    $const122.33 = const(int, 2)             ['$const122.33']
    qout[$const122.33] = $122.31             ['$122.31', '$const122.33', 'qout']
    $const122.35 = const(int, 3)             ['$const122.35']
    $122.36 = getitem(value=q, index=$const122.35, fn=<built-in function getitem>) ['$122.36', '$const122.35', 'q']
    $122.38 = $122.36 * c                    ['$122.36', '$122.38', 'c']
    $const122.40 = const(int, 3)             ['$const122.40']
    qout[$const122.40] = $122.38             ['$122.38', '$const122.40', 'qout']
    jump 212                                 []
label 212:
    $const212.1 = const(NoneType, None)      ['$const212.1']
    $212.2 = cast(value=$const212.1)         ['$212.2', '$const212.1']
    return $212.2                            ['$212.2']

2022-08-04 11:53:05,910 DEBUG ==== SSA block analysis pass on 0
2022-08-04 11:53:05,910 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cde28b00>
2022-08-04 11:53:05,911 DEBUG on stmt: q = arg(0, name=q)
2022-08-04 11:53:05,911 DEBUG on stmt: qout = arg(1, name=qout)
2022-08-04 11:53:05,911 DEBUG on stmt: $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:05,911 DEBUG on stmt: $0.2 = getattr(value=$0.1, attr=sqrt)
2022-08-04 11:53:05,911 DEBUG on stmt: $const0.4 = const(int, 0)
2022-08-04 11:53:05,911 DEBUG on stmt: $0.5 = static_getitem(value=q, index=0, index_var=$const0.4, fn=<built-in function getitem>)
2022-08-04 11:53:05,911 DEBUG on stmt: $const0.6 = const(int, 2)
2022-08-04 11:53:05,911 DEBUG on stmt: $0.7 = $0.5 ** $const0.6
2022-08-04 11:53:05,911 DEBUG on stmt: $const0.9 = const(int, 1)
2022-08-04 11:53:05,911 DEBUG on stmt: $0.10 = static_getitem(value=q, index=1, index_var=$const0.9, fn=<built-in function getitem>)
2022-08-04 11:53:05,911 DEBUG on stmt: $const0.11 = const(int, 2)
2022-08-04 11:53:05,911 DEBUG on stmt: $0.12 = $0.10 ** $const0.11
2022-08-04 11:53:05,911 DEBUG on stmt: $0.13 = $0.7 + $0.12
2022-08-04 11:53:05,911 DEBUG on stmt: $const0.15 = const(int, 2)
2022-08-04 11:53:05,911 DEBUG on stmt: $0.16 = static_getitem(value=q, index=2, index_var=$const0.15, fn=<built-in function getitem>)
2022-08-04 11:53:05,911 DEBUG on stmt: $const0.17 = const(int, 2)
2022-08-04 11:53:05,911 DEBUG on stmt: $0.18 = $0.16 ** $const0.17
2022-08-04 11:53:05,911 DEBUG on stmt: $0.19 = $0.13 + $0.18
2022-08-04 11:53:05,911 DEBUG on stmt: $const0.21 = const(int, 3)
2022-08-04 11:53:05,911 DEBUG on stmt: $0.22 = static_getitem(value=q, index=3, index_var=$const0.21, fn=<built-in function getitem>)
2022-08-04 11:53:05,912 DEBUG on stmt: $const0.23 = const(int, 2)
2022-08-04 11:53:05,912 DEBUG on stmt: $0.24 = $0.22 ** $const0.23
2022-08-04 11:53:05,912 DEBUG on stmt: $0.25 = $0.19 + $0.24
2022-08-04 11:53:05,912 DEBUG on stmt: a = call $0.2($0.25, func=$0.2, args=[Var($0.25, algebra.py:274)], kws=(), vararg=None)
2022-08-04 11:53:05,912 DEBUG on stmt: $0.27 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:05,912 DEBUG on stmt: $0.28 = getattr(value=$0.27, attr=abs)
2022-08-04 11:53:05,912 DEBUG on stmt: $const0.31 = const(int, 0)
2022-08-04 11:53:05,912 DEBUG on stmt: $0.32 = static_getitem(value=q, index=0, index_var=$const0.31, fn=<built-in function getitem>)
2022-08-04 11:53:05,912 DEBUG on stmt: $0.33 = a + $0.32
2022-08-04 11:53:05,912 DEBUG on stmt: $0.34 = call $0.28($0.33, func=$0.28, args=[Var($0.33, algebra.py:275)], kws=(), vararg=None)
2022-08-04 11:53:05,912 DEBUG on stmt: $0.35 = global(_quaternion_resolution: 1.0000000000000002e-14)
2022-08-04 11:53:05,912 DEBUG on stmt: $0.37 = $0.35 * a
2022-08-04 11:53:05,912 DEBUG on stmt: $0.38 = $0.34 < $0.37
2022-08-04 11:53:05,912 DEBUG on stmt: bool80 = global(bool: <class 'bool'>)
2022-08-04 11:53:05,912 DEBUG on stmt: $80pred = call bool80($0.38, func=bool80, args=(Var($0.38, algebra.py:275),), kws=(), vararg=None)
2022-08-04 11:53:05,912 DEBUG on stmt: branch $80pred, 82, 122
2022-08-04 11:53:05,912 DEBUG ==== SSA block analysis pass on 82
2022-08-04 11:53:05,912 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cde28b00>
2022-08-04 11:53:05,912 DEBUG on stmt: $const82.1 = const(float, 0.0)
2022-08-04 11:53:05,912 DEBUG on stmt: $const82.3 = const(int, 0)
2022-08-04 11:53:05,912 DEBUG on stmt: qout[0] = $const82.1
2022-08-04 11:53:05,912 DEBUG on stmt: $82.4 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:05,912 DEBUG on stmt: $82.5 = getattr(value=$82.4, attr=sqrt)
2022-08-04 11:53:05,913 DEBUG on stmt: $82.7 = call $82.5(a, func=$82.5, args=[Var(a, algebra.py:274)], kws=(), vararg=None)
2022-08-04 11:53:05,913 DEBUG on stmt: $const82.9 = const(int, 1)
2022-08-04 11:53:05,913 DEBUG on stmt: qout[1] = $82.7
2022-08-04 11:53:05,913 DEBUG on stmt: $const82.10 = const(float, 0.0)
2022-08-04 11:53:05,913 DEBUG on stmt: $const82.12 = const(int, 2)
2022-08-04 11:53:05,913 DEBUG on stmt: qout[2] = $const82.10
2022-08-04 11:53:05,913 DEBUG on stmt: $const82.13 = const(float, 0.0)
2022-08-04 11:53:05,913 DEBUG on stmt: $const82.15 = const(int, 3)
2022-08-04 11:53:05,913 DEBUG on stmt: qout[3] = $const82.13
2022-08-04 11:53:05,913 DEBUG on stmt: jump 212
2022-08-04 11:53:05,913 DEBUG ==== SSA block analysis pass on 122
2022-08-04 11:53:05,913 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cde28b00>
2022-08-04 11:53:05,913 DEBUG on stmt: $122.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:05,913 DEBUG on stmt: $122.2 = getattr(value=$122.1, attr=sqrt)
2022-08-04 11:53:05,913 DEBUG on stmt: $const122.3 = const(float, 0.5)
2022-08-04 11:53:05,913 DEBUG on stmt: $const122.6 = const(int, 0)
2022-08-04 11:53:05,913 DEBUG on stmt: $122.7 = static_getitem(value=q, index=0, index_var=$const122.6, fn=<built-in function getitem>)
2022-08-04 11:53:05,913 DEBUG on stmt: $122.8 = a + $122.7
2022-08-04 11:53:05,913 DEBUG on stmt: $122.9 = $const122.3 / $122.8
2022-08-04 11:53:05,913 DEBUG on stmt: c = call $122.2($122.9, func=$122.2, args=[Var($122.9, algebra.py:281)], kws=(), vararg=None)
2022-08-04 11:53:05,913 DEBUG on stmt: $const122.13 = const(int, 0)
2022-08-04 11:53:05,913 DEBUG on stmt: $122.14 = static_getitem(value=q, index=0, index_var=$const122.13, fn=<built-in function getitem>)
2022-08-04 11:53:05,913 DEBUG on stmt: $122.15 = a + $122.14
2022-08-04 11:53:05,913 DEBUG on stmt: $122.17 = $122.15 * c
2022-08-04 11:53:05,913 DEBUG on stmt: $const122.19 = const(int, 0)
2022-08-04 11:53:05,913 DEBUG on stmt: qout[0] = $122.17
2022-08-04 11:53:05,914 DEBUG on stmt: $const122.21 = const(int, 1)
2022-08-04 11:53:05,914 DEBUG on stmt: $122.22 = static_getitem(value=q, index=1, index_var=$const122.21, fn=<built-in function getitem>)
2022-08-04 11:53:05,914 DEBUG on stmt: $122.24 = $122.22 * c
2022-08-04 11:53:05,914 DEBUG on stmt: $const122.26 = const(int, 1)
2022-08-04 11:53:05,914 DEBUG on stmt: qout[1] = $122.24
2022-08-04 11:53:05,914 DEBUG on stmt: $const122.28 = const(int, 2)
2022-08-04 11:53:05,914 DEBUG on stmt: $122.29 = static_getitem(value=q, index=2, index_var=$const122.28, fn=<built-in function getitem>)
2022-08-04 11:53:05,914 DEBUG on stmt: $122.31 = $122.29 * c
2022-08-04 11:53:05,914 DEBUG on stmt: $const122.33 = const(int, 2)
2022-08-04 11:53:05,914 DEBUG on stmt: qout[2] = $122.31
2022-08-04 11:53:05,914 DEBUG on stmt: $const122.35 = const(int, 3)
2022-08-04 11:53:05,914 DEBUG on stmt: $122.36 = static_getitem(value=q, index=3, index_var=$const122.35, fn=<built-in function getitem>)
2022-08-04 11:53:05,914 DEBUG on stmt: $122.38 = $122.36 * c
2022-08-04 11:53:05,914 DEBUG on stmt: $const122.40 = const(int, 3)
2022-08-04 11:53:05,914 DEBUG on stmt: qout[3] = $122.38
2022-08-04 11:53:05,914 DEBUG on stmt: jump 212
2022-08-04 11:53:05,914 DEBUG ==== SSA block analysis pass on 212
2022-08-04 11:53:05,914 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cde28b00>
2022-08-04 11:53:05,914 DEBUG on stmt: $const212.1 = const(NoneType, None)
2022-08-04 11:53:05,914 DEBUG on stmt: $212.2 = cast(value=$const212.1)
2022-08-04 11:53:05,914 DEBUG on stmt: return $212.2
2022-08-04 11:53:05,915 DEBUG defs defaultdict(<class 'list'>,
            {'$0.1': [<numba.core.ir.Assign object at 0x7fa2cde0a940>],
             '$0.10': [<numba.core.ir.Assign object at 0x7fa2cde05908>],
             '$0.12': [<numba.core.ir.Assign object at 0x7fa2cde3b2b0>],
             '$0.13': [<numba.core.ir.Assign object at 0x7fa2cde3b390>],
             '$0.16': [<numba.core.ir.Assign object at 0x7fa2cde05ac8>],
             '$0.18': [<numba.core.ir.Assign object at 0x7fa2cde3b7b8>],
             '$0.19': [<numba.core.ir.Assign object at 0x7fa2cde3b898>],
             '$0.2': [<numba.core.ir.Assign object at 0x7fa2cde0aa20>],
             '$0.22': [<numba.core.ir.Assign object at 0x7fa2cde05b70>],
             '$0.24': [<numba.core.ir.Assign object at 0x7fa2cde3bc88>],
             '$0.25': [<numba.core.ir.Assign object at 0x7fa2cde3bd68>],
             '$0.27': [<numba.core.ir.Assign object at 0x7fa2cde3bfd0>],
             '$0.28': [<numba.core.ir.Assign object at 0x7fa2cde210f0>],
             '$0.32': [<numba.core.ir.Assign object at 0x7fa2cde05be0>],
             '$0.33': [<numba.core.ir.Assign object at 0x7fa2cde214e0>],
             '$0.34': [<numba.core.ir.Assign object at 0x7fa2cde215c0>],
             '$0.35': [<numba.core.ir.Assign object at 0x7fa2cde216a0>],
             '$0.37': [<numba.core.ir.Assign object at 0x7fa2cde21828>],
             '$0.38': [<numba.core.ir.Assign object at 0x7fa2cde21908>],
             '$0.5': [<numba.core.ir.Assign object at 0x7fa2cde05358>],
             '$0.7': [<numba.core.ir.Assign object at 0x7fa2cde0ae48>],
             '$122.1': [<numba.core.ir.Assign object at 0x7fa2cde1c898>],
             '$122.14': [<numba.core.ir.Assign object at 0x7fa2cde28630>],
             '$122.15': [<numba.core.ir.Assign object at 0x7fa2cde1d748>],
             '$122.17': [<numba.core.ir.Assign object at 0x7fa2cde1d978>],
             '$122.2': [<numba.core.ir.Assign object at 0x7fa2cde1c978>],
             '$122.22': [<numba.core.ir.Assign object at 0x7fa2cde285f8>],
             '$122.24': [<numba.core.ir.Assign object at 0x7fa2cde1def0>],
             '$122.29': [<numba.core.ir.Assign object at 0x7fa2cde05d68>],
             '$122.31': [<numba.core.ir.Assign object at 0x7fa2cde05240>],
             '$122.36': [<numba.core.ir.Assign object at 0x7fa2cde05dd8>],
             '$122.38': [<numba.core.ir.Assign object at 0x7fa2cde057f0>],
             '$122.7': [<numba.core.ir.Assign object at 0x7fa2cde28908>],
             '$122.8': [<numba.core.ir.Assign object at 0x7fa2cde1ce48>],
             '$122.9': [<numba.core.ir.Assign object at 0x7fa2cde1cf28>],
             '$212.2': [<numba.core.ir.Assign object at 0x7fa2cde3bef0>],
             '$80pred': [<numba.core.ir.Assign object at 0x7fa2cde21b00>],
             '$82.4': [<numba.core.ir.Assign object at 0x7fa2cde21da0>],
             '$82.5': [<numba.core.ir.Assign object at 0x7fa2cde21e80>],
             '$82.7': [<numba.core.ir.Assign object at 0x7fa2cde1c048>],
             '$const0.11': [<numba.core.ir.Assign object at 0x7fa2cde3b1d0>],
             '$const0.15': [<numba.core.ir.Assign object at 0x7fa2cde3b518>],
             '$const0.17': [<numba.core.ir.Assign object at 0x7fa2cde3b6d8>],
             '$const0.21': [<numba.core.ir.Assign object at 0x7fa2cde3ba20>],
             '$const0.23': [<numba.core.ir.Assign object at 0x7fa2cde3bba8>],
             '$const0.31': [<numba.core.ir.Assign object at 0x7fa2cde21320>],
             '$const0.4': [<numba.core.ir.Assign object at 0x7fa2cde0aba8>],
             '$const0.6': [<numba.core.ir.Assign object at 0x7fa2cde0ad68>],
             '$const0.9': [<numba.core.ir.Assign object at 0x7fa2cde0afd0>],
             '$const122.13': [<numba.core.ir.Assign object at 0x7fa2cde1d400>],
             '$const122.19': [<numba.core.ir.Assign object at 0x7fa2cde1dac8>],
             '$const122.21': [<numba.core.ir.Assign object at 0x7fa2cde1dcc0>],
             '$const122.26': [<numba.core.ir.Assign object at 0x7fa2cde1d470>],
             '$const122.28': [<numba.core.ir.Assign object at 0x7fa2cde1d6d8>],
             '$const122.3': [<numba.core.ir.Assign object at 0x7fa2cde1ca58>],
             '$const122.33': [<numba.core.ir.Assign object at 0x7fa2cde05390>],
             '$const122.35': [<numba.core.ir.Assign object at 0x7fa2cde055f8>],
             '$const122.40': [<numba.core.ir.Assign object at 0x7fa2cde059b0>],
             '$const122.6': [<numba.core.ir.Assign object at 0x7fa2cde1cc88>],
             '$const212.1': [<numba.core.ir.Assign object at 0x7fa2cde1dc18>],
             '$const82.1': [<numba.core.ir.Assign object at 0x7fa2cde21198>],
             '$const82.10': [<numba.core.ir.Assign object at 0x7fa2cde1c320>],
             '$const82.12': [<numba.core.ir.Assign object at 0x7fa2cde1c4a8>],
             '$const82.13': [<numba.core.ir.Assign object at 0x7fa2cde1c5f8>],
             '$const82.15': [<numba.core.ir.Assign object at 0x7fa2cde1c780>],
             '$const82.3': [<numba.core.ir.Assign object at 0x7fa2cde21c50>],
             '$const82.9': [<numba.core.ir.Assign object at 0x7fa2cde1c1d0>],
             'a': [<numba.core.ir.Assign object at 0x7fa2cde3be48>],
             'bool80': [<numba.core.ir.Assign object at 0x7fa2cde21a20>],
             'c': [<numba.core.ir.Assign object at 0x7fa2cde1d048>],
             'q': [<numba.core.ir.Assign object at 0x7fa2cde0a7b8>],
             'qout': [<numba.core.ir.Assign object at 0x7fa2cde0a860>]})
2022-08-04 11:53:05,915 DEBUG SSA violators set()
2022-08-04 11:53:06,092 DEBUG label 0:
    q = arg(0, name=q)                       ['q']
    qout = arg(1, name=qout)                 ['qout']
    $const0.2 = const(int, 0)                ['$const0.2']
    $0.3 = getitem(value=q, index=$const0.2, fn=<built-in function getitem>) ['$0.3', '$const0.2', 'q']
    $const0.4 = const(int, 2)                ['$const0.4']
    $0.5 = $0.3 ** $const0.4                 ['$0.3', '$0.5', '$const0.4']
    $const0.7 = const(int, 1)                ['$const0.7']
    $0.8 = getitem(value=q, index=$const0.7, fn=<built-in function getitem>) ['$0.8', '$const0.7', 'q']
    $const0.9 = const(int, 2)                ['$const0.9']
    $0.10 = $0.8 ** $const0.9                ['$0.10', '$0.8', '$const0.9']
    $0.11 = $0.5 - $0.10                     ['$0.10', '$0.11', '$0.5']
    $const0.13 = const(int, 2)               ['$const0.13']
    $0.14 = getitem(value=q, index=$const0.13, fn=<built-in function getitem>) ['$0.14', '$const0.13', 'q']
    $const0.15 = const(int, 2)               ['$const0.15']
    $0.16 = $0.14 ** $const0.15              ['$0.14', '$0.16', '$const0.15']
    $0.17 = $0.11 - $0.16                    ['$0.11', '$0.16', '$0.17']
    $const0.19 = const(int, 3)               ['$const0.19']
    $0.20 = getitem(value=q, index=$const0.19, fn=<built-in function getitem>) ['$0.20', '$const0.19', 'q']
    $const0.21 = const(int, 2)               ['$const0.21']
    $0.22 = $0.20 ** $const0.21              ['$0.20', '$0.22', '$const0.21']
    $0.23 = $0.17 - $0.22                    ['$0.17', '$0.22', '$0.23']
    $const0.25 = const(int, 0)               ['$const0.25']
    qout[$const0.25] = $0.23                 ['$0.23', '$const0.25', 'qout']
    $const0.26 = const(int, 2)               ['$const0.26']
    $const0.28 = const(int, 0)               ['$const0.28']
    $0.29 = getitem(value=q, index=$const0.28, fn=<built-in function getitem>) ['$0.29', '$const0.28', 'q']
    $0.30 = $const0.26 * $0.29               ['$0.29', '$0.30', '$const0.26']
    $const0.32 = const(int, 1)               ['$const0.32']
    $0.33 = getitem(value=q, index=$const0.32, fn=<built-in function getitem>) ['$0.33', '$const0.32', 'q']
    $0.34 = $0.30 * $0.33                    ['$0.30', '$0.33', '$0.34']
    $const0.36 = const(int, 1)               ['$const0.36']
    qout[$const0.36] = $0.34                 ['$0.34', '$const0.36', 'qout']
    $const0.37 = const(int, 2)               ['$const0.37']
    $const0.39 = const(int, 0)               ['$const0.39']
    $0.40 = getitem(value=q, index=$const0.39, fn=<built-in function getitem>) ['$0.40', '$const0.39', 'q']
    $0.41 = $const0.37 * $0.40               ['$0.40', '$0.41', '$const0.37']
    $const0.43 = const(int, 2)               ['$const0.43']
    $0.44 = getitem(value=q, index=$const0.43, fn=<built-in function getitem>) ['$0.44', '$const0.43', 'q']
    $0.45 = $0.41 * $0.44                    ['$0.41', '$0.44', '$0.45']
    $const0.47 = const(int, 2)               ['$const0.47']
    qout[$const0.47] = $0.45                 ['$0.45', '$const0.47', 'qout']
    $const0.48 = const(int, 2)               ['$const0.48']
    $const0.50 = const(int, 0)               ['$const0.50']
    $0.51 = getitem(value=q, index=$const0.50, fn=<built-in function getitem>) ['$0.51', '$const0.50', 'q']
    $0.52 = $const0.48 * $0.51               ['$0.51', '$0.52', '$const0.48']
    $const0.54 = const(int, 3)               ['$const0.54']
    $0.55 = getitem(value=q, index=$const0.54, fn=<built-in function getitem>) ['$0.55', '$const0.54', 'q']
    $0.56 = $0.52 * $0.55                    ['$0.52', '$0.55', '$0.56']
    $const0.58 = const(int, 3)               ['$const0.58']
    qout[$const0.58] = $0.56                 ['$0.56', '$const0.58', 'qout']
    $const0.59 = const(NoneType, None)       ['$const0.59']
    $0.60 = cast(value=$const0.59)           ['$0.60', '$const0.59']
    return $0.60                             ['$0.60']

2022-08-04 11:53:06,096 DEBUG ==== SSA block analysis pass on 0
2022-08-04 11:53:06,096 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce9fc7b8>
2022-08-04 11:53:06,096 DEBUG on stmt: q = arg(0, name=q)
2022-08-04 11:53:06,096 DEBUG on stmt: qout = arg(1, name=qout)
2022-08-04 11:53:06,096 DEBUG on stmt: $const0.2 = const(int, 0)
2022-08-04 11:53:06,096 DEBUG on stmt: $0.3 = static_getitem(value=q, index=0, index_var=$const0.2, fn=<built-in function getitem>)
2022-08-04 11:53:06,096 DEBUG on stmt: $const0.4 = const(int, 2)
2022-08-04 11:53:06,096 DEBUG on stmt: $0.5 = $0.3 ** $const0.4
2022-08-04 11:53:06,096 DEBUG on stmt: $const0.7 = const(int, 1)
2022-08-04 11:53:06,096 DEBUG on stmt: $0.8 = static_getitem(value=q, index=1, index_var=$const0.7, fn=<built-in function getitem>)
2022-08-04 11:53:06,096 DEBUG on stmt: $const0.9 = const(int, 2)
2022-08-04 11:53:06,097 DEBUG on stmt: $0.10 = $0.8 ** $const0.9
2022-08-04 11:53:06,097 DEBUG on stmt: $0.11 = $0.5 - $0.10
2022-08-04 11:53:06,097 DEBUG on stmt: $const0.13 = const(int, 2)
2022-08-04 11:53:06,097 DEBUG on stmt: $0.14 = static_getitem(value=q, index=2, index_var=$const0.13, fn=<built-in function getitem>)
2022-08-04 11:53:06,097 DEBUG on stmt: $const0.15 = const(int, 2)
2022-08-04 11:53:06,097 DEBUG on stmt: $0.16 = $0.14 ** $const0.15
2022-08-04 11:53:06,097 DEBUG on stmt: $0.17 = $0.11 - $0.16
2022-08-04 11:53:06,097 DEBUG on stmt: $const0.19 = const(int, 3)
2022-08-04 11:53:06,097 DEBUG on stmt: $0.20 = static_getitem(value=q, index=3, index_var=$const0.19, fn=<built-in function getitem>)
2022-08-04 11:53:06,097 DEBUG on stmt: $const0.21 = const(int, 2)
2022-08-04 11:53:06,097 DEBUG on stmt: $0.22 = $0.20 ** $const0.21
2022-08-04 11:53:06,097 DEBUG on stmt: $0.23 = $0.17 - $0.22
2022-08-04 11:53:06,097 DEBUG on stmt: $const0.25 = const(int, 0)
2022-08-04 11:53:06,097 DEBUG on stmt: qout[0] = $0.23
2022-08-04 11:53:06,097 DEBUG on stmt: $const0.26 = const(int, 2)
2022-08-04 11:53:06,097 DEBUG on stmt: $const0.28 = const(int, 0)
2022-08-04 11:53:06,097 DEBUG on stmt: $0.29 = static_getitem(value=q, index=0, index_var=$const0.28, fn=<built-in function getitem>)
2022-08-04 11:53:06,097 DEBUG on stmt: $0.30 = $const0.26 * $0.29
2022-08-04 11:53:06,097 DEBUG on stmt: $const0.32 = const(int, 1)
2022-08-04 11:53:06,097 DEBUG on stmt: $0.33 = static_getitem(value=q, index=1, index_var=$const0.32, fn=<built-in function getitem>)
2022-08-04 11:53:06,097 DEBUG on stmt: $0.34 = $0.30 * $0.33
2022-08-04 11:53:06,097 DEBUG on stmt: $const0.36 = const(int, 1)
2022-08-04 11:53:06,097 DEBUG on stmt: qout[1] = $0.34
2022-08-04 11:53:06,097 DEBUG on stmt: $const0.37 = const(int, 2)
2022-08-04 11:53:06,098 DEBUG on stmt: $const0.39 = const(int, 0)
2022-08-04 11:53:06,098 DEBUG on stmt: $0.40 = static_getitem(value=q, index=0, index_var=$const0.39, fn=<built-in function getitem>)
2022-08-04 11:53:06,098 DEBUG on stmt: $0.41 = $const0.37 * $0.40
2022-08-04 11:53:06,098 DEBUG on stmt: $const0.43 = const(int, 2)
2022-08-04 11:53:06,098 DEBUG on stmt: $0.44 = static_getitem(value=q, index=2, index_var=$const0.43, fn=<built-in function getitem>)
2022-08-04 11:53:06,098 DEBUG on stmt: $0.45 = $0.41 * $0.44
2022-08-04 11:53:06,098 DEBUG on stmt: $const0.47 = const(int, 2)
2022-08-04 11:53:06,098 DEBUG on stmt: qout[2] = $0.45
2022-08-04 11:53:06,098 DEBUG on stmt: $const0.48 = const(int, 2)
2022-08-04 11:53:06,098 DEBUG on stmt: $const0.50 = const(int, 0)
2022-08-04 11:53:06,098 DEBUG on stmt: $0.51 = static_getitem(value=q, index=0, index_var=$const0.50, fn=<built-in function getitem>)
2022-08-04 11:53:06,098 DEBUG on stmt: $0.52 = $const0.48 * $0.51
2022-08-04 11:53:06,098 DEBUG on stmt: $const0.54 = const(int, 3)
2022-08-04 11:53:06,098 DEBUG on stmt: $0.55 = static_getitem(value=q, index=3, index_var=$const0.54, fn=<built-in function getitem>)
2022-08-04 11:53:06,098 DEBUG on stmt: $0.56 = $0.52 * $0.55
2022-08-04 11:53:06,099 DEBUG on stmt: $const0.58 = const(int, 3)
2022-08-04 11:53:06,099 DEBUG on stmt: qout[3] = $0.56
2022-08-04 11:53:06,099 DEBUG on stmt: $const0.59 = const(NoneType, None)
2022-08-04 11:53:06,099 DEBUG on stmt: $0.60 = cast(value=$const0.59)
2022-08-04 11:53:06,099 DEBUG on stmt: return $0.60
2022-08-04 11:53:06,099 DEBUG defs defaultdict(<class 'list'>,
            {'$0.10': [<numba.core.ir.Assign object at 0x7fa2ce9f8908>],
             '$0.11': [<numba.core.ir.Assign object at 0x7fa2ce9f89e8>],
             '$0.14': [<numba.core.ir.Assign object at 0x7fa2cea02860>],
             '$0.16': [<numba.core.ir.Assign object at 0x7fa2ce9f8e10>],
             '$0.17': [<numba.core.ir.Assign object at 0x7fa2ce9f8ef0>],
             '$0.20': [<numba.core.ir.Assign object at 0x7fa2cea028d0>],
             '$0.22': [<numba.core.ir.Assign object at 0x7fa2ce9fc358>],
             '$0.23': [<numba.core.ir.Assign object at 0x7fa2ce9fc438>],
             '$0.29': [<numba.core.ir.Assign object at 0x7fa2cea02940>],
             '$0.3': [<numba.core.ir.Assign object at 0x7fa2cea02780>],
             '$0.30': [<numba.core.ir.Assign object at 0x7fa2ce9fca58>],
             '$0.33': [<numba.core.ir.Assign object at 0x7fa2cea029b0>],
             '$0.34': [<numba.core.ir.Assign object at 0x7fa2ce9fcda0>],
             '$0.40': [<numba.core.ir.Assign object at 0x7fa2cea02a20>],
             '$0.41': [<numba.core.ir.Assign object at 0x7fa2ce9f13c8>],
             '$0.44': [<numba.core.ir.Assign object at 0x7fa2cea02a90>],
             '$0.45': [<numba.core.ir.Assign object at 0x7fa2ce9f1710>],
             '$0.5': [<numba.core.ir.Assign object at 0x7fa2ce9f84e0>],
             '$0.51': [<numba.core.ir.Assign object at 0x7fa2cea02b00>],
             '$0.52': [<numba.core.ir.Assign object at 0x7fa2ce9f1d30>],
             '$0.55': [<numba.core.ir.Assign object at 0x7fa2cea02b70>],
             '$0.56': [<numba.core.ir.Assign object at 0x7fa2cea020b8>],
             '$0.60': [<numba.core.ir.Assign object at 0x7fa2cea02470>],
             '$0.8': [<numba.core.ir.Assign object at 0x7fa2cea027f0>],
             '$const0.13': [<numba.core.ir.Assign object at 0x7fa2ce9f8b70>],
             '$const0.15': [<numba.core.ir.Assign object at 0x7fa2ce9f8d30>],
             '$const0.19': [<numba.core.ir.Assign object at 0x7fa2ce9fc0b8>],
             '$const0.2': [<numba.core.ir.Assign object at 0x7fa2ce9f8240>],
             '$const0.21': [<numba.core.ir.Assign object at 0x7fa2ce9fc278>],
             '$const0.25': [<numba.core.ir.Assign object at 0x7fa2ce9fc5c0>],
             '$const0.26': [<numba.core.ir.Assign object at 0x7fa2ce9fc710>],
             '$const0.28': [<numba.core.ir.Assign object at 0x7fa2ce9fc898>],
             '$const0.32': [<numba.core.ir.Assign object at 0x7fa2ce9fcbe0>],
             '$const0.36': [<numba.core.ir.Assign object at 0x7fa2ce9fcf28>],
             '$const0.37': [<numba.core.ir.Assign object at 0x7fa2ce9f1080>],
             '$const0.39': [<numba.core.ir.Assign object at 0x7fa2ce9f1208>],
             '$const0.4': [<numba.core.ir.Assign object at 0x7fa2ce9f8400>],
             '$const0.43': [<numba.core.ir.Assign object at 0x7fa2ce9f1550>],
             '$const0.47': [<numba.core.ir.Assign object at 0x7fa2ce9f1898>],
             '$const0.48': [<numba.core.ir.Assign object at 0x7fa2ce9f19e8>],
             '$const0.50': [<numba.core.ir.Assign object at 0x7fa2ce9f1b70>],
             '$const0.54': [<numba.core.ir.Assign object at 0x7fa2ce9f1eb8>],
             '$const0.58': [<numba.core.ir.Assign object at 0x7fa2cea02240>],
             '$const0.59': [<numba.core.ir.Assign object at 0x7fa2cea02390>],
             '$const0.7': [<numba.core.ir.Assign object at 0x7fa2ce9f8668>],
             '$const0.9': [<numba.core.ir.Assign object at 0x7fa2ce9f8828>],
             'q': [<numba.core.ir.Assign object at 0x7fa2ce574fd0>],
             'qout': [<numba.core.ir.Assign object at 0x7fa2ce9f80b8>]})
2022-08-04 11:53:06,100 DEBUG SSA violators set()
2022-08-04 11:53:06,231 DEBUG label 0:
    q = arg(0, name=q)                       ['q']
    qout = arg(1, name=qout)                 ['qout']
    $const0.2 = const(int, 0)                ['$const0.2']
    $0.3 = getitem(value=q, index=$const0.2, fn=<built-in function getitem>) ['$0.3', '$const0.2', 'q']
    $const0.4 = const(int, 2)                ['$const0.4']
    $0.5 = $0.3 ** $const0.4                 ['$0.3', '$0.5', '$const0.4']
    $const0.7 = const(int, 1)                ['$const0.7']
    $0.8 = getitem(value=q, index=$const0.7, fn=<built-in function getitem>) ['$0.8', '$const0.7', 'q']
    $const0.9 = const(int, 2)                ['$const0.9']
    $0.10 = $0.8 ** $const0.9                ['$0.10', '$0.8', '$const0.9']
    $0.11 = $0.5 + $0.10                     ['$0.10', '$0.11', '$0.5']
    $const0.13 = const(int, 2)               ['$const0.13']
    $0.14 = getitem(value=q, index=$const0.13, fn=<built-in function getitem>) ['$0.14', '$const0.13', 'q']
    $const0.15 = const(int, 2)               ['$const0.15']
    $0.16 = $0.14 ** $const0.15              ['$0.14', '$0.16', '$const0.15']
    $0.17 = $0.11 + $0.16                    ['$0.11', '$0.16', '$0.17']
    $const0.19 = const(int, 3)               ['$const0.19']
    $0.20 = getitem(value=q, index=$const0.19, fn=<built-in function getitem>) ['$0.20', '$const0.19', 'q']
    $const0.21 = const(int, 2)               ['$const0.21']
    $0.22 = $0.20 ** $const0.21              ['$0.20', '$0.22', '$const0.21']
    norm = $0.17 + $0.22                     ['$0.17', '$0.22', 'norm']
    $const0.25 = const(int, 0)               ['$const0.25']
    $0.26 = getitem(value=q, index=$const0.25, fn=<built-in function getitem>) ['$0.26', '$const0.25', 'q']
    $0.28 = $0.26 / norm                     ['$0.26', '$0.28', 'norm']
    $const0.30 = const(int, 0)               ['$const0.30']
    qout[$const0.30] = $0.28                 ['$0.28', '$const0.30', 'qout']
    $const0.32 = const(int, 1)               ['$const0.32']
    $0.33 = getitem(value=q, index=$const0.32, fn=<built-in function getitem>) ['$0.33', '$const0.32', 'q']
    $0.34 = unary(fn=<built-in function neg>, value=$0.33) ['$0.33', '$0.34']
    $0.36 = $0.34 / norm                     ['$0.34', '$0.36', 'norm']
    $const0.38 = const(int, 1)               ['$const0.38']
    qout[$const0.38] = $0.36                 ['$0.36', '$const0.38', 'qout']
    $const0.40 = const(int, 2)               ['$const0.40']
    $0.41 = getitem(value=q, index=$const0.40, fn=<built-in function getitem>) ['$0.41', '$const0.40', 'q']
    $0.42 = unary(fn=<built-in function neg>, value=$0.41) ['$0.41', '$0.42']
    $0.44 = $0.42 / norm                     ['$0.42', '$0.44', 'norm']
    $const0.46 = const(int, 2)               ['$const0.46']
    qout[$const0.46] = $0.44                 ['$0.44', '$const0.46', 'qout']
    $const0.48 = const(int, 3)               ['$const0.48']
    $0.49 = getitem(value=q, index=$const0.48, fn=<built-in function getitem>) ['$0.49', '$const0.48', 'q']
    $0.50 = unary(fn=<built-in function neg>, value=$0.49) ['$0.49', '$0.50']
    $0.52 = $0.50 / norm                     ['$0.50', '$0.52', 'norm']
    $const0.54 = const(int, 3)               ['$const0.54']
    qout[$const0.54] = $0.52                 ['$0.52', '$const0.54', 'qout']
    $const0.55 = const(NoneType, None)       ['$const0.55']
    $0.56 = cast(value=$const0.55)           ['$0.56', '$const0.55']
    return $0.56                             ['$0.56']

2022-08-04 11:53:06,236 DEBUG ==== SSA block analysis pass on 0
2022-08-04 11:53:06,236 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ceb08e48>
2022-08-04 11:53:06,237 DEBUG on stmt: q = arg(0, name=q)
2022-08-04 11:53:06,237 DEBUG on stmt: qout = arg(1, name=qout)
2022-08-04 11:53:06,237 DEBUG on stmt: $const0.2 = const(int, 0)
2022-08-04 11:53:06,237 DEBUG on stmt: $0.3 = static_getitem(value=q, index=0, index_var=$const0.2, fn=<built-in function getitem>)
2022-08-04 11:53:06,237 DEBUG on stmt: $const0.4 = const(int, 2)
2022-08-04 11:53:06,237 DEBUG on stmt: $0.5 = $0.3 ** $const0.4
2022-08-04 11:53:06,237 DEBUG on stmt: $const0.7 = const(int, 1)
2022-08-04 11:53:06,237 DEBUG on stmt: $0.8 = static_getitem(value=q, index=1, index_var=$const0.7, fn=<built-in function getitem>)
2022-08-04 11:53:06,237 DEBUG on stmt: $const0.9 = const(int, 2)
2022-08-04 11:53:06,237 DEBUG on stmt: $0.10 = $0.8 ** $const0.9
2022-08-04 11:53:06,237 DEBUG on stmt: $0.11 = $0.5 + $0.10
2022-08-04 11:53:06,237 DEBUG on stmt: $const0.13 = const(int, 2)
2022-08-04 11:53:06,237 DEBUG on stmt: $0.14 = static_getitem(value=q, index=2, index_var=$const0.13, fn=<built-in function getitem>)
2022-08-04 11:53:06,238 DEBUG on stmt: $const0.15 = const(int, 2)
2022-08-04 11:53:06,238 DEBUG on stmt: $0.16 = $0.14 ** $const0.15
2022-08-04 11:53:06,238 DEBUG on stmt: $0.17 = $0.11 + $0.16
2022-08-04 11:53:06,238 DEBUG on stmt: $const0.19 = const(int, 3)
2022-08-04 11:53:06,238 DEBUG on stmt: $0.20 = static_getitem(value=q, index=3, index_var=$const0.19, fn=<built-in function getitem>)
2022-08-04 11:53:06,238 DEBUG on stmt: $const0.21 = const(int, 2)
2022-08-04 11:53:06,238 DEBUG on stmt: $0.22 = $0.20 ** $const0.21
2022-08-04 11:53:06,238 DEBUG on stmt: norm = $0.17 + $0.22
2022-08-04 11:53:06,238 DEBUG on stmt: $const0.25 = const(int, 0)
2022-08-04 11:53:06,238 DEBUG on stmt: $0.26 = static_getitem(value=q, index=0, index_var=$const0.25, fn=<built-in function getitem>)
2022-08-04 11:53:06,238 DEBUG on stmt: $0.28 = $0.26 / norm
2022-08-04 11:53:06,238 DEBUG on stmt: $const0.30 = const(int, 0)
2022-08-04 11:53:06,238 DEBUG on stmt: qout[0] = $0.28
2022-08-04 11:53:06,239 DEBUG on stmt: $const0.32 = const(int, 1)
2022-08-04 11:53:06,239 DEBUG on stmt: $0.33 = static_getitem(value=q, index=1, index_var=$const0.32, fn=<built-in function getitem>)
2022-08-04 11:53:06,239 DEBUG on stmt: $0.34 = unary(fn=<built-in function neg>, value=$0.33)
2022-08-04 11:53:06,239 DEBUG on stmt: $0.36 = $0.34 / norm
2022-08-04 11:53:06,239 DEBUG on stmt: $const0.38 = const(int, 1)
2022-08-04 11:53:06,239 DEBUG on stmt: qout[1] = $0.36
2022-08-04 11:53:06,239 DEBUG on stmt: $const0.40 = const(int, 2)
2022-08-04 11:53:06,239 DEBUG on stmt: $0.41 = static_getitem(value=q, index=2, index_var=$const0.40, fn=<built-in function getitem>)
2022-08-04 11:53:06,239 DEBUG on stmt: $0.42 = unary(fn=<built-in function neg>, value=$0.41)
2022-08-04 11:53:06,239 DEBUG on stmt: $0.44 = $0.42 / norm
2022-08-04 11:53:06,239 DEBUG on stmt: $const0.46 = const(int, 2)
2022-08-04 11:53:06,239 DEBUG on stmt: qout[2] = $0.44
2022-08-04 11:53:06,239 DEBUG on stmt: $const0.48 = const(int, 3)
2022-08-04 11:53:06,240 DEBUG on stmt: $0.49 = static_getitem(value=q, index=3, index_var=$const0.48, fn=<built-in function getitem>)
2022-08-04 11:53:06,240 DEBUG on stmt: $0.50 = unary(fn=<built-in function neg>, value=$0.49)
2022-08-04 11:53:06,240 DEBUG on stmt: $0.52 = $0.50 / norm
2022-08-04 11:53:06,240 DEBUG on stmt: $const0.54 = const(int, 3)
2022-08-04 11:53:06,240 DEBUG on stmt: qout[3] = $0.52
2022-08-04 11:53:06,240 DEBUG on stmt: $const0.55 = const(NoneType, None)
2022-08-04 11:53:06,240 DEBUG on stmt: $0.56 = cast(value=$const0.55)
2022-08-04 11:53:06,240 DEBUG on stmt: return $0.56
2022-08-04 11:53:06,241 DEBUG defs defaultdict(<class 'list'>,
            {'$0.10': [<numba.core.ir.Assign object at 0x7fa2ceb0ee80>],
             '$0.11': [<numba.core.ir.Assign object at 0x7fa2ceb0ef60>],
             '$0.14': [<numba.core.ir.Assign object at 0x7fa2ceb07a20>],
             '$0.16': [<numba.core.ir.Assign object at 0x7fa2ceb153c8>],
             '$0.17': [<numba.core.ir.Assign object at 0x7fa2ceb154a8>],
             '$0.20': [<numba.core.ir.Assign object at 0x7fa2ceb07a90>],
             '$0.22': [<numba.core.ir.Assign object at 0x7fa2ceb158d0>],
             '$0.26': [<numba.core.ir.Assign object at 0x7fa2ceb07b00>],
             '$0.28': [<numba.core.ir.Assign object at 0x7fa2ceb15e48>],
             '$0.3': [<numba.core.ir.Assign object at 0x7fa2ceb07940>],
             '$0.33': [<numba.core.ir.Assign object at 0x7fa2ceb07b70>],
             '$0.34': [<numba.core.ir.Assign object at 0x7fa2ceb193c8>],
             '$0.36': [<numba.core.ir.Assign object at 0x7fa2ceb19550>],
             '$0.41': [<numba.core.ir.Assign object at 0x7fa2ceb07be0>],
             '$0.42': [<numba.core.ir.Assign object at 0x7fa2ceb19a90>],
             '$0.44': [<numba.core.ir.Assign object at 0x7fa2ceb19c18>],
             '$0.49': [<numba.core.ir.Assign object at 0x7fa2ceb07c50>],
             '$0.5': [<numba.core.ir.Assign object at 0x7fa2ceb0ea58>],
             '$0.50': [<numba.core.ir.Assign object at 0x7fa2ceb07198>],
             '$0.52': [<numba.core.ir.Assign object at 0x7fa2ceb07320>],
             '$0.56': [<numba.core.ir.Assign object at 0x7fa2ceb076d8>],
             '$0.8': [<numba.core.ir.Assign object at 0x7fa2ceb079b0>],
             '$const0.13': [<numba.core.ir.Assign object at 0x7fa2ceb15128>],
             '$const0.15': [<numba.core.ir.Assign object at 0x7fa2ceb152e8>],
             '$const0.19': [<numba.core.ir.Assign object at 0x7fa2ceb15630>],
             '$const0.2': [<numba.core.ir.Assign object at 0x7fa2ceb0e7b8>],
             '$const0.21': [<numba.core.ir.Assign object at 0x7fa2ceb157f0>],
             '$const0.25': [<numba.core.ir.Assign object at 0x7fa2ceb15be0>],
             '$const0.30': [<numba.core.ir.Assign object at 0x7fa2ceb15fd0>],
             '$const0.32': [<numba.core.ir.Assign object at 0x7fa2ceb19208>],
             '$const0.38': [<numba.core.ir.Assign object at 0x7fa2ceb196d8>],
             '$const0.4': [<numba.core.ir.Assign object at 0x7fa2ceb0e978>],
             '$const0.40': [<numba.core.ir.Assign object at 0x7fa2ceb198d0>],
             '$const0.46': [<numba.core.ir.Assign object at 0x7fa2ceb19da0>],
             '$const0.48': [<numba.core.ir.Assign object at 0x7fa2ceb19f98>],
             '$const0.54': [<numba.core.ir.Assign object at 0x7fa2ceb074a8>],
             '$const0.55': [<numba.core.ir.Assign object at 0x7fa2ceb075f8>],
             '$const0.7': [<numba.core.ir.Assign object at 0x7fa2ceb0ebe0>],
             '$const0.9': [<numba.core.ir.Assign object at 0x7fa2ceb0eda0>],
             'norm': [<numba.core.ir.Assign object at 0x7fa2ceb159b0>],
             'q': [<numba.core.ir.Assign object at 0x7fa2ceb0e588>],
             'qout': [<numba.core.ir.Assign object at 0x7fa2ceb0e630>]})
2022-08-04 11:53:06,241 DEBUG SSA violators set()
2022-08-04 11:53:06,396 DEBUG label 0:
    q1 = arg(0, name=q1)                     ['q1']
    q2 = arg(1, name=q2)                     ['q2']
    qout = arg(2, name=qout)                 ['qout']
    $const0.2 = const(int, 0)                ['$const0.2']
    $0.3 = getitem(value=q1, index=$const0.2, fn=<built-in function getitem>) ['$0.3', '$const0.2', 'q1']
    $const0.5 = const(int, 0)                ['$const0.5']
    $0.6 = getitem(value=q2, index=$const0.5, fn=<built-in function getitem>) ['$0.6', '$const0.5', 'q2']
    $0.7 = $0.3 * $0.6                       ['$0.3', '$0.6', '$0.7']
    $const0.9 = const(int, 1)                ['$const0.9']
    $0.10 = getitem(value=q1, index=$const0.9, fn=<built-in function getitem>) ['$0.10', '$const0.9', 'q1']
    $const0.12 = const(int, 1)               ['$const0.12']
    $0.13 = getitem(value=q2, index=$const0.12, fn=<built-in function getitem>) ['$0.13', '$const0.12', 'q2']
    $0.14 = $0.10 * $0.13                    ['$0.10', '$0.13', '$0.14']
    $0.15 = $0.7 - $0.14                     ['$0.14', '$0.15', '$0.7']
    $const0.17 = const(int, 2)               ['$const0.17']
    $0.18 = getitem(value=q1, index=$const0.17, fn=<built-in function getitem>) ['$0.18', '$const0.17', 'q1']
    $const0.20 = const(int, 2)               ['$const0.20']
    $0.21 = getitem(value=q2, index=$const0.20, fn=<built-in function getitem>) ['$0.21', '$const0.20', 'q2']
    $0.22 = $0.18 * $0.21                    ['$0.18', '$0.21', '$0.22']
    $0.23 = $0.15 - $0.22                    ['$0.15', '$0.22', '$0.23']
    $const0.25 = const(int, 3)               ['$const0.25']
    $0.26 = getitem(value=q1, index=$const0.25, fn=<built-in function getitem>) ['$0.26', '$const0.25', 'q1']
    $const0.28 = const(int, 3)               ['$const0.28']
    $0.29 = getitem(value=q2, index=$const0.28, fn=<built-in function getitem>) ['$0.29', '$const0.28', 'q2']
    $0.30 = $0.26 * $0.29                    ['$0.26', '$0.29', '$0.30']
    $0.31 = $0.23 - $0.30                    ['$0.23', '$0.30', '$0.31']
    $const0.33 = const(int, 0)               ['$const0.33']
    qout[$const0.33] = $0.31                 ['$0.31', '$const0.33', 'qout']
    $const0.34 = const(float, 0.0)           ['$const0.34']
    $const0.36 = const(int, 1)               ['$const0.36']
    qout[$const0.36] = $const0.34            ['$const0.34', '$const0.36', 'qout']
    $const0.37 = const(float, 0.0)           ['$const0.37']
    $const0.39 = const(int, 2)               ['$const0.39']
    qout[$const0.39] = $const0.37            ['$const0.37', '$const0.39', 'qout']
    $const0.40 = const(float, 0.0)           ['$const0.40']
    $const0.42 = const(int, 3)               ['$const0.42']
    qout[$const0.42] = $const0.40            ['$const0.40', '$const0.42', 'qout']
    $const0.43 = const(NoneType, None)       ['$const0.43']
    $0.44 = cast(value=$const0.43)           ['$0.44', '$const0.43']
    return $0.44                             ['$0.44']

2022-08-04 11:53:06,400 DEBUG ==== SSA block analysis pass on 0
2022-08-04 11:53:06,400 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cebf5d30>
2022-08-04 11:53:06,401 DEBUG on stmt: q1 = arg(0, name=q1)
2022-08-04 11:53:06,401 DEBUG on stmt: q2 = arg(1, name=q2)
2022-08-04 11:53:06,401 DEBUG on stmt: qout = arg(2, name=qout)
2022-08-04 11:53:06,401 DEBUG on stmt: $const0.2 = const(int, 0)
2022-08-04 11:53:06,401 DEBUG on stmt: $0.3 = static_getitem(value=q1, index=0, index_var=$const0.2, fn=<built-in function getitem>)
2022-08-04 11:53:06,401 DEBUG on stmt: $const0.5 = const(int, 0)
2022-08-04 11:53:06,401 DEBUG on stmt: $0.6 = static_getitem(value=q2, index=0, index_var=$const0.5, fn=<built-in function getitem>)
2022-08-04 11:53:06,401 DEBUG on stmt: $0.7 = $0.3 * $0.6
2022-08-04 11:53:06,401 DEBUG on stmt: $const0.9 = const(int, 1)
2022-08-04 11:53:06,401 DEBUG on stmt: $0.10 = static_getitem(value=q1, index=1, index_var=$const0.9, fn=<built-in function getitem>)
2022-08-04 11:53:06,401 DEBUG on stmt: $const0.12 = const(int, 1)
2022-08-04 11:53:06,401 DEBUG on stmt: $0.13 = static_getitem(value=q2, index=1, index_var=$const0.12, fn=<built-in function getitem>)
2022-08-04 11:53:06,401 DEBUG on stmt: $0.14 = $0.10 * $0.13
2022-08-04 11:53:06,401 DEBUG on stmt: $0.15 = $0.7 - $0.14
2022-08-04 11:53:06,401 DEBUG on stmt: $const0.17 = const(int, 2)
2022-08-04 11:53:06,401 DEBUG on stmt: $0.18 = static_getitem(value=q1, index=2, index_var=$const0.17, fn=<built-in function getitem>)
2022-08-04 11:53:06,401 DEBUG on stmt: $const0.20 = const(int, 2)
2022-08-04 11:53:06,401 DEBUG on stmt: $0.21 = static_getitem(value=q2, index=2, index_var=$const0.20, fn=<built-in function getitem>)
2022-08-04 11:53:06,401 DEBUG on stmt: $0.22 = $0.18 * $0.21
2022-08-04 11:53:06,402 DEBUG on stmt: $0.23 = $0.15 - $0.22
2022-08-04 11:53:06,402 DEBUG on stmt: $const0.25 = const(int, 3)
2022-08-04 11:53:06,402 DEBUG on stmt: $0.26 = static_getitem(value=q1, index=3, index_var=$const0.25, fn=<built-in function getitem>)
2022-08-04 11:53:06,402 DEBUG on stmt: $const0.28 = const(int, 3)
2022-08-04 11:53:06,402 DEBUG on stmt: $0.29 = static_getitem(value=q2, index=3, index_var=$const0.28, fn=<built-in function getitem>)
2022-08-04 11:53:06,402 DEBUG on stmt: $0.30 = $0.26 * $0.29
2022-08-04 11:53:06,402 DEBUG on stmt: $0.31 = $0.23 - $0.30
2022-08-04 11:53:06,402 DEBUG on stmt: $const0.33 = const(int, 0)
2022-08-04 11:53:06,402 DEBUG on stmt: qout[0] = $0.31
2022-08-04 11:53:06,402 DEBUG on stmt: $const0.34 = const(float, 0.0)
2022-08-04 11:53:06,402 DEBUG on stmt: $const0.36 = const(int, 1)
2022-08-04 11:53:06,402 DEBUG on stmt: qout[1] = $const0.34
2022-08-04 11:53:06,402 DEBUG on stmt: $const0.37 = const(float, 0.0)
2022-08-04 11:53:06,402 DEBUG on stmt: $const0.39 = const(int, 2)
2022-08-04 11:53:06,402 DEBUG on stmt: qout[2] = $const0.37
2022-08-04 11:53:06,402 DEBUG on stmt: $const0.40 = const(float, 0.0)
2022-08-04 11:53:06,402 DEBUG on stmt: $const0.42 = const(int, 3)
2022-08-04 11:53:06,403 DEBUG on stmt: qout[3] = $const0.40
2022-08-04 11:53:06,403 DEBUG on stmt: $const0.43 = const(NoneType, None)
2022-08-04 11:53:06,403 DEBUG on stmt: $0.44 = cast(value=$const0.43)
2022-08-04 11:53:06,403 DEBUG on stmt: return $0.44
2022-08-04 11:53:06,403 DEBUG defs defaultdict(<class 'list'>,
            {'$0.10': [<numba.core.ir.Assign object at 0x7fa2cec05e80>],
             '$0.13': [<numba.core.ir.Assign object at 0x7fa2cec05ef0>],
             '$0.14': [<numba.core.ir.Assign object at 0x7fa2cebfcf98>],
             '$0.15': [<numba.core.ir.Assign object at 0x7fa2cec010b8>],
             '$0.18': [<numba.core.ir.Assign object at 0x7fa2cec05f60>],
             '$0.21': [<numba.core.ir.Assign object at 0x7fa2cec05fd0>],
             '$0.22': [<numba.core.ir.Assign object at 0x7fa2cec01668>],
             '$0.23': [<numba.core.ir.Assign object at 0x7fa2cec01748>],
             '$0.26': [<numba.core.ir.Assign object at 0x7fa2cec08048>],
             '$0.29': [<numba.core.ir.Assign object at 0x7fa2cec080b8>],
             '$0.3': [<numba.core.ir.Assign object at 0x7fa2cec05da0>],
             '$0.30': [<numba.core.ir.Assign object at 0x7fa2cec01cf8>],
             '$0.31': [<numba.core.ir.Assign object at 0x7fa2cec01dd8>],
             '$0.44': [<numba.core.ir.Assign object at 0x7fa2cec05a20>],
             '$0.6': [<numba.core.ir.Assign object at 0x7fa2cec05e10>],
             '$0.7': [<numba.core.ir.Assign object at 0x7fa2cebfc9e8>],
             '$const0.12': [<numba.core.ir.Assign object at 0x7fa2cebfcdd8>],
             '$const0.17': [<numba.core.ir.Assign object at 0x7fa2cec01240>],
             '$const0.2': [<numba.core.ir.Assign object at 0x7fa2cebfc5c0>],
             '$const0.20': [<numba.core.ir.Assign object at 0x7fa2cec014a8>],
             '$const0.25': [<numba.core.ir.Assign object at 0x7fa2cec018d0>],
             '$const0.28': [<numba.core.ir.Assign object at 0x7fa2cec01b38>],
             '$const0.33': [<numba.core.ir.Assign object at 0x7fa2cec01f60>],
             '$const0.34': [<numba.core.ir.Assign object at 0x7fa2cec050f0>],
             '$const0.36': [<numba.core.ir.Assign object at 0x7fa2cec05278>],
             '$const0.37': [<numba.core.ir.Assign object at 0x7fa2cec053c8>],
             '$const0.39': [<numba.core.ir.Assign object at 0x7fa2cec05518>],
             '$const0.40': [<numba.core.ir.Assign object at 0x7fa2cec05668>],
             '$const0.42': [<numba.core.ir.Assign object at 0x7fa2cec057f0>],
             '$const0.43': [<numba.core.ir.Assign object at 0x7fa2cec05940>],
             '$const0.5': [<numba.core.ir.Assign object at 0x7fa2cebfc828>],
             '$const0.9': [<numba.core.ir.Assign object at 0x7fa2cebfcb70>],
             'q1': [<numba.core.ir.Assign object at 0x7fa2cebfc2e8>],
             'q2': [<numba.core.ir.Assign object at 0x7fa2cebfc390>],
             'qout': [<numba.core.ir.Assign object at 0x7fa2cebfc438>]})
2022-08-04 11:53:06,404 DEBUG SSA violators set()
2022-08-04 11:53:06,520 DEBUG label 0:
    q1 = arg(0, name=q1)                     ['q1']
    q2 = arg(1, name=q2)                     ['q2']
    qout = arg(2, name=qout)                 ['qout']
    $const0.2 = const(int, 0)                ['$const0.2']
    $0.3 = getitem(value=q1, index=$const0.2, fn=<built-in function getitem>) ['$0.3', '$const0.2', 'q1']
    $const0.5 = const(int, 0)                ['$const0.5']
    $0.6 = getitem(value=q2, index=$const0.5, fn=<built-in function getitem>) ['$0.6', '$const0.5', 'q2']
    $0.7 = $0.3 * $0.6                       ['$0.3', '$0.6', '$0.7']
    $const0.9 = const(int, 0)                ['$const0.9']
    qout[$const0.9] = $0.7                   ['$0.7', '$const0.9', 'qout']
    $const0.11 = const(int, 0)               ['$const0.11']
    $0.12 = getitem(value=q1, index=$const0.11, fn=<built-in function getitem>) ['$0.12', '$const0.11', 'q1']
    $const0.14 = const(int, 1)               ['$const0.14']
    $0.15 = getitem(value=q2, index=$const0.14, fn=<built-in function getitem>) ['$0.15', '$const0.14', 'q2']
    $0.16 = $0.12 * $0.15                    ['$0.12', '$0.15', '$0.16']
    $const0.18 = const(int, 1)               ['$const0.18']
    $0.19 = getitem(value=q1, index=$const0.18, fn=<built-in function getitem>) ['$0.19', '$const0.18', 'q1']
    $const0.21 = const(int, 0)               ['$const0.21']
    $0.22 = getitem(value=q2, index=$const0.21, fn=<built-in function getitem>) ['$0.22', '$const0.21', 'q2']
    $0.23 = $0.19 * $0.22                    ['$0.19', '$0.22', '$0.23']
    $0.24 = $0.16 + $0.23                    ['$0.16', '$0.23', '$0.24']
    $const0.26 = const(int, 1)               ['$const0.26']
    qout[$const0.26] = $0.24                 ['$0.24', '$const0.26', 'qout']
    $const0.28 = const(int, 0)               ['$const0.28']
    $0.29 = getitem(value=q1, index=$const0.28, fn=<built-in function getitem>) ['$0.29', '$const0.28', 'q1']
    $const0.31 = const(int, 2)               ['$const0.31']
    $0.32 = getitem(value=q2, index=$const0.31, fn=<built-in function getitem>) ['$0.32', '$const0.31', 'q2']
    $0.33 = $0.29 * $0.32                    ['$0.29', '$0.32', '$0.33']
    $const0.35 = const(int, 2)               ['$const0.35']
    $0.36 = getitem(value=q1, index=$const0.35, fn=<built-in function getitem>) ['$0.36', '$const0.35', 'q1']
    $const0.38 = const(int, 0)               ['$const0.38']
    $0.39 = getitem(value=q2, index=$const0.38, fn=<built-in function getitem>) ['$0.39', '$const0.38', 'q2']
    $0.40 = $0.36 * $0.39                    ['$0.36', '$0.39', '$0.40']
    $0.41 = $0.33 + $0.40                    ['$0.33', '$0.40', '$0.41']
    $const0.43 = const(int, 2)               ['$const0.43']
    qout[$const0.43] = $0.41                 ['$0.41', '$const0.43', 'qout']
    $const0.45 = const(int, 0)               ['$const0.45']
    $0.46 = getitem(value=q1, index=$const0.45, fn=<built-in function getitem>) ['$0.46', '$const0.45', 'q1']
    $const0.48 = const(int, 3)               ['$const0.48']
    $0.49 = getitem(value=q2, index=$const0.48, fn=<built-in function getitem>) ['$0.49', '$const0.48', 'q2']
    $0.50 = $0.46 * $0.49                    ['$0.46', '$0.49', '$0.50']
    $const0.52 = const(int, 3)               ['$const0.52']
    $0.53 = getitem(value=q1, index=$const0.52, fn=<built-in function getitem>) ['$0.53', '$const0.52', 'q1']
    $const0.55 = const(int, 0)               ['$const0.55']
    $0.56 = getitem(value=q2, index=$const0.55, fn=<built-in function getitem>) ['$0.56', '$const0.55', 'q2']
    $0.57 = $0.53 * $0.56                    ['$0.53', '$0.56', '$0.57']
    $0.58 = $0.50 + $0.57                    ['$0.50', '$0.57', '$0.58']
    $const0.60 = const(int, 3)               ['$const0.60']
    qout[$const0.60] = $0.58                 ['$0.58', '$const0.60', 'qout']
    $const0.61 = const(NoneType, None)       ['$const0.61']
    $0.62 = cast(value=$const0.61)           ['$0.62', '$const0.61']
    return $0.62                             ['$0.62']

2022-08-04 11:53:06,524 DEBUG ==== SSA block analysis pass on 0
2022-08-04 11:53:06,524 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cecc9f28>
2022-08-04 11:53:06,524 DEBUG on stmt: q1 = arg(0, name=q1)
2022-08-04 11:53:06,524 DEBUG on stmt: q2 = arg(1, name=q2)
2022-08-04 11:53:06,524 DEBUG on stmt: qout = arg(2, name=qout)
2022-08-04 11:53:06,524 DEBUG on stmt: $const0.2 = const(int, 0)
2022-08-04 11:53:06,524 DEBUG on stmt: $0.3 = static_getitem(value=q1, index=0, index_var=$const0.2, fn=<built-in function getitem>)
2022-08-04 11:53:06,524 DEBUG on stmt: $const0.5 = const(int, 0)
2022-08-04 11:53:06,524 DEBUG on stmt: $0.6 = static_getitem(value=q2, index=0, index_var=$const0.5, fn=<built-in function getitem>)
2022-08-04 11:53:06,524 DEBUG on stmt: $0.7 = $0.3 * $0.6
2022-08-04 11:53:06,525 DEBUG on stmt: $const0.9 = const(int, 0)
2022-08-04 11:53:06,525 DEBUG on stmt: qout[0] = $0.7
2022-08-04 11:53:06,525 DEBUG on stmt: $const0.11 = const(int, 0)
2022-08-04 11:53:06,525 DEBUG on stmt: $0.12 = static_getitem(value=q1, index=0, index_var=$const0.11, fn=<built-in function getitem>)
2022-08-04 11:53:06,525 DEBUG on stmt: $const0.14 = const(int, 1)
2022-08-04 11:53:06,525 DEBUG on stmt: $0.15 = static_getitem(value=q2, index=1, index_var=$const0.14, fn=<built-in function getitem>)
2022-08-04 11:53:06,525 DEBUG on stmt: $0.16 = $0.12 * $0.15
2022-08-04 11:53:06,525 DEBUG on stmt: $const0.18 = const(int, 1)
2022-08-04 11:53:06,525 DEBUG on stmt: $0.19 = static_getitem(value=q1, index=1, index_var=$const0.18, fn=<built-in function getitem>)
2022-08-04 11:53:06,525 DEBUG on stmt: $const0.21 = const(int, 0)
2022-08-04 11:53:06,525 DEBUG on stmt: $0.22 = static_getitem(value=q2, index=0, index_var=$const0.21, fn=<built-in function getitem>)
2022-08-04 11:53:06,525 DEBUG on stmt: $0.23 = $0.19 * $0.22
2022-08-04 11:53:06,525 DEBUG on stmt: $0.24 = $0.16 + $0.23
2022-08-04 11:53:06,525 DEBUG on stmt: $const0.26 = const(int, 1)
2022-08-04 11:53:06,525 DEBUG on stmt: qout[1] = $0.24
2022-08-04 11:53:06,525 DEBUG on stmt: $const0.28 = const(int, 0)
2022-08-04 11:53:06,525 DEBUG on stmt: $0.29 = static_getitem(value=q1, index=0, index_var=$const0.28, fn=<built-in function getitem>)
2022-08-04 11:53:06,525 DEBUG on stmt: $const0.31 = const(int, 2)
2022-08-04 11:53:06,525 DEBUG on stmt: $0.32 = static_getitem(value=q2, index=2, index_var=$const0.31, fn=<built-in function getitem>)
2022-08-04 11:53:06,525 DEBUG on stmt: $0.33 = $0.29 * $0.32
2022-08-04 11:53:06,525 DEBUG on stmt: $const0.35 = const(int, 2)
2022-08-04 11:53:06,525 DEBUG on stmt: $0.36 = static_getitem(value=q1, index=2, index_var=$const0.35, fn=<built-in function getitem>)
2022-08-04 11:53:06,525 DEBUG on stmt: $const0.38 = const(int, 0)
2022-08-04 11:53:06,525 DEBUG on stmt: $0.39 = static_getitem(value=q2, index=0, index_var=$const0.38, fn=<built-in function getitem>)
2022-08-04 11:53:06,526 DEBUG on stmt: $0.40 = $0.36 * $0.39
2022-08-04 11:53:06,526 DEBUG on stmt: $0.41 = $0.33 + $0.40
2022-08-04 11:53:06,526 DEBUG on stmt: $const0.43 = const(int, 2)
2022-08-04 11:53:06,526 DEBUG on stmt: qout[2] = $0.41
2022-08-04 11:53:06,526 DEBUG on stmt: $const0.45 = const(int, 0)
2022-08-04 11:53:06,526 DEBUG on stmt: $0.46 = static_getitem(value=q1, index=0, index_var=$const0.45, fn=<built-in function getitem>)
2022-08-04 11:53:06,526 DEBUG on stmt: $const0.48 = const(int, 3)
2022-08-04 11:53:06,526 DEBUG on stmt: $0.49 = static_getitem(value=q2, index=3, index_var=$const0.48, fn=<built-in function getitem>)
2022-08-04 11:53:06,526 DEBUG on stmt: $0.50 = $0.46 * $0.49
2022-08-04 11:53:06,526 DEBUG on stmt: $const0.52 = const(int, 3)
2022-08-04 11:53:06,526 DEBUG on stmt: $0.53 = static_getitem(value=q1, index=3, index_var=$const0.52, fn=<built-in function getitem>)
2022-08-04 11:53:06,526 DEBUG on stmt: $const0.55 = const(int, 0)
2022-08-04 11:53:06,526 DEBUG on stmt: $0.56 = static_getitem(value=q2, index=0, index_var=$const0.55, fn=<built-in function getitem>)
2022-08-04 11:53:06,526 DEBUG on stmt: $0.57 = $0.53 * $0.56
2022-08-04 11:53:06,526 DEBUG on stmt: $0.58 = $0.50 + $0.57
2022-08-04 11:53:06,526 DEBUG on stmt: $const0.60 = const(int, 3)
2022-08-04 11:53:06,526 DEBUG on stmt: qout[3] = $0.58
2022-08-04 11:53:06,526 DEBUG on stmt: $const0.61 = const(NoneType, None)
2022-08-04 11:53:06,526 DEBUG on stmt: $0.62 = cast(value=$const0.61)
2022-08-04 11:53:06,526 DEBUG on stmt: return $0.62
2022-08-04 11:53:06,527 DEBUG defs defaultdict(<class 'list'>,
            {'$0.12': [<numba.core.ir.Assign object at 0x7fa2cece12e8>],
             '$0.15': [<numba.core.ir.Assign object at 0x7fa2cece1358>],
             '$0.16': [<numba.core.ir.Assign object at 0x7fa2cecd8898>],
             '$0.19': [<numba.core.ir.Assign object at 0x7fa2cece13c8>],
             '$0.22': [<numba.core.ir.Assign object at 0x7fa2cece1438>],
             '$0.23': [<numba.core.ir.Assign object at 0x7fa2cecd8e48>],
             '$0.24': [<numba.core.ir.Assign object at 0x7fa2cecd8f28>],
             '$0.29': [<numba.core.ir.Assign object at 0x7fa2cece14a8>],
             '$0.3': [<numba.core.ir.Assign object at 0x7fa2cece1208>],
             '$0.32': [<numba.core.ir.Assign object at 0x7fa2cece1518>],
             '$0.33': [<numba.core.ir.Assign object at 0x7fa2cecdc710>],
             '$0.36': [<numba.core.ir.Assign object at 0x7fa2cece1588>],
             '$0.39': [<numba.core.ir.Assign object at 0x7fa2cece15f8>],
             '$0.40': [<numba.core.ir.Assign object at 0x7fa2cecdccc0>],
             '$0.41': [<numba.core.ir.Assign object at 0x7fa2cecdcda0>],
             '$0.46': [<numba.core.ir.Assign object at 0x7fa2cece1668>],
             '$0.49': [<numba.core.ir.Assign object at 0x7fa2cece16d8>],
             '$0.50': [<numba.core.ir.Assign object at 0x7fa2cece0588>],
             '$0.53': [<numba.core.ir.Assign object at 0x7fa2cece1748>],
             '$0.56': [<numba.core.ir.Assign object at 0x7fa2cece17b8>],
             '$0.57': [<numba.core.ir.Assign object at 0x7fa2cece0b38>],
             '$0.58': [<numba.core.ir.Assign object at 0x7fa2cece0c18>],
             '$0.6': [<numba.core.ir.Assign object at 0x7fa2cece1278>],
             '$0.62': [<numba.core.ir.Assign object at 0x7fa2cece0fd0>],
             '$0.7': [<numba.core.ir.Assign object at 0x7fa2cecd80f0>],
             '$const0.11': [<numba.core.ir.Assign object at 0x7fa2cecd8470>],
             '$const0.14': [<numba.core.ir.Assign object at 0x7fa2cecd86d8>],
             '$const0.18': [<numba.core.ir.Assign object at 0x7fa2cecd8a20>],
             '$const0.2': [<numba.core.ir.Assign object at 0x7fa2cecd2c88>],
             '$const0.21': [<numba.core.ir.Assign object at 0x7fa2cecd8c88>],
             '$const0.26': [<numba.core.ir.Assign object at 0x7fa2cecdc0f0>],
             '$const0.28': [<numba.core.ir.Assign object at 0x7fa2cecdc2e8>],
             '$const0.31': [<numba.core.ir.Assign object at 0x7fa2cecdc550>],
             '$const0.35': [<numba.core.ir.Assign object at 0x7fa2cecdc898>],
             '$const0.38': [<numba.core.ir.Assign object at 0x7fa2cecdcb00>],
             '$const0.43': [<numba.core.ir.Assign object at 0x7fa2cecdcf28>],
             '$const0.45': [<numba.core.ir.Assign object at 0x7fa2cece0160>],
             '$const0.48': [<numba.core.ir.Assign object at 0x7fa2cece03c8>],
             '$const0.5': [<numba.core.ir.Assign object at 0x7fa2cecd2ef0>],
             '$const0.52': [<numba.core.ir.Assign object at 0x7fa2cece0710>],
             '$const0.55': [<numba.core.ir.Assign object at 0x7fa2cece0978>],
             '$const0.60': [<numba.core.ir.Assign object at 0x7fa2cece0da0>],
             '$const0.61': [<numba.core.ir.Assign object at 0x7fa2cece0ef0>],
             '$const0.9': [<numba.core.ir.Assign object at 0x7fa2cecd8278>],
             'q1': [<numba.core.ir.Assign object at 0x7fa2cecd29b0>],
             'q2': [<numba.core.ir.Assign object at 0x7fa2cecd2a58>],
             'qout': [<numba.core.ir.Assign object at 0x7fa2cecd2b00>]})
2022-08-04 11:53:06,527 DEBUG SSA violators set()
2022-08-04 11:53:06,750 DEBUG label 0:
    q1 = arg(0, name=q1)                     ['q1']
    q2 = arg(1, name=q2)                     ['q2']
    qout = arg(2, name=qout)                 ['qout']
    $const0.2 = const(int, 0)                ['$const0.2']
    $0.3 = getitem(value=q1, index=$const0.2, fn=<built-in function getitem>) ['$0.3', '$const0.2', 'q1']
    $const0.5 = const(int, 0)                ['$const0.5']
    $0.6 = getitem(value=q2, index=$const0.5, fn=<built-in function getitem>) ['$0.6', '$const0.5', 'q2']
    $0.7 = $0.3 * $0.6                       ['$0.3', '$0.6', '$0.7']
    $const0.9 = const(int, 1)                ['$const0.9']
    $0.10 = getitem(value=q1, index=$const0.9, fn=<built-in function getitem>) ['$0.10', '$const0.9', 'q1']
    $const0.12 = const(int, 1)               ['$const0.12']
    $0.13 = getitem(value=q2, index=$const0.12, fn=<built-in function getitem>) ['$0.13', '$const0.12', 'q2']
    $0.14 = $0.10 * $0.13                    ['$0.10', '$0.13', '$0.14']
    $0.15 = $0.7 - $0.14                     ['$0.14', '$0.15', '$0.7']
    $const0.17 = const(int, 2)               ['$const0.17']
    $0.18 = getitem(value=q1, index=$const0.17, fn=<built-in function getitem>) ['$0.18', '$const0.17', 'q1']
    $const0.20 = const(int, 2)               ['$const0.20']
    $0.21 = getitem(value=q2, index=$const0.20, fn=<built-in function getitem>) ['$0.21', '$const0.20', 'q2']
    $0.22 = $0.18 * $0.21                    ['$0.18', '$0.21', '$0.22']
    $0.23 = $0.15 - $0.22                    ['$0.15', '$0.22', '$0.23']
    $const0.25 = const(int, 3)               ['$const0.25']
    $0.26 = getitem(value=q1, index=$const0.25, fn=<built-in function getitem>) ['$0.26', '$const0.25', 'q1']
    $const0.28 = const(int, 3)               ['$const0.28']
    $0.29 = getitem(value=q2, index=$const0.28, fn=<built-in function getitem>) ['$0.29', '$const0.28', 'q2']
    $0.30 = $0.26 * $0.29                    ['$0.26', '$0.29', '$0.30']
    $0.31 = $0.23 - $0.30                    ['$0.23', '$0.30', '$0.31']
    $const0.33 = const(int, 0)               ['$const0.33']
    qout[$const0.33] = $0.31                 ['$0.31', '$const0.33', 'qout']
    $const0.35 = const(int, 0)               ['$const0.35']
    $0.36 = getitem(value=q1, index=$const0.35, fn=<built-in function getitem>) ['$0.36', '$const0.35', 'q1']
    $const0.38 = const(int, 1)               ['$const0.38']
    $0.39 = getitem(value=q2, index=$const0.38, fn=<built-in function getitem>) ['$0.39', '$const0.38', 'q2']
    $0.40 = $0.36 * $0.39                    ['$0.36', '$0.39', '$0.40']
    $const0.42 = const(int, 1)               ['$const0.42']
    qout[$const0.42] = $0.40                 ['$0.40', '$const0.42', 'qout']
    $const0.44 = const(int, 0)               ['$const0.44']
    $0.45 = getitem(value=q1, index=$const0.44, fn=<built-in function getitem>) ['$0.45', '$const0.44', 'q1']
    $const0.47 = const(int, 2)               ['$const0.47']
    $0.48 = getitem(value=q2, index=$const0.47, fn=<built-in function getitem>) ['$0.48', '$const0.47', 'q2']
    $0.49 = $0.45 * $0.48                    ['$0.45', '$0.48', '$0.49']
    $const0.51 = const(int, 2)               ['$const0.51']
    qout[$const0.51] = $0.49                 ['$0.49', '$const0.51', 'qout']
    $const0.53 = const(int, 0)               ['$const0.53']
    $0.54 = getitem(value=q1, index=$const0.53, fn=<built-in function getitem>) ['$0.54', '$const0.53', 'q1']
    $const0.56 = const(int, 3)               ['$const0.56']
    $0.57 = getitem(value=q2, index=$const0.56, fn=<built-in function getitem>) ['$0.57', '$const0.56', 'q2']
    $0.58 = $0.54 * $0.57                    ['$0.54', '$0.57', '$0.58']
    $const0.60 = const(int, 3)               ['$const0.60']
    qout[$const0.60] = $0.58                 ['$0.58', '$const0.60', 'qout']
    $const0.61 = const(NoneType, None)       ['$const0.61']
    $0.62 = cast(value=$const0.61)           ['$0.62', '$const0.61']
    return $0.62                             ['$0.62']

2022-08-04 11:53:06,754 DEBUG ==== SSA block analysis pass on 0
2022-08-04 11:53:06,755 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cedaf668>
2022-08-04 11:53:06,755 DEBUG on stmt: q1 = arg(0, name=q1)
2022-08-04 11:53:06,755 DEBUG on stmt: q2 = arg(1, name=q2)
2022-08-04 11:53:06,755 DEBUG on stmt: qout = arg(2, name=qout)
2022-08-04 11:53:06,755 DEBUG on stmt: $const0.2 = const(int, 0)
2022-08-04 11:53:06,755 DEBUG on stmt: $0.3 = static_getitem(value=q1, index=0, index_var=$const0.2, fn=<built-in function getitem>)
2022-08-04 11:53:06,755 DEBUG on stmt: $const0.5 = const(int, 0)
2022-08-04 11:53:06,755 DEBUG on stmt: $0.6 = static_getitem(value=q2, index=0, index_var=$const0.5, fn=<built-in function getitem>)
2022-08-04 11:53:06,755 DEBUG on stmt: $0.7 = $0.3 * $0.6
2022-08-04 11:53:06,755 DEBUG on stmt: $const0.9 = const(int, 1)
2022-08-04 11:53:06,755 DEBUG on stmt: $0.10 = static_getitem(value=q1, index=1, index_var=$const0.9, fn=<built-in function getitem>)
2022-08-04 11:53:06,755 DEBUG on stmt: $const0.12 = const(int, 1)
2022-08-04 11:53:06,755 DEBUG on stmt: $0.13 = static_getitem(value=q2, index=1, index_var=$const0.12, fn=<built-in function getitem>)
2022-08-04 11:53:06,755 DEBUG on stmt: $0.14 = $0.10 * $0.13
2022-08-04 11:53:06,755 DEBUG on stmt: $0.15 = $0.7 - $0.14
2022-08-04 11:53:06,755 DEBUG on stmt: $const0.17 = const(int, 2)
2022-08-04 11:53:06,755 DEBUG on stmt: $0.18 = static_getitem(value=q1, index=2, index_var=$const0.17, fn=<built-in function getitem>)
2022-08-04 11:53:06,755 DEBUG on stmt: $const0.20 = const(int, 2)
2022-08-04 11:53:06,755 DEBUG on stmt: $0.21 = static_getitem(value=q2, index=2, index_var=$const0.20, fn=<built-in function getitem>)
2022-08-04 11:53:06,755 DEBUG on stmt: $0.22 = $0.18 * $0.21
2022-08-04 11:53:06,755 DEBUG on stmt: $0.23 = $0.15 - $0.22
2022-08-04 11:53:06,755 DEBUG on stmt: $const0.25 = const(int, 3)
2022-08-04 11:53:06,756 DEBUG on stmt: $0.26 = static_getitem(value=q1, index=3, index_var=$const0.25, fn=<built-in function getitem>)
2022-08-04 11:53:06,756 DEBUG on stmt: $const0.28 = const(int, 3)
2022-08-04 11:53:06,756 DEBUG on stmt: $0.29 = static_getitem(value=q2, index=3, index_var=$const0.28, fn=<built-in function getitem>)
2022-08-04 11:53:06,756 DEBUG on stmt: $0.30 = $0.26 * $0.29
2022-08-04 11:53:06,756 DEBUG on stmt: $0.31 = $0.23 - $0.30
2022-08-04 11:53:06,756 DEBUG on stmt: $const0.33 = const(int, 0)
2022-08-04 11:53:06,756 DEBUG on stmt: qout[0] = $0.31
2022-08-04 11:53:06,756 DEBUG on stmt: $const0.35 = const(int, 0)
2022-08-04 11:53:06,756 DEBUG on stmt: $0.36 = static_getitem(value=q1, index=0, index_var=$const0.35, fn=<built-in function getitem>)
2022-08-04 11:53:06,756 DEBUG on stmt: $const0.38 = const(int, 1)
2022-08-04 11:53:06,756 DEBUG on stmt: $0.39 = static_getitem(value=q2, index=1, index_var=$const0.38, fn=<built-in function getitem>)
2022-08-04 11:53:06,756 DEBUG on stmt: $0.40 = $0.36 * $0.39
2022-08-04 11:53:06,756 DEBUG on stmt: $const0.42 = const(int, 1)
2022-08-04 11:53:06,756 DEBUG on stmt: qout[1] = $0.40
2022-08-04 11:53:06,756 DEBUG on stmt: $const0.44 = const(int, 0)
2022-08-04 11:53:06,756 DEBUG on stmt: $0.45 = static_getitem(value=q1, index=0, index_var=$const0.44, fn=<built-in function getitem>)
2022-08-04 11:53:06,756 DEBUG on stmt: $const0.47 = const(int, 2)
2022-08-04 11:53:06,756 DEBUG on stmt: $0.48 = static_getitem(value=q2, index=2, index_var=$const0.47, fn=<built-in function getitem>)
2022-08-04 11:53:06,756 DEBUG on stmt: $0.49 = $0.45 * $0.48
2022-08-04 11:53:06,756 DEBUG on stmt: $const0.51 = const(int, 2)
2022-08-04 11:53:06,756 DEBUG on stmt: qout[2] = $0.49
2022-08-04 11:53:06,756 DEBUG on stmt: $const0.53 = const(int, 0)
2022-08-04 11:53:06,756 DEBUG on stmt: $0.54 = static_getitem(value=q1, index=0, index_var=$const0.53, fn=<built-in function getitem>)
2022-08-04 11:53:06,756 DEBUG on stmt: $const0.56 = const(int, 3)
2022-08-04 11:53:06,756 DEBUG on stmt: $0.57 = static_getitem(value=q2, index=3, index_var=$const0.56, fn=<built-in function getitem>)
2022-08-04 11:53:06,757 DEBUG on stmt: $0.58 = $0.54 * $0.57
2022-08-04 11:53:06,757 DEBUG on stmt: $const0.60 = const(int, 3)
2022-08-04 11:53:06,757 DEBUG on stmt: qout[3] = $0.58
2022-08-04 11:53:06,757 DEBUG on stmt: $const0.61 = const(NoneType, None)
2022-08-04 11:53:06,757 DEBUG on stmt: $0.62 = cast(value=$const0.61)
2022-08-04 11:53:06,757 DEBUG on stmt: return $0.62
2022-08-04 11:53:06,757 DEBUG defs defaultdict(<class 'list'>,
            {'$0.10': [<numba.core.ir.Assign object at 0x7fa2cecc4b70>],
             '$0.13': [<numba.core.ir.Assign object at 0x7fa2cecc4d30>],
             '$0.14': [<numba.core.ir.Assign object at 0x7fa2cedd59b0>],
             '$0.15': [<numba.core.ir.Assign object at 0x7fa2cedd5898>],
             '$0.18': [<numba.core.ir.Assign object at 0x7fa2cecc4e48>],
             '$0.21': [<numba.core.ir.Assign object at 0x7fa2cecc4e80>],
             '$0.22': [<numba.core.ir.Assign object at 0x7fa2cedd51d0>],
             '$0.23': [<numba.core.ir.Assign object at 0x7fa2cedd50f0>],
             '$0.26': [<numba.core.ir.Assign object at 0x7fa2cecc4ef0>],
             '$0.29': [<numba.core.ir.Assign object at 0x7fa2cecc4f60>],
             '$0.3': [<numba.core.ir.Assign object at 0x7fa2cecc4cc0>],
             '$0.30': [<numba.core.ir.Assign object at 0x7fa2cedd56a0>],
             '$0.31': [<numba.core.ir.Assign object at 0x7fa2cece6630>],
             '$0.36': [<numba.core.ir.Assign object at 0x7fa2cecc4550>],
             '$0.39': [<numba.core.ir.Assign object at 0x7fa2cecc4518>],
             '$0.40': [<numba.core.ir.Assign object at 0x7fa2ced9a9b0>],
             '$0.45': [<numba.core.ir.Assign object at 0x7fa2cecc4080>],
             '$0.48': [<numba.core.ir.Assign object at 0x7fa2cecc4470>],
             '$0.49': [<numba.core.ir.Assign object at 0x7fa2cece0cc0>],
             '$0.54': [<numba.core.ir.Assign object at 0x7fa2cecc4400>],
             '$0.57': [<numba.core.ir.Assign object at 0x7fa2cecc43c8>],
             '$0.58': [<numba.core.ir.Assign object at 0x7fa2cece1c50>],
             '$0.6': [<numba.core.ir.Assign object at 0x7fa2cecc4da0>],
             '$0.62': [<numba.core.ir.Assign object at 0x7fa2cecc4940>],
             '$0.7': [<numba.core.ir.Assign object at 0x7fa2cece1d68>],
             '$const0.12': [<numba.core.ir.Assign object at 0x7fa2cedd5cf8>],
             '$const0.17': [<numba.core.ir.Assign object at 0x7fa2cedd54a8>],
             '$const0.2': [<numba.core.ir.Assign object at 0x7fa2cecdcbe0>],
             '$const0.20': [<numba.core.ir.Assign object at 0x7fa2cedd5588>],
             '$const0.25': [<numba.core.ir.Assign object at 0x7fa2cedd5a90>],
             '$const0.28': [<numba.core.ir.Assign object at 0x7fa2cedd5f28>],
             '$const0.33': [<numba.core.ir.Assign object at 0x7fa2cece6198>],
             '$const0.35': [<numba.core.ir.Assign object at 0x7fa2cece6550>],
             '$const0.38': [<numba.core.ir.Assign object at 0x7fa2ced9a860>],
             '$const0.42': [<numba.core.ir.Assign object at 0x7fa2cea02e10>],
             '$const0.44': [<numba.core.ir.Assign object at 0x7fa2cea025c0>],
             '$const0.47': [<numba.core.ir.Assign object at 0x7fa2cecd8ba8>],
             '$const0.5': [<numba.core.ir.Assign object at 0x7fa2cece0e10>],
             '$const0.51': [<numba.core.ir.Assign object at 0x7fa2cece6dd8>],
             '$const0.53': [<numba.core.ir.Assign object at 0x7fa2cece1080>],
             '$const0.56': [<numba.core.ir.Assign object at 0x7fa2cece1b70>],
             '$const0.60': [<numba.core.ir.Assign object at 0x7fa2cecc45c0>],
             '$const0.61': [<numba.core.ir.Assign object at 0x7fa2cecc4898>],
             '$const0.9': [<numba.core.ir.Assign object at 0x7fa2cecd8390>],
             'q1': [<numba.core.ir.Assign object at 0x7fa2cecd2898>],
             'q2': [<numba.core.ir.Assign object at 0x7fa2cecd2fd0>],
             'qout': [<numba.core.ir.Assign object at 0x7fa2cecdc160>]})
2022-08-04 11:53:06,757 DEBUG SSA violators set()
2022-08-04 11:53:06,897 DEBUG label 0:
    q1 = arg(0, name=q1)                     ['q1']
    q2 = arg(1, name=q2)                     ['q2']
    qout = arg(2, name=qout)                 ['qout']
    $const0.2 = const(int, 0)                ['$const0.2']
    $0.3 = getitem(value=q1, index=$const0.2, fn=<built-in function getitem>) ['$0.3', '$const0.2', 'q1']
    $const0.5 = const(int, 0)                ['$const0.5']
    $0.6 = getitem(value=q2, index=$const0.5, fn=<built-in function getitem>) ['$0.6', '$const0.5', 'q2']
    $0.7 = $0.3 * $0.6                       ['$0.3', '$0.6', '$0.7']
    $const0.9 = const(int, 1)                ['$const0.9']
    $0.10 = getitem(value=q1, index=$const0.9, fn=<built-in function getitem>) ['$0.10', '$const0.9', 'q1']
    $const0.12 = const(int, 1)               ['$const0.12']
    $0.13 = getitem(value=q2, index=$const0.12, fn=<built-in function getitem>) ['$0.13', '$const0.12', 'q2']
    $0.14 = $0.10 * $0.13                    ['$0.10', '$0.13', '$0.14']
    $0.15 = $0.7 - $0.14                     ['$0.14', '$0.15', '$0.7']
    $const0.17 = const(int, 2)               ['$const0.17']
    $0.18 = getitem(value=q1, index=$const0.17, fn=<built-in function getitem>) ['$0.18', '$const0.17', 'q1']
    $const0.20 = const(int, 2)               ['$const0.20']
    $0.21 = getitem(value=q2, index=$const0.20, fn=<built-in function getitem>) ['$0.21', '$const0.20', 'q2']
    $0.22 = $0.18 * $0.21                    ['$0.18', '$0.21', '$0.22']
    $0.23 = $0.15 - $0.22                    ['$0.15', '$0.22', '$0.23']
    $const0.25 = const(int, 3)               ['$const0.25']
    $0.26 = getitem(value=q1, index=$const0.25, fn=<built-in function getitem>) ['$0.26', '$const0.25', 'q1']
    $const0.28 = const(int, 3)               ['$const0.28']
    $0.29 = getitem(value=q2, index=$const0.28, fn=<built-in function getitem>) ['$0.29', '$const0.28', 'q2']
    $0.30 = $0.26 * $0.29                    ['$0.26', '$0.29', '$0.30']
    $0.31 = $0.23 - $0.30                    ['$0.23', '$0.30', '$0.31']
    $const0.33 = const(int, 0)               ['$const0.33']
    qout[$const0.33] = $0.31                 ['$0.31', '$const0.33', 'qout']
    $const0.35 = const(int, 1)               ['$const0.35']
    $0.36 = getitem(value=q1, index=$const0.35, fn=<built-in function getitem>) ['$0.36', '$const0.35', 'q1']
    $const0.38 = const(int, 0)               ['$const0.38']
    $0.39 = getitem(value=q2, index=$const0.38, fn=<built-in function getitem>) ['$0.39', '$const0.38', 'q2']
    $0.40 = $0.36 * $0.39                    ['$0.36', '$0.39', '$0.40']
    $const0.42 = const(int, 1)               ['$const0.42']
    qout[$const0.42] = $0.40                 ['$0.40', '$const0.42', 'qout']
    $const0.44 = const(int, 2)               ['$const0.44']
    $0.45 = getitem(value=q1, index=$const0.44, fn=<built-in function getitem>) ['$0.45', '$const0.44', 'q1']
    $const0.47 = const(int, 0)               ['$const0.47']
    $0.48 = getitem(value=q2, index=$const0.47, fn=<built-in function getitem>) ['$0.48', '$const0.47', 'q2']
    $0.49 = $0.45 * $0.48                    ['$0.45', '$0.48', '$0.49']
    $const0.51 = const(int, 2)               ['$const0.51']
    qout[$const0.51] = $0.49                 ['$0.49', '$const0.51', 'qout']
    $const0.53 = const(int, 3)               ['$const0.53']
    $0.54 = getitem(value=q1, index=$const0.53, fn=<built-in function getitem>) ['$0.54', '$const0.53', 'q1']
    $const0.56 = const(int, 0)               ['$const0.56']
    $0.57 = getitem(value=q2, index=$const0.56, fn=<built-in function getitem>) ['$0.57', '$const0.56', 'q2']
    $0.58 = $0.54 * $0.57                    ['$0.54', '$0.57', '$0.58']
    $const0.60 = const(int, 3)               ['$const0.60']
    qout[$const0.60] = $0.58                 ['$0.58', '$const0.60', 'qout']
    $const0.61 = const(NoneType, None)       ['$const0.61']
    $0.62 = cast(value=$const0.61)           ['$0.62', '$const0.61']
    return $0.62                             ['$0.62']

2022-08-04 11:53:06,903 DEBUG ==== SSA block analysis pass on 0
2022-08-04 11:53:06,903 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cec996a0>
2022-08-04 11:53:06,904 DEBUG on stmt: q1 = arg(0, name=q1)
2022-08-04 11:53:06,904 DEBUG on stmt: q2 = arg(1, name=q2)
2022-08-04 11:53:06,904 DEBUG on stmt: qout = arg(2, name=qout)
2022-08-04 11:53:06,904 DEBUG on stmt: $const0.2 = const(int, 0)
2022-08-04 11:53:06,904 DEBUG on stmt: $0.3 = static_getitem(value=q1, index=0, index_var=$const0.2, fn=<built-in function getitem>)
2022-08-04 11:53:06,904 DEBUG on stmt: $const0.5 = const(int, 0)
2022-08-04 11:53:06,904 DEBUG on stmt: $0.6 = static_getitem(value=q2, index=0, index_var=$const0.5, fn=<built-in function getitem>)
2022-08-04 11:53:06,904 DEBUG on stmt: $0.7 = $0.3 * $0.6
2022-08-04 11:53:06,904 DEBUG on stmt: $const0.9 = const(int, 1)
2022-08-04 11:53:06,904 DEBUG on stmt: $0.10 = static_getitem(value=q1, index=1, index_var=$const0.9, fn=<built-in function getitem>)
2022-08-04 11:53:06,904 DEBUG on stmt: $const0.12 = const(int, 1)
2022-08-04 11:53:06,904 DEBUG on stmt: $0.13 = static_getitem(value=q2, index=1, index_var=$const0.12, fn=<built-in function getitem>)
2022-08-04 11:53:06,904 DEBUG on stmt: $0.14 = $0.10 * $0.13
2022-08-04 11:53:06,905 DEBUG on stmt: $0.15 = $0.7 - $0.14
2022-08-04 11:53:06,905 DEBUG on stmt: $const0.17 = const(int, 2)
2022-08-04 11:53:06,905 DEBUG on stmt: $0.18 = static_getitem(value=q1, index=2, index_var=$const0.17, fn=<built-in function getitem>)
2022-08-04 11:53:06,905 DEBUG on stmt: $const0.20 = const(int, 2)
2022-08-04 11:53:06,905 DEBUG on stmt: $0.21 = static_getitem(value=q2, index=2, index_var=$const0.20, fn=<built-in function getitem>)
2022-08-04 11:53:06,905 DEBUG on stmt: $0.22 = $0.18 * $0.21
2022-08-04 11:53:06,905 DEBUG on stmt: $0.23 = $0.15 - $0.22
2022-08-04 11:53:06,905 DEBUG on stmt: $const0.25 = const(int, 3)
2022-08-04 11:53:06,905 DEBUG on stmt: $0.26 = static_getitem(value=q1, index=3, index_var=$const0.25, fn=<built-in function getitem>)
2022-08-04 11:53:06,905 DEBUG on stmt: $const0.28 = const(int, 3)
2022-08-04 11:53:06,905 DEBUG on stmt: $0.29 = static_getitem(value=q2, index=3, index_var=$const0.28, fn=<built-in function getitem>)
2022-08-04 11:53:06,905 DEBUG on stmt: $0.30 = $0.26 * $0.29
2022-08-04 11:53:06,906 DEBUG on stmt: $0.31 = $0.23 - $0.30
2022-08-04 11:53:06,906 DEBUG on stmt: $const0.33 = const(int, 0)
2022-08-04 11:53:06,906 DEBUG on stmt: qout[0] = $0.31
2022-08-04 11:53:06,906 DEBUG on stmt: $const0.35 = const(int, 1)
2022-08-04 11:53:06,906 DEBUG on stmt: $0.36 = static_getitem(value=q1, index=1, index_var=$const0.35, fn=<built-in function getitem>)
2022-08-04 11:53:06,906 DEBUG on stmt: $const0.38 = const(int, 0)
2022-08-04 11:53:06,906 DEBUG on stmt: $0.39 = static_getitem(value=q2, index=0, index_var=$const0.38, fn=<built-in function getitem>)
2022-08-04 11:53:06,906 DEBUG on stmt: $0.40 = $0.36 * $0.39
2022-08-04 11:53:06,906 DEBUG on stmt: $const0.42 = const(int, 1)
2022-08-04 11:53:06,906 DEBUG on stmt: qout[1] = $0.40
2022-08-04 11:53:06,906 DEBUG on stmt: $const0.44 = const(int, 2)
2022-08-04 11:53:06,906 DEBUG on stmt: $0.45 = static_getitem(value=q1, index=2, index_var=$const0.44, fn=<built-in function getitem>)
2022-08-04 11:53:06,906 DEBUG on stmt: $const0.47 = const(int, 0)
2022-08-04 11:53:06,907 DEBUG on stmt: $0.48 = static_getitem(value=q2, index=0, index_var=$const0.47, fn=<built-in function getitem>)
2022-08-04 11:53:06,907 DEBUG on stmt: $0.49 = $0.45 * $0.48
2022-08-04 11:53:06,907 DEBUG on stmt: $const0.51 = const(int, 2)
2022-08-04 11:53:06,907 DEBUG on stmt: qout[2] = $0.49
2022-08-04 11:53:06,907 DEBUG on stmt: $const0.53 = const(int, 3)
2022-08-04 11:53:06,907 DEBUG on stmt: $0.54 = static_getitem(value=q1, index=3, index_var=$const0.53, fn=<built-in function getitem>)
2022-08-04 11:53:06,907 DEBUG on stmt: $const0.56 = const(int, 0)
2022-08-04 11:53:06,907 DEBUG on stmt: $0.57 = static_getitem(value=q2, index=0, index_var=$const0.56, fn=<built-in function getitem>)
2022-08-04 11:53:06,907 DEBUG on stmt: $0.58 = $0.54 * $0.57
2022-08-04 11:53:06,907 DEBUG on stmt: $const0.60 = const(int, 3)
2022-08-04 11:53:06,907 DEBUG on stmt: qout[3] = $0.58
2022-08-04 11:53:06,907 DEBUG on stmt: $const0.61 = const(NoneType, None)
2022-08-04 11:53:06,907 DEBUG on stmt: $0.62 = cast(value=$const0.61)
2022-08-04 11:53:06,908 DEBUG on stmt: return $0.62
2022-08-04 11:53:06,908 DEBUG defs defaultdict(<class 'list'>,
            {'$0.10': [<numba.core.ir.Assign object at 0x7fa2ce5af978>],
             '$0.13': [<numba.core.ir.Assign object at 0x7fa2ce5af9e8>],
             '$0.14': [<numba.core.ir.Assign object at 0x7fa2ce3c4f28>],
             '$0.15': [<numba.core.ir.Assign object at 0x7fa2ce3c4b70>],
             '$0.18': [<numba.core.ir.Assign object at 0x7fa2ce5af898>],
             '$0.21': [<numba.core.ir.Assign object at 0x7fa2ce5afcc0>],
             '$0.22': [<numba.core.ir.Assign object at 0x7fa2ce3c4160>],
             '$0.23': [<numba.core.ir.Assign object at 0x7fa2ce3c49e8>],
             '$0.26': [<numba.core.ir.Assign object at 0x7fa2ce5af7f0>],
             '$0.29': [<numba.core.ir.Assign object at 0x7fa2ce5af630>],
             '$0.3': [<numba.core.ir.Assign object at 0x7fa2ce5af0f0>],
             '$0.30': [<numba.core.ir.Assign object at 0x7fa2ce0b54a8>],
             '$0.31': [<numba.core.ir.Assign object at 0x7fa2ce0b5630>],
             '$0.36': [<numba.core.ir.Assign object at 0x7fa2ce5afac8>],
             '$0.39': [<numba.core.ir.Assign object at 0x7fa2ce5afa20>],
             '$0.40': [<numba.core.ir.Assign object at 0x7fa2ce287470>],
             '$0.45': [<numba.core.ir.Assign object at 0x7fa2ce5aff98>],
             '$0.48': [<numba.core.ir.Assign object at 0x7fa2ce5afc88>],
             '$0.49': [<numba.core.ir.Assign object at 0x7fa2ce68a550>],
             '$0.54': [<numba.core.ir.Assign object at 0x7fa2ce5af748>],
             '$0.57': [<numba.core.ir.Assign object at 0x7fa2ce5af710>],
             '$0.58': [<numba.core.ir.Assign object at 0x7fa2ce68ae10>],
             '$0.6': [<numba.core.ir.Assign object at 0x7fa2ce5af6a0>],
             '$0.62': [<numba.core.ir.Assign object at 0x7fa2ce5af908>],
             '$0.7': [<numba.core.ir.Assign object at 0x7fa2cdc712b0>],
             '$const0.12': [<numba.core.ir.Assign object at 0x7fa2ce3c4b38>],
             '$const0.17': [<numba.core.ir.Assign object at 0x7fa2ce3c4278>],
             '$const0.2': [<numba.core.ir.Assign object at 0x7fa2cdb50d30>],
             '$const0.20': [<numba.core.ir.Assign object at 0x7fa2ce3c4748>],
             '$const0.25': [<numba.core.ir.Assign object at 0x7fa2ce3c42b0>],
             '$const0.28': [<numba.core.ir.Assign object at 0x7fa2ce3aa5c0>],
             '$const0.33': [<numba.core.ir.Assign object at 0x7fa2ce3b9240>],
             '$const0.35': [<numba.core.ir.Assign object at 0x7fa2ce37be80>],
             '$const0.38': [<numba.core.ir.Assign object at 0x7fa2ce287f60>],
             '$const0.42': [<numba.core.ir.Assign object at 0x7fa2ce287be0>],
             '$const0.44': [<numba.core.ir.Assign object at 0x7fa2ce68a860>],
             '$const0.47': [<numba.core.ir.Assign object at 0x7fa2ce68a940>],
             '$const0.5': [<numba.core.ir.Assign object at 0x7fa2ce0b10f0>],
             '$const0.51': [<numba.core.ir.Assign object at 0x7fa2ce68a4e0>],
             '$const0.53': [<numba.core.ir.Assign object at 0x7fa2ce68a0b8>],
             '$const0.56': [<numba.core.ir.Assign object at 0x7fa2ce68aba8>],
             '$const0.60': [<numba.core.ir.Assign object at 0x7fa2ce68ae48>],
             '$const0.61': [<numba.core.ir.Assign object at 0x7fa2ce68ae80>],
             '$const0.9': [<numba.core.ir.Assign object at 0x7fa2ce068c50>],
             'q1': [<numba.core.ir.Assign object at 0x7fa2ce6fc748>],
             'q2': [<numba.core.ir.Assign object at 0x7fa2ce6fff60>],
             'qout': [<numba.core.ir.Assign object at 0x7fa2ce6ff908>]})
2022-08-04 11:53:06,908 DEBUG SSA violators set()
2022-08-04 11:53:07,048 DEBUG label 0:
    q1 = arg(0, name=q1)                     ['q1']
    q2 = arg(1, name=q2)                     ['q2']
    bout = arg(2, name=bout)                 ['bout']
    $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$0.1']
    $0.2 = getattr(value=$0.1, attr=any)     ['$0.1', '$0.2']
    $const0.4 = const(NoneType, None)        ['$const0.4']
    $const0.5 = const(NoneType, None)        ['$const0.5']
    $0.6 = global(slice: <class 'slice'>)    ['$0.6']
    $0.7 = call $0.6($const0.4, $const0.5, func=$0.6, args=(Var($const0.4, algebra.py:389), Var($const0.5, algebra.py:389)), kws=(), vararg=None) ['$0.6', '$0.7', '$const0.4', '$const0.5']
    $0.8 = getitem(value=q1, index=$0.7, fn=<built-in function getitem>) ['$0.7', '$0.8', 'q1']
    $const0.10 = const(NoneType, None)       ['$const0.10']
    $const0.11 = const(NoneType, None)       ['$const0.11']
    $0.12 = global(slice: <class 'slice'>)   ['$0.12']
    $0.13 = call $0.12($const0.10, $const0.11, func=$0.12, args=(Var($const0.10, algebra.py:389), Var($const0.11, algebra.py:389)), kws=(), vararg=None) ['$0.12', '$0.13', '$const0.10', '$const0.11']
    $0.14 = getitem(value=q2, index=$0.13, fn=<built-in function getitem>) ['$0.13', '$0.14', 'q2']
    $0.15 = $0.8 != $0.14                    ['$0.14', '$0.15', '$0.8']
    $0.16 = call $0.2($0.15, func=$0.2, args=[Var($0.15, algebra.py:389)], kws=(), vararg=None) ['$0.15', '$0.16', '$0.2']
    $const0.18 = const(int, 0)               ['$const0.18']
    bout[$const0.18] = $0.16                 ['$0.16', '$const0.18', 'bout']
    $const0.19 = const(NoneType, None)       ['$const0.19']
    $0.20 = cast(value=$const0.19)           ['$0.20', '$const0.19']
    return $0.20                             ['$0.20']

2022-08-04 11:53:07,051 DEBUG ==== SSA block analysis pass on 0
2022-08-04 11:53:07,051 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce162a90>
2022-08-04 11:53:07,051 DEBUG on stmt: q1 = arg(0, name=q1)
2022-08-04 11:53:07,051 DEBUG on stmt: q2 = arg(1, name=q2)
2022-08-04 11:53:07,051 DEBUG on stmt: bout = arg(2, name=bout)
2022-08-04 11:53:07,051 DEBUG on stmt: $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:07,051 DEBUG on stmt: $0.2 = getattr(value=$0.1, attr=any)
2022-08-04 11:53:07,051 DEBUG on stmt: $const0.4 = const(NoneType, None)
2022-08-04 11:53:07,051 DEBUG on stmt: $const0.5 = const(NoneType, None)
2022-08-04 11:53:07,051 DEBUG on stmt: $0.6 = global(slice: <class 'slice'>)
2022-08-04 11:53:07,051 DEBUG on stmt: $0.7 = call $0.6($const0.4, $const0.5, func=$0.6, args=(Var($const0.4, algebra.py:389), Var($const0.5, algebra.py:389)), kws=(), vararg=None)
2022-08-04 11:53:07,052 DEBUG on stmt: $0.8 = static_getitem(value=q1, index=slice(None, None, None), index_var=$0.7, fn=<built-in function getitem>)
2022-08-04 11:53:07,052 DEBUG on stmt: $const0.10 = const(NoneType, None)
2022-08-04 11:53:07,052 DEBUG on stmt: $const0.11 = const(NoneType, None)
2022-08-04 11:53:07,052 DEBUG on stmt: $0.12 = global(slice: <class 'slice'>)
2022-08-04 11:53:07,052 DEBUG on stmt: $0.13 = call $0.12($const0.10, $const0.11, func=$0.12, args=(Var($const0.10, algebra.py:389), Var($const0.11, algebra.py:389)), kws=(), vararg=None)
2022-08-04 11:53:07,052 DEBUG on stmt: $0.14 = static_getitem(value=q2, index=slice(None, None, None), index_var=$0.13, fn=<built-in function getitem>)
2022-08-04 11:53:07,052 DEBUG on stmt: $0.15 = $0.8 != $0.14
2022-08-04 11:53:07,052 DEBUG on stmt: $0.16 = call $0.2($0.15, func=$0.2, args=[Var($0.15, algebra.py:389)], kws=(), vararg=None)
2022-08-04 11:53:07,052 DEBUG on stmt: $const0.18 = const(int, 0)
2022-08-04 11:53:07,052 DEBUG on stmt: bout[0] = $0.16
2022-08-04 11:53:07,052 DEBUG on stmt: $const0.19 = const(NoneType, None)
2022-08-04 11:53:07,052 DEBUG on stmt: $0.20 = cast(value=$const0.19)
2022-08-04 11:53:07,052 DEBUG on stmt: return $0.20
2022-08-04 11:53:07,053 DEBUG defs defaultdict(<class 'list'>,
            {'$0.1': [<numba.core.ir.Assign object at 0x7fa2cdeef048>],
             '$0.12': [<numba.core.ir.Assign object at 0x7fa2cdeefa58>],
             '$0.13': [<numba.core.ir.Assign object at 0x7fa2ce162048>],
             '$0.14': [<numba.core.ir.Assign object at 0x7fa2ce1282e8>],
             '$0.15': [<numba.core.ir.Assign object at 0x7fa2ce1624a8>],
             '$0.16': [<numba.core.ir.Assign object at 0x7fa2ce162dd8>],
             '$0.2': [<numba.core.ir.Assign object at 0x7fa2cdeef0b8>],
             '$0.20': [<numba.core.ir.Assign object at 0x7fa2ce162cf8>],
             '$0.6': [<numba.core.ir.Assign object at 0x7fa2cdeefbe0>],
             '$0.7': [<numba.core.ir.Assign object at 0x7fa2cdeef9e8>],
             '$0.8': [<numba.core.ir.Assign object at 0x7fa2ce162cc0>],
             '$const0.10': [<numba.core.ir.Assign object at 0x7fa2cdeef2b0>],
             '$const0.11': [<numba.core.ir.Assign object at 0x7fa2cdeefe48>],
             '$const0.18': [<numba.core.ir.Assign object at 0x7fa2ce162780>],
             '$const0.19': [<numba.core.ir.Assign object at 0x7fa2ce162e80>],
             '$const0.4': [<numba.core.ir.Assign object at 0x7fa2cdeef898>],
             '$const0.5': [<numba.core.ir.Assign object at 0x7fa2cdeef470>],
             'bout': [<numba.core.ir.Assign object at 0x7fa2cdeef438>],
             'q1': [<numba.core.ir.Assign object at 0x7fa2cdeefc18>],
             'q2': [<numba.core.ir.Assign object at 0x7fa2cdeef320>]})
2022-08-04 11:53:07,053 DEBUG SSA violators set()
2022-08-04 11:53:07,060 DEBUG label 0:
    a = arg(0, name=a)                       ['a']
    jump 2                                   []
label 2:
    jump 4                                   []
label 4:
    $4.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$4.1']
    $4.2 = getattr(value=$4.1, attr=nditer)  ['$4.1', '$4.2']
    $4.4 = call $4.2(a, func=$4.2, args=[Var(a, arraymath.py:793)], kws=(), vararg=None) ['$4.2', '$4.4', 'a']
    $4.5 = getiter(value=$4.4)               ['$4.4', '$4.5']
    $phi14.1 = $4.5                          ['$4.5', '$phi14.1']
    jump 14                                  []
label 14:
    $14.2 = iternext(value=$phi14.1)         ['$14.2', '$phi14.1']
    $14.3 = pair_first(value=$14.2)          ['$14.2', '$14.3']
    $14.4 = pair_second(value=$14.2)         ['$14.2', '$14.4']
    $phi16.1 = $14.3                         ['$14.3', '$phi16.1']
    $phi32.1 = $14.3                         ['$14.3', '$phi32.1']
    $phi32.2 = $phi14.1                      ['$phi14.1', '$phi32.2']
    branch $14.4, 16, 32                     ['$14.4']
label 16:
    v = $phi16.1                             ['$phi16.1', 'v']
    $16.3 = getattr(value=v, attr=item)      ['$16.3', 'v']
    $16.4 = call $16.3(func=$16.3, args=[], kws=(), vararg=None) ['$16.3', '$16.4']
    bool24 = global(bool: <class 'bool'>)    ['bool24']
    $24pred = call bool24($16.4, func=bool24, args=(Var($16.4, arraymath.py:794),), kws=(), vararg=None) ['$16.4', '$24pred', 'bool24']
    branch $24pred, 26, 14                   ['$24pred']
label 26:
    $const26.1 = const(bool, True)           ['$const26.1']
    $26.2 = cast(value=$const26.1)           ['$26.2', '$const26.1']
    return $26.2                             ['$26.2']
label 32:
    jump 34                                  []
label 34:
    $const34.1 = const(bool, False)          ['$const34.1']
    $34.2 = cast(value=$const34.1)           ['$34.2', '$const34.1']
    return $34.2                             ['$34.2']

2022-08-04 11:53:07,068 DEBUG ==== SSA block analysis pass on 0
2022-08-04 11:53:07,068 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdfb5898>
2022-08-04 11:53:07,068 DEBUG on stmt: a = arg(0, name=a)
2022-08-04 11:53:07,068 DEBUG on stmt: jump 2
2022-08-04 11:53:07,068 DEBUG ==== SSA block analysis pass on 2
2022-08-04 11:53:07,068 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdfb5898>
2022-08-04 11:53:07,068 DEBUG on stmt: jump 4
2022-08-04 11:53:07,068 DEBUG ==== SSA block analysis pass on 4
2022-08-04 11:53:07,068 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdfb5898>
2022-08-04 11:53:07,068 DEBUG on stmt: $4.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:07,068 DEBUG on stmt: $4.2 = getattr(value=$4.1, attr=nditer)
2022-08-04 11:53:07,068 DEBUG on stmt: $4.4 = call $4.2(a, func=$4.2, args=[Var(a, arraymath.py:793)], kws=(), vararg=None)
2022-08-04 11:53:07,068 DEBUG on stmt: $4.5 = getiter(value=$4.4)
2022-08-04 11:53:07,069 DEBUG on stmt: $phi14.1 = $4.5
2022-08-04 11:53:07,069 DEBUG on stmt: jump 14
2022-08-04 11:53:07,069 DEBUG ==== SSA block analysis pass on 14
2022-08-04 11:53:07,069 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdfb5898>
2022-08-04 11:53:07,069 DEBUG on stmt: $14.2 = iternext(value=$phi14.1)
2022-08-04 11:53:07,069 DEBUG on stmt: $14.3 = pair_first(value=$14.2)
2022-08-04 11:53:07,069 DEBUG on stmt: $14.4 = pair_second(value=$14.2)
2022-08-04 11:53:07,069 DEBUG on stmt: $phi16.1 = $14.3
2022-08-04 11:53:07,069 DEBUG on stmt: $phi32.1 = $14.3
2022-08-04 11:53:07,069 DEBUG on stmt: $phi32.2 = $phi14.1
2022-08-04 11:53:07,069 DEBUG on stmt: branch $14.4, 16, 32
2022-08-04 11:53:07,069 DEBUG ==== SSA block analysis pass on 16
2022-08-04 11:53:07,069 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdfb5898>
2022-08-04 11:53:07,069 DEBUG on stmt: v = $phi16.1
2022-08-04 11:53:07,069 DEBUG on stmt: $16.3 = getattr(value=v, attr=item)
2022-08-04 11:53:07,069 DEBUG on stmt: $16.4 = call $16.3(func=$16.3, args=[], kws=(), vararg=None)
2022-08-04 11:53:07,069 DEBUG on stmt: bool24 = global(bool: <class 'bool'>)
2022-08-04 11:53:07,069 DEBUG on stmt: $24pred = call bool24($16.4, func=bool24, args=(Var($16.4, arraymath.py:794),), kws=(), vararg=None)
2022-08-04 11:53:07,069 DEBUG on stmt: branch $24pred, 26, 14
2022-08-04 11:53:07,069 DEBUG ==== SSA block analysis pass on 26
2022-08-04 11:53:07,069 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdfb5898>
2022-08-04 11:53:07,069 DEBUG on stmt: $const26.1 = const(bool, True)
2022-08-04 11:53:07,069 DEBUG on stmt: $26.2 = cast(value=$const26.1)
2022-08-04 11:53:07,069 DEBUG on stmt: return $26.2
2022-08-04 11:53:07,069 DEBUG ==== SSA block analysis pass on 32
2022-08-04 11:53:07,069 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdfb5898>
2022-08-04 11:53:07,069 DEBUG on stmt: jump 34
2022-08-04 11:53:07,070 DEBUG ==== SSA block analysis pass on 34
2022-08-04 11:53:07,070 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdfb5898>
2022-08-04 11:53:07,070 DEBUG on stmt: $const34.1 = const(bool, False)
2022-08-04 11:53:07,070 DEBUG on stmt: $34.2 = cast(value=$const34.1)
2022-08-04 11:53:07,070 DEBUG on stmt: return $34.2
2022-08-04 11:53:07,070 DEBUG defs defaultdict(<class 'list'>,
            {'$14.2': [<numba.core.ir.Assign object at 0x7fa2cdeaa1d0>],
             '$14.3': [<numba.core.ir.Assign object at 0x7fa2cdeaa860>],
             '$14.4': [<numba.core.ir.Assign object at 0x7fa2ce1ad5f8>],
             '$16.3': [<numba.core.ir.Assign object at 0x7fa2ce1ad7b8>],
             '$16.4': [<numba.core.ir.Assign object at 0x7fa2ce1ade48>],
             '$24pred': [<numba.core.ir.Assign object at 0x7fa2ce1add30>],
             '$26.2': [<numba.core.ir.Assign object at 0x7fa2cde87160>],
             '$34.2': [<numba.core.ir.Assign object at 0x7fa2cde87e48>],
             '$4.1': [<numba.core.ir.Assign object at 0x7fa2cdeaa5c0>],
             '$4.2': [<numba.core.ir.Assign object at 0x7fa2cdeaa470>],
             '$4.4': [<numba.core.ir.Assign object at 0x7fa2cdeaa0f0>],
             '$4.5': [<numba.core.ir.Assign object at 0x7fa2cdeaabe0>],
             '$const26.1': [<numba.core.ir.Assign object at 0x7fa2ce1adb70>],
             '$const34.1': [<numba.core.ir.Assign object at 0x7fa2cde877f0>],
             '$phi14.1': [<numba.core.ir.Assign object at 0x7fa2cdeaa400>],
             '$phi16.1': [<numba.core.ir.Assign object at 0x7fa2ce1ad518>],
             '$phi32.1': [<numba.core.ir.Assign object at 0x7fa2ce1ada20>],
             '$phi32.2': [<numba.core.ir.Assign object at 0x7fa2ce1ad048>],
             'a': [<numba.core.ir.Assign object at 0x7fa2cdeaa6d8>],
             'bool24': [<numba.core.ir.Assign object at 0x7fa2ce1adbe0>],
             'v': [<numba.core.ir.Assign object at 0x7fa2ce1ad5c0>]})
2022-08-04 11:53:07,070 DEBUG SSA violators set()
2022-08-04 11:53:07,085 DEBUG label 0:
    shape = arg(0, name=shape)               ['shape']
    main_shape = arg(1, name=main_shape)     ['main_shape']
    $0.1 = global(len: <built-in function len>) ['$0.1']
    n = call $0.1(shape, func=$0.1, args=[Var(shape, arrayobj.py:2716)], kws=(), vararg=None) ['$0.1', 'n', 'shape']
    jump 10                                  []
label 10:
    jump 12                                  []
label 12:
    $12.1 = global(range: <class 'range'>)   ['$12.1']
    $12.3 = call $12.1(n, func=$12.1, args=[Var(n, arrayobj.py:2716)], kws=(), vararg=None) ['$12.1', '$12.3', 'n']
    $12.4 = getiter(value=$12.3)             ['$12.3', '$12.4']
    $phi20.1 = $12.4                         ['$12.4', '$phi20.1']
    jump 20                                  []
label 20:
    $20.2 = iternext(value=$phi20.1)         ['$20.2', '$phi20.1']
    $20.3 = pair_first(value=$20.2)          ['$20.2', '$20.3']
    $20.4 = pair_second(value=$20.2)         ['$20.2', '$20.4']
    $phi22.1 = $20.3                         ['$20.3', '$phi22.1']
    $phi62.1 = $20.3                         ['$20.3', '$phi62.1']
    $phi62.2 = $phi20.1                      ['$phi20.1', '$phi62.2']
    branch $20.4, 22, 62                     ['$20.4']
label 22:
    i = $phi22.1                             ['$phi22.1', 'i']
    $22.4 = getitem(value=shape, index=i, fn=<built-in function getitem>) ['$22.4', 'i', 'shape']
    $22.6 = global(len: <built-in function len>) ['$22.6']
    $22.8 = call $22.6(main_shape, func=$22.6, args=[Var(main_shape, arrayobj.py:2716)], kws=(), vararg=None) ['$22.6', '$22.8', 'main_shape']
    $22.10 = $22.8 - n                       ['$22.10', '$22.8', 'n']
    $22.12 = $22.10 + i                      ['$22.10', '$22.12', 'i']
    $22.13 = getitem(value=main_shape, index=$22.12, fn=<built-in function getitem>) ['$22.12', '$22.13', 'main_shape']
    $22.14 = $22.4 != $22.13                 ['$22.13', '$22.14', '$22.4']
    bool50 = global(bool: <class 'bool'>)    ['bool50']
    $50pred = call bool50($22.14, func=bool50, args=(Var($22.14, arrayobj.py:2718),), kws=(), vararg=None) ['$22.14', '$50pred', 'bool50']
    branch $50pred, 52, 20                   ['$50pred']
label 52:
    $52.1 = global(ValueError: <class 'ValueError'>) ['$52.1']
    $const52.2 = const(str, nditer(): operands could not be broadcast together) ['$const52.2']
    $52.3 = call $52.1($const52.2, func=$52.1, args=[Var($const52.2, arrayobj.py:2719)], kws=(), vararg=None) ['$52.1', '$52.3', '$const52.2']
    raise $52.3                              ['$52.3']
label 62:
    jump 64                                  []
label 64:
    $const64.1 = const(NoneType, None)       ['$const64.1']
    $64.2 = cast(value=$const64.1)           ['$64.2', '$const64.1']
    return $64.2                             ['$64.2']

2022-08-04 11:53:07,095 DEBUG ==== SSA block analysis pass on 0
2022-08-04 11:53:07,095 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce793198>
2022-08-04 11:53:07,095 DEBUG on stmt: shape = arg(0, name=shape)
2022-08-04 11:53:07,095 DEBUG on stmt: main_shape = arg(1, name=main_shape)
2022-08-04 11:53:07,095 DEBUG on stmt: $0.1 = global(len: <built-in function len>)
2022-08-04 11:53:07,095 DEBUG on stmt: n = const(int, 1)
2022-08-04 11:53:07,095 DEBUG on stmt: jump 10
2022-08-04 11:53:07,095 DEBUG ==== SSA block analysis pass on 10
2022-08-04 11:53:07,095 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce793198>
2022-08-04 11:53:07,096 DEBUG on stmt: jump 12
2022-08-04 11:53:07,096 DEBUG ==== SSA block analysis pass on 12
2022-08-04 11:53:07,096 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce793198>
2022-08-04 11:53:07,096 DEBUG on stmt: $12.1 = global(range: <class 'range'>)
2022-08-04 11:53:07,096 DEBUG on stmt: $12.3 = call $12.1(n, func=$12.1, args=[Var(n, arrayobj.py:2716)], kws=(), vararg=None)
2022-08-04 11:53:07,096 DEBUG on stmt: $12.4 = getiter(value=$12.3)
2022-08-04 11:53:07,096 DEBUG on stmt: $phi20.1 = $12.4
2022-08-04 11:53:07,096 DEBUG on stmt: jump 20
2022-08-04 11:53:07,096 DEBUG ==== SSA block analysis pass on 20
2022-08-04 11:53:07,096 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce793198>
2022-08-04 11:53:07,096 DEBUG on stmt: $20.2 = iternext(value=$phi20.1)
2022-08-04 11:53:07,096 DEBUG on stmt: $20.3 = pair_first(value=$20.2)
2022-08-04 11:53:07,096 DEBUG on stmt: $20.4 = pair_second(value=$20.2)
2022-08-04 11:53:07,096 DEBUG on stmt: $phi22.1 = $20.3
2022-08-04 11:53:07,096 DEBUG on stmt: $phi62.1 = $20.3
2022-08-04 11:53:07,096 DEBUG on stmt: $phi62.2 = $phi20.1
2022-08-04 11:53:07,096 DEBUG on stmt: branch $20.4, 22, 62
2022-08-04 11:53:07,096 DEBUG ==== SSA block analysis pass on 22
2022-08-04 11:53:07,096 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce793198>
2022-08-04 11:53:07,097 DEBUG on stmt: i = $phi22.1
2022-08-04 11:53:07,097 DEBUG on stmt: $22.4 = getitem(value=shape, index=i, fn=<built-in function getitem>)
2022-08-04 11:53:07,097 DEBUG on stmt: $22.6 = global(len: <built-in function len>)
2022-08-04 11:53:07,097 DEBUG on stmt: $22.8 = const(int, 1)
2022-08-04 11:53:07,097 DEBUG on stmt: $22.10 = $22.8 - n
2022-08-04 11:53:07,097 DEBUG on stmt: $22.12 = $22.10 + i
2022-08-04 11:53:07,097 DEBUG on stmt: $22.13 = getitem(value=main_shape, index=$22.12, fn=<built-in function getitem>)
2022-08-04 11:53:07,097 DEBUG on stmt: $22.14 = $22.4 != $22.13
2022-08-04 11:53:07,097 DEBUG on stmt: bool50 = global(bool: <class 'bool'>)
2022-08-04 11:53:07,097 DEBUG on stmt: $50pred = call bool50($22.14, func=bool50, args=(Var($22.14, arrayobj.py:2718),), kws=(), vararg=None)
2022-08-04 11:53:07,097 DEBUG on stmt: branch $50pred, 52, 20
2022-08-04 11:53:07,097 DEBUG ==== SSA block analysis pass on 52
2022-08-04 11:53:07,097 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce793198>
2022-08-04 11:53:07,097 DEBUG on stmt: $52.1 = global(ValueError: <class 'ValueError'>)
2022-08-04 11:53:07,097 DEBUG on stmt: $const52.2 = const(str, nditer(): operands could not be broadcast together)
2022-08-04 11:53:07,098 DEBUG on stmt: $52.3 = call $52.1($const52.2, func=$52.1, args=[Var($const52.2, arrayobj.py:2719)], kws=(), vararg=None)
2022-08-04 11:53:07,098 DEBUG on stmt: <static> raise <class 'ValueError'>('nditer(): operands could not be broadcast together')
2022-08-04 11:53:07,098 DEBUG ==== SSA block analysis pass on 62
2022-08-04 11:53:07,098 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce793198>
2022-08-04 11:53:07,098 DEBUG on stmt: jump 64
2022-08-04 11:53:07,098 DEBUG ==== SSA block analysis pass on 64
2022-08-04 11:53:07,098 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce793198>
2022-08-04 11:53:07,098 DEBUG on stmt: $const64.1 = const(NoneType, None)
2022-08-04 11:53:07,098 DEBUG on stmt: $64.2 = cast(value=$const64.1)
2022-08-04 11:53:07,098 DEBUG on stmt: return $64.2
2022-08-04 11:53:07,098 DEBUG defs defaultdict(<class 'list'>,
            {'$0.1': [<numba.core.ir.Assign object at 0x7fa2ce4dc780>],
             '$12.1': [<numba.core.ir.Assign object at 0x7fa2ce8ba208>],
             '$12.3': [<numba.core.ir.Assign object at 0x7fa2ce8ba630>],
             '$12.4': [<numba.core.ir.Assign object at 0x7fa2ce8ba7b8>],
             '$20.2': [<numba.core.ir.Assign object at 0x7fa2ce8ba940>],
             '$20.3': [<numba.core.ir.Assign object at 0x7fa2ce8ba780>],
             '$20.4': [<numba.core.ir.Assign object at 0x7fa2ce8babe0>],
             '$22.10': [<numba.core.ir.Assign object at 0x7fa2ce4d2908>],
             '$22.12': [<numba.core.ir.Assign object at 0x7fa2ce4d2e80>],
             '$22.13': [<numba.core.ir.Assign object at 0x7fa2ce4d2dd8>],
             '$22.14': [<numba.core.ir.Assign object at 0x7fa2ce4d2b70>],
             '$22.4': [<numba.core.ir.Assign object at 0x7fa2ce8ba080>],
             '$22.6': [<numba.core.ir.Assign object at 0x7fa2ce8baa58>],
             '$22.8': [<numba.core.ir.Assign object at 0x7fa2ce4d2b38>],
             '$50pred': [<numba.core.ir.Assign object at 0x7fa2ce4d2940>],
             '$52.1': [<numba.core.ir.Assign object at 0x7fa2ce4d27b8>],
             '$52.3': [<numba.core.ir.Assign object at 0x7fa2ce4d2400>],
             '$64.2': [<numba.core.ir.Assign object at 0x7fa2ce4d22e8>],
             '$const52.2': [<numba.core.ir.Assign object at 0x7fa2ce4d24a8>],
             '$const64.1': [<numba.core.ir.Assign object at 0x7fa2ce4d2390>],
             '$phi20.1': [<numba.core.ir.Assign object at 0x7fa2ce8ba278>],
             '$phi22.1': [<numba.core.ir.Assign object at 0x7fa2ce8ba4a8>],
             '$phi62.1': [<numba.core.ir.Assign object at 0x7fa2ce8bac50>],
             '$phi62.2': [<numba.core.ir.Assign object at 0x7fa2ce8bacc0>],
             'bool50': [<numba.core.ir.Assign object at 0x7fa2ce4d2710>],
             'i': [<numba.core.ir.Assign object at 0x7fa2ce8bae10>],
             'main_shape': [<numba.core.ir.Assign object at 0x7fa2ce4dc588>],
             'n': [<numba.core.ir.Assign object at 0x7fa2ce8bab00>],
             'shape': [<numba.core.ir.Assign object at 0x7fa2ce4dc630>]})
2022-08-04 11:53:07,098 DEBUG SSA violators set()
2022-08-04 11:53:07,212 DEBUG label 0:
    _0_14_1 = arg(0, name=_0_14_1)           ['_0_14_1']
    _0_8_1 = arg(1, name=_0_8_1)             ['_0_8_1']
    $0.3 = _0_8_1 != _0_14_1                 ['$0.3', '_0_14_1', '_0_8_1']
    $0.4 = cast(value=$0.3)                  ['$0.3', '$0.4']
    return $0.4                              ['$0.4']

2022-08-04 11:53:07,213 DEBUG ==== SSA block analysis pass on 0
2022-08-04 11:53:07,213 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cdd9a668>
2022-08-04 11:53:07,213 DEBUG on stmt: _0_14_1 = arg(0, name=_0_14_1)
2022-08-04 11:53:07,213 DEBUG on stmt: _0_8_1 = arg(1, name=_0_8_1)
2022-08-04 11:53:07,213 DEBUG on stmt: $0.3 = _0_8_1 != _0_14_1
2022-08-04 11:53:07,214 DEBUG on stmt: $0.4 = cast(value=$0.3)
2022-08-04 11:53:07,214 DEBUG on stmt: return $0.4
2022-08-04 11:53:07,214 DEBUG defs defaultdict(<class 'list'>,
            {'$0.3': [<numba.core.ir.Assign object at 0x7fa2cdd9a2b0>],
             '$0.4': [<numba.core.ir.Assign object at 0x7fa2cdd9a390>],
             '_0_14_1': [<numba.core.ir.Assign object at 0x7fa2cddaef98>],
             '_0_8_1': [<numba.core.ir.Assign object at 0x7fa2cdd9a080>]})
2022-08-04 11:53:07,214 DEBUG SSA violators set()
2022-08-04 11:53:07,472 DEBUG label 0:
    q1 = arg(0, name=q1)                     ['q1']
    q2 = arg(1, name=q2)                     ['q2']
    bout = arg(2, name=bout)                 ['bout']
    $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$0.1']
    $0.2 = getattr(value=$0.1, attr=all)     ['$0.1', '$0.2']
    $const0.4 = const(NoneType, None)        ['$const0.4']
    $const0.5 = const(NoneType, None)        ['$const0.5']
    $0.6 = global(slice: <class 'slice'>)    ['$0.6']
    $0.7 = call $0.6($const0.4, $const0.5, func=$0.6, args=(Var($const0.4, algebra.py:394), Var($const0.5, algebra.py:394)), kws=(), vararg=None) ['$0.6', '$0.7', '$const0.4', '$const0.5']
    $0.8 = getitem(value=q1, index=$0.7, fn=<built-in function getitem>) ['$0.7', '$0.8', 'q1']
    $const0.10 = const(NoneType, None)       ['$const0.10']
    $const0.11 = const(NoneType, None)       ['$const0.11']
    $0.12 = global(slice: <class 'slice'>)   ['$0.12']
    $0.13 = call $0.12($const0.10, $const0.11, func=$0.12, args=(Var($const0.10, algebra.py:394), Var($const0.11, algebra.py:394)), kws=(), vararg=None) ['$0.12', '$0.13', '$const0.10', '$const0.11']
    $0.14 = getitem(value=q2, index=$0.13, fn=<built-in function getitem>) ['$0.13', '$0.14', 'q2']
    $0.15 = $0.8 == $0.14                    ['$0.14', '$0.15', '$0.8']
    $0.16 = call $0.2($0.15, func=$0.2, args=[Var($0.15, algebra.py:394)], kws=(), vararg=None) ['$0.15', '$0.16', '$0.2']
    $const0.18 = const(int, 0)               ['$const0.18']
    bout[$const0.18] = $0.16                 ['$0.16', '$const0.18', 'bout']
    $const0.19 = const(NoneType, None)       ['$const0.19']
    $0.20 = cast(value=$const0.19)           ['$0.20', '$const0.19']
    return $0.20                             ['$0.20']

2022-08-04 11:53:07,475 DEBUG ==== SSA block analysis pass on 0
2022-08-04 11:53:07,476 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cec11b00>
2022-08-04 11:53:07,476 DEBUG on stmt: q1 = arg(0, name=q1)
2022-08-04 11:53:07,476 DEBUG on stmt: q2 = arg(1, name=q2)
2022-08-04 11:53:07,476 DEBUG on stmt: bout = arg(2, name=bout)
2022-08-04 11:53:07,476 DEBUG on stmt: $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:07,476 DEBUG on stmt: $0.2 = getattr(value=$0.1, attr=all)
2022-08-04 11:53:07,476 DEBUG on stmt: $const0.4 = const(NoneType, None)
2022-08-04 11:53:07,476 DEBUG on stmt: $const0.5 = const(NoneType, None)
2022-08-04 11:53:07,476 DEBUG on stmt: $0.6 = global(slice: <class 'slice'>)
2022-08-04 11:53:07,476 DEBUG on stmt: $0.7 = call $0.6($const0.4, $const0.5, func=$0.6, args=(Var($const0.4, algebra.py:394), Var($const0.5, algebra.py:394)), kws=(), vararg=None)
2022-08-04 11:53:07,476 DEBUG on stmt: $0.8 = static_getitem(value=q1, index=slice(None, None, None), index_var=$0.7, fn=<built-in function getitem>)
2022-08-04 11:53:07,476 DEBUG on stmt: $const0.10 = const(NoneType, None)
2022-08-04 11:53:07,476 DEBUG on stmt: $const0.11 = const(NoneType, None)
2022-08-04 11:53:07,476 DEBUG on stmt: $0.12 = global(slice: <class 'slice'>)
2022-08-04 11:53:07,476 DEBUG on stmt: $0.13 = call $0.12($const0.10, $const0.11, func=$0.12, args=(Var($const0.10, algebra.py:394), Var($const0.11, algebra.py:394)), kws=(), vararg=None)
2022-08-04 11:53:07,476 DEBUG on stmt: $0.14 = static_getitem(value=q2, index=slice(None, None, None), index_var=$0.13, fn=<built-in function getitem>)
2022-08-04 11:53:07,476 DEBUG on stmt: $0.15 = $0.8 == $0.14
2022-08-04 11:53:07,476 DEBUG on stmt: $0.16 = call $0.2($0.15, func=$0.2, args=[Var($0.15, algebra.py:394)], kws=(), vararg=None)
2022-08-04 11:53:07,477 DEBUG on stmt: $const0.18 = const(int, 0)
2022-08-04 11:53:07,477 DEBUG on stmt: bout[0] = $0.16
2022-08-04 11:53:07,477 DEBUG on stmt: $const0.19 = const(NoneType, None)
2022-08-04 11:53:07,477 DEBUG on stmt: $0.20 = cast(value=$const0.19)
2022-08-04 11:53:07,477 DEBUG on stmt: return $0.20
2022-08-04 11:53:07,477 DEBUG defs defaultdict(<class 'list'>,
            {'$0.1': [<numba.core.ir.Assign object at 0x7fa2cec164a8>],
             '$0.12': [<numba.core.ir.Assign object at 0x7fa2cec16e48>],
             '$0.13': [<numba.core.ir.Assign object at 0x7fa2cec16f98>],
             '$0.14': [<numba.core.ir.Assign object at 0x7fa2cec2ab70>],
             '$0.15': [<numba.core.ir.Assign object at 0x7fa2cec2a048>],
             '$0.16': [<numba.core.ir.Assign object at 0x7fa2cec2a128>],
             '$0.2': [<numba.core.ir.Assign object at 0x7fa2cec165c0>],
             '$0.20': [<numba.core.ir.Assign object at 0x7fa2cec2a4e0>],
             '$0.6': [<numba.core.ir.Assign object at 0x7fa2cec16908>],
             '$0.7': [<numba.core.ir.Assign object at 0x7fa2cec16978>],
             '$0.8': [<numba.core.ir.Assign object at 0x7fa2cec2ac18>],
             '$const0.10': [<numba.core.ir.Assign object at 0x7fa2cec16cc0>],
             '$const0.11': [<numba.core.ir.Assign object at 0x7fa2cec16da0>],
             '$const0.18': [<numba.core.ir.Assign object at 0x7fa2cec2a2b0>],
             '$const0.19': [<numba.core.ir.Assign object at 0x7fa2cec2a400>],
             '$const0.4': [<numba.core.ir.Assign object at 0x7fa2cec166d8>],
             '$const0.5': [<numba.core.ir.Assign object at 0x7fa2cec167f0>],
             'bout': [<numba.core.ir.Assign object at 0x7fa2cec163c8>],
             'q1': [<numba.core.ir.Assign object at 0x7fa2cec160b8>],
             'q2': [<numba.core.ir.Assign object at 0x7fa2cec162e8>]})
2022-08-04 11:53:07,477 DEBUG SSA violators set()
2022-08-04 11:53:07,483 DEBUG label 0:
    a = arg(0, name=a)                       ['a']
    jump 2                                   []
label 2:
    jump 4                                   []
label 4:
    $4.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$4.1']
    $4.2 = getattr(value=$4.1, attr=nditer)  ['$4.1', '$4.2']
    $4.4 = call $4.2(a, func=$4.2, args=[Var(a, arraymath.py:781)], kws=(), vararg=None) ['$4.2', '$4.4', 'a']
    $4.5 = getiter(value=$4.4)               ['$4.4', '$4.5']
    $phi14.1 = $4.5                          ['$4.5', '$phi14.1']
    jump 14                                  []
label 14:
    $14.2 = iternext(value=$phi14.1)         ['$14.2', '$phi14.1']
    $14.3 = pair_first(value=$14.2)          ['$14.2', '$14.3']
    $14.4 = pair_second(value=$14.2)         ['$14.2', '$14.4']
    $phi16.1 = $14.3                         ['$14.3', '$phi16.1']
    $phi32.1 = $14.3                         ['$14.3', '$phi32.1']
    $phi32.2 = $phi14.1                      ['$phi14.1', '$phi32.2']
    branch $14.4, 16, 32                     ['$14.4']
label 16:
    v = $phi16.1                             ['$phi16.1', 'v']
    $16.3 = getattr(value=v, attr=item)      ['$16.3', 'v']
    $16.4 = call $16.3(func=$16.3, args=[], kws=(), vararg=None) ['$16.3', '$16.4']
    bool24 = global(bool: <class 'bool'>)    ['bool24']
    $24pred = call bool24($16.4, func=bool24, args=(Var($16.4, arraymath.py:782),), kws=(), vararg=None) ['$16.4', '$24pred', 'bool24']
    branch $24pred, 14, 26                   ['$24pred']
label 26:
    $const26.1 = const(bool, False)          ['$const26.1']
    $26.2 = cast(value=$const26.1)           ['$26.2', '$const26.1']
    return $26.2                             ['$26.2']
label 32:
    jump 34                                  []
label 34:
    $const34.1 = const(bool, True)           ['$const34.1']
    $34.2 = cast(value=$const34.1)           ['$34.2', '$const34.1']
    return $34.2                             ['$34.2']

2022-08-04 11:53:07,490 DEBUG ==== SSA block analysis pass on 0
2022-08-04 11:53:07,490 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cec2deb8>
2022-08-04 11:53:07,490 DEBUG on stmt: a = arg(0, name=a)
2022-08-04 11:53:07,490 DEBUG on stmt: jump 2
2022-08-04 11:53:07,490 DEBUG ==== SSA block analysis pass on 2
2022-08-04 11:53:07,490 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cec2deb8>
2022-08-04 11:53:07,490 DEBUG on stmt: jump 4
2022-08-04 11:53:07,490 DEBUG ==== SSA block analysis pass on 4
2022-08-04 11:53:07,490 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cec2deb8>
2022-08-04 11:53:07,490 DEBUG on stmt: $4.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:07,490 DEBUG on stmt: $4.2 = getattr(value=$4.1, attr=nditer)
2022-08-04 11:53:07,490 DEBUG on stmt: $4.4 = call $4.2(a, func=$4.2, args=[Var(a, arraymath.py:781)], kws=(), vararg=None)
2022-08-04 11:53:07,491 DEBUG on stmt: $4.5 = getiter(value=$4.4)
2022-08-04 11:53:07,491 DEBUG on stmt: $phi14.1 = $4.5
2022-08-04 11:53:07,491 DEBUG on stmt: jump 14
2022-08-04 11:53:07,491 DEBUG ==== SSA block analysis pass on 14
2022-08-04 11:53:07,491 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cec2deb8>
2022-08-04 11:53:07,491 DEBUG on stmt: $14.2 = iternext(value=$phi14.1)
2022-08-04 11:53:07,491 DEBUG on stmt: $14.3 = pair_first(value=$14.2)
2022-08-04 11:53:07,491 DEBUG on stmt: $14.4 = pair_second(value=$14.2)
2022-08-04 11:53:07,491 DEBUG on stmt: $phi16.1 = $14.3
2022-08-04 11:53:07,491 DEBUG on stmt: $phi32.1 = $14.3
2022-08-04 11:53:07,491 DEBUG on stmt: $phi32.2 = $phi14.1
2022-08-04 11:53:07,491 DEBUG on stmt: branch $14.4, 16, 32
2022-08-04 11:53:07,491 DEBUG ==== SSA block analysis pass on 16
2022-08-04 11:53:07,491 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cec2deb8>
2022-08-04 11:53:07,491 DEBUG on stmt: v = $phi16.1
2022-08-04 11:53:07,491 DEBUG on stmt: $16.3 = getattr(value=v, attr=item)
2022-08-04 11:53:07,491 DEBUG on stmt: $16.4 = call $16.3(func=$16.3, args=[], kws=(), vararg=None)
2022-08-04 11:53:07,492 DEBUG on stmt: bool24 = global(bool: <class 'bool'>)
2022-08-04 11:53:07,492 DEBUG on stmt: $24pred = call bool24($16.4, func=bool24, args=(Var($16.4, arraymath.py:782),), kws=(), vararg=None)
2022-08-04 11:53:07,492 DEBUG on stmt: branch $24pred, 14, 26
2022-08-04 11:53:07,492 DEBUG ==== SSA block analysis pass on 26
2022-08-04 11:53:07,492 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cec2deb8>
2022-08-04 11:53:07,492 DEBUG on stmt: $const26.1 = const(bool, False)
2022-08-04 11:53:07,492 DEBUG on stmt: $26.2 = cast(value=$const26.1)
2022-08-04 11:53:07,492 DEBUG on stmt: return $26.2
2022-08-04 11:53:07,492 DEBUG ==== SSA block analysis pass on 32
2022-08-04 11:53:07,492 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cec2deb8>
2022-08-04 11:53:07,492 DEBUG on stmt: jump 34
2022-08-04 11:53:07,492 DEBUG ==== SSA block analysis pass on 34
2022-08-04 11:53:07,492 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2cec2deb8>
2022-08-04 11:53:07,492 DEBUG on stmt: $const34.1 = const(bool, True)
2022-08-04 11:53:07,492 DEBUG on stmt: $34.2 = cast(value=$const34.1)
2022-08-04 11:53:07,492 DEBUG on stmt: return $34.2
2022-08-04 11:53:07,493 DEBUG defs defaultdict(<class 'list'>,
            {'$14.2': [<numba.core.ir.Assign object at 0x7fa2ce5b1128>],
             '$14.3': [<numba.core.ir.Assign object at 0x7fa2ce5b11d0>],
             '$14.4': [<numba.core.ir.Assign object at 0x7fa2ce5b1278>],
             '$16.3': [<numba.core.ir.Assign object at 0x7fa2ce5b16a0>],
             '$16.4': [<numba.core.ir.Assign object at 0x7fa2ce5b1780>],
             '$24pred': [<numba.core.ir.Assign object at 0x7fa2ce5b1978>],
             '$26.2': [<numba.core.ir.Assign object at 0x7fa2ce5b1ba8>],
             '$34.2': [<numba.core.ir.Assign object at 0x7fa2ce5b1e80>],
             '$4.1': [<numba.core.ir.Assign object at 0x7fa2cec2fbe0>],
             '$4.2': [<numba.core.ir.Assign object at 0x7fa2cec2fcc0>],
             '$4.4': [<numba.core.ir.Assign object at 0x7fa2cec2fe48>],
             '$4.5': [<numba.core.ir.Assign object at 0x7fa2cec2ff28>],
             '$const26.1': [<numba.core.ir.Assign object at 0x7fa2ce5b1ac8>],
             '$const34.1': [<numba.core.ir.Assign object at 0x7fa2ce5b1da0>],
             '$phi14.1': [<numba.core.ir.Assign object at 0x7fa2cec2fa20>],
             '$phi16.1': [<numba.core.ir.Assign object at 0x7fa2ce5b12e8>],
             '$phi32.1': [<numba.core.ir.Assign object at 0x7fa2ce5b1358>],
             '$phi32.2': [<numba.core.ir.Assign object at 0x7fa2ce5b13c8>],
             'a': [<numba.core.ir.Assign object at 0x7fa2cec2f978>],
             'bool24': [<numba.core.ir.Assign object at 0x7fa2ce5b1898>],
             'v': [<numba.core.ir.Assign object at 0x7fa2ce5b1518>]})
2022-08-04 11:53:07,493 DEBUG SSA violators set()
2022-08-04 11:53:07,577 DEBUG label 0:
    _0_14_1 = arg(0, name=_0_14_1)           ['_0_14_1']
    _0_8_1 = arg(1, name=_0_8_1)             ['_0_8_1']
    $0.3 = _0_8_1 == _0_14_1                 ['$0.3', '_0_14_1', '_0_8_1']
    $0.4 = cast(value=$0.3)                  ['$0.3', '$0.4']
    return $0.4                              ['$0.4']

2022-08-04 11:53:07,578 DEBUG ==== SSA block analysis pass on 0
2022-08-04 11:53:07,578 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce1e5e48>
2022-08-04 11:53:07,578 DEBUG on stmt: _0_14_1 = arg(0, name=_0_14_1)
2022-08-04 11:53:07,578 DEBUG on stmt: _0_8_1 = arg(1, name=_0_8_1)
2022-08-04 11:53:07,578 DEBUG on stmt: $0.3 = _0_8_1 == _0_14_1
2022-08-04 11:53:07,579 DEBUG on stmt: $0.4 = cast(value=$0.3)
2022-08-04 11:53:07,579 DEBUG on stmt: return $0.4
2022-08-04 11:53:07,579 DEBUG defs defaultdict(<class 'list'>,
            {'$0.3': [<numba.core.ir.Assign object at 0x7fa2ce5df198>],
             '$0.4': [<numba.core.ir.Assign object at 0x7fa2ce5df048>],
             '_0_14_1': [<numba.core.ir.Assign object at 0x7fa2ce5df358>],
             '_0_8_1': [<numba.core.ir.Assign object at 0x7fa2ce5df748>]})
2022-08-04 11:53:07,579 DEBUG SSA violators set()
2022-08-04 11:53:07,818 DEBUG label 0:
    q1 = arg(0, name=q1)                     ['q1']
    q2 = arg(1, name=q2)                     ['q2']
    bout = arg(2, name=bout)                 ['bout']
    $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$0.1']
    $0.2 = getattr(value=$0.1, attr=any)     ['$0.1', '$0.2']
    $const0.4 = const(NoneType, None)        ['$const0.4']
    $const0.5 = const(NoneType, None)        ['$const0.5']
    $0.6 = global(slice: <class 'slice'>)    ['$0.6']
    $0.7 = call $0.6($const0.4, $const0.5, func=$0.6, args=(Var($const0.4, algebra.py:399), Var($const0.5, algebra.py:399)), kws=(), vararg=None) ['$0.6', '$0.7', '$const0.4', '$const0.5']
    $0.8 = getitem(value=q1, index=$0.7, fn=<built-in function getitem>) ['$0.7', '$0.8', 'q1']
    $0.9 = call $0.2($0.8, func=$0.2, args=[Var($0.8, algebra.py:399)], kws=(), vararg=None) ['$0.2', '$0.8', '$0.9']
    bool18 = global(bool: <class 'bool'>)    ['bool18']
    $18pred = call bool18($0.9, func=bool18, args=(Var($0.9, algebra.py:399),), kws=(), vararg=None) ['$0.9', '$18pred', 'bool18']
    $phi36.3 = $0.9                          ['$0.9', '$phi36.3']
    branch $18pred, 20, 36                   ['$18pred']
label 20:
    $20.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$20.1']
    $20.2 = getattr(value=$20.1, attr=any)   ['$20.1', '$20.2']
    $const20.4 = const(NoneType, None)       ['$const20.4']
    $const20.5 = const(NoneType, None)       ['$const20.5']
    $20.6 = global(slice: <class 'slice'>)   ['$20.6']
    $20.7 = call $20.6($const20.4, $const20.5, func=$20.6, args=(Var($const20.4, algebra.py:399), Var($const20.5, algebra.py:399)), kws=(), vararg=None) ['$20.6', '$20.7', '$const20.4', '$const20.5']
    $20.8 = getitem(value=q2, index=$20.7, fn=<built-in function getitem>) ['$20.7', '$20.8', 'q2']
    $20.9 = call $20.2($20.8, func=$20.2, args=[Var($20.8, algebra.py:399)], kws=(), vararg=None) ['$20.2', '$20.8', '$20.9']
    $phi36.3 = $20.9                         ['$20.9', '$phi36.3']
    jump 36                                  []
label 36:
    $const36.2 = const(int, 0)               ['$const36.2']
    bout[$const36.2] = $phi36.3              ['$const36.2', '$phi36.3', 'bout']
    $const36.4 = const(NoneType, None)       ['$const36.4']
    $36.5 = cast(value=$const36.4)           ['$36.5', '$const36.4']
    return $36.5                             ['$36.5']

2022-08-04 11:53:07,822 DEBUG ==== SSA block analysis pass on 0
2022-08-04 11:53:07,823 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce21de10>
2022-08-04 11:53:07,823 DEBUG on stmt: q1 = arg(0, name=q1)
2022-08-04 11:53:07,823 DEBUG on stmt: q2 = arg(1, name=q2)
2022-08-04 11:53:07,823 DEBUG on stmt: bout = arg(2, name=bout)
2022-08-04 11:53:07,823 DEBUG on stmt: $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:07,823 DEBUG on stmt: $0.2 = getattr(value=$0.1, attr=any)
2022-08-04 11:53:07,823 DEBUG on stmt: $const0.4 = const(NoneType, None)
2022-08-04 11:53:07,823 DEBUG on stmt: $const0.5 = const(NoneType, None)
2022-08-04 11:53:07,823 DEBUG on stmt: $0.6 = global(slice: <class 'slice'>)
2022-08-04 11:53:07,823 DEBUG on stmt: $0.7 = call $0.6($const0.4, $const0.5, func=$0.6, args=(Var($const0.4, algebra.py:399), Var($const0.5, algebra.py:399)), kws=(), vararg=None)
2022-08-04 11:53:07,823 DEBUG on stmt: $0.8 = static_getitem(value=q1, index=slice(None, None, None), index_var=$0.7, fn=<built-in function getitem>)
2022-08-04 11:53:07,823 DEBUG on stmt: $0.9 = call $0.2($0.8, func=$0.2, args=[Var($0.8, algebra.py:399)], kws=(), vararg=None)
2022-08-04 11:53:07,823 DEBUG on stmt: bool18 = global(bool: <class 'bool'>)
2022-08-04 11:53:07,823 DEBUG on stmt: $18pred = call bool18($0.9, func=bool18, args=(Var($0.9, algebra.py:399),), kws=(), vararg=None)
2022-08-04 11:53:07,823 DEBUG on stmt: $phi36.3 = $0.9
2022-08-04 11:53:07,823 DEBUG on stmt: branch $18pred, 20, 36
2022-08-04 11:53:07,823 DEBUG ==== SSA block analysis pass on 20
2022-08-04 11:53:07,823 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce21de10>
2022-08-04 11:53:07,823 DEBUG on stmt: $20.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:07,823 DEBUG on stmt: $20.2 = getattr(value=$20.1, attr=any)
2022-08-04 11:53:07,823 DEBUG on stmt: $const20.4 = const(NoneType, None)
2022-08-04 11:53:07,823 DEBUG on stmt: $const20.5 = const(NoneType, None)
2022-08-04 11:53:07,823 DEBUG on stmt: $20.6 = global(slice: <class 'slice'>)
2022-08-04 11:53:07,824 DEBUG on stmt: $20.7 = call $20.6($const20.4, $const20.5, func=$20.6, args=(Var($const20.4, algebra.py:399), Var($const20.5, algebra.py:399)), kws=(), vararg=None)
2022-08-04 11:53:07,824 DEBUG on stmt: $20.8 = static_getitem(value=q2, index=slice(None, None, None), index_var=$20.7, fn=<built-in function getitem>)
2022-08-04 11:53:07,824 DEBUG on stmt: $20.9 = call $20.2($20.8, func=$20.2, args=[Var($20.8, algebra.py:399)], kws=(), vararg=None)
2022-08-04 11:53:07,824 DEBUG on stmt: $phi36.3 = $20.9
2022-08-04 11:53:07,824 DEBUG on stmt: jump 36
2022-08-04 11:53:07,824 DEBUG ==== SSA block analysis pass on 36
2022-08-04 11:53:07,824 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce21de10>
2022-08-04 11:53:07,824 DEBUG on stmt: $const36.2 = const(int, 0)
2022-08-04 11:53:07,824 DEBUG on stmt: bout[0] = $phi36.3
2022-08-04 11:53:07,824 DEBUG on stmt: $const36.4 = const(NoneType, None)
2022-08-04 11:53:07,824 DEBUG on stmt: $36.5 = cast(value=$const36.4)
2022-08-04 11:53:07,824 DEBUG on stmt: return $36.5
2022-08-04 11:53:07,824 DEBUG defs defaultdict(<class 'list'>,
            {'$0.1': [<numba.core.ir.Assign object at 0x7fa2ce1e7978>],
             '$0.2': [<numba.core.ir.Assign object at 0x7fa2ce1e7a58>],
             '$0.6': [<numba.core.ir.Assign object at 0x7fa2ce1e7da0>],
             '$0.7': [<numba.core.ir.Assign object at 0x7fa2ce1e7e48>],
             '$0.8': [<numba.core.ir.Assign object at 0x7fa2ce2177b8>],
             '$0.9': [<numba.core.ir.Assign object at 0x7fa2ce217780>],
             '$18pred': [<numba.core.ir.Assign object at 0x7fa2ce217710>],
             '$20.1': [<numba.core.ir.Assign object at 0x7fa2ce2179e8>],
             '$20.2': [<numba.core.ir.Assign object at 0x7fa2ce217b38>],
             '$20.6': [<numba.core.ir.Assign object at 0x7fa2ce217080>],
             '$20.7': [<numba.core.ir.Assign object at 0x7fa2ce2171d0>],
             '$20.8': [<numba.core.ir.Assign object at 0x7fa2ce1e7208>],
             '$20.9': [<numba.core.ir.Assign object at 0x7fa2ce217198>],
             '$36.5': [<numba.core.ir.Assign object at 0x7fa2ce217898>],
             '$const0.4': [<numba.core.ir.Assign object at 0x7fa2ce1e7be0>],
             '$const0.5': [<numba.core.ir.Assign object at 0x7fa2ce1e7cc0>],
             '$const20.4': [<numba.core.ir.Assign object at 0x7fa2ce217b70>],
             '$const20.5': [<numba.core.ir.Assign object at 0x7fa2ce217940>],
             '$const36.2': [<numba.core.ir.Assign object at 0x7fa2ce2174e0>],
             '$const36.4': [<numba.core.ir.Assign object at 0x7fa2ce217978>],
             '$phi36.3': [<numba.core.ir.Assign object at 0x7fa2ce1e76a0>,
                          <numba.core.ir.Assign object at 0x7fa2ce1e7668>],
             'bool18': [<numba.core.ir.Assign object at 0x7fa2ce2177f0>],
             'bout': [<numba.core.ir.Assign object at 0x7fa2ce1e7898>],
             'q1': [<numba.core.ir.Assign object at 0x7fa2ce1e7748>],
             'q2': [<numba.core.ir.Assign object at 0x7fa2ce1e77f0>]})
2022-08-04 11:53:07,824 DEBUG SSA violators {'$phi36.3'}
2022-08-04 11:53:07,825 DEBUG Fix SSA violator on var $phi36.3
2022-08-04 11:53:07,825 DEBUG ==== SSA block rewrite pass on 0
2022-08-04 11:53:07,825 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce217400>
2022-08-04 11:53:07,825 DEBUG on stmt: q1 = arg(0, name=q1)
2022-08-04 11:53:07,825 DEBUG on stmt: q2 = arg(1, name=q2)
2022-08-04 11:53:07,825 DEBUG on stmt: bout = arg(2, name=bout)
2022-08-04 11:53:07,825 DEBUG on stmt: $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:07,825 DEBUG on stmt: $0.2 = getattr(value=$0.1, attr=any)
2022-08-04 11:53:07,825 DEBUG on stmt: $const0.4 = const(NoneType, None)
2022-08-04 11:53:07,825 DEBUG on stmt: $const0.5 = const(NoneType, None)
2022-08-04 11:53:07,825 DEBUG on stmt: $0.6 = global(slice: <class 'slice'>)
2022-08-04 11:53:07,825 DEBUG on stmt: $0.7 = call $0.6($const0.4, $const0.5, func=$0.6, args=(Var($const0.4, algebra.py:399), Var($const0.5, algebra.py:399)), kws=(), vararg=None)
2022-08-04 11:53:07,825 DEBUG on stmt: $0.8 = static_getitem(value=q1, index=slice(None, None, None), index_var=$0.7, fn=<built-in function getitem>)
2022-08-04 11:53:07,825 DEBUG on stmt: $0.9 = call $0.2($0.8, func=$0.2, args=[Var($0.8, algebra.py:399)], kws=(), vararg=None)
2022-08-04 11:53:07,825 DEBUG on stmt: bool18 = global(bool: <class 'bool'>)
2022-08-04 11:53:07,825 DEBUG on stmt: $18pred = call bool18($0.9, func=bool18, args=(Var($0.9, algebra.py:399),), kws=(), vararg=None)
2022-08-04 11:53:07,825 DEBUG on stmt: $phi36.3 = $0.9
2022-08-04 11:53:07,825 DEBUG first assign: $phi36.3
2022-08-04 11:53:07,825 DEBUG replaced with: $phi36.3 = $0.9
2022-08-04 11:53:07,825 DEBUG on stmt: branch $18pred, 20, 36
2022-08-04 11:53:07,825 DEBUG ==== SSA block rewrite pass on 20
2022-08-04 11:53:07,825 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce217400>
2022-08-04 11:53:07,825 DEBUG on stmt: $20.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:07,825 DEBUG on stmt: $20.2 = getattr(value=$20.1, attr=any)
2022-08-04 11:53:07,825 DEBUG on stmt: $const20.4 = const(NoneType, None)
2022-08-04 11:53:07,825 DEBUG on stmt: $const20.5 = const(NoneType, None)
2022-08-04 11:53:07,826 DEBUG on stmt: $20.6 = global(slice: <class 'slice'>)
2022-08-04 11:53:07,826 DEBUG on stmt: $20.7 = call $20.6($const20.4, $const20.5, func=$20.6, args=(Var($const20.4, algebra.py:399), Var($const20.5, algebra.py:399)), kws=(), vararg=None)
2022-08-04 11:53:07,826 DEBUG on stmt: $20.8 = static_getitem(value=q2, index=slice(None, None, None), index_var=$20.7, fn=<built-in function getitem>)
2022-08-04 11:53:07,826 DEBUG on stmt: $20.9 = call $20.2($20.8, func=$20.2, args=[Var($20.8, algebra.py:399)], kws=(), vararg=None)
2022-08-04 11:53:07,826 DEBUG on stmt: $phi36.3 = $20.9
2022-08-04 11:53:07,826 DEBUG replaced with: $phi36.3.1 = $20.9
2022-08-04 11:53:07,826 DEBUG on stmt: jump 36
2022-08-04 11:53:07,826 DEBUG ==== SSA block rewrite pass on 36
2022-08-04 11:53:07,826 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce217400>
2022-08-04 11:53:07,826 DEBUG on stmt: $const36.2 = const(int, 0)
2022-08-04 11:53:07,826 DEBUG on stmt: bout[0] = $phi36.3
2022-08-04 11:53:07,826 DEBUG on stmt: $const36.4 = const(NoneType, None)
2022-08-04 11:53:07,826 DEBUG on stmt: $36.5 = cast(value=$const36.4)
2022-08-04 11:53:07,826 DEBUG on stmt: return $36.5
2022-08-04 11:53:07,826 DEBUG Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7fa2ce21df98>],
             20: [<numba.core.ir.Assign object at 0x7fa2ce203278>]})
2022-08-04 11:53:07,826 DEBUG ==== SSA block rewrite pass on 0
2022-08-04 11:53:07,826 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce203358>
2022-08-04 11:53:07,826 DEBUG on stmt: q1 = arg(0, name=q1)
2022-08-04 11:53:07,826 DEBUG on stmt: q2 = arg(1, name=q2)
2022-08-04 11:53:07,826 DEBUG on stmt: bout = arg(2, name=bout)
2022-08-04 11:53:07,826 DEBUG on stmt: $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:07,826 DEBUG on stmt: $0.2 = getattr(value=$0.1, attr=any)
2022-08-04 11:53:07,826 DEBUG on stmt: $const0.4 = const(NoneType, None)
2022-08-04 11:53:07,827 DEBUG on stmt: $const0.5 = const(NoneType, None)
2022-08-04 11:53:07,827 DEBUG on stmt: $0.6 = global(slice: <class 'slice'>)
2022-08-04 11:53:07,827 DEBUG on stmt: $0.7 = call $0.6($const0.4, $const0.5, func=$0.6, args=(Var($const0.4, algebra.py:399), Var($const0.5, algebra.py:399)), kws=(), vararg=None)
2022-08-04 11:53:07,827 DEBUG on stmt: $0.8 = static_getitem(value=q1, index=slice(None, None, None), index_var=$0.7, fn=<built-in function getitem>)
2022-08-04 11:53:07,827 DEBUG on stmt: $0.9 = call $0.2($0.8, func=$0.2, args=[Var($0.8, algebra.py:399)], kws=(), vararg=None)
2022-08-04 11:53:07,827 DEBUG on stmt: bool18 = global(bool: <class 'bool'>)
2022-08-04 11:53:07,827 DEBUG on stmt: $18pred = call bool18($0.9, func=bool18, args=(Var($0.9, algebra.py:399),), kws=(), vararg=None)
2022-08-04 11:53:07,827 DEBUG on stmt: $phi36.3 = $0.9
2022-08-04 11:53:07,827 DEBUG on stmt: branch $18pred, 20, 36
2022-08-04 11:53:07,827 DEBUG ==== SSA block rewrite pass on 20
2022-08-04 11:53:07,827 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce203358>
2022-08-04 11:53:07,827 DEBUG on stmt: $20.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:07,827 DEBUG on stmt: $20.2 = getattr(value=$20.1, attr=any)
2022-08-04 11:53:07,827 DEBUG on stmt: $const20.4 = const(NoneType, None)
2022-08-04 11:53:07,827 DEBUG on stmt: $const20.5 = const(NoneType, None)
2022-08-04 11:53:07,827 DEBUG on stmt: $20.6 = global(slice: <class 'slice'>)
2022-08-04 11:53:07,827 DEBUG on stmt: $20.7 = call $20.6($const20.4, $const20.5, func=$20.6, args=(Var($const20.4, algebra.py:399), Var($const20.5, algebra.py:399)), kws=(), vararg=None)
2022-08-04 11:53:07,827 DEBUG on stmt: $20.8 = static_getitem(value=q2, index=slice(None, None, None), index_var=$20.7, fn=<built-in function getitem>)
2022-08-04 11:53:07,827 DEBUG on stmt: $20.9 = call $20.2($20.8, func=$20.2, args=[Var($20.8, algebra.py:399)], kws=(), vararg=None)
2022-08-04 11:53:07,827 DEBUG on stmt: $phi36.3.1 = $20.9
2022-08-04 11:53:07,827 DEBUG on stmt: jump 36
2022-08-04 11:53:07,827 DEBUG ==== SSA block rewrite pass on 36
2022-08-04 11:53:07,827 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce203358>
2022-08-04 11:53:07,827 DEBUG on stmt: $const36.2 = const(int, 0)
2022-08-04 11:53:07,828 DEBUG on stmt: bout[0] = $phi36.3
2022-08-04 11:53:07,828 DEBUG find_def var='$phi36.3' stmt=bout[0] = $phi36.3
2022-08-04 11:53:07,828 DEBUG find_def_from_top label 36
2022-08-04 11:53:07,828 DEBUG insert phi node $phi36.3.2 = phi(incoming_values=[], incoming_blocks=[]) at 36
2022-08-04 11:53:07,828 DEBUG find_def_from_bottom label 0
2022-08-04 11:53:07,828 DEBUG incoming_def $phi36.3 = $0.9
2022-08-04 11:53:07,828 DEBUG find_def_from_bottom label 20
2022-08-04 11:53:07,828 DEBUG incoming_def $phi36.3.1 = $20.9
2022-08-04 11:53:07,828 DEBUG replaced with: bout[0] = $phi36.3.2
2022-08-04 11:53:07,828 DEBUG on stmt: $const36.4 = const(NoneType, None)
2022-08-04 11:53:07,828 DEBUG on stmt: $36.5 = cast(value=$const36.4)
2022-08-04 11:53:07,828 DEBUG on stmt: return $36.5
2022-08-04 11:53:07,833 DEBUG label 0:
    a = arg(0, name=a)                       ['a']
    jump 2                                   []
label 2:
    jump 4                                   []
label 4:
    $4.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$4.1']
    $4.2 = getattr(value=$4.1, attr=nditer)  ['$4.1', '$4.2']
    $4.4 = call $4.2(a, func=$4.2, args=[Var(a, arraymath.py:793)], kws=(), vararg=None) ['$4.2', '$4.4', 'a']
    $4.5 = getiter(value=$4.4)               ['$4.4', '$4.5']
    $phi14.1 = $4.5                          ['$4.5', '$phi14.1']
    jump 14                                  []
label 14:
    $14.2 = iternext(value=$phi14.1)         ['$14.2', '$phi14.1']
    $14.3 = pair_first(value=$14.2)          ['$14.2', '$14.3']
    $14.4 = pair_second(value=$14.2)         ['$14.2', '$14.4']
    $phi16.1 = $14.3                         ['$14.3', '$phi16.1']
    $phi32.1 = $14.3                         ['$14.3', '$phi32.1']
    $phi32.2 = $phi14.1                      ['$phi14.1', '$phi32.2']
    branch $14.4, 16, 32                     ['$14.4']
label 16:
    v = $phi16.1                             ['$phi16.1', 'v']
    $16.3 = getattr(value=v, attr=item)      ['$16.3', 'v']
    $16.4 = call $16.3(func=$16.3, args=[], kws=(), vararg=None) ['$16.3', '$16.4']
    bool24 = global(bool: <class 'bool'>)    ['bool24']
    $24pred = call bool24($16.4, func=bool24, args=(Var($16.4, arraymath.py:794),), kws=(), vararg=None) ['$16.4', '$24pred', 'bool24']
    branch $24pred, 26, 14                   ['$24pred']
label 26:
    $const26.1 = const(bool, True)           ['$const26.1']
    $26.2 = cast(value=$const26.1)           ['$26.2', '$const26.1']
    return $26.2                             ['$26.2']
label 32:
    jump 34                                  []
label 34:
    $const34.1 = const(bool, False)          ['$const34.1']
    $34.2 = cast(value=$const34.1)           ['$34.2', '$const34.1']
    return $34.2                             ['$34.2']

2022-08-04 11:53:07,838 DEBUG ==== SSA block analysis pass on 0
2022-08-04 11:53:07,838 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce562940>
2022-08-04 11:53:07,838 DEBUG on stmt: a = arg(0, name=a)
2022-08-04 11:53:07,838 DEBUG on stmt: jump 2
2022-08-04 11:53:07,838 DEBUG ==== SSA block analysis pass on 2
2022-08-04 11:53:07,838 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce562940>
2022-08-04 11:53:07,838 DEBUG on stmt: jump 4
2022-08-04 11:53:07,838 DEBUG ==== SSA block analysis pass on 4
2022-08-04 11:53:07,838 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce562940>
2022-08-04 11:53:07,838 DEBUG on stmt: $4.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:07,838 DEBUG on stmt: $4.2 = getattr(value=$4.1, attr=nditer)
2022-08-04 11:53:07,838 DEBUG on stmt: $4.4 = call $4.2(a, func=$4.2, args=[Var(a, arraymath.py:793)], kws=(), vararg=None)
2022-08-04 11:53:07,838 DEBUG on stmt: $4.5 = getiter(value=$4.4)
2022-08-04 11:53:07,838 DEBUG on stmt: $phi14.1 = $4.5
2022-08-04 11:53:07,838 DEBUG on stmt: jump 14
2022-08-04 11:53:07,839 DEBUG ==== SSA block analysis pass on 14
2022-08-04 11:53:07,839 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce562940>
2022-08-04 11:53:07,839 DEBUG on stmt: $14.2 = iternext(value=$phi14.1)
2022-08-04 11:53:07,839 DEBUG on stmt: $14.3 = pair_first(value=$14.2)
2022-08-04 11:53:07,839 DEBUG on stmt: $14.4 = pair_second(value=$14.2)
2022-08-04 11:53:07,839 DEBUG on stmt: $phi16.1 = $14.3
2022-08-04 11:53:07,839 DEBUG on stmt: $phi32.1 = $14.3
2022-08-04 11:53:07,839 DEBUG on stmt: $phi32.2 = $phi14.1
2022-08-04 11:53:07,839 DEBUG on stmt: branch $14.4, 16, 32
2022-08-04 11:53:07,839 DEBUG ==== SSA block analysis pass on 16
2022-08-04 11:53:07,839 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce562940>
2022-08-04 11:53:07,839 DEBUG on stmt: v = $phi16.1
2022-08-04 11:53:07,839 DEBUG on stmt: $16.3 = getattr(value=v, attr=item)
2022-08-04 11:53:07,839 DEBUG on stmt: $16.4 = call $16.3(func=$16.3, args=[], kws=(), vararg=None)
2022-08-04 11:53:07,839 DEBUG on stmt: bool24 = global(bool: <class 'bool'>)
2022-08-04 11:53:07,839 DEBUG on stmt: $24pred = call bool24($16.4, func=bool24, args=(Var($16.4, arraymath.py:794),), kws=(), vararg=None)
2022-08-04 11:53:07,839 DEBUG on stmt: branch $24pred, 26, 14
2022-08-04 11:53:07,839 DEBUG ==== SSA block analysis pass on 26
2022-08-04 11:53:07,839 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce562940>
2022-08-04 11:53:07,839 DEBUG on stmt: $const26.1 = const(bool, True)
2022-08-04 11:53:07,839 DEBUG on stmt: $26.2 = cast(value=$const26.1)
2022-08-04 11:53:07,839 DEBUG on stmt: return $26.2
2022-08-04 11:53:07,839 DEBUG ==== SSA block analysis pass on 32
2022-08-04 11:53:07,839 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce562940>
2022-08-04 11:53:07,839 DEBUG on stmt: jump 34
2022-08-04 11:53:07,839 DEBUG ==== SSA block analysis pass on 34
2022-08-04 11:53:07,839 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce562940>
2022-08-04 11:53:07,839 DEBUG on stmt: $const34.1 = const(bool, False)
2022-08-04 11:53:07,840 DEBUG on stmt: $34.2 = cast(value=$const34.1)
2022-08-04 11:53:07,840 DEBUG on stmt: return $34.2
2022-08-04 11:53:07,840 DEBUG defs defaultdict(<class 'list'>,
            {'$14.2': [<numba.core.ir.Assign object at 0x7fa2ce5726d8>],
             '$14.3': [<numba.core.ir.Assign object at 0x7fa2ce572780>],
             '$14.4': [<numba.core.ir.Assign object at 0x7fa2ce572828>],
             '$16.3': [<numba.core.ir.Assign object at 0x7fa2ce572c50>],
             '$16.4': [<numba.core.ir.Assign object at 0x7fa2ce572d30>],
             '$24pred': [<numba.core.ir.Assign object at 0x7fa2ce572f28>],
             '$26.2': [<numba.core.ir.Assign object at 0x7fa2ce553198>],
             '$34.2': [<numba.core.ir.Assign object at 0x7fa2ce553470>],
             '$4.1': [<numba.core.ir.Assign object at 0x7fa2ce5721d0>],
             '$4.2': [<numba.core.ir.Assign object at 0x7fa2ce5722b0>],
             '$4.4': [<numba.core.ir.Assign object at 0x7fa2ce572438>],
             '$4.5': [<numba.core.ir.Assign object at 0x7fa2ce572518>],
             '$const26.1': [<numba.core.ir.Assign object at 0x7fa2ce5530b8>],
             '$const34.1': [<numba.core.ir.Assign object at 0x7fa2ce553390>],
             '$phi14.1': [<numba.core.ir.Assign object at 0x7fa2ce572358>],
             '$phi16.1': [<numba.core.ir.Assign object at 0x7fa2ce572898>],
             '$phi32.1': [<numba.core.ir.Assign object at 0x7fa2ce572908>],
             '$phi32.2': [<numba.core.ir.Assign object at 0x7fa2ce572978>],
             'a': [<numba.core.ir.Assign object at 0x7fa2ce562f28>],
             'bool24': [<numba.core.ir.Assign object at 0x7fa2ce572e48>],
             'v': [<numba.core.ir.Assign object at 0x7fa2ce572ac8>]})
2022-08-04 11:53:07,840 DEBUG SSA violators set()
2022-08-04 11:53:08,039 DEBUG label 0:
    q1 = arg(0, name=q1)                     ['q1']
    q2 = arg(1, name=q2)                     ['q2']
    bout = arg(2, name=bout)                 ['bout']
    $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$0.1']
    $0.2 = getattr(value=$0.1, attr=any)     ['$0.1', '$0.2']
    $const0.4 = const(NoneType, None)        ['$const0.4']
    $const0.5 = const(NoneType, None)        ['$const0.5']
    $0.6 = global(slice: <class 'slice'>)    ['$0.6']
    $0.7 = call $0.6($const0.4, $const0.5, func=$0.6, args=(Var($const0.4, algebra.py:404), Var($const0.5, algebra.py:404)), kws=(), vararg=None) ['$0.6', '$0.7', '$const0.4', '$const0.5']
    $0.8 = getitem(value=q1, index=$0.7, fn=<built-in function getitem>) ['$0.7', '$0.8', 'q1']
    $0.9 = call $0.2($0.8, func=$0.2, args=[Var($0.8, algebra.py:404)], kws=(), vararg=None) ['$0.2', '$0.8', '$0.9']
    bool18 = global(bool: <class 'bool'>)    ['bool18']
    $18pred = call bool18($0.9, func=bool18, args=(Var($0.9, algebra.py:404),), kws=(), vararg=None) ['$0.9', '$18pred', 'bool18']
    $phi36.3 = $0.9                          ['$0.9', '$phi36.3']
    branch $18pred, 36, 20                   ['$18pred']
label 20:
    $20.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$20.1']
    $20.2 = getattr(value=$20.1, attr=any)   ['$20.1', '$20.2']
    $const20.4 = const(NoneType, None)       ['$const20.4']
    $const20.5 = const(NoneType, None)       ['$const20.5']
    $20.6 = global(slice: <class 'slice'>)   ['$20.6']
    $20.7 = call $20.6($const20.4, $const20.5, func=$20.6, args=(Var($const20.4, algebra.py:404), Var($const20.5, algebra.py:404)), kws=(), vararg=None) ['$20.6', '$20.7', '$const20.4', '$const20.5']
    $20.8 = getitem(value=q2, index=$20.7, fn=<built-in function getitem>) ['$20.7', '$20.8', 'q2']
    $20.9 = call $20.2($20.8, func=$20.2, args=[Var($20.8, algebra.py:404)], kws=(), vararg=None) ['$20.2', '$20.8', '$20.9']
    $phi36.3 = $20.9                         ['$20.9', '$phi36.3']
    jump 36                                  []
label 36:
    $const36.2 = const(int, 0)               ['$const36.2']
    bout[$const36.2] = $phi36.3              ['$const36.2', '$phi36.3', 'bout']
    $const36.4 = const(NoneType, None)       ['$const36.4']
    $36.5 = cast(value=$const36.4)           ['$36.5', '$const36.4']
    return $36.5                             ['$36.5']

2022-08-04 11:53:08,044 DEBUG ==== SSA block analysis pass on 0
2022-08-04 11:53:08,044 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce8f27f0>
2022-08-04 11:53:08,044 DEBUG on stmt: q1 = arg(0, name=q1)
2022-08-04 11:53:08,044 DEBUG on stmt: q2 = arg(1, name=q2)
2022-08-04 11:53:08,044 DEBUG on stmt: bout = arg(2, name=bout)
2022-08-04 11:53:08,044 DEBUG on stmt: $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:08,044 DEBUG on stmt: $0.2 = getattr(value=$0.1, attr=any)
2022-08-04 11:53:08,044 DEBUG on stmt: $const0.4 = const(NoneType, None)
2022-08-04 11:53:08,044 DEBUG on stmt: $const0.5 = const(NoneType, None)
2022-08-04 11:53:08,045 DEBUG on stmt: $0.6 = global(slice: <class 'slice'>)
2022-08-04 11:53:08,045 DEBUG on stmt: $0.7 = call $0.6($const0.4, $const0.5, func=$0.6, args=(Var($const0.4, algebra.py:404), Var($const0.5, algebra.py:404)), kws=(), vararg=None)
2022-08-04 11:53:08,045 DEBUG on stmt: $0.8 = static_getitem(value=q1, index=slice(None, None, None), index_var=$0.7, fn=<built-in function getitem>)
2022-08-04 11:53:08,045 DEBUG on stmt: $0.9 = call $0.2($0.8, func=$0.2, args=[Var($0.8, algebra.py:404)], kws=(), vararg=None)
2022-08-04 11:53:08,045 DEBUG on stmt: bool18 = global(bool: <class 'bool'>)
2022-08-04 11:53:08,045 DEBUG on stmt: $18pred = call bool18($0.9, func=bool18, args=(Var($0.9, algebra.py:404),), kws=(), vararg=None)
2022-08-04 11:53:08,045 DEBUG on stmt: $phi36.3 = $0.9
2022-08-04 11:53:08,045 DEBUG on stmt: branch $18pred, 36, 20
2022-08-04 11:53:08,045 DEBUG ==== SSA block analysis pass on 20
2022-08-04 11:53:08,045 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce8f27f0>
2022-08-04 11:53:08,045 DEBUG on stmt: $20.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:08,046 DEBUG on stmt: $20.2 = getattr(value=$20.1, attr=any)
2022-08-04 11:53:08,046 DEBUG on stmt: $const20.4 = const(NoneType, None)
2022-08-04 11:53:08,046 DEBUG on stmt: $const20.5 = const(NoneType, None)
2022-08-04 11:53:08,046 DEBUG on stmt: $20.6 = global(slice: <class 'slice'>)
2022-08-04 11:53:08,046 DEBUG on stmt: $20.7 = call $20.6($const20.4, $const20.5, func=$20.6, args=(Var($const20.4, algebra.py:404), Var($const20.5, algebra.py:404)), kws=(), vararg=None)
2022-08-04 11:53:08,046 DEBUG on stmt: $20.8 = static_getitem(value=q2, index=slice(None, None, None), index_var=$20.7, fn=<built-in function getitem>)
2022-08-04 11:53:08,046 DEBUG on stmt: $20.9 = call $20.2($20.8, func=$20.2, args=[Var($20.8, algebra.py:404)], kws=(), vararg=None)
2022-08-04 11:53:08,046 DEBUG on stmt: $phi36.3 = $20.9
2022-08-04 11:53:08,046 DEBUG on stmt: jump 36
2022-08-04 11:53:08,046 DEBUG ==== SSA block analysis pass on 36
2022-08-04 11:53:08,046 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce8f27f0>
2022-08-04 11:53:08,046 DEBUG on stmt: $const36.2 = const(int, 0)
2022-08-04 11:53:08,046 DEBUG on stmt: bout[0] = $phi36.3
2022-08-04 11:53:08,047 DEBUG on stmt: $const36.4 = const(NoneType, None)
2022-08-04 11:53:08,047 DEBUG on stmt: $36.5 = cast(value=$const36.4)
2022-08-04 11:53:08,047 DEBUG on stmt: return $36.5
2022-08-04 11:53:08,047 DEBUG defs defaultdict(<class 'list'>,
            {'$0.1': [<numba.core.ir.Assign object at 0x7fa2ce8ea198>],
             '$0.2': [<numba.core.ir.Assign object at 0x7fa2ce8ea278>],
             '$0.6': [<numba.core.ir.Assign object at 0x7fa2ce8ea5c0>],
             '$0.7': [<numba.core.ir.Assign object at 0x7fa2ce8ea668>],
             '$0.8': [<numba.core.ir.Assign object at 0x7fa2ce8d7b00>],
             '$0.9': [<numba.core.ir.Assign object at 0x7fa2ce8ea828>],
             '$18pred': [<numba.core.ir.Assign object at 0x7fa2ce8eaa20>],
             '$20.1': [<numba.core.ir.Assign object at 0x7fa2ce8eabe0>],
             '$20.2': [<numba.core.ir.Assign object at 0x7fa2ce8eacc0>],
             '$20.6': [<numba.core.ir.Assign object at 0x7fa2ce8d74e0>],
             '$20.7': [<numba.core.ir.Assign object at 0x7fa2ce8d75f8>],
             '$20.8': [<numba.core.ir.Assign object at 0x7fa2ce8f2668>],
             '$20.9': [<numba.core.ir.Assign object at 0x7fa2ce8d7748>],
             '$36.5': [<numba.core.ir.Assign object at 0x7fa2ce8d71d0>],
             '$const0.4': [<numba.core.ir.Assign object at 0x7fa2ce8ea400>],
             '$const0.5': [<numba.core.ir.Assign object at 0x7fa2ce8ea4e0>],
             '$const20.4': [<numba.core.ir.Assign object at 0x7fa2ce8eae48>],
             '$const20.5': [<numba.core.ir.Assign object at 0x7fa2ce8eaf28>],
             '$const36.2': [<numba.core.ir.Assign object at 0x7fa2ce8d75c0>],
             '$const36.4': [<numba.core.ir.Assign object at 0x7fa2ce8d7160>],
             '$phi36.3': [<numba.core.ir.Assign object at 0x7fa2ce8ea320>,
                          <numba.core.ir.Assign object at 0x7fa2ce8ead68>],
             'bool18': [<numba.core.ir.Assign object at 0x7fa2ce8ea940>],
             'bout': [<numba.core.ir.Assign object at 0x7fa2ce8ea0b8>],
             'q1': [<numba.core.ir.Assign object at 0x7fa2ce8f2c18>],
             'q2': [<numba.core.ir.Assign object at 0x7fa2ce8f2fd0>]})
2022-08-04 11:53:08,047 DEBUG SSA violators {'$phi36.3'}
2022-08-04 11:53:08,048 DEBUG Fix SSA violator on var $phi36.3
2022-08-04 11:53:08,048 DEBUG ==== SSA block rewrite pass on 0
2022-08-04 11:53:08,048 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce8f27f0>
2022-08-04 11:53:08,048 DEBUG on stmt: q1 = arg(0, name=q1)
2022-08-04 11:53:08,048 DEBUG on stmt: q2 = arg(1, name=q2)
2022-08-04 11:53:08,048 DEBUG on stmt: bout = arg(2, name=bout)
2022-08-04 11:53:08,048 DEBUG on stmt: $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:08,048 DEBUG on stmt: $0.2 = getattr(value=$0.1, attr=any)
2022-08-04 11:53:08,048 DEBUG on stmt: $const0.4 = const(NoneType, None)
2022-08-04 11:53:08,048 DEBUG on stmt: $const0.5 = const(NoneType, None)
2022-08-04 11:53:08,048 DEBUG on stmt: $0.6 = global(slice: <class 'slice'>)
2022-08-04 11:53:08,048 DEBUG on stmt: $0.7 = call $0.6($const0.4, $const0.5, func=$0.6, args=(Var($const0.4, algebra.py:404), Var($const0.5, algebra.py:404)), kws=(), vararg=None)
2022-08-04 11:53:08,048 DEBUG on stmt: $0.8 = static_getitem(value=q1, index=slice(None, None, None), index_var=$0.7, fn=<built-in function getitem>)
2022-08-04 11:53:08,048 DEBUG on stmt: $0.9 = call $0.2($0.8, func=$0.2, args=[Var($0.8, algebra.py:404)], kws=(), vararg=None)
2022-08-04 11:53:08,049 DEBUG on stmt: bool18 = global(bool: <class 'bool'>)
2022-08-04 11:53:08,049 DEBUG on stmt: $18pred = call bool18($0.9, func=bool18, args=(Var($0.9, algebra.py:404),), kws=(), vararg=None)
2022-08-04 11:53:08,049 DEBUG on stmt: $phi36.3 = $0.9
2022-08-04 11:53:08,049 DEBUG first assign: $phi36.3
2022-08-04 11:53:08,049 DEBUG replaced with: $phi36.3 = $0.9
2022-08-04 11:53:08,049 DEBUG on stmt: branch $18pred, 36, 20
2022-08-04 11:53:08,049 DEBUG ==== SSA block rewrite pass on 20
2022-08-04 11:53:08,049 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce8f27f0>
2022-08-04 11:53:08,049 DEBUG on stmt: $20.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:08,049 DEBUG on stmt: $20.2 = getattr(value=$20.1, attr=any)
2022-08-04 11:53:08,049 DEBUG on stmt: $const20.4 = const(NoneType, None)
2022-08-04 11:53:08,049 DEBUG on stmt: $const20.5 = const(NoneType, None)
2022-08-04 11:53:08,049 DEBUG on stmt: $20.6 = global(slice: <class 'slice'>)
2022-08-04 11:53:08,049 DEBUG on stmt: $20.7 = call $20.6($const20.4, $const20.5, func=$20.6, args=(Var($const20.4, algebra.py:404), Var($const20.5, algebra.py:404)), kws=(), vararg=None)
2022-08-04 11:53:08,050 DEBUG on stmt: $20.8 = static_getitem(value=q2, index=slice(None, None, None), index_var=$20.7, fn=<built-in function getitem>)
2022-08-04 11:53:08,050 DEBUG on stmt: $20.9 = call $20.2($20.8, func=$20.2, args=[Var($20.8, algebra.py:404)], kws=(), vararg=None)
2022-08-04 11:53:08,050 DEBUG on stmt: $phi36.3 = $20.9
2022-08-04 11:53:08,050 DEBUG replaced with: $phi36.3.1 = $20.9
2022-08-04 11:53:08,050 DEBUG on stmt: jump 36
2022-08-04 11:53:08,050 DEBUG ==== SSA block rewrite pass on 36
2022-08-04 11:53:08,050 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce8f27f0>
2022-08-04 11:53:08,050 DEBUG on stmt: $const36.2 = const(int, 0)
2022-08-04 11:53:08,050 DEBUG on stmt: bout[0] = $phi36.3
2022-08-04 11:53:08,050 DEBUG on stmt: $const36.4 = const(NoneType, None)
2022-08-04 11:53:08,050 DEBUG on stmt: $36.5 = cast(value=$const36.4)
2022-08-04 11:53:08,050 DEBUG on stmt: return $36.5
2022-08-04 11:53:08,051 DEBUG Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7fa2ce8d70b8>],
             20: [<numba.core.ir.Assign object at 0x7fa2ce8d79b0>]})
2022-08-04 11:53:08,051 DEBUG ==== SSA block rewrite pass on 0
2022-08-04 11:53:08,051 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce8d7978>
2022-08-04 11:53:08,051 DEBUG on stmt: q1 = arg(0, name=q1)
2022-08-04 11:53:08,051 DEBUG on stmt: q2 = arg(1, name=q2)
2022-08-04 11:53:08,051 DEBUG on stmt: bout = arg(2, name=bout)
2022-08-04 11:53:08,051 DEBUG on stmt: $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:08,051 DEBUG on stmt: $0.2 = getattr(value=$0.1, attr=any)
2022-08-04 11:53:08,051 DEBUG on stmt: $const0.4 = const(NoneType, None)
2022-08-04 11:53:08,051 DEBUG on stmt: $const0.5 = const(NoneType, None)
2022-08-04 11:53:08,051 DEBUG on stmt: $0.6 = global(slice: <class 'slice'>)
2022-08-04 11:53:08,051 DEBUG on stmt: $0.7 = call $0.6($const0.4, $const0.5, func=$0.6, args=(Var($const0.4, algebra.py:404), Var($const0.5, algebra.py:404)), kws=(), vararg=None)
2022-08-04 11:53:08,052 DEBUG on stmt: $0.8 = static_getitem(value=q1, index=slice(None, None, None), index_var=$0.7, fn=<built-in function getitem>)
2022-08-04 11:53:08,052 DEBUG on stmt: $0.9 = call $0.2($0.8, func=$0.2, args=[Var($0.8, algebra.py:404)], kws=(), vararg=None)
2022-08-04 11:53:08,052 DEBUG on stmt: bool18 = global(bool: <class 'bool'>)
2022-08-04 11:53:08,052 DEBUG on stmt: $18pred = call bool18($0.9, func=bool18, args=(Var($0.9, algebra.py:404),), kws=(), vararg=None)
2022-08-04 11:53:08,052 DEBUG on stmt: $phi36.3 = $0.9
2022-08-04 11:53:08,052 DEBUG on stmt: branch $18pred, 36, 20
2022-08-04 11:53:08,052 DEBUG ==== SSA block rewrite pass on 20
2022-08-04 11:53:08,052 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce8d7978>
2022-08-04 11:53:08,052 DEBUG on stmt: $20.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:08,052 DEBUG on stmt: $20.2 = getattr(value=$20.1, attr=any)
2022-08-04 11:53:08,052 DEBUG on stmt: $const20.4 = const(NoneType, None)
2022-08-04 11:53:08,052 DEBUG on stmt: $const20.5 = const(NoneType, None)
2022-08-04 11:53:08,052 DEBUG on stmt: $20.6 = global(slice: <class 'slice'>)
2022-08-04 11:53:08,053 DEBUG on stmt: $20.7 = call $20.6($const20.4, $const20.5, func=$20.6, args=(Var($const20.4, algebra.py:404), Var($const20.5, algebra.py:404)), kws=(), vararg=None)
2022-08-04 11:53:08,053 DEBUG on stmt: $20.8 = static_getitem(value=q2, index=slice(None, None, None), index_var=$20.7, fn=<built-in function getitem>)
2022-08-04 11:53:08,053 DEBUG on stmt: $20.9 = call $20.2($20.8, func=$20.2, args=[Var($20.8, algebra.py:404)], kws=(), vararg=None)
2022-08-04 11:53:08,053 DEBUG on stmt: $phi36.3.1 = $20.9
2022-08-04 11:53:08,053 DEBUG on stmt: jump 36
2022-08-04 11:53:08,053 DEBUG ==== SSA block rewrite pass on 36
2022-08-04 11:53:08,053 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce8d7978>
2022-08-04 11:53:08,053 DEBUG on stmt: $const36.2 = const(int, 0)
2022-08-04 11:53:08,053 DEBUG on stmt: bout[0] = $phi36.3
2022-08-04 11:53:08,053 DEBUG find_def var='$phi36.3' stmt=bout[0] = $phi36.3
2022-08-04 11:53:08,053 DEBUG find_def_from_top label 36
2022-08-04 11:53:08,053 DEBUG insert phi node $phi36.3.2 = phi(incoming_values=[], incoming_blocks=[]) at 36
2022-08-04 11:53:08,053 DEBUG find_def_from_bottom label 0
2022-08-04 11:53:08,053 DEBUG incoming_def $phi36.3 = $0.9
2022-08-04 11:53:08,053 DEBUG find_def_from_bottom label 20
2022-08-04 11:53:08,053 DEBUG incoming_def $phi36.3.1 = $20.9
2022-08-04 11:53:08,054 DEBUG replaced with: bout[0] = $phi36.3.2
2022-08-04 11:53:08,054 DEBUG on stmt: $const36.4 = const(NoneType, None)
2022-08-04 11:53:08,054 DEBUG on stmt: $36.5 = cast(value=$const36.4)
2022-08-04 11:53:08,054 DEBUG on stmt: return $36.5
2022-08-04 11:53:08,210 DEBUG label 0:
    qin = arg(0, name=qin)                   ['qin']
    bout = arg(1, name=bout)                 ['bout']
    $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$0.1']
    $0.2 = getattr(value=$0.1, attr=isfinite) ['$0.1', '$0.2']
    $const0.4 = const(int, 0)                ['$const0.4']
    $0.5 = getitem(value=qin, index=$const0.4, fn=<built-in function getitem>) ['$0.5', '$const0.4', 'qin']
    $0.6 = call $0.2($0.5, func=$0.2, args=[Var($0.5, algebra.py:409)], kws=(), vararg=None) ['$0.2', '$0.5', '$0.6']
    bool14 = global(bool: <class 'bool'>)    ['bool14']
    $14pred = call bool14($0.6, func=bool14, args=(Var($0.6, algebra.py:409),), kws=(), vararg=None) ['$0.6', '$14pred', 'bool14']
    $phi56.3 = $0.6                          ['$0.6', '$phi56.3']
    branch $14pred, 16, 56                   ['$14pred']
label 16:
    $16.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$16.1']
    $16.2 = getattr(value=$16.1, attr=isfinite) ['$16.1', '$16.2']
    $const16.4 = const(int, 1)               ['$const16.4']
    $16.5 = getitem(value=qin, index=$const16.4, fn=<built-in function getitem>) ['$16.5', '$const16.4', 'qin']
    $16.6 = call $16.2($16.5, func=$16.2, args=[Var($16.5, algebra.py:409)], kws=(), vararg=None) ['$16.2', '$16.5', '$16.6']
    bool28 = global(bool: <class 'bool'>)    ['bool28']
    $28pred = call bool28($16.6, func=bool28, args=(Var($16.6, algebra.py:409),), kws=(), vararg=None) ['$16.6', '$28pred', 'bool28']
    $phi56.3 = $16.6                         ['$16.6', '$phi56.3']
    branch $28pred, 30, 56                   ['$28pred']
label 30:
    $30.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$30.1']
    $30.2 = getattr(value=$30.1, attr=isfinite) ['$30.1', '$30.2']
    $const30.4 = const(int, 2)               ['$const30.4']
    $30.5 = getitem(value=qin, index=$const30.4, fn=<built-in function getitem>) ['$30.5', '$const30.4', 'qin']
    $30.6 = call $30.2($30.5, func=$30.2, args=[Var($30.5, algebra.py:409)], kws=(), vararg=None) ['$30.2', '$30.5', '$30.6']
    bool42 = global(bool: <class 'bool'>)    ['bool42']
    $42pred = call bool42($30.6, func=bool42, args=(Var($30.6, algebra.py:409),), kws=(), vararg=None) ['$30.6', '$42pred', 'bool42']
    $phi56.3 = $30.6                         ['$30.6', '$phi56.3']
    branch $42pred, 44, 56                   ['$42pred']
label 44:
    $44.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$44.1']
    $44.2 = getattr(value=$44.1, attr=isfinite) ['$44.1', '$44.2']
    $const44.4 = const(int, 3)               ['$const44.4']
    $44.5 = getitem(value=qin, index=$const44.4, fn=<built-in function getitem>) ['$44.5', '$const44.4', 'qin']
    $44.6 = call $44.2($44.5, func=$44.2, args=[Var($44.5, algebra.py:409)], kws=(), vararg=None) ['$44.2', '$44.5', '$44.6']
    $phi56.3 = $44.6                         ['$44.6', '$phi56.3']
    jump 56                                  []
label 56:
    $const56.2 = const(int, 0)               ['$const56.2']
    bout[$const56.2] = $phi56.3              ['$const56.2', '$phi56.3', 'bout']
    $const56.4 = const(NoneType, None)       ['$const56.4']
    $56.5 = cast(value=$const56.4)           ['$56.5', '$const56.4']
    return $56.5                             ['$56.5']

2022-08-04 11:53:08,218 DEBUG ==== SSA block analysis pass on 0
2022-08-04 11:53:08,218 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ced96fd0>
2022-08-04 11:53:08,218 DEBUG on stmt: qin = arg(0, name=qin)
2022-08-04 11:53:08,218 DEBUG on stmt: bout = arg(1, name=bout)
2022-08-04 11:53:08,218 DEBUG on stmt: $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:08,218 DEBUG on stmt: $0.2 = getattr(value=$0.1, attr=isfinite)
2022-08-04 11:53:08,218 DEBUG on stmt: $const0.4 = const(int, 0)
2022-08-04 11:53:08,218 DEBUG on stmt: $0.5 = static_getitem(value=qin, index=0, index_var=$const0.4, fn=<built-in function getitem>)
2022-08-04 11:53:08,218 DEBUG on stmt: $0.6 = call $0.2($0.5, func=$0.2, args=[Var($0.5, algebra.py:409)], kws=(), vararg=None)
2022-08-04 11:53:08,218 DEBUG on stmt: bool14 = global(bool: <class 'bool'>)
2022-08-04 11:53:08,218 DEBUG on stmt: $14pred = call bool14($0.6, func=bool14, args=(Var($0.6, algebra.py:409),), kws=(), vararg=None)
2022-08-04 11:53:08,218 DEBUG on stmt: $phi56.3 = $0.6
2022-08-04 11:53:08,219 DEBUG on stmt: branch $14pred, 16, 56
2022-08-04 11:53:08,219 DEBUG ==== SSA block analysis pass on 16
2022-08-04 11:53:08,219 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ced96fd0>
2022-08-04 11:53:08,219 DEBUG on stmt: $16.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:08,219 DEBUG on stmt: $16.2 = getattr(value=$16.1, attr=isfinite)
2022-08-04 11:53:08,219 DEBUG on stmt: $const16.4 = const(int, 1)
2022-08-04 11:53:08,219 DEBUG on stmt: $16.5 = static_getitem(value=qin, index=1, index_var=$const16.4, fn=<built-in function getitem>)
2022-08-04 11:53:08,219 DEBUG on stmt: $16.6 = call $16.2($16.5, func=$16.2, args=[Var($16.5, algebra.py:409)], kws=(), vararg=None)
2022-08-04 11:53:08,219 DEBUG on stmt: bool28 = global(bool: <class 'bool'>)
2022-08-04 11:53:08,219 DEBUG on stmt: $28pred = call bool28($16.6, func=bool28, args=(Var($16.6, algebra.py:409),), kws=(), vararg=None)
2022-08-04 11:53:08,219 DEBUG on stmt: $phi56.3 = $16.6
2022-08-04 11:53:08,219 DEBUG on stmt: branch $28pred, 30, 56
2022-08-04 11:53:08,219 DEBUG ==== SSA block analysis pass on 30
2022-08-04 11:53:08,219 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ced96fd0>
2022-08-04 11:53:08,219 DEBUG on stmt: $30.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:08,219 DEBUG on stmt: $30.2 = getattr(value=$30.1, attr=isfinite)
2022-08-04 11:53:08,219 DEBUG on stmt: $const30.4 = const(int, 2)
2022-08-04 11:53:08,219 DEBUG on stmt: $30.5 = static_getitem(value=qin, index=2, index_var=$const30.4, fn=<built-in function getitem>)
2022-08-04 11:53:08,219 DEBUG on stmt: $30.6 = call $30.2($30.5, func=$30.2, args=[Var($30.5, algebra.py:409)], kws=(), vararg=None)
2022-08-04 11:53:08,220 DEBUG on stmt: bool42 = global(bool: <class 'bool'>)
2022-08-04 11:53:08,220 DEBUG on stmt: $42pred = call bool42($30.6, func=bool42, args=(Var($30.6, algebra.py:409),), kws=(), vararg=None)
2022-08-04 11:53:08,220 DEBUG on stmt: $phi56.3 = $30.6
2022-08-04 11:53:08,220 DEBUG on stmt: branch $42pred, 44, 56
2022-08-04 11:53:08,220 DEBUG ==== SSA block analysis pass on 44
2022-08-04 11:53:08,220 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ced96fd0>
2022-08-04 11:53:08,220 DEBUG on stmt: $44.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:08,220 DEBUG on stmt: $44.2 = getattr(value=$44.1, attr=isfinite)
2022-08-04 11:53:08,220 DEBUG on stmt: $const44.4 = const(int, 3)
2022-08-04 11:53:08,220 DEBUG on stmt: $44.5 = static_getitem(value=qin, index=3, index_var=$const44.4, fn=<built-in function getitem>)
2022-08-04 11:53:08,220 DEBUG on stmt: $44.6 = call $44.2($44.5, func=$44.2, args=[Var($44.5, algebra.py:409)], kws=(), vararg=None)
2022-08-04 11:53:08,220 DEBUG on stmt: $phi56.3 = $44.6
2022-08-04 11:53:08,220 DEBUG on stmt: jump 56
2022-08-04 11:53:08,220 DEBUG ==== SSA block analysis pass on 56
2022-08-04 11:53:08,220 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ced96fd0>
2022-08-04 11:53:08,220 DEBUG on stmt: $const56.2 = const(int, 0)
2022-08-04 11:53:08,220 DEBUG on stmt: bout[0] = $phi56.3
2022-08-04 11:53:08,220 DEBUG on stmt: $const56.4 = const(NoneType, None)
2022-08-04 11:53:08,220 DEBUG on stmt: $56.5 = cast(value=$const56.4)
2022-08-04 11:53:08,221 DEBUG on stmt: return $56.5
2022-08-04 11:53:08,221 DEBUG defs defaultdict(<class 'list'>,
            {'$0.1': [<numba.core.ir.Assign object at 0x7fa2ceac19b0>],
             '$0.2': [<numba.core.ir.Assign object at 0x7fa2ceac1a90>],
             '$0.5': [<numba.core.ir.Assign object at 0x7fa2ced84ef0>],
             '$0.6': [<numba.core.ir.Assign object at 0x7fa2ceac1dd8>],
             '$14pred': [<numba.core.ir.Assign object at 0x7fa2ceac1fd0>],
             '$16.1': [<numba.core.ir.Assign object at 0x7fa2ced8b198>],
             '$16.2': [<numba.core.ir.Assign object at 0x7fa2ced8b278>],
             '$16.5': [<numba.core.ir.Assign object at 0x7fa2ce8d8a90>],
             '$16.6': [<numba.core.ir.Assign object at 0x7fa2ced8b5c0>],
             '$28pred': [<numba.core.ir.Assign object at 0x7fa2ced8b7b8>],
             '$30.1': [<numba.core.ir.Assign object at 0x7fa2ced8b940>],
             '$30.2': [<numba.core.ir.Assign object at 0x7fa2ced8ba20>],
             '$30.5': [<numba.core.ir.Assign object at 0x7fa2ceac12e8>],
             '$30.6': [<numba.core.ir.Assign object at 0x7fa2ced8bd68>],
             '$42pred': [<numba.core.ir.Assign object at 0x7fa2ced8bf60>],
             '$44.1': [<numba.core.ir.Assign object at 0x7fa2ced84128>],
             '$44.2': [<numba.core.ir.Assign object at 0x7fa2ced84208>],
             '$44.5': [<numba.core.ir.Assign object at 0x7fa2ceac1518>],
             '$44.6': [<numba.core.ir.Assign object at 0x7fa2ced84550>],
             '$56.5': [<numba.core.ir.Assign object at 0x7fa2ced849b0>],
             '$const0.4': [<numba.core.ir.Assign object at 0x7fa2ceac1c18>],
             '$const16.4': [<numba.core.ir.Assign object at 0x7fa2ced8b400>],
             '$const30.4': [<numba.core.ir.Assign object at 0x7fa2ced8bba8>],
             '$const44.4': [<numba.core.ir.Assign object at 0x7fa2ced84390>],
             '$const56.2': [<numba.core.ir.Assign object at 0x7fa2ced84780>],
             '$const56.4': [<numba.core.ir.Assign object at 0x7fa2ced848d0>],
             '$phi56.3': [<numba.core.ir.Assign object at 0x7fa2ceac1780>,
                          <numba.core.ir.Assign object at 0x7fa2ceac1748>,
                          <numba.core.ir.Assign object at 0x7fa2ced8bac8>,
                          <numba.core.ir.Assign object at 0x7fa2ced8b860>],
             'bool14': [<numba.core.ir.Assign object at 0x7fa2ceac1ef0>],
             'bool28': [<numba.core.ir.Assign object at 0x7fa2ced8b6d8>],
             'bool42': [<numba.core.ir.Assign object at 0x7fa2ced8be80>],
             'bout': [<numba.core.ir.Assign object at 0x7fa2ceac18d0>],
             'qin': [<numba.core.ir.Assign object at 0x7fa2ceac1828>]})
2022-08-04 11:53:08,221 DEBUG SSA violators {'$phi56.3'}
2022-08-04 11:53:08,221 DEBUG Fix SSA violator on var $phi56.3
2022-08-04 11:53:08,221 DEBUG ==== SSA block rewrite pass on 0
2022-08-04 11:53:08,221 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ced96fd0>
2022-08-04 11:53:08,221 DEBUG on stmt: qin = arg(0, name=qin)
2022-08-04 11:53:08,221 DEBUG on stmt: bout = arg(1, name=bout)
2022-08-04 11:53:08,221 DEBUG on stmt: $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:08,221 DEBUG on stmt: $0.2 = getattr(value=$0.1, attr=isfinite)
2022-08-04 11:53:08,221 DEBUG on stmt: $const0.4 = const(int, 0)
2022-08-04 11:53:08,222 DEBUG on stmt: $0.5 = static_getitem(value=qin, index=0, index_var=$const0.4, fn=<built-in function getitem>)
2022-08-04 11:53:08,222 DEBUG on stmt: $0.6 = call $0.2($0.5, func=$0.2, args=[Var($0.5, algebra.py:409)], kws=(), vararg=None)
2022-08-04 11:53:08,222 DEBUG on stmt: bool14 = global(bool: <class 'bool'>)
2022-08-04 11:53:08,222 DEBUG on stmt: $14pred = call bool14($0.6, func=bool14, args=(Var($0.6, algebra.py:409),), kws=(), vararg=None)
2022-08-04 11:53:08,222 DEBUG on stmt: $phi56.3 = $0.6
2022-08-04 11:53:08,222 DEBUG first assign: $phi56.3
2022-08-04 11:53:08,222 DEBUG replaced with: $phi56.3 = $0.6
2022-08-04 11:53:08,222 DEBUG on stmt: branch $14pred, 16, 56
2022-08-04 11:53:08,222 DEBUG ==== SSA block rewrite pass on 16
2022-08-04 11:53:08,222 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ced96fd0>
2022-08-04 11:53:08,222 DEBUG on stmt: $16.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:08,222 DEBUG on stmt: $16.2 = getattr(value=$16.1, attr=isfinite)
2022-08-04 11:53:08,222 DEBUG on stmt: $const16.4 = const(int, 1)
2022-08-04 11:53:08,222 DEBUG on stmt: $16.5 = static_getitem(value=qin, index=1, index_var=$const16.4, fn=<built-in function getitem>)
2022-08-04 11:53:08,222 DEBUG on stmt: $16.6 = call $16.2($16.5, func=$16.2, args=[Var($16.5, algebra.py:409)], kws=(), vararg=None)
2022-08-04 11:53:08,222 DEBUG on stmt: bool28 = global(bool: <class 'bool'>)
2022-08-04 11:53:08,222 DEBUG on stmt: $28pred = call bool28($16.6, func=bool28, args=(Var($16.6, algebra.py:409),), kws=(), vararg=None)
2022-08-04 11:53:08,222 DEBUG on stmt: $phi56.3 = $16.6
2022-08-04 11:53:08,222 DEBUG replaced with: $phi56.3.1 = $16.6
2022-08-04 11:53:08,222 DEBUG on stmt: branch $28pred, 30, 56
2022-08-04 11:53:08,222 DEBUG ==== SSA block rewrite pass on 30
2022-08-04 11:53:08,223 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ced96fd0>
2022-08-04 11:53:08,223 DEBUG on stmt: $30.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:08,223 DEBUG on stmt: $30.2 = getattr(value=$30.1, attr=isfinite)
2022-08-04 11:53:08,223 DEBUG on stmt: $const30.4 = const(int, 2)
2022-08-04 11:53:08,223 DEBUG on stmt: $30.5 = static_getitem(value=qin, index=2, index_var=$const30.4, fn=<built-in function getitem>)
2022-08-04 11:53:08,223 DEBUG on stmt: $30.6 = call $30.2($30.5, func=$30.2, args=[Var($30.5, algebra.py:409)], kws=(), vararg=None)
2022-08-04 11:53:08,223 DEBUG on stmt: bool42 = global(bool: <class 'bool'>)
2022-08-04 11:53:08,223 DEBUG on stmt: $42pred = call bool42($30.6, func=bool42, args=(Var($30.6, algebra.py:409),), kws=(), vararg=None)
2022-08-04 11:53:08,223 DEBUG on stmt: $phi56.3 = $30.6
2022-08-04 11:53:08,223 DEBUG replaced with: $phi56.3.2 = $30.6
2022-08-04 11:53:08,223 DEBUG on stmt: branch $42pred, 44, 56
2022-08-04 11:53:08,223 DEBUG ==== SSA block rewrite pass on 44
2022-08-04 11:53:08,223 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ced96fd0>
2022-08-04 11:53:08,224 DEBUG on stmt: $44.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:08,224 DEBUG on stmt: $44.2 = getattr(value=$44.1, attr=isfinite)
2022-08-04 11:53:08,224 DEBUG on stmt: $const44.4 = const(int, 3)
2022-08-04 11:53:08,224 DEBUG on stmt: $44.5 = static_getitem(value=qin, index=3, index_var=$const44.4, fn=<built-in function getitem>)
2022-08-04 11:53:08,224 DEBUG on stmt: $44.6 = call $44.2($44.5, func=$44.2, args=[Var($44.5, algebra.py:409)], kws=(), vararg=None)
2022-08-04 11:53:08,224 DEBUG on stmt: $phi56.3 = $44.6
2022-08-04 11:53:08,224 DEBUG replaced with: $phi56.3.3 = $44.6
2022-08-04 11:53:08,224 DEBUG on stmt: jump 56
2022-08-04 11:53:08,224 DEBUG ==== SSA block rewrite pass on 56
2022-08-04 11:53:08,224 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ced96fd0>
2022-08-04 11:53:08,224 DEBUG on stmt: $const56.2 = const(int, 0)
2022-08-04 11:53:08,224 DEBUG on stmt: bout[0] = $phi56.3
2022-08-04 11:53:08,225 DEBUG on stmt: $const56.4 = const(NoneType, None)
2022-08-04 11:53:08,225 DEBUG on stmt: $56.5 = cast(value=$const56.4)
2022-08-04 11:53:08,225 DEBUG on stmt: return $56.5
2022-08-04 11:53:08,225 DEBUG Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7fa2ced84c88>],
             16: [<numba.core.ir.Assign object at 0x7fa2ced84e80>],
             30: [<numba.core.ir.Assign object at 0x7fa2ced84e48>],
             44: [<numba.core.ir.Assign object at 0x7fa2ced84cf8>]})
2022-08-04 11:53:08,225 DEBUG ==== SSA block rewrite pass on 0
2022-08-04 11:53:08,225 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ced84d68>
2022-08-04 11:53:08,225 DEBUG on stmt: qin = arg(0, name=qin)
2022-08-04 11:53:08,225 DEBUG on stmt: bout = arg(1, name=bout)
2022-08-04 11:53:08,225 DEBUG on stmt: $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:08,225 DEBUG on stmt: $0.2 = getattr(value=$0.1, attr=isfinite)
2022-08-04 11:53:08,225 DEBUG on stmt: $const0.4 = const(int, 0)
2022-08-04 11:53:08,225 DEBUG on stmt: $0.5 = static_getitem(value=qin, index=0, index_var=$const0.4, fn=<built-in function getitem>)
2022-08-04 11:53:08,226 DEBUG on stmt: $0.6 = call $0.2($0.5, func=$0.2, args=[Var($0.5, algebra.py:409)], kws=(), vararg=None)
2022-08-04 11:53:08,226 DEBUG on stmt: bool14 = global(bool: <class 'bool'>)
2022-08-04 11:53:08,226 DEBUG on stmt: $14pred = call bool14($0.6, func=bool14, args=(Var($0.6, algebra.py:409),), kws=(), vararg=None)
2022-08-04 11:53:08,226 DEBUG on stmt: $phi56.3 = $0.6
2022-08-04 11:53:08,226 DEBUG on stmt: branch $14pred, 16, 56
2022-08-04 11:53:08,226 DEBUG ==== SSA block rewrite pass on 16
2022-08-04 11:53:08,226 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ced84d68>
2022-08-04 11:53:08,226 DEBUG on stmt: $16.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:08,226 DEBUG on stmt: $16.2 = getattr(value=$16.1, attr=isfinite)
2022-08-04 11:53:08,226 DEBUG on stmt: $const16.4 = const(int, 1)
2022-08-04 11:53:08,226 DEBUG on stmt: $16.5 = static_getitem(value=qin, index=1, index_var=$const16.4, fn=<built-in function getitem>)
2022-08-04 11:53:08,226 DEBUG on stmt: $16.6 = call $16.2($16.5, func=$16.2, args=[Var($16.5, algebra.py:409)], kws=(), vararg=None)
2022-08-04 11:53:08,226 DEBUG on stmt: bool28 = global(bool: <class 'bool'>)
2022-08-04 11:53:08,226 DEBUG on stmt: $28pred = call bool28($16.6, func=bool28, args=(Var($16.6, algebra.py:409),), kws=(), vararg=None)
2022-08-04 11:53:08,226 DEBUG on stmt: $phi56.3.1 = $16.6
2022-08-04 11:53:08,226 DEBUG on stmt: branch $28pred, 30, 56
2022-08-04 11:53:08,226 DEBUG ==== SSA block rewrite pass on 30
2022-08-04 11:53:08,227 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ced84d68>
2022-08-04 11:53:08,227 DEBUG on stmt: $30.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:08,227 DEBUG on stmt: $30.2 = getattr(value=$30.1, attr=isfinite)
2022-08-04 11:53:08,227 DEBUG on stmt: $const30.4 = const(int, 2)
2022-08-04 11:53:08,227 DEBUG on stmt: $30.5 = static_getitem(value=qin, index=2, index_var=$const30.4, fn=<built-in function getitem>)
2022-08-04 11:53:08,227 DEBUG on stmt: $30.6 = call $30.2($30.5, func=$30.2, args=[Var($30.5, algebra.py:409)], kws=(), vararg=None)
2022-08-04 11:53:08,227 DEBUG on stmt: bool42 = global(bool: <class 'bool'>)
2022-08-04 11:53:08,227 DEBUG on stmt: $42pred = call bool42($30.6, func=bool42, args=(Var($30.6, algebra.py:409),), kws=(), vararg=None)
2022-08-04 11:53:08,227 DEBUG on stmt: $phi56.3.2 = $30.6
2022-08-04 11:53:08,227 DEBUG on stmt: branch $42pred, 44, 56
2022-08-04 11:53:08,227 DEBUG ==== SSA block rewrite pass on 44
2022-08-04 11:53:08,227 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ced84d68>
2022-08-04 11:53:08,227 DEBUG on stmt: $44.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:08,227 DEBUG on stmt: $44.2 = getattr(value=$44.1, attr=isfinite)
2022-08-04 11:53:08,227 DEBUG on stmt: $const44.4 = const(int, 3)
2022-08-04 11:53:08,227 DEBUG on stmt: $44.5 = static_getitem(value=qin, index=3, index_var=$const44.4, fn=<built-in function getitem>)
2022-08-04 11:53:08,227 DEBUG on stmt: $44.6 = call $44.2($44.5, func=$44.2, args=[Var($44.5, algebra.py:409)], kws=(), vararg=None)
2022-08-04 11:53:08,227 DEBUG on stmt: $phi56.3.3 = $44.6
2022-08-04 11:53:08,227 DEBUG on stmt: jump 56
2022-08-04 11:53:08,228 DEBUG ==== SSA block rewrite pass on 56
2022-08-04 11:53:08,228 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ced84d68>
2022-08-04 11:53:08,228 DEBUG on stmt: $const56.2 = const(int, 0)
2022-08-04 11:53:08,228 DEBUG on stmt: bout[0] = $phi56.3
2022-08-04 11:53:08,228 DEBUG find_def var='$phi56.3' stmt=bout[0] = $phi56.3
2022-08-04 11:53:08,228 DEBUG find_def_from_top label 56
2022-08-04 11:53:08,228 DEBUG insert phi node $phi56.3.4 = phi(incoming_values=[], incoming_blocks=[]) at 56
2022-08-04 11:53:08,228 DEBUG find_def_from_bottom label 0
2022-08-04 11:53:08,228 DEBUG incoming_def $phi56.3 = $0.6
2022-08-04 11:53:08,228 DEBUG find_def_from_bottom label 16
2022-08-04 11:53:08,228 DEBUG incoming_def $phi56.3.1 = $16.6
2022-08-04 11:53:08,229 DEBUG find_def_from_bottom label 44
2022-08-04 11:53:08,229 DEBUG incoming_def $phi56.3.3 = $44.6
2022-08-04 11:53:08,229 DEBUG find_def_from_bottom label 30
2022-08-04 11:53:08,229 DEBUG incoming_def $phi56.3.2 = $30.6
2022-08-04 11:53:08,229 DEBUG replaced with: bout[0] = $phi56.3.4
2022-08-04 11:53:08,229 DEBUG on stmt: $const56.4 = const(NoneType, None)
2022-08-04 11:53:08,229 DEBUG on stmt: $56.5 = cast(value=$const56.4)
2022-08-04 11:53:08,229 DEBUG on stmt: return $56.5
2022-08-04 11:53:08,377 DEBUG label 0:
    qin = arg(0, name=qin)                   ['qin']
    bout = arg(1, name=bout)                 ['bout']
    $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$0.1']
    $0.2 = getattr(value=$0.1, attr=isinf)   ['$0.1', '$0.2']
    $const0.4 = const(int, 0)                ['$const0.4']
    $0.5 = getitem(value=qin, index=$const0.4, fn=<built-in function getitem>) ['$0.5', '$const0.4', 'qin']
    $0.6 = call $0.2($0.5, func=$0.2, args=[Var($0.5, algebra.py:414)], kws=(), vararg=None) ['$0.2', '$0.5', '$0.6']
    bool14 = global(bool: <class 'bool'>)    ['bool14']
    $14pred = call bool14($0.6, func=bool14, args=(Var($0.6, algebra.py:414),), kws=(), vararg=None) ['$0.6', '$14pred', 'bool14']
    $phi56.3 = $0.6                          ['$0.6', '$phi56.3']
    branch $14pred, 56, 16                   ['$14pred']
label 16:
    $16.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$16.1']
    $16.2 = getattr(value=$16.1, attr=isinf) ['$16.1', '$16.2']
    $const16.4 = const(int, 1)               ['$const16.4']
    $16.5 = getitem(value=qin, index=$const16.4, fn=<built-in function getitem>) ['$16.5', '$const16.4', 'qin']
    $16.6 = call $16.2($16.5, func=$16.2, args=[Var($16.5, algebra.py:414)], kws=(), vararg=None) ['$16.2', '$16.5', '$16.6']
    bool28 = global(bool: <class 'bool'>)    ['bool28']
    $28pred = call bool28($16.6, func=bool28, args=(Var($16.6, algebra.py:414),), kws=(), vararg=None) ['$16.6', '$28pred', 'bool28']
    $phi56.3 = $16.6                         ['$16.6', '$phi56.3']
    branch $28pred, 56, 30                   ['$28pred']
label 30:
    $30.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$30.1']
    $30.2 = getattr(value=$30.1, attr=isinf) ['$30.1', '$30.2']
    $const30.4 = const(int, 2)               ['$const30.4']
    $30.5 = getitem(value=qin, index=$const30.4, fn=<built-in function getitem>) ['$30.5', '$const30.4', 'qin']
    $30.6 = call $30.2($30.5, func=$30.2, args=[Var($30.5, algebra.py:414)], kws=(), vararg=None) ['$30.2', '$30.5', '$30.6']
    bool42 = global(bool: <class 'bool'>)    ['bool42']
    $42pred = call bool42($30.6, func=bool42, args=(Var($30.6, algebra.py:414),), kws=(), vararg=None) ['$30.6', '$42pred', 'bool42']
    $phi56.3 = $30.6                         ['$30.6', '$phi56.3']
    branch $42pred, 56, 44                   ['$42pred']
label 44:
    $44.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$44.1']
    $44.2 = getattr(value=$44.1, attr=isinf) ['$44.1', '$44.2']
    $const44.4 = const(int, 3)               ['$const44.4']
    $44.5 = getitem(value=qin, index=$const44.4, fn=<built-in function getitem>) ['$44.5', '$const44.4', 'qin']
    $44.6 = call $44.2($44.5, func=$44.2, args=[Var($44.5, algebra.py:414)], kws=(), vararg=None) ['$44.2', '$44.5', '$44.6']
    $phi56.3 = $44.6                         ['$44.6', '$phi56.3']
    jump 56                                  []
label 56:
    $const56.2 = const(int, 0)               ['$const56.2']
    bout[$const56.2] = $phi56.3              ['$const56.2', '$phi56.3', 'bout']
    $const56.4 = const(NoneType, None)       ['$const56.4']
    $56.5 = cast(value=$const56.4)           ['$56.5', '$const56.4']
    return $56.5                             ['$56.5']

2022-08-04 11:53:08,388 DEBUG ==== SSA block analysis pass on 0
2022-08-04 11:53:08,389 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce605f60>
2022-08-04 11:53:08,389 DEBUG on stmt: qin = arg(0, name=qin)
2022-08-04 11:53:08,389 DEBUG on stmt: bout = arg(1, name=bout)
2022-08-04 11:53:08,389 DEBUG on stmt: $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:08,389 DEBUG on stmt: $0.2 = getattr(value=$0.1, attr=isinf)
2022-08-04 11:53:08,389 DEBUG on stmt: $const0.4 = const(int, 0)
2022-08-04 11:53:08,389 DEBUG on stmt: $0.5 = static_getitem(value=qin, index=0, index_var=$const0.4, fn=<built-in function getitem>)
2022-08-04 11:53:08,389 DEBUG on stmt: $0.6 = call $0.2($0.5, func=$0.2, args=[Var($0.5, algebra.py:414)], kws=(), vararg=None)
2022-08-04 11:53:08,389 DEBUG on stmt: bool14 = global(bool: <class 'bool'>)
2022-08-04 11:53:08,390 DEBUG on stmt: $14pred = call bool14($0.6, func=bool14, args=(Var($0.6, algebra.py:414),), kws=(), vararg=None)
2022-08-04 11:53:08,390 DEBUG on stmt: $phi56.3 = $0.6
2022-08-04 11:53:08,390 DEBUG on stmt: branch $14pred, 56, 16
2022-08-04 11:53:08,390 DEBUG ==== SSA block analysis pass on 16
2022-08-04 11:53:08,390 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce605f60>
2022-08-04 11:53:08,390 DEBUG on stmt: $16.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:08,390 DEBUG on stmt: $16.2 = getattr(value=$16.1, attr=isinf)
2022-08-04 11:53:08,390 DEBUG on stmt: $const16.4 = const(int, 1)
2022-08-04 11:53:08,390 DEBUG on stmt: $16.5 = static_getitem(value=qin, index=1, index_var=$const16.4, fn=<built-in function getitem>)
2022-08-04 11:53:08,390 DEBUG on stmt: $16.6 = call $16.2($16.5, func=$16.2, args=[Var($16.5, algebra.py:414)], kws=(), vararg=None)
2022-08-04 11:53:08,390 DEBUG on stmt: bool28 = global(bool: <class 'bool'>)
2022-08-04 11:53:08,390 DEBUG on stmt: $28pred = call bool28($16.6, func=bool28, args=(Var($16.6, algebra.py:414),), kws=(), vararg=None)
2022-08-04 11:53:08,391 DEBUG on stmt: $phi56.3 = $16.6
2022-08-04 11:53:08,391 DEBUG on stmt: branch $28pred, 56, 30
2022-08-04 11:53:08,391 DEBUG ==== SSA block analysis pass on 30
2022-08-04 11:53:08,391 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce605f60>
2022-08-04 11:53:08,391 DEBUG on stmt: $30.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:08,391 DEBUG on stmt: $30.2 = getattr(value=$30.1, attr=isinf)
2022-08-04 11:53:08,391 DEBUG on stmt: $const30.4 = const(int, 2)
2022-08-04 11:53:08,391 DEBUG on stmt: $30.5 = static_getitem(value=qin, index=2, index_var=$const30.4, fn=<built-in function getitem>)
2022-08-04 11:53:08,391 DEBUG on stmt: $30.6 = call $30.2($30.5, func=$30.2, args=[Var($30.5, algebra.py:414)], kws=(), vararg=None)
2022-08-04 11:53:08,391 DEBUG on stmt: bool42 = global(bool: <class 'bool'>)
2022-08-04 11:53:08,391 DEBUG on stmt: $42pred = call bool42($30.6, func=bool42, args=(Var($30.6, algebra.py:414),), kws=(), vararg=None)
2022-08-04 11:53:08,391 DEBUG on stmt: $phi56.3 = $30.6
2022-08-04 11:53:08,391 DEBUG on stmt: branch $42pred, 56, 44
2022-08-04 11:53:08,391 DEBUG ==== SSA block analysis pass on 44
2022-08-04 11:53:08,391 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce605f60>
2022-08-04 11:53:08,391 DEBUG on stmt: $44.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:08,391 DEBUG on stmt: $44.2 = getattr(value=$44.1, attr=isinf)
2022-08-04 11:53:08,391 DEBUG on stmt: $const44.4 = const(int, 3)
2022-08-04 11:53:08,392 DEBUG on stmt: $44.5 = static_getitem(value=qin, index=3, index_var=$const44.4, fn=<built-in function getitem>)
2022-08-04 11:53:08,392 DEBUG on stmt: $44.6 = call $44.2($44.5, func=$44.2, args=[Var($44.5, algebra.py:414)], kws=(), vararg=None)
2022-08-04 11:53:08,392 DEBUG on stmt: $phi56.3 = $44.6
2022-08-04 11:53:08,392 DEBUG on stmt: jump 56
2022-08-04 11:53:08,392 DEBUG ==== SSA block analysis pass on 56
2022-08-04 11:53:08,392 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce605f60>
2022-08-04 11:53:08,392 DEBUG on stmt: $const56.2 = const(int, 0)
2022-08-04 11:53:08,392 DEBUG on stmt: bout[0] = $phi56.3
2022-08-04 11:53:08,392 DEBUG on stmt: $const56.4 = const(NoneType, None)
2022-08-04 11:53:08,392 DEBUG on stmt: $56.5 = cast(value=$const56.4)
2022-08-04 11:53:08,392 DEBUG on stmt: return $56.5
2022-08-04 11:53:08,393 DEBUG defs defaultdict(<class 'list'>,
            {'$0.1': [<numba.core.ir.Assign object at 0x7fa2ce60c908>],
             '$0.2': [<numba.core.ir.Assign object at 0x7fa2ce60c9e8>],
             '$0.5': [<numba.core.ir.Assign object at 0x7fa2ce600748>],
             '$0.6': [<numba.core.ir.Assign object at 0x7fa2ce60cd30>],
             '$14pred': [<numba.core.ir.Assign object at 0x7fa2ce605a90>],
             '$16.1': [<numba.core.ir.Assign object at 0x7fa2ce6058d0>],
             '$16.2': [<numba.core.ir.Assign object at 0x7fa2ce6055c0>],
             '$16.5': [<numba.core.ir.Assign object at 0x7fa2ce600898>],
             '$16.6': [<numba.core.ir.Assign object at 0x7fa2ce6056a0>],
             '$28pred': [<numba.core.ir.Assign object at 0x7fa2ce605240>],
             '$30.1': [<numba.core.ir.Assign object at 0x7fa2ceac1780>],
             '$30.2': [<numba.core.ir.Assign object at 0x7fa2ced8bfd0>],
             '$30.5': [<numba.core.ir.Assign object at 0x7fa2ce6007b8>],
             '$30.6': [<numba.core.ir.Assign object at 0x7fa2ce600fd0>],
             '$42pred': [<numba.core.ir.Assign object at 0x7fa2ce6001d0>],
             '$44.1': [<numba.core.ir.Assign object at 0x7fa2ce600240>],
             '$44.2': [<numba.core.ir.Assign object at 0x7fa2ce600e80>],
             '$44.5': [<numba.core.ir.Assign object at 0x7fa2ce605eb8>],
             '$44.6': [<numba.core.ir.Assign object at 0x7fa2ce600c88>],
             '$56.5': [<numba.core.ir.Assign object at 0x7fa2ce6006d8>],
             '$const0.4': [<numba.core.ir.Assign object at 0x7fa2ce60cb70>],
             '$const16.4': [<numba.core.ir.Assign object at 0x7fa2ce605470>],
             '$const30.4': [<numba.core.ir.Assign object at 0x7fa2cedacb00>],
             '$const44.4': [<numba.core.ir.Assign object at 0x7fa2ce600470>],
             '$const56.2': [<numba.core.ir.Assign object at 0x7fa2ce6009e8>],
             '$const56.4': [<numba.core.ir.Assign object at 0x7fa2ce6005f8>],
             '$phi56.3': [<numba.core.ir.Assign object at 0x7fa2ce605828>,
                          <numba.core.ir.Assign object at 0x7fa2ce605550>,
                          <numba.core.ir.Assign object at 0x7fa2ceda9390>,
                          <numba.core.ir.Assign object at 0x7fa2ce6052b0>],
             'bool14': [<numba.core.ir.Assign object at 0x7fa2ce605b38>],
             'bool28': [<numba.core.ir.Assign object at 0x7fa2ce605160>],
             'bool42': [<numba.core.ir.Assign object at 0x7fa2ce600080>],
             'bout': [<numba.core.ir.Assign object at 0x7fa2ce60c828>],
             'qin': [<numba.core.ir.Assign object at 0x7fa2ce60c780>]})
2022-08-04 11:53:08,393 DEBUG SSA violators {'$phi56.3'}
2022-08-04 11:53:08,393 DEBUG Fix SSA violator on var $phi56.3
2022-08-04 11:53:08,393 DEBUG ==== SSA block rewrite pass on 0
2022-08-04 11:53:08,393 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce605f60>
2022-08-04 11:53:08,393 DEBUG on stmt: qin = arg(0, name=qin)
2022-08-04 11:53:08,393 DEBUG on stmt: bout = arg(1, name=bout)
2022-08-04 11:53:08,394 DEBUG on stmt: $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:08,394 DEBUG on stmt: $0.2 = getattr(value=$0.1, attr=isinf)
2022-08-04 11:53:08,394 DEBUG on stmt: $const0.4 = const(int, 0)
2022-08-04 11:53:08,394 DEBUG on stmt: $0.5 = static_getitem(value=qin, index=0, index_var=$const0.4, fn=<built-in function getitem>)
2022-08-04 11:53:08,394 DEBUG on stmt: $0.6 = call $0.2($0.5, func=$0.2, args=[Var($0.5, algebra.py:414)], kws=(), vararg=None)
2022-08-04 11:53:08,394 DEBUG on stmt: bool14 = global(bool: <class 'bool'>)
2022-08-04 11:53:08,394 DEBUG on stmt: $14pred = call bool14($0.6, func=bool14, args=(Var($0.6, algebra.py:414),), kws=(), vararg=None)
2022-08-04 11:53:08,394 DEBUG on stmt: $phi56.3 = $0.6
2022-08-04 11:53:08,395 DEBUG first assign: $phi56.3
2022-08-04 11:53:08,395 DEBUG replaced with: $phi56.3 = $0.6
2022-08-04 11:53:08,395 DEBUG on stmt: branch $14pred, 56, 16
2022-08-04 11:53:08,395 DEBUG ==== SSA block rewrite pass on 16
2022-08-04 11:53:08,395 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce605f60>
2022-08-04 11:53:08,396 DEBUG on stmt: $16.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:08,396 DEBUG on stmt: $16.2 = getattr(value=$16.1, attr=isinf)
2022-08-04 11:53:08,396 DEBUG on stmt: $const16.4 = const(int, 1)
2022-08-04 11:53:08,396 DEBUG on stmt: $16.5 = static_getitem(value=qin, index=1, index_var=$const16.4, fn=<built-in function getitem>)
2022-08-04 11:53:08,396 DEBUG on stmt: $16.6 = call $16.2($16.5, func=$16.2, args=[Var($16.5, algebra.py:414)], kws=(), vararg=None)
2022-08-04 11:53:08,397 DEBUG on stmt: bool28 = global(bool: <class 'bool'>)
2022-08-04 11:53:08,397 DEBUG on stmt: $28pred = call bool28($16.6, func=bool28, args=(Var($16.6, algebra.py:414),), kws=(), vararg=None)
2022-08-04 11:53:08,397 DEBUG on stmt: $phi56.3 = $16.6
2022-08-04 11:53:08,397 DEBUG replaced with: $phi56.3.1 = $16.6
2022-08-04 11:53:08,397 DEBUG on stmt: branch $28pred, 56, 30
2022-08-04 11:53:08,397 DEBUG ==== SSA block rewrite pass on 30
2022-08-04 11:53:08,397 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce605f60>
2022-08-04 11:53:08,398 DEBUG on stmt: $30.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:08,398 DEBUG on stmt: $30.2 = getattr(value=$30.1, attr=isinf)
2022-08-04 11:53:08,398 DEBUG on stmt: $const30.4 = const(int, 2)
2022-08-04 11:53:08,398 DEBUG on stmt: $30.5 = static_getitem(value=qin, index=2, index_var=$const30.4, fn=<built-in function getitem>)
2022-08-04 11:53:08,398 DEBUG on stmt: $30.6 = call $30.2($30.5, func=$30.2, args=[Var($30.5, algebra.py:414)], kws=(), vararg=None)
2022-08-04 11:53:08,398 DEBUG on stmt: bool42 = global(bool: <class 'bool'>)
2022-08-04 11:53:08,398 DEBUG on stmt: $42pred = call bool42($30.6, func=bool42, args=(Var($30.6, algebra.py:414),), kws=(), vararg=None)
2022-08-04 11:53:08,398 DEBUG on stmt: $phi56.3 = $30.6
2022-08-04 11:53:08,398 DEBUG replaced with: $phi56.3.2 = $30.6
2022-08-04 11:53:08,398 DEBUG on stmt: branch $42pred, 56, 44
2022-08-04 11:53:08,398 DEBUG ==== SSA block rewrite pass on 44
2022-08-04 11:53:08,399 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce605f60>
2022-08-04 11:53:08,399 DEBUG on stmt: $44.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:08,399 DEBUG on stmt: $44.2 = getattr(value=$44.1, attr=isinf)
2022-08-04 11:53:08,399 DEBUG on stmt: $const44.4 = const(int, 3)
2022-08-04 11:53:08,399 DEBUG on stmt: $44.5 = static_getitem(value=qin, index=3, index_var=$const44.4, fn=<built-in function getitem>)
2022-08-04 11:53:08,399 DEBUG on stmt: $44.6 = call $44.2($44.5, func=$44.2, args=[Var($44.5, algebra.py:414)], kws=(), vararg=None)
2022-08-04 11:53:08,400 DEBUG on stmt: $phi56.3 = $44.6
2022-08-04 11:53:08,400 DEBUG replaced with: $phi56.3.3 = $44.6
2022-08-04 11:53:08,400 DEBUG on stmt: jump 56
2022-08-04 11:53:08,400 DEBUG ==== SSA block rewrite pass on 56
2022-08-04 11:53:08,400 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce605f60>
2022-08-04 11:53:08,400 DEBUG on stmt: $const56.2 = const(int, 0)
2022-08-04 11:53:08,401 DEBUG on stmt: bout[0] = $phi56.3
2022-08-04 11:53:08,401 DEBUG on stmt: $const56.4 = const(NoneType, None)
2022-08-04 11:53:08,401 DEBUG on stmt: $56.5 = cast(value=$const56.4)
2022-08-04 11:53:08,401 DEBUG on stmt: return $56.5
2022-08-04 11:53:08,401 DEBUG Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7fa2ce9b2e48>],
             16: [<numba.core.ir.Assign object at 0x7fa2ce9b2eb8>],
             30: [<numba.core.ir.Assign object at 0x7fa2ce9b2ef0>],
             44: [<numba.core.ir.Assign object at 0x7fa2ce9b2748>]})
2022-08-04 11:53:08,401 DEBUG ==== SSA block rewrite pass on 0
2022-08-04 11:53:08,402 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce9b2710>
2022-08-04 11:53:08,402 DEBUG on stmt: qin = arg(0, name=qin)
2022-08-04 11:53:08,402 DEBUG on stmt: bout = arg(1, name=bout)
2022-08-04 11:53:08,402 DEBUG on stmt: $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:08,402 DEBUG on stmt: $0.2 = getattr(value=$0.1, attr=isinf)
2022-08-04 11:53:08,402 DEBUG on stmt: $const0.4 = const(int, 0)
2022-08-04 11:53:08,402 DEBUG on stmt: $0.5 = static_getitem(value=qin, index=0, index_var=$const0.4, fn=<built-in function getitem>)
2022-08-04 11:53:08,404 DEBUG on stmt: $0.6 = call $0.2($0.5, func=$0.2, args=[Var($0.5, algebra.py:414)], kws=(), vararg=None)
2022-08-04 11:53:08,404 DEBUG on stmt: bool14 = global(bool: <class 'bool'>)
2022-08-04 11:53:08,404 DEBUG on stmt: $14pred = call bool14($0.6, func=bool14, args=(Var($0.6, algebra.py:414),), kws=(), vararg=None)
2022-08-04 11:53:08,405 DEBUG on stmt: $phi56.3 = $0.6
2022-08-04 11:53:08,405 DEBUG on stmt: branch $14pred, 56, 16
2022-08-04 11:53:08,405 DEBUG ==== SSA block rewrite pass on 16
2022-08-04 11:53:08,405 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce9b2710>
2022-08-04 11:53:08,405 DEBUG on stmt: $16.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:08,405 DEBUG on stmt: $16.2 = getattr(value=$16.1, attr=isinf)
2022-08-04 11:53:08,405 DEBUG on stmt: $const16.4 = const(int, 1)
2022-08-04 11:53:08,405 DEBUG on stmt: $16.5 = static_getitem(value=qin, index=1, index_var=$const16.4, fn=<built-in function getitem>)
2022-08-04 11:53:08,405 DEBUG on stmt: $16.6 = call $16.2($16.5, func=$16.2, args=[Var($16.5, algebra.py:414)], kws=(), vararg=None)
2022-08-04 11:53:08,405 DEBUG on stmt: bool28 = global(bool: <class 'bool'>)
2022-08-04 11:53:08,405 DEBUG on stmt: $28pred = call bool28($16.6, func=bool28, args=(Var($16.6, algebra.py:414),), kws=(), vararg=None)
2022-08-04 11:53:08,405 DEBUG on stmt: $phi56.3.1 = $16.6
2022-08-04 11:53:08,405 DEBUG on stmt: branch $28pred, 56, 30
2022-08-04 11:53:08,406 DEBUG ==== SSA block rewrite pass on 30
2022-08-04 11:53:08,406 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce9b2710>
2022-08-04 11:53:08,406 DEBUG on stmt: $30.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:08,406 DEBUG on stmt: $30.2 = getattr(value=$30.1, attr=isinf)
2022-08-04 11:53:08,406 DEBUG on stmt: $const30.4 = const(int, 2)
2022-08-04 11:53:08,406 DEBUG on stmt: $30.5 = static_getitem(value=qin, index=2, index_var=$const30.4, fn=<built-in function getitem>)
2022-08-04 11:53:08,406 DEBUG on stmt: $30.6 = call $30.2($30.5, func=$30.2, args=[Var($30.5, algebra.py:414)], kws=(), vararg=None)
2022-08-04 11:53:08,406 DEBUG on stmt: bool42 = global(bool: <class 'bool'>)
2022-08-04 11:53:08,406 DEBUG on stmt: $42pred = call bool42($30.6, func=bool42, args=(Var($30.6, algebra.py:414),), kws=(), vararg=None)
2022-08-04 11:53:08,406 DEBUG on stmt: $phi56.3.2 = $30.6
2022-08-04 11:53:08,406 DEBUG on stmt: branch $42pred, 56, 44
2022-08-04 11:53:08,406 DEBUG ==== SSA block rewrite pass on 44
2022-08-04 11:53:08,406 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce9b2710>
2022-08-04 11:53:08,407 DEBUG on stmt: $44.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:08,407 DEBUG on stmt: $44.2 = getattr(value=$44.1, attr=isinf)
2022-08-04 11:53:08,407 DEBUG on stmt: $const44.4 = const(int, 3)
2022-08-04 11:53:08,407 DEBUG on stmt: $44.5 = static_getitem(value=qin, index=3, index_var=$const44.4, fn=<built-in function getitem>)
2022-08-04 11:53:08,407 DEBUG on stmt: $44.6 = call $44.2($44.5, func=$44.2, args=[Var($44.5, algebra.py:414)], kws=(), vararg=None)
2022-08-04 11:53:08,407 DEBUG on stmt: $phi56.3.3 = $44.6
2022-08-04 11:53:08,407 DEBUG on stmt: jump 56
2022-08-04 11:53:08,407 DEBUG ==== SSA block rewrite pass on 56
2022-08-04 11:53:08,407 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2ce9b2710>
2022-08-04 11:53:08,407 DEBUG on stmt: $const56.2 = const(int, 0)
2022-08-04 11:53:08,407 DEBUG on stmt: bout[0] = $phi56.3
2022-08-04 11:53:08,407 DEBUG find_def var='$phi56.3' stmt=bout[0] = $phi56.3
2022-08-04 11:53:08,407 DEBUG find_def_from_top label 56
2022-08-04 11:53:08,407 DEBUG insert phi node $phi56.3.4 = phi(incoming_values=[], incoming_blocks=[]) at 56
2022-08-04 11:53:08,407 DEBUG find_def_from_bottom label 0
2022-08-04 11:53:08,408 DEBUG incoming_def $phi56.3 = $0.6
2022-08-04 11:53:08,408 DEBUG find_def_from_bottom label 16
2022-08-04 11:53:08,408 DEBUG incoming_def $phi56.3.1 = $16.6
2022-08-04 11:53:08,408 DEBUG find_def_from_bottom label 44
2022-08-04 11:53:08,408 DEBUG incoming_def $phi56.3.3 = $44.6
2022-08-04 11:53:08,408 DEBUG find_def_from_bottom label 30
2022-08-04 11:53:08,408 DEBUG incoming_def $phi56.3.2 = $30.6
2022-08-04 11:53:08,408 DEBUG replaced with: bout[0] = $phi56.3.4
2022-08-04 11:53:08,408 DEBUG on stmt: $const56.4 = const(NoneType, None)
2022-08-04 11:53:08,408 DEBUG on stmt: $56.5 = cast(value=$const56.4)
2022-08-04 11:53:08,408 DEBUG on stmt: return $56.5
2022-08-04 11:53:08,560 DEBUG label 0:
    qin = arg(0, name=qin)                   ['qin']
    bout = arg(1, name=bout)                 ['bout']
    $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$0.1']
    $0.2 = getattr(value=$0.1, attr=isnan)   ['$0.1', '$0.2']
    $const0.4 = const(int, 0)                ['$const0.4']
    $0.5 = getitem(value=qin, index=$const0.4, fn=<built-in function getitem>) ['$0.5', '$const0.4', 'qin']
    $0.6 = call $0.2($0.5, func=$0.2, args=[Var($0.5, algebra.py:419)], kws=(), vararg=None) ['$0.2', '$0.5', '$0.6']
    bool14 = global(bool: <class 'bool'>)    ['bool14']
    $14pred = call bool14($0.6, func=bool14, args=(Var($0.6, algebra.py:419),), kws=(), vararg=None) ['$0.6', '$14pred', 'bool14']
    $phi56.3 = $0.6                          ['$0.6', '$phi56.3']
    branch $14pred, 56, 16                   ['$14pred']
label 16:
    $16.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$16.1']
    $16.2 = getattr(value=$16.1, attr=isnan) ['$16.1', '$16.2']
    $const16.4 = const(int, 1)               ['$const16.4']
    $16.5 = getitem(value=qin, index=$const16.4, fn=<built-in function getitem>) ['$16.5', '$const16.4', 'qin']
    $16.6 = call $16.2($16.5, func=$16.2, args=[Var($16.5, algebra.py:419)], kws=(), vararg=None) ['$16.2', '$16.5', '$16.6']
    bool28 = global(bool: <class 'bool'>)    ['bool28']
    $28pred = call bool28($16.6, func=bool28, args=(Var($16.6, algebra.py:419),), kws=(), vararg=None) ['$16.6', '$28pred', 'bool28']
    $phi56.3 = $16.6                         ['$16.6', '$phi56.3']
    branch $28pred, 56, 30                   ['$28pred']
label 30:
    $30.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$30.1']
    $30.2 = getattr(value=$30.1, attr=isnan) ['$30.1', '$30.2']
    $const30.4 = const(int, 2)               ['$const30.4']
    $30.5 = getitem(value=qin, index=$const30.4, fn=<built-in function getitem>) ['$30.5', '$const30.4', 'qin']
    $30.6 = call $30.2($30.5, func=$30.2, args=[Var($30.5, algebra.py:419)], kws=(), vararg=None) ['$30.2', '$30.5', '$30.6']
    bool42 = global(bool: <class 'bool'>)    ['bool42']
    $42pred = call bool42($30.6, func=bool42, args=(Var($30.6, algebra.py:419),), kws=(), vararg=None) ['$30.6', '$42pred', 'bool42']
    $phi56.3 = $30.6                         ['$30.6', '$phi56.3']
    branch $42pred, 56, 44                   ['$42pred']
label 44:
    $44.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$44.1']
    $44.2 = getattr(value=$44.1, attr=isnan) ['$44.1', '$44.2']
    $const44.4 = const(int, 3)               ['$const44.4']
    $44.5 = getitem(value=qin, index=$const44.4, fn=<built-in function getitem>) ['$44.5', '$const44.4', 'qin']
    $44.6 = call $44.2($44.5, func=$44.2, args=[Var($44.5, algebra.py:419)], kws=(), vararg=None) ['$44.2', '$44.5', '$44.6']
    $phi56.3 = $44.6                         ['$44.6', '$phi56.3']
    jump 56                                  []
label 56:
    $const56.2 = const(int, 0)               ['$const56.2']
    bout[$const56.2] = $phi56.3              ['$const56.2', '$phi56.3', 'bout']
    $const56.4 = const(NoneType, None)       ['$const56.4']
    $56.5 = cast(value=$const56.4)           ['$56.5', '$const56.4']
    return $56.5                             ['$56.5']

2022-08-04 11:53:08,568 DEBUG ==== SSA block analysis pass on 0
2022-08-04 11:53:08,569 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce9e0cf8>
2022-08-04 11:53:08,569 DEBUG on stmt: qin = arg(0, name=qin)
2022-08-04 11:53:08,569 DEBUG on stmt: bout = arg(1, name=bout)
2022-08-04 11:53:08,569 DEBUG on stmt: $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:08,569 DEBUG on stmt: $0.2 = getattr(value=$0.1, attr=isnan)
2022-08-04 11:53:08,569 DEBUG on stmt: $const0.4 = const(int, 0)
2022-08-04 11:53:08,569 DEBUG on stmt: $0.5 = static_getitem(value=qin, index=0, index_var=$const0.4, fn=<built-in function getitem>)
2022-08-04 11:53:08,569 DEBUG on stmt: $0.6 = call $0.2($0.5, func=$0.2, args=[Var($0.5, algebra.py:419)], kws=(), vararg=None)
2022-08-04 11:53:08,569 DEBUG on stmt: bool14 = global(bool: <class 'bool'>)
2022-08-04 11:53:08,569 DEBUG on stmt: $14pred = call bool14($0.6, func=bool14, args=(Var($0.6, algebra.py:419),), kws=(), vararg=None)
2022-08-04 11:53:08,569 DEBUG on stmt: $phi56.3 = $0.6
2022-08-04 11:53:08,569 DEBUG on stmt: branch $14pred, 56, 16
2022-08-04 11:53:08,569 DEBUG ==== SSA block analysis pass on 16
2022-08-04 11:53:08,570 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce9e0cf8>
2022-08-04 11:53:08,570 DEBUG on stmt: $16.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:08,570 DEBUG on stmt: $16.2 = getattr(value=$16.1, attr=isnan)
2022-08-04 11:53:08,570 DEBUG on stmt: $const16.4 = const(int, 1)
2022-08-04 11:53:08,570 DEBUG on stmt: $16.5 = static_getitem(value=qin, index=1, index_var=$const16.4, fn=<built-in function getitem>)
2022-08-04 11:53:08,570 DEBUG on stmt: $16.6 = call $16.2($16.5, func=$16.2, args=[Var($16.5, algebra.py:419)], kws=(), vararg=None)
2022-08-04 11:53:08,570 DEBUG on stmt: bool28 = global(bool: <class 'bool'>)
2022-08-04 11:53:08,570 DEBUG on stmt: $28pred = call bool28($16.6, func=bool28, args=(Var($16.6, algebra.py:419),), kws=(), vararg=None)
2022-08-04 11:53:08,570 DEBUG on stmt: $phi56.3 = $16.6
2022-08-04 11:53:08,570 DEBUG on stmt: branch $28pred, 56, 30
2022-08-04 11:53:08,570 DEBUG ==== SSA block analysis pass on 30
2022-08-04 11:53:08,571 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce9e0cf8>
2022-08-04 11:53:08,571 DEBUG on stmt: $30.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:08,571 DEBUG on stmt: $30.2 = getattr(value=$30.1, attr=isnan)
2022-08-04 11:53:08,571 DEBUG on stmt: $const30.4 = const(int, 2)
2022-08-04 11:53:08,571 DEBUG on stmt: $30.5 = static_getitem(value=qin, index=2, index_var=$const30.4, fn=<built-in function getitem>)
2022-08-04 11:53:08,571 DEBUG on stmt: $30.6 = call $30.2($30.5, func=$30.2, args=[Var($30.5, algebra.py:419)], kws=(), vararg=None)
2022-08-04 11:53:08,571 DEBUG on stmt: bool42 = global(bool: <class 'bool'>)
2022-08-04 11:53:08,571 DEBUG on stmt: $42pred = call bool42($30.6, func=bool42, args=(Var($30.6, algebra.py:419),), kws=(), vararg=None)
2022-08-04 11:53:08,571 DEBUG on stmt: $phi56.3 = $30.6
2022-08-04 11:53:08,571 DEBUG on stmt: branch $42pred, 56, 44
2022-08-04 11:53:08,572 DEBUG ==== SSA block analysis pass on 44
2022-08-04 11:53:08,572 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce9e0cf8>
2022-08-04 11:53:08,572 DEBUG on stmt: $44.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:08,572 DEBUG on stmt: $44.2 = getattr(value=$44.1, attr=isnan)
2022-08-04 11:53:08,572 DEBUG on stmt: $const44.4 = const(int, 3)
2022-08-04 11:53:08,572 DEBUG on stmt: $44.5 = static_getitem(value=qin, index=3, index_var=$const44.4, fn=<built-in function getitem>)
2022-08-04 11:53:08,572 DEBUG on stmt: $44.6 = call $44.2($44.5, func=$44.2, args=[Var($44.5, algebra.py:419)], kws=(), vararg=None)
2022-08-04 11:53:08,572 DEBUG on stmt: $phi56.3 = $44.6
2022-08-04 11:53:08,572 DEBUG on stmt: jump 56
2022-08-04 11:53:08,572 DEBUG ==== SSA block analysis pass on 56
2022-08-04 11:53:08,572 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce9e0cf8>
2022-08-04 11:53:08,572 DEBUG on stmt: $const56.2 = const(int, 0)
2022-08-04 11:53:08,572 DEBUG on stmt: bout[0] = $phi56.3
2022-08-04 11:53:08,572 DEBUG on stmt: $const56.4 = const(NoneType, None)
2022-08-04 11:53:08,573 DEBUG on stmt: $56.5 = cast(value=$const56.4)
2022-08-04 11:53:08,573 DEBUG on stmt: return $56.5
2022-08-04 11:53:08,573 DEBUG defs defaultdict(<class 'list'>,
            {'$0.1': [<numba.core.ir.Assign object at 0x7fa2ce9ca9e8>],
             '$0.2': [<numba.core.ir.Assign object at 0x7fa2ce9caac8>],
             '$0.5': [<numba.core.ir.Assign object at 0x7fa2cecf27f0>],
             '$0.6': [<numba.core.ir.Assign object at 0x7fa2ce9cae10>],
             '$14pred': [<numba.core.ir.Assign object at 0x7fa2cecfb048>],
             '$16.1': [<numba.core.ir.Assign object at 0x7fa2cecfb208>],
             '$16.2': [<numba.core.ir.Assign object at 0x7fa2cecfb2e8>],
             '$16.5': [<numba.core.ir.Assign object at 0x7fa2cecf2668>],
             '$16.6': [<numba.core.ir.Assign object at 0x7fa2cecfb5f8>],
             '$28pred': [<numba.core.ir.Assign object at 0x7fa2cecfb7f0>],
             '$30.1': [<numba.core.ir.Assign object at 0x7fa2cecfb978>],
             '$30.2': [<numba.core.ir.Assign object at 0x7fa2cecfba58>],
             '$30.5': [<numba.core.ir.Assign object at 0x7fa2ce9ca438>],
             '$30.6': [<numba.core.ir.Assign object at 0x7fa2cecfbda0>],
             '$42pred': [<numba.core.ir.Assign object at 0x7fa2cecfbf98>],
             '$44.1': [<numba.core.ir.Assign object at 0x7fa2cecf2c50>],
             '$44.2': [<numba.core.ir.Assign object at 0x7fa2cecf25f8>],
             '$44.5': [<numba.core.ir.Assign object at 0x7fa2ce9ca160>],
             '$44.6': [<numba.core.ir.Assign object at 0x7fa2cecf24a8>],
             '$56.5': [<numba.core.ir.Assign object at 0x7fa2cecf2eb8>],
             '$const0.4': [<numba.core.ir.Assign object at 0x7fa2ce9cac50>],
             '$const16.4': [<numba.core.ir.Assign object at 0x7fa2cecfb470>],
             '$const30.4': [<numba.core.ir.Assign object at 0x7fa2cecfbbe0>],
             '$const44.4': [<numba.core.ir.Assign object at 0x7fa2cecf22b0>],
             '$const56.2': [<numba.core.ir.Assign object at 0x7fa2cecf2a90>],
             '$const56.4': [<numba.core.ir.Assign object at 0x7fa2cecf2898>],
             '$phi56.3': [<numba.core.ir.Assign object at 0x7fa2ce9ca7b8>,
                          <numba.core.ir.Assign object at 0x7fa2ce9ca780>,
                          <numba.core.ir.Assign object at 0x7fa2cecfbb00>,
                          <numba.core.ir.Assign object at 0x7fa2cecfb898>],
             'bool14': [<numba.core.ir.Assign object at 0x7fa2ce9caf28>],
             'bool28': [<numba.core.ir.Assign object at 0x7fa2cecfb710>],
             'bool42': [<numba.core.ir.Assign object at 0x7fa2cecfbeb8>],
             'bout': [<numba.core.ir.Assign object at 0x7fa2ce9ca908>],
             'qin': [<numba.core.ir.Assign object at 0x7fa2ce9ca860>]})
2022-08-04 11:53:08,573 DEBUG SSA violators {'$phi56.3'}
2022-08-04 11:53:08,573 DEBUG Fix SSA violator on var $phi56.3
2022-08-04 11:53:08,573 DEBUG ==== SSA block rewrite pass on 0
2022-08-04 11:53:08,573 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce9e0cf8>
2022-08-04 11:53:08,573 DEBUG on stmt: qin = arg(0, name=qin)
2022-08-04 11:53:08,573 DEBUG on stmt: bout = arg(1, name=bout)
2022-08-04 11:53:08,574 DEBUG on stmt: $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:08,574 DEBUG on stmt: $0.2 = getattr(value=$0.1, attr=isnan)
2022-08-04 11:53:08,574 DEBUG on stmt: $const0.4 = const(int, 0)
2022-08-04 11:53:08,574 DEBUG on stmt: $0.5 = static_getitem(value=qin, index=0, index_var=$const0.4, fn=<built-in function getitem>)
2022-08-04 11:53:08,574 DEBUG on stmt: $0.6 = call $0.2($0.5, func=$0.2, args=[Var($0.5, algebra.py:419)], kws=(), vararg=None)
2022-08-04 11:53:08,574 DEBUG on stmt: bool14 = global(bool: <class 'bool'>)
2022-08-04 11:53:08,574 DEBUG on stmt: $14pred = call bool14($0.6, func=bool14, args=(Var($0.6, algebra.py:419),), kws=(), vararg=None)
2022-08-04 11:53:08,574 DEBUG on stmt: $phi56.3 = $0.6
2022-08-04 11:53:08,574 DEBUG first assign: $phi56.3
2022-08-04 11:53:08,574 DEBUG replaced with: $phi56.3 = $0.6
2022-08-04 11:53:08,574 DEBUG on stmt: branch $14pred, 56, 16
2022-08-04 11:53:08,575 DEBUG ==== SSA block rewrite pass on 16
2022-08-04 11:53:08,575 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce9e0cf8>
2022-08-04 11:53:08,575 DEBUG on stmt: $16.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:08,575 DEBUG on stmt: $16.2 = getattr(value=$16.1, attr=isnan)
2022-08-04 11:53:08,575 DEBUG on stmt: $const16.4 = const(int, 1)
2022-08-04 11:53:08,575 DEBUG on stmt: $16.5 = static_getitem(value=qin, index=1, index_var=$const16.4, fn=<built-in function getitem>)
2022-08-04 11:53:08,575 DEBUG on stmt: $16.6 = call $16.2($16.5, func=$16.2, args=[Var($16.5, algebra.py:419)], kws=(), vararg=None)
2022-08-04 11:53:08,575 DEBUG on stmt: bool28 = global(bool: <class 'bool'>)
2022-08-04 11:53:08,575 DEBUG on stmt: $28pred = call bool28($16.6, func=bool28, args=(Var($16.6, algebra.py:419),), kws=(), vararg=None)
2022-08-04 11:53:08,575 DEBUG on stmt: $phi56.3 = $16.6
2022-08-04 11:53:08,575 DEBUG replaced with: $phi56.3.1 = $16.6
2022-08-04 11:53:08,575 DEBUG on stmt: branch $28pred, 56, 30
2022-08-04 11:53:08,576 DEBUG ==== SSA block rewrite pass on 30
2022-08-04 11:53:08,576 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce9e0cf8>
2022-08-04 11:53:08,576 DEBUG on stmt: $30.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:08,576 DEBUG on stmt: $30.2 = getattr(value=$30.1, attr=isnan)
2022-08-04 11:53:08,576 DEBUG on stmt: $const30.4 = const(int, 2)
2022-08-04 11:53:08,576 DEBUG on stmt: $30.5 = static_getitem(value=qin, index=2, index_var=$const30.4, fn=<built-in function getitem>)
2022-08-04 11:53:08,576 DEBUG on stmt: $30.6 = call $30.2($30.5, func=$30.2, args=[Var($30.5, algebra.py:419)], kws=(), vararg=None)
2022-08-04 11:53:08,576 DEBUG on stmt: bool42 = global(bool: <class 'bool'>)
2022-08-04 11:53:08,576 DEBUG on stmt: $42pred = call bool42($30.6, func=bool42, args=(Var($30.6, algebra.py:419),), kws=(), vararg=None)
2022-08-04 11:53:08,576 DEBUG on stmt: $phi56.3 = $30.6
2022-08-04 11:53:08,576 DEBUG replaced with: $phi56.3.2 = $30.6
2022-08-04 11:53:08,576 DEBUG on stmt: branch $42pred, 56, 44
2022-08-04 11:53:08,576 DEBUG ==== SSA block rewrite pass on 44
2022-08-04 11:53:08,576 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce9e0cf8>
2022-08-04 11:53:08,577 DEBUG on stmt: $44.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:08,577 DEBUG on stmt: $44.2 = getattr(value=$44.1, attr=isnan)
2022-08-04 11:53:08,577 DEBUG on stmt: $const44.4 = const(int, 3)
2022-08-04 11:53:08,577 DEBUG on stmt: $44.5 = static_getitem(value=qin, index=3, index_var=$const44.4, fn=<built-in function getitem>)
2022-08-04 11:53:08,577 DEBUG on stmt: $44.6 = call $44.2($44.5, func=$44.2, args=[Var($44.5, algebra.py:419)], kws=(), vararg=None)
2022-08-04 11:53:08,577 DEBUG on stmt: $phi56.3 = $44.6
2022-08-04 11:53:08,577 DEBUG replaced with: $phi56.3.3 = $44.6
2022-08-04 11:53:08,577 DEBUG on stmt: jump 56
2022-08-04 11:53:08,577 DEBUG ==== SSA block rewrite pass on 56
2022-08-04 11:53:08,577 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce9e0cf8>
2022-08-04 11:53:08,577 DEBUG on stmt: $const56.2 = const(int, 0)
2022-08-04 11:53:08,577 DEBUG on stmt: bout[0] = $phi56.3
2022-08-04 11:53:08,577 DEBUG on stmt: $const56.4 = const(NoneType, None)
2022-08-04 11:53:08,577 DEBUG on stmt: $56.5 = cast(value=$const56.4)
2022-08-04 11:53:08,577 DEBUG on stmt: return $56.5
2022-08-04 11:53:08,577 DEBUG Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7fa2cecf2048>],
             16: [<numba.core.ir.Assign object at 0x7fa2cecf2e48>],
             30: [<numba.core.ir.Assign object at 0x7fa2cecf2748>],
             44: [<numba.core.ir.Assign object at 0x7fa2cecf2198>]})
2022-08-04 11:53:08,578 DEBUG ==== SSA block rewrite pass on 0
2022-08-04 11:53:08,578 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cecf2f60>
2022-08-04 11:53:08,578 DEBUG on stmt: qin = arg(0, name=qin)
2022-08-04 11:53:08,578 DEBUG on stmt: bout = arg(1, name=bout)
2022-08-04 11:53:08,578 DEBUG on stmt: $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:08,578 DEBUG on stmt: $0.2 = getattr(value=$0.1, attr=isnan)
2022-08-04 11:53:08,578 DEBUG on stmt: $const0.4 = const(int, 0)
2022-08-04 11:53:08,579 DEBUG on stmt: $0.5 = static_getitem(value=qin, index=0, index_var=$const0.4, fn=<built-in function getitem>)
2022-08-04 11:53:08,579 DEBUG on stmt: $0.6 = call $0.2($0.5, func=$0.2, args=[Var($0.5, algebra.py:419)], kws=(), vararg=None)
2022-08-04 11:53:08,579 DEBUG on stmt: bool14 = global(bool: <class 'bool'>)
2022-08-04 11:53:08,579 DEBUG on stmt: $14pred = call bool14($0.6, func=bool14, args=(Var($0.6, algebra.py:419),), kws=(), vararg=None)
2022-08-04 11:53:08,579 DEBUG on stmt: $phi56.3 = $0.6
2022-08-04 11:53:08,579 DEBUG on stmt: branch $14pred, 56, 16
2022-08-04 11:53:08,579 DEBUG ==== SSA block rewrite pass on 16
2022-08-04 11:53:08,579 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cecf2f60>
2022-08-04 11:53:08,579 DEBUG on stmt: $16.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:08,579 DEBUG on stmt: $16.2 = getattr(value=$16.1, attr=isnan)
2022-08-04 11:53:08,579 DEBUG on stmt: $const16.4 = const(int, 1)
2022-08-04 11:53:08,580 DEBUG on stmt: $16.5 = static_getitem(value=qin, index=1, index_var=$const16.4, fn=<built-in function getitem>)
2022-08-04 11:53:08,580 DEBUG on stmt: $16.6 = call $16.2($16.5, func=$16.2, args=[Var($16.5, algebra.py:419)], kws=(), vararg=None)
2022-08-04 11:53:08,580 DEBUG on stmt: bool28 = global(bool: <class 'bool'>)
2022-08-04 11:53:08,580 DEBUG on stmt: $28pred = call bool28($16.6, func=bool28, args=(Var($16.6, algebra.py:419),), kws=(), vararg=None)
2022-08-04 11:53:08,580 DEBUG on stmt: $phi56.3.1 = $16.6
2022-08-04 11:53:08,580 DEBUG on stmt: branch $28pred, 56, 30
2022-08-04 11:53:08,580 DEBUG ==== SSA block rewrite pass on 30
2022-08-04 11:53:08,580 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cecf2f60>
2022-08-04 11:53:08,580 DEBUG on stmt: $30.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:08,580 DEBUG on stmt: $30.2 = getattr(value=$30.1, attr=isnan)
2022-08-04 11:53:08,581 DEBUG on stmt: $const30.4 = const(int, 2)
2022-08-04 11:53:08,581 DEBUG on stmt: $30.5 = static_getitem(value=qin, index=2, index_var=$const30.4, fn=<built-in function getitem>)
2022-08-04 11:53:08,581 DEBUG on stmt: $30.6 = call $30.2($30.5, func=$30.2, args=[Var($30.5, algebra.py:419)], kws=(), vararg=None)
2022-08-04 11:53:08,581 DEBUG on stmt: bool42 = global(bool: <class 'bool'>)
2022-08-04 11:53:08,581 DEBUG on stmt: $42pred = call bool42($30.6, func=bool42, args=(Var($30.6, algebra.py:419),), kws=(), vararg=None)
2022-08-04 11:53:08,581 DEBUG on stmt: $phi56.3.2 = $30.6
2022-08-04 11:53:08,581 DEBUG on stmt: branch $42pred, 56, 44
2022-08-04 11:53:08,581 DEBUG ==== SSA block rewrite pass on 44
2022-08-04 11:53:08,581 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cecf2f60>
2022-08-04 11:53:08,581 DEBUG on stmt: $44.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:08,582 DEBUG on stmt: $44.2 = getattr(value=$44.1, attr=isnan)
2022-08-04 11:53:08,582 DEBUG on stmt: $const44.4 = const(int, 3)
2022-08-04 11:53:08,582 DEBUG on stmt: $44.5 = static_getitem(value=qin, index=3, index_var=$const44.4, fn=<built-in function getitem>)
2022-08-04 11:53:08,582 DEBUG on stmt: $44.6 = call $44.2($44.5, func=$44.2, args=[Var($44.5, algebra.py:419)], kws=(), vararg=None)
2022-08-04 11:53:08,582 DEBUG on stmt: $phi56.3.3 = $44.6
2022-08-04 11:53:08,582 DEBUG on stmt: jump 56
2022-08-04 11:53:08,583 DEBUG ==== SSA block rewrite pass on 56
2022-08-04 11:53:08,583 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cecf2f60>
2022-08-04 11:53:08,583 DEBUG on stmt: $const56.2 = const(int, 0)
2022-08-04 11:53:08,583 DEBUG on stmt: bout[0] = $phi56.3
2022-08-04 11:53:08,583 DEBUG find_def var='$phi56.3' stmt=bout[0] = $phi56.3
2022-08-04 11:53:08,583 DEBUG find_def_from_top label 56
2022-08-04 11:53:08,583 DEBUG insert phi node $phi56.3.4 = phi(incoming_values=[], incoming_blocks=[]) at 56
2022-08-04 11:53:08,583 DEBUG find_def_from_bottom label 0
2022-08-04 11:53:08,583 DEBUG incoming_def $phi56.3 = $0.6
2022-08-04 11:53:08,583 DEBUG find_def_from_bottom label 16
2022-08-04 11:53:08,583 DEBUG incoming_def $phi56.3.1 = $16.6
2022-08-04 11:53:08,584 DEBUG find_def_from_bottom label 44
2022-08-04 11:53:08,584 DEBUG incoming_def $phi56.3.3 = $44.6
2022-08-04 11:53:08,584 DEBUG find_def_from_bottom label 30
2022-08-04 11:53:08,584 DEBUG incoming_def $phi56.3.2 = $30.6
2022-08-04 11:53:08,584 DEBUG replaced with: bout[0] = $phi56.3.4
2022-08-04 11:53:08,584 DEBUG on stmt: $const56.4 = const(NoneType, None)
2022-08-04 11:53:08,584 DEBUG on stmt: $56.5 = cast(value=$const56.4)
2022-08-04 11:53:08,584 DEBUG on stmt: return $56.5
2022-08-04 11:53:08,760 DEBUG label 0:
    q_in = arg(0, name=q_in)                 ['q_in']
    q_out = arg(1, name=q_out)               ['q_out']
    $const0.2 = const(int, 0)                ['$const0.2']
    $const0.3 = const(NoneType, None)        ['$const0.3']
    $const0.4 = const(NoneType, None)        ['$const0.4']
    $0.5 = global(slice: <class 'slice'>)    ['$0.5']
    $0.6 = call $0.5($const0.3, $const0.4, func=$0.5, args=(Var($const0.3, interpolation.py:14), Var($const0.4, interpolation.py:14)), kws=(), vararg=None) ['$0.5', '$0.6', '$const0.3', '$const0.4']
    $0.7 = build_tuple(items=[Var($const0.2, interpolation.py:14), Var($0.6, interpolation.py:14)]) ['$0.6', '$0.7', '$const0.2']
    $0.8 = getitem(value=q_in, index=$0.7, fn=<built-in function getitem>) ['$0.7', '$0.8', 'q_in']
    $const0.10 = const(int, 0)               ['$const0.10']
    $const0.11 = const(NoneType, None)       ['$const0.11']
    $const0.12 = const(NoneType, None)       ['$const0.12']
    $0.13 = global(slice: <class 'slice'>)   ['$0.13']
    $0.14 = call $0.13($const0.11, $const0.12, func=$0.13, args=(Var($const0.11, interpolation.py:14), Var($const0.12, interpolation.py:14)), kws=(), vararg=None) ['$0.13', '$0.14', '$const0.11', '$const0.12']
    $0.15 = build_tuple(items=[Var($const0.10, interpolation.py:14), Var($0.14, interpolation.py:14)]) ['$0.14', '$0.15', '$const0.10']
    q_out[$0.15] = $0.8                      ['$0.15', '$0.8', 'q_out']
    jump 30                                  []
label 30:
    jump 32                                  []
label 32:
    $32.1 = global(range: <class 'range'>)   ['$32.1']
    $const32.2 = const(int, 1)               ['$const32.2']
    $32.4 = getattr(value=q_in, attr=shape)  ['$32.4', 'q_in']
    $const32.5 = const(int, 0)               ['$const32.5']
    $32.6 = getitem(value=$32.4, index=$const32.5, fn=<built-in function getitem>) ['$32.4', '$32.6', '$const32.5']
    $32.7 = call $32.1($const32.2, $32.6, func=$32.1, args=[Var($const32.2, interpolation.py:15), Var($32.6, interpolation.py:15)], kws=(), vararg=None) ['$32.1', '$32.6', '$32.7', '$const32.2']
    $32.8 = getiter(value=$32.7)             ['$32.7', '$32.8']
    $phi48.1 = $32.8                         ['$32.8', '$phi48.1']
    jump 48                                  []
label 48:
    $48.2 = iternext(value=$phi48.1)         ['$48.2', '$phi48.1']
    $48.3 = pair_first(value=$48.2)          ['$48.2', '$48.3']
    $48.4 = pair_second(value=$48.2)         ['$48.2', '$48.4']
    $phi50.1 = $48.3                         ['$48.3', '$phi50.1']
    $phi234.1 = $48.3                        ['$48.3', '$phi234.1']
    $phi234.2 = $phi48.1                     ['$phi234.2', '$phi48.1']
    branch $48.4, 50, 234                    ['$48.4']
label 50:
    i = $phi50.1                             ['$phi50.1', 'i']
    $const50.4 = const(int, 1)               ['$const50.4']
    $50.5 = i - $const50.4                   ['$50.5', '$const50.4', 'i']
    $const50.6 = const(int, 0)               ['$const50.6']
    $50.7 = build_tuple(items=[Var($50.5, interpolation.py:20), Var($const50.6, interpolation.py:20)]) ['$50.5', '$50.7', '$const50.6']
    $50.8 = getitem(value=q_out, index=$50.7, fn=<built-in function getitem>) ['$50.7', '$50.8', 'q_out']
    $const50.11 = const(int, 0)              ['$const50.11']
    $50.12 = build_tuple(items=[Var(i, interpolation.py:15), Var($const50.11, interpolation.py:20)]) ['$50.12', '$const50.11', 'i']
    $50.13 = getitem(value=q_in, index=$50.12, fn=<built-in function getitem>) ['$50.12', '$50.13', 'q_in']
    $50.14 = $50.8 * $50.13                  ['$50.13', '$50.14', '$50.8']
    $const50.17 = const(int, 1)              ['$const50.17']
    $50.18 = i - $const50.17                 ['$50.18', '$const50.17', 'i']
    $const50.19 = const(int, 1)              ['$const50.19']
    $50.20 = build_tuple(items=[Var($50.18, interpolation.py:20), Var($const50.19, interpolation.py:20)]) ['$50.18', '$50.20', '$const50.19']
    $50.21 = getitem(value=q_out, index=$50.20, fn=<built-in function getitem>) ['$50.20', '$50.21', 'q_out']
    $const50.24 = const(int, 1)              ['$const50.24']
    $50.25 = build_tuple(items=[Var(i, interpolation.py:15), Var($const50.24, interpolation.py:20)]) ['$50.25', '$const50.24', 'i']
    $50.26 = getitem(value=q_in, index=$50.25, fn=<built-in function getitem>) ['$50.25', '$50.26', 'q_in']
    $50.27 = $50.21 * $50.26                 ['$50.21', '$50.26', '$50.27']
    $50.28 = $50.14 + $50.27                 ['$50.14', '$50.27', '$50.28']
    $const50.31 = const(int, 1)              ['$const50.31']
    $50.32 = i - $const50.31                 ['$50.32', '$const50.31', 'i']
    $const50.33 = const(int, 2)              ['$const50.33']
    $50.34 = build_tuple(items=[Var($50.32, interpolation.py:20), Var($const50.33, interpolation.py:20)]) ['$50.32', '$50.34', '$const50.33']
    $50.35 = getitem(value=q_out, index=$50.34, fn=<built-in function getitem>) ['$50.34', '$50.35', 'q_out']
    $const50.38 = const(int, 2)              ['$const50.38']
    $50.39 = build_tuple(items=[Var(i, interpolation.py:15), Var($const50.38, interpolation.py:20)]) ['$50.39', '$const50.38', 'i']
    $50.40 = getitem(value=q_in, index=$50.39, fn=<built-in function getitem>) ['$50.39', '$50.40', 'q_in']
    $50.41 = $50.35 * $50.40                 ['$50.35', '$50.40', '$50.41']
    $50.42 = $50.28 + $50.41                 ['$50.28', '$50.41', '$50.42']
    $const50.45 = const(int, 1)              ['$const50.45']
    $50.46 = i - $const50.45                 ['$50.46', '$const50.45', 'i']
    $const50.47 = const(int, 3)              ['$const50.47']
    $50.48 = build_tuple(items=[Var($50.46, interpolation.py:20), Var($const50.47, interpolation.py:20)]) ['$50.46', '$50.48', '$const50.47']
    $50.49 = getitem(value=q_out, index=$50.48, fn=<built-in function getitem>) ['$50.48', '$50.49', 'q_out']
    $const50.52 = const(int, 3)              ['$const50.52']
    $50.53 = build_tuple(items=[Var(i, interpolation.py:15), Var($const50.52, interpolation.py:20)]) ['$50.53', '$const50.52', 'i']
    $50.54 = getitem(value=q_in, index=$50.53, fn=<built-in function getitem>) ['$50.53', '$50.54', 'q_in']
    $50.55 = $50.49 * $50.54                 ['$50.49', '$50.54', '$50.55']
    inner_product = $50.42 + $50.55          ['$50.42', '$50.55', 'inner_product']
    $const50.58 = const(float, 0.0)          ['$const50.58']
    $50.59 = inner_product < $const50.58     ['$50.59', '$const50.58', 'inner_product']
    bool170 = global(bool: <class 'bool'>)   ['bool170']
    $170pred = call bool170($50.59, func=bool170, args=(Var($50.59, interpolation.py:22),), kws=(), vararg=None) ['$170pred', '$50.59', 'bool170']
    branch $170pred, 172, 204                ['$170pred']
label 172:
    $const172.3 = const(NoneType, None)      ['$const172.3']
    $const172.4 = const(NoneType, None)      ['$const172.4']
    $172.5 = global(slice: <class 'slice'>)  ['$172.5']
    $172.6 = call $172.5($const172.3, $const172.4, func=$172.5, args=(Var($const172.3, interpolation.py:23), Var($const172.4, interpolation.py:23)), kws=(), vararg=None) ['$172.5', '$172.6', '$const172.3', '$const172.4']
    $172.7 = build_tuple(items=[Var(i, interpolation.py:15), Var($172.6, interpolation.py:23)]) ['$172.6', '$172.7', 'i']
    $172.8 = getitem(value=q_in, index=$172.7, fn=<built-in function getitem>) ['$172.7', '$172.8', 'q_in']
    $172.9 = unary(fn=<built-in function neg>, value=$172.8) ['$172.8', '$172.9']
    $const172.12 = const(NoneType, None)     ['$const172.12']
    $const172.13 = const(NoneType, None)     ['$const172.13']
    $172.14 = global(slice: <class 'slice'>) ['$172.14']
    $172.15 = call $172.14($const172.12, $const172.13, func=$172.14, args=(Var($const172.12, interpolation.py:23), Var($const172.13, interpolation.py:23)), kws=(), vararg=None) ['$172.14', '$172.15', '$const172.12', '$const172.13']
    $172.16 = build_tuple(items=[Var(i, interpolation.py:15), Var($172.15, interpolation.py:23)]) ['$172.15', '$172.16', 'i']
    q_out[$172.16] = $172.9                  ['$172.16', '$172.9', 'q_out']
    jump 48                                  []
label 204:
    $const204.3 = const(NoneType, None)      ['$const204.3']
    $const204.4 = const(NoneType, None)      ['$const204.4']
    $204.5 = global(slice: <class 'slice'>)  ['$204.5']
    $204.6 = call $204.5($const204.3, $const204.4, func=$204.5, args=(Var($const204.3, interpolation.py:25), Var($const204.4, interpolation.py:25)), kws=(), vararg=None) ['$204.5', '$204.6', '$const204.3', '$const204.4']
    $204.7 = build_tuple(items=[Var(i, interpolation.py:15), Var($204.6, interpolation.py:25)]) ['$204.6', '$204.7', 'i']
    $204.8 = getitem(value=q_in, index=$204.7, fn=<built-in function getitem>) ['$204.7', '$204.8', 'q_in']
    $const204.11 = const(NoneType, None)     ['$const204.11']
    $const204.12 = const(NoneType, None)     ['$const204.12']
    $204.13 = global(slice: <class 'slice'>) ['$204.13']
    $204.14 = call $204.13($const204.11, $const204.12, func=$204.13, args=(Var($const204.11, interpolation.py:25), Var($const204.12, interpolation.py:25)), kws=(), vararg=None) ['$204.13', '$204.14', '$const204.11', '$const204.12']
    $204.15 = build_tuple(items=[Var(i, interpolation.py:15), Var($204.14, interpolation.py:25)]) ['$204.14', '$204.15', 'i']
    q_out[$204.15] = $204.8                  ['$204.15', '$204.8', 'q_out']
    jump 48                                  []
label 234:
    jump 236                                 []
label 236:
    $const236.1 = const(NoneType, None)      ['$const236.1']
    $236.2 = cast(value=$const236.1)         ['$236.2', '$const236.1']
    return $236.2                            ['$236.2']

2022-08-04 11:53:08,784 DEBUG ==== SSA block analysis pass on 0
2022-08-04 11:53:08,784 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ced16be0>
2022-08-04 11:53:08,784 DEBUG on stmt: q_in = arg(0, name=q_in)
2022-08-04 11:53:08,785 DEBUG on stmt: q_out = arg(1, name=q_out)
2022-08-04 11:53:08,785 DEBUG on stmt: $const0.2 = const(int, 0)
2022-08-04 11:53:08,785 DEBUG on stmt: $const0.3 = const(NoneType, None)
2022-08-04 11:53:08,785 DEBUG on stmt: $const0.4 = const(NoneType, None)
2022-08-04 11:53:08,785 DEBUG on stmt: $0.5 = global(slice: <class 'slice'>)
2022-08-04 11:53:08,785 DEBUG on stmt: $0.6 = call $0.5($const0.3, $const0.4, func=$0.5, args=(Var($const0.3, interpolation.py:14), Var($const0.4, interpolation.py:14)), kws=(), vararg=None)
2022-08-04 11:53:08,785 DEBUG on stmt: $0.7 = build_tuple(items=[Var($const0.2, interpolation.py:14), Var($0.6, interpolation.py:14)])
2022-08-04 11:53:08,785 DEBUG on stmt: $0.8 = static_getitem(value=q_in, index=(0, slice(None, None, None)), index_var=$0.7, fn=<built-in function getitem>)
2022-08-04 11:53:08,785 DEBUG on stmt: $const0.10 = const(int, 0)
2022-08-04 11:53:08,785 DEBUG on stmt: $const0.11 = const(NoneType, None)
2022-08-04 11:53:08,786 DEBUG on stmt: $const0.12 = const(NoneType, None)
2022-08-04 11:53:08,786 DEBUG on stmt: $0.13 = global(slice: <class 'slice'>)
2022-08-04 11:53:08,786 DEBUG on stmt: $0.14 = call $0.13($const0.11, $const0.12, func=$0.13, args=(Var($const0.11, interpolation.py:14), Var($const0.12, interpolation.py:14)), kws=(), vararg=None)
2022-08-04 11:53:08,786 DEBUG on stmt: $0.15 = build_tuple(items=[Var($const0.10, interpolation.py:14), Var($0.14, interpolation.py:14)])
2022-08-04 11:53:08,786 DEBUG on stmt: q_out[(0, slice(None, None, None))] = $0.8
2022-08-04 11:53:08,786 DEBUG on stmt: jump 30
2022-08-04 11:53:08,786 DEBUG ==== SSA block analysis pass on 30
2022-08-04 11:53:08,786 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ced16be0>
2022-08-04 11:53:08,786 DEBUG on stmt: jump 32
2022-08-04 11:53:08,786 DEBUG ==== SSA block analysis pass on 32
2022-08-04 11:53:08,786 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ced16be0>
2022-08-04 11:53:08,786 DEBUG on stmt: $32.1 = global(range: <class 'range'>)
2022-08-04 11:53:08,787 DEBUG on stmt: $const32.2 = const(int, 1)
2022-08-04 11:53:08,787 DEBUG on stmt: $32.4 = getattr(value=q_in, attr=shape)
2022-08-04 11:53:08,787 DEBUG on stmt: $const32.5 = const(int, 0)
2022-08-04 11:53:08,787 DEBUG on stmt: $32.6 = static_getitem(value=$32.4, index=0, index_var=$const32.5, fn=<built-in function getitem>)
2022-08-04 11:53:08,787 DEBUG on stmt: $32.7 = call $32.1($const32.2, $32.6, func=$32.1, args=[Var($const32.2, interpolation.py:15), Var($32.6, interpolation.py:15)], kws=(), vararg=None)
2022-08-04 11:53:08,787 DEBUG on stmt: $32.8 = getiter(value=$32.7)
2022-08-04 11:53:08,787 DEBUG on stmt: $phi48.1 = $32.8
2022-08-04 11:53:08,787 DEBUG on stmt: jump 48
2022-08-04 11:53:08,787 DEBUG ==== SSA block analysis pass on 48
2022-08-04 11:53:08,787 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ced16be0>
2022-08-04 11:53:08,787 DEBUG on stmt: $48.2 = iternext(value=$phi48.1)
2022-08-04 11:53:08,788 DEBUG on stmt: $48.3 = pair_first(value=$48.2)
2022-08-04 11:53:08,788 DEBUG on stmt: $48.4 = pair_second(value=$48.2)
2022-08-04 11:53:08,788 DEBUG on stmt: $phi50.1 = $48.3
2022-08-04 11:53:08,788 DEBUG on stmt: $phi234.1 = $48.3
2022-08-04 11:53:08,788 DEBUG on stmt: $phi234.2 = $phi48.1
2022-08-04 11:53:08,788 DEBUG on stmt: branch $48.4, 50, 234
2022-08-04 11:53:08,788 DEBUG ==== SSA block analysis pass on 50
2022-08-04 11:53:08,788 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ced16be0>
2022-08-04 11:53:08,788 DEBUG on stmt: i = $phi50.1
2022-08-04 11:53:08,788 DEBUG on stmt: $const50.4 = const(int, 1)
2022-08-04 11:53:08,788 DEBUG on stmt: $50.5 = i - $const50.4
2022-08-04 11:53:08,788 DEBUG on stmt: $const50.6 = const(int, 0)
2022-08-04 11:53:08,789 DEBUG on stmt: $50.7 = build_tuple(items=[Var($50.5, interpolation.py:20), Var($const50.6, interpolation.py:20)])
2022-08-04 11:53:08,789 DEBUG on stmt: $50.8 = getitem(value=q_out, index=$50.7, fn=<built-in function getitem>)
2022-08-04 11:53:08,789 DEBUG on stmt: $const50.11 = const(int, 0)
2022-08-04 11:53:08,789 DEBUG on stmt: $50.12 = build_tuple(items=[Var(i, interpolation.py:15), Var($const50.11, interpolation.py:20)])
2022-08-04 11:53:08,789 DEBUG on stmt: $50.13 = getitem(value=q_in, index=$50.12, fn=<built-in function getitem>)
2022-08-04 11:53:08,789 DEBUG on stmt: $50.14 = $50.8 * $50.13
2022-08-04 11:53:08,789 DEBUG on stmt: $const50.17 = const(int, 1)
2022-08-04 11:53:08,789 DEBUG on stmt: $50.18 = i - $const50.17
2022-08-04 11:53:08,789 DEBUG on stmt: $const50.19 = const(int, 1)
2022-08-04 11:53:08,789 DEBUG on stmt: $50.20 = build_tuple(items=[Var($50.18, interpolation.py:20), Var($const50.19, interpolation.py:20)])
2022-08-04 11:53:08,790 DEBUG on stmt: $50.21 = getitem(value=q_out, index=$50.20, fn=<built-in function getitem>)
2022-08-04 11:53:08,790 DEBUG on stmt: $const50.24 = const(int, 1)
2022-08-04 11:53:08,790 DEBUG on stmt: $50.25 = build_tuple(items=[Var(i, interpolation.py:15), Var($const50.24, interpolation.py:20)])
2022-08-04 11:53:08,790 DEBUG on stmt: $50.26 = getitem(value=q_in, index=$50.25, fn=<built-in function getitem>)
2022-08-04 11:53:08,790 DEBUG on stmt: $50.27 = $50.21 * $50.26
2022-08-04 11:53:08,790 DEBUG on stmt: $50.28 = $50.14 + $50.27
2022-08-04 11:53:08,790 DEBUG on stmt: $const50.31 = const(int, 1)
2022-08-04 11:53:08,790 DEBUG on stmt: $50.32 = i - $const50.31
2022-08-04 11:53:08,790 DEBUG on stmt: $const50.33 = const(int, 2)
2022-08-04 11:53:08,791 DEBUG on stmt: $50.34 = build_tuple(items=[Var($50.32, interpolation.py:20), Var($const50.33, interpolation.py:20)])
2022-08-04 11:53:08,791 DEBUG on stmt: $50.35 = getitem(value=q_out, index=$50.34, fn=<built-in function getitem>)
2022-08-04 11:53:08,791 DEBUG on stmt: $const50.38 = const(int, 2)
2022-08-04 11:53:08,791 DEBUG on stmt: $50.39 = build_tuple(items=[Var(i, interpolation.py:15), Var($const50.38, interpolation.py:20)])
2022-08-04 11:53:08,791 DEBUG on stmt: $50.40 = getitem(value=q_in, index=$50.39, fn=<built-in function getitem>)
2022-08-04 11:53:08,791 DEBUG on stmt: $50.41 = $50.35 * $50.40
2022-08-04 11:53:08,791 DEBUG on stmt: $50.42 = $50.28 + $50.41
2022-08-04 11:53:08,791 DEBUG on stmt: $const50.45 = const(int, 1)
2022-08-04 11:53:08,791 DEBUG on stmt: $50.46 = i - $const50.45
2022-08-04 11:53:08,791 DEBUG on stmt: $const50.47 = const(int, 3)
2022-08-04 11:53:08,792 DEBUG on stmt: $50.48 = build_tuple(items=[Var($50.46, interpolation.py:20), Var($const50.47, interpolation.py:20)])
2022-08-04 11:53:08,792 DEBUG on stmt: $50.49 = getitem(value=q_out, index=$50.48, fn=<built-in function getitem>)
2022-08-04 11:53:08,792 DEBUG on stmt: $const50.52 = const(int, 3)
2022-08-04 11:53:08,792 DEBUG on stmt: $50.53 = build_tuple(items=[Var(i, interpolation.py:15), Var($const50.52, interpolation.py:20)])
2022-08-04 11:53:08,792 DEBUG on stmt: $50.54 = getitem(value=q_in, index=$50.53, fn=<built-in function getitem>)
2022-08-04 11:53:08,792 DEBUG on stmt: $50.55 = $50.49 * $50.54
2022-08-04 11:53:08,792 DEBUG on stmt: inner_product = $50.42 + $50.55
2022-08-04 11:53:08,792 DEBUG on stmt: $const50.58 = const(float, 0.0)
2022-08-04 11:53:08,792 DEBUG on stmt: $50.59 = inner_product < $const50.58
2022-08-04 11:53:08,792 DEBUG on stmt: bool170 = global(bool: <class 'bool'>)
2022-08-04 11:53:08,793 DEBUG on stmt: $170pred = call bool170($50.59, func=bool170, args=(Var($50.59, interpolation.py:22),), kws=(), vararg=None)
2022-08-04 11:53:08,793 DEBUG on stmt: branch $170pred, 172, 204
2022-08-04 11:53:08,793 DEBUG ==== SSA block analysis pass on 172
2022-08-04 11:53:08,793 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ced16be0>
2022-08-04 11:53:08,793 DEBUG on stmt: $const172.3 = const(NoneType, None)
2022-08-04 11:53:08,793 DEBUG on stmt: $const172.4 = const(NoneType, None)
2022-08-04 11:53:08,793 DEBUG on stmt: $172.5 = global(slice: <class 'slice'>)
2022-08-04 11:53:08,793 DEBUG on stmt: $172.6 = call $172.5($const172.3, $const172.4, func=$172.5, args=(Var($const172.3, interpolation.py:23), Var($const172.4, interpolation.py:23)), kws=(), vararg=None)
2022-08-04 11:53:08,793 DEBUG on stmt: $172.7 = build_tuple(items=[Var(i, interpolation.py:15), Var($172.6, interpolation.py:23)])
2022-08-04 11:53:08,793 DEBUG on stmt: $172.8 = getitem(value=q_in, index=$172.7, fn=<built-in function getitem>)
2022-08-04 11:53:08,793 DEBUG on stmt: $172.9 = unary(fn=<built-in function neg>, value=$172.8)
2022-08-04 11:53:08,793 DEBUG on stmt: $const172.12 = const(NoneType, None)
2022-08-04 11:53:08,793 DEBUG on stmt: $const172.13 = const(NoneType, None)
2022-08-04 11:53:08,794 DEBUG on stmt: $172.14 = global(slice: <class 'slice'>)
2022-08-04 11:53:08,794 DEBUG on stmt: $172.15 = call $172.14($const172.12, $const172.13, func=$172.14, args=(Var($const172.12, interpolation.py:23), Var($const172.13, interpolation.py:23)), kws=(), vararg=None)
2022-08-04 11:53:08,794 DEBUG on stmt: $172.16 = build_tuple(items=[Var(i, interpolation.py:15), Var($172.15, interpolation.py:23)])
2022-08-04 11:53:08,794 DEBUG on stmt: q_out[$172.16] = $172.9
2022-08-04 11:53:08,794 DEBUG on stmt: jump 237
2022-08-04 11:53:08,794 DEBUG ==== SSA block analysis pass on 204
2022-08-04 11:53:08,794 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ced16be0>
2022-08-04 11:53:08,794 DEBUG on stmt: $const204.3 = const(NoneType, None)
2022-08-04 11:53:08,794 DEBUG on stmt: $const204.4 = const(NoneType, None)
2022-08-04 11:53:08,794 DEBUG on stmt: $204.5 = global(slice: <class 'slice'>)
2022-08-04 11:53:08,794 DEBUG on stmt: $204.6 = call $204.5($const204.3, $const204.4, func=$204.5, args=(Var($const204.3, interpolation.py:25), Var($const204.4, interpolation.py:25)), kws=(), vararg=None)
2022-08-04 11:53:08,795 DEBUG on stmt: $204.7 = build_tuple(items=[Var(i, interpolation.py:15), Var($204.6, interpolation.py:25)])
2022-08-04 11:53:08,795 DEBUG on stmt: $204.8 = getitem(value=q_in, index=$204.7, fn=<built-in function getitem>)
2022-08-04 11:53:08,795 DEBUG on stmt: $const204.11 = const(NoneType, None)
2022-08-04 11:53:08,795 DEBUG on stmt: $const204.12 = const(NoneType, None)
2022-08-04 11:53:08,795 DEBUG on stmt: $204.13 = global(slice: <class 'slice'>)
2022-08-04 11:53:08,795 DEBUG on stmt: $204.14 = call $204.13($const204.11, $const204.12, func=$204.13, args=(Var($const204.11, interpolation.py:25), Var($const204.12, interpolation.py:25)), kws=(), vararg=None)
2022-08-04 11:53:08,795 DEBUG on stmt: $204.15 = build_tuple(items=[Var(i, interpolation.py:15), Var($204.14, interpolation.py:25)])
2022-08-04 11:53:08,795 DEBUG on stmt: q_out[$204.15] = $204.8
2022-08-04 11:53:08,795 DEBUG on stmt: jump 237
2022-08-04 11:53:08,796 DEBUG ==== SSA block analysis pass on 234
2022-08-04 11:53:08,796 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ced16be0>
2022-08-04 11:53:08,796 DEBUG on stmt: jump 236
2022-08-04 11:53:08,796 DEBUG ==== SSA block analysis pass on 236
2022-08-04 11:53:08,796 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ced16be0>
2022-08-04 11:53:08,796 DEBUG on stmt: $const236.1 = const(NoneType, None)
2022-08-04 11:53:08,796 DEBUG on stmt: $236.2 = cast(value=$const236.1)
2022-08-04 11:53:08,796 DEBUG on stmt: return $236.2
2022-08-04 11:53:08,796 DEBUG ==== SSA block analysis pass on 237
2022-08-04 11:53:08,796 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ced16be0>
2022-08-04 11:53:08,796 DEBUG on stmt: jump 48
2022-08-04 11:53:08,798 DEBUG defs defaultdict(<class 'list'>,
            {'$0.13': [<numba.core.ir.Assign object at 0x7fa2ced20ba8>],
             '$0.14': [<numba.core.ir.Assign object at 0x7fa2ced20c50>],
             '$0.15': [<numba.core.ir.Assign object at 0x7fa2ced20d30>],
             '$0.5': [<numba.core.ir.Assign object at 0x7fa2ced20518>],
             '$0.6': [<numba.core.ir.Assign object at 0x7fa2ced205c0>],
             '$0.7': [<numba.core.ir.Assign object at 0x7fa2ced206a0>],
             '$0.8': [<numba.core.ir.Assign object at 0x7fa2cecf2c88>],
             '$170pred': [<numba.core.ir.Assign object at 0x7fa2cec810f0>],
             '$172.14': [<numba.core.ir.Assign object at 0x7fa2cec818d0>],
             '$172.15': [<numba.core.ir.Assign object at 0x7fa2cec81978>],
             '$172.16': [<numba.core.ir.Assign object at 0x7fa2cec81a58>],
             '$172.5': [<numba.core.ir.Assign object at 0x7fa2cec814a8>],
             '$172.6': [<numba.core.ir.Assign object at 0x7fa2cec81400>],
             '$172.7': [<numba.core.ir.Assign object at 0x7fa2cec81550>],
             '$172.8': [<numba.core.ir.Assign object at 0x7fa2cec81710>],
             '$172.9': [<numba.core.ir.Assign object at 0x7fa2cec81f98>],
             '$204.13': [<numba.core.ir.Assign object at 0x7fa2ceb91ba8>],
             '$204.14': [<numba.core.ir.Assign object at 0x7fa2ceb91908>],
             '$204.15': [<numba.core.ir.Assign object at 0x7fa2ceb91fd0>],
             '$204.5': [<numba.core.ir.Assign object at 0x7fa2ceb91f28>],
             '$204.6': [<numba.core.ir.Assign object at 0x7fa2ceb91b00>],
             '$204.7': [<numba.core.ir.Assign object at 0x7fa2ceb91e80>],
             '$204.8': [<numba.core.ir.Assign object at 0x7fa2ceb91e48>],
             '$236.2': [<numba.core.ir.Assign object at 0x7fa2ceb91240>],
             '$32.1': [<numba.core.ir.Assign object at 0x7fa2ced20f98>],
             '$32.4': [<numba.core.ir.Assign object at 0x7fa2ced25240>],
             '$32.6': [<numba.core.ir.Assign object at 0x7fa2cecf2978>],
             '$32.7': [<numba.core.ir.Assign object at 0x7fa2ced254e0>],
             '$32.8': [<numba.core.ir.Assign object at 0x7fa2ced255c0>],
             '$48.2': [<numba.core.ir.Assign object at 0x7fa2ced25780>],
             '$48.3': [<numba.core.ir.Assign object at 0x7fa2ced25828>],
             '$48.4': [<numba.core.ir.Assign object at 0x7fa2ced258d0>],
             '$50.12': [<numba.core.ir.Assign object at 0x7fa2ced2a470>],
             '$50.13': [<numba.core.ir.Assign object at 0x7fa2ced2a550>],
             '$50.14': [<numba.core.ir.Assign object at 0x7fa2ced2a630>],
             '$50.18': [<numba.core.ir.Assign object at 0x7fa2ced2a940>],
             '$50.20': [<numba.core.ir.Assign object at 0x7fa2ced2ab00>],
             '$50.21': [<numba.core.ir.Assign object at 0x7fa2ced2abe0>],
             '$50.25': [<numba.core.ir.Assign object at 0x7fa2ced2aef0>],
             '$50.26': [<numba.core.ir.Assign object at 0x7fa2ced2afd0>],
             '$50.27': [<numba.core.ir.Assign object at 0x7fa2ced2d0f0>],
             '$50.28': [<numba.core.ir.Assign object at 0x7fa2ced2d1d0>],
             '$50.32': [<numba.core.ir.Assign object at 0x7fa2ced2d4e0>],
             '$50.34': [<numba.core.ir.Assign object at 0x7fa2ced2d6a0>],
             '$50.35': [<numba.core.ir.Assign object at 0x7fa2ced2d780>],
             '$50.39': [<numba.core.ir.Assign object at 0x7fa2cec7de80>],
             '$50.40': [<numba.core.ir.Assign object at 0x7fa2cec7dd68>],
             '$50.41': [<numba.core.ir.Assign object at 0x7fa2cec7da90>],
             '$50.42': [<numba.core.ir.Assign object at 0x7fa2cec7d9e8>],
             '$50.46': [<numba.core.ir.Assign object at 0x7fa2cec7d780>],
             '$50.48': [<numba.core.ir.Assign object at 0x7fa2cec7d320>],
             '$50.49': [<numba.core.ir.Assign object at 0x7fa2cec7d0b8>],
             '$50.5': [<numba.core.ir.Assign object at 0x7fa2ced25e80>],
             '$50.53': [<numba.core.ir.Assign object at 0x7fa2cec7d390>],
             '$50.54': [<numba.core.ir.Assign object at 0x7fa2cec7d470>],
             '$50.55': [<numba.core.ir.Assign object at 0x7fa2cec7d550>],
             '$50.59': [<numba.core.ir.Assign object at 0x7fa2cec81390>],
             '$50.7': [<numba.core.ir.Assign object at 0x7fa2ced2a080>],
             '$50.8': [<numba.core.ir.Assign object at 0x7fa2ced2a160>],
             '$const0.10': [<numba.core.ir.Assign object at 0x7fa2ced20908>],
             '$const0.11': [<numba.core.ir.Assign object at 0x7fa2ced209e8>],
             '$const0.12': [<numba.core.ir.Assign object at 0x7fa2ced20ac8>],
             '$const0.2': [<numba.core.ir.Assign object at 0x7fa2ced20278>],
             '$const0.3': [<numba.core.ir.Assign object at 0x7fa2ced20358>],
             '$const0.4': [<numba.core.ir.Assign object at 0x7fa2ced20438>],
             '$const172.12': [<numba.core.ir.Assign object at 0x7fa2cec81e10>],
             '$const172.13': [<numba.core.ir.Assign object at 0x7fa2cec81cf8>],
             '$const172.3': [<numba.core.ir.Assign object at 0x7fa2ced25cc0>],
             '$const172.4': [<numba.core.ir.Assign object at 0x7fa2cec81080>],
             '$const204.11': [<numba.core.ir.Assign object at 0x7fa2ceb917f0>],
             '$const204.12': [<numba.core.ir.Assign object at 0x7fa2ceb917b8>],
             '$const204.3': [<numba.core.ir.Assign object at 0x7fa2ce9cad30>],
             '$const204.4': [<numba.core.ir.Assign object at 0x7fa2ceb91a20>],
             '$const236.1': [<numba.core.ir.Assign object at 0x7fa2ceb91358>],
             '$const32.2': [<numba.core.ir.Assign object at 0x7fa2ced250b8>],
             '$const32.5': [<numba.core.ir.Assign object at 0x7fa2ced25320>],
             '$const50.11': [<numba.core.ir.Assign object at 0x7fa2ced2a390>],
             '$const50.17': [<numba.core.ir.Assign object at 0x7fa2ced2a860>],
             '$const50.19': [<numba.core.ir.Assign object at 0x7fa2ced2aa20>],
             '$const50.24': [<numba.core.ir.Assign object at 0x7fa2ced2ae10>],
             '$const50.31': [<numba.core.ir.Assign object at 0x7fa2ced2d400>],
             '$const50.33': [<numba.core.ir.Assign object at 0x7fa2ced2d5c0>],
             '$const50.38': [<numba.core.ir.Assign object at 0x7fa2ced2d9b0>],
             '$const50.4': [<numba.core.ir.Assign object at 0x7fa2ced25da0>],
             '$const50.45': [<numba.core.ir.Assign object at 0x7fa2cec7d828>],
             '$const50.47': [<numba.core.ir.Assign object at 0x7fa2cec7d6d8>],
             '$const50.52': [<numba.core.ir.Assign object at 0x7fa2cec7d278>],
             '$const50.58': [<numba.core.ir.Assign object at 0x7fa2cec81588>],
             '$const50.6': [<numba.core.ir.Assign object at 0x7fa2ced25f60>],
             '$phi234.1': [<numba.core.ir.Assign object at 0x7fa2ced259b0>],
             '$phi234.2': [<numba.core.ir.Assign object at 0x7fa2ced25a20>],
             '$phi48.1': [<numba.core.ir.Assign object at 0x7fa2ced25160>],
             '$phi50.1': [<numba.core.ir.Assign object at 0x7fa2ced25940>],
             'bool170': [<numba.core.ir.Assign object at 0x7fa2cec812b0>],
             'i': [<numba.core.ir.Assign object at 0x7fa2ced25b70>],
             'inner_product': [<numba.core.ir.Assign object at 0x7fa2cecfb4e0>],
             'q_in': [<numba.core.ir.Assign object at 0x7fa2ced20048>],
             'q_out': [<numba.core.ir.Assign object at 0x7fa2ced200f0>]})
2022-08-04 11:53:08,798 DEBUG SSA violators set()
2022-08-04 11:53:09,123 DEBUG label 0:
    _172_8_1 = arg(0, name=_172_8_1)         ['_172_8_1']
    $0.2 = unary(fn=<built-in function neg>, value=_172_8_1) ['$0.2', '_172_8_1']
    $0.3 = cast(value=$0.2)                  ['$0.2', '$0.3']
    return $0.3                              ['$0.3']

2022-08-04 11:53:09,125 DEBUG ==== SSA block analysis pass on 0
2022-08-04 11:53:09,125 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce07c898>
2022-08-04 11:53:09,125 DEBUG on stmt: _172_8_1 = arg(0, name=_172_8_1)
2022-08-04 11:53:09,125 DEBUG on stmt: $0.2 = unary(fn=<built-in function neg>, value=_172_8_1)
2022-08-04 11:53:09,125 DEBUG on stmt: $0.3 = cast(value=$0.2)
2022-08-04 11:53:09,125 DEBUG on stmt: return $0.3
2022-08-04 11:53:09,126 DEBUG defs defaultdict(<class 'list'>,
            {'$0.2': [<numba.core.ir.Assign object at 0x7fa2ce793198>],
             '$0.3': [<numba.core.ir.Assign object at 0x7fa2ce07c4e0>],
             '_172_8_1': [<numba.core.ir.Assign object at 0x7fa2ce252cc0>]})
2022-08-04 11:53:09,126 DEBUG SSA violators set()
2022-08-04 11:53:09,952 INFO Results folder is /Users/wdiepeveen/Documents/PhD/Projects/2 - Cryo-EM/src/src/Cryo-EM/tools/../results/expC3_22-08-04_11-53-09_SNR16_N2048_J15_r2_s10_i10
2022-08-04 11:53:09,982 INFO Start Experiment
2022-08-04 11:53:09,984 INFO Running Experiment for SNR = 0.0625 and 2048 images
2022-08-04 11:53:09,985 INFO This experiment illustrates orientation refinement using a lifting approach
2022-08-04 11:53:09,996 INFO Load 3D map and downsample 3D map to desired grids of 91 x 91 x 91.
2022-08-04 11:53:09,998 INFO Initialize simulation object and CTF filters.
2022-08-04 11:53:10,124 INFO Use downsampled map to creat simulation object.
2022-08-04 11:53:10,172 INFO Get true rotation angles generated randomly by the simulation object.
2022-08-04 11:53:13,047 DEBUG Corresponding type is already real float64.
2022-08-04 11:53:13,065 DEBUG nufft passed real_type for signal, converting
2022-08-04 11:53:13,091 INFO Trying NFFT backend finufft
2022-08-04 11:53:13,657 INFO NFFT backend finufft usable.
2022-08-04 11:53:13,658 INFO Trying NFFT backend cufinufft
2022-08-04 11:53:13,661 INFO NFFT backend cufinufft not usable:
	No module named 'pycuda'
2022-08-04 11:53:13,662 INFO Trying NFFT backend pynfft
2022-08-04 11:53:13,664 INFO NFFT backend pynfft not usable:
	No module named 'pynfft'
2022-08-04 11:53:13,665 INFO Selected NFFT backend = finufft.
2022-08-04 11:53:32,990 INFO Applying forward transformations in pipeline
2022-08-04 11:53:32,992 INFO All forward transformations applied
2022-08-04 11:53:32,993 INFO Loaded 2048 images
2022-08-04 11:53:33,116 DEBUG label 0:
    self = arg(0, name=self)                 ['self']
    $0.2 = getattr(value=self, attr=reshape) ['$0.2', 'self']
    $const_-1 = const(int, -1)               ['$const_-1']
    $const_4 = const(int, 4)                 ['$const_4']
    $const0.3 = build_tuple(items=[Var($const_-1, properties.py:142), Var($const_4, properties.py:142)]) ['$const0.3', '$const_-1', '$const_4']
    s = call $0.2($const0.3, func=$0.2, args=[Var($const0.3, properties.py:142)], kws=(), vararg=None) ['$0.2', '$const0.3', 's']
    $0.5 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$0.5']
    $0.6 = getattr(value=$0.5, attr=empty)   ['$0.5', '$0.6']
    $0.8 = getattr(value=s, attr=shape)      ['$0.8', 's']
    $const0.9 = const(int, 0)                ['$const0.9']
    $0.10 = getitem(value=$0.8, index=$const0.9, fn=<built-in function getitem>) ['$0.10', '$0.8', '$const0.9']
    $0.12 = getattr(value=self, attr=dtype)  ['$0.12', 'self']
    n = call $0.6($0.10, func=$0.6, args=[Var($0.10, properties.py:143)], kws=[('dtype', Var($0.12, properties.py:143))], vararg=None) ['$0.10', '$0.12', '$0.6', 'n']
    jump 34                                  []
label 34:
    jump 36                                  []
label 36:
    $36.1 = global(range: <class 'range'>)   ['$36.1']
    $36.3 = getattr(value=s, attr=shape)     ['$36.3', 's']
    $const36.4 = const(int, 0)               ['$const36.4']
    $36.5 = getitem(value=$36.3, index=$const36.4, fn=<built-in function getitem>) ['$36.3', '$36.5', '$const36.4']
    $36.6 = call $36.1($36.5, func=$36.1, args=[Var($36.5, properties.py:144)], kws=(), vararg=None) ['$36.1', '$36.5', '$36.6']
    $36.7 = getiter(value=$36.6)             ['$36.6', '$36.7']
    $phi50.1 = $36.7                         ['$36.7', '$phi50.1']
    jump 50                                  []
label 50:
    $50.2 = iternext(value=$phi50.1)         ['$50.2', '$phi50.1']
    $50.3 = pair_first(value=$50.2)          ['$50.2', '$50.3']
    $50.4 = pair_second(value=$50.2)         ['$50.2', '$50.4']
    $phi52.1 = $50.3                         ['$50.3', '$phi52.1']
    $phi130.1 = $50.3                        ['$50.3', '$phi130.1']
    $phi130.2 = $phi50.1                     ['$phi130.2', '$phi50.1']
    branch $50.4, 52, 130                    ['$50.4']
label 52:
    i = $phi52.1                             ['$phi52.1', 'i']
    $52.2 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$52.2']
    $52.3 = getattr(value=$52.2, attr=sqrt)  ['$52.2', '$52.3']
    $const52.6 = const(int, 0)               ['$const52.6']
    $52.7 = build_tuple(items=[Var(i, properties.py:144), Var($const52.6, properties.py:145)]) ['$52.7', '$const52.6', 'i']
    $52.8 = getitem(value=s, index=$52.7, fn=<built-in function getitem>) ['$52.7', '$52.8', 's']
    $const52.9 = const(int, 2)               ['$const52.9']
    $52.10 = $52.8 ** $const52.9             ['$52.10', '$52.8', '$const52.9']
    $const52.13 = const(int, 1)              ['$const52.13']
    $52.14 = build_tuple(items=[Var(i, properties.py:144), Var($const52.13, properties.py:145)]) ['$52.14', '$const52.13', 'i']
    $52.15 = getitem(value=s, index=$52.14, fn=<built-in function getitem>) ['$52.14', '$52.15', 's']
    $const52.16 = const(int, 2)              ['$const52.16']
    $52.17 = $52.15 ** $const52.16           ['$52.15', '$52.17', '$const52.16']
    $52.18 = $52.10 + $52.17                 ['$52.10', '$52.17', '$52.18']
    $const52.21 = const(int, 2)              ['$const52.21']
    $52.22 = build_tuple(items=[Var(i, properties.py:144), Var($const52.21, properties.py:145)]) ['$52.22', '$const52.21', 'i']
    $52.23 = getitem(value=s, index=$52.22, fn=<built-in function getitem>) ['$52.22', '$52.23', 's']
    $const52.24 = const(int, 2)              ['$const52.24']
    $52.25 = $52.23 ** $const52.24           ['$52.23', '$52.25', '$const52.24']
    $52.26 = $52.18 + $52.25                 ['$52.18', '$52.25', '$52.26']
    $const52.29 = const(int, 3)              ['$const52.29']
    $52.30 = build_tuple(items=[Var(i, properties.py:144), Var($const52.29, properties.py:145)]) ['$52.30', '$const52.29', 'i']
    $52.31 = getitem(value=s, index=$52.30, fn=<built-in function getitem>) ['$52.30', '$52.31', 's']
    $const52.32 = const(int, 2)              ['$const52.32']
    $52.33 = $52.31 ** $const52.32           ['$52.31', '$52.33', '$const52.32']
    $52.34 = $52.26 + $52.33                 ['$52.26', '$52.33', '$52.34']
    $52.35 = call $52.3($52.34, func=$52.3, args=[Var($52.34, properties.py:145)], kws=(), vararg=None) ['$52.3', '$52.34', '$52.35']
    n[i] = $52.35                            ['$52.35', 'i', 'n']
    jump 50                                  []
label 130:
    jump 132                                 []
label 132:
    $132.2 = getattr(value=n, attr=reshape)  ['$132.2', 'n']
    $132.4 = getattr(value=self, attr=shape) ['$132.4', 'self']
    $const132.5 = const(NoneType, None)      ['$const132.5']
    $const132.6 = const(int, -1)             ['$const132.6']
    $132.7 = global(slice: <class 'slice'>)  ['$132.7']
    $132.8 = call $132.7($const132.5, $const132.6, func=$132.7, args=(Var($const132.5, properties.py:146), Var($const132.6, properties.py:146)), kws=(), vararg=None) ['$132.7', '$132.8', '$const132.5', '$const132.6']
    $132.9 = getitem(value=$132.4, index=$132.8, fn=<built-in function getitem>) ['$132.4', '$132.8', '$132.9']
    $132.10 = call $132.2($132.9, func=$132.2, args=[Var($132.9, properties.py:146)], kws=(), vararg=None) ['$132.10', '$132.2', '$132.9']
    $132.11 = cast(value=$132.10)            ['$132.10', '$132.11']
    return $132.11                           ['$132.11']

2022-08-04 11:53:33,126 DEBUG ==== SSA block analysis pass on 0
2022-08-04 11:53:33,126 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce3bf7f0>
2022-08-04 11:53:33,126 DEBUG on stmt: self = arg(0, name=self)
2022-08-04 11:53:33,126 DEBUG on stmt: $0.2 = getattr(value=self, attr=reshape)
2022-08-04 11:53:33,126 DEBUG on stmt: $const_-1 = const(int, -1)
2022-08-04 11:53:33,126 DEBUG on stmt: $const_4 = const(int, 4)
2022-08-04 11:53:33,126 DEBUG on stmt: $const0.3 = build_tuple(items=[Var($const_-1, properties.py:142), Var($const_4, properties.py:142)])
2022-08-04 11:53:33,126 DEBUG on stmt: s = call $0.2($const0.3, func=$0.2, args=[Var($const0.3, properties.py:142)], kws=(), vararg=None)
2022-08-04 11:53:33,126 DEBUG on stmt: $0.5 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:33,126 DEBUG on stmt: $0.6 = getattr(value=$0.5, attr=empty)
2022-08-04 11:53:33,126 DEBUG on stmt: $0.8 = getattr(value=s, attr=shape)
2022-08-04 11:53:33,126 DEBUG on stmt: $const0.9 = const(int, 0)
2022-08-04 11:53:33,126 DEBUG on stmt: $0.10 = static_getitem(value=$0.8, index=0, index_var=$const0.9, fn=<built-in function getitem>)
2022-08-04 11:53:33,126 DEBUG on stmt: $0.12 = getattr(value=self, attr=dtype)
2022-08-04 11:53:33,127 DEBUG on stmt: n = call $0.6($0.10, func=$0.6, args=[Var($0.10, properties.py:143)], kws=[('dtype', Var($0.12, properties.py:143))], vararg=None)
2022-08-04 11:53:33,127 DEBUG on stmt: jump 34
2022-08-04 11:53:33,127 DEBUG ==== SSA block analysis pass on 34
2022-08-04 11:53:33,127 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce3bf7f0>
2022-08-04 11:53:33,127 DEBUG on stmt: jump 36
2022-08-04 11:53:33,127 DEBUG ==== SSA block analysis pass on 36
2022-08-04 11:53:33,127 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce3bf7f0>
2022-08-04 11:53:33,127 DEBUG on stmt: $36.1 = global(range: <class 'range'>)
2022-08-04 11:53:33,127 DEBUG on stmt: $36.3 = getattr(value=s, attr=shape)
2022-08-04 11:53:33,127 DEBUG on stmt: $const36.4 = const(int, 0)
2022-08-04 11:53:33,127 DEBUG on stmt: $36.5 = static_getitem(value=$36.3, index=0, index_var=$const36.4, fn=<built-in function getitem>)
2022-08-04 11:53:33,127 DEBUG on stmt: $36.6 = call $36.1($36.5, func=$36.1, args=[Var($36.5, properties.py:144)], kws=(), vararg=None)
2022-08-04 11:53:33,127 DEBUG on stmt: $36.7 = getiter(value=$36.6)
2022-08-04 11:53:33,127 DEBUG on stmt: $phi50.1 = $36.7
2022-08-04 11:53:33,127 DEBUG on stmt: jump 50
2022-08-04 11:53:33,127 DEBUG ==== SSA block analysis pass on 50
2022-08-04 11:53:33,127 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce3bf7f0>
2022-08-04 11:53:33,127 DEBUG on stmt: $50.2 = iternext(value=$phi50.1)
2022-08-04 11:53:33,127 DEBUG on stmt: $50.3 = pair_first(value=$50.2)
2022-08-04 11:53:33,127 DEBUG on stmt: $50.4 = pair_second(value=$50.2)
2022-08-04 11:53:33,127 DEBUG on stmt: $phi52.1 = $50.3
2022-08-04 11:53:33,127 DEBUG on stmt: $phi130.1 = $50.3
2022-08-04 11:53:33,127 DEBUG on stmt: $phi130.2 = $phi50.1
2022-08-04 11:53:33,127 DEBUG on stmt: branch $50.4, 52, 130
2022-08-04 11:53:33,127 DEBUG ==== SSA block analysis pass on 52
2022-08-04 11:53:33,127 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce3bf7f0>
2022-08-04 11:53:33,128 DEBUG on stmt: i = $phi52.1
2022-08-04 11:53:33,128 DEBUG on stmt: $52.2 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-08-04 11:53:33,128 DEBUG on stmt: $52.3 = getattr(value=$52.2, attr=sqrt)
2022-08-04 11:53:33,128 DEBUG on stmt: $const52.6 = const(int, 0)
2022-08-04 11:53:33,128 DEBUG on stmt: $52.7 = build_tuple(items=[Var(i, properties.py:144), Var($const52.6, properties.py:145)])
2022-08-04 11:53:33,128 DEBUG on stmt: $52.8 = getitem(value=s, index=$52.7, fn=<built-in function getitem>)
2022-08-04 11:53:33,128 DEBUG on stmt: $const52.9 = const(int, 2)
2022-08-04 11:53:33,128 DEBUG on stmt: $52.10 = $52.8 ** $const52.9
2022-08-04 11:53:33,128 DEBUG on stmt: $const52.13 = const(int, 1)
2022-08-04 11:53:33,128 DEBUG on stmt: $52.14 = build_tuple(items=[Var(i, properties.py:144), Var($const52.13, properties.py:145)])
2022-08-04 11:53:33,128 DEBUG on stmt: $52.15 = getitem(value=s, index=$52.14, fn=<built-in function getitem>)
2022-08-04 11:53:33,128 DEBUG on stmt: $const52.16 = const(int, 2)
2022-08-04 11:53:33,128 DEBUG on stmt: $52.17 = $52.15 ** $const52.16
2022-08-04 11:53:33,128 DEBUG on stmt: $52.18 = $52.10 + $52.17
2022-08-04 11:53:33,128 DEBUG on stmt: $const52.21 = const(int, 2)
2022-08-04 11:53:33,128 DEBUG on stmt: $52.22 = build_tuple(items=[Var(i, properties.py:144), Var($const52.21, properties.py:145)])
2022-08-04 11:53:33,128 DEBUG on stmt: $52.23 = getitem(value=s, index=$52.22, fn=<built-in function getitem>)
2022-08-04 11:53:33,128 DEBUG on stmt: $const52.24 = const(int, 2)
2022-08-04 11:53:33,128 DEBUG on stmt: $52.25 = $52.23 ** $const52.24
2022-08-04 11:53:33,128 DEBUG on stmt: $52.26 = $52.18 + $52.25
2022-08-04 11:53:33,128 DEBUG on stmt: $const52.29 = const(int, 3)
2022-08-04 11:53:33,128 DEBUG on stmt: $52.30 = build_tuple(items=[Var(i, properties.py:144), Var($const52.29, properties.py:145)])
2022-08-04 11:53:33,128 DEBUG on stmt: $52.31 = getitem(value=s, index=$52.30, fn=<built-in function getitem>)
2022-08-04 11:53:33,128 DEBUG on stmt: $const52.32 = const(int, 2)
2022-08-04 11:53:33,129 DEBUG on stmt: $52.33 = $52.31 ** $const52.32
2022-08-04 11:53:33,129 DEBUG on stmt: $52.34 = $52.26 + $52.33
2022-08-04 11:53:33,129 DEBUG on stmt: $52.35 = call $52.3($52.34, func=$52.3, args=[Var($52.34, properties.py:145)], kws=(), vararg=None)
2022-08-04 11:53:33,129 DEBUG on stmt: n[i] = $52.35
2022-08-04 11:53:33,129 DEBUG on stmt: jump 50
2022-08-04 11:53:33,129 DEBUG ==== SSA block analysis pass on 130
2022-08-04 11:53:33,129 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce3bf7f0>
2022-08-04 11:53:33,129 DEBUG on stmt: jump 132
2022-08-04 11:53:33,129 DEBUG ==== SSA block analysis pass on 132
2022-08-04 11:53:33,129 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce3bf7f0>
2022-08-04 11:53:33,129 DEBUG on stmt: $132.2 = getattr(value=n, attr=reshape)
2022-08-04 11:53:33,129 DEBUG on stmt: $132.4 = getattr(value=self, attr=shape)
2022-08-04 11:53:33,129 DEBUG on stmt: $const132.5 = const(NoneType, None)
2022-08-04 11:53:33,129 DEBUG on stmt: $const132.6 = const(int, -1)
2022-08-04 11:53:33,129 DEBUG on stmt: $132.7 = global(slice: <class 'slice'>)
2022-08-04 11:53:33,129 DEBUG on stmt: $132.8 = call $132.7($const132.5, $const132.6, func=$132.7, args=(Var($const132.5, properties.py:146), Var($const132.6, properties.py:146)), kws=(), vararg=None)
2022-08-04 11:53:33,129 DEBUG on stmt: $132.9 = static_getitem(value=$132.4, index=slice(None, -1, None), index_var=$132.8, fn=<built-in function getitem>)
2022-08-04 11:53:33,129 DEBUG on stmt: $132.10 = call $132.2($132.9, func=$132.2, args=[Var($132.9, properties.py:146)], kws=(), vararg=None)
2022-08-04 11:53:33,129 DEBUG on stmt: $132.11 = cast(value=$132.10)
2022-08-04 11:53:33,129 DEBUG on stmt: return $132.11
2022-08-04 11:53:33,130 DEBUG defs defaultdict(<class 'list'>,
            {'$0.10': [<numba.core.ir.Assign object at 0x7fa2ce45ef98>],
             '$0.12': [<numba.core.ir.Assign object at 0x7fa2ce7ae198>],
             '$0.2': [<numba.core.ir.Assign object at 0x7fa2cdd19978>],
             '$0.5': [<numba.core.ir.Assign object at 0x7fa2cdd19be0>],
             '$0.6': [<numba.core.ir.Assign object at 0x7fa2cdd19390>],
             '$0.8': [<numba.core.ir.Assign object at 0x7fa2ce7ae358>],
             '$132.10': [<numba.core.ir.Assign object at 0x7fa2ce45eb38>],
             '$132.11': [<numba.core.ir.Assign object at 0x7fa2ce45e908>],
             '$132.2': [<numba.core.ir.Assign object at 0x7fa2ce45e278>],
             '$132.4': [<numba.core.ir.Assign object at 0x7fa2ce45e1d0>],
             '$132.7': [<numba.core.ir.Assign object at 0x7fa2ce45ea20>],
             '$132.8': [<numba.core.ir.Assign object at 0x7fa2ce45ea90>],
             '$132.9': [<numba.core.ir.Assign object at 0x7fa2ce45eef0>],
             '$36.1': [<numba.core.ir.Assign object at 0x7fa2ce7ae7f0>],
             '$36.3': [<numba.core.ir.Assign object at 0x7fa2ce7aee80>],
             '$36.5': [<numba.core.ir.Assign object at 0x7fa2ce45ee10>],
             '$36.6': [<numba.core.ir.Assign object at 0x7fa2ce7ae278>],
             '$36.7': [<numba.core.ir.Assign object at 0x7fa2ce7ae5c0>],
             '$50.2': [<numba.core.ir.Assign object at 0x7fa2ce381518>],
             '$50.3': [<numba.core.ir.Assign object at 0x7fa2ce381a58>],
             '$50.4': [<numba.core.ir.Assign object at 0x7fa2ce381080>],
             '$52.10': [<numba.core.ir.Assign object at 0x7fa2ce381198>],
             '$52.14': [<numba.core.ir.Assign object at 0x7fa2cdf86ac8>],
             '$52.15': [<numba.core.ir.Assign object at 0x7fa2cdf86470>],
             '$52.17': [<numba.core.ir.Assign object at 0x7fa2cdf86f98>],
             '$52.18': [<numba.core.ir.Assign object at 0x7fa2cdf86160>],
             '$52.2': [<numba.core.ir.Assign object at 0x7fa2ce3819e8>],
             '$52.22': [<numba.core.ir.Assign object at 0x7fa2cdf86ba8>],
             '$52.23': [<numba.core.ir.Assign object at 0x7fa2cdf869e8>],
             '$52.25': [<numba.core.ir.Assign object at 0x7fa2cdf867b8>],
             '$52.26': [<numba.core.ir.Assign object at 0x7fa2cdf865f8>],
             '$52.3': [<numba.core.ir.Assign object at 0x7fa2ce381208>],
             '$52.30': [<numba.core.ir.Assign object at 0x7fa2cdf86400>],
             '$52.31': [<numba.core.ir.Assign object at 0x7fa2cdf860b8>],
             '$52.33': [<numba.core.ir.Assign object at 0x7fa2cecf2630>],
             '$52.34': [<numba.core.ir.Assign object at 0x7fa2ce60cef0>],
             '$52.35': [<numba.core.ir.Assign object at 0x7fa2ce45e4a8>],
             '$52.7': [<numba.core.ir.Assign object at 0x7fa2ce381c18>],
             '$52.8': [<numba.core.ir.Assign object at 0x7fa2ce381160>],
             '$const0.3': [<numba.core.ir.Assign object at 0x7fa2cdd19208>],
             '$const0.9': [<numba.core.ir.Assign object at 0x7fa2ce7aee48>],
             '$const132.5': [<numba.core.ir.Assign object at 0x7fa2ce45e080>],
             '$const132.6': [<numba.core.ir.Assign object at 0x7fa2ce45e860>],
             '$const36.4': [<numba.core.ir.Assign object at 0x7fa2ce7ae3c8>],
             '$const52.13': [<numba.core.ir.Assign object at 0x7fa2ce381ba8>],
             '$const52.16': [<numba.core.ir.Assign object at 0x7fa2cdf86438>],
             '$const52.21': [<numba.core.ir.Assign object at 0x7fa2cdf86d68>],
             '$const52.24': [<numba.core.ir.Assign object at 0x7fa2cdf866d8>],
             '$const52.29': [<numba.core.ir.Assign object at 0x7fa2cdf86198>],
             '$const52.32': [<numba.core.ir.Assign object at 0x7fa2cdf86908>],
             '$const52.6': [<numba.core.ir.Assign object at 0x7fa2ce3813c8>],
             '$const52.9': [<numba.core.ir.Assign object at 0x7fa2ce381eb8>],
             '$const_-1': [<numba.core.ir.Assign object at 0x7fa2cdd19668>],
             '$const_4': [<numba.core.ir.Assign object at 0x7fa2cdd19400>],
             '$phi130.1': [<numba.core.ir.Assign object at 0x7fa2ce381278>],
             '$phi130.2': [<numba.core.ir.Assign object at 0x7fa2ce381fd0>],
             '$phi50.1': [<numba.core.ir.Assign object at 0x7fa2ce7ae780>],
             '$phi52.1': [<numba.core.ir.Assign object at 0x7fa2ce381588>],
             'i': [<numba.core.ir.Assign object at 0x7fa2ce3816d8>],
             'n': [<numba.core.ir.Assign object at 0x7fa2ce7ae4a8>],
             's': [<numba.core.ir.Assign object at 0x7fa2cdd19908>],
             'self': [<numba.core.ir.Assign object at 0x7fa2cdd19c88>]})
2022-08-04 11:53:33,130 DEBUG SSA violators set()
2022-08-04 11:53:33,169 DEBUG label 0:
    origsize = arg(0, name=origsize)         ['origsize']
    shape = arg(1, name=shape)               ['shape']
    num_neg_value = const(int, 0)            ['num_neg_value']
    known_size = const(int, 1)               ['known_size']
    jump 10                                  []
label 10:
    jump 12                                  []
label 12:
    $12.1 = global(enumerate: <class 'enumerate'>) ['$12.1']
    $12.3 = call $12.1(shape, func=$12.1, args=[Var(shape, arrayobj.py:1602)], kws=(), vararg=None) ['$12.1', '$12.3', 'shape']
    $12.4 = getiter(value=$12.3)             ['$12.3', '$12.4']
    $phi20.1 = $12.4                         ['$12.4', '$phi20.1']
    jump 20                                  []
label 20:
    $20.2 = iternext(value=$phi20.1)         ['$20.2', '$phi20.1']
    $20.3 = pair_first(value=$20.2)          ['$20.2', '$20.3']
    $20.4 = pair_second(value=$20.2)         ['$20.2', '$20.4']
    $phi22.1 = $20.3                         ['$20.3', '$phi22.1']
    $phi60.1 = $20.3                         ['$20.3', '$phi60.1']
    $phi60.2 = $phi20.1                      ['$phi20.1', '$phi60.2']
    branch $20.4, 22, 60                     ['$20.4']
label 22:
    $22.4 = exhaust_iter(value=$phi22.1, count=2) ['$22.4', '$phi22.1']
    $22.2 = static_getitem(value=$22.4, index=0, index_var=None, fn=<built-in function getitem>) ['$22.2', '$22.4']
    $22.3 = static_getitem(value=$22.4, index=1, index_var=None, fn=<built-in function getitem>) ['$22.3', '$22.4']
    ax = $22.2                               ['$22.2', 'ax']
    s = $22.3                                ['$22.3', 's']
    $const22.6 = const(int, 0)               ['$const22.6']
    $22.7 = s < $const22.6                   ['$22.7', '$const22.6', 's']
    bool34 = global(bool: <class 'bool'>)    ['bool34']
    $34pred = call bool34($22.7, func=bool34, args=(Var($22.7, arrayobj.py:1605),), kws=(), vararg=None) ['$22.7', '$34pred', 'bool34']
    branch $34pred, 36, 50                   ['$34pred']
label 36:
    $const36.2 = const(int, 1)               ['$const36.2']
    $36.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined) ['$36.3', '$const36.2', 'num_neg_value']
    num_neg_value = $36.3                    ['$36.3', 'num_neg_value']
    neg_ax = ax                              ['ax', 'neg_ax']
    jump 20                                  []
label 50:
    $50.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined) ['$50.3', 'known_size', 's']
    known_size = $50.3                       ['$50.3', 'known_size']
    jump 20                                  []
label 60:
    jump 62                                  []
label 62:
    $const62.2 = const(int, 0)               ['$const62.2']
    $62.3 = num_neg_value == $const62.2      ['$62.3', '$const62.2', 'num_neg_value']
    bool68 = global(bool: <class 'bool'>)    ['bool68']
    $68pred = call bool68($62.3, func=bool68, args=(Var($62.3, arrayobj.py:1611),), kws=(), vararg=None) ['$62.3', '$68pred', 'bool68']
    branch $68pred, 70, 88                   ['$68pred']
label 70:
    $70.3 = origsize != known_size           ['$70.3', 'known_size', 'origsize']
    bool76 = global(bool: <class 'bool'>)    ['bool76']
    $76pred = call bool76($70.3, func=bool76, args=(Var($70.3, arrayobj.py:1612),), kws=(), vararg=None) ['$70.3', '$76pred', 'bool76']
    branch $76pred, 78, 168                  ['$76pred']
label 78:
    $78.1 = global(ValueError: <class 'ValueError'>) ['$78.1']
    $const78.2 = const(str, total size of new array must be unchanged) ['$const78.2']
    $78.3 = call $78.1($const78.2, func=$78.1, args=[Var($const78.2, arrayobj.py:1613)], kws=(), vararg=None) ['$78.1', '$78.3', '$const78.2']
    raise $78.3                              ['$78.3']
label 88:
    $const88.2 = const(int, 1)               ['$const88.2']
    $88.3 = num_neg_value == $const88.2      ['$88.3', '$const88.2', 'num_neg_value']
    bool94 = global(bool: <class 'bool'>)    ['bool94']
    $94pred = call bool94($88.3, func=bool94, args=(Var($88.3, arrayobj.py:1615),), kws=(), vararg=None) ['$88.3', '$94pred', 'bool94']
    branch $94pred, 96, 160                  ['$94pred']
label 96:
    $const96.2 = const(int, 0)               ['$const96.2']
    $96.3 = known_size == $const96.2         ['$96.3', '$const96.2', 'known_size']
    bool102 = global(bool: <class 'bool'>)   ['bool102']
    $102pred = call bool102($96.3, func=bool102, args=(Var($96.3, arrayobj.py:1617),), kws=(), vararg=None) ['$102pred', '$96.3', 'bool102']
    branch $102pred, 104, 118                ['$102pred']
label 104:
    inferred = const(int, 0)                 ['inferred']
    $const104.3 = const(int, 0)              ['$const104.3']
    ok = origsize == $const104.3             ['$const104.3', 'ok', 'origsize']
    jump 138                                 []
label 118:
    inferred = origsize // known_size        ['inferred', 'known_size', 'origsize']
    $118.6 = origsize % known_size           ['$118.6', 'known_size', 'origsize']
    $const118.7 = const(int, 0)              ['$const118.7']
    ok = $118.6 == $const118.7               ['$118.6', '$const118.7', 'ok']
    jump 138                                 []
label 138:
    bool140 = global(bool: <class 'bool'>)   ['bool140']
    $140pred = call bool140(ok, func=bool140, args=(Var(ok, arrayobj.py:1619),), kws=(), vararg=None) ['$140pred', 'bool140', 'ok']
    branch $140pred, 150, 142                ['$140pred']
label 142:
    $142.1 = global(ValueError: <class 'ValueError'>) ['$142.1']
    $const142.2 = const(str, total size of new array must be unchanged) ['$const142.2']
    $142.3 = call $142.1($const142.2, func=$142.1, args=[Var($const142.2, arrayobj.py:1624)], kws=(), vararg=None) ['$142.1', '$142.3', '$const142.2']
    raise $142.3                             ['$142.3']
label 150:
    shape[neg_ax] = inferred                 ['inferred', 'neg_ax', 'shape']
    jump 168                                 []
label 160:
    $160.1 = global(ValueError: <class 'ValueError'>) ['$160.1']
    $const160.2 = const(str, multiple negative shape values) ['$const160.2']
    $160.3 = call $160.1($const160.2, func=$160.1, args=[Var($const160.2, arrayobj.py:1628)], kws=(), vararg=None) ['$160.1', '$160.3', '$const160.2']
    raise $160.3                             ['$160.3']
label 168:
    $const168.1 = const(NoneType, None)      ['$const168.1']
    $168.2 = cast(value=$const168.1)         ['$168.2', '$const168.1']
    return $168.2                            ['$168.2']

2022-08-04 11:53:33,180 DEBUG ==== SSA block analysis pass on 0
2022-08-04 11:53:33,180 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce7a0c50>
2022-08-04 11:53:33,181 DEBUG on stmt: origsize = arg(0, name=origsize)
2022-08-04 11:53:33,181 DEBUG on stmt: shape = arg(1, name=shape)
2022-08-04 11:53:33,181 DEBUG on stmt: num_neg_value = const(int, 0)
2022-08-04 11:53:33,181 DEBUG on stmt: known_size = const(int, 1)
2022-08-04 11:53:33,181 DEBUG on stmt: jump 10
2022-08-04 11:53:33,181 DEBUG ==== SSA block analysis pass on 10
2022-08-04 11:53:33,181 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce7a0c50>
2022-08-04 11:53:33,181 DEBUG on stmt: jump 12
2022-08-04 11:53:33,181 DEBUG ==== SSA block analysis pass on 12
2022-08-04 11:53:33,181 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce7a0c50>
2022-08-04 11:53:33,181 DEBUG on stmt: $12.1 = global(enumerate: <class 'enumerate'>)
2022-08-04 11:53:33,181 DEBUG on stmt: $12.3 = call $12.1(shape, func=$12.1, args=[Var(shape, arrayobj.py:1602)], kws=(), vararg=None)
2022-08-04 11:53:33,181 DEBUG on stmt: $12.4 = getiter(value=$12.3)
2022-08-04 11:53:33,181 DEBUG on stmt: $phi20.1 = $12.4
2022-08-04 11:53:33,181 DEBUG on stmt: jump 20
2022-08-04 11:53:33,181 DEBUG ==== SSA block analysis pass on 20
2022-08-04 11:53:33,181 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce7a0c50>
2022-08-04 11:53:33,181 DEBUG on stmt: $20.2 = iternext(value=$phi20.1)
2022-08-04 11:53:33,181 DEBUG on stmt: $20.3 = pair_first(value=$20.2)
2022-08-04 11:53:33,181 DEBUG on stmt: $20.4 = pair_second(value=$20.2)
2022-08-04 11:53:33,181 DEBUG on stmt: $phi22.1 = $20.3
2022-08-04 11:53:33,181 DEBUG on stmt: $phi60.1 = $20.3
2022-08-04 11:53:33,181 DEBUG on stmt: $phi60.2 = $phi20.1
2022-08-04 11:53:33,181 DEBUG on stmt: branch $20.4, 22, 60
2022-08-04 11:53:33,181 DEBUG ==== SSA block analysis pass on 22
2022-08-04 11:53:33,182 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce7a0c50>
2022-08-04 11:53:33,182 DEBUG on stmt: $22.4 = exhaust_iter(value=$phi22.1, count=2)
2022-08-04 11:53:33,182 DEBUG on stmt: $22.2 = static_getitem(value=$22.4, index=0, index_var=None, fn=<built-in function getitem>)
2022-08-04 11:53:33,182 DEBUG on stmt: $22.3 = static_getitem(value=$22.4, index=1, index_var=None, fn=<built-in function getitem>)
2022-08-04 11:53:33,182 DEBUG on stmt: ax = $22.2
2022-08-04 11:53:33,182 DEBUG on stmt: s = $22.3
2022-08-04 11:53:33,182 DEBUG on stmt: $const22.6 = const(int, 0)
2022-08-04 11:53:33,182 DEBUG on stmt: $22.7 = s < $const22.6
2022-08-04 11:53:33,182 DEBUG on stmt: bool34 = global(bool: <class 'bool'>)
2022-08-04 11:53:33,182 DEBUG on stmt: $34pred = call bool34($22.7, func=bool34, args=(Var($22.7, arrayobj.py:1605),), kws=(), vararg=None)
2022-08-04 11:53:33,182 DEBUG on stmt: branch $34pred, 36, 50
2022-08-04 11:53:33,182 DEBUG ==== SSA block analysis pass on 36
2022-08-04 11:53:33,182 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce7a0c50>
2022-08-04 11:53:33,182 DEBUG on stmt: $const36.2 = const(int, 1)
2022-08-04 11:53:33,182 DEBUG on stmt: $36.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:53:33,182 DEBUG on stmt: num_neg_value = $36.3
2022-08-04 11:53:33,182 DEBUG on stmt: neg_ax = ax
2022-08-04 11:53:33,182 DEBUG on stmt: jump 169
2022-08-04 11:53:33,182 DEBUG ==== SSA block analysis pass on 50
2022-08-04 11:53:33,182 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce7a0c50>
2022-08-04 11:53:33,182 DEBUG on stmt: $50.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:53:33,182 DEBUG on stmt: known_size = $50.3
2022-08-04 11:53:33,182 DEBUG on stmt: jump 169
2022-08-04 11:53:33,182 DEBUG ==== SSA block analysis pass on 60
2022-08-04 11:53:33,182 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce7a0c50>
2022-08-04 11:53:33,182 DEBUG on stmt: jump 62
2022-08-04 11:53:33,183 DEBUG ==== SSA block analysis pass on 62
2022-08-04 11:53:33,183 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce7a0c50>
2022-08-04 11:53:33,183 DEBUG on stmt: $const62.2 = const(int, 0)
2022-08-04 11:53:33,183 DEBUG on stmt: $62.3 = num_neg_value == $const62.2
2022-08-04 11:53:33,183 DEBUG on stmt: bool68 = global(bool: <class 'bool'>)
2022-08-04 11:53:33,183 DEBUG on stmt: $68pred = call bool68($62.3, func=bool68, args=(Var($62.3, arrayobj.py:1611),), kws=(), vararg=None)
2022-08-04 11:53:33,183 DEBUG on stmt: branch $68pred, 70, 88
2022-08-04 11:53:33,183 DEBUG ==== SSA block analysis pass on 70
2022-08-04 11:53:33,183 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce7a0c50>
2022-08-04 11:53:33,183 DEBUG on stmt: $70.3 = origsize != known_size
2022-08-04 11:53:33,183 DEBUG on stmt: bool76 = global(bool: <class 'bool'>)
2022-08-04 11:53:33,183 DEBUG on stmt: $76pred = call bool76($70.3, func=bool76, args=(Var($70.3, arrayobj.py:1612),), kws=(), vararg=None)
2022-08-04 11:53:33,183 DEBUG on stmt: branch $76pred, 78, 168
2022-08-04 11:53:33,183 DEBUG ==== SSA block analysis pass on 78
2022-08-04 11:53:33,183 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce7a0c50>
2022-08-04 11:53:33,183 DEBUG on stmt: $78.1 = global(ValueError: <class 'ValueError'>)
2022-08-04 11:53:33,183 DEBUG on stmt: $const78.2 = const(str, total size of new array must be unchanged)
2022-08-04 11:53:33,183 DEBUG on stmt: $78.3 = call $78.1($const78.2, func=$78.1, args=[Var($const78.2, arrayobj.py:1613)], kws=(), vararg=None)
2022-08-04 11:53:33,183 DEBUG on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2022-08-04 11:53:33,183 DEBUG ==== SSA block analysis pass on 88
2022-08-04 11:53:33,183 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce7a0c50>
2022-08-04 11:53:33,183 DEBUG on stmt: $const88.2 = const(int, 1)
2022-08-04 11:53:33,183 DEBUG on stmt: $88.3 = num_neg_value == $const88.2
2022-08-04 11:53:33,183 DEBUG on stmt: bool94 = global(bool: <class 'bool'>)
2022-08-04 11:53:33,183 DEBUG on stmt: $94pred = call bool94($88.3, func=bool94, args=(Var($88.3, arrayobj.py:1615),), kws=(), vararg=None)
2022-08-04 11:53:33,184 DEBUG on stmt: branch $94pred, 96, 160
2022-08-04 11:53:33,184 DEBUG ==== SSA block analysis pass on 96
2022-08-04 11:53:33,184 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce7a0c50>
2022-08-04 11:53:33,184 DEBUG on stmt: $const96.2 = const(int, 0)
2022-08-04 11:53:33,184 DEBUG on stmt: $96.3 = known_size == $const96.2
2022-08-04 11:53:33,184 DEBUG on stmt: bool102 = global(bool: <class 'bool'>)
2022-08-04 11:53:33,184 DEBUG on stmt: $102pred = call bool102($96.3, func=bool102, args=(Var($96.3, arrayobj.py:1617),), kws=(), vararg=None)
2022-08-04 11:53:33,184 DEBUG on stmt: branch $102pred, 104, 118
2022-08-04 11:53:33,184 DEBUG ==== SSA block analysis pass on 104
2022-08-04 11:53:33,184 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce7a0c50>
2022-08-04 11:53:33,184 DEBUG on stmt: inferred = const(int, 0)
2022-08-04 11:53:33,184 DEBUG on stmt: $const104.3 = const(int, 0)
2022-08-04 11:53:33,184 DEBUG on stmt: ok = origsize == $const104.3
2022-08-04 11:53:33,184 DEBUG on stmt: jump 138
2022-08-04 11:53:33,184 DEBUG ==== SSA block analysis pass on 118
2022-08-04 11:53:33,184 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce7a0c50>
2022-08-04 11:53:33,184 DEBUG on stmt: inferred = origsize // known_size
2022-08-04 11:53:33,184 DEBUG on stmt: $118.6 = origsize % known_size
2022-08-04 11:53:33,184 DEBUG on stmt: $const118.7 = const(int, 0)
2022-08-04 11:53:33,184 DEBUG on stmt: ok = $118.6 == $const118.7
2022-08-04 11:53:33,184 DEBUG on stmt: jump 138
2022-08-04 11:53:33,184 DEBUG ==== SSA block analysis pass on 138
2022-08-04 11:53:33,184 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce7a0c50>
2022-08-04 11:53:33,184 DEBUG on stmt: bool140 = global(bool: <class 'bool'>)
2022-08-04 11:53:33,184 DEBUG on stmt: $140pred = call bool140(ok, func=bool140, args=(Var(ok, arrayobj.py:1619),), kws=(), vararg=None)
2022-08-04 11:53:33,185 DEBUG on stmt: branch $140pred, 150, 142
2022-08-04 11:53:33,185 DEBUG ==== SSA block analysis pass on 142
2022-08-04 11:53:33,185 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce7a0c50>
2022-08-04 11:53:33,185 DEBUG on stmt: $142.1 = global(ValueError: <class 'ValueError'>)
2022-08-04 11:53:33,185 DEBUG on stmt: $const142.2 = const(str, total size of new array must be unchanged)
2022-08-04 11:53:33,185 DEBUG on stmt: $142.3 = call $142.1($const142.2, func=$142.1, args=[Var($const142.2, arrayobj.py:1624)], kws=(), vararg=None)
2022-08-04 11:53:33,185 DEBUG on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2022-08-04 11:53:33,185 DEBUG ==== SSA block analysis pass on 150
2022-08-04 11:53:33,185 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce7a0c50>
2022-08-04 11:53:33,185 DEBUG on stmt: shape[neg_ax] = inferred
2022-08-04 11:53:33,185 DEBUG on stmt: jump 168
2022-08-04 11:53:33,185 DEBUG ==== SSA block analysis pass on 160
2022-08-04 11:53:33,185 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce7a0c50>
2022-08-04 11:53:33,185 DEBUG on stmt: $160.1 = global(ValueError: <class 'ValueError'>)
2022-08-04 11:53:33,185 DEBUG on stmt: $const160.2 = const(str, multiple negative shape values)
2022-08-04 11:53:33,185 DEBUG on stmt: $160.3 = call $160.1($const160.2, func=$160.1, args=[Var($const160.2, arrayobj.py:1628)], kws=(), vararg=None)
2022-08-04 11:53:33,185 DEBUG on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
2022-08-04 11:53:33,185 DEBUG ==== SSA block analysis pass on 168
2022-08-04 11:53:33,185 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce7a0c50>
2022-08-04 11:53:33,185 DEBUG on stmt: $const168.1 = const(NoneType, None)
2022-08-04 11:53:33,185 DEBUG on stmt: $168.2 = cast(value=$const168.1)
2022-08-04 11:53:33,185 DEBUG on stmt: return $168.2
2022-08-04 11:53:33,185 DEBUG ==== SSA block analysis pass on 169
2022-08-04 11:53:33,185 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7fa2ce7a0c50>
2022-08-04 11:53:33,185 DEBUG on stmt: jump 20
2022-08-04 11:53:33,186 DEBUG defs defaultdict(<class 'list'>,
            {'$102pred': [<numba.core.ir.Assign object at 0x7fa2ce4c0b00>],
             '$118.6': [<numba.core.ir.Assign object at 0x7fa2cecc05c0>],
             '$12.1': [<numba.core.ir.Assign object at 0x7fa2cdc00470>],
             '$12.3': [<numba.core.ir.Assign object at 0x7fa2cdc00ef0>],
             '$12.4': [<numba.core.ir.Assign object at 0x7fa2cdc00a20>],
             '$140pred': [<numba.core.ir.Assign object at 0x7fa2cecc0e80>],
             '$142.1': [<numba.core.ir.Assign object at 0x7fa2cecc0c88>],
             '$142.3': [<numba.core.ir.Assign object at 0x7fa2cecc0358>],
             '$160.1': [<numba.core.ir.Assign object at 0x7fa2cec93748>],
             '$160.3': [<numba.core.ir.Assign object at 0x7fa2cec93390>],
             '$168.2': [<numba.core.ir.Assign object at 0x7fa2cec937f0>],
             '$20.2': [<numba.core.ir.Assign object at 0x7fa2cdc004a8>],
             '$20.3': [<numba.core.ir.Assign object at 0x7fa2cdc00f98>],
             '$20.4': [<numba.core.ir.Assign object at 0x7fa2cdc00cf8>],
             '$22.2': [<numba.core.ir.Assign object at 0x7fa2ce7a06d8>],
             '$22.3': [<numba.core.ir.Assign object at 0x7fa2ce7a04a8>],
             '$22.4': [<numba.core.ir.Assign object at 0x7fa2cdc00d68>],
             '$22.7': [<numba.core.ir.Assign object at 0x7fa2ce7a0da0>],
             '$34pred': [<numba.core.ir.Assign object at 0x7fa2ce7a0278>],
             '$36.3': [<numba.core.ir.Assign object at 0x7fa2ce7a0c88>],
             '$50.3': [<numba.core.ir.Assign object at 0x7fa2ced55278>],
             '$62.3': [<numba.core.ir.Assign object at 0x7fa2ced55940>],
             '$68pred': [<numba.core.ir.Assign object at 0x7fa2ced559e8>],
             '$70.3': [<numba.core.ir.Assign object at 0x7fa2ced55b38>],
             '$76pred': [<numba.core.ir.Assign object at 0x7fa2ced55e48>],
             '$78.1': [<numba.core.ir.Assign object at 0x7fa2ced557f0>],
             '$78.3': [<numba.core.ir.Assign object at 0x7fa2ced55780>],
             '$88.3': [<numba.core.ir.Assign object at 0x7fa2ce4c00f0>],
             '$94pred': [<numba.core.ir.Assign object at 0x7fa2ce4c0390>],
             '$96.3': [<numba.core.ir.Assign object at 0x7fa2ce4c0438>],
             '$const104.3': [<numba.core.ir.Assign object at 0x7fa2ce4c0198>],
             '$const118.7': [<numba.core.ir.Assign object at 0x7fa2cecc0908>],
             '$const142.2': [<numba.core.ir.Assign object at 0x7fa2cecc0f98>],
             '$const160.2': [<numba.core.ir.Assign object at 0x7fa2cec937b8>],
             '$const168.1': [<numba.core.ir.Assign object at 0x7fa2cec932e8>],
             '$const22.6': [<numba.core.ir.Assign object at 0x7fa2ce7a0748>],
             '$const36.2': [<numba.core.ir.Assign object at 0x7fa2ce7a0be0>],
             '$const62.2': [<numba.core.ir.Assign object at 0x7fa2ced55710>],
             '$const78.2': [<numba.core.ir.Assign object at 0x7fa2ced552e8>],
             '$const88.2': [<numba.core.ir.Assign object at 0x7fa2ce4c0ef0>],
             '$const96.2': [<numba.core.ir.Assign object at 0x7fa2ce4c0128>],
             '$phi20.1': [<numba.core.ir.Assign object at 0x7fa2cdc00898>],
             '$phi22.1': [<numba.core.ir.Assign object at 0x7fa2cdc00c88>],
             '$phi60.1': [<numba.core.ir.Assign object at 0x7fa2cdc00828>],
             '$phi60.2': [<numba.core.ir.Assign object at 0x7fa2cdc00da0>],
             'ax': [<numba.core.ir.Assign object at 0x7fa2ce7a0e10>],
             'bool102': [<numba.core.ir.Assign object at 0x7fa2ce4c06a0>],
             'bool140': [<numba.core.ir.Assign object at 0x7fa2cecc0208>],
             'bool34': [<numba.core.ir.Assign object at 0x7fa2ce7a09e8>],
             'bool68': [<numba.core.ir.Assign object at 0x7fa2ced55ac8>],
             'bool76': [<numba.core.ir.Assign object at 0x7fa2ced55ba8>],
             'bool94': [<numba.core.ir.Assign object at 0x7fa2ce4c0518>],
             'inferred': [<numba.core.ir.Assign object at 0x7fa2ce4c0860>,
                          <numba.core.ir.Assign object at 0x7fa2cecc07b8>],
             'known_size': [<numba.core.ir.Assign object at 0x7fa2cdc009e8>,
                            <numba.core.ir.Assign object at 0x7fa2ced55358>],
             'neg_ax': [<numba.core.ir.Assign object at 0x7fa2ce7a0e48>],
             'num_neg_value': [<numba.core.ir.Assign object at 0x7fa2cdc005f8>,
                               <numba.core.ir.Assign object at 0x7fa2ce7a0e80>],
             'ok': [<numba.core.ir.Assign object at 0x7fa2ce4c0358>,
                    <numba.core.ir.Assign object at 0x7fa2cecc01d0>],
             'origsize': [<numba.core.ir.Assign object at 0x7fa2cdee49e8>],
             's': [<numba.core.ir.Assign object at 0x7fa2ce7a01d0>],
             'shape': [<numba.core.ir.Assign object at 0x7fa2cdee4a90>]})
2022-08-04 11:53:33,186 DEBUG SSA violators {'num_neg_value', 'known_size', 'inferred', 'ok'}
2022-08-04 11:53:33,186 DEBUG Fix SSA violator on var num_neg_value
2022-08-04 11:53:33,186 DEBUG ==== SSA block rewrite pass on 0
2022-08-04 11:53:33,186 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce7a0c50>
2022-08-04 11:53:33,186 DEBUG on stmt: origsize = arg(0, name=origsize)
2022-08-04 11:53:33,186 DEBUG on stmt: shape = arg(1, name=shape)
2022-08-04 11:53:33,186 DEBUG on stmt: num_neg_value = const(int, 0)
2022-08-04 11:53:33,186 DEBUG first assign: num_neg_value
2022-08-04 11:53:33,186 DEBUG replaced with: num_neg_value = const(int, 0)
2022-08-04 11:53:33,186 DEBUG on stmt: known_size = const(int, 1)
2022-08-04 11:53:33,186 DEBUG on stmt: jump 10
2022-08-04 11:53:33,187 DEBUG ==== SSA block rewrite pass on 10
2022-08-04 11:53:33,187 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce7a0c50>
2022-08-04 11:53:33,187 DEBUG on stmt: jump 12
2022-08-04 11:53:33,187 DEBUG ==== SSA block rewrite pass on 12
2022-08-04 11:53:33,187 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce7a0c50>
2022-08-04 11:53:33,187 DEBUG on stmt: $12.1 = global(enumerate: <class 'enumerate'>)
2022-08-04 11:53:33,187 DEBUG on stmt: $12.3 = call $12.1(shape, func=$12.1, args=[Var(shape, arrayobj.py:1602)], kws=(), vararg=None)
2022-08-04 11:53:33,187 DEBUG on stmt: $12.4 = getiter(value=$12.3)
2022-08-04 11:53:33,187 DEBUG on stmt: $phi20.1 = $12.4
2022-08-04 11:53:33,187 DEBUG on stmt: jump 20
2022-08-04 11:53:33,187 DEBUG ==== SSA block rewrite pass on 20
2022-08-04 11:53:33,187 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce7a0c50>
2022-08-04 11:53:33,187 DEBUG on stmt: $20.2 = iternext(value=$phi20.1)
2022-08-04 11:53:33,187 DEBUG on stmt: $20.3 = pair_first(value=$20.2)
2022-08-04 11:53:33,187 DEBUG on stmt: $20.4 = pair_second(value=$20.2)
2022-08-04 11:53:33,187 DEBUG on stmt: $phi22.1 = $20.3
2022-08-04 11:53:33,187 DEBUG on stmt: $phi60.1 = $20.3
2022-08-04 11:53:33,187 DEBUG on stmt: $phi60.2 = $phi20.1
2022-08-04 11:53:33,187 DEBUG on stmt: branch $20.4, 22, 60
2022-08-04 11:53:33,187 DEBUG ==== SSA block rewrite pass on 22
2022-08-04 11:53:33,187 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce7a0c50>
2022-08-04 11:53:33,187 DEBUG on stmt: $22.4 = exhaust_iter(value=$phi22.1, count=2)
2022-08-04 11:53:33,187 DEBUG on stmt: $22.2 = static_getitem(value=$22.4, index=0, index_var=None, fn=<built-in function getitem>)
2022-08-04 11:53:33,188 DEBUG on stmt: $22.3 = static_getitem(value=$22.4, index=1, index_var=None, fn=<built-in function getitem>)
2022-08-04 11:53:33,188 DEBUG on stmt: ax = $22.2
2022-08-04 11:53:33,188 DEBUG on stmt: s = $22.3
2022-08-04 11:53:33,188 DEBUG on stmt: $const22.6 = const(int, 0)
2022-08-04 11:53:33,188 DEBUG on stmt: $22.7 = s < $const22.6
2022-08-04 11:53:33,188 DEBUG on stmt: bool34 = global(bool: <class 'bool'>)
2022-08-04 11:53:33,188 DEBUG on stmt: $34pred = call bool34($22.7, func=bool34, args=(Var($22.7, arrayobj.py:1605),), kws=(), vararg=None)
2022-08-04 11:53:33,188 DEBUG on stmt: branch $34pred, 36, 50
2022-08-04 11:53:33,188 DEBUG ==== SSA block rewrite pass on 36
2022-08-04 11:53:33,188 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce7a0c50>
2022-08-04 11:53:33,188 DEBUG on stmt: $const36.2 = const(int, 1)
2022-08-04 11:53:33,188 DEBUG on stmt: $36.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:53:33,188 DEBUG on stmt: num_neg_value = $36.3
2022-08-04 11:53:33,188 DEBUG replaced with: num_neg_value.1 = $36.3
2022-08-04 11:53:33,188 DEBUG on stmt: neg_ax = ax
2022-08-04 11:53:33,189 DEBUG on stmt: jump 169
2022-08-04 11:53:33,189 DEBUG ==== SSA block rewrite pass on 50
2022-08-04 11:53:33,189 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce7a0c50>
2022-08-04 11:53:33,189 DEBUG on stmt: $50.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:53:33,189 DEBUG on stmt: known_size = $50.3
2022-08-04 11:53:33,189 DEBUG on stmt: jump 169
2022-08-04 11:53:33,189 DEBUG ==== SSA block rewrite pass on 60
2022-08-04 11:53:33,189 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce7a0c50>
2022-08-04 11:53:33,189 DEBUG on stmt: jump 62
2022-08-04 11:53:33,189 DEBUG ==== SSA block rewrite pass on 62
2022-08-04 11:53:33,189 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce7a0c50>
2022-08-04 11:53:33,189 DEBUG on stmt: $const62.2 = const(int, 0)
2022-08-04 11:53:33,189 DEBUG on stmt: $62.3 = num_neg_value == $const62.2
2022-08-04 11:53:33,189 DEBUG on stmt: bool68 = global(bool: <class 'bool'>)
2022-08-04 11:53:33,189 DEBUG on stmt: $68pred = call bool68($62.3, func=bool68, args=(Var($62.3, arrayobj.py:1611),), kws=(), vararg=None)
2022-08-04 11:53:33,190 DEBUG on stmt: branch $68pred, 70, 88
2022-08-04 11:53:33,190 DEBUG ==== SSA block rewrite pass on 70
2022-08-04 11:53:33,190 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce7a0c50>
2022-08-04 11:53:33,190 DEBUG on stmt: $70.3 = origsize != known_size
2022-08-04 11:53:33,190 DEBUG on stmt: bool76 = global(bool: <class 'bool'>)
2022-08-04 11:53:33,190 DEBUG on stmt: $76pred = call bool76($70.3, func=bool76, args=(Var($70.3, arrayobj.py:1612),), kws=(), vararg=None)
2022-08-04 11:53:33,190 DEBUG on stmt: branch $76pred, 78, 168
2022-08-04 11:53:33,190 DEBUG ==== SSA block rewrite pass on 78
2022-08-04 11:53:33,190 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce7a0c50>
2022-08-04 11:53:33,190 DEBUG on stmt: $78.1 = global(ValueError: <class 'ValueError'>)
2022-08-04 11:53:33,190 DEBUG on stmt: $const78.2 = const(str, total size of new array must be unchanged)
2022-08-04 11:53:33,190 DEBUG on stmt: $78.3 = call $78.1($const78.2, func=$78.1, args=[Var($const78.2, arrayobj.py:1613)], kws=(), vararg=None)
2022-08-04 11:53:33,190 DEBUG on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2022-08-04 11:53:33,191 DEBUG ==== SSA block rewrite pass on 88
2022-08-04 11:53:33,191 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce7a0c50>
2022-08-04 11:53:33,191 DEBUG on stmt: $const88.2 = const(int, 1)
2022-08-04 11:53:33,191 DEBUG on stmt: $88.3 = num_neg_value == $const88.2
2022-08-04 11:53:33,191 DEBUG on stmt: bool94 = global(bool: <class 'bool'>)
2022-08-04 11:53:33,191 DEBUG on stmt: $94pred = call bool94($88.3, func=bool94, args=(Var($88.3, arrayobj.py:1615),), kws=(), vararg=None)
2022-08-04 11:53:33,191 DEBUG on stmt: branch $94pred, 96, 160
2022-08-04 11:53:33,191 DEBUG ==== SSA block rewrite pass on 96
2022-08-04 11:53:33,191 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce7a0c50>
2022-08-04 11:53:33,191 DEBUG on stmt: $const96.2 = const(int, 0)
2022-08-04 11:53:33,191 DEBUG on stmt: $96.3 = known_size == $const96.2
2022-08-04 11:53:33,191 DEBUG on stmt: bool102 = global(bool: <class 'bool'>)
2022-08-04 11:53:33,191 DEBUG on stmt: $102pred = call bool102($96.3, func=bool102, args=(Var($96.3, arrayobj.py:1617),), kws=(), vararg=None)
2022-08-04 11:53:33,191 DEBUG on stmt: branch $102pred, 104, 118
2022-08-04 11:53:33,191 DEBUG ==== SSA block rewrite pass on 104
2022-08-04 11:53:33,192 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce7a0c50>
2022-08-04 11:53:33,192 DEBUG on stmt: inferred = const(int, 0)
2022-08-04 11:53:33,192 DEBUG on stmt: $const104.3 = const(int, 0)
2022-08-04 11:53:33,192 DEBUG on stmt: ok = origsize == $const104.3
2022-08-04 11:53:33,192 DEBUG on stmt: jump 138
2022-08-04 11:53:33,193 DEBUG ==== SSA block rewrite pass on 118
2022-08-04 11:53:33,193 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce7a0c50>
2022-08-04 11:53:33,193 DEBUG on stmt: inferred = origsize // known_size
2022-08-04 11:53:33,193 DEBUG on stmt: $118.6 = origsize % known_size
2022-08-04 11:53:33,193 DEBUG on stmt: $const118.7 = const(int, 0)
2022-08-04 11:53:33,193 DEBUG on stmt: ok = $118.6 == $const118.7
2022-08-04 11:53:33,193 DEBUG on stmt: jump 138
2022-08-04 11:53:33,193 DEBUG ==== SSA block rewrite pass on 138
2022-08-04 11:53:33,194 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce7a0c50>
2022-08-04 11:53:33,194 DEBUG on stmt: bool140 = global(bool: <class 'bool'>)
2022-08-04 11:53:33,194 DEBUG on stmt: $140pred = call bool140(ok, func=bool140, args=(Var(ok, arrayobj.py:1619),), kws=(), vararg=None)
2022-08-04 11:53:33,194 DEBUG on stmt: branch $140pred, 150, 142
2022-08-04 11:53:33,194 DEBUG ==== SSA block rewrite pass on 142
2022-08-04 11:53:33,194 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce7a0c50>
2022-08-04 11:53:33,194 DEBUG on stmt: $142.1 = global(ValueError: <class 'ValueError'>)
2022-08-04 11:53:33,194 DEBUG on stmt: $const142.2 = const(str, total size of new array must be unchanged)
2022-08-04 11:53:33,194 DEBUG on stmt: $142.3 = call $142.1($const142.2, func=$142.1, args=[Var($const142.2, arrayobj.py:1624)], kws=(), vararg=None)
2022-08-04 11:53:33,194 DEBUG on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2022-08-04 11:53:33,194 DEBUG ==== SSA block rewrite pass on 150
2022-08-04 11:53:33,195 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce7a0c50>
2022-08-04 11:53:33,195 DEBUG on stmt: shape[neg_ax] = inferred
2022-08-04 11:53:33,195 DEBUG on stmt: jump 168
2022-08-04 11:53:33,195 DEBUG ==== SSA block rewrite pass on 160
2022-08-04 11:53:33,195 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce7a0c50>
2022-08-04 11:53:33,195 DEBUG on stmt: $160.1 = global(ValueError: <class 'ValueError'>)
2022-08-04 11:53:33,195 DEBUG on stmt: $const160.2 = const(str, multiple negative shape values)
2022-08-04 11:53:33,195 DEBUG on stmt: $160.3 = call $160.1($const160.2, func=$160.1, args=[Var($const160.2, arrayobj.py:1628)], kws=(), vararg=None)
2022-08-04 11:53:33,195 DEBUG on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
2022-08-04 11:53:33,195 DEBUG ==== SSA block rewrite pass on 168
2022-08-04 11:53:33,195 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce7a0c50>
2022-08-04 11:53:33,195 DEBUG on stmt: $const168.1 = const(NoneType, None)
2022-08-04 11:53:33,195 DEBUG on stmt: $168.2 = cast(value=$const168.1)
2022-08-04 11:53:33,195 DEBUG on stmt: return $168.2
2022-08-04 11:53:33,195 DEBUG ==== SSA block rewrite pass on 169
2022-08-04 11:53:33,195 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ce7a0c50>
2022-08-04 11:53:33,195 DEBUG on stmt: jump 20
2022-08-04 11:53:33,196 DEBUG Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7fa2cdd66cc0>],
             36: [<numba.core.ir.Assign object at 0x7fa2cdd66c50>]})
2022-08-04 11:53:33,196 DEBUG ==== SSA block rewrite pass on 0
2022-08-04 11:53:33,196 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdd664e0>
2022-08-04 11:53:33,196 DEBUG on stmt: origsize = arg(0, name=origsize)
2022-08-04 11:53:33,196 DEBUG on stmt: shape = arg(1, name=shape)
2022-08-04 11:53:33,196 DEBUG on stmt: num_neg_value = const(int, 0)
2022-08-04 11:53:33,197 DEBUG on stmt: known_size = const(int, 1)
2022-08-04 11:53:33,197 DEBUG on stmt: jump 10
2022-08-04 11:53:33,197 DEBUG ==== SSA block rewrite pass on 10
2022-08-04 11:53:33,197 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdd664e0>
2022-08-04 11:53:33,197 DEBUG on stmt: jump 12
2022-08-04 11:53:33,197 DEBUG ==== SSA block rewrite pass on 12
2022-08-04 11:53:33,197 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdd664e0>
2022-08-04 11:53:33,197 DEBUG on stmt: $12.1 = global(enumerate: <class 'enumerate'>)
2022-08-04 11:53:33,197 DEBUG on stmt: $12.3 = call $12.1(shape, func=$12.1, args=[Var(shape, arrayobj.py:1602)], kws=(), vararg=None)
2022-08-04 11:53:33,197 DEBUG on stmt: $12.4 = getiter(value=$12.3)
2022-08-04 11:53:33,197 DEBUG on stmt: $phi20.1 = $12.4
2022-08-04 11:53:33,197 DEBUG on stmt: jump 20
2022-08-04 11:53:33,197 DEBUG ==== SSA block rewrite pass on 20
2022-08-04 11:53:33,197 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdd664e0>
2022-08-04 11:53:33,197 DEBUG on stmt: $20.2 = iternext(value=$phi20.1)
2022-08-04 11:53:33,197 DEBUG on stmt: $20.3 = pair_first(value=$20.2)
2022-08-04 11:53:33,198 DEBUG on stmt: $20.4 = pair_second(value=$20.2)
2022-08-04 11:53:33,198 DEBUG on stmt: $phi22.1 = $20.3
2022-08-04 11:53:33,198 DEBUG on stmt: $phi60.1 = $20.3
2022-08-04 11:53:33,198 DEBUG on stmt: $phi60.2 = $phi20.1
2022-08-04 11:53:33,198 DEBUG on stmt: branch $20.4, 22, 60
2022-08-04 11:53:33,198 DEBUG ==== SSA block rewrite pass on 22
2022-08-04 11:53:33,198 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdd664e0>
2022-08-04 11:53:33,198 DEBUG on stmt: $22.4 = exhaust_iter(value=$phi22.1, count=2)
2022-08-04 11:53:33,198 DEBUG on stmt: $22.2 = static_getitem(value=$22.4, index=0, index_var=None, fn=<built-in function getitem>)
2022-08-04 11:53:33,198 DEBUG on stmt: $22.3 = static_getitem(value=$22.4, index=1, index_var=None, fn=<built-in function getitem>)
2022-08-04 11:53:33,198 DEBUG on stmt: ax = $22.2
2022-08-04 11:53:33,198 DEBUG on stmt: s = $22.3
2022-08-04 11:53:33,198 DEBUG on stmt: $const22.6 = const(int, 0)
2022-08-04 11:53:33,198 DEBUG on stmt: $22.7 = s < $const22.6
2022-08-04 11:53:33,199 DEBUG on stmt: bool34 = global(bool: <class 'bool'>)
2022-08-04 11:53:33,199 DEBUG on stmt: $34pred = call bool34($22.7, func=bool34, args=(Var($22.7, arrayobj.py:1605),), kws=(), vararg=None)
2022-08-04 11:53:33,199 DEBUG on stmt: branch $34pred, 36, 50
2022-08-04 11:53:33,199 DEBUG ==== SSA block rewrite pass on 36
2022-08-04 11:53:33,199 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdd664e0>
2022-08-04 11:53:33,199 DEBUG on stmt: $const36.2 = const(int, 1)
2022-08-04 11:53:33,199 DEBUG on stmt: $36.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:53:33,199 DEBUG find_def var='num_neg_value' stmt=$36.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:53:33,199 DEBUG find_def_from_top label 36
2022-08-04 11:53:33,199 DEBUG idom 22 from label 36
2022-08-04 11:53:33,199 DEBUG find_def_from_bottom label 22
2022-08-04 11:53:33,199 DEBUG find_def_from_top label 22
2022-08-04 11:53:33,199 DEBUG idom 20 from label 22
2022-08-04 11:53:33,199 DEBUG find_def_from_bottom label 20
2022-08-04 11:53:33,199 DEBUG find_def_from_top label 20
2022-08-04 11:53:33,200 DEBUG insert phi node num_neg_value.2 = phi(incoming_values=[], incoming_blocks=[]) at 20
2022-08-04 11:53:33,200 DEBUG find_def_from_bottom label 169
2022-08-04 11:53:33,200 DEBUG find_def_from_top label 169
2022-08-04 11:53:33,200 DEBUG insert phi node num_neg_value.3 = phi(incoming_values=[], incoming_blocks=[]) at 169
2022-08-04 11:53:33,200 DEBUG find_def_from_bottom label 50
2022-08-04 11:53:33,200 DEBUG find_def_from_top label 50
2022-08-04 11:53:33,200 DEBUG idom 22 from label 50
2022-08-04 11:53:33,200 DEBUG find_def_from_bottom label 22
2022-08-04 11:53:33,200 DEBUG find_def_from_top label 22
2022-08-04 11:53:33,200 DEBUG idom 20 from label 22
2022-08-04 11:53:33,200 DEBUG find_def_from_bottom label 20
2022-08-04 11:53:33,200 DEBUG incoming_def num_neg_value.2 = phi(incoming_values=[], incoming_blocks=[])
2022-08-04 11:53:33,200 DEBUG find_def_from_bottom label 36
2022-08-04 11:53:33,200 DEBUG incoming_def num_neg_value.1 = $36.3
2022-08-04 11:53:33,200 DEBUG incoming_def num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.2, arrayobj.py:1606), Var(num_neg_value.1, arrayobj.py:1606)], incoming_blocks=[50, 36])
2022-08-04 11:53:33,201 DEBUG find_def_from_bottom label 12
2022-08-04 11:53:33,201 DEBUG find_def_from_top label 12
2022-08-04 11:53:33,201 DEBUG idom 10 from label 12
2022-08-04 11:53:33,201 DEBUG find_def_from_bottom label 10
2022-08-04 11:53:33,201 DEBUG find_def_from_top label 10
2022-08-04 11:53:33,201 DEBUG idom 0 from label 10
2022-08-04 11:53:33,201 DEBUG find_def_from_bottom label 0
2022-08-04 11:53:33,201 DEBUG incoming_def num_neg_value = const(int, 0)
2022-08-04 11:53:33,201 DEBUG replaced with: $36.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:53:33,201 DEBUG on stmt: num_neg_value.1 = $36.3
2022-08-04 11:53:33,201 DEBUG on stmt: neg_ax = ax
2022-08-04 11:53:33,201 DEBUG on stmt: jump 169
2022-08-04 11:53:33,201 DEBUG ==== SSA block rewrite pass on 50
2022-08-04 11:53:33,201 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdd664e0>
2022-08-04 11:53:33,201 DEBUG on stmt: $50.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:53:33,201 DEBUG on stmt: known_size = $50.3
2022-08-04 11:53:33,201 DEBUG on stmt: jump 169
2022-08-04 11:53:33,201 DEBUG ==== SSA block rewrite pass on 60
2022-08-04 11:53:33,201 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdd664e0>
2022-08-04 11:53:33,201 DEBUG on stmt: jump 62
2022-08-04 11:53:33,201 DEBUG ==== SSA block rewrite pass on 62
2022-08-04 11:53:33,201 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdd664e0>
2022-08-04 11:53:33,202 DEBUG on stmt: $const62.2 = const(int, 0)
2022-08-04 11:53:33,202 DEBUG on stmt: $62.3 = num_neg_value == $const62.2
2022-08-04 11:53:33,202 DEBUG find_def var='num_neg_value' stmt=$62.3 = num_neg_value == $const62.2
2022-08-04 11:53:33,202 DEBUG find_def_from_top label 62
2022-08-04 11:53:33,202 DEBUG idom 60 from label 62
2022-08-04 11:53:33,202 DEBUG find_def_from_bottom label 60
2022-08-04 11:53:33,202 DEBUG find_def_from_top label 60
2022-08-04 11:53:33,202 DEBUG idom 20 from label 60
2022-08-04 11:53:33,202 DEBUG find_def_from_bottom label 20
2022-08-04 11:53:33,202 DEBUG replaced with: $62.3 = num_neg_value.2 == $const62.2
2022-08-04 11:53:33,202 DEBUG on stmt: bool68 = global(bool: <class 'bool'>)
2022-08-04 11:53:33,202 DEBUG on stmt: $68pred = call bool68($62.3, func=bool68, args=(Var($62.3, arrayobj.py:1611),), kws=(), vararg=None)
2022-08-04 11:53:33,202 DEBUG on stmt: branch $68pred, 70, 88
2022-08-04 11:53:33,202 DEBUG ==== SSA block rewrite pass on 70
2022-08-04 11:53:33,202 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdd664e0>
2022-08-04 11:53:33,202 DEBUG on stmt: $70.3 = origsize != known_size
2022-08-04 11:53:33,202 DEBUG on stmt: bool76 = global(bool: <class 'bool'>)
2022-08-04 11:53:33,202 DEBUG on stmt: $76pred = call bool76($70.3, func=bool76, args=(Var($70.3, arrayobj.py:1612),), kws=(), vararg=None)
2022-08-04 11:53:33,202 DEBUG on stmt: branch $76pred, 78, 168
2022-08-04 11:53:33,202 DEBUG ==== SSA block rewrite pass on 78
2022-08-04 11:53:33,202 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdd664e0>
2022-08-04 11:53:33,202 DEBUG on stmt: $78.1 = global(ValueError: <class 'ValueError'>)
2022-08-04 11:53:33,202 DEBUG on stmt: $const78.2 = const(str, total size of new array must be unchanged)
2022-08-04 11:53:33,203 DEBUG on stmt: $78.3 = call $78.1($const78.2, func=$78.1, args=[Var($const78.2, arrayobj.py:1613)], kws=(), vararg=None)
2022-08-04 11:53:33,203 DEBUG on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2022-08-04 11:53:33,203 DEBUG ==== SSA block rewrite pass on 88
2022-08-04 11:53:33,203 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdd664e0>
2022-08-04 11:53:33,203 DEBUG on stmt: $const88.2 = const(int, 1)
2022-08-04 11:53:33,203 DEBUG on stmt: $88.3 = num_neg_value == $const88.2
2022-08-04 11:53:33,203 DEBUG find_def var='num_neg_value' stmt=$88.3 = num_neg_value == $const88.2
2022-08-04 11:53:33,203 DEBUG find_def_from_top label 88
2022-08-04 11:53:33,203 DEBUG idom 62 from label 88
2022-08-04 11:53:33,203 DEBUG find_def_from_bottom label 62
2022-08-04 11:53:33,203 DEBUG find_def_from_top label 62
2022-08-04 11:53:33,203 DEBUG idom 60 from label 62
2022-08-04 11:53:33,203 DEBUG find_def_from_bottom label 60
2022-08-04 11:53:33,203 DEBUG find_def_from_top label 60
2022-08-04 11:53:33,203 DEBUG idom 20 from label 60
2022-08-04 11:53:33,203 DEBUG find_def_from_bottom label 20
2022-08-04 11:53:33,203 DEBUG replaced with: $88.3 = num_neg_value.2 == $const88.2
2022-08-04 11:53:33,203 DEBUG on stmt: bool94 = global(bool: <class 'bool'>)
2022-08-04 11:53:33,203 DEBUG on stmt: $94pred = call bool94($88.3, func=bool94, args=(Var($88.3, arrayobj.py:1615),), kws=(), vararg=None)
2022-08-04 11:53:33,203 DEBUG on stmt: branch $94pred, 96, 160
2022-08-04 11:53:33,203 DEBUG ==== SSA block rewrite pass on 96
2022-08-04 11:53:33,203 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdd664e0>
2022-08-04 11:53:33,204 DEBUG on stmt: $const96.2 = const(int, 0)
2022-08-04 11:53:33,204 DEBUG on stmt: $96.3 = known_size == $const96.2
2022-08-04 11:53:33,204 DEBUG on stmt: bool102 = global(bool: <class 'bool'>)
2022-08-04 11:53:33,204 DEBUG on stmt: $102pred = call bool102($96.3, func=bool102, args=(Var($96.3, arrayobj.py:1617),), kws=(), vararg=None)
2022-08-04 11:53:33,204 DEBUG on stmt: branch $102pred, 104, 118
2022-08-04 11:53:33,204 DEBUG ==== SSA block rewrite pass on 104
2022-08-04 11:53:33,204 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdd664e0>
2022-08-04 11:53:33,204 DEBUG on stmt: inferred = const(int, 0)
2022-08-04 11:53:33,204 DEBUG on stmt: $const104.3 = const(int, 0)
2022-08-04 11:53:33,204 DEBUG on stmt: ok = origsize == $const104.3
2022-08-04 11:53:33,204 DEBUG on stmt: jump 138
2022-08-04 11:53:33,204 DEBUG ==== SSA block rewrite pass on 118
2022-08-04 11:53:33,204 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdd664e0>
2022-08-04 11:53:33,204 DEBUG on stmt: inferred = origsize // known_size
2022-08-04 11:53:33,204 DEBUG on stmt: $118.6 = origsize % known_size
2022-08-04 11:53:33,204 DEBUG on stmt: $const118.7 = const(int, 0)
2022-08-04 11:53:33,204 DEBUG on stmt: ok = $118.6 == $const118.7
2022-08-04 11:53:33,205 DEBUG on stmt: jump 138
2022-08-04 11:53:33,205 DEBUG ==== SSA block rewrite pass on 138
2022-08-04 11:53:33,205 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdd664e0>
2022-08-04 11:53:33,205 DEBUG on stmt: bool140 = global(bool: <class 'bool'>)
2022-08-04 11:53:33,205 DEBUG on stmt: $140pred = call bool140(ok, func=bool140, args=(Var(ok, arrayobj.py:1619),), kws=(), vararg=None)
2022-08-04 11:53:33,205 DEBUG on stmt: branch $140pred, 150, 142
2022-08-04 11:53:33,206 DEBUG ==== SSA block rewrite pass on 142
2022-08-04 11:53:33,206 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdd664e0>
2022-08-04 11:53:33,206 DEBUG on stmt: $142.1 = global(ValueError: <class 'ValueError'>)
2022-08-04 11:53:33,206 DEBUG on stmt: $const142.2 = const(str, total size of new array must be unchanged)
2022-08-04 11:53:33,206 DEBUG on stmt: $142.3 = call $142.1($const142.2, func=$142.1, args=[Var($const142.2, arrayobj.py:1624)], kws=(), vararg=None)
2022-08-04 11:53:33,206 DEBUG on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2022-08-04 11:53:33,206 DEBUG ==== SSA block rewrite pass on 150
2022-08-04 11:53:33,206 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdd664e0>
2022-08-04 11:53:33,206 DEBUG on stmt: shape[neg_ax] = inferred
2022-08-04 11:53:33,206 DEBUG on stmt: jump 168
2022-08-04 11:53:33,206 DEBUG ==== SSA block rewrite pass on 160
2022-08-04 11:53:33,206 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdd664e0>
2022-08-04 11:53:33,206 DEBUG on stmt: $160.1 = global(ValueError: <class 'ValueError'>)
2022-08-04 11:53:33,206 DEBUG on stmt: $const160.2 = const(str, multiple negative shape values)
2022-08-04 11:53:33,207 DEBUG on stmt: $160.3 = call $160.1($const160.2, func=$160.1, args=[Var($const160.2, arrayobj.py:1628)], kws=(), vararg=None)
2022-08-04 11:53:33,207 DEBUG on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
2022-08-04 11:53:33,207 DEBUG ==== SSA block rewrite pass on 168
2022-08-04 11:53:33,207 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdd664e0>
2022-08-04 11:53:33,207 DEBUG on stmt: $const168.1 = const(NoneType, None)
2022-08-04 11:53:33,207 DEBUG on stmt: $168.2 = cast(value=$const168.1)
2022-08-04 11:53:33,207 DEBUG on stmt: return $168.2
2022-08-04 11:53:33,207 DEBUG ==== SSA block rewrite pass on 169
2022-08-04 11:53:33,207 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdd664e0>
2022-08-04 11:53:33,207 DEBUG on stmt: jump 20
2022-08-04 11:53:33,207 DEBUG Fix SSA violator on var known_size
2022-08-04 11:53:33,207 DEBUG ==== SSA block rewrite pass on 0
2022-08-04 11:53:33,207 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ced55400>
2022-08-04 11:53:33,207 DEBUG on stmt: origsize = arg(0, name=origsize)
2022-08-04 11:53:33,207 DEBUG on stmt: shape = arg(1, name=shape)
2022-08-04 11:53:33,208 DEBUG on stmt: num_neg_value = const(int, 0)
2022-08-04 11:53:33,208 DEBUG on stmt: known_size = const(int, 1)
2022-08-04 11:53:33,208 DEBUG first assign: known_size
2022-08-04 11:53:33,208 DEBUG replaced with: known_size = const(int, 1)
2022-08-04 11:53:33,208 DEBUG on stmt: jump 10
2022-08-04 11:53:33,208 DEBUG ==== SSA block rewrite pass on 10
2022-08-04 11:53:33,208 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ced55400>
2022-08-04 11:53:33,208 DEBUG on stmt: jump 12
2022-08-04 11:53:33,208 DEBUG ==== SSA block rewrite pass on 12
2022-08-04 11:53:33,208 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ced55400>
2022-08-04 11:53:33,208 DEBUG on stmt: $12.1 = global(enumerate: <class 'enumerate'>)
2022-08-04 11:53:33,208 DEBUG on stmt: $12.3 = call $12.1(shape, func=$12.1, args=[Var(shape, arrayobj.py:1602)], kws=(), vararg=None)
2022-08-04 11:53:33,208 DEBUG on stmt: $12.4 = getiter(value=$12.3)
2022-08-04 11:53:33,208 DEBUG on stmt: $phi20.1 = $12.4
2022-08-04 11:53:33,208 DEBUG on stmt: jump 20
2022-08-04 11:53:33,208 DEBUG ==== SSA block rewrite pass on 20
2022-08-04 11:53:33,208 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ced55400>
2022-08-04 11:53:33,208 DEBUG on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value.3, arrayobj.py:1606), Var(num_neg_value, arrayobj.py:1602)], incoming_blocks=[169, 12])
2022-08-04 11:53:33,208 DEBUG on stmt: $20.2 = iternext(value=$phi20.1)
2022-08-04 11:53:33,208 DEBUG on stmt: $20.3 = pair_first(value=$20.2)
2022-08-04 11:53:33,208 DEBUG on stmt: $20.4 = pair_second(value=$20.2)
2022-08-04 11:53:33,208 DEBUG on stmt: $phi22.1 = $20.3
2022-08-04 11:53:33,208 DEBUG on stmt: $phi60.1 = $20.3
2022-08-04 11:53:33,208 DEBUG on stmt: $phi60.2 = $phi20.1
2022-08-04 11:53:33,208 DEBUG on stmt: branch $20.4, 22, 60
2022-08-04 11:53:33,208 DEBUG ==== SSA block rewrite pass on 22
2022-08-04 11:53:33,208 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ced55400>
2022-08-04 11:53:33,209 DEBUG on stmt: $22.4 = exhaust_iter(value=$phi22.1, count=2)
2022-08-04 11:53:33,209 DEBUG on stmt: $22.2 = static_getitem(value=$22.4, index=0, index_var=None, fn=<built-in function getitem>)
2022-08-04 11:53:33,209 DEBUG on stmt: $22.3 = static_getitem(value=$22.4, index=1, index_var=None, fn=<built-in function getitem>)
2022-08-04 11:53:33,209 DEBUG on stmt: ax = $22.2
2022-08-04 11:53:33,209 DEBUG on stmt: s = $22.3
2022-08-04 11:53:33,209 DEBUG on stmt: $const22.6 = const(int, 0)
2022-08-04 11:53:33,209 DEBUG on stmt: $22.7 = s < $const22.6
2022-08-04 11:53:33,209 DEBUG on stmt: bool34 = global(bool: <class 'bool'>)
2022-08-04 11:53:33,209 DEBUG on stmt: $34pred = call bool34($22.7, func=bool34, args=(Var($22.7, arrayobj.py:1605),), kws=(), vararg=None)
2022-08-04 11:53:33,209 DEBUG on stmt: branch $34pred, 36, 50
2022-08-04 11:53:33,209 DEBUG ==== SSA block rewrite pass on 36
2022-08-04 11:53:33,209 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ced55400>
2022-08-04 11:53:33,209 DEBUG on stmt: $const36.2 = const(int, 1)
2022-08-04 11:53:33,209 DEBUG on stmt: $36.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:53:33,209 DEBUG on stmt: num_neg_value.1 = $36.3
2022-08-04 11:53:33,209 DEBUG on stmt: neg_ax = ax
2022-08-04 11:53:33,209 DEBUG on stmt: jump 169
2022-08-04 11:53:33,209 DEBUG ==== SSA block rewrite pass on 50
2022-08-04 11:53:33,209 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ced55400>
2022-08-04 11:53:33,209 DEBUG on stmt: $50.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:53:33,209 DEBUG on stmt: known_size = $50.3
2022-08-04 11:53:33,209 DEBUG replaced with: known_size.1 = $50.3
2022-08-04 11:53:33,209 DEBUG on stmt: jump 169
2022-08-04 11:53:33,209 DEBUG ==== SSA block rewrite pass on 60
2022-08-04 11:53:33,209 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ced55400>
2022-08-04 11:53:33,209 DEBUG on stmt: jump 62
2022-08-04 11:53:33,209 DEBUG ==== SSA block rewrite pass on 62
2022-08-04 11:53:33,209 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ced55400>
2022-08-04 11:53:33,210 DEBUG on stmt: $const62.2 = const(int, 0)
2022-08-04 11:53:33,210 DEBUG on stmt: $62.3 = num_neg_value.2 == $const62.2
2022-08-04 11:53:33,210 DEBUG on stmt: bool68 = global(bool: <class 'bool'>)
2022-08-04 11:53:33,210 DEBUG on stmt: $68pred = call bool68($62.3, func=bool68, args=(Var($62.3, arrayobj.py:1611),), kws=(), vararg=None)
2022-08-04 11:53:33,210 DEBUG on stmt: branch $68pred, 70, 88
2022-08-04 11:53:33,210 DEBUG ==== SSA block rewrite pass on 70
2022-08-04 11:53:33,210 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ced55400>
2022-08-04 11:53:33,210 DEBUG on stmt: $70.3 = origsize != known_size
2022-08-04 11:53:33,210 DEBUG on stmt: bool76 = global(bool: <class 'bool'>)
2022-08-04 11:53:33,210 DEBUG on stmt: $76pred = call bool76($70.3, func=bool76, args=(Var($70.3, arrayobj.py:1612),), kws=(), vararg=None)
2022-08-04 11:53:33,210 DEBUG on stmt: branch $76pred, 78, 168
2022-08-04 11:53:33,210 DEBUG ==== SSA block rewrite pass on 78
2022-08-04 11:53:33,210 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ced55400>
2022-08-04 11:53:33,210 DEBUG on stmt: $78.1 = global(ValueError: <class 'ValueError'>)
2022-08-04 11:53:33,210 DEBUG on stmt: $const78.2 = const(str, total size of new array must be unchanged)
2022-08-04 11:53:33,210 DEBUG on stmt: $78.3 = call $78.1($const78.2, func=$78.1, args=[Var($const78.2, arrayobj.py:1613)], kws=(), vararg=None)
2022-08-04 11:53:33,210 DEBUG on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2022-08-04 11:53:33,210 DEBUG ==== SSA block rewrite pass on 88
2022-08-04 11:53:33,210 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ced55400>
2022-08-04 11:53:33,210 DEBUG on stmt: $const88.2 = const(int, 1)
2022-08-04 11:53:33,210 DEBUG on stmt: $88.3 = num_neg_value.2 == $const88.2
2022-08-04 11:53:33,210 DEBUG on stmt: bool94 = global(bool: <class 'bool'>)
2022-08-04 11:53:33,210 DEBUG on stmt: $94pred = call bool94($88.3, func=bool94, args=(Var($88.3, arrayobj.py:1615),), kws=(), vararg=None)
2022-08-04 11:53:33,210 DEBUG on stmt: branch $94pred, 96, 160
2022-08-04 11:53:33,210 DEBUG ==== SSA block rewrite pass on 96
2022-08-04 11:53:33,210 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ced55400>
2022-08-04 11:53:33,210 DEBUG on stmt: $const96.2 = const(int, 0)
2022-08-04 11:53:33,211 DEBUG on stmt: $96.3 = known_size == $const96.2
2022-08-04 11:53:33,211 DEBUG on stmt: bool102 = global(bool: <class 'bool'>)
2022-08-04 11:53:33,211 DEBUG on stmt: $102pred = call bool102($96.3, func=bool102, args=(Var($96.3, arrayobj.py:1617),), kws=(), vararg=None)
2022-08-04 11:53:33,211 DEBUG on stmt: branch $102pred, 104, 118
2022-08-04 11:53:33,211 DEBUG ==== SSA block rewrite pass on 104
2022-08-04 11:53:33,211 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ced55400>
2022-08-04 11:53:33,211 DEBUG on stmt: inferred = const(int, 0)
2022-08-04 11:53:33,211 DEBUG on stmt: $const104.3 = const(int, 0)
2022-08-04 11:53:33,211 DEBUG on stmt: ok = origsize == $const104.3
2022-08-04 11:53:33,211 DEBUG on stmt: jump 138
2022-08-04 11:53:33,211 DEBUG ==== SSA block rewrite pass on 118
2022-08-04 11:53:33,211 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ced55400>
2022-08-04 11:53:33,211 DEBUG on stmt: inferred = origsize // known_size
2022-08-04 11:53:33,211 DEBUG on stmt: $118.6 = origsize % known_size
2022-08-04 11:53:33,211 DEBUG on stmt: $const118.7 = const(int, 0)
2022-08-04 11:53:33,211 DEBUG on stmt: ok = $118.6 == $const118.7
2022-08-04 11:53:33,211 DEBUG on stmt: jump 138
2022-08-04 11:53:33,211 DEBUG ==== SSA block rewrite pass on 138
2022-08-04 11:53:33,211 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ced55400>
2022-08-04 11:53:33,211 DEBUG on stmt: bool140 = global(bool: <class 'bool'>)
2022-08-04 11:53:33,212 DEBUG on stmt: $140pred = call bool140(ok, func=bool140, args=(Var(ok, arrayobj.py:1619),), kws=(), vararg=None)
2022-08-04 11:53:33,212 DEBUG on stmt: branch $140pred, 150, 142
2022-08-04 11:53:33,212 DEBUG ==== SSA block rewrite pass on 142
2022-08-04 11:53:33,212 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ced55400>
2022-08-04 11:53:33,212 DEBUG on stmt: $142.1 = global(ValueError: <class 'ValueError'>)
2022-08-04 11:53:33,212 DEBUG on stmt: $const142.2 = const(str, total size of new array must be unchanged)
2022-08-04 11:53:33,212 DEBUG on stmt: $142.3 = call $142.1($const142.2, func=$142.1, args=[Var($const142.2, arrayobj.py:1624)], kws=(), vararg=None)
2022-08-04 11:53:33,212 DEBUG on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2022-08-04 11:53:33,212 DEBUG ==== SSA block rewrite pass on 150
2022-08-04 11:53:33,212 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ced55400>
2022-08-04 11:53:33,212 DEBUG on stmt: shape[neg_ax] = inferred
2022-08-04 11:53:33,212 DEBUG on stmt: jump 168
2022-08-04 11:53:33,212 DEBUG ==== SSA block rewrite pass on 160
2022-08-04 11:53:33,212 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ced55400>
2022-08-04 11:53:33,212 DEBUG on stmt: $160.1 = global(ValueError: <class 'ValueError'>)
2022-08-04 11:53:33,212 DEBUG on stmt: $const160.2 = const(str, multiple negative shape values)
2022-08-04 11:53:33,212 DEBUG on stmt: $160.3 = call $160.1($const160.2, func=$160.1, args=[Var($const160.2, arrayobj.py:1628)], kws=(), vararg=None)
2022-08-04 11:53:33,212 DEBUG on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
2022-08-04 11:53:33,212 DEBUG ==== SSA block rewrite pass on 168
2022-08-04 11:53:33,212 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ced55400>
2022-08-04 11:53:33,212 DEBUG on stmt: $const168.1 = const(NoneType, None)
2022-08-04 11:53:33,212 DEBUG on stmt: $168.2 = cast(value=$const168.1)
2022-08-04 11:53:33,212 DEBUG on stmt: return $168.2
2022-08-04 11:53:33,212 DEBUG ==== SSA block rewrite pass on 169
2022-08-04 11:53:33,212 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2ced55400>
2022-08-04 11:53:33,212 DEBUG on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.2, arrayobj.py:1606), Var(num_neg_value.1, arrayobj.py:1606)], incoming_blocks=[50, 36])
2022-08-04 11:53:33,212 DEBUG on stmt: jump 20
2022-08-04 11:53:33,213 DEBUG Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7fa2cdd666d8>],
             50: [<numba.core.ir.Assign object at 0x7fa2cdd660b8>]})
2022-08-04 11:53:33,213 DEBUG ==== SSA block rewrite pass on 0
2022-08-04 11:53:33,213 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2c92724a8>
2022-08-04 11:53:33,213 DEBUG on stmt: origsize = arg(0, name=origsize)
2022-08-04 11:53:33,213 DEBUG on stmt: shape = arg(1, name=shape)
2022-08-04 11:53:33,213 DEBUG on stmt: num_neg_value = const(int, 0)
2022-08-04 11:53:33,213 DEBUG on stmt: known_size = const(int, 1)
2022-08-04 11:53:33,213 DEBUG on stmt: jump 10
2022-08-04 11:53:33,213 DEBUG ==== SSA block rewrite pass on 10
2022-08-04 11:53:33,213 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2c92724a8>
2022-08-04 11:53:33,213 DEBUG on stmt: jump 12
2022-08-04 11:53:33,213 DEBUG ==== SSA block rewrite pass on 12
2022-08-04 11:53:33,213 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2c92724a8>
2022-08-04 11:53:33,213 DEBUG on stmt: $12.1 = global(enumerate: <class 'enumerate'>)
2022-08-04 11:53:33,213 DEBUG on stmt: $12.3 = call $12.1(shape, func=$12.1, args=[Var(shape, arrayobj.py:1602)], kws=(), vararg=None)
2022-08-04 11:53:33,213 DEBUG on stmt: $12.4 = getiter(value=$12.3)
2022-08-04 11:53:33,213 DEBUG on stmt: $phi20.1 = $12.4
2022-08-04 11:53:33,213 DEBUG on stmt: jump 20
2022-08-04 11:53:33,214 DEBUG ==== SSA block rewrite pass on 20
2022-08-04 11:53:33,214 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2c92724a8>
2022-08-04 11:53:33,214 DEBUG on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value.3, arrayobj.py:1606), Var(num_neg_value, arrayobj.py:1602)], incoming_blocks=[169, 12])
2022-08-04 11:53:33,214 DEBUG on stmt: $20.2 = iternext(value=$phi20.1)
2022-08-04 11:53:33,214 DEBUG on stmt: $20.3 = pair_first(value=$20.2)
2022-08-04 11:53:33,214 DEBUG on stmt: $20.4 = pair_second(value=$20.2)
2022-08-04 11:53:33,214 DEBUG on stmt: $phi22.1 = $20.3
2022-08-04 11:53:33,214 DEBUG on stmt: $phi60.1 = $20.3
2022-08-04 11:53:33,214 DEBUG on stmt: $phi60.2 = $phi20.1
2022-08-04 11:53:33,214 DEBUG on stmt: branch $20.4, 22, 60
2022-08-04 11:53:33,214 DEBUG ==== SSA block rewrite pass on 22
2022-08-04 11:53:33,214 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2c92724a8>
2022-08-04 11:53:33,214 DEBUG on stmt: $22.4 = exhaust_iter(value=$phi22.1, count=2)
2022-08-04 11:53:33,214 DEBUG on stmt: $22.2 = static_getitem(value=$22.4, index=0, index_var=None, fn=<built-in function getitem>)
2022-08-04 11:53:33,214 DEBUG on stmt: $22.3 = static_getitem(value=$22.4, index=1, index_var=None, fn=<built-in function getitem>)
2022-08-04 11:53:33,214 DEBUG on stmt: ax = $22.2
2022-08-04 11:53:33,214 DEBUG on stmt: s = $22.3
2022-08-04 11:53:33,214 DEBUG on stmt: $const22.6 = const(int, 0)
2022-08-04 11:53:33,214 DEBUG on stmt: $22.7 = s < $const22.6
2022-08-04 11:53:33,214 DEBUG on stmt: bool34 = global(bool: <class 'bool'>)
2022-08-04 11:53:33,214 DEBUG on stmt: $34pred = call bool34($22.7, func=bool34, args=(Var($22.7, arrayobj.py:1605),), kws=(), vararg=None)
2022-08-04 11:53:33,214 DEBUG on stmt: branch $34pred, 36, 50
2022-08-04 11:53:33,214 DEBUG ==== SSA block rewrite pass on 36
2022-08-04 11:53:33,214 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2c92724a8>
2022-08-04 11:53:33,214 DEBUG on stmt: $const36.2 = const(int, 1)
2022-08-04 11:53:33,215 DEBUG on stmt: $36.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:53:33,215 DEBUG on stmt: num_neg_value.1 = $36.3
2022-08-04 11:53:33,215 DEBUG on stmt: neg_ax = ax
2022-08-04 11:53:33,215 DEBUG on stmt: jump 169
2022-08-04 11:53:33,215 DEBUG ==== SSA block rewrite pass on 50
2022-08-04 11:53:33,215 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2c92724a8>
2022-08-04 11:53:33,215 DEBUG on stmt: $50.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:53:33,215 DEBUG find_def var='known_size' stmt=$50.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:53:33,215 DEBUG find_def_from_top label 50
2022-08-04 11:53:33,215 DEBUG idom 22 from label 50
2022-08-04 11:53:33,215 DEBUG find_def_from_bottom label 22
2022-08-04 11:53:33,215 DEBUG find_def_from_top label 22
2022-08-04 11:53:33,215 DEBUG idom 20 from label 22
2022-08-04 11:53:33,215 DEBUG find_def_from_bottom label 20
2022-08-04 11:53:33,215 DEBUG find_def_from_top label 20
2022-08-04 11:53:33,215 DEBUG insert phi node known_size.2 = phi(incoming_values=[], incoming_blocks=[]) at 20
2022-08-04 11:53:33,215 DEBUG find_def_from_bottom label 169
2022-08-04 11:53:33,215 DEBUG find_def_from_top label 169
2022-08-04 11:53:33,215 DEBUG insert phi node known_size.3 = phi(incoming_values=[], incoming_blocks=[]) at 169
2022-08-04 11:53:33,215 DEBUG find_def_from_bottom label 50
2022-08-04 11:53:33,215 DEBUG incoming_def known_size.1 = $50.3
2022-08-04 11:53:33,215 DEBUG find_def_from_bottom label 36
2022-08-04 11:53:33,215 DEBUG find_def_from_top label 36
2022-08-04 11:53:33,215 DEBUG idom 22 from label 36
2022-08-04 11:53:33,215 DEBUG find_def_from_bottom label 22
2022-08-04 11:53:33,215 DEBUG find_def_from_top label 22
2022-08-04 11:53:33,215 DEBUG idom 20 from label 22
2022-08-04 11:53:33,215 DEBUG find_def_from_bottom label 20
2022-08-04 11:53:33,216 DEBUG incoming_def known_size.2 = phi(incoming_values=[], incoming_blocks=[])
2022-08-04 11:53:33,216 DEBUG incoming_def known_size.3 = phi(incoming_values=[Var(known_size.1, arrayobj.py:1609), Var(known_size.2, arrayobj.py:1609)], incoming_blocks=[50, 36])
2022-08-04 11:53:33,216 DEBUG find_def_from_bottom label 12
2022-08-04 11:53:33,216 DEBUG find_def_from_top label 12
2022-08-04 11:53:33,216 DEBUG idom 10 from label 12
2022-08-04 11:53:33,216 DEBUG find_def_from_bottom label 10
2022-08-04 11:53:33,216 DEBUG find_def_from_top label 10
2022-08-04 11:53:33,216 DEBUG idom 0 from label 10
2022-08-04 11:53:33,216 DEBUG find_def_from_bottom label 0
2022-08-04 11:53:33,216 DEBUG incoming_def known_size = const(int, 1)
2022-08-04 11:53:33,216 DEBUG replaced with: $50.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size.2, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:53:33,216 DEBUG on stmt: known_size.1 = $50.3
2022-08-04 11:53:33,216 DEBUG on stmt: jump 169
2022-08-04 11:53:33,216 DEBUG ==== SSA block rewrite pass on 60
2022-08-04 11:53:33,216 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2c92724a8>
2022-08-04 11:53:33,216 DEBUG on stmt: jump 62
2022-08-04 11:53:33,216 DEBUG ==== SSA block rewrite pass on 62
2022-08-04 11:53:33,216 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2c92724a8>
2022-08-04 11:53:33,216 DEBUG on stmt: $const62.2 = const(int, 0)
2022-08-04 11:53:33,216 DEBUG on stmt: $62.3 = num_neg_value.2 == $const62.2
2022-08-04 11:53:33,216 DEBUG on stmt: bool68 = global(bool: <class 'bool'>)
2022-08-04 11:53:33,216 DEBUG on stmt: $68pred = call bool68($62.3, func=bool68, args=(Var($62.3, arrayobj.py:1611),), kws=(), vararg=None)
2022-08-04 11:53:33,216 DEBUG on stmt: branch $68pred, 70, 88
2022-08-04 11:53:33,216 DEBUG ==== SSA block rewrite pass on 70
2022-08-04 11:53:33,216 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2c92724a8>
2022-08-04 11:53:33,216 DEBUG on stmt: $70.3 = origsize != known_size
2022-08-04 11:53:33,217 DEBUG find_def var='known_size' stmt=$70.3 = origsize != known_size
2022-08-04 11:53:33,217 DEBUG find_def_from_top label 70
2022-08-04 11:53:33,217 DEBUG idom 62 from label 70
2022-08-04 11:53:33,217 DEBUG find_def_from_bottom label 62
2022-08-04 11:53:33,217 DEBUG find_def_from_top label 62
2022-08-04 11:53:33,217 DEBUG idom 60 from label 62
2022-08-04 11:53:33,217 DEBUG find_def_from_bottom label 60
2022-08-04 11:53:33,217 DEBUG find_def_from_top label 60
2022-08-04 11:53:33,217 DEBUG idom 20 from label 60
2022-08-04 11:53:33,217 DEBUG find_def_from_bottom label 20
2022-08-04 11:53:33,217 DEBUG replaced with: $70.3 = origsize != known_size.2
2022-08-04 11:53:33,217 DEBUG on stmt: bool76 = global(bool: <class 'bool'>)
2022-08-04 11:53:33,217 DEBUG on stmt: $76pred = call bool76($70.3, func=bool76, args=(Var($70.3, arrayobj.py:1612),), kws=(), vararg=None)
2022-08-04 11:53:33,217 DEBUG on stmt: branch $76pred, 78, 168
2022-08-04 11:53:33,217 DEBUG ==== SSA block rewrite pass on 78
2022-08-04 11:53:33,217 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2c92724a8>
2022-08-04 11:53:33,217 DEBUG on stmt: $78.1 = global(ValueError: <class 'ValueError'>)
2022-08-04 11:53:33,217 DEBUG on stmt: $const78.2 = const(str, total size of new array must be unchanged)
2022-08-04 11:53:33,217 DEBUG on stmt: $78.3 = call $78.1($const78.2, func=$78.1, args=[Var($const78.2, arrayobj.py:1613)], kws=(), vararg=None)
2022-08-04 11:53:33,217 DEBUG on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2022-08-04 11:53:33,217 DEBUG ==== SSA block rewrite pass on 88
2022-08-04 11:53:33,217 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2c92724a8>
2022-08-04 11:53:33,217 DEBUG on stmt: $const88.2 = const(int, 1)
2022-08-04 11:53:33,217 DEBUG on stmt: $88.3 = num_neg_value.2 == $const88.2
2022-08-04 11:53:33,217 DEBUG on stmt: bool94 = global(bool: <class 'bool'>)
2022-08-04 11:53:33,217 DEBUG on stmt: $94pred = call bool94($88.3, func=bool94, args=(Var($88.3, arrayobj.py:1615),), kws=(), vararg=None)
2022-08-04 11:53:33,218 DEBUG on stmt: branch $94pred, 96, 160
2022-08-04 11:53:33,218 DEBUG ==== SSA block rewrite pass on 96
2022-08-04 11:53:33,218 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2c92724a8>
2022-08-04 11:53:33,218 DEBUG on stmt: $const96.2 = const(int, 0)
2022-08-04 11:53:33,218 DEBUG on stmt: $96.3 = known_size == $const96.2
2022-08-04 11:53:33,218 DEBUG find_def var='known_size' stmt=$96.3 = known_size == $const96.2
2022-08-04 11:53:33,218 DEBUG find_def_from_top label 96
2022-08-04 11:53:33,218 DEBUG idom 88 from label 96
2022-08-04 11:53:33,218 DEBUG find_def_from_bottom label 88
2022-08-04 11:53:33,218 DEBUG find_def_from_top label 88
2022-08-04 11:53:33,218 DEBUG idom 62 from label 88
2022-08-04 11:53:33,218 DEBUG find_def_from_bottom label 62
2022-08-04 11:53:33,218 DEBUG find_def_from_top label 62
2022-08-04 11:53:33,218 DEBUG idom 60 from label 62
2022-08-04 11:53:33,218 DEBUG find_def_from_bottom label 60
2022-08-04 11:53:33,218 DEBUG find_def_from_top label 60
2022-08-04 11:53:33,218 DEBUG idom 20 from label 60
2022-08-04 11:53:33,218 DEBUG find_def_from_bottom label 20
2022-08-04 11:53:33,218 DEBUG replaced with: $96.3 = known_size.2 == $const96.2
2022-08-04 11:53:33,218 DEBUG on stmt: bool102 = global(bool: <class 'bool'>)
2022-08-04 11:53:33,218 DEBUG on stmt: $102pred = call bool102($96.3, func=bool102, args=(Var($96.3, arrayobj.py:1617),), kws=(), vararg=None)
2022-08-04 11:53:33,218 DEBUG on stmt: branch $102pred, 104, 118
2022-08-04 11:53:33,218 DEBUG ==== SSA block rewrite pass on 104
2022-08-04 11:53:33,218 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2c92724a8>
2022-08-04 11:53:33,218 DEBUG on stmt: inferred = const(int, 0)
2022-08-04 11:53:33,218 DEBUG on stmt: $const104.3 = const(int, 0)
2022-08-04 11:53:33,218 DEBUG on stmt: ok = origsize == $const104.3
2022-08-04 11:53:33,219 DEBUG on stmt: jump 138
2022-08-04 11:53:33,219 DEBUG ==== SSA block rewrite pass on 118
2022-08-04 11:53:33,219 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2c92724a8>
2022-08-04 11:53:33,219 DEBUG on stmt: inferred = origsize // known_size
2022-08-04 11:53:33,219 DEBUG find_def var='known_size' stmt=inferred = origsize // known_size
2022-08-04 11:53:33,219 DEBUG find_def_from_top label 118
2022-08-04 11:53:33,219 DEBUG idom 96 from label 118
2022-08-04 11:53:33,219 DEBUG find_def_from_bottom label 96
2022-08-04 11:53:33,219 DEBUG find_def_from_top label 96
2022-08-04 11:53:33,219 DEBUG idom 88 from label 96
2022-08-04 11:53:33,219 DEBUG find_def_from_bottom label 88
2022-08-04 11:53:33,219 DEBUG find_def_from_top label 88
2022-08-04 11:53:33,219 DEBUG idom 62 from label 88
2022-08-04 11:53:33,219 DEBUG find_def_from_bottom label 62
2022-08-04 11:53:33,219 DEBUG find_def_from_top label 62
2022-08-04 11:53:33,219 DEBUG idom 60 from label 62
2022-08-04 11:53:33,219 DEBUG find_def_from_bottom label 60
2022-08-04 11:53:33,219 DEBUG find_def_from_top label 60
2022-08-04 11:53:33,219 DEBUG idom 20 from label 60
2022-08-04 11:53:33,219 DEBUG find_def_from_bottom label 20
2022-08-04 11:53:33,219 DEBUG replaced with: inferred = origsize // known_size.2
2022-08-04 11:53:33,219 DEBUG on stmt: $118.6 = origsize % known_size
2022-08-04 11:53:33,219 DEBUG find_def var='known_size' stmt=$118.6 = origsize % known_size
2022-08-04 11:53:33,219 DEBUG find_def_from_top label 118
2022-08-04 11:53:33,219 DEBUG idom 96 from label 118
2022-08-04 11:53:33,219 DEBUG find_def_from_bottom label 96
2022-08-04 11:53:33,219 DEBUG find_def_from_top label 96
2022-08-04 11:53:33,219 DEBUG idom 88 from label 96
2022-08-04 11:53:33,219 DEBUG find_def_from_bottom label 88
2022-08-04 11:53:33,220 DEBUG find_def_from_top label 88
2022-08-04 11:53:33,220 DEBUG idom 62 from label 88
2022-08-04 11:53:33,220 DEBUG find_def_from_bottom label 62
2022-08-04 11:53:33,220 DEBUG find_def_from_top label 62
2022-08-04 11:53:33,220 DEBUG idom 60 from label 62
2022-08-04 11:53:33,220 DEBUG find_def_from_bottom label 60
2022-08-04 11:53:33,220 DEBUG find_def_from_top label 60
2022-08-04 11:53:33,220 DEBUG idom 20 from label 60
2022-08-04 11:53:33,220 DEBUG find_def_from_bottom label 20
2022-08-04 11:53:33,220 DEBUG replaced with: $118.6 = origsize % known_size.2
2022-08-04 11:53:33,220 DEBUG on stmt: $const118.7 = const(int, 0)
2022-08-04 11:53:33,220 DEBUG on stmt: ok = $118.6 == $const118.7
2022-08-04 11:53:33,220 DEBUG on stmt: jump 138
2022-08-04 11:53:33,220 DEBUG ==== SSA block rewrite pass on 138
2022-08-04 11:53:33,220 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2c92724a8>
2022-08-04 11:53:33,220 DEBUG on stmt: bool140 = global(bool: <class 'bool'>)
2022-08-04 11:53:33,220 DEBUG on stmt: $140pred = call bool140(ok, func=bool140, args=(Var(ok, arrayobj.py:1619),), kws=(), vararg=None)
2022-08-04 11:53:33,220 DEBUG on stmt: branch $140pred, 150, 142
2022-08-04 11:53:33,220 DEBUG ==== SSA block rewrite pass on 142
2022-08-04 11:53:33,220 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2c92724a8>
2022-08-04 11:53:33,220 DEBUG on stmt: $142.1 = global(ValueError: <class 'ValueError'>)
2022-08-04 11:53:33,220 DEBUG on stmt: $const142.2 = const(str, total size of new array must be unchanged)
2022-08-04 11:53:33,220 DEBUG on stmt: $142.3 = call $142.1($const142.2, func=$142.1, args=[Var($const142.2, arrayobj.py:1624)], kws=(), vararg=None)
2022-08-04 11:53:33,220 DEBUG on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2022-08-04 11:53:33,220 DEBUG ==== SSA block rewrite pass on 150
2022-08-04 11:53:33,220 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2c92724a8>
2022-08-04 11:53:33,220 DEBUG on stmt: shape[neg_ax] = inferred
2022-08-04 11:53:33,221 DEBUG on stmt: jump 168
2022-08-04 11:53:33,221 DEBUG ==== SSA block rewrite pass on 160
2022-08-04 11:53:33,221 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2c92724a8>
2022-08-04 11:53:33,221 DEBUG on stmt: $160.1 = global(ValueError: <class 'ValueError'>)
2022-08-04 11:53:33,221 DEBUG on stmt: $const160.2 = const(str, multiple negative shape values)
2022-08-04 11:53:33,221 DEBUG on stmt: $160.3 = call $160.1($const160.2, func=$160.1, args=[Var($const160.2, arrayobj.py:1628)], kws=(), vararg=None)
2022-08-04 11:53:33,221 DEBUG on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
2022-08-04 11:53:33,221 DEBUG ==== SSA block rewrite pass on 168
2022-08-04 11:53:33,221 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2c92724a8>
2022-08-04 11:53:33,221 DEBUG on stmt: $const168.1 = const(NoneType, None)
2022-08-04 11:53:33,221 DEBUG on stmt: $168.2 = cast(value=$const168.1)
2022-08-04 11:53:33,221 DEBUG on stmt: return $168.2
2022-08-04 11:53:33,221 DEBUG ==== SSA block rewrite pass on 169
2022-08-04 11:53:33,221 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2c92724a8>
2022-08-04 11:53:33,221 DEBUG on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.2, arrayobj.py:1606), Var(num_neg_value.1, arrayobj.py:1606)], incoming_blocks=[50, 36])
2022-08-04 11:53:33,221 DEBUG on stmt: jump 20
2022-08-04 11:53:33,221 DEBUG Fix SSA violator on var inferred
2022-08-04 11:53:33,221 DEBUG ==== SSA block rewrite pass on 0
2022-08-04 11:53:33,221 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cec93be0>
2022-08-04 11:53:33,221 DEBUG on stmt: origsize = arg(0, name=origsize)
2022-08-04 11:53:33,221 DEBUG on stmt: shape = arg(1, name=shape)
2022-08-04 11:53:33,221 DEBUG on stmt: num_neg_value = const(int, 0)
2022-08-04 11:53:33,221 DEBUG on stmt: known_size = const(int, 1)
2022-08-04 11:53:33,221 DEBUG on stmt: jump 10
2022-08-04 11:53:33,221 DEBUG ==== SSA block rewrite pass on 10
2022-08-04 11:53:33,221 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cec93be0>
2022-08-04 11:53:33,222 DEBUG on stmt: jump 12
2022-08-04 11:53:33,222 DEBUG ==== SSA block rewrite pass on 12
2022-08-04 11:53:33,222 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cec93be0>
2022-08-04 11:53:33,222 DEBUG on stmt: $12.1 = global(enumerate: <class 'enumerate'>)
2022-08-04 11:53:33,222 DEBUG on stmt: $12.3 = call $12.1(shape, func=$12.1, args=[Var(shape, arrayobj.py:1602)], kws=(), vararg=None)
2022-08-04 11:53:33,222 DEBUG on stmt: $12.4 = getiter(value=$12.3)
2022-08-04 11:53:33,222 DEBUG on stmt: $phi20.1 = $12.4
2022-08-04 11:53:33,222 DEBUG on stmt: jump 20
2022-08-04 11:53:33,222 DEBUG ==== SSA block rewrite pass on 20
2022-08-04 11:53:33,222 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cec93be0>
2022-08-04 11:53:33,222 DEBUG on stmt: known_size.2 = phi(incoming_values=[Var(known_size.3, arrayobj.py:1609), Var(known_size, arrayobj.py:1603)], incoming_blocks=[169, 12])
2022-08-04 11:53:33,222 DEBUG on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value.3, arrayobj.py:1606), Var(num_neg_value, arrayobj.py:1602)], incoming_blocks=[169, 12])
2022-08-04 11:53:33,222 DEBUG on stmt: $20.2 = iternext(value=$phi20.1)
2022-08-04 11:53:33,222 DEBUG on stmt: $20.3 = pair_first(value=$20.2)
2022-08-04 11:53:33,222 DEBUG on stmt: $20.4 = pair_second(value=$20.2)
2022-08-04 11:53:33,222 DEBUG on stmt: $phi22.1 = $20.3
2022-08-04 11:53:33,222 DEBUG on stmt: $phi60.1 = $20.3
2022-08-04 11:53:33,222 DEBUG on stmt: $phi60.2 = $phi20.1
2022-08-04 11:53:33,222 DEBUG on stmt: branch $20.4, 22, 60
2022-08-04 11:53:33,222 DEBUG ==== SSA block rewrite pass on 22
2022-08-04 11:53:33,222 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cec93be0>
2022-08-04 11:53:33,222 DEBUG on stmt: $22.4 = exhaust_iter(value=$phi22.1, count=2)
2022-08-04 11:53:33,222 DEBUG on stmt: $22.2 = static_getitem(value=$22.4, index=0, index_var=None, fn=<built-in function getitem>)
2022-08-04 11:53:33,222 DEBUG on stmt: $22.3 = static_getitem(value=$22.4, index=1, index_var=None, fn=<built-in function getitem>)
2022-08-04 11:53:33,222 DEBUG on stmt: ax = $22.2
2022-08-04 11:53:33,222 DEBUG on stmt: s = $22.3
2022-08-04 11:53:33,222 DEBUG on stmt: $const22.6 = const(int, 0)
2022-08-04 11:53:33,222 DEBUG on stmt: $22.7 = s < $const22.6
2022-08-04 11:53:33,223 DEBUG on stmt: bool34 = global(bool: <class 'bool'>)
2022-08-04 11:53:33,223 DEBUG on stmt: $34pred = call bool34($22.7, func=bool34, args=(Var($22.7, arrayobj.py:1605),), kws=(), vararg=None)
2022-08-04 11:53:33,223 DEBUG on stmt: branch $34pred, 36, 50
2022-08-04 11:53:33,223 DEBUG ==== SSA block rewrite pass on 36
2022-08-04 11:53:33,223 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cec93be0>
2022-08-04 11:53:33,223 DEBUG on stmt: $const36.2 = const(int, 1)
2022-08-04 11:53:33,223 DEBUG on stmt: $36.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:53:33,223 DEBUG on stmt: num_neg_value.1 = $36.3
2022-08-04 11:53:33,223 DEBUG on stmt: neg_ax = ax
2022-08-04 11:53:33,223 DEBUG on stmt: jump 169
2022-08-04 11:53:33,223 DEBUG ==== SSA block rewrite pass on 50
2022-08-04 11:53:33,223 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cec93be0>
2022-08-04 11:53:33,223 DEBUG on stmt: $50.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size.2, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:53:33,223 DEBUG on stmt: known_size.1 = $50.3
2022-08-04 11:53:33,223 DEBUG on stmt: jump 169
2022-08-04 11:53:33,223 DEBUG ==== SSA block rewrite pass on 60
2022-08-04 11:53:33,223 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cec93be0>
2022-08-04 11:53:33,223 DEBUG on stmt: jump 62
2022-08-04 11:53:33,223 DEBUG ==== SSA block rewrite pass on 62
2022-08-04 11:53:33,223 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cec93be0>
2022-08-04 11:53:33,223 DEBUG on stmt: $const62.2 = const(int, 0)
2022-08-04 11:53:33,223 DEBUG on stmt: $62.3 = num_neg_value.2 == $const62.2
2022-08-04 11:53:33,223 DEBUG on stmt: bool68 = global(bool: <class 'bool'>)
2022-08-04 11:53:33,223 DEBUG on stmt: $68pred = call bool68($62.3, func=bool68, args=(Var($62.3, arrayobj.py:1611),), kws=(), vararg=None)
2022-08-04 11:53:33,223 DEBUG on stmt: branch $68pred, 70, 88
2022-08-04 11:53:33,223 DEBUG ==== SSA block rewrite pass on 70
2022-08-04 11:53:33,223 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cec93be0>
2022-08-04 11:53:33,223 DEBUG on stmt: $70.3 = origsize != known_size.2
2022-08-04 11:53:33,224 DEBUG on stmt: bool76 = global(bool: <class 'bool'>)
2022-08-04 11:53:33,224 DEBUG on stmt: $76pred = call bool76($70.3, func=bool76, args=(Var($70.3, arrayobj.py:1612),), kws=(), vararg=None)
2022-08-04 11:53:33,224 DEBUG on stmt: branch $76pred, 78, 168
2022-08-04 11:53:33,224 DEBUG ==== SSA block rewrite pass on 78
2022-08-04 11:53:33,224 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cec93be0>
2022-08-04 11:53:33,224 DEBUG on stmt: $78.1 = global(ValueError: <class 'ValueError'>)
2022-08-04 11:53:33,224 DEBUG on stmt: $const78.2 = const(str, total size of new array must be unchanged)
2022-08-04 11:53:33,224 DEBUG on stmt: $78.3 = call $78.1($const78.2, func=$78.1, args=[Var($const78.2, arrayobj.py:1613)], kws=(), vararg=None)
2022-08-04 11:53:33,224 DEBUG on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2022-08-04 11:53:33,224 DEBUG ==== SSA block rewrite pass on 88
2022-08-04 11:53:33,224 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cec93be0>
2022-08-04 11:53:33,224 DEBUG on stmt: $const88.2 = const(int, 1)
2022-08-04 11:53:33,224 DEBUG on stmt: $88.3 = num_neg_value.2 == $const88.2
2022-08-04 11:53:33,224 DEBUG on stmt: bool94 = global(bool: <class 'bool'>)
2022-08-04 11:53:33,224 DEBUG on stmt: $94pred = call bool94($88.3, func=bool94, args=(Var($88.3, arrayobj.py:1615),), kws=(), vararg=None)
2022-08-04 11:53:33,224 DEBUG on stmt: branch $94pred, 96, 160
2022-08-04 11:53:33,224 DEBUG ==== SSA block rewrite pass on 96
2022-08-04 11:53:33,224 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cec93be0>
2022-08-04 11:53:33,224 DEBUG on stmt: $const96.2 = const(int, 0)
2022-08-04 11:53:33,224 DEBUG on stmt: $96.3 = known_size.2 == $const96.2
2022-08-04 11:53:33,224 DEBUG on stmt: bool102 = global(bool: <class 'bool'>)
2022-08-04 11:53:33,224 DEBUG on stmt: $102pred = call bool102($96.3, func=bool102, args=(Var($96.3, arrayobj.py:1617),), kws=(), vararg=None)
2022-08-04 11:53:33,224 DEBUG on stmt: branch $102pred, 104, 118
2022-08-04 11:53:33,224 DEBUG ==== SSA block rewrite pass on 104
2022-08-04 11:53:33,224 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cec93be0>
2022-08-04 11:53:33,224 DEBUG on stmt: inferred = const(int, 0)
2022-08-04 11:53:33,224 DEBUG first assign: inferred
2022-08-04 11:53:33,225 DEBUG replaced with: inferred = const(int, 0)
2022-08-04 11:53:33,225 DEBUG on stmt: $const104.3 = const(int, 0)
2022-08-04 11:53:33,225 DEBUG on stmt: ok = origsize == $const104.3
2022-08-04 11:53:33,225 DEBUG on stmt: jump 138
2022-08-04 11:53:33,225 DEBUG ==== SSA block rewrite pass on 118
2022-08-04 11:53:33,225 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cec93be0>
2022-08-04 11:53:33,225 DEBUG on stmt: inferred = origsize // known_size.2
2022-08-04 11:53:33,225 DEBUG replaced with: inferred.1 = origsize // known_size.2
2022-08-04 11:53:33,225 DEBUG on stmt: $118.6 = origsize % known_size.2
2022-08-04 11:53:33,225 DEBUG on stmt: $const118.7 = const(int, 0)
2022-08-04 11:53:33,225 DEBUG on stmt: ok = $118.6 == $const118.7
2022-08-04 11:53:33,225 DEBUG on stmt: jump 138
2022-08-04 11:53:33,225 DEBUG ==== SSA block rewrite pass on 138
2022-08-04 11:53:33,225 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cec93be0>
2022-08-04 11:53:33,225 DEBUG on stmt: bool140 = global(bool: <class 'bool'>)
2022-08-04 11:53:33,225 DEBUG on stmt: $140pred = call bool140(ok, func=bool140, args=(Var(ok, arrayobj.py:1619),), kws=(), vararg=None)
2022-08-04 11:53:33,225 DEBUG on stmt: branch $140pred, 150, 142
2022-08-04 11:53:33,225 DEBUG ==== SSA block rewrite pass on 142
2022-08-04 11:53:33,225 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cec93be0>
2022-08-04 11:53:33,225 DEBUG on stmt: $142.1 = global(ValueError: <class 'ValueError'>)
2022-08-04 11:53:33,225 DEBUG on stmt: $const142.2 = const(str, total size of new array must be unchanged)
2022-08-04 11:53:33,225 DEBUG on stmt: $142.3 = call $142.1($const142.2, func=$142.1, args=[Var($const142.2, arrayobj.py:1624)], kws=(), vararg=None)
2022-08-04 11:53:33,225 DEBUG on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2022-08-04 11:53:33,225 DEBUG ==== SSA block rewrite pass on 150
2022-08-04 11:53:33,226 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cec93be0>
2022-08-04 11:53:33,226 DEBUG on stmt: shape[neg_ax] = inferred
2022-08-04 11:53:33,226 DEBUG on stmt: jump 168
2022-08-04 11:53:33,226 DEBUG ==== SSA block rewrite pass on 160
2022-08-04 11:53:33,226 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cec93be0>
2022-08-04 11:53:33,226 DEBUG on stmt: $160.1 = global(ValueError: <class 'ValueError'>)
2022-08-04 11:53:33,226 DEBUG on stmt: $const160.2 = const(str, multiple negative shape values)
2022-08-04 11:53:33,226 DEBUG on stmt: $160.3 = call $160.1($const160.2, func=$160.1, args=[Var($const160.2, arrayobj.py:1628)], kws=(), vararg=None)
2022-08-04 11:53:33,226 DEBUG on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
2022-08-04 11:53:33,226 DEBUG ==== SSA block rewrite pass on 168
2022-08-04 11:53:33,226 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cec93be0>
2022-08-04 11:53:33,226 DEBUG on stmt: $const168.1 = const(NoneType, None)
2022-08-04 11:53:33,226 DEBUG on stmt: $168.2 = cast(value=$const168.1)
2022-08-04 11:53:33,226 DEBUG on stmt: return $168.2
2022-08-04 11:53:33,226 DEBUG ==== SSA block rewrite pass on 169
2022-08-04 11:53:33,226 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cec93be0>
2022-08-04 11:53:33,226 DEBUG on stmt: known_size.3 = phi(incoming_values=[Var(known_size.1, arrayobj.py:1609), Var(known_size.2, arrayobj.py:1609)], incoming_blocks=[50, 36])
2022-08-04 11:53:33,226 DEBUG on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.2, arrayobj.py:1606), Var(num_neg_value.1, arrayobj.py:1606)], incoming_blocks=[50, 36])
2022-08-04 11:53:33,226 DEBUG on stmt: jump 20
2022-08-04 11:53:33,226 DEBUG Replaced assignments: defaultdict(<class 'list'>,
            {104: [<numba.core.ir.Assign object at 0x7fa2cdd66cf8>],
             118: [<numba.core.ir.Assign object at 0x7fa2cdd66668>]})
2022-08-04 11:53:33,227 DEBUG ==== SSA block rewrite pass on 0
2022-08-04 11:53:33,227 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdd66400>
2022-08-04 11:53:33,227 DEBUG on stmt: origsize = arg(0, name=origsize)
2022-08-04 11:53:33,227 DEBUG on stmt: shape = arg(1, name=shape)
2022-08-04 11:53:33,227 DEBUG on stmt: num_neg_value = const(int, 0)
2022-08-04 11:53:33,227 DEBUG on stmt: known_size = const(int, 1)
2022-08-04 11:53:33,227 DEBUG on stmt: jump 10
2022-08-04 11:53:33,227 DEBUG ==== SSA block rewrite pass on 10
2022-08-04 11:53:33,227 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdd66400>
2022-08-04 11:53:33,227 DEBUG on stmt: jump 12
2022-08-04 11:53:33,227 DEBUG ==== SSA block rewrite pass on 12
2022-08-04 11:53:33,227 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdd66400>
2022-08-04 11:53:33,227 DEBUG on stmt: $12.1 = global(enumerate: <class 'enumerate'>)
2022-08-04 11:53:33,227 DEBUG on stmt: $12.3 = call $12.1(shape, func=$12.1, args=[Var(shape, arrayobj.py:1602)], kws=(), vararg=None)
2022-08-04 11:53:33,227 DEBUG on stmt: $12.4 = getiter(value=$12.3)
2022-08-04 11:53:33,227 DEBUG on stmt: $phi20.1 = $12.4
2022-08-04 11:53:33,227 DEBUG on stmt: jump 20
2022-08-04 11:53:33,227 DEBUG ==== SSA block rewrite pass on 20
2022-08-04 11:53:33,227 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdd66400>
2022-08-04 11:53:33,227 DEBUG on stmt: known_size.2 = phi(incoming_values=[Var(known_size.3, arrayobj.py:1609), Var(known_size, arrayobj.py:1603)], incoming_blocks=[169, 12])
2022-08-04 11:53:33,227 DEBUG on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value.3, arrayobj.py:1606), Var(num_neg_value, arrayobj.py:1602)], incoming_blocks=[169, 12])
2022-08-04 11:53:33,228 DEBUG on stmt: $20.2 = iternext(value=$phi20.1)
2022-08-04 11:53:33,228 DEBUG on stmt: $20.3 = pair_first(value=$20.2)
2022-08-04 11:53:33,228 DEBUG on stmt: $20.4 = pair_second(value=$20.2)
2022-08-04 11:53:33,228 DEBUG on stmt: $phi22.1 = $20.3
2022-08-04 11:53:33,228 DEBUG on stmt: $phi60.1 = $20.3
2022-08-04 11:53:33,228 DEBUG on stmt: $phi60.2 = $phi20.1
2022-08-04 11:53:33,228 DEBUG on stmt: branch $20.4, 22, 60
2022-08-04 11:53:33,228 DEBUG ==== SSA block rewrite pass on 22
2022-08-04 11:53:33,228 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdd66400>
2022-08-04 11:53:33,228 DEBUG on stmt: $22.4 = exhaust_iter(value=$phi22.1, count=2)
2022-08-04 11:53:33,228 DEBUG on stmt: $22.2 = static_getitem(value=$22.4, index=0, index_var=None, fn=<built-in function getitem>)
2022-08-04 11:53:33,228 DEBUG on stmt: $22.3 = static_getitem(value=$22.4, index=1, index_var=None, fn=<built-in function getitem>)
2022-08-04 11:53:33,228 DEBUG on stmt: ax = $22.2
2022-08-04 11:53:33,228 DEBUG on stmt: s = $22.3
2022-08-04 11:53:33,228 DEBUG on stmt: $const22.6 = const(int, 0)
2022-08-04 11:53:33,228 DEBUG on stmt: $22.7 = s < $const22.6
2022-08-04 11:53:33,228 DEBUG on stmt: bool34 = global(bool: <class 'bool'>)
2022-08-04 11:53:33,228 DEBUG on stmt: $34pred = call bool34($22.7, func=bool34, args=(Var($22.7, arrayobj.py:1605),), kws=(), vararg=None)
2022-08-04 11:53:33,228 DEBUG on stmt: branch $34pred, 36, 50
2022-08-04 11:53:33,228 DEBUG ==== SSA block rewrite pass on 36
2022-08-04 11:53:33,228 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdd66400>
2022-08-04 11:53:33,228 DEBUG on stmt: $const36.2 = const(int, 1)
2022-08-04 11:53:33,228 DEBUG on stmt: $36.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:53:33,228 DEBUG on stmt: num_neg_value.1 = $36.3
2022-08-04 11:53:33,228 DEBUG on stmt: neg_ax = ax
2022-08-04 11:53:33,229 DEBUG on stmt: jump 169
2022-08-04 11:53:33,229 DEBUG ==== SSA block rewrite pass on 50
2022-08-04 11:53:33,229 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdd66400>
2022-08-04 11:53:33,229 DEBUG on stmt: $50.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size.2, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:53:33,229 DEBUG on stmt: known_size.1 = $50.3
2022-08-04 11:53:33,229 DEBUG on stmt: jump 169
2022-08-04 11:53:33,229 DEBUG ==== SSA block rewrite pass on 60
2022-08-04 11:53:33,229 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdd66400>
2022-08-04 11:53:33,229 DEBUG on stmt: jump 62
2022-08-04 11:53:33,229 DEBUG ==== SSA block rewrite pass on 62
2022-08-04 11:53:33,229 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdd66400>
2022-08-04 11:53:33,229 DEBUG on stmt: $const62.2 = const(int, 0)
2022-08-04 11:53:33,229 DEBUG on stmt: $62.3 = num_neg_value.2 == $const62.2
2022-08-04 11:53:33,229 DEBUG on stmt: bool68 = global(bool: <class 'bool'>)
2022-08-04 11:53:33,229 DEBUG on stmt: $68pred = call bool68($62.3, func=bool68, args=(Var($62.3, arrayobj.py:1611),), kws=(), vararg=None)
2022-08-04 11:53:33,229 DEBUG on stmt: branch $68pred, 70, 88
2022-08-04 11:53:33,229 DEBUG ==== SSA block rewrite pass on 70
2022-08-04 11:53:33,229 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdd66400>
2022-08-04 11:53:33,229 DEBUG on stmt: $70.3 = origsize != known_size.2
2022-08-04 11:53:33,229 DEBUG on stmt: bool76 = global(bool: <class 'bool'>)
2022-08-04 11:53:33,229 DEBUG on stmt: $76pred = call bool76($70.3, func=bool76, args=(Var($70.3, arrayobj.py:1612),), kws=(), vararg=None)
2022-08-04 11:53:33,229 DEBUG on stmt: branch $76pred, 78, 168
2022-08-04 11:53:33,229 DEBUG ==== SSA block rewrite pass on 78
2022-08-04 11:53:33,229 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdd66400>
2022-08-04 11:53:33,229 DEBUG on stmt: $78.1 = global(ValueError: <class 'ValueError'>)
2022-08-04 11:53:33,229 DEBUG on stmt: $const78.2 = const(str, total size of new array must be unchanged)
2022-08-04 11:53:33,230 DEBUG on stmt: $78.3 = call $78.1($const78.2, func=$78.1, args=[Var($const78.2, arrayobj.py:1613)], kws=(), vararg=None)
2022-08-04 11:53:33,230 DEBUG on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2022-08-04 11:53:33,230 DEBUG ==== SSA block rewrite pass on 88
2022-08-04 11:53:33,230 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdd66400>
2022-08-04 11:53:33,230 DEBUG on stmt: $const88.2 = const(int, 1)
2022-08-04 11:53:33,230 DEBUG on stmt: $88.3 = num_neg_value.2 == $const88.2
2022-08-04 11:53:33,230 DEBUG on stmt: bool94 = global(bool: <class 'bool'>)
2022-08-04 11:53:33,230 DEBUG on stmt: $94pred = call bool94($88.3, func=bool94, args=(Var($88.3, arrayobj.py:1615),), kws=(), vararg=None)
2022-08-04 11:53:33,230 DEBUG on stmt: branch $94pred, 96, 160
2022-08-04 11:53:33,230 DEBUG ==== SSA block rewrite pass on 96
2022-08-04 11:53:33,230 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdd66400>
2022-08-04 11:53:33,230 DEBUG on stmt: $const96.2 = const(int, 0)
2022-08-04 11:53:33,230 DEBUG on stmt: $96.3 = known_size.2 == $const96.2
2022-08-04 11:53:33,230 DEBUG on stmt: bool102 = global(bool: <class 'bool'>)
2022-08-04 11:53:33,230 DEBUG on stmt: $102pred = call bool102($96.3, func=bool102, args=(Var($96.3, arrayobj.py:1617),), kws=(), vararg=None)
2022-08-04 11:53:33,230 DEBUG on stmt: branch $102pred, 104, 118
2022-08-04 11:53:33,230 DEBUG ==== SSA block rewrite pass on 104
2022-08-04 11:53:33,230 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdd66400>
2022-08-04 11:53:33,230 DEBUG on stmt: inferred = const(int, 0)
2022-08-04 11:53:33,230 DEBUG on stmt: $const104.3 = const(int, 0)
2022-08-04 11:53:33,230 DEBUG on stmt: ok = origsize == $const104.3
2022-08-04 11:53:33,230 DEBUG on stmt: jump 138
2022-08-04 11:53:33,230 DEBUG ==== SSA block rewrite pass on 118
2022-08-04 11:53:33,231 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdd66400>
2022-08-04 11:53:33,231 DEBUG on stmt: inferred.1 = origsize // known_size.2
2022-08-04 11:53:33,231 DEBUG on stmt: $118.6 = origsize % known_size.2
2022-08-04 11:53:33,231 DEBUG on stmt: $const118.7 = const(int, 0)
2022-08-04 11:53:33,231 DEBUG on stmt: ok = $118.6 == $const118.7
2022-08-04 11:53:33,231 DEBUG on stmt: jump 138
2022-08-04 11:53:33,231 DEBUG ==== SSA block rewrite pass on 138
2022-08-04 11:53:33,231 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdd66400>
2022-08-04 11:53:33,231 DEBUG on stmt: bool140 = global(bool: <class 'bool'>)
2022-08-04 11:53:33,231 DEBUG on stmt: $140pred = call bool140(ok, func=bool140, args=(Var(ok, arrayobj.py:1619),), kws=(), vararg=None)
2022-08-04 11:53:33,231 DEBUG on stmt: branch $140pred, 150, 142
2022-08-04 11:53:33,231 DEBUG ==== SSA block rewrite pass on 142
2022-08-04 11:53:33,231 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdd66400>
2022-08-04 11:53:33,231 DEBUG on stmt: $142.1 = global(ValueError: <class 'ValueError'>)
2022-08-04 11:53:33,231 DEBUG on stmt: $const142.2 = const(str, total size of new array must be unchanged)
2022-08-04 11:53:33,231 DEBUG on stmt: $142.3 = call $142.1($const142.2, func=$142.1, args=[Var($const142.2, arrayobj.py:1624)], kws=(), vararg=None)
2022-08-04 11:53:33,231 DEBUG on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2022-08-04 11:53:33,231 DEBUG ==== SSA block rewrite pass on 150
2022-08-04 11:53:33,231 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdd66400>
2022-08-04 11:53:33,231 DEBUG on stmt: shape[neg_ax] = inferred
2022-08-04 11:53:33,232 DEBUG find_def var='inferred' stmt=shape[neg_ax] = inferred
2022-08-04 11:53:33,232 DEBUG find_def_from_top label 150
2022-08-04 11:53:33,232 DEBUG idom 138 from label 150
2022-08-04 11:53:33,232 DEBUG find_def_from_bottom label 138
2022-08-04 11:53:33,232 DEBUG find_def_from_top label 138
2022-08-04 11:53:33,232 DEBUG insert phi node inferred.2 = phi(incoming_values=[], incoming_blocks=[]) at 138
2022-08-04 11:53:33,232 DEBUG find_def_from_bottom label 104
2022-08-04 11:53:33,232 DEBUG incoming_def inferred = const(int, 0)
2022-08-04 11:53:33,232 DEBUG find_def_from_bottom label 118
2022-08-04 11:53:33,232 DEBUG incoming_def inferred.1 = origsize // known_size.2
2022-08-04 11:53:33,232 DEBUG replaced with: shape[neg_ax] = inferred.2
2022-08-04 11:53:33,232 DEBUG on stmt: jump 168
2022-08-04 11:53:33,232 DEBUG ==== SSA block rewrite pass on 160
2022-08-04 11:53:33,232 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdd66400>
2022-08-04 11:53:33,232 DEBUG on stmt: $160.1 = global(ValueError: <class 'ValueError'>)
2022-08-04 11:53:33,232 DEBUG on stmt: $const160.2 = const(str, multiple negative shape values)
2022-08-04 11:53:33,232 DEBUG on stmt: $160.3 = call $160.1($const160.2, func=$160.1, args=[Var($const160.2, arrayobj.py:1628)], kws=(), vararg=None)
2022-08-04 11:53:33,233 DEBUG on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
2022-08-04 11:53:33,233 DEBUG ==== SSA block rewrite pass on 168
2022-08-04 11:53:33,233 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdd66400>
2022-08-04 11:53:33,233 DEBUG on stmt: $const168.1 = const(NoneType, None)
2022-08-04 11:53:33,233 DEBUG on stmt: $168.2 = cast(value=$const168.1)
2022-08-04 11:53:33,233 DEBUG on stmt: return $168.2
2022-08-04 11:53:33,233 DEBUG ==== SSA block rewrite pass on 169
2022-08-04 11:53:33,233 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2cdd66400>
2022-08-04 11:53:33,233 DEBUG on stmt: known_size.3 = phi(incoming_values=[Var(known_size.1, arrayobj.py:1609), Var(known_size.2, arrayobj.py:1609)], incoming_blocks=[50, 36])
2022-08-04 11:53:33,233 DEBUG on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.2, arrayobj.py:1606), Var(num_neg_value.1, arrayobj.py:1606)], incoming_blocks=[50, 36])
2022-08-04 11:53:33,233 DEBUG on stmt: jump 20
2022-08-04 11:53:33,233 DEBUG Fix SSA violator on var ok
2022-08-04 11:53:33,234 DEBUG ==== SSA block rewrite pass on 0
2022-08-04 11:53:33,234 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cec93160>
2022-08-04 11:53:33,234 DEBUG on stmt: origsize = arg(0, name=origsize)
2022-08-04 11:53:33,234 DEBUG on stmt: shape = arg(1, name=shape)
2022-08-04 11:53:33,234 DEBUG on stmt: num_neg_value = const(int, 0)
2022-08-04 11:53:33,234 DEBUG on stmt: known_size = const(int, 1)
2022-08-04 11:53:33,234 DEBUG on stmt: jump 10
2022-08-04 11:53:33,234 DEBUG ==== SSA block rewrite pass on 10
2022-08-04 11:53:33,234 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cec93160>
2022-08-04 11:53:33,234 DEBUG on stmt: jump 12
2022-08-04 11:53:33,234 DEBUG ==== SSA block rewrite pass on 12
2022-08-04 11:53:33,234 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cec93160>
2022-08-04 11:53:33,234 DEBUG on stmt: $12.1 = global(enumerate: <class 'enumerate'>)
2022-08-04 11:53:33,234 DEBUG on stmt: $12.3 = call $12.1(shape, func=$12.1, args=[Var(shape, arrayobj.py:1602)], kws=(), vararg=None)
2022-08-04 11:53:33,234 DEBUG on stmt: $12.4 = getiter(value=$12.3)
2022-08-04 11:53:33,234 DEBUG on stmt: $phi20.1 = $12.4
2022-08-04 11:53:33,234 DEBUG on stmt: jump 20
2022-08-04 11:53:33,234 DEBUG ==== SSA block rewrite pass on 20
2022-08-04 11:53:33,234 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cec93160>
2022-08-04 11:53:33,234 DEBUG on stmt: known_size.2 = phi(incoming_values=[Var(known_size.3, arrayobj.py:1609), Var(known_size, arrayobj.py:1603)], incoming_blocks=[169, 12])
2022-08-04 11:53:33,234 DEBUG on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value.3, arrayobj.py:1606), Var(num_neg_value, arrayobj.py:1602)], incoming_blocks=[169, 12])
2022-08-04 11:53:33,234 DEBUG on stmt: $20.2 = iternext(value=$phi20.1)
2022-08-04 11:53:33,234 DEBUG on stmt: $20.3 = pair_first(value=$20.2)
2022-08-04 11:53:33,235 DEBUG on stmt: $20.4 = pair_second(value=$20.2)
2022-08-04 11:53:33,235 DEBUG on stmt: $phi22.1 = $20.3
2022-08-04 11:53:33,235 DEBUG on stmt: $phi60.1 = $20.3
2022-08-04 11:53:33,235 DEBUG on stmt: $phi60.2 = $phi20.1
2022-08-04 11:53:33,235 DEBUG on stmt: branch $20.4, 22, 60
2022-08-04 11:53:33,235 DEBUG ==== SSA block rewrite pass on 22
2022-08-04 11:53:33,235 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cec93160>
2022-08-04 11:53:33,235 DEBUG on stmt: $22.4 = exhaust_iter(value=$phi22.1, count=2)
2022-08-04 11:53:33,235 DEBUG on stmt: $22.2 = static_getitem(value=$22.4, index=0, index_var=None, fn=<built-in function getitem>)
2022-08-04 11:53:33,235 DEBUG on stmt: $22.3 = static_getitem(value=$22.4, index=1, index_var=None, fn=<built-in function getitem>)
2022-08-04 11:53:33,235 DEBUG on stmt: ax = $22.2
2022-08-04 11:53:33,235 DEBUG on stmt: s = $22.3
2022-08-04 11:53:33,235 DEBUG on stmt: $const22.6 = const(int, 0)
2022-08-04 11:53:33,235 DEBUG on stmt: $22.7 = s < $const22.6
2022-08-04 11:53:33,235 DEBUG on stmt: bool34 = global(bool: <class 'bool'>)
2022-08-04 11:53:33,235 DEBUG on stmt: $34pred = call bool34($22.7, func=bool34, args=(Var($22.7, arrayobj.py:1605),), kws=(), vararg=None)
2022-08-04 11:53:33,235 DEBUG on stmt: branch $34pred, 36, 50
2022-08-04 11:53:33,235 DEBUG ==== SSA block rewrite pass on 36
2022-08-04 11:53:33,235 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cec93160>
2022-08-04 11:53:33,235 DEBUG on stmt: $const36.2 = const(int, 1)
2022-08-04 11:53:33,235 DEBUG on stmt: $36.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:53:33,235 DEBUG on stmt: num_neg_value.1 = $36.3
2022-08-04 11:53:33,235 DEBUG on stmt: neg_ax = ax
2022-08-04 11:53:33,236 DEBUG on stmt: jump 169
2022-08-04 11:53:33,236 DEBUG ==== SSA block rewrite pass on 50
2022-08-04 11:53:33,236 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cec93160>
2022-08-04 11:53:33,236 DEBUG on stmt: $50.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size.2, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:53:33,236 DEBUG on stmt: known_size.1 = $50.3
2022-08-04 11:53:33,236 DEBUG on stmt: jump 169
2022-08-04 11:53:33,236 DEBUG ==== SSA block rewrite pass on 60
2022-08-04 11:53:33,236 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cec93160>
2022-08-04 11:53:33,236 DEBUG on stmt: jump 62
2022-08-04 11:53:33,236 DEBUG ==== SSA block rewrite pass on 62
2022-08-04 11:53:33,236 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cec93160>
2022-08-04 11:53:33,236 DEBUG on stmt: $const62.2 = const(int, 0)
2022-08-04 11:53:33,236 DEBUG on stmt: $62.3 = num_neg_value.2 == $const62.2
2022-08-04 11:53:33,236 DEBUG on stmt: bool68 = global(bool: <class 'bool'>)
2022-08-04 11:53:33,236 DEBUG on stmt: $68pred = call bool68($62.3, func=bool68, args=(Var($62.3, arrayobj.py:1611),), kws=(), vararg=None)
2022-08-04 11:53:33,237 DEBUG on stmt: branch $68pred, 70, 88
2022-08-04 11:53:33,237 DEBUG ==== SSA block rewrite pass on 70
2022-08-04 11:53:33,237 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cec93160>
2022-08-04 11:53:33,237 DEBUG on stmt: $70.3 = origsize != known_size.2
2022-08-04 11:53:33,237 DEBUG on stmt: bool76 = global(bool: <class 'bool'>)
2022-08-04 11:53:33,237 DEBUG on stmt: $76pred = call bool76($70.3, func=bool76, args=(Var($70.3, arrayobj.py:1612),), kws=(), vararg=None)
2022-08-04 11:53:33,237 DEBUG on stmt: branch $76pred, 78, 168
2022-08-04 11:53:33,237 DEBUG ==== SSA block rewrite pass on 78
2022-08-04 11:53:33,237 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cec93160>
2022-08-04 11:53:33,237 DEBUG on stmt: $78.1 = global(ValueError: <class 'ValueError'>)
2022-08-04 11:53:33,237 DEBUG on stmt: $const78.2 = const(str, total size of new array must be unchanged)
2022-08-04 11:53:33,237 DEBUG on stmt: $78.3 = call $78.1($const78.2, func=$78.1, args=[Var($const78.2, arrayobj.py:1613)], kws=(), vararg=None)
2022-08-04 11:53:33,238 DEBUG on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2022-08-04 11:53:33,238 DEBUG ==== SSA block rewrite pass on 88
2022-08-04 11:53:33,238 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cec93160>
2022-08-04 11:53:33,238 DEBUG on stmt: $const88.2 = const(int, 1)
2022-08-04 11:53:33,238 DEBUG on stmt: $88.3 = num_neg_value.2 == $const88.2
2022-08-04 11:53:33,238 DEBUG on stmt: bool94 = global(bool: <class 'bool'>)
2022-08-04 11:53:33,238 DEBUG on stmt: $94pred = call bool94($88.3, func=bool94, args=(Var($88.3, arrayobj.py:1615),), kws=(), vararg=None)
2022-08-04 11:53:33,238 DEBUG on stmt: branch $94pred, 96, 160
2022-08-04 11:53:33,238 DEBUG ==== SSA block rewrite pass on 96
2022-08-04 11:53:33,238 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cec93160>
2022-08-04 11:53:33,238 DEBUG on stmt: $const96.2 = const(int, 0)
2022-08-04 11:53:33,238 DEBUG on stmt: $96.3 = known_size.2 == $const96.2
2022-08-04 11:53:33,239 DEBUG on stmt: bool102 = global(bool: <class 'bool'>)
2022-08-04 11:53:33,239 DEBUG on stmt: $102pred = call bool102($96.3, func=bool102, args=(Var($96.3, arrayobj.py:1617),), kws=(), vararg=None)
2022-08-04 11:53:33,239 DEBUG on stmt: branch $102pred, 104, 118
2022-08-04 11:53:33,239 DEBUG ==== SSA block rewrite pass on 104
2022-08-04 11:53:33,239 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cec93160>
2022-08-04 11:53:33,239 DEBUG on stmt: inferred = const(int, 0)
2022-08-04 11:53:33,239 DEBUG on stmt: $const104.3 = const(int, 0)
2022-08-04 11:53:33,239 DEBUG on stmt: ok = origsize == $const104.3
2022-08-04 11:53:33,239 DEBUG first assign: ok
2022-08-04 11:53:33,239 DEBUG replaced with: ok = origsize == $const104.3
2022-08-04 11:53:33,239 DEBUG on stmt: jump 138
2022-08-04 11:53:33,240 DEBUG ==== SSA block rewrite pass on 118
2022-08-04 11:53:33,240 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cec93160>
2022-08-04 11:53:33,240 DEBUG on stmt: inferred.1 = origsize // known_size.2
2022-08-04 11:53:33,240 DEBUG on stmt: $118.6 = origsize % known_size.2
2022-08-04 11:53:33,240 DEBUG on stmt: $const118.7 = const(int, 0)
2022-08-04 11:53:33,240 DEBUG on stmt: ok = $118.6 == $const118.7
2022-08-04 11:53:33,240 DEBUG replaced with: ok.1 = $118.6 == $const118.7
2022-08-04 11:53:33,240 DEBUG on stmt: jump 138
2022-08-04 11:53:33,240 DEBUG ==== SSA block rewrite pass on 138
2022-08-04 11:53:33,240 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cec93160>
2022-08-04 11:53:33,240 DEBUG on stmt: inferred.2 = phi(incoming_values=[Var(inferred, arrayobj.py:1618), Var(inferred.1, arrayobj.py:1621)], incoming_blocks=[104, 118])
2022-08-04 11:53:33,240 DEBUG on stmt: bool140 = global(bool: <class 'bool'>)
2022-08-04 11:53:33,240 DEBUG on stmt: $140pred = call bool140(ok, func=bool140, args=(Var(ok, arrayobj.py:1619),), kws=(), vararg=None)
2022-08-04 11:53:33,240 DEBUG on stmt: branch $140pred, 150, 142
2022-08-04 11:53:33,240 DEBUG ==== SSA block rewrite pass on 142
2022-08-04 11:53:33,240 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cec93160>
2022-08-04 11:53:33,240 DEBUG on stmt: $142.1 = global(ValueError: <class 'ValueError'>)
2022-08-04 11:53:33,240 DEBUG on stmt: $const142.2 = const(str, total size of new array must be unchanged)
2022-08-04 11:53:33,240 DEBUG on stmt: $142.3 = call $142.1($const142.2, func=$142.1, args=[Var($const142.2, arrayobj.py:1624)], kws=(), vararg=None)
2022-08-04 11:53:33,240 DEBUG on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2022-08-04 11:53:33,241 DEBUG ==== SSA block rewrite pass on 150
2022-08-04 11:53:33,241 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cec93160>
2022-08-04 11:53:33,241 DEBUG on stmt: shape[neg_ax] = inferred.2
2022-08-04 11:53:33,241 DEBUG on stmt: jump 168
2022-08-04 11:53:33,241 DEBUG ==== SSA block rewrite pass on 160
2022-08-04 11:53:33,241 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cec93160>
2022-08-04 11:53:33,241 DEBUG on stmt: $160.1 = global(ValueError: <class 'ValueError'>)
2022-08-04 11:53:33,241 DEBUG on stmt: $const160.2 = const(str, multiple negative shape values)
2022-08-04 11:53:33,241 DEBUG on stmt: $160.3 = call $160.1($const160.2, func=$160.1, args=[Var($const160.2, arrayobj.py:1628)], kws=(), vararg=None)
2022-08-04 11:53:33,241 DEBUG on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
2022-08-04 11:53:33,241 DEBUG ==== SSA block rewrite pass on 168
2022-08-04 11:53:33,241 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cec93160>
2022-08-04 11:53:33,241 DEBUG on stmt: $const168.1 = const(NoneType, None)
2022-08-04 11:53:33,241 DEBUG on stmt: $168.2 = cast(value=$const168.1)
2022-08-04 11:53:33,241 DEBUG on stmt: return $168.2
2022-08-04 11:53:33,241 DEBUG ==== SSA block rewrite pass on 169
2022-08-04 11:53:33,241 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7fa2cec93160>
2022-08-04 11:53:33,241 DEBUG on stmt: known_size.3 = phi(incoming_values=[Var(known_size.1, arrayobj.py:1609), Var(known_size.2, arrayobj.py:1609)], incoming_blocks=[50, 36])
2022-08-04 11:53:33,241 DEBUG on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.2, arrayobj.py:1606), Var(num_neg_value.1, arrayobj.py:1606)], incoming_blocks=[50, 36])
2022-08-04 11:53:33,241 DEBUG on stmt: jump 20
2022-08-04 11:53:33,242 DEBUG Replaced assignments: defaultdict(<class 'list'>,
            {104: [<numba.core.ir.Assign object at 0x7fa2cdd663c8>],
             118: [<numba.core.ir.Assign object at 0x7fa2cdd66400>]})
2022-08-04 11:53:33,242 DEBUG ==== SSA block rewrite pass on 0
2022-08-04 11:53:33,243 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2c9272358>
2022-08-04 11:53:33,243 DEBUG on stmt: origsize = arg(0, name=origsize)
2022-08-04 11:53:33,243 DEBUG on stmt: shape = arg(1, name=shape)
2022-08-04 11:53:33,243 DEBUG on stmt: num_neg_value = const(int, 0)
2022-08-04 11:53:33,243 DEBUG on stmt: known_size = const(int, 1)
2022-08-04 11:53:33,243 DEBUG on stmt: jump 10
2022-08-04 11:53:33,243 DEBUG ==== SSA block rewrite pass on 10
2022-08-04 11:53:33,243 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2c9272358>
2022-08-04 11:53:33,243 DEBUG on stmt: jump 12
2022-08-04 11:53:33,243 DEBUG ==== SSA block rewrite pass on 12
2022-08-04 11:53:33,243 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2c9272358>
2022-08-04 11:53:33,243 DEBUG on stmt: $12.1 = global(enumerate: <class 'enumerate'>)
2022-08-04 11:53:33,243 DEBUG on stmt: $12.3 = call $12.1(shape, func=$12.1, args=[Var(shape, arrayobj.py:1602)], kws=(), vararg=None)
2022-08-04 11:53:33,244 DEBUG on stmt: $12.4 = getiter(value=$12.3)
2022-08-04 11:53:33,244 DEBUG on stmt: $phi20.1 = $12.4
2022-08-04 11:53:33,244 DEBUG on stmt: jump 20
2022-08-04 11:53:33,244 DEBUG ==== SSA block rewrite pass on 20
2022-08-04 11:53:33,244 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2c9272358>
2022-08-04 11:53:33,244 DEBUG on stmt: known_size.2 = phi(incoming_values=[Var(known_size.3, arrayobj.py:1609), Var(known_size, arrayobj.py:1603)], incoming_blocks=[169, 12])
2022-08-04 11:53:33,244 DEBUG on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value.3, arrayobj.py:1606), Var(num_neg_value, arrayobj.py:1602)], incoming_blocks=[169, 12])
2022-08-04 11:53:33,244 DEBUG on stmt: $20.2 = iternext(value=$phi20.1)
2022-08-04 11:53:33,244 DEBUG on stmt: $20.3 = pair_first(value=$20.2)
2022-08-04 11:53:33,245 DEBUG on stmt: $20.4 = pair_second(value=$20.2)
2022-08-04 11:53:33,245 DEBUG on stmt: $phi22.1 = $20.3
2022-08-04 11:53:33,245 DEBUG on stmt: $phi60.1 = $20.3
2022-08-04 11:53:33,245 DEBUG on stmt: $phi60.2 = $phi20.1
2022-08-04 11:53:33,245 DEBUG on stmt: branch $20.4, 22, 60
2022-08-04 11:53:33,245 DEBUG ==== SSA block rewrite pass on 22
2022-08-04 11:53:33,245 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2c9272358>
2022-08-04 11:53:33,245 DEBUG on stmt: $22.4 = exhaust_iter(value=$phi22.1, count=2)
2022-08-04 11:53:33,245 DEBUG on stmt: $22.2 = static_getitem(value=$22.4, index=0, index_var=None, fn=<built-in function getitem>)
2022-08-04 11:53:33,245 DEBUG on stmt: $22.3 = static_getitem(value=$22.4, index=1, index_var=None, fn=<built-in function getitem>)
2022-08-04 11:53:33,245 DEBUG on stmt: ax = $22.2
2022-08-04 11:53:33,245 DEBUG on stmt: s = $22.3
2022-08-04 11:53:33,246 DEBUG on stmt: $const22.6 = const(int, 0)
2022-08-04 11:53:33,246 DEBUG on stmt: $22.7 = s < $const22.6
2022-08-04 11:53:33,246 DEBUG on stmt: bool34 = global(bool: <class 'bool'>)
2022-08-04 11:53:33,246 DEBUG on stmt: $34pred = call bool34($22.7, func=bool34, args=(Var($22.7, arrayobj.py:1605),), kws=(), vararg=None)
2022-08-04 11:53:33,246 DEBUG on stmt: branch $34pred, 36, 50
2022-08-04 11:53:33,246 DEBUG ==== SSA block rewrite pass on 36
2022-08-04 11:53:33,246 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2c9272358>
2022-08-04 11:53:33,246 DEBUG on stmt: $const36.2 = const(int, 1)
2022-08-04 11:53:33,246 DEBUG on stmt: $36.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:53:33,246 DEBUG on stmt: num_neg_value.1 = $36.3
2022-08-04 11:53:33,246 DEBUG on stmt: neg_ax = ax
2022-08-04 11:53:33,247 DEBUG on stmt: jump 169
2022-08-04 11:53:33,247 DEBUG ==== SSA block rewrite pass on 50
2022-08-04 11:53:33,247 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2c9272358>
2022-08-04 11:53:33,247 DEBUG on stmt: $50.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size.2, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2022-08-04 11:53:33,247 DEBUG on stmt: known_size.1 = $50.3
2022-08-04 11:53:33,247 DEBUG on stmt: jump 169
2022-08-04 11:53:33,247 DEBUG ==== SSA block rewrite pass on 60
2022-08-04 11:53:33,247 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2c9272358>
2022-08-04 11:53:33,247 DEBUG on stmt: jump 62
2022-08-04 11:53:33,247 DEBUG ==== SSA block rewrite pass on 62
2022-08-04 11:53:33,247 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2c9272358>
2022-08-04 11:53:33,247 DEBUG on stmt: $const62.2 = const(int, 0)
2022-08-04 11:53:33,248 DEBUG on stmt: $62.3 = num_neg_value.2 == $const62.2
2022-08-04 11:53:33,248 DEBUG on stmt: bool68 = global(bool: <class 'bool'>)
2022-08-04 11:53:33,248 DEBUG on stmt: $68pred = call bool68($62.3, func=bool68, args=(Var($62.3, arrayobj.py:1611),), kws=(), vararg=None)
2022-08-04 11:53:33,248 DEBUG on stmt: branch $68pred, 70, 88
2022-08-04 11:53:33,248 DEBUG ==== SSA block rewrite pass on 70
2022-08-04 11:53:33,248 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2c9272358>
2022-08-04 11:53:33,248 DEBUG on stmt: $70.3 = origsize != known_size.2
2022-08-04 11:53:33,248 DEBUG on stmt: bool76 = global(bool: <class 'bool'>)
2022-08-04 11:53:33,248 DEBUG on stmt: $76pred = call bool76($70.3, func=bool76, args=(Var($70.3, arrayobj.py:1612),), kws=(), vararg=None)
2022-08-04 11:53:33,248 DEBUG on stmt: branch $76pred, 78, 168
2022-08-04 11:53:33,248 DEBUG ==== SSA block rewrite pass on 78
2022-08-04 11:53:33,249 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2c9272358>
2022-08-04 11:53:33,249 DEBUG on stmt: $78.1 = global(ValueError: <class 'ValueError'>)
2022-08-04 11:53:33,249 DEBUG on stmt: $const78.2 = const(str, total size of new array must be unchanged)
2022-08-04 11:53:33,249 DEBUG on stmt: $78.3 = call $78.1($const78.2, func=$78.1, args=[Var($const78.2, arrayobj.py:1613)], kws=(), vararg=None)
2022-08-04 11:53:33,249 DEBUG on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2022-08-04 11:53:33,249 DEBUG ==== SSA block rewrite pass on 88
2022-08-04 11:53:33,249 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2c9272358>
2022-08-04 11:53:33,249 DEBUG on stmt: $const88.2 = const(int, 1)
2022-08-04 11:53:33,249 DEBUG on stmt: $88.3 = num_neg_value.2 == $const88.2
2022-08-04 11:53:33,249 DEBUG on stmt: bool94 = global(bool: <class 'bool'>)
2022-08-04 11:53:33,249 DEBUG on stmt: $94pred = call bool94($88.3, func=bool94, args=(Var($88.3, arrayobj.py:1615),), kws=(), vararg=None)
2022-08-04 11:53:33,250 DEBUG on stmt: branch $94pred, 96, 160
2022-08-04 11:53:33,250 DEBUG ==== SSA block rewrite pass on 96
2022-08-04 11:53:33,250 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2c9272358>
2022-08-04 11:53:33,250 DEBUG on stmt: $const96.2 = const(int, 0)
2022-08-04 11:53:33,250 DEBUG on stmt: $96.3 = known_size.2 == $const96.2
2022-08-04 11:53:33,250 DEBUG on stmt: bool102 = global(bool: <class 'bool'>)
2022-08-04 11:53:33,250 DEBUG on stmt: $102pred = call bool102($96.3, func=bool102, args=(Var($96.3, arrayobj.py:1617),), kws=(), vararg=None)
2022-08-04 11:53:33,250 DEBUG on stmt: branch $102pred, 104, 118
2022-08-04 11:53:33,250 DEBUG ==== SSA block rewrite pass on 104
2022-08-04 11:53:33,250 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2c9272358>
2022-08-04 11:53:33,250 DEBUG on stmt: inferred = const(int, 0)
2022-08-04 11:53:33,251 DEBUG on stmt: $const104.3 = const(int, 0)
2022-08-04 11:53:33,251 DEBUG on stmt: ok = origsize == $const104.3
2022-08-04 11:53:33,251 DEBUG on stmt: jump 138
2022-08-04 11:53:33,251 DEBUG ==== SSA block rewrite pass on 118
2022-08-04 11:53:33,251 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2c9272358>
2022-08-04 11:53:33,251 DEBUG on stmt: inferred.1 = origsize // known_size.2
2022-08-04 11:53:33,251 DEBUG on stmt: $118.6 = origsize % known_size.2
2022-08-04 11:53:33,251 DEBUG on stmt: $const118.7 = const(int, 0)
2022-08-04 11:53:33,251 DEBUG on stmt: ok.1 = $118.6 == $const118.7
2022-08-04 11:53:33,251 DEBUG on stmt: jump 138
2022-08-04 11:53:33,251 DEBUG ==== SSA block rewrite pass on 138
2022-08-04 11:53:33,251 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2c9272358>
2022-08-04 11:53:33,251 DEBUG on stmt: inferred.2 = phi(incoming_values=[Var(inferred, arrayobj.py:1618), Var(inferred.1, arrayobj.py:1621)], incoming_blocks=[104, 118])
2022-08-04 11:53:33,251 DEBUG on stmt: bool140 = global(bool: <class 'bool'>)
2022-08-04 11:53:33,251 DEBUG on stmt: $140pred = call bool140(ok, func=bool140, args=(Var(ok, arrayobj.py:1619),), kws=(), vararg=None)
2022-08-04 11:53:33,252 DEBUG find_def var='ok' stmt=$140pred = call bool140(ok, func=bool140, args=(Var(ok, arrayobj.py:1619),), kws=(), vararg=None)
2022-08-04 11:53:33,252 DEBUG find_def_from_top label 138
2022-08-04 11:53:33,252 DEBUG insert phi node ok.2 = phi(incoming_values=[], incoming_blocks=[]) at 138
2022-08-04 11:53:33,252 DEBUG find_def_from_bottom label 104
2022-08-04 11:53:33,252 DEBUG incoming_def ok = origsize == $const104.3
2022-08-04 11:53:33,252 DEBUG find_def_from_bottom label 118
2022-08-04 11:53:33,252 DEBUG incoming_def ok.1 = $118.6 == $const118.7
2022-08-04 11:53:33,252 DEBUG replaced with: $140pred = call bool140(ok.2, func=bool140, args=(Var(ok.2, arrayobj.py:1623),), kws=(), vararg=None)
2022-08-04 11:53:33,253 DEBUG on stmt: branch $140pred, 150, 142
2022-08-04 11:53:33,253 DEBUG ==== SSA block rewrite pass on 142
2022-08-04 11:53:33,253 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2c9272358>
2022-08-04 11:53:33,253 DEBUG on stmt: $142.1 = global(ValueError: <class 'ValueError'>)
2022-08-04 11:53:33,253 DEBUG on stmt: $const142.2 = const(str, total size of new array must be unchanged)
2022-08-04 11:53:33,253 DEBUG on stmt: $142.3 = call $142.1($const142.2, func=$142.1, args=[Var($const142.2, arrayobj.py:1624)], kws=(), vararg=None)
2022-08-04 11:53:33,253 DEBUG on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
2022-08-04 11:53:33,253 DEBUG ==== SSA block rewrite pass on 150
2022-08-04 11:53:33,253 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2c9272358>
2022-08-04 11:53:33,253 DEBUG on stmt: shape[neg_ax] = inferred.2
2022-08-04 11:53:33,253 DEBUG on stmt: jump 168
2022-08-04 11:53:33,253 DEBUG ==== SSA block rewrite pass on 160
2022-08-04 11:53:33,254 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2c9272358>
2022-08-04 11:53:33,254 DEBUG on stmt: $160.1 = global(ValueError: <class 'ValueError'>)
2022-08-04 11:53:33,254 DEBUG on stmt: $const160.2 = const(str, multiple negative shape values)
2022-08-04 11:53:33,254 DEBUG on stmt: $160.3 = call $160.1($const160.2, func=$160.1, args=[Var($const160.2, arrayobj.py:1628)], kws=(), vararg=None)
2022-08-04 11:53:33,254 DEBUG on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
2022-08-04 11:53:33,254 DEBUG ==== SSA block rewrite pass on 168
2022-08-04 11:53:33,254 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2c9272358>
2022-08-04 11:53:33,254 DEBUG on stmt: $const168.1 = const(NoneType, None)
2022-08-04 11:53:33,254 DEBUG on stmt: $168.2 = cast(value=$const168.1)
2022-08-04 11:53:33,254 DEBUG on stmt: return $168.2
2022-08-04 11:53:33,254 DEBUG ==== SSA block rewrite pass on 169
2022-08-04 11:53:33,254 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7fa2c9272358>
2022-08-04 11:53:33,255 DEBUG on stmt: known_size.3 = phi(incoming_values=[Var(known_size.1, arrayobj.py:1609), Var(known_size.2, arrayobj.py:1609)], incoming_blocks=[50, 36])
2022-08-04 11:53:33,255 DEBUG on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.2, arrayobj.py:1606), Var(num_neg_value.1, arrayobj.py:1606)], incoming_blocks=[50, 36])
2022-08-04 11:53:33,255 DEBUG on stmt: jump 20
2022-08-04 11:53:35,322 DEBUG Corresponding type is already real float64.
2022-08-04 11:53:35,322 DEBUG nufft passed real_type for signal, converting
2022-08-04 11:53:52,131 INFO Applying forward transformations in pipeline
2022-08-04 11:53:52,132 INFO All forward transformations applied
2022-08-04 11:53:52,133 INFO Loaded 2048 images
2022-08-04 11:53:52,134 INFO Initializing density
2022-08-04 11:53:53,666 INFO Initialising Solver
2022-08-04 11:53:53,668 INFO Update data_discrepancies
2022-08-04 11:53:53,669 INFO Computing \|Ag.u - f_i\|^2
2022-08-04 11:53:54,660 DEBUG Corresponding type is already real float64.
2022-08-04 11:53:54,661 DEBUG nufft passed real_type for signal, converting
2022-08-04 11:54:11,269 INFO Computing data fidelity for 114564 rotations and 2048 images at 0%
2022-08-04 11:54:12,173 DEBUG Corresponding type is already real float64.
2022-08-04 11:54:12,173 DEBUG nufft passed real_type for signal, converting
2022-08-04 11:54:28,332 INFO Computing data fidelity for 114564 rotations and 2048 images at 1%
2022-08-04 11:54:29,360 DEBUG Corresponding type is already real float64.
2022-08-04 11:54:29,360 DEBUG nufft passed real_type for signal, converting
2022-08-04 11:54:45,191 INFO Computing data fidelity for 114564 rotations and 2048 images at 2%
2022-08-04 11:54:46,091 DEBUG Corresponding type is already real float64.
2022-08-04 11:54:46,091 DEBUG nufft passed real_type for signal, converting
2022-08-04 11:55:01,328 INFO Computing data fidelity for 114564 rotations and 2048 images at 3%
2022-08-04 11:55:02,214 DEBUG Corresponding type is already real float64.
2022-08-04 11:55:02,214 DEBUG nufft passed real_type for signal, converting
2022-08-04 11:55:17,794 INFO Computing data fidelity for 114564 rotations and 2048 images at 4%
2022-08-04 11:55:18,683 DEBUG Corresponding type is already real float64.
2022-08-04 11:55:18,683 DEBUG nufft passed real_type for signal, converting
2022-08-04 11:55:33,574 INFO Computing data fidelity for 114564 rotations and 2048 images at 5%
2022-08-04 11:55:34,464 DEBUG Corresponding type is already real float64.
2022-08-04 11:55:34,464 DEBUG nufft passed real_type for signal, converting
2022-08-04 11:55:49,742 INFO Computing data fidelity for 114564 rotations and 2048 images at 6%
2022-08-04 11:55:50,613 DEBUG Corresponding type is already real float64.
2022-08-04 11:55:50,613 DEBUG nufft passed real_type for signal, converting
2022-08-04 11:56:05,981 INFO Computing data fidelity for 114564 rotations and 2048 images at 7%
2022-08-04 11:56:06,877 DEBUG Corresponding type is already real float64.
2022-08-04 11:56:06,877 DEBUG nufft passed real_type for signal, converting
2022-08-04 11:56:22,218 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2022-08-04 11:56:23,147 DEBUG Corresponding type is already real float64.
2022-08-04 11:56:23,147 DEBUG nufft passed real_type for signal, converting
2022-08-04 11:56:39,055 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2022-08-04 11:56:39,945 DEBUG Corresponding type is already real float64.
2022-08-04 11:56:39,946 DEBUG nufft passed real_type for signal, converting
2022-08-04 11:56:55,527 INFO Computing data fidelity for 114564 rotations and 2048 images at 9%
2022-08-04 11:56:56,358 DEBUG Corresponding type is already real float64.
2022-08-04 11:56:56,358 DEBUG nufft passed real_type for signal, converting
2022-08-04 11:57:12,183 INFO Computing data fidelity for 114564 rotations and 2048 images at 10%
2022-08-04 11:57:13,159 DEBUG Corresponding type is already real float64.
2022-08-04 11:57:13,159 DEBUG nufft passed real_type for signal, converting
2022-08-04 11:57:29,046 INFO Computing data fidelity for 114564 rotations and 2048 images at 11%
2022-08-04 11:57:30,001 DEBUG Corresponding type is already real float64.
2022-08-04 11:57:30,001 DEBUG nufft passed real_type for signal, converting
2022-08-04 11:57:45,404 INFO Computing data fidelity for 114564 rotations and 2048 images at 12%
2022-08-04 11:57:46,236 DEBUG Corresponding type is already real float64.
2022-08-04 11:57:46,236 DEBUG nufft passed real_type for signal, converting
2022-08-04 11:58:00,881 INFO Computing data fidelity for 114564 rotations and 2048 images at 13%
2022-08-04 11:58:01,782 DEBUG Corresponding type is already real float64.
2022-08-04 11:58:01,782 DEBUG nufft passed real_type for signal, converting
2022-08-04 11:58:16,505 INFO Computing data fidelity for 114564 rotations and 2048 images at 14%
2022-08-04 11:58:17,434 DEBUG Corresponding type is already real float64.
2022-08-04 11:58:17,434 DEBUG nufft passed real_type for signal, converting
2022-08-04 11:58:32,551 INFO Computing data fidelity for 114564 rotations and 2048 images at 15%
2022-08-04 11:58:33,364 DEBUG Corresponding type is already real float64.
2022-08-04 11:58:33,364 DEBUG nufft passed real_type for signal, converting
2022-08-04 11:58:48,361 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2022-08-04 11:58:49,186 DEBUG Corresponding type is already real float64.
2022-08-04 11:58:49,186 DEBUG nufft passed real_type for signal, converting
2022-08-04 11:59:04,740 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2022-08-04 11:59:05,570 DEBUG Corresponding type is already real float64.
2022-08-04 11:59:05,570 DEBUG nufft passed real_type for signal, converting
2022-08-04 11:59:21,604 INFO Computing data fidelity for 114564 rotations and 2048 images at 17%
2022-08-04 11:59:22,665 DEBUG Corresponding type is already real float64.
2022-08-04 11:59:22,665 DEBUG nufft passed real_type for signal, converting
2022-08-04 11:59:38,793 INFO Computing data fidelity for 114564 rotations and 2048 images at 18%
2022-08-04 11:59:39,832 DEBUG Corresponding type is already real float64.
2022-08-04 11:59:39,832 DEBUG nufft passed real_type for signal, converting
2022-08-04 11:59:55,612 INFO Computing data fidelity for 114564 rotations and 2048 images at 19%
2022-08-04 11:59:56,572 DEBUG Corresponding type is already real float64.
2022-08-04 11:59:56,572 DEBUG nufft passed real_type for signal, converting
2022-08-04 12:00:11,986 INFO Computing data fidelity for 114564 rotations and 2048 images at 20%
2022-08-04 12:00:12,823 DEBUG Corresponding type is already real float64.
2022-08-04 12:00:12,824 DEBUG nufft passed real_type for signal, converting
2022-08-04 12:00:28,004 INFO Computing data fidelity for 114564 rotations and 2048 images at 21%
2022-08-04 12:00:28,799 DEBUG Corresponding type is already real float64.
2022-08-04 12:00:28,799 DEBUG nufft passed real_type for signal, converting
2022-08-04 12:00:43,950 INFO Computing data fidelity for 114564 rotations and 2048 images at 22%
2022-08-04 12:00:44,722 DEBUG Corresponding type is already real float64.
2022-08-04 12:00:44,722 DEBUG nufft passed real_type for signal, converting
