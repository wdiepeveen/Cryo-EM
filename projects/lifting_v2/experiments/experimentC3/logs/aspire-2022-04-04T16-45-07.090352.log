2022-04-04 16:45:07,640 DEBUG (private) matplotlib data path: /Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data
2022-04-04 16:45:07,641 DEBUG matplotlib data path: /Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data
2022-04-04 16:45:07,647 DEBUG CONFIGDIR=/Users/wdiepeveen/.matplotlib
2022-04-04 16:45:07,650 DEBUG matplotlib version 3.3.4
2022-04-04 16:45:07,650 DEBUG interactive is False
2022-04-04 16:45:07,650 DEBUG platform is darwin
2022-04-04 16:45:07,650 DEBUG loaded modules: ['builtins', 'sys', '_frozen_importlib', '_imp', '_warnings', '_thread', '_weakref', '_frozen_importlib_external', '_io', 'marshal', 'posix', 'zipimport', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_weakrefset', '_bootlocale', '_locale', 'site', 'os', 'errno', 'stat', '_stat', 'posixpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', 'types', 'functools', '_functools', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'weakref', 'collections.abc', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'mpl_toolkits', 'sphinxcontrib', 'sysconfig', '_sysconfigdata_m_darwin_darwin', '_osx_support', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'runpy', 'pkgutil', 'ipykernel', 'ipykernel._version', 'ipykernel.connect', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'subprocess', 'time', 'signal', '_posixsubprocess', 'select', 'selectors', 'math', 'threading', 'traceback', 'linecache', 'tokenize', 'token', 'IPython', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'IPython.core.application', 'atexit', 'copy', 'glob', 'fnmatch', 'logging', 'string', '_string', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'pwd', 'grp', 'traitlets', 'traitlets.traitlets', 'inspect', 'ast', '_ast', 'dis', 'opcode', '_opcode', 'six', '__future__', 'struct', '_struct', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'ipython_genutils', 'ipython_genutils._version', 'ipython_genutils.py3compat', 'ipython_genutils.encoding', 'locale', 'platform', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets._version', 'traitlets.config', 'traitlets.config.application', 'decorator', 'traitlets.config.configurable', 'traitlets.config.loader', 'argparse', 'textwrap', 'gettext', 'ipython_genutils.path', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'ipython_genutils.text', 'ipython_genutils.importstring', 'IPython.core.crashhandler', 'pprint', 'IPython.core.ultratb', 'pydoc', 'urllib', 'urllib.parse', 'IPython.core.debugger', 'bdb', 'IPython.utils', 'IPython.utils.PyColorize', 'IPython.utils.coloransi', 'IPython.utils.ipstruct', 'IPython.utils.colorable', 'pygments', 'IPython.utils.py3compat', 'IPython.utils.encoding', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'pdb', 'cmd', 'code', 'codeop', 'IPython.core.display_trap', 'IPython.utils.path', 'IPython.utils.process', 'IPython.utils._process_posix', 'pexpect', 'pexpect.exceptions', 'pexpect.utils', 'pexpect.expect', 'pexpect.pty_spawn', 'pty', 'tty', 'termios', 'ptyprocess', 'ptyprocess.ptyprocess', 'fcntl', 'resource', 'ptyprocess.util', 'pexpect.spawnbase', 'pexpect.run', 'IPython.utils._process_common', 'shlex', 'IPython.utils.decorators', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.utils.sysinfo', 'IPython.utils._sysinfo', 'IPython.core.profiledir', 'IPython.paths', 'tempfile', 'IPython.utils.importstring', 'IPython.terminal', 'IPython.terminal.embed', 'IPython.core.compilerop', 'IPython.core.magic_arguments', 'IPython.core.error', 'IPython.utils.text', 'pathlib', 'ntpath', 'IPython.core.magic', 'getopt', 'IPython.core.oinspect', 'typing', 'typing.io', 'typing.re', 'IPython.core.page', 'IPython.core.display', 'binascii', 'mimetypes', 'IPython.lib', 'IPython.lib.security', 'getpass', 'IPython.lib.pretty', 'datetime', '_datetime', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.python', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.unistring', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'IPython.core.inputtransformer2', 'IPython.core.interactiveshell', 'pickleshare', 'pickle', '_compat_pickle', '_pickle', 'IPython.core.prefilter', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.alias', 'IPython.core.builtin_trap', 'IPython.core.events', 'backcall', 'backcall.backcall', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.core.formatters', 'IPython.utils.sentinel', 'IPython.core.history', 'sqlite3', 'sqlite3.dbapi2', '_sqlite3', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.display', 'IPython.lib.display', 'html', 'html.entities', 'IPython.utils.io', 'IPython.utils.capture', 'IPython.utils.strdispatch', 'IPython.core.hooks', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.terminal.interactiveshell', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'concurrent.futures.process', 'queue', 'multiprocessing', 'multiprocessing.context', 'multiprocessing.process', 'multiprocessing.reduction', 'socket', '_socket', 'array', '__mp_main__', 'multiprocessing.connection', '_multiprocessing', 'multiprocessing.util', 'concurrent.futures.thread', 'asyncio.compat', 'asyncio.coroutines', 'asyncio.constants', 'asyncio.events', 'asyncio.base_futures', 'asyncio.log', 'asyncio.futures', 'asyncio.base_tasks', '_asyncio', 'asyncio.tasks', 'asyncio.locks', 'asyncio.protocols', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.transports', 'asyncio.unix_events', 'asyncio.base_subprocess', 'asyncio.selector_events', 'ssl', 'ipaddress', '_ssl', 'base64', 'asyncio.sslproto', 'prompt_toolkit', 'prompt_toolkit.application', 'prompt_toolkit.application.application', 'prompt_toolkit.buffer', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop', 'prompt_toolkit.eventloop.async_generator', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.dummy_contextvars', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.utils', 'wcwidth', 'wcwidth.wcwidth', 'wcwidth.table_wide', 'wcwidth.table_zero', 'wcwidth.unicode_versions', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.eventloop.async_context_manager', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.document', 'prompt_toolkit.clipboard', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.filters', 'prompt_toolkit.filters.app', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.completion', 'prompt_toolkit.completion.base', 'prompt_toolkit.formatted_text', 'prompt_toolkit.formatted_text.ansi', 'prompt_toolkit.output', 'prompt_toolkit.output.base', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.pygments', 'prompt_toolkit.styles.style_transformation', 'colorsys', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output.vt100', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.html', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.history', 'prompt_toolkit.search', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.validation', 'prompt_toolkit.input', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.layout', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.controls', 'prompt_toolkit.lexers', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.dummy', 'prompt_toolkit.shortcuts', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.patch_stdout', 'pygments.style', 'IPython.terminal.debugger', 'IPython.core.completer', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'jedi', 'jedi.api', 'parso', 'parso.parser', 'parso.tree', 'parso.utils', 'parso.pgen2', 'parso.pgen2.generator', 'parso.pgen2.grammar_parser', 'parso.python', 'parso.python.tokenize', 'parso.python.token', 'parso.grammar', 'parso._compatibility', 'parso.python.diff', 'difflib', 'parso.python.parser', 'parso.python.tree', 'parso.python.prefix', 'parso.cache', 'gc', 'parso.python.errors', 'parso.normalizer', 'parso.python.pep8', 'parso.file_io', 'jedi._compatibility', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.file_io', 'jedi.api.classes', 'jedi.inference', 'jedi.inference.imports', 'jedi.inference.sys_path', 'jedi.inference.cache', 'jedi.inference.base_value', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.inference.compiled', 'jedi.inference.compiled.value', 'jedi.inference.filters', 'jedi.inference.flow_analysis', 'jedi.inference.recursion', 'jedi.inference.names', 'jedi.inference.docstrings', 'jedi.common', 'jedi.inference.lazy_value', 'jedi.plugins', 'jedi.inference.compiled.access', 'jedi.inference.compiled.getattr_static', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.gradual.typeshed', 'jedi.inference.gradual.stub_value', 'jedi.inference.value', 'jedi.inference.value.module', 'jedi.inference.value.klass', 'jedi.inference.arguments', 'jedi.inference.value.iterable', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.function', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.instance', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.compiled.subprocess', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.inference.syntax_tree', 'jedi.inference.gradual.annotation', 'jedi.inference.param', 'jedi.inference.value.decorator', 'jedi.inference.compiled.mixed', 'jedi.inference.gradual.conversion', 'jedi.api.keywords', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.interpreter', 'jedi.api.completion', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.api.environment', 'filecmp', 'jedi.api.project', 'jedi.inference.references', 'jedi.api.errors', 'jedi.api.refactoring', 'jedi.api.refactoring.extract', 'jedi.inference.gradual.utils', 'jedi.plugins.registry', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'jedi.plugins.django', 'IPython.terminal.ptutils', 'IPython.terminal.shortcuts', 'IPython.terminal.magics', 'IPython.lib.clipboard', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.ipapp', 'IPython.core.magics', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'IPython.core.magics.code', 'urllib.request', 'email', 'http', 'http.client', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'urllib.error', 'urllib.response', '_scproxy', 'IPython.core.magics.config', 'IPython.core.magics.display', 'IPython.core.magics.execution', 'timeit', 'cProfile', '_lsprof', 'profile', 'optparse', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.magics.pylab', 'IPython.core.pylabtools', 'IPython.core.magics.script', 'IPython.lib.backgroundjobs', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.utils.frame', 'jupyter_client', 'jupyter_client._version', 'jupyter_client.connect', 'zmq', 'ctypes', '_ctypes', 'ctypes._endian', 'zmq.backend', 'zmq.backend.select', 'zmq.backend.cython', 'zmq.backend.cython.constants', 'cython_runtime', 'zmq.backend.cython.error', '_cython_0_29_21', 'zmq.backend.cython.message', 'zmq.error', 'zmq.backend.cython.context', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.sugar', 'zmq.sugar.constants', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.context', 'zmq.sugar.attrsettr', 'zmq.sugar.socket', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'jupyter_client.localinterfaces', 'jupyter_core', 'jupyter_core.version', 'jupyter_core.paths', 'jupyter_client.launcher', 'traitlets.log', 'jupyter_client.client', 'jupyter_client.channels', 'jupyter_client.channelsabc', 'jupyter_client.clientabc', 'jupyter_client.manager', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.blocking', 'jupyter_client.blocking.client', 'jupyter_client.blocking.channels', 'jupyter_client.asynchronous', 'jupyter_client.asynchronous.client', 'zmq.asyncio', 'zmq._future', 'jupyter_client.asynchronous.channels', 'jupyter_client.multikernelmanager', 'uuid', 'ctypes.util', 'ctypes.macholib', 'ctypes.macholib.dyld', 'ctypes.macholib.framework', 'ctypes.macholib.dylib', 'ipykernel.kernelapp', 'tornado', 'tornado.ioloop', 'numbers', 'tornado.concurrent', 'tornado.log', 'logging.handlers', 'tornado.escape', 'tornado.util', 'tornado.speedups', 'curses', '_curses', 'zmq.eventloop', 'zmq.eventloop.ioloop', 'tornado.platform', 'tornado.platform.asyncio', 'tornado.gen', 'zmq.eventloop.zmqstream', 'ipykernel.iostream', 'imp', 'jupyter_client.session', 'hmac', 'jupyter_client.jsonutil', 'dateutil', 'dateutil._version', 'dateutil.parser', 'dateutil.parser._parser', 'decimal', '_decimal', 'dateutil.relativedelta', 'dateutil._common', 'dateutil.tz', 'dateutil.tz.tz', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.parser.isoparser', '_strptime', 'jupyter_client.adapter', 'ipykernel.heartbeat', 'ipykernel.ipkernel', 'IPython.utils.tokenutil', 'ipykernel.comm', 'ipykernel.comm.manager', 'ipykernel.comm.comm', 'ipykernel.kernelbase', 'tornado.queues', 'tornado.locks', 'ipykernel.jsonutil', 'ipykernel.zmqshell', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.datapub', 'ipykernel.serialize', 'ipykernel.pickleutil', 'ipykernel.codeutil', 'ipykernel.eventloops', 'distutils', 'distutils.version', 'ipykernel.parentpoller', 'faulthandler', 'IPython.core.completerlib', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'appnope', 'appnope._nope', 'storemagic', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'numpy.core', 'numpy.core.info', 'numpy.core.multiarray', 'numpy.core.overrides', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core._internal', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.shape_base', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.info', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.info', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.utils', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.mixins', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.scimath', 'numpy.lib.polynomial', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft.info', 'numpy.fft.fftpack', 'numpy.fft.fftpack_lite', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random.mtrand', 'mtrand', 'numpy.ctypeslib', 'numpy.core._dtype_ctypes', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.testing', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'numpy.testing._private', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'projects', 'projects.lifting_v2', 'projects.lifting_v2.experiments', 'projects.lifting_v2.experiments.experimentC3', 'projects.lifting_v2.experiments.experimentC3.E1_run', 'mrcfile', 'mrcfile.load_functions', 'mrcfile.bzip2mrcfile', 'mrcfile.mrcfile', 'mrcfile.mrcinterpreter', 'mrcfile.utils', 'mrcfile.constants', 'mrcfile.dtypes', 'mrcfile.mrcobject', 'mrcfile.future_mrcfile', 'mrcfile.gzipmrcfile', 'gzip', 'mrcfile.mrcmemmap', 'mrcfile.validator', 'mrcfile.version', 'scipy', 'scipy._lib', 'scipy._lib._testutils', 'scipy._lib.deprecation', 'scipy._distributor_init', 'scipy.__config__', 'scipy.version', 'scipy._lib._version', 'scipy._lib.six', 'scipy._lib._ccallback', 'scipy._lib._ccallback_c', 'scipy.fft', 'scipy.fft._basic', 'scipy._lib.uarray', 'scipy._lib._uarray', 'scipy._lib._uarray._backend', 'scipy._lib._uarray._uarray', 'scipy.fft._realtransforms', 'scipy.fft._helper', 'scipy.fft._pocketfft', 'scipy.fft._pocketfft.basic', 'scipy.fft._pocketfft.pypocketfft', 'scipy.fft._pocketfft.helper', 'scipy.fft._pocketfft.realtransforms', 'scipy.fft._backend', 'numpy.dual', 'scipy.ndimage', 'scipy.ndimage.filters', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy.ndimage._ni_docstrings', 'scipy._lib.doccer', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', 'scipy.ndimage.measurements', 'scipy.ndimage._ni_label', '_cython_0_29_13', '_ni_label', 'scipy.ndimage.morphology', 'aspire', 'logging.config', 'socketserver', 'importlib_resources', 'importlib_resources._common', 'importlib_resources.abc', 'importlib_resources._compat', 'zipfile', 'zipp', 'importlib_resources._py3', 'aspire.config', 'configparser', 'aspire.exceptions', 'aspire.operators', 'aspire.operators.blk_diag_matrix', 'scipy.linalg', 'scipy.linalg.linalg_version', 'scipy.linalg.misc', 'scipy.linalg.blas', 'scipy.linalg._fblas', 'scipy.linalg.lapack', 'scipy.linalg._flapack', 'scipy._lib._util', 'scipy.linalg.basic', 'scipy.linalg.flinalg', 'scipy.linalg._flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.matfuncs', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg._decomp_update', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._sketches', 'scipy.sparse', 'scipy.sparse.base', 'scipy._lib._numpy_compat', 'scipy.sparse.sputils', 'scipy.sparse.csr', 'scipy.sparse._sparsetools', 'scipy.sparse.compressed', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.csc', 'scipy.sparse.lil', 'scipy.sparse._csparsetools', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'aspire.utils', 'aspire.utils.misc', 'aspire.utils.matrix', 'aspire.utils.matlab_compat', 'aspire.utils.rotation', 'scipy.spatial', 'scipy.spatial.kdtree', 'scipy.spatial.ckdtree', 'scipy.spatial.qhull', 'scipy._lib.messagestream', 'scipy.spatial._spherical_voronoi', 'scipy.spatial._voronoi', 'scipy.spatial._plotutils', 'scipy._lib.decorator', 'scipy.spatial._procrustes', 'scipy.spatial.distance', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.special', 'scipy.special.sf_error', 'scipy.special._ufuncs', 'scipy.special._ufuncs_cxx', 'scipy.special._basic', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm', 'scipy.special._ellip_harm_2', 'scipy.special.lambertw', 'scipy.special._spherical_bessel', 'scipy.spatial.transform', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_groups', 'scipy.constants', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.spatial.transform._rotation_spline', 'aspire.utils.random', 'aspire.utils.types', 'aspire.utils.cell', 'aspire.operators.filters', 'scipy.interpolate', 'scipy.interpolate.interpolate', 'scipy.interpolate.fitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._bsplines', 'scipy.interpolate._bspl', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.rbf', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'aspire.utils.coor_trans', 'aspire.utils.filter_to_fb_mat', 'aspire.basis', 'aspire.basis.basis', 'scipy.sparse.linalg', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.matfuncs', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'aspire.basis.basis_utils', 'aspire.basis.dirac', 'aspire.basis.fb_2d', 'aspire.basis.fb_3d', 'aspire.basis.ffb_2d', 'aspire.image', 'aspire.image.image', 'aspire.volume', 'aspire.nufft', 'aspire.numeric', 'aspire.numeric.numpy', 'aspire.numeric.pyfftw_fft', 'pyfftw', 'pyfftw.pyfftw', 'pyfftw.config', 'pyfftw.builders', 'pyfftw.builders.builders', 'pyfftw.builders._utils', 'pyfftw.interfaces', 'pyfftw.interfaces.numpy_fft', 'pyfftw.interfaces._utils', 'pyfftw.interfaces.cache', 'scipy.fftpack', 'scipy.fftpack.basic', 'scipy.fftpack.helper', 'scipy.fftpack.pseudo_diffs', 'scipy.fftpack.convolve', 'scipy.fftpack.realtransforms', 'pyfftw.interfaces.scipy_fftpack', 'pyfftw.interfaces.scipy_fft', 'pyfftw._version', 'aspire.numeric.base_fft', 'aspire.image.preprocess', 'aspire.basis.ffb_3d', 'aspire.basis.fpswf_2d', 'scipy.optimize', 'scipy.optimize.optimize', 'scipy.optimize.linesearch', 'scipy.optimize.minpack2', 'scipy.optimize._minimize', 'scipy.optimize._trustregion_dogleg', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trlib', 'scipy.optimize._trlib._trlib', 'scipy.optimize._trustregion_exact', 'scipy.optimize._trustregion_constr', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.optimize._differentiable_functions', 'scipy.optimize._numdiff', 'scipy.optimize._group_columns', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._constraints', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize.lbfgsb', 'scipy.optimize._lbfgsb', 'scipy.optimize.tnc', 'scipy.optimize.moduleTNC', 'scipy.optimize.cobyla', 'scipy.optimize._cobyla', 'scipy.optimize.slsqp', 'scipy.optimize._slsqp', 'scipy.optimize._root', 'scipy.optimize.minpack', 'scipy.optimize._minpack', 'scipy.optimize._lsq', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.bvls', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root_scalar', 'scipy.optimize.zeros', 'scipy.optimize._zeros', 'scipy.optimize.nnls', 'scipy.optimize._nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._linprog', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_util', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_simplex', 'scipy.optimize._linprog_rs', 'scipy.optimize._bglu_dense', 'scipy.optimize._lsap', 'scipy.optimize._lsap_module', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.sobol_seq', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._dual_annealing', 'aspire.basis.pswf_2d', 'aspire.basis.pswf_utils', 'aspire.basis.fpswf_3d', 'aspire.basis.pswf_3d', 'aspire.basis.polar_2d', 'aspire.source', 'pandas', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pandas.compat', 'pandas.compat.numpy', 'pandas._libs', 'pandas._libs.tslibs', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.c_timestamp', 'pandas._libs.tslibs.nattype', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.tzconversion', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.ccalendar', 'pandas._config', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.frequencies', 'pandas._libs.tslibs.timestamps', 'pandas._libs.tslibs.resolution', 'pandas._libs.hashtable', 'pandas._libs.missing', 'pandas._libs.lib', 'fractions', 'pandas._libs.tslib', 'pandas.core', 'pandas.core.config_init', 'pandas.core.api', 'pandas.core.arrays', 'pandas.core.arrays.array_', 'pandas.core.dtypes', 'pandas.core.dtypes.common', 'pandas._libs.algos', 'pandas.core.dtypes.dtypes', 'pandas._libs.interval', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.errors', 'pandas.core.dtypes.inference', 'pandas._typing', 'pandas.core.arrays.base', 'pandas.compat.numpy.function', 'pandas.util', 'pandas.util._decorators', 'pandas._libs.properties', 'pandas.core.util', 'pandas.core.util.hashing', 'pandas._libs.hashing', 'pandas.core.dtypes.cast', 'pandas.core.dtypes.missing', 'pandas.util._validators', 'pandas.core.ops', 'pandas._libs.ops', 'pandas.core.common', 'pandas.core.ops.missing', 'pandas.core.ops.roperator', 'pandas.core.ops.docstrings', 'pandas.core.sorting', 'pandas.core.algorithms', 'pandas.core.indexers', 'pandas.core.arrays.categorical', 'pandas.core.accessor', 'pandas.core.base', 'pandas.core.nanops', 'pandas.compat._optional', 'pandas.core.missing', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.datetimelike', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.tseries.offsets', 'dateutil.easter', 'pandas.core.tools', 'pandas.core.tools.datetimes', 'pandas.core.arrays._ranges', 'pandas.core.arrays.integer', 'pandas.core.tools.numeric', 'pandas.core.arrays.interval', 'pandas.core.indexes', 'pandas.core.indexes.base', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.dtypes.concat', 'pandas.core.indexes.frozen', 'pandas.io.formats.printing', 'pandas.core.strings', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.sparse', 'pandas._libs.sparse', 'pandas.core.arrays.timedeltas', 'pandas.core.groupby', 'pandas.core.groupby.generic', 'pandas.core.frame', 'pandas.core.generic', 'pandas.core.index', 'pandas.core.indexes.api', 'pandas.core.indexes.category', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.numeric', 'pandas.core.indexes.interval', 'pandas.util._exceptions', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexing', 'pandas._libs.indexing', 'pandas.core.internals', 'pandas.core.internals.blocks', 'pandas._libs.internals', 'pandas.core.internals.arrays', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.io.formats.format', 'pandas.io.common', 'csv', '_csv', 'mmap', 'pandas.core.internals.construction', 'pandas.core.series', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.plotting', 'pandas.plotting._core', 'pandas.plotting._matplotlib', 'pandas.plotting._matplotlib.boxplot', 'matplotlib', 'matplotlib.cbook', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.animation', 'matplotlib._animation_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'matplotlib._version', 'matplotlib.ft2font', 'kiwisolver']
2022-04-04 16:45:07,714 DEBUG CACHEDIR=/Users/wdiepeveen/.matplotlib
2022-04-04 16:45:07,717 DEBUG Using fontManager instance from /Users/wdiepeveen/.matplotlib/fontlist-v330.json
2022-04-04 16:45:08,314 DEBUG Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2022-04-04 16:45:08,319 DEBUG Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2022-04-04 16:45:09,537 INFO Results folder is /Users/wdiepeveen/Documents/PhD/Projects/2 - Cryo-EM/src/src/Cryo-EM/tools/../results/expC3_22-04-04_16-45-09_SNR16_N2048_J20_r1_s10_i3
2022-04-04 16:45:09,558 INFO Start Experiment
2022-04-04 16:45:09,560 INFO Running Experiment for SNR = 0.0625 and 2048 images
2022-04-04 16:45:09,562 INFO This experiment illustrates orientation refinement using a lifting approach
2022-04-04 16:45:09,563 INFO Initialize simulation object and CTF filters.
2022-04-04 16:45:09,572 INFO Load 3D map and downsample 3D map to desired grids of 91 x 91 x 91.
2022-04-04 16:45:09,683 INFO Use downsampled map to creat simulation object.
2022-04-04 16:45:09,706 INFO Get true rotation angles generated randomly by the simulation object.
2022-04-04 16:45:11,424 DEBUG Corresponding type is already real float64.
2022-04-04 16:45:11,424 DEBUG nufft passed real_type for signal, converting
2022-04-04 16:45:11,429 INFO Trying NFFT backend finufft
2022-04-04 16:45:11,438 INFO NFFT backend finufft usable.
2022-04-04 16:45:11,440 INFO Trying NFFT backend cufinufft
2022-04-04 16:45:11,442 INFO NFFT backend cufinufft not usable:
	No module named 'pycuda'
2022-04-04 16:45:11,443 INFO Trying NFFT backend pynfft
2022-04-04 16:45:11,445 INFO NFFT backend pynfft not usable:
	No module named 'pynfft'
2022-04-04 16:45:11,446 INFO Selected NFFT backend = finufft.
2022-04-04 16:45:28,019 INFO Applying forward transformations in pipeline
2022-04-04 16:45:28,020 INFO All forward transformations applied
2022-04-04 16:45:28,020 INFO Loaded 2048 images
2022-04-04 16:45:29,785 DEBUG Corresponding type is already real float64.
2022-04-04 16:45:29,785 DEBUG nufft passed real_type for signal, converting
2022-04-04 16:45:48,091 INFO Applying forward transformations in pipeline
2022-04-04 16:45:48,092 INFO All forward transformations applied
2022-04-04 16:45:48,093 INFO Loaded 2048 images
2022-04-04 16:45:48,094 INFO Initializing density
2022-04-04 16:45:48,510 INFO Initialising Solver
2022-04-04 16:45:48,511 INFO Update data_discrepancies
2022-04-04 16:45:48,511 INFO Computing \|Ag.u - f_i\|^2
2022-04-04 16:45:49,348 DEBUG Corresponding type is already real float64.
2022-04-04 16:45:49,349 DEBUG nufft passed real_type for signal, converting
2022-04-04 16:46:06,416 INFO Computing data fidelity for 14761 rotations and 2048 images at 6%
2022-04-04 16:46:07,193 DEBUG Corresponding type is already real float64.
2022-04-04 16:46:07,193 DEBUG nufft passed real_type for signal, converting
2022-04-04 16:46:24,130 INFO Computing data fidelity for 14761 rotations and 2048 images at 13%
2022-04-04 16:46:24,928 DEBUG Corresponding type is already real float64.
2022-04-04 16:46:24,928 DEBUG nufft passed real_type for signal, converting
2022-04-04 16:46:41,005 INFO Computing data fidelity for 14761 rotations and 2048 images at 20%
2022-04-04 16:46:41,856 DEBUG Corresponding type is already real float64.
2022-04-04 16:46:41,856 DEBUG nufft passed real_type for signal, converting
2022-04-04 16:46:57,974 INFO Computing data fidelity for 14761 rotations and 2048 images at 27%
2022-04-04 16:46:58,835 DEBUG Corresponding type is already real float64.
2022-04-04 16:46:58,835 DEBUG nufft passed real_type for signal, converting
2022-04-04 16:47:15,634 INFO Computing data fidelity for 14761 rotations and 2048 images at 34%
2022-04-04 16:47:16,451 DEBUG Corresponding type is already real float64.
2022-04-04 16:47:16,451 DEBUG nufft passed real_type for signal, converting
2022-04-04 16:47:33,433 INFO Computing data fidelity for 14761 rotations and 2048 images at 41%
2022-04-04 16:47:34,347 DEBUG Corresponding type is already real float64.
2022-04-04 16:47:34,348 DEBUG nufft passed real_type for signal, converting
2022-04-04 16:47:49,681 INFO Computing data fidelity for 14761 rotations and 2048 images at 48%
2022-04-04 16:47:50,512 DEBUG Corresponding type is already real float64.
2022-04-04 16:47:50,512 DEBUG nufft passed real_type for signal, converting
2022-04-04 16:48:07,404 INFO Computing data fidelity for 14761 rotations and 2048 images at 55%
2022-04-04 16:48:08,265 DEBUG Corresponding type is already real float64.
2022-04-04 16:48:08,265 DEBUG nufft passed real_type for signal, converting
2022-04-04 16:48:23,945 INFO Computing data fidelity for 14761 rotations and 2048 images at 62%
2022-04-04 16:48:24,709 DEBUG Corresponding type is already real float64.
2022-04-04 16:48:24,710 DEBUG nufft passed real_type for signal, converting
2022-04-04 16:48:40,646 INFO Computing data fidelity for 14761 rotations and 2048 images at 69%
2022-04-04 16:48:41,430 DEBUG Corresponding type is already real float64.
2022-04-04 16:48:41,430 DEBUG nufft passed real_type for signal, converting
2022-04-04 16:48:56,877 INFO Computing data fidelity for 14761 rotations and 2048 images at 76%
2022-04-04 16:48:57,675 DEBUG Corresponding type is already real float64.
2022-04-04 16:48:57,675 DEBUG nufft passed real_type for signal, converting
2022-04-04 16:49:13,126 INFO Computing data fidelity for 14761 rotations and 2048 images at 83%
2022-04-04 16:49:13,957 DEBUG Corresponding type is already real float64.
2022-04-04 16:49:13,957 DEBUG nufft passed real_type for signal, converting
2022-04-04 16:49:29,553 INFO Computing data fidelity for 14761 rotations and 2048 images at 90%
2022-04-04 16:49:30,350 DEBUG Corresponding type is already real float64.
2022-04-04 16:49:30,350 DEBUG nufft passed real_type for signal, converting
2022-04-04 16:49:45,320 INFO Computing data fidelity for 14761 rotations and 2048 images at 97%
2022-04-04 16:49:45,572 DEBUG Corresponding type is already real float64.
2022-04-04 16:49:45,572 DEBUG nufft passed real_type for signal, converting
2022-04-04 16:49:53,032 INFO Computing data fidelity for 14761 rotations and 2048 images at 100%
2022-04-04 16:49:53,231 INFO Do lambda update step
2022-04-04 16:49:56,070 INFO Do rots update step
2022-04-04 16:49:56,185 INFO Projecting 2048 vectors onto 14761-simplex at 2%
2022-04-04 16:49:56,260 INFO Projecting 2048 vectors onto 14761-simplex at 4%
2022-04-04 16:49:56,338 INFO Projecting 2048 vectors onto 14761-simplex at 7%
2022-04-04 16:49:56,413 INFO Projecting 2048 vectors onto 14761-simplex at 9%
2022-04-04 16:49:56,491 INFO Projecting 2048 vectors onto 14761-simplex at 12%
2022-04-04 16:49:56,565 INFO Projecting 2048 vectors onto 14761-simplex at 14%
2022-04-04 16:49:56,643 INFO Projecting 2048 vectors onto 14761-simplex at 17%
2022-04-04 16:49:56,718 INFO Projecting 2048 vectors onto 14761-simplex at 19%
2022-04-04 16:49:56,795 INFO Projecting 2048 vectors onto 14761-simplex at 21%
2022-04-04 16:49:56,870 INFO Projecting 2048 vectors onto 14761-simplex at 24%
2022-04-04 16:49:56,982 INFO Projecting 2048 vectors onto 14761-simplex at 26%
2022-04-04 16:49:57,062 INFO Projecting 2048 vectors onto 14761-simplex at 29%
2022-04-04 16:49:57,144 INFO Projecting 2048 vectors onto 14761-simplex at 31%
2022-04-04 16:49:57,222 INFO Projecting 2048 vectors onto 14761-simplex at 34%
2022-04-04 16:49:57,302 INFO Projecting 2048 vectors onto 14761-simplex at 36%
2022-04-04 16:49:57,379 INFO Projecting 2048 vectors onto 14761-simplex at 39%
2022-04-04 16:49:57,455 INFO Projecting 2048 vectors onto 14761-simplex at 41%
2022-04-04 16:49:57,532 INFO Projecting 2048 vectors onto 14761-simplex at 43%
2022-04-04 16:49:57,610 INFO Projecting 2048 vectors onto 14761-simplex at 46%
2022-04-04 16:49:57,687 INFO Projecting 2048 vectors onto 14761-simplex at 48%
2022-04-04 16:49:57,786 INFO Projecting 2048 vectors onto 14761-simplex at 51%
2022-04-04 16:49:57,860 INFO Projecting 2048 vectors onto 14761-simplex at 53%
2022-04-04 16:49:57,937 INFO Projecting 2048 vectors onto 14761-simplex at 56%
2022-04-04 16:49:58,015 INFO Projecting 2048 vectors onto 14761-simplex at 58%
2022-04-04 16:49:58,092 INFO Projecting 2048 vectors onto 14761-simplex at 61%
2022-04-04 16:49:58,168 INFO Projecting 2048 vectors onto 14761-simplex at 63%
2022-04-04 16:49:58,246 INFO Projecting 2048 vectors onto 14761-simplex at 65%
2022-04-04 16:49:58,321 INFO Projecting 2048 vectors onto 14761-simplex at 68%
2022-04-04 16:49:58,399 INFO Projecting 2048 vectors onto 14761-simplex at 70%
2022-04-04 16:49:58,475 INFO Projecting 2048 vectors onto 14761-simplex at 73%
2022-04-04 16:49:58,578 INFO Projecting 2048 vectors onto 14761-simplex at 75%
2022-04-04 16:49:58,655 INFO Projecting 2048 vectors onto 14761-simplex at 78%
2022-04-04 16:49:58,732 INFO Projecting 2048 vectors onto 14761-simplex at 80%
2022-04-04 16:49:58,817 INFO Projecting 2048 vectors onto 14761-simplex at 83%
2022-04-04 16:49:58,893 INFO Projecting 2048 vectors onto 14761-simplex at 85%
2022-04-04 16:49:58,970 INFO Projecting 2048 vectors onto 14761-simplex at 87%
2022-04-04 16:49:59,048 INFO Projecting 2048 vectors onto 14761-simplex at 90%
2022-04-04 16:49:59,125 INFO Projecting 2048 vectors onto 14761-simplex at 92%
2022-04-04 16:49:59,202 INFO Projecting 2048 vectors onto 14761-simplex at 95%
2022-04-04 16:49:59,279 INFO Projecting 2048 vectors onto 14761-simplex at 97%
2022-04-04 16:49:59,355 INFO Projecting 2048 vectors onto 14761-simplex at 100%
2022-04-04 16:49:59,556 INFO Computing 50 means of 614 points in at most 20 steps...
2022-04-04 16:49:59,676 INFO Computing 2048 means at 2%
2022-04-04 16:49:59,689 INFO Computing 50 means of 618 points in at most 20 steps...
2022-04-04 16:49:59,793 INFO Computing 2048 means at 4%
2022-04-04 16:49:59,804 INFO Computing 50 means of 624 points in at most 20 steps...
2022-04-04 16:49:59,895 INFO Computing 2048 means at 7%
2022-04-04 16:49:59,906 INFO Computing 50 means of 606 points in at most 20 steps...
2022-04-04 16:49:59,988 INFO Computing 2048 means at 9%
2022-04-04 16:49:59,998 INFO Computing 50 means of 629 points in at most 20 steps...
2022-04-04 16:50:00,086 INFO Computing 2048 means at 12%
2022-04-04 16:50:00,096 INFO Computing 50 means of 627 points in at most 20 steps...
2022-04-04 16:50:00,176 INFO Computing 2048 means at 14%
2022-04-04 16:50:00,187 INFO Computing 50 means of 650 points in at most 20 steps...
2022-04-04 16:50:00,278 INFO Computing 2048 means at 17%
2022-04-04 16:50:00,289 INFO Computing 50 means of 613 points in at most 20 steps...
2022-04-04 16:50:00,368 INFO Computing 2048 means at 19%
2022-04-04 16:50:00,378 INFO Computing 50 means of 629 points in at most 20 steps...
2022-04-04 16:50:00,465 INFO Computing 2048 means at 21%
2022-04-04 16:50:00,477 INFO Computing 50 means of 622 points in at most 20 steps...
2022-04-04 16:50:00,562 INFO Computing 2048 means at 24%
2022-04-04 16:50:00,575 INFO Computing 50 means of 604 points in at most 20 steps...
2022-04-04 16:50:00,668 INFO Computing 2048 means at 26%
2022-04-04 16:50:00,678 INFO Computing 50 means of 629 points in at most 20 steps...
2022-04-04 16:50:00,759 INFO Computing 2048 means at 29%
2022-04-04 16:50:00,769 INFO Computing 50 means of 590 points in at most 20 steps...
2022-04-04 16:50:00,837 INFO Computing 2048 means at 31%
2022-04-04 16:50:00,847 INFO Computing 50 means of 629 points in at most 20 steps...
2022-04-04 16:50:00,919 INFO Computing 2048 means at 34%
2022-04-04 16:50:00,929 INFO Computing 50 means of 612 points in at most 20 steps...
2022-04-04 16:50:01,009 INFO Computing 2048 means at 36%
2022-04-04 16:50:01,018 INFO Computing 50 means of 602 points in at most 20 steps...
2022-04-04 16:50:01,099 INFO Computing 2048 means at 39%
2022-04-04 16:50:01,108 INFO Computing 50 means of 589 points in at most 20 steps...
2022-04-04 16:50:01,191 INFO Computing 2048 means at 41%
2022-04-04 16:50:01,201 INFO Computing 50 means of 600 points in at most 20 steps...
2022-04-04 16:50:01,287 INFO Computing 2048 means at 43%
2022-04-04 16:50:01,297 INFO Computing 50 means of 632 points in at most 20 steps...
2022-04-04 16:50:01,387 INFO Computing 2048 means at 46%
2022-04-04 16:50:01,397 INFO Computing 50 means of 614 points in at most 20 steps...
2022-04-04 16:50:01,501 INFO Computing 2048 means at 48%
2022-04-04 16:50:01,514 INFO Computing 50 means of 624 points in at most 20 steps...
2022-04-04 16:50:01,603 INFO Computing 2048 means at 51%
2022-04-04 16:50:01,618 INFO Computing 50 means of 609 points in at most 20 steps...
2022-04-04 16:50:01,717 INFO Computing 2048 means at 53%
2022-04-04 16:50:01,729 INFO Computing 50 means of 636 points in at most 20 steps...
2022-04-04 16:50:01,843 INFO Computing 2048 means at 56%
2022-04-04 16:50:01,854 INFO Computing 50 means of 640 points in at most 20 steps...
2022-04-04 16:50:01,971 INFO Computing 2048 means at 58%
2022-04-04 16:50:01,984 INFO Computing 50 means of 631 points in at most 20 steps...
2022-04-04 16:50:02,097 INFO Computing 2048 means at 61%
2022-04-04 16:50:02,110 INFO Computing 50 means of 606 points in at most 20 steps...
2022-04-04 16:50:02,214 INFO Computing 2048 means at 63%
2022-04-04 16:50:02,225 INFO Computing 50 means of 637 points in at most 20 steps...
2022-04-04 16:50:02,343 INFO Computing 2048 means at 65%
2022-04-04 16:50:02,355 INFO Computing 50 means of 634 points in at most 20 steps...
2022-04-04 16:50:02,467 INFO Computing 2048 means at 68%
2022-04-04 16:50:02,479 INFO Computing 50 means of 615 points in at most 20 steps...
2022-04-04 16:50:02,611 INFO Computing 2048 means at 70%
2022-04-04 16:50:02,628 INFO Computing 50 means of 589 points in at most 20 steps...
2022-04-04 16:50:02,761 INFO Computing 2048 means at 73%
2022-04-04 16:50:02,785 INFO Computing 50 means of 611 points in at most 20 steps...
2022-04-04 16:50:02,915 INFO Computing 2048 means at 75%
2022-04-04 16:50:02,929 INFO Computing 50 means of 623 points in at most 20 steps...
2022-04-04 16:50:03,046 INFO Computing 2048 means at 78%
2022-04-04 16:50:03,060 INFO Computing 50 means of 601 points in at most 20 steps...
2022-04-04 16:50:03,178 INFO Computing 2048 means at 80%
2022-04-04 16:50:03,190 INFO Computing 50 means of 605 points in at most 20 steps...
2022-04-04 16:50:03,308 INFO Computing 2048 means at 83%
2022-04-04 16:50:03,318 INFO Computing 50 means of 610 points in at most 20 steps...
2022-04-04 16:50:03,412 INFO Computing 2048 means at 85%
2022-04-04 16:50:03,421 INFO Computing 50 means of 625 points in at most 20 steps...
2022-04-04 16:50:03,513 INFO Computing 2048 means at 87%
2022-04-04 16:50:03,523 INFO Computing 50 means of 600 points in at most 20 steps...
2022-04-04 16:50:03,612 INFO Computing 2048 means at 90%
2022-04-04 16:50:03,622 INFO Computing 50 means of 611 points in at most 20 steps...
2022-04-04 16:50:03,708 INFO Computing 2048 means at 92%
2022-04-04 16:50:03,718 INFO Computing 50 means of 600 points in at most 20 steps...
2022-04-04 16:50:03,803 INFO Computing 2048 means at 95%
2022-04-04 16:50:03,813 INFO Computing 50 means of 633 points in at most 20 steps...
2022-04-04 16:50:03,906 INFO Computing 2048 means at 97%
2022-04-04 16:50:03,916 INFO Computing 48 means of 614 points in at most 20 steps...
2022-04-04 16:50:04,009 INFO Computing 2048 means at 100%
2022-04-04 16:50:04,527 INFO Do vol update step
2022-04-04 16:50:04,529 INFO Compute adjoint forward mapping on the images
2022-04-04 16:50:06,602 DEBUG Corresponding type is already complex complex128.
2022-04-04 16:50:12,234 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2022-04-04 16:50:12,272 INFO Computing adjoint forward mappings from 2048 rotations at 50%
2022-04-04 16:50:14,192 DEBUG Corresponding type is already complex complex128.
2022-04-04 16:50:17,250 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2022-04-04 16:50:17,265 INFO Computing adjoint forward mappings from 2048 rotations at 100%
2022-04-04 16:50:18,158 DEBUG Corresponding type is already real float64.
2022-04-04 16:50:18,158 DEBUG anufft passed real_type for signal, converting
2022-04-04 16:50:24,968 INFO Computing kernel from 2048 rotations at 50%
2022-04-04 16:50:25,854 DEBUG Corresponding type is already real float64.
2022-04-04 16:50:25,854 DEBUG anufft passed real_type for signal, converting
2022-04-04 16:50:34,922 INFO Computing kernel from 2048 rotations at 100%
2022-04-04 16:50:34,924 INFO Computing non-centered Fourier Transform
2022-04-04 16:50:35,108 INFO Add ramp filter regularisation
2022-04-04 16:50:36,104 INFO Update data_discrepancies
2022-04-04 16:50:36,105 INFO Computing \|Ag.u - f_i\|^2
2022-04-04 16:50:36,987 DEBUG Corresponding type is already real float64.
2022-04-04 16:50:36,987 DEBUG nufft passed real_type for signal, converting
2022-04-04 16:50:52,376 INFO Computing data fidelity for 14761 rotations and 2048 images at 6%
2022-04-04 16:50:53,127 DEBUG Corresponding type is already real float64.
2022-04-04 16:50:53,127 DEBUG nufft passed real_type for signal, converting
2022-04-04 16:51:07,908 INFO Computing data fidelity for 14761 rotations and 2048 images at 13%
2022-04-04 16:51:08,659 DEBUG Corresponding type is already real float64.
2022-04-04 16:51:08,659 DEBUG nufft passed real_type for signal, converting
2022-04-04 16:51:24,020 INFO Computing data fidelity for 14761 rotations and 2048 images at 20%
2022-04-04 16:51:24,873 DEBUG Corresponding type is already real float64.
2022-04-04 16:51:24,873 DEBUG nufft passed real_type for signal, converting
2022-04-04 16:51:40,615 INFO Computing data fidelity for 14761 rotations and 2048 images at 27%
2022-04-04 16:51:41,367 DEBUG Corresponding type is already real float64.
2022-04-04 16:51:41,367 DEBUG nufft passed real_type for signal, converting
2022-04-04 16:51:55,652 INFO Computing data fidelity for 14761 rotations and 2048 images at 34%
2022-04-04 16:51:56,402 DEBUG Corresponding type is already real float64.
2022-04-04 16:51:56,403 DEBUG nufft passed real_type for signal, converting
2022-04-04 16:52:10,625 INFO Computing data fidelity for 14761 rotations and 2048 images at 41%
2022-04-04 16:52:11,366 DEBUG Corresponding type is already real float64.
2022-04-04 16:52:11,366 DEBUG nufft passed real_type for signal, converting
2022-04-04 16:52:25,687 INFO Computing data fidelity for 14761 rotations and 2048 images at 48%
2022-04-04 16:52:26,441 DEBUG Corresponding type is already real float64.
2022-04-04 16:52:26,441 DEBUG nufft passed real_type for signal, converting
2022-04-04 16:52:40,653 INFO Computing data fidelity for 14761 rotations and 2048 images at 55%
2022-04-04 16:52:41,400 DEBUG Corresponding type is already real float64.
2022-04-04 16:52:41,400 DEBUG nufft passed real_type for signal, converting
2022-04-04 16:52:55,684 INFO Computing data fidelity for 14761 rotations and 2048 images at 62%
2022-04-04 16:52:56,433 DEBUG Corresponding type is already real float64.
2022-04-04 16:52:56,433 DEBUG nufft passed real_type for signal, converting
2022-04-04 16:53:10,694 INFO Computing data fidelity for 14761 rotations and 2048 images at 69%
2022-04-04 16:53:11,449 DEBUG Corresponding type is already real float64.
2022-04-04 16:53:11,449 DEBUG nufft passed real_type for signal, converting
2022-04-04 16:53:25,874 INFO Computing data fidelity for 14761 rotations and 2048 images at 76%
2022-04-04 16:53:26,624 DEBUG Corresponding type is already real float64.
2022-04-04 16:53:26,624 DEBUG nufft passed real_type for signal, converting
2022-04-04 16:53:40,906 INFO Computing data fidelity for 14761 rotations and 2048 images at 83%
2022-04-04 16:53:41,661 DEBUG Corresponding type is already real float64.
2022-04-04 16:53:41,661 DEBUG nufft passed real_type for signal, converting
2022-04-04 16:53:55,943 INFO Computing data fidelity for 14761 rotations and 2048 images at 90%
2022-04-04 16:53:56,691 DEBUG Corresponding type is already real float64.
2022-04-04 16:53:56,691 DEBUG nufft passed real_type for signal, converting
2022-04-04 16:54:11,319 INFO Computing data fidelity for 14761 rotations and 2048 images at 97%
2022-04-04 16:54:11,539 DEBUG Corresponding type is already real float64.
2022-04-04 16:54:11,539 DEBUG nufft passed real_type for signal, converting
2022-04-04 16:54:17,816 INFO Computing data fidelity for 14761 rotations and 2048 images at 100%
2022-04-04 16:54:17,972 INFO Do lambda update step
2022-04-04 16:54:20,477 INFO Do rots update step
2022-04-04 16:54:20,587 INFO Projecting 2048 vectors onto 14761-simplex at 2%
2022-04-04 16:54:20,660 INFO Projecting 2048 vectors onto 14761-simplex at 4%
2022-04-04 16:54:20,734 INFO Projecting 2048 vectors onto 14761-simplex at 7%
2022-04-04 16:54:20,807 INFO Projecting 2048 vectors onto 14761-simplex at 9%
2022-04-04 16:54:20,880 INFO Projecting 2048 vectors onto 14761-simplex at 12%
2022-04-04 16:54:20,953 INFO Projecting 2048 vectors onto 14761-simplex at 14%
2022-04-04 16:54:21,028 INFO Projecting 2048 vectors onto 14761-simplex at 17%
2022-04-04 16:54:21,102 INFO Projecting 2048 vectors onto 14761-simplex at 19%
2022-04-04 16:54:21,176 INFO Projecting 2048 vectors onto 14761-simplex at 21%
2022-04-04 16:54:21,250 INFO Projecting 2048 vectors onto 14761-simplex at 24%
2022-04-04 16:54:21,346 INFO Projecting 2048 vectors onto 14761-simplex at 26%
2022-04-04 16:54:21,420 INFO Projecting 2048 vectors onto 14761-simplex at 29%
2022-04-04 16:54:21,493 INFO Projecting 2048 vectors onto 14761-simplex at 31%
2022-04-04 16:54:21,567 INFO Projecting 2048 vectors onto 14761-simplex at 34%
2022-04-04 16:54:21,642 INFO Projecting 2048 vectors onto 14761-simplex at 36%
2022-04-04 16:54:21,717 INFO Projecting 2048 vectors onto 14761-simplex at 39%
2022-04-04 16:54:21,791 INFO Projecting 2048 vectors onto 14761-simplex at 41%
2022-04-04 16:54:21,866 INFO Projecting 2048 vectors onto 14761-simplex at 43%
2022-04-04 16:54:21,940 INFO Projecting 2048 vectors onto 14761-simplex at 46%
2022-04-04 16:54:22,013 INFO Projecting 2048 vectors onto 14761-simplex at 48%
2022-04-04 16:54:22,112 INFO Projecting 2048 vectors onto 14761-simplex at 51%
2022-04-04 16:54:22,187 INFO Projecting 2048 vectors onto 14761-simplex at 53%
2022-04-04 16:54:22,261 INFO Projecting 2048 vectors onto 14761-simplex at 56%
2022-04-04 16:54:22,334 INFO Projecting 2048 vectors onto 14761-simplex at 58%
2022-04-04 16:54:22,407 INFO Projecting 2048 vectors onto 14761-simplex at 61%
2022-04-04 16:54:22,479 INFO Projecting 2048 vectors onto 14761-simplex at 63%
2022-04-04 16:54:22,551 INFO Projecting 2048 vectors onto 14761-simplex at 65%
2022-04-04 16:54:22,624 INFO Projecting 2048 vectors onto 14761-simplex at 68%
2022-04-04 16:54:22,698 INFO Projecting 2048 vectors onto 14761-simplex at 70%
2022-04-04 16:54:22,774 INFO Projecting 2048 vectors onto 14761-simplex at 73%
2022-04-04 16:54:22,885 INFO Projecting 2048 vectors onto 14761-simplex at 75%
2022-04-04 16:54:22,970 INFO Projecting 2048 vectors onto 14761-simplex at 78%
2022-04-04 16:54:23,056 INFO Projecting 2048 vectors onto 14761-simplex at 80%
2022-04-04 16:54:23,149 INFO Projecting 2048 vectors onto 14761-simplex at 83%
2022-04-04 16:54:23,270 INFO Projecting 2048 vectors onto 14761-simplex at 85%
2022-04-04 16:54:23,377 INFO Projecting 2048 vectors onto 14761-simplex at 87%
2022-04-04 16:54:23,478 INFO Projecting 2048 vectors onto 14761-simplex at 90%
2022-04-04 16:54:23,574 INFO Projecting 2048 vectors onto 14761-simplex at 92%
2022-04-04 16:54:23,667 INFO Projecting 2048 vectors onto 14761-simplex at 95%
2022-04-04 16:54:23,766 INFO Projecting 2048 vectors onto 14761-simplex at 97%
2022-04-04 16:54:23,863 INFO Projecting 2048 vectors onto 14761-simplex at 100%
2022-04-04 16:54:24,114 INFO Computing 50 means of 531 points in at most 20 steps...
2022-04-04 16:54:24,259 INFO Computing 2048 means at 2%
2022-04-04 16:54:24,278 INFO Computing 50 means of 532 points in at most 20 steps...
2022-04-04 16:54:24,378 INFO Computing 2048 means at 4%
2022-04-04 16:54:24,390 INFO Computing 50 means of 536 points in at most 20 steps...
2022-04-04 16:54:24,503 INFO Computing 2048 means at 7%
2022-04-04 16:54:24,513 INFO Computing 50 means of 542 points in at most 20 steps...
2022-04-04 16:54:24,629 INFO Computing 2048 means at 9%
2022-04-04 16:54:24,643 INFO Computing 50 means of 520 points in at most 20 steps...
2022-04-04 16:54:24,750 INFO Computing 2048 means at 12%
2022-04-04 16:54:24,760 INFO Computing 50 means of 556 points in at most 20 steps...
2022-04-04 16:54:24,880 INFO Computing 2048 means at 14%
2022-04-04 16:54:24,889 INFO Computing 50 means of 541 points in at most 20 steps...
2022-04-04 16:54:24,997 INFO Computing 2048 means at 17%
2022-04-04 16:54:25,006 INFO Computing 50 means of 543 points in at most 20 steps...
2022-04-04 16:54:25,095 INFO Computing 2048 means at 19%
2022-04-04 16:54:25,105 INFO Computing 50 means of 562 points in at most 20 steps...
2022-04-04 16:54:25,187 INFO Computing 2048 means at 21%
2022-04-04 16:54:25,197 INFO Computing 50 means of 541 points in at most 20 steps...
2022-04-04 16:54:25,272 INFO Computing 2048 means at 24%
2022-04-04 16:54:25,291 INFO Computing 50 means of 552 points in at most 20 steps...
2022-04-04 16:54:25,380 INFO Computing 2048 means at 26%
2022-04-04 16:54:25,390 INFO Computing 50 means of 552 points in at most 20 steps...
2022-04-04 16:54:25,456 INFO Computing 2048 means at 29%
2022-04-04 16:54:25,466 INFO Computing 50 means of 515 points in at most 20 steps...
2022-04-04 16:54:25,534 INFO Computing 2048 means at 31%
2022-04-04 16:54:25,543 INFO Computing 50 means of 537 points in at most 20 steps...
2022-04-04 16:54:25,625 INFO Computing 2048 means at 34%
2022-04-04 16:54:25,635 INFO Computing 50 means of 517 points in at most 20 steps...
2022-04-04 16:54:25,701 INFO Computing 2048 means at 36%
2022-04-04 16:54:25,710 INFO Computing 50 means of 535 points in at most 20 steps...
2022-04-04 16:54:25,781 INFO Computing 2048 means at 39%
2022-04-04 16:54:25,791 INFO Computing 50 means of 558 points in at most 20 steps...
2022-04-04 16:54:25,877 INFO Computing 2048 means at 41%
2022-04-04 16:54:25,887 INFO Computing 50 means of 533 points in at most 20 steps...
2022-04-04 16:54:25,953 INFO Computing 2048 means at 43%
2022-04-04 16:54:25,962 INFO Computing 50 means of 542 points in at most 20 steps...
2022-04-04 16:54:26,031 INFO Computing 2048 means at 46%
2022-04-04 16:54:26,041 INFO Computing 50 means of 563 points in at most 20 steps...
2022-04-04 16:54:26,110 INFO Computing 2048 means at 48%
2022-04-04 16:54:26,122 INFO Computing 50 means of 543 points in at most 20 steps...
2022-04-04 16:54:26,193 INFO Computing 2048 means at 51%
2022-04-04 16:54:26,203 INFO Computing 50 means of 544 points in at most 20 steps...
2022-04-04 16:54:26,271 INFO Computing 2048 means at 53%
2022-04-04 16:54:26,281 INFO Computing 50 means of 549 points in at most 20 steps...
2022-04-04 16:54:26,349 INFO Computing 2048 means at 56%
2022-04-04 16:54:26,358 INFO Computing 50 means of 549 points in at most 20 steps...
2022-04-04 16:54:26,425 INFO Computing 2048 means at 58%
2022-04-04 16:54:26,434 INFO Computing 50 means of 554 points in at most 20 steps...
2022-04-04 16:54:26,503 INFO Computing 2048 means at 61%
2022-04-04 16:54:26,512 INFO Computing 50 means of 553 points in at most 20 steps...
2022-04-04 16:54:26,581 INFO Computing 2048 means at 63%
2022-04-04 16:54:26,590 INFO Computing 50 means of 551 points in at most 20 steps...
2022-04-04 16:54:26,656 INFO Computing 2048 means at 65%
2022-04-04 16:54:26,665 INFO Computing 50 means of 558 points in at most 20 steps...
2022-04-04 16:54:26,734 INFO Computing 2048 means at 68%
2022-04-04 16:54:26,744 INFO Computing 50 means of 543 points in at most 20 steps...
2022-04-04 16:54:26,812 INFO Computing 2048 means at 70%
2022-04-04 16:54:26,821 INFO Computing 50 means of 522 points in at most 20 steps...
2022-04-04 16:54:26,884 INFO Computing 2048 means at 73%
2022-04-04 16:54:26,895 INFO Computing 50 means of 535 points in at most 20 steps...
2022-04-04 16:54:26,963 INFO Computing 2048 means at 75%
2022-04-04 16:54:26,972 INFO Computing 50 means of 528 points in at most 20 steps...
2022-04-04 16:54:27,037 INFO Computing 2048 means at 78%
2022-04-04 16:54:27,046 INFO Computing 50 means of 544 points in at most 20 steps...
2022-04-04 16:54:27,114 INFO Computing 2048 means at 80%
2022-04-04 16:54:27,124 INFO Computing 50 means of 529 points in at most 20 steps...
2022-04-04 16:54:27,189 INFO Computing 2048 means at 83%
2022-04-04 16:54:27,198 INFO Computing 50 means of 538 points in at most 20 steps...
2022-04-04 16:54:27,264 INFO Computing 2048 means at 85%
2022-04-04 16:54:27,273 INFO Computing 50 means of 559 points in at most 20 steps...
2022-04-04 16:54:27,341 INFO Computing 2048 means at 87%
2022-04-04 16:54:27,350 INFO Computing 50 means of 552 points in at most 20 steps...
2022-04-04 16:54:27,421 INFO Computing 2048 means at 90%
2022-04-04 16:54:27,430 INFO Computing 50 means of 526 points in at most 20 steps...
2022-04-04 16:54:27,495 INFO Computing 2048 means at 92%
2022-04-04 16:54:27,505 INFO Computing 50 means of 520 points in at most 20 steps...
2022-04-04 16:54:27,569 INFO Computing 2048 means at 95%
2022-04-04 16:54:27,579 INFO Computing 50 means of 547 points in at most 20 steps...
2022-04-04 16:54:27,647 INFO Computing 2048 means at 97%
2022-04-04 16:54:27,657 INFO Computing 48 means of 519 points in at most 20 steps...
2022-04-04 16:54:27,720 INFO Computing 2048 means at 100%
2022-04-04 16:54:28,159 INFO Do vol update step
2022-04-04 16:54:28,160 INFO Compute adjoint forward mapping on the images
2022-04-04 16:54:29,863 DEBUG Corresponding type is already complex complex128.
2022-04-04 16:54:32,427 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2022-04-04 16:54:32,445 INFO Computing adjoint forward mappings from 2048 rotations at 50%
2022-04-04 16:54:33,982 DEBUG Corresponding type is already complex complex128.
2022-04-04 16:54:36,551 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2022-04-04 16:54:36,566 INFO Computing adjoint forward mappings from 2048 rotations at 100%
2022-04-04 16:54:37,447 DEBUG Corresponding type is already real float64.
2022-04-04 16:54:37,447 DEBUG anufft passed real_type for signal, converting
2022-04-04 16:54:45,238 INFO Computing kernel from 2048 rotations at 50%
2022-04-04 16:54:46,124 DEBUG Corresponding type is already real float64.
2022-04-04 16:54:46,124 DEBUG anufft passed real_type for signal, converting
2022-04-04 16:54:52,682 INFO Computing kernel from 2048 rotations at 100%
2022-04-04 16:54:52,685 INFO Computing non-centered Fourier Transform
2022-04-04 16:54:52,869 INFO Add ramp filter regularisation
2022-04-04 16:54:53,860 INFO Update data_discrepancies
2022-04-04 16:54:53,861 INFO Computing \|Ag.u - f_i\|^2
2022-04-04 16:54:54,724 DEBUG Corresponding type is already real float64.
2022-04-04 16:54:54,724 DEBUG nufft passed real_type for signal, converting
2022-04-04 16:55:08,930 INFO Computing data fidelity for 14761 rotations and 2048 images at 6%
2022-04-04 16:55:09,687 DEBUG Corresponding type is already real float64.
2022-04-04 16:55:09,687 DEBUG nufft passed real_type for signal, converting
2022-04-04 16:55:24,187 INFO Computing data fidelity for 14761 rotations and 2048 images at 13%
2022-04-04 16:55:24,966 DEBUG Corresponding type is already real float64.
2022-04-04 16:55:24,966 DEBUG nufft passed real_type for signal, converting
2022-04-04 16:55:39,300 INFO Computing data fidelity for 14761 rotations and 2048 images at 20%
2022-04-04 16:55:40,045 DEBUG Corresponding type is already real float64.
2022-04-04 16:55:40,045 DEBUG nufft passed real_type for signal, converting
2022-04-04 16:55:54,282 INFO Computing data fidelity for 14761 rotations and 2048 images at 27%
2022-04-04 16:55:55,028 DEBUG Corresponding type is already real float64.
2022-04-04 16:55:55,028 DEBUG nufft passed real_type for signal, converting
2022-04-04 16:56:09,202 INFO Computing data fidelity for 14761 rotations and 2048 images at 34%
2022-04-04 16:56:09,945 DEBUG Corresponding type is already real float64.
2022-04-04 16:56:09,945 DEBUG nufft passed real_type for signal, converting
2022-04-04 16:56:24,195 INFO Computing data fidelity for 14761 rotations and 2048 images at 41%
2022-04-04 16:56:24,942 DEBUG Corresponding type is already real float64.
2022-04-04 16:56:24,942 DEBUG nufft passed real_type for signal, converting
2022-04-04 16:56:39,107 INFO Computing data fidelity for 14761 rotations and 2048 images at 48%
2022-04-04 16:56:39,862 DEBUG Corresponding type is already real float64.
2022-04-04 16:56:39,862 DEBUG nufft passed real_type for signal, converting
2022-04-04 16:56:54,101 INFO Computing data fidelity for 14761 rotations and 2048 images at 55%
2022-04-04 16:56:54,849 DEBUG Corresponding type is already real float64.
2022-04-04 16:56:54,849 DEBUG nufft passed real_type for signal, converting
2022-04-04 16:57:09,051 INFO Computing data fidelity for 14761 rotations and 2048 images at 62%
2022-04-04 16:57:09,794 DEBUG Corresponding type is already real float64.
2022-04-04 16:57:09,794 DEBUG nufft passed real_type for signal, converting
2022-04-04 16:57:24,152 INFO Computing data fidelity for 14761 rotations and 2048 images at 69%
2022-04-04 16:57:24,900 DEBUG Corresponding type is already real float64.
2022-04-04 16:57:24,900 DEBUG nufft passed real_type for signal, converting
2022-04-04 16:57:39,214 INFO Computing data fidelity for 14761 rotations and 2048 images at 76%
2022-04-04 16:57:39,967 DEBUG Corresponding type is already real float64.
2022-04-04 16:57:39,967 DEBUG nufft passed real_type for signal, converting
2022-04-04 16:57:54,303 INFO Computing data fidelity for 14761 rotations and 2048 images at 83%
2022-04-04 16:57:55,049 DEBUG Corresponding type is already real float64.
2022-04-04 16:57:55,049 DEBUG nufft passed real_type for signal, converting
2022-04-04 16:58:09,276 INFO Computing data fidelity for 14761 rotations and 2048 images at 90%
2022-04-04 16:58:10,021 DEBUG Corresponding type is already real float64.
2022-04-04 16:58:10,021 DEBUG nufft passed real_type for signal, converting
2022-04-04 16:58:24,328 INFO Computing data fidelity for 14761 rotations and 2048 images at 97%
2022-04-04 16:58:24,540 DEBUG Corresponding type is already real float64.
2022-04-04 16:58:24,540 DEBUG nufft passed real_type for signal, converting
2022-04-04 16:58:30,409 INFO Computing data fidelity for 14761 rotations and 2048 images at 100%
2022-04-04 16:58:30,627 INFO Do lambda update step
2022-04-04 16:58:33,482 INFO Do rots update step
2022-04-04 16:58:33,591 INFO Projecting 2048 vectors onto 14761-simplex at 2%
2022-04-04 16:58:33,667 INFO Projecting 2048 vectors onto 14761-simplex at 4%
2022-04-04 16:58:33,741 INFO Projecting 2048 vectors onto 14761-simplex at 7%
2022-04-04 16:58:33,814 INFO Projecting 2048 vectors onto 14761-simplex at 9%
2022-04-04 16:58:33,887 INFO Projecting 2048 vectors onto 14761-simplex at 12%
2022-04-04 16:58:33,960 INFO Projecting 2048 vectors onto 14761-simplex at 14%
2022-04-04 16:58:34,034 INFO Projecting 2048 vectors onto 14761-simplex at 17%
2022-04-04 16:58:34,108 INFO Projecting 2048 vectors onto 14761-simplex at 19%
2022-04-04 16:58:34,181 INFO Projecting 2048 vectors onto 14761-simplex at 21%
2022-04-04 16:58:34,254 INFO Projecting 2048 vectors onto 14761-simplex at 24%
2022-04-04 16:58:34,352 INFO Projecting 2048 vectors onto 14761-simplex at 26%
2022-04-04 16:58:34,425 INFO Projecting 2048 vectors onto 14761-simplex at 29%
2022-04-04 16:58:34,498 INFO Projecting 2048 vectors onto 14761-simplex at 31%
2022-04-04 16:58:34,572 INFO Projecting 2048 vectors onto 14761-simplex at 34%
2022-04-04 16:58:34,645 INFO Projecting 2048 vectors onto 14761-simplex at 36%
2022-04-04 16:58:34,719 INFO Projecting 2048 vectors onto 14761-simplex at 39%
2022-04-04 16:58:34,793 INFO Projecting 2048 vectors onto 14761-simplex at 41%
2022-04-04 16:58:34,866 INFO Projecting 2048 vectors onto 14761-simplex at 43%
2022-04-04 16:58:34,939 INFO Projecting 2048 vectors onto 14761-simplex at 46%
2022-04-04 16:58:35,013 INFO Projecting 2048 vectors onto 14761-simplex at 48%
2022-04-04 16:58:35,110 INFO Projecting 2048 vectors onto 14761-simplex at 51%
2022-04-04 16:58:35,184 INFO Projecting 2048 vectors onto 14761-simplex at 53%
2022-04-04 16:58:35,256 INFO Projecting 2048 vectors onto 14761-simplex at 56%
2022-04-04 16:58:35,330 INFO Projecting 2048 vectors onto 14761-simplex at 58%
2022-04-04 16:58:35,403 INFO Projecting 2048 vectors onto 14761-simplex at 61%
2022-04-04 16:58:35,476 INFO Projecting 2048 vectors onto 14761-simplex at 63%
2022-04-04 16:58:35,550 INFO Projecting 2048 vectors onto 14761-simplex at 65%
2022-04-04 16:58:35,623 INFO Projecting 2048 vectors onto 14761-simplex at 68%
2022-04-04 16:58:35,696 INFO Projecting 2048 vectors onto 14761-simplex at 70%
2022-04-04 16:58:35,770 INFO Projecting 2048 vectors onto 14761-simplex at 73%
2022-04-04 16:58:35,868 INFO Projecting 2048 vectors onto 14761-simplex at 75%
2022-04-04 16:58:35,941 INFO Projecting 2048 vectors onto 14761-simplex at 78%
2022-04-04 16:58:36,015 INFO Projecting 2048 vectors onto 14761-simplex at 80%
2022-04-04 16:58:36,089 INFO Projecting 2048 vectors onto 14761-simplex at 83%
2022-04-04 16:58:36,162 INFO Projecting 2048 vectors onto 14761-simplex at 85%
2022-04-04 16:58:36,236 INFO Projecting 2048 vectors onto 14761-simplex at 87%
2022-04-04 16:58:36,308 INFO Projecting 2048 vectors onto 14761-simplex at 90%
2022-04-04 16:58:36,381 INFO Projecting 2048 vectors onto 14761-simplex at 92%
2022-04-04 16:58:36,455 INFO Projecting 2048 vectors onto 14761-simplex at 95%
2022-04-04 16:58:36,528 INFO Projecting 2048 vectors onto 14761-simplex at 97%
2022-04-04 16:58:36,599 INFO Projecting 2048 vectors onto 14761-simplex at 100%
2022-04-04 16:58:36,769 INFO Computing 50 means of 515 points in at most 20 steps...
2022-04-04 16:58:36,852 INFO Computing 2048 means at 2%
2022-04-04 16:58:36,864 INFO Computing 50 means of 504 points in at most 20 steps...
2022-04-04 16:58:36,927 INFO Computing 2048 means at 4%
2022-04-04 16:58:36,937 INFO Computing 50 means of 502 points in at most 20 steps...
2022-04-04 16:58:37,001 INFO Computing 2048 means at 7%
2022-04-04 16:58:37,010 INFO Computing 50 means of 509 points in at most 20 steps...
2022-04-04 16:58:37,072 INFO Computing 2048 means at 9%
2022-04-04 16:58:37,082 INFO Computing 50 means of 492 points in at most 20 steps...
2022-04-04 16:58:37,143 INFO Computing 2048 means at 12%
2022-04-04 16:58:37,153 INFO Computing 50 means of 506 points in at most 20 steps...
2022-04-04 16:58:37,218 INFO Computing 2048 means at 14%
2022-04-04 16:58:37,227 INFO Computing 50 means of 507 points in at most 20 steps...
2022-04-04 16:58:37,290 INFO Computing 2048 means at 17%
2022-04-04 16:58:37,300 INFO Computing 50 means of 522 points in at most 20 steps...
2022-04-04 16:58:37,367 INFO Computing 2048 means at 19%
2022-04-04 16:58:37,376 INFO Computing 50 means of 496 points in at most 20 steps...
2022-04-04 16:58:37,437 INFO Computing 2048 means at 21%
2022-04-04 16:58:37,447 INFO Computing 50 means of 523 points in at most 20 steps...
2022-04-04 16:58:37,515 INFO Computing 2048 means at 24%
2022-04-04 16:58:37,528 INFO Computing 50 means of 502 points in at most 20 steps...
2022-04-04 16:58:37,589 INFO Computing 2048 means at 26%
2022-04-04 16:58:37,599 INFO Computing 50 means of 525 points in at most 20 steps...
2022-04-04 16:58:37,665 INFO Computing 2048 means at 29%
2022-04-04 16:58:37,674 INFO Computing 50 means of 500 points in at most 20 steps...
2022-04-04 16:58:37,735 INFO Computing 2048 means at 31%
2022-04-04 16:58:37,744 INFO Computing 50 means of 493 points in at most 20 steps...
2022-04-04 16:58:37,806 INFO Computing 2048 means at 34%
2022-04-04 16:58:37,815 INFO Computing 50 means of 509 points in at most 20 steps...
2022-04-04 16:58:37,879 INFO Computing 2048 means at 36%
2022-04-04 16:58:37,889 INFO Computing 50 means of 487 points in at most 20 steps...
2022-04-04 16:58:37,949 INFO Computing 2048 means at 39%
2022-04-04 16:58:37,958 INFO Computing 50 means of 498 points in at most 20 steps...
2022-04-04 16:58:38,019 INFO Computing 2048 means at 41%
2022-04-04 16:58:38,028 INFO Computing 50 means of 513 points in at most 20 steps...
2022-04-04 16:58:38,090 INFO Computing 2048 means at 43%
2022-04-04 16:58:38,099 INFO Computing 50 means of 519 points in at most 20 steps...
2022-04-04 16:58:38,163 INFO Computing 2048 means at 46%
2022-04-04 16:58:38,173 INFO Computing 50 means of 532 points in at most 20 steps...
2022-04-04 16:58:38,237 INFO Computing 2048 means at 48%
2022-04-04 16:58:38,250 INFO Computing 50 means of 522 points in at most 20 steps...
2022-04-04 16:58:38,316 INFO Computing 2048 means at 51%
2022-04-04 16:58:38,325 INFO Computing 50 means of 509 points in at most 20 steps...
2022-04-04 16:58:38,386 INFO Computing 2048 means at 53%
2022-04-04 16:58:38,396 INFO Computing 50 means of 513 points in at most 20 steps...
2022-04-04 16:58:38,458 INFO Computing 2048 means at 56%
2022-04-04 16:58:38,468 INFO Computing 50 means of 529 points in at most 20 steps...
2022-04-04 16:58:38,534 INFO Computing 2048 means at 58%
2022-04-04 16:58:38,544 INFO Computing 50 means of 515 points in at most 20 steps...
2022-04-04 16:58:38,606 INFO Computing 2048 means at 61%
2022-04-04 16:58:38,615 INFO Computing 50 means of 512 points in at most 20 steps...
2022-04-04 16:58:38,677 INFO Computing 2048 means at 63%
2022-04-04 16:58:38,688 INFO Computing 50 means of 510 points in at most 20 steps...
2022-04-04 16:58:38,751 INFO Computing 2048 means at 65%
2022-04-04 16:58:38,760 INFO Computing 50 means of 511 points in at most 20 steps...
2022-04-04 16:58:38,823 INFO Computing 2048 means at 68%
2022-04-04 16:58:38,833 INFO Computing 50 means of 497 points in at most 20 steps...
2022-04-04 16:58:38,896 INFO Computing 2048 means at 70%
2022-04-04 16:58:38,906 INFO Computing 50 means of 511 points in at most 20 steps...
2022-04-04 16:58:38,967 INFO Computing 2048 means at 73%
2022-04-04 16:58:38,980 INFO Computing 50 means of 529 points in at most 20 steps...
2022-04-04 16:58:39,047 INFO Computing 2048 means at 75%
2022-04-04 16:58:39,057 INFO Computing 50 means of 511 points in at most 20 steps...
2022-04-04 16:58:39,120 INFO Computing 2048 means at 78%
2022-04-04 16:58:39,129 INFO Computing 50 means of 494 points in at most 20 steps...
2022-04-04 16:58:39,192 INFO Computing 2048 means at 80%
2022-04-04 16:58:39,202 INFO Computing 50 means of 509 points in at most 20 steps...
2022-04-04 16:58:39,266 INFO Computing 2048 means at 83%
2022-04-04 16:58:39,276 INFO Computing 50 means of 517 points in at most 20 steps...
2022-04-04 16:58:39,340 INFO Computing 2048 means at 85%
2022-04-04 16:58:39,349 INFO Computing 50 means of 515 points in at most 20 steps...
2022-04-04 16:58:39,414 INFO Computing 2048 means at 87%
2022-04-04 16:58:39,423 INFO Computing 50 means of 517 points in at most 20 steps...
2022-04-04 16:58:39,486 INFO Computing 2048 means at 90%
2022-04-04 16:58:39,496 INFO Computing 50 means of 480 points in at most 20 steps...
2022-04-04 16:58:39,557 INFO Computing 2048 means at 92%
2022-04-04 16:58:39,567 INFO Computing 50 means of 502 points in at most 20 steps...
2022-04-04 16:58:39,630 INFO Computing 2048 means at 95%
2022-04-04 16:58:39,640 INFO Computing 50 means of 512 points in at most 20 steps...
2022-04-04 16:58:39,701 INFO Computing 2048 means at 97%
2022-04-04 16:58:39,711 INFO Computing 48 means of 512 points in at most 20 steps...
2022-04-04 16:58:39,771 INFO Computing 2048 means at 100%
2022-04-04 16:58:40,198 INFO Do vol update step
2022-04-04 16:58:40,199 INFO Compute adjoint forward mapping on the images
2022-04-04 16:58:41,895 DEBUG Corresponding type is already complex complex128.
2022-04-04 16:58:44,454 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2022-04-04 16:58:44,472 INFO Computing adjoint forward mappings from 2048 rotations at 50%
2022-04-04 16:58:46,567 DEBUG Corresponding type is already complex complex128.
2022-04-04 16:58:49,679 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2022-04-04 16:58:49,695 INFO Computing adjoint forward mappings from 2048 rotations at 100%
2022-04-04 16:58:50,568 DEBUG Corresponding type is already real float64.
2022-04-04 16:58:50,568 DEBUG anufft passed real_type for signal, converting
2022-04-04 16:58:56,955 INFO Computing kernel from 2048 rotations at 50%
2022-04-04 16:58:57,824 DEBUG Corresponding type is already real float64.
2022-04-04 16:58:57,824 DEBUG anufft passed real_type for signal, converting
2022-04-04 16:59:04,463 INFO Computing kernel from 2048 rotations at 100%
2022-04-04 16:59:04,467 INFO Computing non-centered Fourier Transform
2022-04-04 16:59:04,789 INFO Add ramp filter regularisation
2022-04-04 16:59:09,704 INFO Start Postprocessing
2022-04-04 16:59:09,706 INFO Postprocessing started
2022-04-04 16:59:11,057 DEBUG locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9096c3d5f8>
2022-04-04 16:59:11,058 DEBUG Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9096c3d5f8> on colorbar
2022-04-04 16:59:11,058 DEBUG Setting pcolormesh
2022-04-04 16:59:11,075 DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2022-04-04 16:59:11,076 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,076 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,076 DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,076 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,077 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,077 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-04-04 16:59:11,077 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,077 DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,077 DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,077 DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,077 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-04-04 16:59:11,077 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,077 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,077 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,077 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,077 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-04-04 16:59:11,077 DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,077 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,078 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,078 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,078 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,078 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,078 DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,078 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-04-04 16:59:11,078 DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,078 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,078 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,078 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,078 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,078 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,079 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,079 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-04-04 16:59:11,079 DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,079 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-04-04 16:59:11,079 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,079 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,079 DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,079 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,079 DEBUG findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,079 DEBUG findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,079 DEBUG findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,079 DEBUG findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,079 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,080 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,080 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,080 DEBUG findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,080 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2022-04-04 16:59:11,080 DEBUG findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,080 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,080 DEBUG findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,080 DEBUG findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,080 DEBUG findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2022-04-04 16:59:11,080 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,080 DEBUG findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,081 DEBUG findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,081 DEBUG findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,081 DEBUG findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,081 DEBUG findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2022-04-04 16:59:11,081 DEBUG findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,081 DEBUG findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,081 DEBUG findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,081 DEBUG findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,081 DEBUG findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,081 DEBUG findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,081 DEBUG findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,081 DEBUG findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,082 DEBUG findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,082 DEBUG findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,082 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2022-04-04 16:59:11,082 DEBUG findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,082 DEBUG findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,082 DEBUG findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,082 DEBUG findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,082 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,082 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,082 DEBUG findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,082 DEBUG findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,082 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,082 DEBUG findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,082 DEBUG findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,083 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,083 DEBUG findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,083 DEBUG findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,083 DEBUG findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,083 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,083 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,083 DEBUG findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,083 DEBUG findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,083 DEBUG findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,083 DEBUG findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,083 DEBUG findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,084 DEBUG findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2022-04-04 16:59:11,084 DEBUG findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,084 DEBUG findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2022-04-04 16:59:11,084 DEBUG findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,084 DEBUG findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,084 DEBUG findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,084 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2022-04-04 16:59:11,084 DEBUG findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,084 DEBUG findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,084 DEBUG findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,084 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,084 DEBUG findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,084 DEBUG findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,084 DEBUG findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,084 DEBUG findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,085 DEBUG findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
2022-04-04 16:59:11,085 DEBUG findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,085 DEBUG findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,085 DEBUG findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,085 DEBUG findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,085 DEBUG findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,085 DEBUG findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,085 DEBUG findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,085 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,085 DEBUG findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,085 DEBUG findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,085 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,085 DEBUG findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,085 DEBUG findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,085 DEBUG findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,085 DEBUG findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,085 DEBUG findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,085 DEBUG findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,085 DEBUG findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,086 DEBUG findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,086 DEBUG findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,086 DEBUG findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,086 DEBUG findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,086 DEBUG findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,086 DEBUG findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,086 DEBUG findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,086 DEBUG findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,086 DEBUG findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,086 DEBUG findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,086 DEBUG findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,086 DEBUG findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,086 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,086 DEBUG findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,087 DEBUG findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,087 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,087 DEBUG findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,087 DEBUG findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,087 DEBUG findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,087 DEBUG findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,087 DEBUG findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,087 DEBUG findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,087 DEBUG findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,087 DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,087 DEBUG findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,087 DEBUG findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,087 DEBUG findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,087 DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,088 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2022-04-04 16:59:11,088 DEBUG findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,088 DEBUG findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,088 DEBUG findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,088 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,088 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,088 DEBUG findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,088 DEBUG findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,088 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,088 DEBUG findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,088 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,088 DEBUG findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,088 DEBUG findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,088 DEBUG findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,089 DEBUG findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,089 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,089 DEBUG findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,089 DEBUG findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,089 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,089 DEBUG findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,089 DEBUG findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2022-04-04 16:59:11,089 DEBUG findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,089 DEBUG findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,089 DEBUG findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,089 DEBUG findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,089 DEBUG findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,089 DEBUG findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,089 DEBUG findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,089 DEBUG findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,090 DEBUG findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,090 DEBUG findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,090 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2022-04-04 16:59:11,090 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2022-04-04 16:59:11,090 DEBUG findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,090 DEBUG findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,090 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,090 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,090 DEBUG findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,090 DEBUG findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,090 DEBUG findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2022-04-04 16:59:11,090 DEBUG findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2022-04-04 16:59:11,090 DEBUG findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,091 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,091 DEBUG findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,091 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,091 DEBUG findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2022-04-04 16:59:11,091 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,091 DEBUG findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,091 DEBUG findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,091 DEBUG findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,091 DEBUG findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,091 DEBUG findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,091 DEBUG findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,091 DEBUG findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,091 DEBUG findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,091 DEBUG findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,091 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2022-04-04 16:59:11,092 DEBUG findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-04 16:59:11,092 DEBUG findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,092 DEBUG findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,092 DEBUG findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,092 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,092 DEBUG findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2022-04-04 16:59:11,092 DEBUG findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,092 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,092 DEBUG findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,092 DEBUG findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,092 DEBUG findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,092 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,092 DEBUG findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,092 DEBUG findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,093 DEBUG findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,093 DEBUG findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,093 DEBUG findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,093 DEBUG findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,093 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,093 DEBUG findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,093 DEBUG findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,093 DEBUG findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,093 DEBUG findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,093 DEBUG findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2022-04-04 16:59:11,093 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2022-04-04 16:59:11,093 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,093 DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,093 DEBUG findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,094 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2022-04-04 16:59:11,094 DEBUG findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,094 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,094 DEBUG findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,094 DEBUG findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,094 DEBUG findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,094 DEBUG findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,094 DEBUG findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,094 DEBUG findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,094 DEBUG findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,094 DEBUG findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,094 DEBUG findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,094 DEBUG findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,094 DEBUG findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,094 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2022-04-04 16:59:11,095 DEBUG findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,095 DEBUG findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,095 DEBUG findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,095 DEBUG findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,095 DEBUG findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,095 DEBUG findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,095 DEBUG findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,095 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2022-04-04 16:59:11,095 DEBUG findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,095 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-04 16:59:11,095 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,095 DEBUG findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,095 DEBUG findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,095 DEBUG findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,095 DEBUG findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,096 DEBUG findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,096 DEBUG findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,096 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,096 DEBUG findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,096 DEBUG findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,096 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,096 DEBUG findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,096 DEBUG findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,096 DEBUG findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,096 DEBUG findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,096 DEBUG findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,096 DEBUG findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,096 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,096 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,097 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,097 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2022-04-04 16:59:11,097 DEBUG findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,097 DEBUG findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,097 DEBUG findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,097 DEBUG findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,097 DEBUG findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,097 DEBUG findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,097 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,097 DEBUG findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,097 DEBUG findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,097 DEBUG findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,097 DEBUG findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,097 DEBUG findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,097 DEBUG findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,097 DEBUG findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,097 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,097 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,097 DEBUG findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,098 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,098 DEBUG findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,098 DEBUG findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,098 DEBUG findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,098 DEBUG findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,098 DEBUG findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,098 DEBUG findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,098 DEBUG findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,098 DEBUG findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,098 DEBUG findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,098 DEBUG findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,098 DEBUG findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,098 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,098 DEBUG findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,098 DEBUG findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,098 DEBUG findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2022-04-04 16:59:11,098 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,098 DEBUG findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2022-04-04 16:59:11,098 DEBUG findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,099 DEBUG findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,099 DEBUG findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,099 DEBUG findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,099 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,099 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,099 DEBUG findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,099 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,099 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,099 DEBUG findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,099 DEBUG findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,099 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,099 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,099 DEBUG findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,099 DEBUG findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,099 DEBUG findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,099 DEBUG findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,099 DEBUG findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,099 DEBUG findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,100 DEBUG findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2022-04-04 16:59:11,100 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,100 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,100 DEBUG findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,100 DEBUG findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,100 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,100 DEBUG findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,100 DEBUG findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,100 DEBUG findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,100 DEBUG findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,100 DEBUG findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,100 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,100 DEBUG findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,100 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,100 DEBUG findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,100 DEBUG findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,100 DEBUG findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 2.872272727272727
2022-04-04 16:59:11,100 DEBUG findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,100 DEBUG findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,101 DEBUG findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,101 DEBUG findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,101 DEBUG findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,101 DEBUG findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,101 DEBUG findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,101 DEBUG findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,101 DEBUG findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,101 DEBUG findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,101 DEBUG findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,101 DEBUG findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2022-04-04 16:59:11,101 DEBUG findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,101 DEBUG findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,101 DEBUG findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,101 DEBUG findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,101 DEBUG findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,101 DEBUG findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,101 DEBUG findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,101 DEBUG findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,102 DEBUG findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,102 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,102 DEBUG findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,102 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,102 DEBUG findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,102 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,102 DEBUG findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,102 DEBUG findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,102 DEBUG findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,102 DEBUG findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,102 DEBUG findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,102 DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2022-04-04 16:59:11,108 DEBUG findfont: Matching STIXGeneral:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2022-04-04 16:59:11,108 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,108 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-04-04 16:59:11,108 DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,108 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 1.335
2022-04-04 16:59:11,108 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,108 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,108 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,108 DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,108 DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,109 DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,109 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-04-04 16:59:11,109 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,109 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,109 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 1.05
2022-04-04 16:59:11,109 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,109 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-04-04 16:59:11,109 DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,109 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,109 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,109 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,109 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,109 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 0.05
2022-04-04 16:59:11,109 DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,109 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-04-04 16:59:11,109 DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,109 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,109 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,109 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,109 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,110 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,110 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,110 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-04-04 16:59:11,110 DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,110 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,110 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,110 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,110 DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,110 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,110 DEBUG findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,110 DEBUG findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,110 DEBUG findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,110 DEBUG findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,110 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 0.05
2022-04-04 16:59:11,110 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,110 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,110 DEBUG findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,110 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,110 DEBUG findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,110 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,111 DEBUG findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,111 DEBUG findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,111 DEBUG findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,111 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,111 DEBUG findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,111 DEBUG findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,111 DEBUG findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,111 DEBUG findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,111 DEBUG findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,111 DEBUG findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,111 DEBUG findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,111 DEBUG findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,111 DEBUG findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,111 DEBUG findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,111 DEBUG findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,111 DEBUG findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,111 DEBUG findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,111 DEBUG findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,111 DEBUG findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,111 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2022-04-04 16:59:11,111 DEBUG findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,112 DEBUG findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,112 DEBUG findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,112 DEBUG findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,112 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,112 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,112 DEBUG findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,112 DEBUG findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,112 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,112 DEBUG findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,112 DEBUG findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,112 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,112 DEBUG findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,112 DEBUG findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,112 DEBUG findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,112 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,112 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,112 DEBUG findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,112 DEBUG findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,112 DEBUG findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,112 DEBUG findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,112 DEBUG findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,112 DEBUG findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,113 DEBUG findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,113 DEBUG findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2022-04-04 16:59:11,113 DEBUG findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,113 DEBUG findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,113 DEBUG findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,113 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2022-04-04 16:59:11,113 DEBUG findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,113 DEBUG findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,113 DEBUG findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,113 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,113 DEBUG findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,113 DEBUG findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,113 DEBUG findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,113 DEBUG findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,113 DEBUG findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,113 DEBUG findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,113 DEBUG findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,113 DEBUG findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,113 DEBUG findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,113 DEBUG findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,113 DEBUG findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,114 DEBUG findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,114 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,114 DEBUG findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,114 DEBUG findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,114 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,114 DEBUG findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,114 DEBUG findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,114 DEBUG findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,114 DEBUG findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,114 DEBUG findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,114 DEBUG findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,114 DEBUG findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,114 DEBUG findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,114 DEBUG findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,114 DEBUG findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,114 DEBUG findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,114 DEBUG findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,114 DEBUG findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,114 DEBUG findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,114 DEBUG findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,114 DEBUG findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,114 DEBUG findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,114 DEBUG findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,115 DEBUG findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,115 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,115 DEBUG findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,115 DEBUG findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,115 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,115 DEBUG findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,115 DEBUG findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,115 DEBUG findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,115 DEBUG findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,115 DEBUG findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,115 DEBUG findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,115 DEBUG findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,115 DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,115 DEBUG findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,115 DEBUG findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,115 DEBUG findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,115 DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,115 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2022-04-04 16:59:11,115 DEBUG findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,115 DEBUG findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,115 DEBUG findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,116 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,116 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,116 DEBUG findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,116 DEBUG findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,116 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,116 DEBUG findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,116 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,116 DEBUG findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,116 DEBUG findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,116 DEBUG findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,116 DEBUG findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,116 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,116 DEBUG findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,116 DEBUG findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,116 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,116 DEBUG findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,116 DEBUG findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2022-04-04 16:59:11,116 DEBUG findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,116 DEBUG findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,116 DEBUG findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,116 DEBUG findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,116 DEBUG findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,117 DEBUG findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,117 DEBUG findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,117 DEBUG findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,117 DEBUG findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,117 DEBUG findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,117 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2022-04-04 16:59:11,117 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,117 DEBUG findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,117 DEBUG findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,117 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,117 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,117 DEBUG findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,117 DEBUG findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,117 DEBUG findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,117 DEBUG findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2022-04-04 16:59:11,117 DEBUG findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,117 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,117 DEBUG findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,117 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,117 DEBUG findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,117 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,117 DEBUG findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,118 DEBUG findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,118 DEBUG findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,118 DEBUG findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,118 DEBUG findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,118 DEBUG findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,118 DEBUG findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,118 DEBUG findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,118 DEBUG findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,118 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2022-04-04 16:59:11,118 DEBUG findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-04 16:59:11,118 DEBUG findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,118 DEBUG findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,118 DEBUG findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,118 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,118 DEBUG findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2022-04-04 16:59:11,118 DEBUG findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,118 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,118 DEBUG findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,118 DEBUG findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,118 DEBUG findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,118 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,118 DEBUG findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,119 DEBUG findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,119 DEBUG findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,119 DEBUG findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,119 DEBUG findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,119 DEBUG findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,119 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,119 DEBUG findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,119 DEBUG findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,119 DEBUG findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,119 DEBUG findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,119 DEBUG findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2022-04-04 16:59:11,119 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2022-04-04 16:59:11,119 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,119 DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,119 DEBUG findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,119 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2022-04-04 16:59:11,119 DEBUG findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,119 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,119 DEBUG findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,119 DEBUG findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,119 DEBUG findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,119 DEBUG findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,120 DEBUG findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,120 DEBUG findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,120 DEBUG findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,120 DEBUG findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,120 DEBUG findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,120 DEBUG findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,120 DEBUG findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,120 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2022-04-04 16:59:11,120 DEBUG findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,120 DEBUG findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,120 DEBUG findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,120 DEBUG findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,120 DEBUG findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,120 DEBUG findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,120 DEBUG findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,120 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2022-04-04 16:59:11,120 DEBUG findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,120 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-04 16:59:11,120 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 0.33499999999999996
2022-04-04 16:59:11,120 DEBUG findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,120 DEBUG findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,120 DEBUG findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,121 DEBUG findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,121 DEBUG findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,121 DEBUG findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,121 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,121 DEBUG findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,121 DEBUG findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,121 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,121 DEBUG findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,121 DEBUG findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,121 DEBUG findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,121 DEBUG findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,121 DEBUG findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,121 DEBUG findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,121 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,121 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,121 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,121 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2022-04-04 16:59:11,121 DEBUG findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,121 DEBUG findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,121 DEBUG findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,121 DEBUG findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,121 DEBUG findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,122 DEBUG findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,122 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,122 DEBUG findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,122 DEBUG findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,122 DEBUG findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,122 DEBUG findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,122 DEBUG findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,122 DEBUG findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,122 DEBUG findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,122 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,122 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,122 DEBUG findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,122 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,122 DEBUG findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,122 DEBUG findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,122 DEBUG findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,122 DEBUG findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,122 DEBUG findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,122 DEBUG findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,122 DEBUG findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,122 DEBUG findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,123 DEBUG findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,123 DEBUG findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,123 DEBUG findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,123 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,123 DEBUG findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,123 DEBUG findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,123 DEBUG findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2022-04-04 16:59:11,123 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,123 DEBUG findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,123 DEBUG findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,123 DEBUG findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,123 DEBUG findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,123 DEBUG findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,123 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,123 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,123 DEBUG findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,123 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,123 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,123 DEBUG findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,123 DEBUG findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,123 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 1.05
2022-04-04 16:59:11,123 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,124 DEBUG findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,124 DEBUG findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,124 DEBUG findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,124 DEBUG findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,124 DEBUG findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,124 DEBUG findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,124 DEBUG findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2022-04-04 16:59:11,124 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,124 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,124 DEBUG findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,124 DEBUG findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,124 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,124 DEBUG findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,124 DEBUG findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,124 DEBUG findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,124 DEBUG findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,124 DEBUG findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,124 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,124 DEBUG findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,124 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 1.335
2022-04-04 16:59:11,124 DEBUG findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,125 DEBUG findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,125 DEBUG findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,125 DEBUG findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,125 DEBUG findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,125 DEBUG findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,125 DEBUG findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,125 DEBUG findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,125 DEBUG findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,125 DEBUG findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,125 DEBUG findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,125 DEBUG findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,125 DEBUG findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,125 DEBUG findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,125 DEBUG findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2022-04-04 16:59:11,125 DEBUG findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,125 DEBUG findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,125 DEBUG findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,125 DEBUG findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,125 DEBUG findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,125 DEBUG findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,125 DEBUG findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,125 DEBUG findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,126 DEBUG findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,126 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,126 DEBUG findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,126 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,126 DEBUG findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,126 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,126 DEBUG findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,126 DEBUG findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,126 DEBUG findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,126 DEBUG findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,126 DEBUG findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,126 DEBUG findfont: Matching STIXGeneral:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to STIXGeneral ('/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf') with score of 0.050000.
2022-04-04 16:59:11,127 DEBUG findfont: Matching STIXGeneral:style=italic:variant=normal:weight=normal:stretch=normal:size=10.0.
2022-04-04 16:59:11,127 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,127 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 1.335
2022-04-04 16:59:11,127 DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,127 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 0.33499999999999996
2022-04-04 16:59:11,127 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,127 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,127 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,127 DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,128 DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,128 DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,128 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-04-04 16:59:11,128 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,128 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,128 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 0.05
2022-04-04 16:59:11,128 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 10.335
2022-04-04 16:59:11,128 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-04-04 16:59:11,128 DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,128 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 10.05
2022-04-04 16:59:11,128 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,128 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,128 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,128 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 1.05
2022-04-04 16:59:11,128 DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,128 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-04-04 16:59:11,128 DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,128 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,128 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 10.05
2022-04-04 16:59:11,128 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,129 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,129 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,129 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,129 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-04-04 16:59:11,129 DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,129 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,129 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2022-04-04 16:59:11,129 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,129 DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,129 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,129 DEBUG findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,129 DEBUG findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,129 DEBUG findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,129 DEBUG findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,129 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 1.05
2022-04-04 16:59:11,129 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,129 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,129 DEBUG findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,129 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 10.335
2022-04-04 16:59:11,129 DEBUG findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,129 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 10.335
2022-04-04 16:59:11,130 DEBUG findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 11.525
2022-04-04 16:59:11,130 DEBUG findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,130 DEBUG findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 10.335
2022-04-04 16:59:11,130 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,130 DEBUG findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,130 DEBUG findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,130 DEBUG findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,130 DEBUG findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,130 DEBUG findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,130 DEBUG findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,130 DEBUG findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,130 DEBUG findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,130 DEBUG findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,130 DEBUG findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,130 DEBUG findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,130 DEBUG findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,130 DEBUG findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,130 DEBUG findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,131 DEBUG findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,131 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 11.14975
2022-04-04 16:59:11,131 DEBUG findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,131 DEBUG findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,131 DEBUG findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,131 DEBUG findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,131 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,131 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 10.05
2022-04-04 16:59:11,131 DEBUG findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,131 DEBUG findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,131 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,131 DEBUG findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,131 DEBUG findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,131 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,131 DEBUG findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,131 DEBUG findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,131 DEBUG findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,132 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,132 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,132 DEBUG findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,132 DEBUG findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,132 DEBUG findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,132 DEBUG findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,132 DEBUG findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,132 DEBUG findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,132 DEBUG findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,132 DEBUG findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 11.43
2022-04-04 16:59:11,132 DEBUG findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,132 DEBUG findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,132 DEBUG findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,132 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 10.14975
2022-04-04 16:59:11,132 DEBUG findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,132 DEBUG findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,132 DEBUG findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,132 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,132 DEBUG findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 11.145
2022-04-04 16:59:11,133 DEBUG findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,133 DEBUG findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,133 DEBUG findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,133 DEBUG findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,133 DEBUG findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,133 DEBUG findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 10.05
2022-04-04 16:59:11,133 DEBUG findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 11.145
2022-04-04 16:59:11,133 DEBUG findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,133 DEBUG findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,133 DEBUG findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 11.525
2022-04-04 16:59:11,133 DEBUG findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,133 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,133 DEBUG findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,133 DEBUG findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,133 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,133 DEBUG findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,134 DEBUG findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 11.145
2022-04-04 16:59:11,134 DEBUG findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,134 DEBUG findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,134 DEBUG findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,134 DEBUG findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 10.05
2022-04-04 16:59:11,134 DEBUG findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,134 DEBUG findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,134 DEBUG findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,134 DEBUG findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,134 DEBUG findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,134 DEBUG findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,134 DEBUG findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,134 DEBUG findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,134 DEBUG findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 11.145
2022-04-04 16:59:11,134 DEBUG findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,134 DEBUG findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,134 DEBUG findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,134 DEBUG findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,134 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 11.145
2022-04-04 16:59:11,134 DEBUG findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,134 DEBUG findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,135 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 11.525
2022-04-04 16:59:11,135 DEBUG findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,135 DEBUG findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,135 DEBUG findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,135 DEBUG findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,135 DEBUG findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,135 DEBUG findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,135 DEBUG findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,135 DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,135 DEBUG findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 10.05
2022-04-04 16:59:11,135 DEBUG findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,135 DEBUG findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,135 DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,135 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 10.535
2022-04-04 16:59:11,135 DEBUG findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,135 DEBUG findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,135 DEBUG findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,135 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,135 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,135 DEBUG findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,135 DEBUG findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,136 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,136 DEBUG findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,136 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 11.145
2022-04-04 16:59:11,136 DEBUG findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,136 DEBUG findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,136 DEBUG findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,136 DEBUG findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,136 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,136 DEBUG findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,136 DEBUG findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,136 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,136 DEBUG findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,136 DEBUG findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 11.42525
2022-04-04 16:59:11,136 DEBUG findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,136 DEBUG findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,136 DEBUG findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,136 DEBUG findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,136 DEBUG findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,136 DEBUG findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,136 DEBUG findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,137 DEBUG findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,137 DEBUG findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 11.145
2022-04-04 16:59:11,137 DEBUG findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,137 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 11.43
2022-04-04 16:59:11,137 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,137 DEBUG findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,137 DEBUG findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,137 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 10.335
2022-04-04 16:59:11,137 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,137 DEBUG findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,137 DEBUG findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,137 DEBUG findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,137 DEBUG findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 11.25
2022-04-04 16:59:11,137 DEBUG findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,137 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,137 DEBUG findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 10.05
2022-04-04 16:59:11,137 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,137 DEBUG findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 10.05
2022-04-04 16:59:11,138 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,138 DEBUG findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,138 DEBUG findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,138 DEBUG findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,138 DEBUG findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,138 DEBUG findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,138 DEBUG findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 10.05
2022-04-04 16:59:11,138 DEBUG findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,138 DEBUG findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 11.525
2022-04-04 16:59:11,138 DEBUG findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,138 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 11.1925
2022-04-04 16:59:11,138 DEBUG findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 11.535
2022-04-04 16:59:11,138 DEBUG findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,138 DEBUG findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,138 DEBUG findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,138 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 10.05
2022-04-04 16:59:11,139 DEBUG findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 11.62
2022-04-04 16:59:11,139 DEBUG findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,139 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,139 DEBUG findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,139 DEBUG findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,139 DEBUG findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,139 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,139 DEBUG findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,139 DEBUG findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,139 DEBUG findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 11.525
2022-04-04 16:59:11,139 DEBUG findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,139 DEBUG findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,139 DEBUG findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,139 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,139 DEBUG findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,139 DEBUG findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,139 DEBUG findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,139 DEBUG findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,139 DEBUG findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 11.535
2022-04-04 16:59:11,140 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 11.25
2022-04-04 16:59:11,140 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,140 DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 11.525
2022-04-04 16:59:11,140 DEBUG findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,140 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 11.24
2022-04-04 16:59:11,140 DEBUG findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,140 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,140 DEBUG findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,140 DEBUG findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,140 DEBUG findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,140 DEBUG findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,140 DEBUG findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,140 DEBUG findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,140 DEBUG findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,140 DEBUG findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 10.05
2022-04-04 16:59:11,140 DEBUG findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,140 DEBUG findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,140 DEBUG findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,141 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 11.24
2022-04-04 16:59:11,141 DEBUG findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,141 DEBUG findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,141 DEBUG findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,141 DEBUG findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,141 DEBUG findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,141 DEBUG findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,141 DEBUG findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,141 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 11.335
2022-04-04 16:59:11,141 DEBUG findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,141 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 11.535
2022-04-04 16:59:11,141 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 1.335
2022-04-04 16:59:11,141 DEBUG findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,141 DEBUG findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,141 DEBUG findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,141 DEBUG findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,142 DEBUG findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,142 DEBUG findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,142 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,142 DEBUG findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,142 DEBUG findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 11.145
2022-04-04 16:59:11,142 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,142 DEBUG findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,142 DEBUG findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,142 DEBUG findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,142 DEBUG findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,142 DEBUG findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,142 DEBUG findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,142 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,142 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 10.05
2022-04-04 16:59:11,142 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,142 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 10.25
2022-04-04 16:59:11,143 DEBUG findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,143 DEBUG findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,143 DEBUG findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,143 DEBUG findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,143 DEBUG findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,143 DEBUG findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,143 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 10.335
2022-04-04 16:59:11,143 DEBUG findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,143 DEBUG findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,143 DEBUG findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 11.145
2022-04-04 16:59:11,143 DEBUG findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,143 DEBUG findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,143 DEBUG findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,143 DEBUG findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,143 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 11.145
2022-04-04 16:59:11,143 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,143 DEBUG findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,143 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,143 DEBUG findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,143 DEBUG findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,144 DEBUG findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,144 DEBUG findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,144 DEBUG findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,144 DEBUG findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,144 DEBUG findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,144 DEBUG findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,144 DEBUG findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,144 DEBUG findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,144 DEBUG findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,144 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,144 DEBUG findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,144 DEBUG findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,144 DEBUG findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 11.335
2022-04-04 16:59:11,144 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,144 DEBUG findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 10.05
2022-04-04 16:59:11,144 DEBUG findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,144 DEBUG findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,144 DEBUG findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,144 DEBUG findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,144 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,145 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 10.335
2022-04-04 16:59:11,145 DEBUG findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,145 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,145 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,145 DEBUG findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,145 DEBUG findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,145 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 0.05
2022-04-04 16:59:11,145 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,145 DEBUG findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,145 DEBUG findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,145 DEBUG findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,145 DEBUG findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,145 DEBUG findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,145 DEBUG findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,145 DEBUG findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 10.62
2022-04-04 16:59:11,145 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,145 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,145 DEBUG findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,145 DEBUG findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,145 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,145 DEBUG findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,146 DEBUG findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,146 DEBUG findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,146 DEBUG findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,146 DEBUG findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,146 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,146 DEBUG findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,146 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 0.33499999999999996
2022-04-04 16:59:11,146 DEBUG findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,146 DEBUG findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,146 DEBUG findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 11.145
2022-04-04 16:59:11,146 DEBUG findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,146 DEBUG findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,146 DEBUG findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,146 DEBUG findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,146 DEBUG findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 11.145
2022-04-04 16:59:11,146 DEBUG findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,146 DEBUG findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,146 DEBUG findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,146 DEBUG findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 11.145
2022-04-04 16:59:11,146 DEBUG findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 11.525
2022-04-04 16:59:11,146 DEBUG findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,146 DEBUG findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 11.1925
2022-04-04 16:59:11,147 DEBUG findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,147 DEBUG findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,147 DEBUG findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,147 DEBUG findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,147 DEBUG findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,147 DEBUG findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,147 DEBUG findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,147 DEBUG findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,147 DEBUG findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,147 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 10.335
2022-04-04 16:59:11,147 DEBUG findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,147 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,147 DEBUG findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,147 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,147 DEBUG findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 11.525
2022-04-04 16:59:11,147 DEBUG findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,147 DEBUG findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,147 DEBUG findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,147 DEBUG findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,147 DEBUG findfont: Matching STIXGeneral:style=italic:variant=normal:weight=normal:stretch=normal:size=10.0 to STIXGeneral ('/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf') with score of 0.050000.
2022-04-04 16:59:11,148 DEBUG findfont: Matching STIXGeneral:style=normal:variant=normal:weight=bold:stretch=normal:size=10.0.
2022-04-04 16:59:11,148 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,148 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 0.05
2022-04-04 16:59:11,148 DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,148 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 1.05
2022-04-04 16:59:11,148 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,148 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,149 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,149 DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,149 DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,149 DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,149 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-04-04 16:59:11,149 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,149 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,149 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 1.335
2022-04-04 16:59:11,149 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.05
2022-04-04 16:59:11,149 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-04-04 16:59:11,149 DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,149 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.335
2022-04-04 16:59:11,149 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,149 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,149 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,149 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 0.33499999999999996
2022-04-04 16:59:11,149 DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,149 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-04-04 16:59:11,149 DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,149 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,150 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.335
2022-04-04 16:59:11,150 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,150 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,150 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,150 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,150 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-04-04 16:59:11,150 DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,150 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,150 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2022-04-04 16:59:11,150 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,150 DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,150 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,150 DEBUG findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,150 DEBUG findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,150 DEBUG findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,150 DEBUG findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,150 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 0.33499999999999996
2022-04-04 16:59:11,150 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,150 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,150 DEBUG findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,150 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 11.05
2022-04-04 16:59:11,151 DEBUG findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,151 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.05
2022-04-04 16:59:11,151 DEBUG findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.24
2022-04-04 16:59:11,151 DEBUG findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,151 DEBUG findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 11.05
2022-04-04 16:59:11,151 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,151 DEBUG findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,151 DEBUG findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,151 DEBUG findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,151 DEBUG findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,151 DEBUG findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,151 DEBUG findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,151 DEBUG findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,151 DEBUG findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,151 DEBUG findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,151 DEBUG findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,151 DEBUG findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,151 DEBUG findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,151 DEBUG findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,151 DEBUG findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,151 DEBUG findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,151 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.43475
2022-04-04 16:59:11,152 DEBUG findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,152 DEBUG findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,152 DEBUG findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,152 DEBUG findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,152 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,152 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.335
2022-04-04 16:59:11,152 DEBUG findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,152 DEBUG findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,152 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,152 DEBUG findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,152 DEBUG findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,152 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,152 DEBUG findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,152 DEBUG findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,152 DEBUG findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,152 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,152 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,152 DEBUG findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,152 DEBUG findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,152 DEBUG findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,152 DEBUG findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,152 DEBUG findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,153 DEBUG findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,153 DEBUG findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,153 DEBUG findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.715
2022-04-04 16:59:11,153 DEBUG findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,153 DEBUG findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,153 DEBUG findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,153 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.43475
2022-04-04 16:59:11,153 DEBUG findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,153 DEBUG findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,153 DEBUG findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,153 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,153 DEBUG findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.43
2022-04-04 16:59:11,153 DEBUG findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,153 DEBUG findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,153 DEBUG findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,153 DEBUG findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,153 DEBUG findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,153 DEBUG findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.335
2022-04-04 16:59:11,153 DEBUG findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.43
2022-04-04 16:59:11,153 DEBUG findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,153 DEBUG findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,153 DEBUG findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.24
2022-04-04 16:59:11,154 DEBUG findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,154 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,154 DEBUG findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,154 DEBUG findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,154 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,154 DEBUG findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,154 DEBUG findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.43
2022-04-04 16:59:11,154 DEBUG findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,154 DEBUG findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,154 DEBUG findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,154 DEBUG findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.335
2022-04-04 16:59:11,154 DEBUG findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,154 DEBUG findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,154 DEBUG findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,154 DEBUG findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,154 DEBUG findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,154 DEBUG findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,154 DEBUG findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,154 DEBUG findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,154 DEBUG findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.24
2022-04-04 16:59:11,154 DEBUG findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,154 DEBUG findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,155 DEBUG findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,155 DEBUG findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,155 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.43
2022-04-04 16:59:11,155 DEBUG findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,155 DEBUG findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,155 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.24
2022-04-04 16:59:11,155 DEBUG findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,155 DEBUG findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,155 DEBUG findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,155 DEBUG findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,155 DEBUG findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,155 DEBUG findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,155 DEBUG findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,155 DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,155 DEBUG findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.335
2022-04-04 16:59:11,155 DEBUG findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,155 DEBUG findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,155 DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,155 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.25
2022-04-04 16:59:11,155 DEBUG findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,155 DEBUG findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,155 DEBUG findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,156 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,156 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,156 DEBUG findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,156 DEBUG findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,156 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,156 DEBUG findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,156 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.43
2022-04-04 16:59:11,156 DEBUG findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,156 DEBUG findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,156 DEBUG findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,156 DEBUG findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,156 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,156 DEBUG findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,156 DEBUG findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,156 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,156 DEBUG findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,156 DEBUG findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.71025
2022-04-04 16:59:11,156 DEBUG findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,156 DEBUG findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,156 DEBUG findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,156 DEBUG findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,157 DEBUG findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,157 DEBUG findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,157 DEBUG findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,157 DEBUG findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,157 DEBUG findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.43
2022-04-04 16:59:11,157 DEBUG findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,157 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.145
2022-04-04 16:59:11,157 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,157 DEBUG findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,157 DEBUG findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,157 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.05
2022-04-04 16:59:11,157 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,157 DEBUG findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,157 DEBUG findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,157 DEBUG findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,157 DEBUG findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.535
2022-04-04 16:59:11,157 DEBUG findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,157 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,157 DEBUG findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.335
2022-04-04 16:59:11,157 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,157 DEBUG findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 11.335
2022-04-04 16:59:11,157 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,158 DEBUG findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,158 DEBUG findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,158 DEBUG findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,158 DEBUG findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,158 DEBUG findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,158 DEBUG findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.335
2022-04-04 16:59:11,158 DEBUG findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,158 DEBUG findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.24
2022-04-04 16:59:11,158 DEBUG findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,158 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.4775
2022-04-04 16:59:11,158 DEBUG findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.25
2022-04-04 16:59:11,158 DEBUG findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,158 DEBUG findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,158 DEBUG findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,158 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.335
2022-04-04 16:59:11,158 DEBUG findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.335
2022-04-04 16:59:11,158 DEBUG findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,158 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,158 DEBUG findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,158 DEBUG findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,158 DEBUG findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,158 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,159 DEBUG findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,159 DEBUG findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,159 DEBUG findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.24
2022-04-04 16:59:11,159 DEBUG findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,159 DEBUG findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,159 DEBUG findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,159 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,159 DEBUG findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,159 DEBUG findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,159 DEBUG findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,159 DEBUG findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,159 DEBUG findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.25
2022-04-04 16:59:11,159 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.535
2022-04-04 16:59:11,159 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,159 DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.24
2022-04-04 16:59:11,159 DEBUG findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,159 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.145
2022-04-04 16:59:11,159 DEBUG findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,159 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,159 DEBUG findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,159 DEBUG findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,159 DEBUG findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,160 DEBUG findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,160 DEBUG findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,160 DEBUG findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,160 DEBUG findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,160 DEBUG findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.335
2022-04-04 16:59:11,160 DEBUG findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,160 DEBUG findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,160 DEBUG findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,160 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.525
2022-04-04 16:59:11,160 DEBUG findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,160 DEBUG findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,160 DEBUG findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,160 DEBUG findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,160 DEBUG findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,160 DEBUG findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,160 DEBUG findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,160 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.62
2022-04-04 16:59:11,160 DEBUG findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,160 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.25
2022-04-04 16:59:11,160 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 0.05
2022-04-04 16:59:11,160 DEBUG findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,160 DEBUG findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,161 DEBUG findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,161 DEBUG findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,161 DEBUG findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,161 DEBUG findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,161 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,161 DEBUG findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,161 DEBUG findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.24
2022-04-04 16:59:11,161 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,161 DEBUG findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,161 DEBUG findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,161 DEBUG findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,161 DEBUG findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,161 DEBUG findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,161 DEBUG findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,161 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,161 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.335
2022-04-04 16:59:11,161 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,161 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.535
2022-04-04 16:59:11,161 DEBUG findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,161 DEBUG findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,161 DEBUG findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,161 DEBUG findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,162 DEBUG findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,162 DEBUG findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,162 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.05
2022-04-04 16:59:11,162 DEBUG findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,162 DEBUG findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,162 DEBUG findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.24
2022-04-04 16:59:11,162 DEBUG findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,162 DEBUG findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,162 DEBUG findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,162 DEBUG findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,162 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.24
2022-04-04 16:59:11,162 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,162 DEBUG findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,162 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,162 DEBUG findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,162 DEBUG findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,162 DEBUG findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,162 DEBUG findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,162 DEBUG findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,162 DEBUG findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,162 DEBUG findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,163 DEBUG findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,163 DEBUG findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,163 DEBUG findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,163 DEBUG findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,163 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,163 DEBUG findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,163 DEBUG findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,163 DEBUG findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.62
2022-04-04 16:59:11,163 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,163 DEBUG findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 11.335
2022-04-04 16:59:11,163 DEBUG findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,163 DEBUG findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,163 DEBUG findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,163 DEBUG findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,163 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,163 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.05
2022-04-04 16:59:11,163 DEBUG findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,163 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,163 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,163 DEBUG findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,163 DEBUG findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,163 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 1.335
2022-04-04 16:59:11,164 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,164 DEBUG findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,164 DEBUG findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,164 DEBUG findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,164 DEBUG findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,164 DEBUG findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,164 DEBUG findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,164 DEBUG findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.335
2022-04-04 16:59:11,164 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,164 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,164 DEBUG findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,164 DEBUG findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,164 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,164 DEBUG findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,164 DEBUG findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,164 DEBUG findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,164 DEBUG findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,164 DEBUG findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,164 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,164 DEBUG findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,164 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 1.05
2022-04-04 16:59:11,164 DEBUG findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,165 DEBUG findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,165 DEBUG findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 10.24
2022-04-04 16:59:11,165 DEBUG findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,165 DEBUG findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,165 DEBUG findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,165 DEBUG findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,165 DEBUG findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.24
2022-04-04 16:59:11,165 DEBUG findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,165 DEBUG findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,165 DEBUG findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,165 DEBUG findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.24
2022-04-04 16:59:11,165 DEBUG findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.24
2022-04-04 16:59:11,165 DEBUG findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,165 DEBUG findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.4775
2022-04-04 16:59:11,165 DEBUG findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,165 DEBUG findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,165 DEBUG findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,165 DEBUG findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,165 DEBUG findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,165 DEBUG findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,165 DEBUG findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,166 DEBUG findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,166 DEBUG findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,166 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.05
2022-04-04 16:59:11,166 DEBUG findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,166 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,166 DEBUG findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,166 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,166 DEBUG findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.24
2022-04-04 16:59:11,166 DEBUG findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,166 DEBUG findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,166 DEBUG findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,166 DEBUG findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,166 DEBUG findfont: Matching STIXGeneral:style=normal:variant=normal:weight=bold:stretch=normal:size=10.0 to STIXGeneral ('/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf') with score of 0.050000.
2022-04-04 16:59:11,167 DEBUG findfont: Matching STIXNonUnicode:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2022-04-04 16:59:11,167 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,167 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,167 DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,167 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,167 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 0.05
2022-04-04 16:59:11,167 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,167 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,167 DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,167 DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,167 DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,167 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-04-04 16:59:11,167 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,167 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-04-04 16:59:11,167 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,167 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 1.335
2022-04-04 16:59:11,167 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-04-04 16:59:11,167 DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,167 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,168 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,168 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,168 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,168 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,168 DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,168 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-04-04 16:59:11,168 DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,168 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,168 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 1.05
2022-04-04 16:59:11,168 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,168 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,168 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,168 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,168 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-04-04 16:59:11,168 DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,168 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,168 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,168 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,168 DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,168 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,168 DEBUG findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,168 DEBUG findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,169 DEBUG findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,169 DEBUG findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,169 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,169 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,169 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,169 DEBUG findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,169 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,169 DEBUG findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,169 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,169 DEBUG findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,169 DEBUG findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,169 DEBUG findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,169 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,169 DEBUG findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,169 DEBUG findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,169 DEBUG findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,169 DEBUG findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,169 DEBUG findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,169 DEBUG findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,169 DEBUG findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,169 DEBUG findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,169 DEBUG findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,170 DEBUG findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,170 DEBUG findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,170 DEBUG findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,170 DEBUG findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,170 DEBUG findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,170 DEBUG findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,170 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2022-04-04 16:59:11,170 DEBUG findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,170 DEBUG findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,170 DEBUG findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,170 DEBUG findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,170 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,170 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,170 DEBUG findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,170 DEBUG findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,170 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,170 DEBUG findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,170 DEBUG findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,170 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,170 DEBUG findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,170 DEBUG findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,171 DEBUG findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,171 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,171 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,171 DEBUG findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,171 DEBUG findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,171 DEBUG findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,171 DEBUG findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,171 DEBUG findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,171 DEBUG findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,171 DEBUG findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,171 DEBUG findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2022-04-04 16:59:11,171 DEBUG findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,171 DEBUG findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,171 DEBUG findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,171 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2022-04-04 16:59:11,171 DEBUG findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,171 DEBUG findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,171 DEBUG findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,171 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,171 DEBUG findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,172 DEBUG findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,172 DEBUG findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,172 DEBUG findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,172 DEBUG findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,172 DEBUG findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,172 DEBUG findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,172 DEBUG findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,172 DEBUG findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,172 DEBUG findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,172 DEBUG findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,172 DEBUG findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,172 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 0.05
2022-04-04 16:59:11,172 DEBUG findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,172 DEBUG findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,172 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,172 DEBUG findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,172 DEBUG findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,172 DEBUG findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,172 DEBUG findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,172 DEBUG findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,173 DEBUG findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,173 DEBUG findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,173 DEBUG findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,173 DEBUG findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,173 DEBUG findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,173 DEBUG findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,173 DEBUG findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,173 DEBUG findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,173 DEBUG findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,173 DEBUG findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,173 DEBUG findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,173 DEBUG findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,173 DEBUG findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,173 DEBUG findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,173 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,173 DEBUG findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,173 DEBUG findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,173 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,173 DEBUG findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,173 DEBUG findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,173 DEBUG findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,173 DEBUG findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,174 DEBUG findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,174 DEBUG findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,174 DEBUG findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,174 DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,174 DEBUG findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,174 DEBUG findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,174 DEBUG findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,174 DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,174 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2022-04-04 16:59:11,174 DEBUG findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,174 DEBUG findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,174 DEBUG findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,174 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,174 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,174 DEBUG findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,174 DEBUG findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,174 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,174 DEBUG findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,174 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,174 DEBUG findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,174 DEBUG findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,175 DEBUG findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,175 DEBUG findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,175 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,175 DEBUG findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,175 DEBUG findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,175 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,175 DEBUG findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,175 DEBUG findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2022-04-04 16:59:11,175 DEBUG findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,175 DEBUG findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,175 DEBUG findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,175 DEBUG findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,175 DEBUG findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,175 DEBUG findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,175 DEBUG findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,175 DEBUG findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,175 DEBUG findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,175 DEBUG findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,175 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2022-04-04 16:59:11,175 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,175 DEBUG findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,175 DEBUG findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,176 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,176 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,176 DEBUG findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,176 DEBUG findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,176 DEBUG findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,176 DEBUG findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2022-04-04 16:59:11,176 DEBUG findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,176 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,176 DEBUG findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,176 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,176 DEBUG findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,176 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,176 DEBUG findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,176 DEBUG findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,176 DEBUG findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,176 DEBUG findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,176 DEBUG findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,176 DEBUG findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,176 DEBUG findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,176 DEBUG findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,176 DEBUG findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,177 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2022-04-04 16:59:11,177 DEBUG findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-04 16:59:11,177 DEBUG findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,177 DEBUG findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,177 DEBUG findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,177 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,177 DEBUG findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2022-04-04 16:59:11,177 DEBUG findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,177 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,177 DEBUG findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,177 DEBUG findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,177 DEBUG findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,177 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,177 DEBUG findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,177 DEBUG findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,177 DEBUG findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,177 DEBUG findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,177 DEBUG findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,177 DEBUG findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,177 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,177 DEBUG findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,177 DEBUG findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,178 DEBUG findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,178 DEBUG findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,178 DEBUG findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2022-04-04 16:59:11,178 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2022-04-04 16:59:11,178 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,178 DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,178 DEBUG findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,178 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2022-04-04 16:59:11,178 DEBUG findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,178 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,178 DEBUG findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,178 DEBUG findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,179 DEBUG findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,179 DEBUG findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,179 DEBUG findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,179 DEBUG findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,179 DEBUG findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,179 DEBUG findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,179 DEBUG findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,179 DEBUG findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,179 DEBUG findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,179 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2022-04-04 16:59:11,179 DEBUG findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,179 DEBUG findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,179 DEBUG findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,179 DEBUG findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,180 DEBUG findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,180 DEBUG findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,180 DEBUG findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,180 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2022-04-04 16:59:11,180 DEBUG findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,180 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-04 16:59:11,180 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,180 DEBUG findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,180 DEBUG findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,180 DEBUG findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,180 DEBUG findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,180 DEBUG findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,180 DEBUG findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,180 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,180 DEBUG findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,180 DEBUG findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,180 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,180 DEBUG findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,180 DEBUG findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,181 DEBUG findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,181 DEBUG findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,181 DEBUG findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,181 DEBUG findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,181 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,181 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 1.05
2022-04-04 16:59:11,181 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,181 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2022-04-04 16:59:11,181 DEBUG findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,181 DEBUG findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,181 DEBUG findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,181 DEBUG findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,181 DEBUG findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,181 DEBUG findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,181 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,181 DEBUG findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,181 DEBUG findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,181 DEBUG findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,181 DEBUG findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,181 DEBUG findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,182 DEBUG findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,182 DEBUG findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,182 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,182 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,182 DEBUG findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,182 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,182 DEBUG findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,182 DEBUG findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,182 DEBUG findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,182 DEBUG findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,182 DEBUG findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,182 DEBUG findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,182 DEBUG findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,182 DEBUG findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,182 DEBUG findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,182 DEBUG findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,182 DEBUG findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,182 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,182 DEBUG findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,183 DEBUG findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,183 DEBUG findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2022-04-04 16:59:11,183 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,183 DEBUG findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,183 DEBUG findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,183 DEBUG findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,183 DEBUG findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,183 DEBUG findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,183 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,183 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,183 DEBUG findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,183 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,183 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,183 DEBUG findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,183 DEBUG findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,183 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,183 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,183 DEBUG findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,183 DEBUG findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,183 DEBUG findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,183 DEBUG findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,184 DEBUG findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,184 DEBUG findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,184 DEBUG findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2022-04-04 16:59:11,184 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,184 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,184 DEBUG findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,184 DEBUG findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,184 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,184 DEBUG findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,184 DEBUG findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,184 DEBUG findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,184 DEBUG findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,184 DEBUG findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,184 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 0.33499999999999996
2022-04-04 16:59:11,184 DEBUG findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,184 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,185 DEBUG findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,185 DEBUG findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,185 DEBUG findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,185 DEBUG findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,185 DEBUG findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,185 DEBUG findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,185 DEBUG findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,185 DEBUG findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,185 DEBUG findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,185 DEBUG findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,185 DEBUG findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,185 DEBUG findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,185 DEBUG findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,185 DEBUG findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,185 DEBUG findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2022-04-04 16:59:11,185 DEBUG findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,185 DEBUG findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,185 DEBUG findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,185 DEBUG findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,185 DEBUG findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,185 DEBUG findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,186 DEBUG findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,186 DEBUG findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,186 DEBUG findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,186 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 1.335
2022-04-04 16:59:11,186 DEBUG findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,186 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,186 DEBUG findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,186 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,186 DEBUG findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,186 DEBUG findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,186 DEBUG findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,186 DEBUG findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,186 DEBUG findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,186 DEBUG findfont: Matching STIXNonUnicode:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to STIXNonUnicode ('/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf') with score of 0.050000.
2022-04-04 16:59:11,187 DEBUG findfont: Matching STIXNonUnicode:style=italic:variant=normal:weight=normal:stretch=normal:size=10.0.
2022-04-04 16:59:11,187 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,187 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,187 DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,187 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 10.335
2022-04-04 16:59:11,187 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 1.05
2022-04-04 16:59:11,187 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,187 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,187 DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,187 DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,187 DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,187 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-04-04 16:59:11,187 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,188 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 1.335
2022-04-04 16:59:11,188 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 10.05
2022-04-04 16:59:11,188 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 0.33499999999999996
2022-04-04 16:59:11,188 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-04-04 16:59:11,188 DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,188 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 10.05
2022-04-04 16:59:11,188 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,188 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,188 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,188 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,188 DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,188 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-04-04 16:59:11,188 DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,188 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,188 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 0.05
2022-04-04 16:59:11,188 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,188 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,188 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,189 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,189 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-04-04 16:59:11,189 DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,189 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,189 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2022-04-04 16:59:11,189 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,189 DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,189 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,189 DEBUG findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,189 DEBUG findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,189 DEBUG findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,189 DEBUG findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,189 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,189 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,189 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,189 DEBUG findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,189 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 10.335
2022-04-04 16:59:11,189 DEBUG findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,189 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 10.335
2022-04-04 16:59:11,189 DEBUG findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 11.525
2022-04-04 16:59:11,189 DEBUG findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,190 DEBUG findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 10.335
2022-04-04 16:59:11,190 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,190 DEBUG findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,190 DEBUG findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,190 DEBUG findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,190 DEBUG findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,190 DEBUG findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,190 DEBUG findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,190 DEBUG findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,190 DEBUG findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,190 DEBUG findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,190 DEBUG findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,190 DEBUG findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,190 DEBUG findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,190 DEBUG findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,190 DEBUG findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,190 DEBUG findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,190 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 11.14975
2022-04-04 16:59:11,190 DEBUG findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,190 DEBUG findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,191 DEBUG findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,191 DEBUG findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,191 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,191 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 10.05
2022-04-04 16:59:11,191 DEBUG findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,191 DEBUG findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,191 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,191 DEBUG findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,191 DEBUG findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,191 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,191 DEBUG findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,191 DEBUG findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,191 DEBUG findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,191 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,191 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,191 DEBUG findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,191 DEBUG findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,191 DEBUG findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,191 DEBUG findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,191 DEBUG findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,192 DEBUG findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,192 DEBUG findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,192 DEBUG findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 11.43
2022-04-04 16:59:11,192 DEBUG findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,192 DEBUG findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,192 DEBUG findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,192 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 10.14975
2022-04-04 16:59:11,192 DEBUG findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,192 DEBUG findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,192 DEBUG findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,192 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,192 DEBUG findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 11.145
2022-04-04 16:59:11,192 DEBUG findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,192 DEBUG findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,192 DEBUG findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,192 DEBUG findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,192 DEBUG findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,193 DEBUG findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 10.05
2022-04-04 16:59:11,193 DEBUG findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 11.145
2022-04-04 16:59:11,193 DEBUG findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,193 DEBUG findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,193 DEBUG findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 11.525
2022-04-04 16:59:11,193 DEBUG findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,193 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 1.05
2022-04-04 16:59:11,193 DEBUG findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,193 DEBUG findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,193 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,193 DEBUG findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,193 DEBUG findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 11.145
2022-04-04 16:59:11,193 DEBUG findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,193 DEBUG findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,193 DEBUG findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,193 DEBUG findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 10.05
2022-04-04 16:59:11,193 DEBUG findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,193 DEBUG findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,193 DEBUG findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,193 DEBUG findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,193 DEBUG findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,194 DEBUG findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,194 DEBUG findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,194 DEBUG findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,194 DEBUG findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 11.145
2022-04-04 16:59:11,194 DEBUG findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,194 DEBUG findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,194 DEBUG findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,194 DEBUG findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,194 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 11.145
2022-04-04 16:59:11,194 DEBUG findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,194 DEBUG findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,194 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 11.525
2022-04-04 16:59:11,194 DEBUG findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,194 DEBUG findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,194 DEBUG findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,194 DEBUG findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,194 DEBUG findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,194 DEBUG findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,194 DEBUG findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,195 DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,195 DEBUG findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 10.05
2022-04-04 16:59:11,195 DEBUG findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,195 DEBUG findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,195 DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,195 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 10.535
2022-04-04 16:59:11,195 DEBUG findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,195 DEBUG findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,195 DEBUG findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,195 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,195 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,195 DEBUG findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,195 DEBUG findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,195 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,195 DEBUG findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,195 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 11.145
2022-04-04 16:59:11,195 DEBUG findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,195 DEBUG findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,195 DEBUG findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,195 DEBUG findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,195 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,196 DEBUG findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,196 DEBUG findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,196 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,196 DEBUG findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,196 DEBUG findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 11.42525
2022-04-04 16:59:11,196 DEBUG findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,196 DEBUG findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,196 DEBUG findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,196 DEBUG findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,196 DEBUG findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,196 DEBUG findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,196 DEBUG findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,196 DEBUG findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,196 DEBUG findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 11.145
2022-04-04 16:59:11,196 DEBUG findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,196 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 11.43
2022-04-04 16:59:11,196 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,196 DEBUG findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,196 DEBUG findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,196 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 10.335
2022-04-04 16:59:11,196 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,196 DEBUG findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,197 DEBUG findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,197 DEBUG findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,197 DEBUG findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 11.25
2022-04-04 16:59:11,197 DEBUG findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,197 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,197 DEBUG findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 10.05
2022-04-04 16:59:11,197 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,197 DEBUG findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 10.05
2022-04-04 16:59:11,197 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,197 DEBUG findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,197 DEBUG findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,197 DEBUG findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,197 DEBUG findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,197 DEBUG findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,197 DEBUG findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 10.05
2022-04-04 16:59:11,197 DEBUG findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,197 DEBUG findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 11.525
2022-04-04 16:59:11,197 DEBUG findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,197 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 11.1925
2022-04-04 16:59:11,197 DEBUG findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 11.535
2022-04-04 16:59:11,197 DEBUG findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,197 DEBUG findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,198 DEBUG findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,198 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 10.05
2022-04-04 16:59:11,198 DEBUG findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 11.62
2022-04-04 16:59:11,198 DEBUG findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,198 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,198 DEBUG findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,198 DEBUG findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,198 DEBUG findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,198 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,198 DEBUG findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,198 DEBUG findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,198 DEBUG findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 11.525
2022-04-04 16:59:11,198 DEBUG findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,198 DEBUG findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,198 DEBUG findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,198 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,198 DEBUG findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,198 DEBUG findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,198 DEBUG findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,199 DEBUG findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,199 DEBUG findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 11.535
2022-04-04 16:59:11,199 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 11.25
2022-04-04 16:59:11,199 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,199 DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 11.525
2022-04-04 16:59:11,199 DEBUG findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,199 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 11.24
2022-04-04 16:59:11,199 DEBUG findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,199 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,199 DEBUG findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,199 DEBUG findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,199 DEBUG findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,199 DEBUG findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,199 DEBUG findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,199 DEBUG findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,199 DEBUG findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,199 DEBUG findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 10.05
2022-04-04 16:59:11,199 DEBUG findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,199 DEBUG findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,200 DEBUG findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,200 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 11.24
2022-04-04 16:59:11,200 DEBUG findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,200 DEBUG findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,200 DEBUG findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,200 DEBUG findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,200 DEBUG findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,200 DEBUG findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,200 DEBUG findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,200 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 11.335
2022-04-04 16:59:11,200 DEBUG findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,200 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 11.535
2022-04-04 16:59:11,200 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,200 DEBUG findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,200 DEBUG findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,200 DEBUG findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,200 DEBUG findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,200 DEBUG findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,200 DEBUG findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,200 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,200 DEBUG findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,200 DEBUG findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 11.145
2022-04-04 16:59:11,201 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,201 DEBUG findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,201 DEBUG findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,201 DEBUG findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,201 DEBUG findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,201 DEBUG findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,201 DEBUG findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,201 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,201 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 0.05
2022-04-04 16:59:11,201 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,201 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 10.25
2022-04-04 16:59:11,201 DEBUG findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,201 DEBUG findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,201 DEBUG findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,201 DEBUG findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,201 DEBUG findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,201 DEBUG findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,201 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 10.335
2022-04-04 16:59:11,201 DEBUG findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,201 DEBUG findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,202 DEBUG findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 11.145
2022-04-04 16:59:11,202 DEBUG findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,202 DEBUG findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,202 DEBUG findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,202 DEBUG findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,202 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 11.145
2022-04-04 16:59:11,202 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,202 DEBUG findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,202 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,202 DEBUG findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,202 DEBUG findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,202 DEBUG findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,202 DEBUG findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,202 DEBUG findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,202 DEBUG findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,202 DEBUG findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,202 DEBUG findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,202 DEBUG findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,202 DEBUG findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,202 DEBUG findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,202 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,202 DEBUG findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,203 DEBUG findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,203 DEBUG findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 11.335
2022-04-04 16:59:11,203 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,203 DEBUG findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 10.05
2022-04-04 16:59:11,203 DEBUG findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,203 DEBUG findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,203 DEBUG findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,203 DEBUG findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,203 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,203 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 10.335
2022-04-04 16:59:11,203 DEBUG findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,203 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,203 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,203 DEBUG findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,203 DEBUG findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,203 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 10.05
2022-04-04 16:59:11,203 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,203 DEBUG findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,203 DEBUG findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,203 DEBUG findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,203 DEBUG findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,203 DEBUG findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,204 DEBUG findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,204 DEBUG findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 10.62
2022-04-04 16:59:11,204 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,204 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,204 DEBUG findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,204 DEBUG findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,204 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,204 DEBUG findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,204 DEBUG findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,204 DEBUG findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,204 DEBUG findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,204 DEBUG findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,204 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 1.335
2022-04-04 16:59:11,204 DEBUG findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,204 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 10.335
2022-04-04 16:59:11,204 DEBUG findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,204 DEBUG findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,204 DEBUG findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 11.145
2022-04-04 16:59:11,204 DEBUG findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,204 DEBUG findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,204 DEBUG findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,205 DEBUG findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,205 DEBUG findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 11.145
2022-04-04 16:59:11,205 DEBUG findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,205 DEBUG findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,205 DEBUG findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,205 DEBUG findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 11.145
2022-04-04 16:59:11,205 DEBUG findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 11.525
2022-04-04 16:59:11,205 DEBUG findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,205 DEBUG findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 11.1925
2022-04-04 16:59:11,205 DEBUG findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,205 DEBUG findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,205 DEBUG findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,205 DEBUG findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,205 DEBUG findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,205 DEBUG findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,205 DEBUG findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,205 DEBUG findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,205 DEBUG findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,205 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 0.33499999999999996
2022-04-04 16:59:11,205 DEBUG findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,205 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,205 DEBUG findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,206 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,206 DEBUG findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 11.525
2022-04-04 16:59:11,206 DEBUG findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,206 DEBUG findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,206 DEBUG findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,206 DEBUG findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,206 DEBUG findfont: Matching STIXNonUnicode:style=italic:variant=normal:weight=normal:stretch=normal:size=10.0 to STIXNonUnicode ('/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf') with score of 0.050000.
2022-04-04 16:59:11,206 DEBUG findfont: Matching STIXNonUnicode:style=normal:variant=normal:weight=bold:stretch=normal:size=10.0.
2022-04-04 16:59:11,207 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,207 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,207 DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,207 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.05
2022-04-04 16:59:11,207 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 0.33499999999999996
2022-04-04 16:59:11,207 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,207 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,207 DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,207 DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,207 DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,207 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-04-04 16:59:11,207 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,207 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 0.05
2022-04-04 16:59:11,207 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.335
2022-04-04 16:59:11,207 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 1.05
2022-04-04 16:59:11,207 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-04-04 16:59:11,207 DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,207 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.335
2022-04-04 16:59:11,207 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,208 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,208 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,208 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,208 DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,208 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-04-04 16:59:11,208 DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,208 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,208 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 1.335
2022-04-04 16:59:11,208 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,208 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,208 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,208 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,208 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-04-04 16:59:11,208 DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,208 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,208 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2022-04-04 16:59:11,208 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,208 DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,208 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,209 DEBUG findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,209 DEBUG findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,209 DEBUG findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,209 DEBUG findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,209 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,209 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,209 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,209 DEBUG findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,209 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 11.05
2022-04-04 16:59:11,209 DEBUG findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,209 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.05
2022-04-04 16:59:11,209 DEBUG findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.24
2022-04-04 16:59:11,209 DEBUG findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,209 DEBUG findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 11.05
2022-04-04 16:59:11,209 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,209 DEBUG findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,209 DEBUG findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,209 DEBUG findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,209 DEBUG findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,209 DEBUG findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,209 DEBUG findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,210 DEBUG findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,210 DEBUG findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,210 DEBUG findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,210 DEBUG findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,210 DEBUG findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,210 DEBUG findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,210 DEBUG findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,210 DEBUG findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,210 DEBUG findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,210 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.43475
2022-04-04 16:59:11,210 DEBUG findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,210 DEBUG findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,210 DEBUG findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,210 DEBUG findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,210 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,210 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.335
2022-04-04 16:59:11,210 DEBUG findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,210 DEBUG findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,210 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,210 DEBUG findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,210 DEBUG findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,210 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,211 DEBUG findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,211 DEBUG findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,211 DEBUG findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,211 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,211 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,211 DEBUG findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,211 DEBUG findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,211 DEBUG findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,211 DEBUG findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,211 DEBUG findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,211 DEBUG findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,211 DEBUG findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,211 DEBUG findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.715
2022-04-04 16:59:11,211 DEBUG findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,211 DEBUG findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,211 DEBUG findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,211 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.43475
2022-04-04 16:59:11,211 DEBUG findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,211 DEBUG findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,211 DEBUG findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,211 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,212 DEBUG findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.43
2022-04-04 16:59:11,212 DEBUG findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,212 DEBUG findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,212 DEBUG findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,212 DEBUG findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,212 DEBUG findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,212 DEBUG findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.335
2022-04-04 16:59:11,212 DEBUG findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.43
2022-04-04 16:59:11,212 DEBUG findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,212 DEBUG findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,212 DEBUG findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.24
2022-04-04 16:59:11,212 DEBUG findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,212 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 0.33499999999999996
2022-04-04 16:59:11,212 DEBUG findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,212 DEBUG findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,212 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,212 DEBUG findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,212 DEBUG findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.43
2022-04-04 16:59:11,212 DEBUG findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,212 DEBUG findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,212 DEBUG findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,212 DEBUG findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.335
2022-04-04 16:59:11,213 DEBUG findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,213 DEBUG findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,213 DEBUG findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,213 DEBUG findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,213 DEBUG findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,213 DEBUG findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,213 DEBUG findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,213 DEBUG findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,213 DEBUG findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.24
2022-04-04 16:59:11,213 DEBUG findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,213 DEBUG findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,213 DEBUG findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,213 DEBUG findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,213 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.43
2022-04-04 16:59:11,213 DEBUG findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,213 DEBUG findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,213 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.24
2022-04-04 16:59:11,213 DEBUG findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,213 DEBUG findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,213 DEBUG findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,213 DEBUG findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,213 DEBUG findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,214 DEBUG findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,214 DEBUG findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,214 DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,214 DEBUG findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.335
2022-04-04 16:59:11,214 DEBUG findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,214 DEBUG findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,214 DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,214 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.25
2022-04-04 16:59:11,214 DEBUG findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,214 DEBUG findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,214 DEBUG findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,214 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,214 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,214 DEBUG findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,214 DEBUG findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,214 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,214 DEBUG findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,214 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.43
2022-04-04 16:59:11,214 DEBUG findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,214 DEBUG findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,214 DEBUG findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,214 DEBUG findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,215 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,215 DEBUG findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,215 DEBUG findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,215 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,215 DEBUG findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,215 DEBUG findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.71025
2022-04-04 16:59:11,215 DEBUG findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,215 DEBUG findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,215 DEBUG findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,215 DEBUG findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,215 DEBUG findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,215 DEBUG findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,215 DEBUG findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,215 DEBUG findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,215 DEBUG findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.43
2022-04-04 16:59:11,215 DEBUG findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,215 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.145
2022-04-04 16:59:11,215 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,215 DEBUG findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,215 DEBUG findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,215 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.05
2022-04-04 16:59:11,215 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,216 DEBUG findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,216 DEBUG findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,216 DEBUG findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,216 DEBUG findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.535
2022-04-04 16:59:11,216 DEBUG findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,216 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,216 DEBUG findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.335
2022-04-04 16:59:11,216 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,216 DEBUG findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 11.335
2022-04-04 16:59:11,216 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,216 DEBUG findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,216 DEBUG findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,216 DEBUG findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,216 DEBUG findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,216 DEBUG findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,216 DEBUG findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.335
2022-04-04 16:59:11,216 DEBUG findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,216 DEBUG findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.24
2022-04-04 16:59:11,216 DEBUG findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,216 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.4775
2022-04-04 16:59:11,216 DEBUG findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.25
2022-04-04 16:59:11,217 DEBUG findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,217 DEBUG findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,217 DEBUG findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,217 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.335
2022-04-04 16:59:11,217 DEBUG findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.335
2022-04-04 16:59:11,217 DEBUG findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,217 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,217 DEBUG findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,217 DEBUG findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,217 DEBUG findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,217 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,217 DEBUG findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,217 DEBUG findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,217 DEBUG findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.24
2022-04-04 16:59:11,217 DEBUG findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,217 DEBUG findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,217 DEBUG findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,217 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,217 DEBUG findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,217 DEBUG findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,217 DEBUG findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,218 DEBUG findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,218 DEBUG findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.25
2022-04-04 16:59:11,218 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.535
2022-04-04 16:59:11,218 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,218 DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.24
2022-04-04 16:59:11,218 DEBUG findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,218 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.145
2022-04-04 16:59:11,218 DEBUG findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,218 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,218 DEBUG findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,218 DEBUG findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,218 DEBUG findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,218 DEBUG findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,218 DEBUG findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,218 DEBUG findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,218 DEBUG findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,218 DEBUG findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.335
2022-04-04 16:59:11,218 DEBUG findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,218 DEBUG findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,218 DEBUG findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,218 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.525
2022-04-04 16:59:11,218 DEBUG findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,219 DEBUG findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,219 DEBUG findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,219 DEBUG findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,219 DEBUG findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,219 DEBUG findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,219 DEBUG findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,219 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.62
2022-04-04 16:59:11,219 DEBUG findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,219 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.25
2022-04-04 16:59:11,219 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,219 DEBUG findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,219 DEBUG findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,219 DEBUG findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,219 DEBUG findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,219 DEBUG findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,219 DEBUG findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,219 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,219 DEBUG findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,219 DEBUG findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.24
2022-04-04 16:59:11,219 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,219 DEBUG findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,219 DEBUG findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,220 DEBUG findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,220 DEBUG findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,220 DEBUG findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,220 DEBUG findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,220 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,220 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 1.335
2022-04-04 16:59:11,220 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,220 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.535
2022-04-04 16:59:11,220 DEBUG findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,220 DEBUG findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,220 DEBUG findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,220 DEBUG findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,220 DEBUG findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,220 DEBUG findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,220 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.05
2022-04-04 16:59:11,220 DEBUG findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,220 DEBUG findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,220 DEBUG findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.24
2022-04-04 16:59:11,220 DEBUG findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,220 DEBUG findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,220 DEBUG findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,220 DEBUG findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,221 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.24
2022-04-04 16:59:11,221 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,221 DEBUG findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,221 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,221 DEBUG findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,221 DEBUG findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,221 DEBUG findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,221 DEBUG findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,221 DEBUG findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,221 DEBUG findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,221 DEBUG findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,221 DEBUG findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,221 DEBUG findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,221 DEBUG findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,221 DEBUG findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,221 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,221 DEBUG findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,221 DEBUG findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,221 DEBUG findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.62
2022-04-04 16:59:11,221 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,221 DEBUG findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 11.335
2022-04-04 16:59:11,221 DEBUG findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,222 DEBUG findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,222 DEBUG findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,222 DEBUG findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,222 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,222 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.05
2022-04-04 16:59:11,222 DEBUG findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,222 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,222 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,222 DEBUG findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,222 DEBUG findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,222 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.335
2022-04-04 16:59:11,222 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,222 DEBUG findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,222 DEBUG findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,222 DEBUG findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,222 DEBUG findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,222 DEBUG findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,222 DEBUG findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,222 DEBUG findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.335
2022-04-04 16:59:11,222 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,222 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,222 DEBUG findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,223 DEBUG findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,223 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,223 DEBUG findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,223 DEBUG findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,223 DEBUG findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,223 DEBUG findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,223 DEBUG findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,223 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 0.05
2022-04-04 16:59:11,223 DEBUG findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,223 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.05
2022-04-04 16:59:11,223 DEBUG findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,223 DEBUG findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,223 DEBUG findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 10.24
2022-04-04 16:59:11,223 DEBUG findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,223 DEBUG findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,223 DEBUG findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,223 DEBUG findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,223 DEBUG findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.24
2022-04-04 16:59:11,223 DEBUG findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,223 DEBUG findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,223 DEBUG findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,223 DEBUG findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.24
2022-04-04 16:59:11,224 DEBUG findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.24
2022-04-04 16:59:11,224 DEBUG findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,224 DEBUG findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.4775
2022-04-04 16:59:11,224 DEBUG findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,224 DEBUG findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,224 DEBUG findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,224 DEBUG findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,224 DEBUG findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,224 DEBUG findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,224 DEBUG findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,224 DEBUG findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,224 DEBUG findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,224 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 1.05
2022-04-04 16:59:11,224 DEBUG findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,224 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,224 DEBUG findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,224 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,224 DEBUG findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.24
2022-04-04 16:59:11,224 DEBUG findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,224 DEBUG findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,224 DEBUG findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,224 DEBUG findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,225 DEBUG findfont: Matching STIXNonUnicode:style=normal:variant=normal:weight=bold:stretch=normal:size=10.0 to STIXNonUnicode ('/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf') with score of 0.050000.
2022-04-04 16:59:11,225 DEBUG findfont: Matching STIXSizeOneSym:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2022-04-04 16:59:11,225 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-04-04 16:59:11,225 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,225 DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,225 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,225 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,225 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,226 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,226 DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,226 DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,226 DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,226 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-04-04 16:59:11,226 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,226 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,226 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,226 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,226 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-04-04 16:59:11,226 DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,226 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,226 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,226 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 0.05
2022-04-04 16:59:11,226 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,226 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,226 DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,226 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-04-04 16:59:11,226 DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,226 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,226 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,227 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,227 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,227 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,227 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,227 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-04-04 16:59:11,227 DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,227 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,227 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,227 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,227 DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,227 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,227 DEBUG findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,227 DEBUG findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,227 DEBUG findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,227 DEBUG findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,227 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,227 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,227 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,227 DEBUG findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,227 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,227 DEBUG findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,227 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,228 DEBUG findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,228 DEBUG findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,228 DEBUG findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,228 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,228 DEBUG findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,228 DEBUG findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,228 DEBUG findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,228 DEBUG findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,228 DEBUG findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,228 DEBUG findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,228 DEBUG findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,228 DEBUG findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,228 DEBUG findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,228 DEBUG findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,228 DEBUG findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,228 DEBUG findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,228 DEBUG findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,228 DEBUG findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,228 DEBUG findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,229 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2022-04-04 16:59:11,229 DEBUG findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,229 DEBUG findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,229 DEBUG findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,229 DEBUG findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,229 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,229 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,229 DEBUG findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,229 DEBUG findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,229 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,229 DEBUG findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,229 DEBUG findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,229 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,229 DEBUG findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,229 DEBUG findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,229 DEBUG findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,229 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,229 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,229 DEBUG findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,230 DEBUG findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,230 DEBUG findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,230 DEBUG findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,230 DEBUG findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,230 DEBUG findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,230 DEBUG findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,230 DEBUG findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2022-04-04 16:59:11,230 DEBUG findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,230 DEBUG findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,230 DEBUG findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,230 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2022-04-04 16:59:11,230 DEBUG findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,230 DEBUG findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,230 DEBUG findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,230 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,230 DEBUG findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,230 DEBUG findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,230 DEBUG findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,230 DEBUG findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,230 DEBUG findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,230 DEBUG findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,231 DEBUG findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,231 DEBUG findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,231 DEBUG findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,231 DEBUG findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,231 DEBUG findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,231 DEBUG findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,231 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,231 DEBUG findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,231 DEBUG findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,231 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,231 DEBUG findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,231 DEBUG findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,231 DEBUG findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,231 DEBUG findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,231 DEBUG findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,231 DEBUG findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,231 DEBUG findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,231 DEBUG findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,231 DEBUG findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,231 DEBUG findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,232 DEBUG findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,232 DEBUG findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,232 DEBUG findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,232 DEBUG findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,232 DEBUG findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,232 DEBUG findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,232 DEBUG findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,233 DEBUG findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,233 DEBUG findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,233 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,233 DEBUG findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,233 DEBUG findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,233 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,233 DEBUG findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,233 DEBUG findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,233 DEBUG findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,234 DEBUG findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,234 DEBUG findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,234 DEBUG findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,234 DEBUG findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,234 DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,234 DEBUG findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,234 DEBUG findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,234 DEBUG findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,235 DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,235 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2022-04-04 16:59:11,235 DEBUG findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,235 DEBUG findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,235 DEBUG findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,236 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,236 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,236 DEBUG findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,236 DEBUG findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,236 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,236 DEBUG findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,236 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,236 DEBUG findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,236 DEBUG findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,236 DEBUG findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,236 DEBUG findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,237 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,237 DEBUG findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,237 DEBUG findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,237 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,237 DEBUG findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,237 DEBUG findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2022-04-04 16:59:11,237 DEBUG findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,237 DEBUG findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,237 DEBUG findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,237 DEBUG findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,237 DEBUG findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,238 DEBUG findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,238 DEBUG findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,238 DEBUG findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,238 DEBUG findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,238 DEBUG findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,238 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2022-04-04 16:59:11,238 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,238 DEBUG findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,238 DEBUG findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,238 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,238 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 0.05
2022-04-04 16:59:11,238 DEBUG findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,239 DEBUG findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,239 DEBUG findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,239 DEBUG findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2022-04-04 16:59:11,239 DEBUG findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,239 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,239 DEBUG findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,239 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,239 DEBUG findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,239 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,239 DEBUG findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,239 DEBUG findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,239 DEBUG findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,239 DEBUG findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,239 DEBUG findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,240 DEBUG findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,240 DEBUG findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,240 DEBUG findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,240 DEBUG findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,240 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2022-04-04 16:59:11,240 DEBUG findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-04 16:59:11,240 DEBUG findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,240 DEBUG findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,240 DEBUG findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,241 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,241 DEBUG findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2022-04-04 16:59:11,241 DEBUG findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,241 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,241 DEBUG findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,241 DEBUG findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,241 DEBUG findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,241 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,241 DEBUG findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,241 DEBUG findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,241 DEBUG findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,241 DEBUG findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,241 DEBUG findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,241 DEBUG findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,242 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,242 DEBUG findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,242 DEBUG findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,242 DEBUG findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,242 DEBUG findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,242 DEBUG findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2022-04-04 16:59:11,242 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2022-04-04 16:59:11,242 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,242 DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,242 DEBUG findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,242 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2022-04-04 16:59:11,242 DEBUG findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,242 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 0.33499999999999996
2022-04-04 16:59:11,242 DEBUG findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,243 DEBUG findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,243 DEBUG findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,243 DEBUG findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,243 DEBUG findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,243 DEBUG findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,243 DEBUG findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,243 DEBUG findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,243 DEBUG findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,243 DEBUG findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,243 DEBUG findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,243 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2022-04-04 16:59:11,243 DEBUG findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,244 DEBUG findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,244 DEBUG findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,244 DEBUG findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,244 DEBUG findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,244 DEBUG findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,244 DEBUG findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,244 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2022-04-04 16:59:11,244 DEBUG findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,244 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-04 16:59:11,244 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,244 DEBUG findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,244 DEBUG findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,244 DEBUG findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,244 DEBUG findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,244 DEBUG findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,244 DEBUG findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,245 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,245 DEBUG findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,245 DEBUG findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,245 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,245 DEBUG findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,245 DEBUG findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,245 DEBUG findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,245 DEBUG findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,245 DEBUG findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,245 DEBUG findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,245 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,245 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,245 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,245 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2022-04-04 16:59:11,245 DEBUG findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,245 DEBUG findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,246 DEBUG findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,246 DEBUG findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,246 DEBUG findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,246 DEBUG findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,246 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,246 DEBUG findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,246 DEBUG findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,246 DEBUG findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,246 DEBUG findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,246 DEBUG findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,246 DEBUG findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,247 DEBUG findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,247 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,247 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,247 DEBUG findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,247 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,247 DEBUG findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,247 DEBUG findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,247 DEBUG findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,247 DEBUG findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,247 DEBUG findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,247 DEBUG findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,247 DEBUG findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,248 DEBUG findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,248 DEBUG findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,248 DEBUG findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,248 DEBUG findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,248 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,248 DEBUG findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,248 DEBUG findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,248 DEBUG findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2022-04-04 16:59:11,248 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,248 DEBUG findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,248 DEBUG findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,249 DEBUG findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,249 DEBUG findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,249 DEBUG findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,249 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,249 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,249 DEBUG findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,249 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,249 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,249 DEBUG findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,250 DEBUG findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,250 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,250 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,250 DEBUG findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,250 DEBUG findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,250 DEBUG findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,250 DEBUG findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,250 DEBUG findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,250 DEBUG findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,250 DEBUG findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2022-04-04 16:59:11,251 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,251 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,251 DEBUG findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,251 DEBUG findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,251 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,251 DEBUG findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,251 DEBUG findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,251 DEBUG findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,251 DEBUG findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,251 DEBUG findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,251 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,252 DEBUG findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,252 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,252 DEBUG findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,252 DEBUG findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,252 DEBUG findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,252 DEBUG findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,252 DEBUG findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,252 DEBUG findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,252 DEBUG findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,252 DEBUG findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,252 DEBUG findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,252 DEBUG findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,252 DEBUG findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,252 DEBUG findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,252 DEBUG findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,253 DEBUG findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,253 DEBUG findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2022-04-04 16:59:11,253 DEBUG findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,253 DEBUG findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,253 DEBUG findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,253 DEBUG findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,253 DEBUG findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,253 DEBUG findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,253 DEBUG findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,253 DEBUG findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,253 DEBUG findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,253 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,253 DEBUG findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,253 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,253 DEBUG findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,253 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,253 DEBUG findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,253 DEBUG findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,253 DEBUG findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,253 DEBUG findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,253 DEBUG findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,254 DEBUG findfont: Matching STIXSizeOneSym:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to STIXSizeOneSym ('/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf') with score of 0.050000.
2022-04-04 16:59:11,254 DEBUG findfont: Matching STIXSizeTwoSym:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2022-04-04 16:59:11,254 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,254 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,254 DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,254 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,254 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,254 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,254 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,254 DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,255 DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,255 DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,255 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-04-04 16:59:11,255 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,255 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,255 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,255 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,255 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-04-04 16:59:11,255 DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,255 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,255 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 0.05
2022-04-04 16:59:11,255 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,255 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,255 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,255 DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,255 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-04-04 16:59:11,255 DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,255 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,255 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,255 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,255 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,255 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-04-04 16:59:11,256 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,256 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-04-04 16:59:11,256 DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,256 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,256 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,256 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,256 DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,256 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,256 DEBUG findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,256 DEBUG findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,256 DEBUG findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,256 DEBUG findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,256 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,256 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,256 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,256 DEBUG findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,256 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,256 DEBUG findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,256 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,256 DEBUG findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,256 DEBUG findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,256 DEBUG findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,257 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,257 DEBUG findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,257 DEBUG findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,257 DEBUG findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,257 DEBUG findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,257 DEBUG findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,257 DEBUG findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,257 DEBUG findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,257 DEBUG findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,257 DEBUG findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,257 DEBUG findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,257 DEBUG findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,257 DEBUG findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,257 DEBUG findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,257 DEBUG findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,257 DEBUG findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,257 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2022-04-04 16:59:11,257 DEBUG findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,257 DEBUG findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,257 DEBUG findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,257 DEBUG findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,258 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,258 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,258 DEBUG findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,258 DEBUG findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,258 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,258 DEBUG findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,258 DEBUG findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,258 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,258 DEBUG findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,258 DEBUG findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,258 DEBUG findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,258 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,258 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,258 DEBUG findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,258 DEBUG findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,258 DEBUG findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,258 DEBUG findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,258 DEBUG findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,258 DEBUG findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,258 DEBUG findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,258 DEBUG findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2022-04-04 16:59:11,259 DEBUG findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,259 DEBUG findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,259 DEBUG findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,259 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2022-04-04 16:59:11,259 DEBUG findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,259 DEBUG findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,259 DEBUG findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,259 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,259 DEBUG findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,259 DEBUG findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,259 DEBUG findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,259 DEBUG findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,259 DEBUG findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,259 DEBUG findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,259 DEBUG findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,259 DEBUG findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,259 DEBUG findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,259 DEBUG findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,259 DEBUG findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,259 DEBUG findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,259 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,260 DEBUG findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,260 DEBUG findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,260 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,260 DEBUG findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,260 DEBUG findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,260 DEBUG findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,260 DEBUG findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,260 DEBUG findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,260 DEBUG findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,260 DEBUG findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,260 DEBUG findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,260 DEBUG findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,260 DEBUG findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,260 DEBUG findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,260 DEBUG findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,260 DEBUG findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,260 DEBUG findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,260 DEBUG findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,260 DEBUG findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,260 DEBUG findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,260 DEBUG findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,261 DEBUG findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,261 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,261 DEBUG findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,261 DEBUG findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,261 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,261 DEBUG findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,261 DEBUG findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,261 DEBUG findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,261 DEBUG findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,261 DEBUG findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,261 DEBUG findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,261 DEBUG findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,261 DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,261 DEBUG findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,261 DEBUG findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,261 DEBUG findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,261 DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,261 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2022-04-04 16:59:11,261 DEBUG findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,261 DEBUG findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,261 DEBUG findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,261 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,262 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,262 DEBUG findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,262 DEBUG findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,262 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,262 DEBUG findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,262 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,262 DEBUG findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,262 DEBUG findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,262 DEBUG findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,262 DEBUG findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,262 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,262 DEBUG findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,262 DEBUG findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,262 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,262 DEBUG findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,262 DEBUG findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2022-04-04 16:59:11,262 DEBUG findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,262 DEBUG findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,262 DEBUG findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,262 DEBUG findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,262 DEBUG findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,263 DEBUG findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,263 DEBUG findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,263 DEBUG findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,263 DEBUG findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,263 DEBUG findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,263 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2022-04-04 16:59:11,263 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,263 DEBUG findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,263 DEBUG findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,263 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,263 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,263 DEBUG findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,263 DEBUG findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,263 DEBUG findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,263 DEBUG findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2022-04-04 16:59:11,263 DEBUG findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,263 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,263 DEBUG findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,263 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,263 DEBUG findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,263 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,264 DEBUG findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,264 DEBUG findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,264 DEBUG findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,264 DEBUG findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,264 DEBUG findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,264 DEBUG findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,264 DEBUG findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,264 DEBUG findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,264 DEBUG findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,264 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2022-04-04 16:59:11,264 DEBUG findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-04 16:59:11,264 DEBUG findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,264 DEBUG findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,264 DEBUG findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,264 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,264 DEBUG findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2022-04-04 16:59:11,264 DEBUG findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,264 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,264 DEBUG findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,264 DEBUG findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,264 DEBUG findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,265 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,265 DEBUG findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,265 DEBUG findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,265 DEBUG findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,265 DEBUG findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,265 DEBUG findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,265 DEBUG findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,265 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,265 DEBUG findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,265 DEBUG findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,265 DEBUG findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,265 DEBUG findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,265 DEBUG findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2022-04-04 16:59:11,265 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2022-04-04 16:59:11,265 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,265 DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,265 DEBUG findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,265 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2022-04-04 16:59:11,265 DEBUG findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,265 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,265 DEBUG findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,266 DEBUG findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,266 DEBUG findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,266 DEBUG findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,266 DEBUG findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,266 DEBUG findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,266 DEBUG findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,266 DEBUG findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,266 DEBUG findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,266 DEBUG findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,266 DEBUG findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,266 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2022-04-04 16:59:11,266 DEBUG findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,266 DEBUG findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,266 DEBUG findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,266 DEBUG findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,266 DEBUG findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,266 DEBUG findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,266 DEBUG findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,266 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2022-04-04 16:59:11,267 DEBUG findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,267 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-04 16:59:11,267 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,267 DEBUG findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,267 DEBUG findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,267 DEBUG findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,267 DEBUG findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,267 DEBUG findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,267 DEBUG findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,267 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,267 DEBUG findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,267 DEBUG findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,267 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,267 DEBUG findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,267 DEBUG findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,267 DEBUG findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,267 DEBUG findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,267 DEBUG findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,268 DEBUG findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,268 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 0.05
2022-04-04 16:59:11,268 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,268 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,268 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2022-04-04 16:59:11,268 DEBUG findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,268 DEBUG findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,268 DEBUG findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,268 DEBUG findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,268 DEBUG findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,268 DEBUG findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,268 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,268 DEBUG findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,268 DEBUG findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,268 DEBUG findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,268 DEBUG findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,268 DEBUG findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,268 DEBUG findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,268 DEBUG findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,268 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,269 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,269 DEBUG findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,269 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,269 DEBUG findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,269 DEBUG findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,269 DEBUG findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,269 DEBUG findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,269 DEBUG findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,269 DEBUG findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,269 DEBUG findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,269 DEBUG findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,269 DEBUG findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,269 DEBUG findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,269 DEBUG findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,270 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,270 DEBUG findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,270 DEBUG findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,270 DEBUG findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2022-04-04 16:59:11,270 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,270 DEBUG findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,270 DEBUG findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,270 DEBUG findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,270 DEBUG findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,270 DEBUG findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,270 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,270 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,271 DEBUG findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,271 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,271 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,271 DEBUG findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,271 DEBUG findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,271 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,271 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,271 DEBUG findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,271 DEBUG findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,271 DEBUG findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,271 DEBUG findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,271 DEBUG findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,272 DEBUG findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,272 DEBUG findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2022-04-04 16:59:11,272 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,272 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,272 DEBUG findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,272 DEBUG findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,272 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 0.33499999999999996
2022-04-04 16:59:11,272 DEBUG findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,272 DEBUG findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,272 DEBUG findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,272 DEBUG findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,272 DEBUG findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,272 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,272 DEBUG findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,272 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,272 DEBUG findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,272 DEBUG findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,272 DEBUG findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,272 DEBUG findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,272 DEBUG findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,273 DEBUG findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,273 DEBUG findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,273 DEBUG findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,273 DEBUG findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,273 DEBUG findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,273 DEBUG findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,273 DEBUG findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,273 DEBUG findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,273 DEBUG findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,273 DEBUG findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2022-04-04 16:59:11,273 DEBUG findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,273 DEBUG findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,273 DEBUG findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,273 DEBUG findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,273 DEBUG findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,273 DEBUG findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,273 DEBUG findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,273 DEBUG findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,273 DEBUG findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,273 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,274 DEBUG findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,274 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,274 DEBUG findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,274 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,274 DEBUG findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,274 DEBUG findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,274 DEBUG findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,274 DEBUG findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,274 DEBUG findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,274 DEBUG findfont: Matching STIXSizeTwoSym:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to STIXSizeTwoSym ('/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf') with score of 0.050000.
2022-04-04 16:59:11,274 DEBUG findfont: Matching STIXSizeThreeSym:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2022-04-04 16:59:11,275 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,275 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,275 DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,275 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,275 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,275 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,275 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-04-04 16:59:11,275 DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,275 DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,275 DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,275 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-04-04 16:59:11,275 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,275 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,275 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,275 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,276 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-04-04 16:59:11,276 DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,276 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,276 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,276 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,276 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,276 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,276 DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,276 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-04-04 16:59:11,276 DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,276 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,276 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,276 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,276 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 0.05
2022-04-04 16:59:11,276 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,276 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,276 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-04-04 16:59:11,276 DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,276 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,276 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,276 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,277 DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,277 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,277 DEBUG findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,277 DEBUG findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,277 DEBUG findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,277 DEBUG findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,277 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,277 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,277 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,277 DEBUG findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,277 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,277 DEBUG findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,277 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,277 DEBUG findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,277 DEBUG findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,278 DEBUG findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,278 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,278 DEBUG findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,278 DEBUG findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,278 DEBUG findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,278 DEBUG findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,278 DEBUG findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,278 DEBUG findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,278 DEBUG findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,278 DEBUG findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,278 DEBUG findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,278 DEBUG findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,278 DEBUG findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,278 DEBUG findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,278 DEBUG findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,278 DEBUG findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,278 DEBUG findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,278 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2022-04-04 16:59:11,279 DEBUG findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,279 DEBUG findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,279 DEBUG findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,279 DEBUG findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,279 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,279 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,279 DEBUG findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,279 DEBUG findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,279 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,279 DEBUG findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,279 DEBUG findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,279 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,279 DEBUG findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,279 DEBUG findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,279 DEBUG findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,279 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,279 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,279 DEBUG findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,279 DEBUG findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,280 DEBUG findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,280 DEBUG findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,280 DEBUG findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,280 DEBUG findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,280 DEBUG findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,280 DEBUG findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2022-04-04 16:59:11,280 DEBUG findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,280 DEBUG findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,280 DEBUG findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,280 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2022-04-04 16:59:11,280 DEBUG findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,280 DEBUG findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,280 DEBUG findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,280 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,280 DEBUG findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,280 DEBUG findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,280 DEBUG findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,281 DEBUG findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,281 DEBUG findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,281 DEBUG findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,281 DEBUG findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,281 DEBUG findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,281 DEBUG findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,281 DEBUG findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,281 DEBUG findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,281 DEBUG findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,281 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,281 DEBUG findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,281 DEBUG findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,282 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,282 DEBUG findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,282 DEBUG findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,282 DEBUG findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,282 DEBUG findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,282 DEBUG findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,282 DEBUG findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,282 DEBUG findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,282 DEBUG findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,282 DEBUG findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,282 DEBUG findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,283 DEBUG findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,283 DEBUG findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,283 DEBUG findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,283 DEBUG findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,283 DEBUG findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,283 DEBUG findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,283 DEBUG findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,283 DEBUG findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,283 DEBUG findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,283 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,283 DEBUG findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,283 DEBUG findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,283 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,284 DEBUG findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,284 DEBUG findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,284 DEBUG findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,284 DEBUG findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,284 DEBUG findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,284 DEBUG findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,284 DEBUG findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,284 DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,284 DEBUG findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,284 DEBUG findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,284 DEBUG findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,284 DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,284 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2022-04-04 16:59:11,284 DEBUG findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,284 DEBUG findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,284 DEBUG findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,284 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,285 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,285 DEBUG findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,285 DEBUG findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,285 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,285 DEBUG findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,285 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,285 DEBUG findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,285 DEBUG findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,285 DEBUG findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,285 DEBUG findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,285 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,285 DEBUG findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,285 DEBUG findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,285 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,285 DEBUG findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,285 DEBUG findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2022-04-04 16:59:11,285 DEBUG findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,286 DEBUG findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,286 DEBUG findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,286 DEBUG findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,286 DEBUG findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,286 DEBUG findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,286 DEBUG findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,286 DEBUG findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,286 DEBUG findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,286 DEBUG findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,286 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2022-04-04 16:59:11,286 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,286 DEBUG findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,287 DEBUG findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,287 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,287 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,287 DEBUG findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,287 DEBUG findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,287 DEBUG findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,287 DEBUG findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2022-04-04 16:59:11,287 DEBUG findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,287 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,287 DEBUG findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,287 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,288 DEBUG findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,288 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,288 DEBUG findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,288 DEBUG findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,288 DEBUG findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,288 DEBUG findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,288 DEBUG findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,288 DEBUG findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,288 DEBUG findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,288 DEBUG findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,288 DEBUG findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,289 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2022-04-04 16:59:11,289 DEBUG findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-04 16:59:11,289 DEBUG findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,289 DEBUG findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,289 DEBUG findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,289 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,289 DEBUG findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2022-04-04 16:59:11,289 DEBUG findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,289 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 0.05
2022-04-04 16:59:11,289 DEBUG findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,289 DEBUG findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,290 DEBUG findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,290 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,290 DEBUG findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,290 DEBUG findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,290 DEBUG findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,290 DEBUG findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,290 DEBUG findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,290 DEBUG findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,290 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,290 DEBUG findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,290 DEBUG findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,290 DEBUG findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,290 DEBUG findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,291 DEBUG findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2022-04-04 16:59:11,291 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2022-04-04 16:59:11,291 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,291 DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,291 DEBUG findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,291 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2022-04-04 16:59:11,291 DEBUG findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,291 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,291 DEBUG findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,291 DEBUG findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,291 DEBUG findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,291 DEBUG findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,292 DEBUG findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,292 DEBUG findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,292 DEBUG findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,292 DEBUG findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,292 DEBUG findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,292 DEBUG findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,292 DEBUG findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,292 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2022-04-04 16:59:11,292 DEBUG findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,292 DEBUG findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,292 DEBUG findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,292 DEBUG findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,292 DEBUG findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,292 DEBUG findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,293 DEBUG findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,293 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2022-04-04 16:59:11,293 DEBUG findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,293 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-04 16:59:11,293 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,293 DEBUG findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,293 DEBUG findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,293 DEBUG findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,293 DEBUG findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,293 DEBUG findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,293 DEBUG findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,293 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,293 DEBUG findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,293 DEBUG findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,293 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,294 DEBUG findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,294 DEBUG findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,294 DEBUG findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,294 DEBUG findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,294 DEBUG findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,294 DEBUG findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,294 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,294 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,294 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,294 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2022-04-04 16:59:11,294 DEBUG findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,294 DEBUG findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,294 DEBUG findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,294 DEBUG findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,294 DEBUG findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,294 DEBUG findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,294 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,294 DEBUG findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,294 DEBUG findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,294 DEBUG findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,295 DEBUG findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,295 DEBUG findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,295 DEBUG findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,295 DEBUG findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,295 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,295 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,295 DEBUG findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,295 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,295 DEBUG findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,295 DEBUG findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,295 DEBUG findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,295 DEBUG findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,295 DEBUG findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,295 DEBUG findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,295 DEBUG findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,295 DEBUG findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,295 DEBUG findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,295 DEBUG findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,295 DEBUG findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,295 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,296 DEBUG findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,296 DEBUG findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,296 DEBUG findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2022-04-04 16:59:11,296 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,296 DEBUG findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,296 DEBUG findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,296 DEBUG findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,296 DEBUG findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,296 DEBUG findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,296 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,296 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,296 DEBUG findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,296 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,296 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,296 DEBUG findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,296 DEBUG findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,297 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,297 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 0.33499999999999996
2022-04-04 16:59:11,297 DEBUG findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,297 DEBUG findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,297 DEBUG findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,297 DEBUG findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,297 DEBUG findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,297 DEBUG findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,297 DEBUG findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2022-04-04 16:59:11,297 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,297 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,298 DEBUG findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,298 DEBUG findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,298 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,298 DEBUG findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,298 DEBUG findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,298 DEBUG findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,298 DEBUG findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,298 DEBUG findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,298 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,298 DEBUG findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,298 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,298 DEBUG findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,298 DEBUG findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,299 DEBUG findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,299 DEBUG findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,299 DEBUG findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,299 DEBUG findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,299 DEBUG findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,299 DEBUG findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,299 DEBUG findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,299 DEBUG findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,299 DEBUG findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,299 DEBUG findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,300 DEBUG findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,300 DEBUG findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,300 DEBUG findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2022-04-04 16:59:11,300 DEBUG findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,300 DEBUG findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,300 DEBUG findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,300 DEBUG findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,300 DEBUG findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,300 DEBUG findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,301 DEBUG findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,301 DEBUG findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,301 DEBUG findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,301 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,301 DEBUG findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,301 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,301 DEBUG findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,301 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,301 DEBUG findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,301 DEBUG findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,301 DEBUG findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,301 DEBUG findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,302 DEBUG findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,302 DEBUG findfont: Matching STIXSizeThreeSym:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to STIXSizeThreeSym ('/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf') with score of 0.050000.
2022-04-04 16:59:11,302 DEBUG findfont: Matching STIXSizeFourSym:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2022-04-04 16:59:11,303 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,303 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,303 DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,303 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,303 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,303 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,303 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,303 DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,303 DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,303 DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,303 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-04-04 16:59:11,303 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 0.05
2022-04-04 16:59:11,303 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,303 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,303 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,304 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-04-04 16:59:11,304 DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,304 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,304 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,304 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,304 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,304 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,304 DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,304 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-04-04 16:59:11,304 DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,304 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,304 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,304 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,304 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,304 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,304 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-04-04 16:59:11,304 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-04-04 16:59:11,304 DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,304 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,305 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,305 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,305 DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,305 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,305 DEBUG findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,305 DEBUG findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,305 DEBUG findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,305 DEBUG findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,305 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,305 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,305 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 0.33499999999999996
2022-04-04 16:59:11,305 DEBUG findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,305 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,305 DEBUG findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,305 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,305 DEBUG findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,305 DEBUG findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,306 DEBUG findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,306 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,306 DEBUG findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,306 DEBUG findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,306 DEBUG findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,306 DEBUG findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,306 DEBUG findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,306 DEBUG findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,306 DEBUG findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,306 DEBUG findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,306 DEBUG findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,306 DEBUG findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,306 DEBUG findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,306 DEBUG findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,306 DEBUG findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,306 DEBUG findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,306 DEBUG findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,306 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2022-04-04 16:59:11,306 DEBUG findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,306 DEBUG findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,307 DEBUG findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,307 DEBUG findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,307 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,307 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,307 DEBUG findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,307 DEBUG findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,307 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,307 DEBUG findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,307 DEBUG findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,307 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,307 DEBUG findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,307 DEBUG findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,307 DEBUG findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,307 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,307 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,307 DEBUG findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,307 DEBUG findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,307 DEBUG findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,307 DEBUG findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,307 DEBUG findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,307 DEBUG findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,308 DEBUG findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,308 DEBUG findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2022-04-04 16:59:11,308 DEBUG findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,308 DEBUG findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,308 DEBUG findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,308 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2022-04-04 16:59:11,308 DEBUG findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,308 DEBUG findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,308 DEBUG findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,308 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 0.05
2022-04-04 16:59:11,308 DEBUG findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,308 DEBUG findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,308 DEBUG findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,308 DEBUG findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,308 DEBUG findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,308 DEBUG findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,308 DEBUG findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,308 DEBUG findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,308 DEBUG findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,308 DEBUG findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,309 DEBUG findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,309 DEBUG findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,309 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,309 DEBUG findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,309 DEBUG findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,309 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,309 DEBUG findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,309 DEBUG findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,309 DEBUG findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,309 DEBUG findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,309 DEBUG findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,309 DEBUG findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,309 DEBUG findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,309 DEBUG findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,309 DEBUG findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,309 DEBUG findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,309 DEBUG findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,309 DEBUG findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,309 DEBUG findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,309 DEBUG findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,309 DEBUG findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,310 DEBUG findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,310 DEBUG findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,310 DEBUG findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,310 DEBUG findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,310 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,310 DEBUG findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,310 DEBUG findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,310 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,310 DEBUG findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,310 DEBUG findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,310 DEBUG findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,310 DEBUG findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,310 DEBUG findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,310 DEBUG findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,310 DEBUG findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,310 DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,310 DEBUG findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,310 DEBUG findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,310 DEBUG findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,311 DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,311 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2022-04-04 16:59:11,311 DEBUG findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,311 DEBUG findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,311 DEBUG findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,311 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,311 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,311 DEBUG findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,311 DEBUG findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,311 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,311 DEBUG findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,311 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,311 DEBUG findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,311 DEBUG findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,311 DEBUG findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,311 DEBUG findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,311 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,311 DEBUG findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,311 DEBUG findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,312 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,312 DEBUG findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,312 DEBUG findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2022-04-04 16:59:11,312 DEBUG findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,312 DEBUG findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,312 DEBUG findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,312 DEBUG findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,312 DEBUG findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,312 DEBUG findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,312 DEBUG findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,312 DEBUG findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,312 DEBUG findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,312 DEBUG findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,312 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2022-04-04 16:59:11,312 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,312 DEBUG findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,312 DEBUG findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,312 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,312 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,312 DEBUG findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,312 DEBUG findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,313 DEBUG findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,313 DEBUG findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2022-04-04 16:59:11,313 DEBUG findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,313 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,313 DEBUG findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,313 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,313 DEBUG findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,313 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,313 DEBUG findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,313 DEBUG findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,313 DEBUG findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,313 DEBUG findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,313 DEBUG findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,313 DEBUG findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,313 DEBUG findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,313 DEBUG findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,313 DEBUG findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,313 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2022-04-04 16:59:11,313 DEBUG findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-04 16:59:11,313 DEBUG findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,314 DEBUG findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,314 DEBUG findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,314 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,314 DEBUG findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2022-04-04 16:59:11,314 DEBUG findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,314 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,314 DEBUG findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,314 DEBUG findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,314 DEBUG findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,314 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,314 DEBUG findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,314 DEBUG findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,314 DEBUG findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,314 DEBUG findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,314 DEBUG findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,314 DEBUG findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,314 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,314 DEBUG findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,314 DEBUG findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,314 DEBUG findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,314 DEBUG findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,315 DEBUG findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2022-04-04 16:59:11,315 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2022-04-04 16:59:11,315 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,315 DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,315 DEBUG findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,315 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2022-04-04 16:59:11,315 DEBUG findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,315 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,315 DEBUG findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,315 DEBUG findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,315 DEBUG findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,315 DEBUG findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,315 DEBUG findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,315 DEBUG findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,315 DEBUG findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,315 DEBUG findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,315 DEBUG findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,315 DEBUG findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,315 DEBUG findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,315 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2022-04-04 16:59:11,315 DEBUG findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,316 DEBUG findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,316 DEBUG findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,316 DEBUG findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,316 DEBUG findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,316 DEBUG findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,316 DEBUG findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,316 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2022-04-04 16:59:11,316 DEBUG findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,316 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-04 16:59:11,316 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,316 DEBUG findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,316 DEBUG findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,316 DEBUG findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,316 DEBUG findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,316 DEBUG findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,316 DEBUG findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,316 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,316 DEBUG findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,316 DEBUG findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,316 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,316 DEBUG findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,317 DEBUG findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,317 DEBUG findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,317 DEBUG findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,317 DEBUG findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,317 DEBUG findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,317 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,317 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,317 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,317 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2022-04-04 16:59:11,317 DEBUG findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,317 DEBUG findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,317 DEBUG findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,317 DEBUG findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,317 DEBUG findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,317 DEBUG findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,317 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,317 DEBUG findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,317 DEBUG findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,317 DEBUG findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,317 DEBUG findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,317 DEBUG findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,318 DEBUG findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,318 DEBUG findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,318 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,318 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,318 DEBUG findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,318 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,318 DEBUG findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,318 DEBUG findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,318 DEBUG findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,318 DEBUG findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,318 DEBUG findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,318 DEBUG findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,318 DEBUG findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,318 DEBUG findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,318 DEBUG findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,318 DEBUG findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,318 DEBUG findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,318 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,318 DEBUG findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,318 DEBUG findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,319 DEBUG findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2022-04-04 16:59:11,319 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,319 DEBUG findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,319 DEBUG findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,319 DEBUG findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,319 DEBUG findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,319 DEBUG findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,319 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,319 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,319 DEBUG findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,319 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,319 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,319 DEBUG findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,319 DEBUG findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,319 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,319 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,319 DEBUG findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,319 DEBUG findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,319 DEBUG findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,319 DEBUG findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,320 DEBUG findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,320 DEBUG findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,320 DEBUG findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2022-04-04 16:59:11,320 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,320 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,320 DEBUG findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,320 DEBUG findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,320 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,320 DEBUG findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,320 DEBUG findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,320 DEBUG findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,320 DEBUG findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,320 DEBUG findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,320 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,320 DEBUG findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,320 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,320 DEBUG findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,320 DEBUG findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,320 DEBUG findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,320 DEBUG findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,320 DEBUG findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,321 DEBUG findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,321 DEBUG findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,321 DEBUG findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,321 DEBUG findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,321 DEBUG findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,321 DEBUG findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,321 DEBUG findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,321 DEBUG findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,321 DEBUG findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,321 DEBUG findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2022-04-04 16:59:11,321 DEBUG findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,321 DEBUG findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,321 DEBUG findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,321 DEBUG findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,321 DEBUG findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,321 DEBUG findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,321 DEBUG findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,321 DEBUG findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,321 DEBUG findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,321 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,321 DEBUG findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,322 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,322 DEBUG findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,322 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,322 DEBUG findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,322 DEBUG findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,322 DEBUG findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,322 DEBUG findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,322 DEBUG findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,322 DEBUG findfont: Matching STIXSizeFourSym:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to STIXSizeFourSym ('/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf') with score of 0.050000.
2022-04-04 16:59:11,322 DEBUG findfont: Matching STIXSizeFiveSym:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2022-04-04 16:59:11,323 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,323 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,323 DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,323 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,323 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,323 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,323 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,323 DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,323 DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,323 DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,323 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-04-04 16:59:11,323 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,323 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,323 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,323 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,323 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-04-04 16:59:11,323 DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,323 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,323 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,323 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,323 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,324 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,324 DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,324 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-04-04 16:59:11,324 DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,324 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 0.05
2022-04-04 16:59:11,324 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,324 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,324 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,324 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,324 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,324 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-04-04 16:59:11,324 DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,324 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,324 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,324 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,324 DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,324 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,324 DEBUG findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,324 DEBUG findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,324 DEBUG findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,324 DEBUG findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,325 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,325 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,325 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,325 DEBUG findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,325 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,325 DEBUG findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,325 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,325 DEBUG findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,325 DEBUG findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,325 DEBUG findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,325 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,325 DEBUG findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,325 DEBUG findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,325 DEBUG findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,325 DEBUG findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,325 DEBUG findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,325 DEBUG findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,325 DEBUG findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,325 DEBUG findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,325 DEBUG findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,325 DEBUG findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,325 DEBUG findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,326 DEBUG findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,326 DEBUG findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,326 DEBUG findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,326 DEBUG findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,326 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2022-04-04 16:59:11,326 DEBUG findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,326 DEBUG findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,326 DEBUG findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,326 DEBUG findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,326 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,326 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,326 DEBUG findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,326 DEBUG findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,326 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,326 DEBUG findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,326 DEBUG findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,326 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,326 DEBUG findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,326 DEBUG findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,326 DEBUG findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,326 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,327 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,327 DEBUG findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,327 DEBUG findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,327 DEBUG findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,327 DEBUG findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,327 DEBUG findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,327 DEBUG findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,327 DEBUG findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,327 DEBUG findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2022-04-04 16:59:11,327 DEBUG findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,327 DEBUG findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,327 DEBUG findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,327 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2022-04-04 16:59:11,327 DEBUG findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,327 DEBUG findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,327 DEBUG findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,328 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,328 DEBUG findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,328 DEBUG findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,328 DEBUG findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,328 DEBUG findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,328 DEBUG findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,328 DEBUG findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,328 DEBUG findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,328 DEBUG findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,328 DEBUG findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,328 DEBUG findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,328 DEBUG findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,328 DEBUG findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,328 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,328 DEBUG findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,328 DEBUG findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,328 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,328 DEBUG findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,328 DEBUG findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,329 DEBUG findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,329 DEBUG findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,329 DEBUG findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,329 DEBUG findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,329 DEBUG findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,329 DEBUG findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,329 DEBUG findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,329 DEBUG findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,329 DEBUG findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,329 DEBUG findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,329 DEBUG findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,329 DEBUG findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,329 DEBUG findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,329 DEBUG findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,329 DEBUG findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,329 DEBUG findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,329 DEBUG findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,329 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,329 DEBUG findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,329 DEBUG findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,330 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,330 DEBUG findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,330 DEBUG findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,330 DEBUG findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,330 DEBUG findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,330 DEBUG findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,330 DEBUG findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,330 DEBUG findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,330 DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,330 DEBUG findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,330 DEBUG findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,330 DEBUG findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,330 DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,330 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2022-04-04 16:59:11,330 DEBUG findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,330 DEBUG findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,330 DEBUG findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,330 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,330 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,330 DEBUG findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,331 DEBUG findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,331 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,331 DEBUG findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,331 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,331 DEBUG findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,331 DEBUG findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,331 DEBUG findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,331 DEBUG findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,331 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,331 DEBUG findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,331 DEBUG findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,331 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,331 DEBUG findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,331 DEBUG findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2022-04-04 16:59:11,331 DEBUG findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,331 DEBUG findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,331 DEBUG findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,331 DEBUG findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,331 DEBUG findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,331 DEBUG findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,332 DEBUG findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,332 DEBUG findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,332 DEBUG findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,332 DEBUG findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,332 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2022-04-04 16:59:11,332 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,332 DEBUG findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,332 DEBUG findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,332 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,332 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,332 DEBUG findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,332 DEBUG findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,332 DEBUG findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,332 DEBUG findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2022-04-04 16:59:11,332 DEBUG findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,332 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,332 DEBUG findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,332 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,332 DEBUG findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,332 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,333 DEBUG findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,333 DEBUG findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,333 DEBUG findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,333 DEBUG findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,333 DEBUG findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,333 DEBUG findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,333 DEBUG findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,333 DEBUG findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,333 DEBUG findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,333 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2022-04-04 16:59:11,333 DEBUG findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-04 16:59:11,333 DEBUG findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,333 DEBUG findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,334 DEBUG findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,334 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,334 DEBUG findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2022-04-04 16:59:11,334 DEBUG findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,334 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,334 DEBUG findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,334 DEBUG findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,334 DEBUG findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,334 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,334 DEBUG findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,334 DEBUG findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,334 DEBUG findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,334 DEBUG findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,334 DEBUG findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,334 DEBUG findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,334 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,334 DEBUG findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,334 DEBUG findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,334 DEBUG findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,334 DEBUG findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,335 DEBUG findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2022-04-04 16:59:11,335 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2022-04-04 16:59:11,335 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,335 DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,335 DEBUG findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,335 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2022-04-04 16:59:11,335 DEBUG findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,335 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,335 DEBUG findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,335 DEBUG findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,335 DEBUG findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,335 DEBUG findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,335 DEBUG findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,335 DEBUG findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,335 DEBUG findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,335 DEBUG findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,335 DEBUG findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,335 DEBUG findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,335 DEBUG findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,335 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2022-04-04 16:59:11,336 DEBUG findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,336 DEBUG findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,336 DEBUG findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,336 DEBUG findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,336 DEBUG findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,336 DEBUG findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,336 DEBUG findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,336 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2022-04-04 16:59:11,336 DEBUG findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,336 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-04 16:59:11,336 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,336 DEBUG findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,336 DEBUG findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,336 DEBUG findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,336 DEBUG findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,337 DEBUG findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,337 DEBUG findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,337 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,337 DEBUG findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,337 DEBUG findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,337 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,337 DEBUG findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,337 DEBUG findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,337 DEBUG findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,337 DEBUG findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,337 DEBUG findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,337 DEBUG findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,337 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,337 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,337 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,337 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2022-04-04 16:59:11,337 DEBUG findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,337 DEBUG findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,338 DEBUG findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,338 DEBUG findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,338 DEBUG findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,338 DEBUG findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,338 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,338 DEBUG findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,338 DEBUG findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,338 DEBUG findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,338 DEBUG findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,338 DEBUG findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,338 DEBUG findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,338 DEBUG findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,338 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,338 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,338 DEBUG findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,338 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 0.05
2022-04-04 16:59:11,338 DEBUG findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,338 DEBUG findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,338 DEBUG findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,339 DEBUG findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,339 DEBUG findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,339 DEBUG findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,339 DEBUG findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,339 DEBUG findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,339 DEBUG findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,339 DEBUG findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,339 DEBUG findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,339 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,339 DEBUG findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,339 DEBUG findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,339 DEBUG findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2022-04-04 16:59:11,339 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,339 DEBUG findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,339 DEBUG findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,339 DEBUG findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,339 DEBUG findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,339 DEBUG findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,339 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,340 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,340 DEBUG findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,340 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,340 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,340 DEBUG findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,340 DEBUG findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,340 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,340 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,340 DEBUG findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,340 DEBUG findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,340 DEBUG findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,340 DEBUG findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,340 DEBUG findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,340 DEBUG findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,340 DEBUG findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2022-04-04 16:59:11,340 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,340 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,340 DEBUG findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,340 DEBUG findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,340 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,341 DEBUG findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,341 DEBUG findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,341 DEBUG findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,341 DEBUG findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,341 DEBUG findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,341 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,341 DEBUG findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,341 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,341 DEBUG findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,341 DEBUG findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,341 DEBUG findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,341 DEBUG findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,341 DEBUG findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,341 DEBUG findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,342 DEBUG findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,342 DEBUG findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,342 DEBUG findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,342 DEBUG findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,342 DEBUG findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,342 DEBUG findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,342 DEBUG findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,342 DEBUG findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,342 DEBUG findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2022-04-04 16:59:11,342 DEBUG findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,342 DEBUG findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,342 DEBUG findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,342 DEBUG findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,342 DEBUG findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,342 DEBUG findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,342 DEBUG findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,342 DEBUG findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,342 DEBUG findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,342 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,342 DEBUG findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,343 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,343 DEBUG findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,343 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,343 DEBUG findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,343 DEBUG findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,343 DEBUG findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,343 DEBUG findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,343 DEBUG findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,343 DEBUG findfont: Matching STIXSizeFiveSym:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to STIXSizeFiveSym ('/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf') with score of 0.050000.
2022-04-04 16:59:11,345 DEBUG findfont: Matching cmsy10:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2022-04-04 16:59:11,345 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,345 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,345 DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,345 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,345 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,345 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,345 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,345 DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,346 DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,346 DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 0.05
2022-04-04 16:59:11,346 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-04-04 16:59:11,346 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,346 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,346 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,346 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,346 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-04-04 16:59:11,346 DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,346 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,346 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,346 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,346 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,346 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,346 DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,346 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-04-04 16:59:11,346 DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,346 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,346 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,346 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,346 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,346 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,347 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,347 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-04-04 16:59:11,347 DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,347 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,347 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,347 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,347 DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,347 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,347 DEBUG findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,347 DEBUG findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,347 DEBUG findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,347 DEBUG findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,347 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,347 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,347 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,347 DEBUG findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,347 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,347 DEBUG findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,347 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,347 DEBUG findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,347 DEBUG findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,347 DEBUG findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,348 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,348 DEBUG findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,348 DEBUG findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,348 DEBUG findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,348 DEBUG findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,348 DEBUG findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,348 DEBUG findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,348 DEBUG findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,348 DEBUG findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,348 DEBUG findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,348 DEBUG findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,348 DEBUG findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,348 DEBUG findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,348 DEBUG findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,348 DEBUG findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,348 DEBUG findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,348 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2022-04-04 16:59:11,348 DEBUG findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,348 DEBUG findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,348 DEBUG findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,348 DEBUG findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,348 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,349 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,349 DEBUG findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,349 DEBUG findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,349 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,349 DEBUG findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,349 DEBUG findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,349 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,349 DEBUG findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,349 DEBUG findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,349 DEBUG findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,349 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,349 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,349 DEBUG findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,349 DEBUG findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,349 DEBUG findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,349 DEBUG findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,349 DEBUG findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,349 DEBUG findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,349 DEBUG findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,349 DEBUG findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2022-04-04 16:59:11,349 DEBUG findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,350 DEBUG findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,350 DEBUG findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,350 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2022-04-04 16:59:11,350 DEBUG findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,350 DEBUG findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,350 DEBUG findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,350 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,350 DEBUG findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,350 DEBUG findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,350 DEBUG findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,350 DEBUG findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,350 DEBUG findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,350 DEBUG findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,350 DEBUG findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,350 DEBUG findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,350 DEBUG findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,350 DEBUG findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,350 DEBUG findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,350 DEBUG findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,350 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,350 DEBUG findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,350 DEBUG findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,351 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,351 DEBUG findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,351 DEBUG findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,351 DEBUG findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,351 DEBUG findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,351 DEBUG findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,351 DEBUG findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,351 DEBUG findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,351 DEBUG findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,351 DEBUG findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,351 DEBUG findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,351 DEBUG findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,351 DEBUG findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,351 DEBUG findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,351 DEBUG findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,351 DEBUG findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,351 DEBUG findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,351 DEBUG findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,351 DEBUG findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,351 DEBUG findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,351 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,351 DEBUG findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,352 DEBUG findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,352 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,352 DEBUG findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,352 DEBUG findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,352 DEBUG findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,352 DEBUG findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,352 DEBUG findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,352 DEBUG findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,352 DEBUG findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,352 DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,352 DEBUG findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,352 DEBUG findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,352 DEBUG findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,352 DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,352 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2022-04-04 16:59:11,352 DEBUG findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,352 DEBUG findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,352 DEBUG findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,352 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,352 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,352 DEBUG findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,352 DEBUG findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,353 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,353 DEBUG findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,353 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,353 DEBUG findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,353 DEBUG findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,353 DEBUG findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,353 DEBUG findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,353 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,353 DEBUG findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,353 DEBUG findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,353 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,353 DEBUG findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,353 DEBUG findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2022-04-04 16:59:11,353 DEBUG findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,353 DEBUG findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,353 DEBUG findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,353 DEBUG findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,353 DEBUG findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,353 DEBUG findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,353 DEBUG findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,353 DEBUG findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,353 DEBUG findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,354 DEBUG findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,354 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2022-04-04 16:59:11,354 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,354 DEBUG findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,354 DEBUG findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,354 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,354 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,354 DEBUG findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,354 DEBUG findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,354 DEBUG findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,354 DEBUG findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2022-04-04 16:59:11,354 DEBUG findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,354 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,354 DEBUG findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,354 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,354 DEBUG findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,354 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,354 DEBUG findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,354 DEBUG findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,354 DEBUG findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,354 DEBUG findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,354 DEBUG findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,355 DEBUG findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,355 DEBUG findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,355 DEBUG findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,355 DEBUG findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,355 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2022-04-04 16:59:11,355 DEBUG findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-04 16:59:11,355 DEBUG findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,355 DEBUG findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,355 DEBUG findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,355 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,355 DEBUG findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2022-04-04 16:59:11,355 DEBUG findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,355 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,355 DEBUG findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,355 DEBUG findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,355 DEBUG findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,355 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,355 DEBUG findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,355 DEBUG findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,355 DEBUG findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,355 DEBUG findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,356 DEBUG findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,356 DEBUG findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,356 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,356 DEBUG findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,356 DEBUG findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,356 DEBUG findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,356 DEBUG findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,356 DEBUG findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2022-04-04 16:59:11,356 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2022-04-04 16:59:11,356 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,356 DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,356 DEBUG findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,356 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2022-04-04 16:59:11,356 DEBUG findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,356 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,356 DEBUG findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,356 DEBUG findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,356 DEBUG findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,356 DEBUG findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,356 DEBUG findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,356 DEBUG findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,356 DEBUG findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,357 DEBUG findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,357 DEBUG findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,357 DEBUG findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,357 DEBUG findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,357 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2022-04-04 16:59:11,357 DEBUG findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,357 DEBUG findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,357 DEBUG findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,357 DEBUG findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,357 DEBUG findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,357 DEBUG findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,357 DEBUG findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,357 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2022-04-04 16:59:11,357 DEBUG findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,357 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-04 16:59:11,357 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,357 DEBUG findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,357 DEBUG findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,357 DEBUG findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,357 DEBUG findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,357 DEBUG findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,357 DEBUG findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,358 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,358 DEBUG findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,358 DEBUG findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,358 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,358 DEBUG findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,358 DEBUG findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,358 DEBUG findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,358 DEBUG findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,358 DEBUG findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,358 DEBUG findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,358 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,358 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,358 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,358 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2022-04-04 16:59:11,358 DEBUG findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,358 DEBUG findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,358 DEBUG findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,358 DEBUG findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,358 DEBUG findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,358 DEBUG findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,358 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,358 DEBUG findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,359 DEBUG findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,359 DEBUG findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,359 DEBUG findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,359 DEBUG findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,359 DEBUG findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,359 DEBUG findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,359 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,359 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,359 DEBUG findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,359 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,359 DEBUG findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,359 DEBUG findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,359 DEBUG findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,359 DEBUG findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,359 DEBUG findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,359 DEBUG findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,359 DEBUG findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,359 DEBUG findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,359 DEBUG findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,359 DEBUG findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,359 DEBUG findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,359 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,360 DEBUG findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,360 DEBUG findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,360 DEBUG findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2022-04-04 16:59:11,360 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,360 DEBUG findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,360 DEBUG findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,360 DEBUG findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,360 DEBUG findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,360 DEBUG findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,360 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,360 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,360 DEBUG findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,360 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,360 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,360 DEBUG findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,360 DEBUG findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,360 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,360 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,360 DEBUG findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,360 DEBUG findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,360 DEBUG findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,360 DEBUG findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,361 DEBUG findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,361 DEBUG findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,361 DEBUG findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2022-04-04 16:59:11,361 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,361 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,361 DEBUG findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,361 DEBUG findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,361 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,361 DEBUG findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,361 DEBUG findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,361 DEBUG findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,361 DEBUG findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,361 DEBUG findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,361 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,361 DEBUG findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,361 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,361 DEBUG findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,361 DEBUG findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,361 DEBUG findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,361 DEBUG findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,361 DEBUG findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,361 DEBUG findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,362 DEBUG findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,362 DEBUG findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,362 DEBUG findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,362 DEBUG findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,362 DEBUG findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,362 DEBUG findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,362 DEBUG findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,362 DEBUG findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,362 DEBUG findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2022-04-04 16:59:11,362 DEBUG findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,362 DEBUG findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,362 DEBUG findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,362 DEBUG findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,362 DEBUG findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,362 DEBUG findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,362 DEBUG findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,362 DEBUG findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,362 DEBUG findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,362 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,362 DEBUG findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,362 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,362 DEBUG findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,363 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,363 DEBUG findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,363 DEBUG findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,363 DEBUG findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,363 DEBUG findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,363 DEBUG findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,363 DEBUG findfont: Matching cmsy10:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to cmsy10 ('/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf') with score of 0.050000.
2022-04-04 16:59:11,363 DEBUG findfont: Matching cmr10:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2022-04-04 16:59:11,363 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,363 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,363 DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 0.05
2022-04-04 16:59:11,364 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,364 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,364 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,364 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,364 DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,364 DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,364 DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,364 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-04-04 16:59:11,364 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,364 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,364 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,364 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,364 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-04-04 16:59:11,364 DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,364 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,364 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,364 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,364 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,364 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,364 DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,364 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-04-04 16:59:11,364 DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,365 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,365 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,365 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,365 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,365 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,365 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,365 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-04-04 16:59:11,365 DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,365 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,365 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,365 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,365 DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,365 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,365 DEBUG findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,365 DEBUG findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,365 DEBUG findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,365 DEBUG findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,365 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,365 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,365 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,366 DEBUG findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,366 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,366 DEBUG findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,366 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,366 DEBUG findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,366 DEBUG findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,366 DEBUG findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,366 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,366 DEBUG findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,366 DEBUG findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,366 DEBUG findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,366 DEBUG findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,366 DEBUG findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,366 DEBUG findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,366 DEBUG findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,366 DEBUG findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,367 DEBUG findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,367 DEBUG findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,367 DEBUG findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,367 DEBUG findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,367 DEBUG findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,367 DEBUG findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,367 DEBUG findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,367 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2022-04-04 16:59:11,367 DEBUG findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,367 DEBUG findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,367 DEBUG findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,367 DEBUG findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,367 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,367 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,367 DEBUG findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,367 DEBUG findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,367 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,367 DEBUG findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,367 DEBUG findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,367 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,368 DEBUG findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,368 DEBUG findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,368 DEBUG findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,368 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,368 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,368 DEBUG findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,368 DEBUG findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,368 DEBUG findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,368 DEBUG findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,368 DEBUG findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,368 DEBUG findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,368 DEBUG findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,368 DEBUG findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2022-04-04 16:59:11,368 DEBUG findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,368 DEBUG findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,368 DEBUG findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,368 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2022-04-04 16:59:11,368 DEBUG findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,368 DEBUG findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,368 DEBUG findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,368 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,369 DEBUG findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,369 DEBUG findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,369 DEBUG findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,369 DEBUG findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,369 DEBUG findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,369 DEBUG findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,369 DEBUG findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,369 DEBUG findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,369 DEBUG findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,369 DEBUG findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,369 DEBUG findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,369 DEBUG findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,369 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,369 DEBUG findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,369 DEBUG findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,369 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,369 DEBUG findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,369 DEBUG findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,369 DEBUG findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,369 DEBUG findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,369 DEBUG findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,369 DEBUG findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,370 DEBUG findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,370 DEBUG findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,370 DEBUG findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,370 DEBUG findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,370 DEBUG findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,370 DEBUG findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,370 DEBUG findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,370 DEBUG findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,370 DEBUG findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,370 DEBUG findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,370 DEBUG findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,370 DEBUG findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,370 DEBUG findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,370 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,370 DEBUG findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,370 DEBUG findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,370 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,370 DEBUG findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,370 DEBUG findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,371 DEBUG findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,371 DEBUG findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,371 DEBUG findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,371 DEBUG findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,371 DEBUG findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,371 DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,371 DEBUG findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,371 DEBUG findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,371 DEBUG findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,371 DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,371 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2022-04-04 16:59:11,371 DEBUG findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,371 DEBUG findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,371 DEBUG findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,371 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,371 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,371 DEBUG findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,371 DEBUG findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,371 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,371 DEBUG findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,371 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,371 DEBUG findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,372 DEBUG findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,372 DEBUG findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,372 DEBUG findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,372 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,372 DEBUG findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,372 DEBUG findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,372 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,372 DEBUG findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,372 DEBUG findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2022-04-04 16:59:11,372 DEBUG findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,372 DEBUG findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,372 DEBUG findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,372 DEBUG findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,372 DEBUG findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,372 DEBUG findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,372 DEBUG findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,372 DEBUG findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,372 DEBUG findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,372 DEBUG findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,373 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2022-04-04 16:59:11,373 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,373 DEBUG findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,373 DEBUG findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,373 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,373 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,373 DEBUG findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,373 DEBUG findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,373 DEBUG findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,373 DEBUG findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2022-04-04 16:59:11,373 DEBUG findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,374 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,374 DEBUG findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,374 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,374 DEBUG findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,374 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,374 DEBUG findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,374 DEBUG findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,374 DEBUG findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,374 DEBUG findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,374 DEBUG findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,374 DEBUG findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,374 DEBUG findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,374 DEBUG findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,374 DEBUG findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,374 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2022-04-04 16:59:11,374 DEBUG findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-04 16:59:11,374 DEBUG findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,374 DEBUG findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,374 DEBUG findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,374 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,375 DEBUG findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2022-04-04 16:59:11,375 DEBUG findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,375 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,375 DEBUG findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,375 DEBUG findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,375 DEBUG findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,375 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,375 DEBUG findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,375 DEBUG findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,375 DEBUG findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,375 DEBUG findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,375 DEBUG findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,375 DEBUG findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,375 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,375 DEBUG findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,375 DEBUG findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,375 DEBUG findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,375 DEBUG findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,375 DEBUG findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2022-04-04 16:59:11,375 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2022-04-04 16:59:11,376 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,376 DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,376 DEBUG findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,376 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2022-04-04 16:59:11,376 DEBUG findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,376 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,376 DEBUG findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,376 DEBUG findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,376 DEBUG findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,376 DEBUG findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,376 DEBUG findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,376 DEBUG findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,376 DEBUG findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,376 DEBUG findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,376 DEBUG findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,376 DEBUG findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,376 DEBUG findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,376 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2022-04-04 16:59:11,376 DEBUG findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,376 DEBUG findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,376 DEBUG findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,377 DEBUG findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,377 DEBUG findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,377 DEBUG findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,377 DEBUG findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,377 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2022-04-04 16:59:11,377 DEBUG findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,377 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-04 16:59:11,377 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,377 DEBUG findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,377 DEBUG findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,377 DEBUG findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,378 DEBUG findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,378 DEBUG findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,378 DEBUG findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,378 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,378 DEBUG findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,378 DEBUG findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,378 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,378 DEBUG findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,378 DEBUG findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,378 DEBUG findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,378 DEBUG findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,378 DEBUG findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,379 DEBUG findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,379 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,379 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,379 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,379 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2022-04-04 16:59:11,379 DEBUG findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,379 DEBUG findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,379 DEBUG findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,379 DEBUG findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,379 DEBUG findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,379 DEBUG findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,379 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,379 DEBUG findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,379 DEBUG findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,379 DEBUG findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,380 DEBUG findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,380 DEBUG findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,380 DEBUG findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,380 DEBUG findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,380 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,380 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,380 DEBUG findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,380 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,380 DEBUG findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,380 DEBUG findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,380 DEBUG findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,380 DEBUG findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,380 DEBUG findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,380 DEBUG findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,380 DEBUG findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,381 DEBUG findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,381 DEBUG findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,381 DEBUG findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,381 DEBUG findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,381 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,381 DEBUG findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,381 DEBUG findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,381 DEBUG findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2022-04-04 16:59:11,381 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,381 DEBUG findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,381 DEBUG findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,381 DEBUG findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,381 DEBUG findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,381 DEBUG findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,381 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,381 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,381 DEBUG findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,381 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,382 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,382 DEBUG findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,382 DEBUG findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,382 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,382 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,382 DEBUG findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,382 DEBUG findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,382 DEBUG findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,382 DEBUG findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,382 DEBUG findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,382 DEBUG findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,382 DEBUG findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2022-04-04 16:59:11,382 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,382 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,382 DEBUG findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,382 DEBUG findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,383 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,383 DEBUG findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,383 DEBUG findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,383 DEBUG findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,383 DEBUG findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,383 DEBUG findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,383 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,383 DEBUG findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,383 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,383 DEBUG findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,384 DEBUG findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,384 DEBUG findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,384 DEBUG findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,384 DEBUG findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,384 DEBUG findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,384 DEBUG findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,384 DEBUG findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,384 DEBUG findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,384 DEBUG findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,384 DEBUG findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,384 DEBUG findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,384 DEBUG findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,384 DEBUG findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,384 DEBUG findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2022-04-04 16:59:11,384 DEBUG findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,384 DEBUG findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,384 DEBUG findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,384 DEBUG findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,385 DEBUG findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,385 DEBUG findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,385 DEBUG findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,385 DEBUG findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,385 DEBUG findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,385 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,385 DEBUG findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,385 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,385 DEBUG findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,385 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,385 DEBUG findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,385 DEBUG findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,385 DEBUG findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,385 DEBUG findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,385 DEBUG findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,386 DEBUG findfont: Matching cmr10:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to cmr10 ('/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf') with score of 0.050000.
2022-04-04 16:59:11,386 DEBUG findfont: Matching cmtt10:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2022-04-04 16:59:11,387 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,387 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,387 DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,387 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,387 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,387 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,387 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,387 DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,387 DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,387 DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,387 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-04-04 16:59:11,387 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,387 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,388 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,388 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,388 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-04-04 16:59:11,388 DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,388 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,388 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,388 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,388 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,388 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,388 DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,388 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-04-04 16:59:11,388 DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 0.05
2022-04-04 16:59:11,388 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,388 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,389 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,389 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,389 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,389 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,389 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-04-04 16:59:11,389 DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,389 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,389 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,389 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,389 DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,389 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,389 DEBUG findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,389 DEBUG findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,390 DEBUG findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,390 DEBUG findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,390 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,390 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,390 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,390 DEBUG findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,390 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,390 DEBUG findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,390 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,390 DEBUG findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,390 DEBUG findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,390 DEBUG findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,390 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,391 DEBUG findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,391 DEBUG findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,391 DEBUG findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,391 DEBUG findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,391 DEBUG findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,391 DEBUG findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,391 DEBUG findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,391 DEBUG findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,391 DEBUG findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,391 DEBUG findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,391 DEBUG findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,391 DEBUG findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,391 DEBUG findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,391 DEBUG findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,392 DEBUG findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,392 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2022-04-04 16:59:11,392 DEBUG findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,392 DEBUG findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,392 DEBUG findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,392 DEBUG findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,392 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,392 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,392 DEBUG findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,392 DEBUG findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,392 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,393 DEBUG findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,393 DEBUG findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,393 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,393 DEBUG findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,393 DEBUG findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,393 DEBUG findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,393 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,393 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,393 DEBUG findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,393 DEBUG findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,393 DEBUG findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,393 DEBUG findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,393 DEBUG findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,393 DEBUG findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,393 DEBUG findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,394 DEBUG findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2022-04-04 16:59:11,394 DEBUG findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,394 DEBUG findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,394 DEBUG findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,394 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2022-04-04 16:59:11,394 DEBUG findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,394 DEBUG findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,394 DEBUG findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,394 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,394 DEBUG findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,394 DEBUG findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,394 DEBUG findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,394 DEBUG findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,394 DEBUG findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,394 DEBUG findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,395 DEBUG findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,395 DEBUG findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,395 DEBUG findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,395 DEBUG findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,395 DEBUG findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,395 DEBUG findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,395 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,395 DEBUG findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,395 DEBUG findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,395 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,395 DEBUG findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,396 DEBUG findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,396 DEBUG findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,396 DEBUG findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,396 DEBUG findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,396 DEBUG findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,396 DEBUG findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,396 DEBUG findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,396 DEBUG findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,396 DEBUG findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,396 DEBUG findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,396 DEBUG findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,396 DEBUG findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,396 DEBUG findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,396 DEBUG findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,396 DEBUG findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,396 DEBUG findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,396 DEBUG findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,397 DEBUG findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,397 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,397 DEBUG findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,397 DEBUG findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,397 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,397 DEBUG findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,397 DEBUG findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,397 DEBUG findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,397 DEBUG findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,397 DEBUG findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,397 DEBUG findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,397 DEBUG findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,397 DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,397 DEBUG findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,397 DEBUG findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,397 DEBUG findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,397 DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,397 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2022-04-04 16:59:11,398 DEBUG findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,398 DEBUG findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,398 DEBUG findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,398 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,398 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,398 DEBUG findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,398 DEBUG findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,398 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,398 DEBUG findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,398 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,398 DEBUG findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,398 DEBUG findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,398 DEBUG findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,398 DEBUG findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,398 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,398 DEBUG findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,398 DEBUG findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,398 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,398 DEBUG findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,398 DEBUG findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2022-04-04 16:59:11,399 DEBUG findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,399 DEBUG findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,399 DEBUG findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,399 DEBUG findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,399 DEBUG findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,399 DEBUG findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,399 DEBUG findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,399 DEBUG findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,399 DEBUG findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,399 DEBUG findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,399 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2022-04-04 16:59:11,399 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,399 DEBUG findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,399 DEBUG findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,399 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,399 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,399 DEBUG findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,399 DEBUG findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,399 DEBUG findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,399 DEBUG findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2022-04-04 16:59:11,400 DEBUG findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,400 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,400 DEBUG findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,400 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,400 DEBUG findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,400 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,400 DEBUG findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,400 DEBUG findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,400 DEBUG findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,400 DEBUG findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,400 DEBUG findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,400 DEBUG findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,400 DEBUG findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,401 DEBUG findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,401 DEBUG findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,401 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2022-04-04 16:59:11,401 DEBUG findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-04 16:59:11,401 DEBUG findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,401 DEBUG findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,401 DEBUG findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,401 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,401 DEBUG findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2022-04-04 16:59:11,401 DEBUG findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,401 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,401 DEBUG findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,401 DEBUG findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,401 DEBUG findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,401 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,401 DEBUG findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,401 DEBUG findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,402 DEBUG findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,402 DEBUG findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,402 DEBUG findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,402 DEBUG findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,402 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,402 DEBUG findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,402 DEBUG findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,402 DEBUG findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,402 DEBUG findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,402 DEBUG findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2022-04-04 16:59:11,402 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2022-04-04 16:59:11,402 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,402 DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,402 DEBUG findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,402 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2022-04-04 16:59:11,402 DEBUG findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,403 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,403 DEBUG findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,403 DEBUG findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,403 DEBUG findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,403 DEBUG findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,403 DEBUG findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,403 DEBUG findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,403 DEBUG findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,403 DEBUG findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,403 DEBUG findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,403 DEBUG findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,403 DEBUG findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,403 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2022-04-04 16:59:11,403 DEBUG findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,403 DEBUG findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,403 DEBUG findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,403 DEBUG findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,403 DEBUG findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,403 DEBUG findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,403 DEBUG findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,404 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2022-04-04 16:59:11,404 DEBUG findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,404 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-04 16:59:11,404 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,404 DEBUG findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,404 DEBUG findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,404 DEBUG findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,404 DEBUG findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,404 DEBUG findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,404 DEBUG findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,404 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,404 DEBUG findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,404 DEBUG findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,404 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,404 DEBUG findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,404 DEBUG findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,404 DEBUG findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,404 DEBUG findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,404 DEBUG findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,404 DEBUG findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,405 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,405 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,405 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,405 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2022-04-04 16:59:11,405 DEBUG findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,405 DEBUG findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,405 DEBUG findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,405 DEBUG findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,405 DEBUG findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,405 DEBUG findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,405 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,405 DEBUG findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,405 DEBUG findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,405 DEBUG findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,405 DEBUG findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,405 DEBUG findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,405 DEBUG findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,405 DEBUG findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,405 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,405 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,406 DEBUG findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,406 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,406 DEBUG findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,406 DEBUG findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,406 DEBUG findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,406 DEBUG findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,406 DEBUG findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,406 DEBUG findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,406 DEBUG findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,406 DEBUG findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,406 DEBUG findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,406 DEBUG findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,406 DEBUG findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,406 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,406 DEBUG findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,406 DEBUG findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,406 DEBUG findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2022-04-04 16:59:11,406 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,406 DEBUG findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,406 DEBUG findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,407 DEBUG findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,407 DEBUG findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,407 DEBUG findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,407 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,407 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,407 DEBUG findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,407 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,407 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,407 DEBUG findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,407 DEBUG findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,407 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,407 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,407 DEBUG findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,407 DEBUG findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,407 DEBUG findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,407 DEBUG findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,407 DEBUG findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,407 DEBUG findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,408 DEBUG findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2022-04-04 16:59:11,408 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,408 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,408 DEBUG findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,408 DEBUG findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,408 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,408 DEBUG findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,408 DEBUG findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,408 DEBUG findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,408 DEBUG findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,408 DEBUG findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,408 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,408 DEBUG findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,408 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,408 DEBUG findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,408 DEBUG findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,408 DEBUG findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,408 DEBUG findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,408 DEBUG findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,408 DEBUG findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,409 DEBUG findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,409 DEBUG findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,409 DEBUG findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,409 DEBUG findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,409 DEBUG findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,409 DEBUG findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,409 DEBUG findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,409 DEBUG findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,409 DEBUG findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2022-04-04 16:59:11,409 DEBUG findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,409 DEBUG findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,409 DEBUG findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,409 DEBUG findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,409 DEBUG findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,409 DEBUG findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,409 DEBUG findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,409 DEBUG findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,409 DEBUG findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,409 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,410 DEBUG findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,410 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,410 DEBUG findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,410 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,410 DEBUG findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,410 DEBUG findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,410 DEBUG findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,410 DEBUG findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,410 DEBUG findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,410 DEBUG findfont: Matching cmtt10:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to cmtt10 ('/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf') with score of 0.050000.
2022-04-04 16:59:11,410 DEBUG findfont: Matching cmmi10:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2022-04-04 16:59:11,411 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,411 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,411 DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,411 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,411 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,411 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,411 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,411 DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,411 DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,411 DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,411 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-04-04 16:59:11,411 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,411 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,411 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,411 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,411 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-04-04 16:59:11,411 DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,411 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,411 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,412 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,412 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,412 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,412 DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,412 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-04-04 16:59:11,412 DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,412 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,412 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,412 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,412 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,412 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,412 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,412 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-04-04 16:59:11,412 DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 0.05
2022-04-04 16:59:11,412 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,412 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,412 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,412 DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,412 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,412 DEBUG findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,413 DEBUG findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,413 DEBUG findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,413 DEBUG findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,413 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,413 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,413 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,413 DEBUG findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,413 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,413 DEBUG findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,413 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,413 DEBUG findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,413 DEBUG findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,413 DEBUG findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,413 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,413 DEBUG findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,413 DEBUG findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,413 DEBUG findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,413 DEBUG findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,414 DEBUG findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,414 DEBUG findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,414 DEBUG findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,414 DEBUG findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,414 DEBUG findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,414 DEBUG findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,414 DEBUG findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,414 DEBUG findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,414 DEBUG findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,414 DEBUG findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,414 DEBUG findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,414 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2022-04-04 16:59:11,414 DEBUG findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,414 DEBUG findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,414 DEBUG findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,414 DEBUG findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,415 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,415 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,415 DEBUG findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,415 DEBUG findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,415 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,415 DEBUG findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,415 DEBUG findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,415 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,415 DEBUG findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,415 DEBUG findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,415 DEBUG findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,415 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,415 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,415 DEBUG findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,415 DEBUG findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,415 DEBUG findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,415 DEBUG findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,415 DEBUG findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,416 DEBUG findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,416 DEBUG findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,416 DEBUG findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2022-04-04 16:59:11,416 DEBUG findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,416 DEBUG findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,416 DEBUG findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,416 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2022-04-04 16:59:11,416 DEBUG findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,416 DEBUG findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,416 DEBUG findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,416 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,416 DEBUG findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,416 DEBUG findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,416 DEBUG findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,416 DEBUG findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,416 DEBUG findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,416 DEBUG findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,416 DEBUG findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,417 DEBUG findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,417 DEBUG findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,417 DEBUG findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,417 DEBUG findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,417 DEBUG findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,417 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,417 DEBUG findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,417 DEBUG findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,417 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,417 DEBUG findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,417 DEBUG findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,417 DEBUG findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,417 DEBUG findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,417 DEBUG findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,417 DEBUG findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,417 DEBUG findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,417 DEBUG findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,418 DEBUG findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,418 DEBUG findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,418 DEBUG findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,418 DEBUG findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,418 DEBUG findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,418 DEBUG findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,418 DEBUG findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,418 DEBUG findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,418 DEBUG findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,418 DEBUG findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,418 DEBUG findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,418 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,418 DEBUG findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,418 DEBUG findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,418 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,418 DEBUG findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,418 DEBUG findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,418 DEBUG findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,418 DEBUG findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,418 DEBUG findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,419 DEBUG findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,419 DEBUG findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,419 DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,419 DEBUG findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,419 DEBUG findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,419 DEBUG findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,419 DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,419 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2022-04-04 16:59:11,419 DEBUG findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,419 DEBUG findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,419 DEBUG findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,419 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,419 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,419 DEBUG findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,419 DEBUG findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,419 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,419 DEBUG findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,419 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,420 DEBUG findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,420 DEBUG findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,420 DEBUG findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,420 DEBUG findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,420 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,420 DEBUG findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,420 DEBUG findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,420 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,420 DEBUG findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,420 DEBUG findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2022-04-04 16:59:11,420 DEBUG findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,420 DEBUG findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,420 DEBUG findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,420 DEBUG findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,420 DEBUG findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,420 DEBUG findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,420 DEBUG findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,420 DEBUG findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,420 DEBUG findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,420 DEBUG findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,420 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2022-04-04 16:59:11,421 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,421 DEBUG findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,421 DEBUG findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,421 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,421 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,421 DEBUG findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,421 DEBUG findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,421 DEBUG findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,421 DEBUG findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2022-04-04 16:59:11,421 DEBUG findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,421 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,421 DEBUG findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,421 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,421 DEBUG findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,421 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,421 DEBUG findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,421 DEBUG findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,421 DEBUG findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,421 DEBUG findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,421 DEBUG findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,421 DEBUG findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,422 DEBUG findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,422 DEBUG findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,422 DEBUG findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,422 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2022-04-04 16:59:11,422 DEBUG findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-04 16:59:11,422 DEBUG findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,422 DEBUG findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,422 DEBUG findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,422 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,422 DEBUG findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2022-04-04 16:59:11,422 DEBUG findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,422 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,422 DEBUG findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,422 DEBUG findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,422 DEBUG findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,422 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,422 DEBUG findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,422 DEBUG findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,422 DEBUG findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,422 DEBUG findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,422 DEBUG findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,423 DEBUG findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,423 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,423 DEBUG findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,423 DEBUG findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,423 DEBUG findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,423 DEBUG findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,423 DEBUG findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2022-04-04 16:59:11,423 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2022-04-04 16:59:11,423 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,423 DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,423 DEBUG findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,423 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2022-04-04 16:59:11,423 DEBUG findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,423 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,423 DEBUG findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,423 DEBUG findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,423 DEBUG findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,423 DEBUG findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,423 DEBUG findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,423 DEBUG findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,423 DEBUG findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,424 DEBUG findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,424 DEBUG findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,424 DEBUG findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,424 DEBUG findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,424 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2022-04-04 16:59:11,424 DEBUG findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,424 DEBUG findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,424 DEBUG findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,424 DEBUG findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,424 DEBUG findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,424 DEBUG findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,424 DEBUG findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,424 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2022-04-04 16:59:11,424 DEBUG findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,424 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-04 16:59:11,424 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,424 DEBUG findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,424 DEBUG findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,424 DEBUG findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,424 DEBUG findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,425 DEBUG findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,425 DEBUG findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,425 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,425 DEBUG findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,425 DEBUG findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,425 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,425 DEBUG findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,425 DEBUG findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,425 DEBUG findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,425 DEBUG findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,425 DEBUG findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,425 DEBUG findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,425 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,425 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,425 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,425 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2022-04-04 16:59:11,425 DEBUG findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,425 DEBUG findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,425 DEBUG findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,425 DEBUG findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,425 DEBUG findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,426 DEBUG findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,426 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,426 DEBUG findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,426 DEBUG findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,426 DEBUG findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,426 DEBUG findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,426 DEBUG findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,426 DEBUG findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,426 DEBUG findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,426 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,426 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,426 DEBUG findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,426 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,426 DEBUG findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,426 DEBUG findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,426 DEBUG findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,426 DEBUG findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,426 DEBUG findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,426 DEBUG findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,426 DEBUG findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,426 DEBUG findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,427 DEBUG findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,427 DEBUG findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,427 DEBUG findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,427 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,427 DEBUG findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,427 DEBUG findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,427 DEBUG findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2022-04-04 16:59:11,427 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,427 DEBUG findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,427 DEBUG findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,427 DEBUG findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,427 DEBUG findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,427 DEBUG findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,427 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,427 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,427 DEBUG findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,428 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,428 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,428 DEBUG findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,428 DEBUG findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,428 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,428 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,428 DEBUG findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,428 DEBUG findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,428 DEBUG findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,428 DEBUG findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,428 DEBUG findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,428 DEBUG findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,428 DEBUG findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2022-04-04 16:59:11,428 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,428 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,428 DEBUG findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,428 DEBUG findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,428 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,429 DEBUG findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,429 DEBUG findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,429 DEBUG findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,429 DEBUG findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,429 DEBUG findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,429 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,429 DEBUG findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,429 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,429 DEBUG findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,429 DEBUG findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,429 DEBUG findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,429 DEBUG findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,429 DEBUG findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,429 DEBUG findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,429 DEBUG findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,429 DEBUG findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,429 DEBUG findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,429 DEBUG findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,429 DEBUG findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,429 DEBUG findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,429 DEBUG findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,430 DEBUG findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,430 DEBUG findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2022-04-04 16:59:11,430 DEBUG findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,430 DEBUG findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,430 DEBUG findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,430 DEBUG findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,430 DEBUG findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,430 DEBUG findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,430 DEBUG findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,430 DEBUG findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,430 DEBUG findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,430 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,430 DEBUG findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,430 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,430 DEBUG findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,430 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,430 DEBUG findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,430 DEBUG findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,430 DEBUG findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,430 DEBUG findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,430 DEBUG findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,431 DEBUG findfont: Matching cmmi10:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to cmmi10 ('/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf') with score of 0.050000.
2022-04-04 16:59:11,431 DEBUG findfont: Matching cmb10:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2022-04-04 16:59:11,431 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,431 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,431 DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,431 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,431 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,431 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,431 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,432 DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,432 DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,432 DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,432 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-04-04 16:59:11,432 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,432 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,432 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,432 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,432 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-04-04 16:59:11,432 DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 0.05
2022-04-04 16:59:11,432 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,432 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,432 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,432 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,432 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,432 DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,432 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-04-04 16:59:11,432 DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,432 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,432 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,432 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,433 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,433 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,433 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,433 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-04-04 16:59:11,433 DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,433 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,433 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,433 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,433 DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,433 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,433 DEBUG findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,433 DEBUG findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,433 DEBUG findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,433 DEBUG findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,433 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,433 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,433 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,433 DEBUG findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,433 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,433 DEBUG findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,434 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,434 DEBUG findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,434 DEBUG findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,434 DEBUG findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,434 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,434 DEBUG findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,434 DEBUG findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,434 DEBUG findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,434 DEBUG findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,434 DEBUG findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,434 DEBUG findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,434 DEBUG findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,434 DEBUG findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,434 DEBUG findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,434 DEBUG findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,434 DEBUG findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,434 DEBUG findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,434 DEBUG findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,434 DEBUG findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,434 DEBUG findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,434 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2022-04-04 16:59:11,435 DEBUG findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,435 DEBUG findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,435 DEBUG findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,435 DEBUG findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,435 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,435 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,435 DEBUG findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,435 DEBUG findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,435 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,435 DEBUG findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,435 DEBUG findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,435 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,435 DEBUG findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,435 DEBUG findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,435 DEBUG findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,435 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,435 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,435 DEBUG findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,435 DEBUG findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,435 DEBUG findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,435 DEBUG findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,436 DEBUG findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,436 DEBUG findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,436 DEBUG findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,436 DEBUG findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2022-04-04 16:59:11,436 DEBUG findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,436 DEBUG findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,436 DEBUG findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,436 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2022-04-04 16:59:11,436 DEBUG findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,436 DEBUG findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,436 DEBUG findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,436 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,436 DEBUG findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,436 DEBUG findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,436 DEBUG findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,436 DEBUG findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,436 DEBUG findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,436 DEBUG findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,436 DEBUG findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,436 DEBUG findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,436 DEBUG findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,437 DEBUG findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,437 DEBUG findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,437 DEBUG findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,437 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,437 DEBUG findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,437 DEBUG findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,437 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,437 DEBUG findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,437 DEBUG findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,437 DEBUG findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,437 DEBUG findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,437 DEBUG findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,437 DEBUG findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,437 DEBUG findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,437 DEBUG findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,437 DEBUG findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,438 DEBUG findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,438 DEBUG findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,438 DEBUG findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,438 DEBUG findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,438 DEBUG findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,438 DEBUG findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,438 DEBUG findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,438 DEBUG findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,438 DEBUG findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,438 DEBUG findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,439 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,439 DEBUG findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,439 DEBUG findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,439 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,439 DEBUG findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,439 DEBUG findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,439 DEBUG findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,439 DEBUG findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,439 DEBUG findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,439 DEBUG findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,439 DEBUG findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,439 DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,439 DEBUG findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,439 DEBUG findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,439 DEBUG findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,440 DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,440 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2022-04-04 16:59:11,440 DEBUG findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,440 DEBUG findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,440 DEBUG findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,440 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,440 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,440 DEBUG findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,440 DEBUG findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,440 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,440 DEBUG findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,440 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,440 DEBUG findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,440 DEBUG findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,440 DEBUG findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,440 DEBUG findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,440 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,441 DEBUG findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,441 DEBUG findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,441 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,441 DEBUG findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,441 DEBUG findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2022-04-04 16:59:11,441 DEBUG findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,441 DEBUG findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,441 DEBUG findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,441 DEBUG findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,441 DEBUG findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,441 DEBUG findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,441 DEBUG findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,441 DEBUG findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,441 DEBUG findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,441 DEBUG findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,441 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2022-04-04 16:59:11,441 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,441 DEBUG findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,441 DEBUG findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,441 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,442 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,442 DEBUG findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,442 DEBUG findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,442 DEBUG findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,442 DEBUG findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2022-04-04 16:59:11,442 DEBUG findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,442 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,442 DEBUG findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,442 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,442 DEBUG findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,442 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,442 DEBUG findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,442 DEBUG findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,442 DEBUG findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,442 DEBUG findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,442 DEBUG findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,442 DEBUG findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,442 DEBUG findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,442 DEBUG findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,442 DEBUG findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,443 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2022-04-04 16:59:11,443 DEBUG findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-04 16:59:11,443 DEBUG findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,443 DEBUG findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,443 DEBUG findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,443 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,443 DEBUG findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2022-04-04 16:59:11,443 DEBUG findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,443 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,443 DEBUG findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,443 DEBUG findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,443 DEBUG findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,443 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,443 DEBUG findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,443 DEBUG findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,443 DEBUG findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,443 DEBUG findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,443 DEBUG findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,443 DEBUG findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,443 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,443 DEBUG findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,443 DEBUG findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,444 DEBUG findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,444 DEBUG findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,444 DEBUG findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2022-04-04 16:59:11,444 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2022-04-04 16:59:11,444 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,444 DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,444 DEBUG findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,444 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2022-04-04 16:59:11,444 DEBUG findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,444 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,444 DEBUG findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,444 DEBUG findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,444 DEBUG findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,444 DEBUG findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,444 DEBUG findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,444 DEBUG findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,444 DEBUG findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,444 DEBUG findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,444 DEBUG findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,444 DEBUG findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,445 DEBUG findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,445 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2022-04-04 16:59:11,445 DEBUG findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,445 DEBUG findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,445 DEBUG findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,445 DEBUG findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,445 DEBUG findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,445 DEBUG findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,445 DEBUG findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,445 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2022-04-04 16:59:11,445 DEBUG findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,445 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-04 16:59:11,445 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,445 DEBUG findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,445 DEBUG findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,445 DEBUG findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,445 DEBUG findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,445 DEBUG findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,445 DEBUG findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,445 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,445 DEBUG findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,446 DEBUG findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,446 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,446 DEBUG findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,446 DEBUG findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,446 DEBUG findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,446 DEBUG findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,446 DEBUG findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,446 DEBUG findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,446 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,446 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,446 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,446 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2022-04-04 16:59:11,446 DEBUG findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,446 DEBUG findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,446 DEBUG findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,446 DEBUG findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,446 DEBUG findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,446 DEBUG findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,446 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,446 DEBUG findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,446 DEBUG findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,446 DEBUG findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,447 DEBUG findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,447 DEBUG findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,447 DEBUG findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,447 DEBUG findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,447 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,447 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,447 DEBUG findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,447 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,447 DEBUG findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,447 DEBUG findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,447 DEBUG findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,447 DEBUG findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,447 DEBUG findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,447 DEBUG findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,447 DEBUG findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,447 DEBUG findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,447 DEBUG findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,447 DEBUG findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,448 DEBUG findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,448 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,448 DEBUG findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,448 DEBUG findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,448 DEBUG findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2022-04-04 16:59:11,448 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,448 DEBUG findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,448 DEBUG findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,448 DEBUG findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,448 DEBUG findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,448 DEBUG findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,448 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,448 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,448 DEBUG findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,448 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,448 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,449 DEBUG findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,449 DEBUG findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,449 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,449 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,449 DEBUG findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,449 DEBUG findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,449 DEBUG findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,449 DEBUG findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,449 DEBUG findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,449 DEBUG findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,449 DEBUG findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2022-04-04 16:59:11,449 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,449 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,449 DEBUG findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,450 DEBUG findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,450 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,450 DEBUG findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,450 DEBUG findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,450 DEBUG findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,450 DEBUG findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,450 DEBUG findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,450 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,450 DEBUG findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,450 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,450 DEBUG findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,450 DEBUG findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,450 DEBUG findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,450 DEBUG findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,450 DEBUG findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,450 DEBUG findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,450 DEBUG findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,450 DEBUG findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,450 DEBUG findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,451 DEBUG findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,451 DEBUG findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,451 DEBUG findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,451 DEBUG findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,451 DEBUG findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,451 DEBUG findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2022-04-04 16:59:11,451 DEBUG findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,451 DEBUG findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,451 DEBUG findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,451 DEBUG findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,451 DEBUG findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,451 DEBUG findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,451 DEBUG findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,451 DEBUG findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,451 DEBUG findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,451 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,451 DEBUG findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,451 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,451 DEBUG findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,451 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,451 DEBUG findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,452 DEBUG findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,452 DEBUG findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,452 DEBUG findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,452 DEBUG findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,452 DEBUG findfont: Matching cmb10:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to cmb10 ('/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf') with score of 0.050000.
2022-04-04 16:59:11,452 DEBUG findfont: Matching cmss10:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2022-04-04 16:59:11,452 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,452 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,452 DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,452 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,453 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,453 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,453 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,453 DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,453 DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,453 DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,453 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-04-04 16:59:11,453 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,453 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,453 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,453 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,453 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-04-04 16:59:11,453 DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,453 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,453 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,453 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,453 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,453 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,453 DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 0.05
2022-04-04 16:59:11,453 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-04-04 16:59:11,453 DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,454 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,454 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,454 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,454 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,454 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,454 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,454 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-04-04 16:59:11,454 DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,454 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,454 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,454 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,454 DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,454 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,454 DEBUG findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,454 DEBUG findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,454 DEBUG findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,454 DEBUG findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,454 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,454 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,454 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,454 DEBUG findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,454 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,455 DEBUG findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,455 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,455 DEBUG findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,455 DEBUG findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,455 DEBUG findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,455 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,455 DEBUG findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,455 DEBUG findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,455 DEBUG findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,455 DEBUG findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,455 DEBUG findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,455 DEBUG findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,455 DEBUG findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,455 DEBUG findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,455 DEBUG findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,455 DEBUG findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,455 DEBUG findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,455 DEBUG findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,455 DEBUG findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,455 DEBUG findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,455 DEBUG findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,455 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2022-04-04 16:59:11,456 DEBUG findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,456 DEBUG findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,456 DEBUG findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,456 DEBUG findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,456 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,456 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,456 DEBUG findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,456 DEBUG findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,456 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,456 DEBUG findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,456 DEBUG findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,456 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,456 DEBUG findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,456 DEBUG findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,456 DEBUG findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,456 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,456 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,456 DEBUG findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,456 DEBUG findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,456 DEBUG findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,456 DEBUG findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,457 DEBUG findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,457 DEBUG findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,457 DEBUG findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,457 DEBUG findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2022-04-04 16:59:11,457 DEBUG findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,457 DEBUG findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,457 DEBUG findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,457 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2022-04-04 16:59:11,457 DEBUG findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,457 DEBUG findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,457 DEBUG findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,457 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,457 DEBUG findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,457 DEBUG findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,457 DEBUG findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,457 DEBUG findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,457 DEBUG findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,457 DEBUG findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,457 DEBUG findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,457 DEBUG findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,457 DEBUG findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,457 DEBUG findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,458 DEBUG findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,458 DEBUG findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,458 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,458 DEBUG findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,458 DEBUG findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,458 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,458 DEBUG findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,458 DEBUG findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,458 DEBUG findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,458 DEBUG findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,458 DEBUG findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,458 DEBUG findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,458 DEBUG findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,458 DEBUG findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,458 DEBUG findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,458 DEBUG findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,458 DEBUG findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,458 DEBUG findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,458 DEBUG findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,458 DEBUG findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,458 DEBUG findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,458 DEBUG findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,459 DEBUG findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,459 DEBUG findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,459 DEBUG findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,459 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,459 DEBUG findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,459 DEBUG findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,459 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,459 DEBUG findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,459 DEBUG findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,459 DEBUG findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,459 DEBUG findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,459 DEBUG findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,459 DEBUG findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,459 DEBUG findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,459 DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,459 DEBUG findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,459 DEBUG findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,459 DEBUG findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,459 DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,459 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2022-04-04 16:59:11,459 DEBUG findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,459 DEBUG findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,460 DEBUG findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,460 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,460 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,460 DEBUG findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,460 DEBUG findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,460 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,460 DEBUG findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,460 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,460 DEBUG findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,460 DEBUG findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,460 DEBUG findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,460 DEBUG findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,460 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,460 DEBUG findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,460 DEBUG findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,460 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,460 DEBUG findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,460 DEBUG findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2022-04-04 16:59:11,460 DEBUG findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,460 DEBUG findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,460 DEBUG findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,460 DEBUG findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,461 DEBUG findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,461 DEBUG findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,461 DEBUG findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,461 DEBUG findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,461 DEBUG findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,461 DEBUG findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,461 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2022-04-04 16:59:11,461 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,461 DEBUG findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,461 DEBUG findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,461 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,461 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,461 DEBUG findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,461 DEBUG findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,461 DEBUG findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,461 DEBUG findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2022-04-04 16:59:11,461 DEBUG findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,461 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,461 DEBUG findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,461 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,461 DEBUG findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,461 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,462 DEBUG findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,462 DEBUG findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,462 DEBUG findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,462 DEBUG findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,462 DEBUG findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,462 DEBUG findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,462 DEBUG findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,462 DEBUG findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,462 DEBUG findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,462 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2022-04-04 16:59:11,462 DEBUG findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-04 16:59:11,462 DEBUG findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,462 DEBUG findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,462 DEBUG findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,462 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,462 DEBUG findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2022-04-04 16:59:11,462 DEBUG findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,462 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,462 DEBUG findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,462 DEBUG findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,462 DEBUG findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,462 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,463 DEBUG findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,463 DEBUG findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,463 DEBUG findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,463 DEBUG findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,463 DEBUG findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,463 DEBUG findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,463 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,463 DEBUG findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,463 DEBUG findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,463 DEBUG findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,463 DEBUG findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,463 DEBUG findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2022-04-04 16:59:11,463 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2022-04-04 16:59:11,463 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,463 DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,463 DEBUG findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,463 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2022-04-04 16:59:11,463 DEBUG findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,463 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,463 DEBUG findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,463 DEBUG findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,463 DEBUG findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,464 DEBUG findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,464 DEBUG findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,464 DEBUG findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,464 DEBUG findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,464 DEBUG findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,464 DEBUG findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,464 DEBUG findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,464 DEBUG findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,464 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2022-04-04 16:59:11,464 DEBUG findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,464 DEBUG findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,464 DEBUG findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,464 DEBUG findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,464 DEBUG findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,464 DEBUG findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,464 DEBUG findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,464 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2022-04-04 16:59:11,464 DEBUG findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,464 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-04 16:59:11,464 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,464 DEBUG findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,464 DEBUG findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,465 DEBUG findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,465 DEBUG findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,465 DEBUG findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,465 DEBUG findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,465 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,465 DEBUG findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,465 DEBUG findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,465 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,465 DEBUG findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,465 DEBUG findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,465 DEBUG findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,465 DEBUG findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,465 DEBUG findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,465 DEBUG findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,465 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,465 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,465 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,465 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2022-04-04 16:59:11,465 DEBUG findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,465 DEBUG findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,465 DEBUG findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,465 DEBUG findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,466 DEBUG findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,466 DEBUG findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,466 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,466 DEBUG findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,466 DEBUG findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,466 DEBUG findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,466 DEBUG findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,466 DEBUG findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,466 DEBUG findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,466 DEBUG findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,466 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,466 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,466 DEBUG findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,466 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,466 DEBUG findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,466 DEBUG findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,466 DEBUG findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,466 DEBUG findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,466 DEBUG findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,466 DEBUG findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,466 DEBUG findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,466 DEBUG findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,467 DEBUG findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,467 DEBUG findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,467 DEBUG findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,467 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,467 DEBUG findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,467 DEBUG findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,467 DEBUG findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2022-04-04 16:59:11,467 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,467 DEBUG findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,467 DEBUG findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,467 DEBUG findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,467 DEBUG findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,467 DEBUG findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,467 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,467 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,467 DEBUG findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,467 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,467 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,467 DEBUG findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,467 DEBUG findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,467 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,467 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,468 DEBUG findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,468 DEBUG findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,468 DEBUG findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,468 DEBUG findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,468 DEBUG findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,468 DEBUG findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,468 DEBUG findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2022-04-04 16:59:11,468 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,468 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,468 DEBUG findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,468 DEBUG findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,468 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,468 DEBUG findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,468 DEBUG findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,468 DEBUG findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,468 DEBUG findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,468 DEBUG findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,468 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,468 DEBUG findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,468 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,468 DEBUG findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,468 DEBUG findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,469 DEBUG findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,469 DEBUG findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,469 DEBUG findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,469 DEBUG findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,469 DEBUG findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,469 DEBUG findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,469 DEBUG findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,469 DEBUG findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,469 DEBUG findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,469 DEBUG findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,469 DEBUG findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,469 DEBUG findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,469 DEBUG findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2022-04-04 16:59:11,469 DEBUG findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,469 DEBUG findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,469 DEBUG findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,469 DEBUG findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,469 DEBUG findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,469 DEBUG findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,469 DEBUG findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,469 DEBUG findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,469 DEBUG findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,470 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,470 DEBUG findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,470 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,470 DEBUG findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,470 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,470 DEBUG findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,470 DEBUG findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,470 DEBUG findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,470 DEBUG findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,470 DEBUG findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,470 DEBUG findfont: Matching cmss10:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to cmss10 ('/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf') with score of 0.050000.
2022-04-04 16:59:11,470 DEBUG findfont: Matching cmex10:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2022-04-04 16:59:11,471 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,471 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,471 DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,471 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,471 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,471 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,471 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,471 DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 0.05
2022-04-04 16:59:11,471 DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,471 DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,471 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-04-04 16:59:11,471 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,471 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,471 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,471 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,471 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-04-04 16:59:11,471 DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,471 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,471 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,471 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,471 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,472 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,472 DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,472 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-04-04 16:59:11,472 DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,472 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,472 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,472 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,472 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,472 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,472 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,472 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-04-04 16:59:11,472 DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,472 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,472 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,472 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,472 DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,472 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,472 DEBUG findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,472 DEBUG findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,472 DEBUG findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,472 DEBUG findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,472 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,473 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,473 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,473 DEBUG findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,473 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,473 DEBUG findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,473 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,473 DEBUG findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,473 DEBUG findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,473 DEBUG findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,473 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,473 DEBUG findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,473 DEBUG findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,473 DEBUG findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,473 DEBUG findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,473 DEBUG findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,473 DEBUG findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,473 DEBUG findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,473 DEBUG findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,473 DEBUG findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,473 DEBUG findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,473 DEBUG findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,473 DEBUG findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,474 DEBUG findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,474 DEBUG findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,474 DEBUG findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,474 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2022-04-04 16:59:11,474 DEBUG findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,474 DEBUG findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,474 DEBUG findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,474 DEBUG findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,474 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,474 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,474 DEBUG findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,474 DEBUG findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,474 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,474 DEBUG findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,474 DEBUG findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,474 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,474 DEBUG findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,474 DEBUG findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,474 DEBUG findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,474 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,474 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,474 DEBUG findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,475 DEBUG findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,475 DEBUG findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,475 DEBUG findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,475 DEBUG findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,475 DEBUG findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,475 DEBUG findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,475 DEBUG findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2022-04-04 16:59:11,475 DEBUG findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,475 DEBUG findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,475 DEBUG findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,475 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2022-04-04 16:59:11,475 DEBUG findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,475 DEBUG findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,475 DEBUG findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,475 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,475 DEBUG findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,475 DEBUG findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,475 DEBUG findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,475 DEBUG findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,475 DEBUG findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,475 DEBUG findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,476 DEBUG findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,476 DEBUG findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,476 DEBUG findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,476 DEBUG findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,476 DEBUG findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,476 DEBUG findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,476 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,476 DEBUG findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,476 DEBUG findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,476 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,476 DEBUG findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,476 DEBUG findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,476 DEBUG findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,476 DEBUG findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,476 DEBUG findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,476 DEBUG findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,476 DEBUG findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,476 DEBUG findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,476 DEBUG findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,476 DEBUG findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,476 DEBUG findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,476 DEBUG findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,477 DEBUG findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,477 DEBUG findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,477 DEBUG findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,477 DEBUG findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,477 DEBUG findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,477 DEBUG findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,477 DEBUG findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,477 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,477 DEBUG findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,477 DEBUG findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,477 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,477 DEBUG findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,477 DEBUG findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,477 DEBUG findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,477 DEBUG findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,477 DEBUG findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,477 DEBUG findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,477 DEBUG findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,477 DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,477 DEBUG findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,477 DEBUG findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,478 DEBUG findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,478 DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,478 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2022-04-04 16:59:11,478 DEBUG findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,478 DEBUG findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,478 DEBUG findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,478 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,478 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,478 DEBUG findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,478 DEBUG findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,478 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,478 DEBUG findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,478 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,478 DEBUG findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,478 DEBUG findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,478 DEBUG findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,478 DEBUG findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,478 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,478 DEBUG findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,478 DEBUG findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,478 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,479 DEBUG findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,479 DEBUG findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2022-04-04 16:59:11,479 DEBUG findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,479 DEBUG findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,479 DEBUG findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,479 DEBUG findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,479 DEBUG findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,479 DEBUG findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,479 DEBUG findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,479 DEBUG findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,479 DEBUG findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,479 DEBUG findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,479 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2022-04-04 16:59:11,479 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,479 DEBUG findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,479 DEBUG findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,479 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,479 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,479 DEBUG findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,479 DEBUG findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,480 DEBUG findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,480 DEBUG findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2022-04-04 16:59:11,480 DEBUG findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,480 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,480 DEBUG findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,480 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,480 DEBUG findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,480 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,480 DEBUG findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,480 DEBUG findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,480 DEBUG findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,480 DEBUG findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,480 DEBUG findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,480 DEBUG findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,480 DEBUG findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,480 DEBUG findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,480 DEBUG findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,480 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2022-04-04 16:59:11,480 DEBUG findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-04 16:59:11,480 DEBUG findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,481 DEBUG findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,481 DEBUG findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,481 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,481 DEBUG findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2022-04-04 16:59:11,481 DEBUG findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,481 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,481 DEBUG findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,481 DEBUG findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,481 DEBUG findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,481 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,481 DEBUG findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,481 DEBUG findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,481 DEBUG findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,481 DEBUG findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,481 DEBUG findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,481 DEBUG findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,481 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,481 DEBUG findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,481 DEBUG findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,482 DEBUG findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,482 DEBUG findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,482 DEBUG findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2022-04-04 16:59:11,482 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2022-04-04 16:59:11,482 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,482 DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,482 DEBUG findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,482 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2022-04-04 16:59:11,482 DEBUG findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,482 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,482 DEBUG findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,482 DEBUG findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,482 DEBUG findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,482 DEBUG findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,482 DEBUG findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,482 DEBUG findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,482 DEBUG findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,482 DEBUG findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,482 DEBUG findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,482 DEBUG findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,482 DEBUG findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,483 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2022-04-04 16:59:11,483 DEBUG findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,483 DEBUG findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,483 DEBUG findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,483 DEBUG findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,483 DEBUG findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,483 DEBUG findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,483 DEBUG findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,483 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2022-04-04 16:59:11,483 DEBUG findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,483 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-04 16:59:11,483 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,483 DEBUG findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,483 DEBUG findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,483 DEBUG findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,483 DEBUG findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,483 DEBUG findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,483 DEBUG findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,483 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,483 DEBUG findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,483 DEBUG findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,484 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,484 DEBUG findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,484 DEBUG findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,484 DEBUG findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,484 DEBUG findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,484 DEBUG findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,484 DEBUG findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,484 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,484 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,484 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,484 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2022-04-04 16:59:11,484 DEBUG findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,484 DEBUG findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,484 DEBUG findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,484 DEBUG findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,484 DEBUG findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,484 DEBUG findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,484 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,484 DEBUG findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,484 DEBUG findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,484 DEBUG findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,485 DEBUG findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,485 DEBUG findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,485 DEBUG findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,485 DEBUG findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,485 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,485 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,485 DEBUG findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,485 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,485 DEBUG findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,485 DEBUG findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,485 DEBUG findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,485 DEBUG findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,485 DEBUG findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,485 DEBUG findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,485 DEBUG findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,485 DEBUG findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,485 DEBUG findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,485 DEBUG findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,485 DEBUG findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,485 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,485 DEBUG findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,486 DEBUG findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,486 DEBUG findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2022-04-04 16:59:11,486 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,486 DEBUG findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,486 DEBUG findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,486 DEBUG findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,486 DEBUG findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,486 DEBUG findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,486 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,486 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,486 DEBUG findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,486 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,486 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,486 DEBUG findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,486 DEBUG findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,486 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,486 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,486 DEBUG findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,486 DEBUG findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,486 DEBUG findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,486 DEBUG findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,487 DEBUG findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,487 DEBUG findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,487 DEBUG findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2022-04-04 16:59:11,487 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,487 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,487 DEBUG findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,487 DEBUG findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,487 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,487 DEBUG findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,487 DEBUG findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,487 DEBUG findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,487 DEBUG findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,487 DEBUG findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,487 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,487 DEBUG findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,487 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,487 DEBUG findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,487 DEBUG findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,487 DEBUG findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,488 DEBUG findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,488 DEBUG findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,488 DEBUG findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,488 DEBUG findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,488 DEBUG findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,488 DEBUG findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,488 DEBUG findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,488 DEBUG findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,488 DEBUG findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,488 DEBUG findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,488 DEBUG findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,488 DEBUG findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2022-04-04 16:59:11,488 DEBUG findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,488 DEBUG findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,488 DEBUG findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,488 DEBUG findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,488 DEBUG findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,488 DEBUG findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,488 DEBUG findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,488 DEBUG findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,488 DEBUG findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,489 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,489 DEBUG findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,489 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,489 DEBUG findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,489 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,489 DEBUG findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,489 DEBUG findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,489 DEBUG findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,489 DEBUG findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,489 DEBUG findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,489 DEBUG findfont: Matching cmex10:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to cmex10 ('/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf') with score of 0.050000.
2022-04-04 16:59:11,490 DEBUG findfont: Matching DejaVu Sans:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2022-04-04 16:59:11,490 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,490 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,490 DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,490 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,490 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,490 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-04-04 16:59:11,490 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,490 DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,490 DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,490 DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,490 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-04-04 16:59:11,490 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,490 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,490 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,490 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,491 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-04-04 16:59:11,491 DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,491 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,491 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,491 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,491 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,491 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,491 DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,491 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-04-04 16:59:11,491 DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,491 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,491 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,491 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,491 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,491 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,491 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,491 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-04-04 16:59:11,491 DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,491 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-04-04 16:59:11,491 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,491 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,491 DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,492 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,492 DEBUG findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,492 DEBUG findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,492 DEBUG findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,492 DEBUG findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,492 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,492 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,492 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,492 DEBUG findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,492 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,492 DEBUG findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,492 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,492 DEBUG findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,492 DEBUG findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,492 DEBUG findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,492 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,492 DEBUG findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,492 DEBUG findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,492 DEBUG findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,492 DEBUG findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,492 DEBUG findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,493 DEBUG findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,493 DEBUG findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,493 DEBUG findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,493 DEBUG findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,493 DEBUG findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,493 DEBUG findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,493 DEBUG findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,493 DEBUG findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,493 DEBUG findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,493 DEBUG findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,493 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2022-04-04 16:59:11,493 DEBUG findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,493 DEBUG findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,493 DEBUG findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,493 DEBUG findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,493 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,493 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,493 DEBUG findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,493 DEBUG findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,493 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,493 DEBUG findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,494 DEBUG findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,494 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,494 DEBUG findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,494 DEBUG findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,494 DEBUG findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,494 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,494 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,494 DEBUG findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,494 DEBUG findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,494 DEBUG findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,494 DEBUG findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,494 DEBUG findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,494 DEBUG findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,494 DEBUG findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,494 DEBUG findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2022-04-04 16:59:11,494 DEBUG findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,494 DEBUG findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,494 DEBUG findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,494 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2022-04-04 16:59:11,494 DEBUG findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,494 DEBUG findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,495 DEBUG findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,495 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,495 DEBUG findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,495 DEBUG findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,495 DEBUG findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,495 DEBUG findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,495 DEBUG findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,495 DEBUG findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,495 DEBUG findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,495 DEBUG findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,495 DEBUG findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,495 DEBUG findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,495 DEBUG findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,495 DEBUG findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,495 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,495 DEBUG findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,495 DEBUG findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,495 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,495 DEBUG findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,495 DEBUG findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,495 DEBUG findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,495 DEBUG findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,496 DEBUG findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,496 DEBUG findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,496 DEBUG findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,496 DEBUG findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,496 DEBUG findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,496 DEBUG findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,496 DEBUG findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,496 DEBUG findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,496 DEBUG findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,496 DEBUG findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,496 DEBUG findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,496 DEBUG findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,496 DEBUG findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,496 DEBUG findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,496 DEBUG findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,496 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,496 DEBUG findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,496 DEBUG findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,496 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,496 DEBUG findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,496 DEBUG findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,496 DEBUG findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,497 DEBUG findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,497 DEBUG findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,497 DEBUG findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,497 DEBUG findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,497 DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,497 DEBUG findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,497 DEBUG findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,497 DEBUG findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,497 DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,497 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2022-04-04 16:59:11,497 DEBUG findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,497 DEBUG findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,497 DEBUG findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,497 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,497 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,497 DEBUG findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,497 DEBUG findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,497 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,497 DEBUG findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,498 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,498 DEBUG findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,498 DEBUG findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,498 DEBUG findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,498 DEBUG findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,498 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,498 DEBUG findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,498 DEBUG findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,498 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,498 DEBUG findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,498 DEBUG findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2022-04-04 16:59:11,498 DEBUG findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,498 DEBUG findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,498 DEBUG findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,498 DEBUG findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,498 DEBUG findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,498 DEBUG findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,498 DEBUG findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,498 DEBUG findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,498 DEBUG findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,499 DEBUG findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,499 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2022-04-04 16:59:11,499 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,499 DEBUG findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,499 DEBUG findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,499 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,499 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,499 DEBUG findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,499 DEBUG findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,499 DEBUG findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,499 DEBUG findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2022-04-04 16:59:11,499 DEBUG findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,499 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,499 DEBUG findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,499 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,499 DEBUG findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,499 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,499 DEBUG findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,499 DEBUG findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,499 DEBUG findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,499 DEBUG findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,500 DEBUG findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,500 DEBUG findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,500 DEBUG findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,500 DEBUG findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,500 DEBUG findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,500 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2022-04-04 16:59:11,500 DEBUG findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-04 16:59:11,500 DEBUG findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,500 DEBUG findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,500 DEBUG findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,500 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,500 DEBUG findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2022-04-04 16:59:11,500 DEBUG findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,500 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,500 DEBUG findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,500 DEBUG findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,500 DEBUG findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,500 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,500 DEBUG findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,500 DEBUG findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,500 DEBUG findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,500 DEBUG findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,501 DEBUG findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,501 DEBUG findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,501 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,501 DEBUG findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,501 DEBUG findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,501 DEBUG findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,501 DEBUG findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,501 DEBUG findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2022-04-04 16:59:11,501 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2022-04-04 16:59:11,501 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,501 DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,501 DEBUG findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,501 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2022-04-04 16:59:11,501 DEBUG findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,501 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,501 DEBUG findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,501 DEBUG findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,501 DEBUG findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,501 DEBUG findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,501 DEBUG findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,501 DEBUG findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,502 DEBUG findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,502 DEBUG findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,502 DEBUG findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,502 DEBUG findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,502 DEBUG findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,502 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2022-04-04 16:59:11,502 DEBUG findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,502 DEBUG findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,502 DEBUG findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,502 DEBUG findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,502 DEBUG findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,502 DEBUG findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,502 DEBUG findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,502 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2022-04-04 16:59:11,502 DEBUG findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,502 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-04 16:59:11,502 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,502 DEBUG findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,502 DEBUG findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,502 DEBUG findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,502 DEBUG findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,503 DEBUG findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,503 DEBUG findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,503 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,503 DEBUG findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,503 DEBUG findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,503 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,503 DEBUG findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,503 DEBUG findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,503 DEBUG findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,503 DEBUG findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,503 DEBUG findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,503 DEBUG findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,503 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,503 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,503 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,503 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2022-04-04 16:59:11,503 DEBUG findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,503 DEBUG findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,503 DEBUG findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,503 DEBUG findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,503 DEBUG findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,504 DEBUG findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,504 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,504 DEBUG findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,504 DEBUG findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,504 DEBUG findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,504 DEBUG findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,504 DEBUG findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,504 DEBUG findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,504 DEBUG findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,504 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,504 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,504 DEBUG findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,504 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,504 DEBUG findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,504 DEBUG findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,504 DEBUG findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,504 DEBUG findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,504 DEBUG findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,504 DEBUG findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,504 DEBUG findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,504 DEBUG findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,504 DEBUG findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,505 DEBUG findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,505 DEBUG findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,505 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,505 DEBUG findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,505 DEBUG findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,505 DEBUG findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2022-04-04 16:59:11,505 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,505 DEBUG findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,505 DEBUG findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,505 DEBUG findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,505 DEBUG findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,505 DEBUG findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,505 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,505 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,505 DEBUG findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,505 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,505 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,505 DEBUG findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,505 DEBUG findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,505 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,505 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,505 DEBUG findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,506 DEBUG findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,506 DEBUG findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,506 DEBUG findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,506 DEBUG findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,506 DEBUG findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,506 DEBUG findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2022-04-04 16:59:11,506 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,506 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,506 DEBUG findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,506 DEBUG findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,506 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,506 DEBUG findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,506 DEBUG findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,506 DEBUG findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,506 DEBUG findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,506 DEBUG findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,506 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,506 DEBUG findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,506 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,506 DEBUG findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,506 DEBUG findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,506 DEBUG findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,507 DEBUG findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,507 DEBUG findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,507 DEBUG findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,507 DEBUG findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,507 DEBUG findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,507 DEBUG findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,507 DEBUG findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,507 DEBUG findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,507 DEBUG findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,507 DEBUG findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,507 DEBUG findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,507 DEBUG findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2022-04-04 16:59:11,507 DEBUG findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,507 DEBUG findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,507 DEBUG findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,507 DEBUG findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,507 DEBUG findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,507 DEBUG findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,507 DEBUG findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,507 DEBUG findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,507 DEBUG findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,508 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,508 DEBUG findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,508 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,508 DEBUG findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,508 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,508 DEBUG findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,508 DEBUG findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,508 DEBUG findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,508 DEBUG findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,508 DEBUG findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,508 DEBUG findfont: Matching DejaVu Sans:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2022-04-04 16:59:11,509 DEBUG findfont: Matching DejaVu Sans:style=italic:variant=normal:weight=normal:stretch=normal:size=10.0.
2022-04-04 16:59:11,509 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,509 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,509 DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,509 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 10.335
2022-04-04 16:59:11,509 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,509 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 1.335
2022-04-04 16:59:11,509 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,509 DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,509 DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,509 DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,509 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 0.15000000000000002
2022-04-04 16:59:11,509 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,509 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,509 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 10.05
2022-04-04 16:59:11,509 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 10.335
2022-04-04 16:59:11,509 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 10.15
2022-04-04 16:59:11,509 DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,510 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 10.05
2022-04-04 16:59:11,510 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,510 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,510 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,510 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,510 DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,510 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2022-04-04 16:59:11,510 DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,510 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,510 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 10.05
2022-04-04 16:59:11,510 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,510 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,510 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,510 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,510 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 0.43499999999999994
2022-04-04 16:59:11,510 DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,510 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 1.05
2022-04-04 16:59:11,510 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2022-04-04 16:59:11,510 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,510 DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,510 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,510 DEBUG findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,511 DEBUG findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,511 DEBUG findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,511 DEBUG findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,511 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,511 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,511 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,511 DEBUG findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,511 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 10.335
2022-04-04 16:59:11,511 DEBUG findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,511 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 10.335
2022-04-04 16:59:11,511 DEBUG findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 11.525
2022-04-04 16:59:11,511 DEBUG findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,511 DEBUG findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 10.335
2022-04-04 16:59:11,511 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,511 DEBUG findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,511 DEBUG findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,511 DEBUG findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,511 DEBUG findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,511 DEBUG findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,511 DEBUG findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,511 DEBUG findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,512 DEBUG findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,512 DEBUG findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,512 DEBUG findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,512 DEBUG findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,512 DEBUG findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,512 DEBUG findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,512 DEBUG findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,512 DEBUG findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,512 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 11.14975
2022-04-04 16:59:11,512 DEBUG findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,512 DEBUG findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,512 DEBUG findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,512 DEBUG findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,512 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,512 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 10.05
2022-04-04 16:59:11,512 DEBUG findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,512 DEBUG findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,512 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,512 DEBUG findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,512 DEBUG findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,512 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,512 DEBUG findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,513 DEBUG findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,513 DEBUG findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,513 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,513 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,513 DEBUG findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,513 DEBUG findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,513 DEBUG findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,513 DEBUG findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,513 DEBUG findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,513 DEBUG findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,513 DEBUG findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,513 DEBUG findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 11.43
2022-04-04 16:59:11,513 DEBUG findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,513 DEBUG findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,513 DEBUG findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,513 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 10.14975
2022-04-04 16:59:11,513 DEBUG findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,513 DEBUG findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,513 DEBUG findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,513 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,513 DEBUG findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 11.145
2022-04-04 16:59:11,513 DEBUG findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,514 DEBUG findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,514 DEBUG findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,514 DEBUG findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,514 DEBUG findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,514 DEBUG findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 10.05
2022-04-04 16:59:11,514 DEBUG findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 11.145
2022-04-04 16:59:11,514 DEBUG findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,514 DEBUG findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,514 DEBUG findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 11.525
2022-04-04 16:59:11,514 DEBUG findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,514 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,514 DEBUG findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,514 DEBUG findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,514 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,514 DEBUG findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,514 DEBUG findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 11.145
2022-04-04 16:59:11,514 DEBUG findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,514 DEBUG findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,514 DEBUG findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,514 DEBUG findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 10.05
2022-04-04 16:59:11,514 DEBUG findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,514 DEBUG findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,515 DEBUG findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,515 DEBUG findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,515 DEBUG findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,515 DEBUG findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,515 DEBUG findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,515 DEBUG findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,515 DEBUG findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 11.145
2022-04-04 16:59:11,515 DEBUG findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,515 DEBUG findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,515 DEBUG findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,515 DEBUG findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,515 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 11.145
2022-04-04 16:59:11,515 DEBUG findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,515 DEBUG findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,515 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 11.525
2022-04-04 16:59:11,515 DEBUG findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,515 DEBUG findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,515 DEBUG findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,515 DEBUG findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,515 DEBUG findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,515 DEBUG findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,515 DEBUG findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,516 DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,516 DEBUG findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 10.05
2022-04-04 16:59:11,516 DEBUG findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,516 DEBUG findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,516 DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,516 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 10.535
2022-04-04 16:59:11,516 DEBUG findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,516 DEBUG findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,516 DEBUG findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,516 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,516 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,516 DEBUG findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,516 DEBUG findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,516 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,516 DEBUG findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,516 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 11.145
2022-04-04 16:59:11,516 DEBUG findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,516 DEBUG findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,516 DEBUG findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,516 DEBUG findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,516 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,516 DEBUG findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,517 DEBUG findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,517 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,517 DEBUG findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,517 DEBUG findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 11.42525
2022-04-04 16:59:11,517 DEBUG findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,517 DEBUG findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,517 DEBUG findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,517 DEBUG findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,517 DEBUG findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,517 DEBUG findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,517 DEBUG findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,517 DEBUG findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,517 DEBUG findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 11.145
2022-04-04 16:59:11,517 DEBUG findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,517 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 11.43
2022-04-04 16:59:11,517 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,517 DEBUG findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,517 DEBUG findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,517 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 10.335
2022-04-04 16:59:11,517 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,517 DEBUG findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,517 DEBUG findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,518 DEBUG findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,518 DEBUG findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 11.25
2022-04-04 16:59:11,518 DEBUG findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,518 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,518 DEBUG findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 10.05
2022-04-04 16:59:11,518 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,518 DEBUG findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 10.05
2022-04-04 16:59:11,518 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,518 DEBUG findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,518 DEBUG findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,518 DEBUG findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,518 DEBUG findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,518 DEBUG findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,518 DEBUG findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 10.05
2022-04-04 16:59:11,518 DEBUG findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,518 DEBUG findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 11.525
2022-04-04 16:59:11,518 DEBUG findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,518 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 11.1925
2022-04-04 16:59:11,518 DEBUG findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 11.535
2022-04-04 16:59:11,518 DEBUG findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,518 DEBUG findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,519 DEBUG findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,519 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 10.05
2022-04-04 16:59:11,519 DEBUG findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 11.62
2022-04-04 16:59:11,519 DEBUG findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,519 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,519 DEBUG findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,519 DEBUG findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,519 DEBUG findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,519 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,519 DEBUG findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,519 DEBUG findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,519 DEBUG findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 11.525
2022-04-04 16:59:11,519 DEBUG findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,519 DEBUG findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,519 DEBUG findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,519 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,519 DEBUG findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,519 DEBUG findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,519 DEBUG findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,519 DEBUG findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,519 DEBUG findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 11.535
2022-04-04 16:59:11,519 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 11.25
2022-04-04 16:59:11,520 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,520 DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 11.525
2022-04-04 16:59:11,520 DEBUG findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,520 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 11.24
2022-04-04 16:59:11,520 DEBUG findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,520 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,520 DEBUG findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,520 DEBUG findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,520 DEBUG findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,520 DEBUG findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,520 DEBUG findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,520 DEBUG findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,520 DEBUG findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,520 DEBUG findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 10.05
2022-04-04 16:59:11,520 DEBUG findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,520 DEBUG findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,520 DEBUG findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,520 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 11.24
2022-04-04 16:59:11,520 DEBUG findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,520 DEBUG findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,520 DEBUG findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,520 DEBUG findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,521 DEBUG findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,521 DEBUG findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,521 DEBUG findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,521 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 11.335
2022-04-04 16:59:11,521 DEBUG findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,521 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 11.535
2022-04-04 16:59:11,521 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,521 DEBUG findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,521 DEBUG findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,521 DEBUG findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,521 DEBUG findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,521 DEBUG findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,521 DEBUG findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,521 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,521 DEBUG findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,521 DEBUG findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 11.145
2022-04-04 16:59:11,521 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,521 DEBUG findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,521 DEBUG findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,521 DEBUG findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,521 DEBUG findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,522 DEBUG findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,522 DEBUG findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,522 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,522 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 10.05
2022-04-04 16:59:11,522 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,522 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 10.25
2022-04-04 16:59:11,522 DEBUG findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,522 DEBUG findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,522 DEBUG findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,522 DEBUG findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,522 DEBUG findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,522 DEBUG findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,522 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 10.335
2022-04-04 16:59:11,522 DEBUG findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,522 DEBUG findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,522 DEBUG findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 11.145
2022-04-04 16:59:11,522 DEBUG findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,522 DEBUG findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,522 DEBUG findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,522 DEBUG findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,522 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 11.145
2022-04-04 16:59:11,522 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,523 DEBUG findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,523 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,523 DEBUG findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,523 DEBUG findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,523 DEBUG findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,523 DEBUG findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,523 DEBUG findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,523 DEBUG findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,523 DEBUG findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,523 DEBUG findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,523 DEBUG findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,523 DEBUG findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,523 DEBUG findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,523 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,523 DEBUG findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,523 DEBUG findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,523 DEBUG findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 11.335
2022-04-04 16:59:11,523 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,523 DEBUG findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 10.05
2022-04-04 16:59:11,523 DEBUG findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,523 DEBUG findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,524 DEBUG findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,524 DEBUG findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,524 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,524 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 10.335
2022-04-04 16:59:11,524 DEBUG findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,524 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,524 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,524 DEBUG findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,524 DEBUG findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,524 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 10.05
2022-04-04 16:59:11,524 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,524 DEBUG findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,524 DEBUG findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,524 DEBUG findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,524 DEBUG findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,524 DEBUG findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,524 DEBUG findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,524 DEBUG findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 10.62
2022-04-04 16:59:11,524 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,524 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,524 DEBUG findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,524 DEBUG findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,525 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,525 DEBUG findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,525 DEBUG findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,525 DEBUG findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,525 DEBUG findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,525 DEBUG findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,525 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,525 DEBUG findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,525 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 10.335
2022-04-04 16:59:11,525 DEBUG findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,525 DEBUG findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,525 DEBUG findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 11.145
2022-04-04 16:59:11,525 DEBUG findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,525 DEBUG findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,525 DEBUG findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,525 DEBUG findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,525 DEBUG findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 11.145
2022-04-04 16:59:11,525 DEBUG findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,525 DEBUG findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,525 DEBUG findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,525 DEBUG findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 11.145
2022-04-04 16:59:11,525 DEBUG findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 11.525
2022-04-04 16:59:11,526 DEBUG findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,526 DEBUG findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 11.1925
2022-04-04 16:59:11,526 DEBUG findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,526 DEBUG findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,526 DEBUG findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,526 DEBUG findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,526 DEBUG findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,526 DEBUG findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,526 DEBUG findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,526 DEBUG findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,526 DEBUG findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,526 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 10.335
2022-04-04 16:59:11,526 DEBUG findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,526 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,526 DEBUG findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,526 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 11.335
2022-04-04 16:59:11,526 DEBUG findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 11.525
2022-04-04 16:59:11,526 DEBUG findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,526 DEBUG findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,526 DEBUG findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,526 DEBUG findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 11.05
2022-04-04 16:59:11,526 DEBUG findfont: Matching DejaVu Sans:style=italic:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf') with score of 0.150000.
2022-04-04 16:59:11,527 DEBUG findfont: Matching DejaVu Sans:style=normal:variant=normal:weight=bold:stretch=normal:size=10.0.
2022-04-04 16:59:11,527 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,527 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,527 DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,527 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.05
2022-04-04 16:59:11,527 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,528 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.05
2022-04-04 16:59:11,528 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,528 DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,528 DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,528 DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,528 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.335
2022-04-04 16:59:11,528 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,528 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,528 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.335
2022-04-04 16:59:11,528 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.05
2022-04-04 16:59:11,528 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-04-04 16:59:11,528 DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,528 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.335
2022-04-04 16:59:11,528 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,528 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,528 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,528 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,528 DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,528 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-04-04 16:59:11,528 DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,528 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,528 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.335
2022-04-04 16:59:11,529 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,529 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,529 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,529 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,529 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.05
2022-04-04 16:59:11,529 DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,529 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.33499999999999996
2022-04-04 16:59:11,529 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2022-04-04 16:59:11,529 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,529 DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,529 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,529 DEBUG findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,529 DEBUG findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,529 DEBUG findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,529 DEBUG findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,529 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,529 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,529 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,529 DEBUG findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,529 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 11.05
2022-04-04 16:59:11,529 DEBUG findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,530 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.05
2022-04-04 16:59:11,530 DEBUG findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.24
2022-04-04 16:59:11,530 DEBUG findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,530 DEBUG findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 11.05
2022-04-04 16:59:11,530 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,530 DEBUG findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,530 DEBUG findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,530 DEBUG findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,530 DEBUG findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,530 DEBUG findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,530 DEBUG findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,530 DEBUG findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,530 DEBUG findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,530 DEBUG findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,530 DEBUG findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,530 DEBUG findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,530 DEBUG findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,530 DEBUG findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,530 DEBUG findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,530 DEBUG findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,530 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.43475
2022-04-04 16:59:11,531 DEBUG findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,531 DEBUG findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,531 DEBUG findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,531 DEBUG findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,531 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,531 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.335
2022-04-04 16:59:11,531 DEBUG findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,531 DEBUG findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,531 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,531 DEBUG findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,531 DEBUG findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,531 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,531 DEBUG findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,531 DEBUG findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,531 DEBUG findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,531 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,531 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,531 DEBUG findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,531 DEBUG findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,531 DEBUG findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,531 DEBUG findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,531 DEBUG findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,532 DEBUG findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,532 DEBUG findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,532 DEBUG findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.715
2022-04-04 16:59:11,532 DEBUG findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,532 DEBUG findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,532 DEBUG findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,532 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.43475
2022-04-04 16:59:11,532 DEBUG findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,532 DEBUG findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,532 DEBUG findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,532 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,532 DEBUG findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.43
2022-04-04 16:59:11,532 DEBUG findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,532 DEBUG findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,532 DEBUG findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,532 DEBUG findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,532 DEBUG findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,532 DEBUG findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.335
2022-04-04 16:59:11,532 DEBUG findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.43
2022-04-04 16:59:11,532 DEBUG findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,532 DEBUG findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,533 DEBUG findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.24
2022-04-04 16:59:11,533 DEBUG findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,533 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,533 DEBUG findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,533 DEBUG findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,533 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,533 DEBUG findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,533 DEBUG findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.43
2022-04-04 16:59:11,533 DEBUG findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,533 DEBUG findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,533 DEBUG findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,533 DEBUG findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.335
2022-04-04 16:59:11,533 DEBUG findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,533 DEBUG findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,533 DEBUG findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,533 DEBUG findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,533 DEBUG findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,533 DEBUG findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,533 DEBUG findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,533 DEBUG findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,534 DEBUG findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.24
2022-04-04 16:59:11,534 DEBUG findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,534 DEBUG findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,534 DEBUG findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,534 DEBUG findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,534 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.43
2022-04-04 16:59:11,534 DEBUG findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,534 DEBUG findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,534 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.24
2022-04-04 16:59:11,534 DEBUG findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,534 DEBUG findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,534 DEBUG findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,534 DEBUG findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,534 DEBUG findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,534 DEBUG findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,534 DEBUG findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,534 DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,534 DEBUG findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.335
2022-04-04 16:59:11,534 DEBUG findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,535 DEBUG findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,535 DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,535 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.25
2022-04-04 16:59:11,535 DEBUG findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,535 DEBUG findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,535 DEBUG findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,535 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,535 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,535 DEBUG findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,535 DEBUG findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,535 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,535 DEBUG findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,535 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.43
2022-04-04 16:59:11,535 DEBUG findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,535 DEBUG findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,535 DEBUG findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,535 DEBUG findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,535 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,535 DEBUG findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,536 DEBUG findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,536 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,536 DEBUG findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,536 DEBUG findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.71025
2022-04-04 16:59:11,536 DEBUG findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,536 DEBUG findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,536 DEBUG findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,536 DEBUG findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,536 DEBUG findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,536 DEBUG findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,536 DEBUG findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,536 DEBUG findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,536 DEBUG findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.43
2022-04-04 16:59:11,536 DEBUG findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,536 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.145
2022-04-04 16:59:11,536 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,536 DEBUG findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,536 DEBUG findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,537 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.05
2022-04-04 16:59:11,537 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,537 DEBUG findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,537 DEBUG findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,537 DEBUG findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,537 DEBUG findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.535
2022-04-04 16:59:11,537 DEBUG findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,537 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,537 DEBUG findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.335
2022-04-04 16:59:11,537 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,537 DEBUG findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 11.335
2022-04-04 16:59:11,537 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,537 DEBUG findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,537 DEBUG findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,537 DEBUG findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,537 DEBUG findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,537 DEBUG findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,537 DEBUG findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.335
2022-04-04 16:59:11,538 DEBUG findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,538 DEBUG findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.24
2022-04-04 16:59:11,538 DEBUG findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,538 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.4775
2022-04-04 16:59:11,538 DEBUG findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.25
2022-04-04 16:59:11,538 DEBUG findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,538 DEBUG findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,538 DEBUG findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,538 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.335
2022-04-04 16:59:11,538 DEBUG findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.335
2022-04-04 16:59:11,538 DEBUG findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,538 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,538 DEBUG findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,538 DEBUG findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,538 DEBUG findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,538 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,538 DEBUG findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,538 DEBUG findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,538 DEBUG findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.24
2022-04-04 16:59:11,538 DEBUG findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,538 DEBUG findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,539 DEBUG findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,539 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,539 DEBUG findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,539 DEBUG findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,539 DEBUG findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,539 DEBUG findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,539 DEBUG findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.25
2022-04-04 16:59:11,539 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.535
2022-04-04 16:59:11,539 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,539 DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.24
2022-04-04 16:59:11,539 DEBUG findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,539 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.145
2022-04-04 16:59:11,539 DEBUG findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,539 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,539 DEBUG findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,539 DEBUG findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,539 DEBUG findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,539 DEBUG findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,539 DEBUG findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,539 DEBUG findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,539 DEBUG findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,540 DEBUG findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.335
2022-04-04 16:59:11,540 DEBUG findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,540 DEBUG findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,540 DEBUG findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,540 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.525
2022-04-04 16:59:11,540 DEBUG findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,540 DEBUG findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,540 DEBUG findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,540 DEBUG findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,540 DEBUG findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,540 DEBUG findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,540 DEBUG findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,540 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.62
2022-04-04 16:59:11,540 DEBUG findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,540 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.25
2022-04-04 16:59:11,540 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,540 DEBUG findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,540 DEBUG findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,540 DEBUG findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,541 DEBUG findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,541 DEBUG findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,541 DEBUG findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,541 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,541 DEBUG findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,541 DEBUG findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.24
2022-04-04 16:59:11,541 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,541 DEBUG findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,541 DEBUG findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,541 DEBUG findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,541 DEBUG findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,541 DEBUG findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,541 DEBUG findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,541 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,541 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.335
2022-04-04 16:59:11,541 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,541 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.535
2022-04-04 16:59:11,541 DEBUG findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,541 DEBUG findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,541 DEBUG findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,541 DEBUG findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,542 DEBUG findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,542 DEBUG findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,542 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.05
2022-04-04 16:59:11,542 DEBUG findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,542 DEBUG findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,542 DEBUG findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.24
2022-04-04 16:59:11,542 DEBUG findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,542 DEBUG findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,542 DEBUG findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,542 DEBUG findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,542 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.24
2022-04-04 16:59:11,542 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,542 DEBUG findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,542 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,542 DEBUG findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,542 DEBUG findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,542 DEBUG findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,542 DEBUG findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,542 DEBUG findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,542 DEBUG findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,542 DEBUG findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,543 DEBUG findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,543 DEBUG findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,543 DEBUG findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,543 DEBUG findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,543 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,543 DEBUG findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,543 DEBUG findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,543 DEBUG findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.62
2022-04-04 16:59:11,543 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,543 DEBUG findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 11.335
2022-04-04 16:59:11,543 DEBUG findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,543 DEBUG findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,543 DEBUG findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,543 DEBUG findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,543 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,543 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.05
2022-04-04 16:59:11,543 DEBUG findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,543 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,543 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,543 DEBUG findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,543 DEBUG findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,543 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.335
2022-04-04 16:59:11,544 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,544 DEBUG findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,544 DEBUG findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,544 DEBUG findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,544 DEBUG findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,544 DEBUG findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,544 DEBUG findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,544 DEBUG findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.335
2022-04-04 16:59:11,544 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,544 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,544 DEBUG findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,544 DEBUG findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,544 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,544 DEBUG findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,544 DEBUG findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,544 DEBUG findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,544 DEBUG findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,544 DEBUG findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,544 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,544 DEBUG findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,545 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.05
2022-04-04 16:59:11,545 DEBUG findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,545 DEBUG findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,545 DEBUG findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 10.24
2022-04-04 16:59:11,545 DEBUG findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,545 DEBUG findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,545 DEBUG findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,545 DEBUG findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,545 DEBUG findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.24
2022-04-04 16:59:11,545 DEBUG findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,545 DEBUG findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,545 DEBUG findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,545 DEBUG findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.24
2022-04-04 16:59:11,545 DEBUG findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.24
2022-04-04 16:59:11,545 DEBUG findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,545 DEBUG findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.4775
2022-04-04 16:59:11,545 DEBUG findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,545 DEBUG findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,545 DEBUG findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,545 DEBUG findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,545 DEBUG findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,546 DEBUG findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,546 DEBUG findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,546 DEBUG findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,546 DEBUG findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,546 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.05
2022-04-04 16:59:11,546 DEBUG findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,546 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,546 DEBUG findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,546 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.05
2022-04-04 16:59:11,546 DEBUG findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.24
2022-04-04 16:59:11,546 DEBUG findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,546 DEBUG findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,546 DEBUG findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,546 DEBUG findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.335
2022-04-04 16:59:11,546 DEBUG findfont: Matching DejaVu Sans:style=normal:variant=normal:weight=bold:stretch=normal:size=10.0 to DejaVu Sans ('/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf') with score of 0.050000.
2022-04-04 16:59:11,547 DEBUG findfont: Matching DejaVu Sans Mono:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2022-04-04 16:59:11,547 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,547 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,547 DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,547 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,547 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,547 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,547 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,547 DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,547 DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,547 DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,547 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-04-04 16:59:11,548 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,548 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,548 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,548 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,548 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-04-04 16:59:11,548 DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,548 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,548 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,548 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,548 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,548 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,548 DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,548 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-04-04 16:59:11,548 DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,548 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,548 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,548 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,548 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,548 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,548 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,548 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-04-04 16:59:11,549 DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,549 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,549 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,549 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 0.05
2022-04-04 16:59:11,549 DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,549 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-04-04 16:59:11,549 DEBUG findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,549 DEBUG findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,549 DEBUG findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,549 DEBUG findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,549 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,549 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,549 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,549 DEBUG findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,549 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,549 DEBUG findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,549 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,549 DEBUG findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,549 DEBUG findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,549 DEBUG findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,550 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,550 DEBUG findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,550 DEBUG findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,550 DEBUG findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,550 DEBUG findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,550 DEBUG findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,550 DEBUG findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,550 DEBUG findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,550 DEBUG findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,550 DEBUG findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,550 DEBUG findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,550 DEBUG findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,550 DEBUG findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,550 DEBUG findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,550 DEBUG findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,550 DEBUG findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,550 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2022-04-04 16:59:11,550 DEBUG findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,550 DEBUG findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,550 DEBUG findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,551 DEBUG findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,551 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,551 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,551 DEBUG findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,551 DEBUG findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,551 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,551 DEBUG findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,551 DEBUG findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,551 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,551 DEBUG findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,551 DEBUG findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,551 DEBUG findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,551 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,551 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,551 DEBUG findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,551 DEBUG findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,551 DEBUG findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,551 DEBUG findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,551 DEBUG findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,551 DEBUG findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,552 DEBUG findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,552 DEBUG findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2022-04-04 16:59:11,552 DEBUG findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,552 DEBUG findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,552 DEBUG findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,552 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2022-04-04 16:59:11,552 DEBUG findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,552 DEBUG findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,552 DEBUG findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,552 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,552 DEBUG findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,552 DEBUG findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,552 DEBUG findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,552 DEBUG findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,552 DEBUG findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,552 DEBUG findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,552 DEBUG findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,552 DEBUG findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,552 DEBUG findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,552 DEBUG findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,552 DEBUG findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,553 DEBUG findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,553 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,553 DEBUG findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,553 DEBUG findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,553 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,553 DEBUG findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,553 DEBUG findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,553 DEBUG findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,553 DEBUG findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,553 DEBUG findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,553 DEBUG findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,553 DEBUG findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,553 DEBUG findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,553 DEBUG findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,553 DEBUG findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,553 DEBUG findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,553 DEBUG findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,553 DEBUG findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,553 DEBUG findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,553 DEBUG findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,553 DEBUG findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,554 DEBUG findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,554 DEBUG findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,554 DEBUG findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,554 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,554 DEBUG findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,554 DEBUG findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,554 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,554 DEBUG findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,554 DEBUG findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,554 DEBUG findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,554 DEBUG findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,554 DEBUG findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,554 DEBUG findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,554 DEBUG findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,554 DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,554 DEBUG findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,554 DEBUG findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,554 DEBUG findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,554 DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,554 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2022-04-04 16:59:11,554 DEBUG findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,555 DEBUG findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,555 DEBUG findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,555 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,555 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,555 DEBUG findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,555 DEBUG findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,555 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,555 DEBUG findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,555 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,555 DEBUG findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,555 DEBUG findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,555 DEBUG findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,555 DEBUG findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,555 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,555 DEBUG findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,555 DEBUG findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,555 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,555 DEBUG findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,555 DEBUG findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2022-04-04 16:59:11,555 DEBUG findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,556 DEBUG findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,556 DEBUG findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,556 DEBUG findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,556 DEBUG findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,556 DEBUG findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,556 DEBUG findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,556 DEBUG findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,556 DEBUG findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,556 DEBUG findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,556 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2022-04-04 16:59:11,556 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,556 DEBUG findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,556 DEBUG findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,556 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,556 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,556 DEBUG findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,556 DEBUG findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,556 DEBUG findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,556 DEBUG findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2022-04-04 16:59:11,556 DEBUG findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,556 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,557 DEBUG findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,557 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,557 DEBUG findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,557 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,557 DEBUG findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,557 DEBUG findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,557 DEBUG findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,557 DEBUG findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,557 DEBUG findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,557 DEBUG findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,557 DEBUG findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,557 DEBUG findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,557 DEBUG findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,557 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2022-04-04 16:59:11,557 DEBUG findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-04 16:59:11,557 DEBUG findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,557 DEBUG findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,557 DEBUG findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,557 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,557 DEBUG findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2022-04-04 16:59:11,558 DEBUG findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,558 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,558 DEBUG findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,558 DEBUG findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,558 DEBUG findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,558 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,558 DEBUG findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,558 DEBUG findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,558 DEBUG findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,558 DEBUG findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,558 DEBUG findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,558 DEBUG findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,558 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,558 DEBUG findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,558 DEBUG findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,558 DEBUG findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,558 DEBUG findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,558 DEBUG findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2022-04-04 16:59:11,558 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2022-04-04 16:59:11,558 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,558 DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,559 DEBUG findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,559 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2022-04-04 16:59:11,559 DEBUG findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,559 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,559 DEBUG findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,559 DEBUG findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,559 DEBUG findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,559 DEBUG findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,559 DEBUG findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,559 DEBUG findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,559 DEBUG findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,559 DEBUG findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,559 DEBUG findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,559 DEBUG findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,559 DEBUG findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,559 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2022-04-04 16:59:11,559 DEBUG findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,559 DEBUG findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,559 DEBUG findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,559 DEBUG findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,559 DEBUG findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,560 DEBUG findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,560 DEBUG findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,560 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2022-04-04 16:59:11,560 DEBUG findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,560 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-04 16:59:11,560 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,560 DEBUG findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,560 DEBUG findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,560 DEBUG findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,560 DEBUG findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,560 DEBUG findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,560 DEBUG findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,560 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,560 DEBUG findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,560 DEBUG findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,560 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,560 DEBUG findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,560 DEBUG findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,560 DEBUG findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,560 DEBUG findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,560 DEBUG findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,561 DEBUG findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,561 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,561 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,561 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,561 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2022-04-04 16:59:11,561 DEBUG findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,561 DEBUG findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,561 DEBUG findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,561 DEBUG findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,561 DEBUG findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,561 DEBUG findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,561 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,561 DEBUG findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,561 DEBUG findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,561 DEBUG findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,561 DEBUG findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,561 DEBUG findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,561 DEBUG findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,561 DEBUG findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,561 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,561 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,562 DEBUG findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,562 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,562 DEBUG findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,562 DEBUG findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,562 DEBUG findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,562 DEBUG findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,562 DEBUG findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,562 DEBUG findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,562 DEBUG findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,562 DEBUG findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,562 DEBUG findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,562 DEBUG findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,562 DEBUG findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,562 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,562 DEBUG findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,562 DEBUG findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,562 DEBUG findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2022-04-04 16:59:11,562 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,562 DEBUG findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,562 DEBUG findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,562 DEBUG findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,563 DEBUG findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,563 DEBUG findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,563 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,563 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,563 DEBUG findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,563 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,563 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,563 DEBUG findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,563 DEBUG findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,563 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,563 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,563 DEBUG findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,563 DEBUG findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,563 DEBUG findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,563 DEBUG findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,563 DEBUG findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,563 DEBUG findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,563 DEBUG findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2022-04-04 16:59:11,563 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,563 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,563 DEBUG findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,564 DEBUG findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,564 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,564 DEBUG findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,564 DEBUG findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,564 DEBUG findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,564 DEBUG findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,564 DEBUG findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,564 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,564 DEBUG findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,564 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,564 DEBUG findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,564 DEBUG findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,564 DEBUG findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,564 DEBUG findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,564 DEBUG findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,564 DEBUG findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,564 DEBUG findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,564 DEBUG findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,564 DEBUG findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,564 DEBUG findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,564 DEBUG findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,564 DEBUG findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,565 DEBUG findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,565 DEBUG findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,565 DEBUG findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2022-04-04 16:59:11,565 DEBUG findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,565 DEBUG findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,565 DEBUG findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,565 DEBUG findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,565 DEBUG findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,565 DEBUG findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,565 DEBUG findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,565 DEBUG findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,565 DEBUG findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,565 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,565 DEBUG findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,565 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,565 DEBUG findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,565 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,565 DEBUG findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,565 DEBUG findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,565 DEBUG findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,565 DEBUG findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,566 DEBUG findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,566 DEBUG findfont: Matching DejaVu Sans Mono:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans Mono ('/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf') with score of 0.050000.
2022-04-04 16:59:11,566 DEBUG findfont: Matching DejaVu Sans Display:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2022-04-04 16:59:11,566 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,566 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,566 DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,566 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,566 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,566 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,566 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,567 DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,567 DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 0.05
2022-04-04 16:59:11,567 DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,567 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-04-04 16:59:11,567 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,567 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,567 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,567 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,567 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-04-04 16:59:11,567 DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,567 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,567 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,567 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,567 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,567 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,567 DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,567 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-04-04 16:59:11,567 DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,568 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,568 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,568 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,568 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,568 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,568 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,568 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-04-04 16:59:11,568 DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,568 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,568 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,568 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,568 DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,568 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,568 DEBUG findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,568 DEBUG findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,568 DEBUG findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,568 DEBUG findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,568 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,569 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,569 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,569 DEBUG findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,569 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,569 DEBUG findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,569 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,569 DEBUG findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,569 DEBUG findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,569 DEBUG findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,569 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,569 DEBUG findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,569 DEBUG findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,569 DEBUG findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,569 DEBUG findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,569 DEBUG findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,569 DEBUG findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,569 DEBUG findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,569 DEBUG findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,569 DEBUG findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,570 DEBUG findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,570 DEBUG findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,570 DEBUG findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,570 DEBUG findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,570 DEBUG findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,570 DEBUG findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,570 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2022-04-04 16:59:11,570 DEBUG findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,570 DEBUG findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,570 DEBUG findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,570 DEBUG findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,570 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,570 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,570 DEBUG findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,570 DEBUG findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,570 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,570 DEBUG findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,570 DEBUG findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,570 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,570 DEBUG findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,571 DEBUG findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,571 DEBUG findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,571 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,571 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,571 DEBUG findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,571 DEBUG findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,571 DEBUG findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,571 DEBUG findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,571 DEBUG findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,571 DEBUG findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,571 DEBUG findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,571 DEBUG findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2022-04-04 16:59:11,571 DEBUG findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,571 DEBUG findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,571 DEBUG findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,571 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2022-04-04 16:59:11,571 DEBUG findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,571 DEBUG findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,571 DEBUG findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,571 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,571 DEBUG findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,572 DEBUG findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,572 DEBUG findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,572 DEBUG findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,572 DEBUG findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,572 DEBUG findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,572 DEBUG findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,572 DEBUG findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,572 DEBUG findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,572 DEBUG findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,572 DEBUG findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,572 DEBUG findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,572 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,572 DEBUG findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,572 DEBUG findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,572 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,572 DEBUG findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,572 DEBUG findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,572 DEBUG findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,572 DEBUG findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,572 DEBUG findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,572 DEBUG findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,572 DEBUG findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,573 DEBUG findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,573 DEBUG findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,573 DEBUG findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,573 DEBUG findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,573 DEBUG findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,573 DEBUG findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,573 DEBUG findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,573 DEBUG findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,573 DEBUG findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,573 DEBUG findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,573 DEBUG findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,573 DEBUG findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,573 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,573 DEBUG findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,573 DEBUG findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,573 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,573 DEBUG findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,573 DEBUG findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,573 DEBUG findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,573 DEBUG findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,573 DEBUG findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,573 DEBUG findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,574 DEBUG findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,574 DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,574 DEBUG findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,574 DEBUG findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,574 DEBUG findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,574 DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,574 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2022-04-04 16:59:11,574 DEBUG findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,574 DEBUG findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,574 DEBUG findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,574 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,574 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,574 DEBUG findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,574 DEBUG findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,574 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,574 DEBUG findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,574 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,574 DEBUG findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,574 DEBUG findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,574 DEBUG findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,574 DEBUG findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,575 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,575 DEBUG findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,575 DEBUG findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,575 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,575 DEBUG findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,575 DEBUG findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2022-04-04 16:59:11,575 DEBUG findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,575 DEBUG findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,575 DEBUG findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,575 DEBUG findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,575 DEBUG findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,575 DEBUG findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,575 DEBUG findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,575 DEBUG findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,575 DEBUG findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2022-04-04 16:59:11,575 DEBUG findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,575 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2022-04-04 16:59:11,575 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,575 DEBUG findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,575 DEBUG findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,575 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,576 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,576 DEBUG findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,576 DEBUG findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,576 DEBUG findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,576 DEBUG findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2022-04-04 16:59:11,576 DEBUG findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,576 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,576 DEBUG findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,576 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,576 DEBUG findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,576 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,576 DEBUG findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,576 DEBUG findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,576 DEBUG findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,576 DEBUG findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,576 DEBUG findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,576 DEBUG findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,576 DEBUG findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,577 DEBUG findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,577 DEBUG findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,577 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2022-04-04 16:59:11,577 DEBUG findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-04 16:59:11,577 DEBUG findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,577 DEBUG findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,577 DEBUG findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,577 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,577 DEBUG findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2022-04-04 16:59:11,577 DEBUG findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,577 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,577 DEBUG findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,577 DEBUG findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,577 DEBUG findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,577 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,577 DEBUG findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,577 DEBUG findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,577 DEBUG findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,577 DEBUG findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,577 DEBUG findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,578 DEBUG findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,578 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,578 DEBUG findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,578 DEBUG findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,578 DEBUG findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,578 DEBUG findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,578 DEBUG findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2022-04-04 16:59:11,578 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2022-04-04 16:59:11,578 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,578 DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,578 DEBUG findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,578 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2022-04-04 16:59:11,578 DEBUG findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,578 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,578 DEBUG findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,578 DEBUG findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,578 DEBUG findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,578 DEBUG findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,578 DEBUG findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,579 DEBUG findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,579 DEBUG findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,579 DEBUG findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,579 DEBUG findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,579 DEBUG findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,579 DEBUG findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,579 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2022-04-04 16:59:11,579 DEBUG findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,579 DEBUG findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,579 DEBUG findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,579 DEBUG findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,579 DEBUG findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,579 DEBUG findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,579 DEBUG findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,579 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2022-04-04 16:59:11,579 DEBUG findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,579 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2022-04-04 16:59:11,579 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,579 DEBUG findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,579 DEBUG findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,580 DEBUG findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,580 DEBUG findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,580 DEBUG findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,580 DEBUG findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,580 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,580 DEBUG findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,580 DEBUG findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,580 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,580 DEBUG findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,580 DEBUG findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,580 DEBUG findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,580 DEBUG findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,580 DEBUG findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,580 DEBUG findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,580 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,580 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,580 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,580 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2022-04-04 16:59:11,580 DEBUG findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,580 DEBUG findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,581 DEBUG findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,581 DEBUG findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,581 DEBUG findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,581 DEBUG findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,581 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,581 DEBUG findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,581 DEBUG findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,581 DEBUG findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,581 DEBUG findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,581 DEBUG findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,581 DEBUG findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,581 DEBUG findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,581 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,581 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,581 DEBUG findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,581 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,581 DEBUG findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,581 DEBUG findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,581 DEBUG findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,581 DEBUG findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,582 DEBUG findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,582 DEBUG findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,582 DEBUG findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,582 DEBUG findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,582 DEBUG findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,582 DEBUG findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,582 DEBUG findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,582 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,582 DEBUG findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,582 DEBUG findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,582 DEBUG findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2022-04-04 16:59:11,582 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,582 DEBUG findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,582 DEBUG findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,582 DEBUG findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,582 DEBUG findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,582 DEBUG findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,582 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,582 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,582 DEBUG findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,582 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,583 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,583 DEBUG findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,583 DEBUG findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,583 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2022-04-04 16:59:11,583 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,583 DEBUG findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,583 DEBUG findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,583 DEBUG findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,583 DEBUG findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,583 DEBUG findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,583 DEBUG findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,583 DEBUG findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2022-04-04 16:59:11,583 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,583 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,583 DEBUG findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,583 DEBUG findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,583 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,583 DEBUG findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,583 DEBUG findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,583 DEBUG findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,583 DEBUG findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,584 DEBUG findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,584 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,584 DEBUG findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,584 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,584 DEBUG findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,584 DEBUG findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,584 DEBUG findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,584 DEBUG findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,584 DEBUG findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,584 DEBUG findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,584 DEBUG findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,584 DEBUG findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,584 DEBUG findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,584 DEBUG findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,584 DEBUG findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,584 DEBUG findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2022-04-04 16:59:11,584 DEBUG findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,584 DEBUG findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,585 DEBUG findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2022-04-04 16:59:11,585 DEBUG findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,585 DEBUG findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,585 DEBUG findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,585 DEBUG findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,585 DEBUG findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,585 DEBUG findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,585 DEBUG findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,585 DEBUG findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,585 DEBUG findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,585 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2022-04-04 16:59:11,585 DEBUG findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,585 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,585 DEBUG findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,585 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2022-04-04 16:59:11,585 DEBUG findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2022-04-04 16:59:11,585 DEBUG findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,585 DEBUG findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,585 DEBUG findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,585 DEBUG findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2022-04-04 16:59:11,586 DEBUG findfont: Matching DejaVu Sans Display:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans Display ('/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf') with score of 0.050000.
2022-04-04 16:59:11,854 INFO MSE deviation of the 1:th estimated GD-refined rotations using register_rotations : 2.3106564237522385
2022-04-04 16:59:12,660 DEBUG locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f90976f2a58>
2022-04-04 16:59:12,660 DEBUG Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f90976f2a58> on colorbar
2022-04-04 16:59:12,660 DEBUG Setting pcolormesh
2022-04-04 16:59:12,902 INFO MSE deviation of the 2:th estimated GD-refined rotations using register_rotations : 1.101901009183615
2022-04-04 16:59:13,715 DEBUG locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f90978f5390>
2022-04-04 16:59:13,715 DEBUG Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f90978f5390> on colorbar
2022-04-04 16:59:13,715 DEBUG Setting pcolormesh
2022-04-04 16:59:13,947 INFO MSE deviation of the 3:th estimated GD-refined rotations using register_rotations : 0.5281249631666319
2022-04-04 17:13:58,794 INFO Results folder is /Users/wdiepeveen/Documents/PhD/Projects/2 - Cryo-EM/src/src/Cryo-EM/tools/../results/expC3_22-04-04_17-13-58_SNR16_N2048_J20_r1_s10_i6
2022-04-04 17:13:59,356 INFO Start Experiment
2022-04-04 17:13:59,358 INFO Running Experiment for SNR = 0.0625 and 2048 images
2022-04-04 17:13:59,359 INFO This experiment illustrates orientation refinement using a lifting approach
2022-04-04 17:13:59,360 INFO Initialize simulation object and CTF filters.
2022-04-04 17:13:59,369 INFO Load 3D map and downsample 3D map to desired grids of 91 x 91 x 91.
2022-04-04 17:13:59,474 INFO Use downsampled map to creat simulation object.
2022-04-04 17:13:59,503 INFO Get true rotation angles generated randomly by the simulation object.
2022-04-04 17:14:01,285 DEBUG Corresponding type is already real float64.
2022-04-04 17:14:01,285 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:14:18,512 INFO Applying forward transformations in pipeline
2022-04-04 17:14:18,513 INFO All forward transformations applied
2022-04-04 17:14:18,514 INFO Loaded 2048 images
2022-04-04 17:14:20,560 DEBUG Corresponding type is already real float64.
2022-04-04 17:14:20,560 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:14:37,630 INFO Applying forward transformations in pipeline
2022-04-04 17:14:37,631 INFO All forward transformations applied
2022-04-04 17:14:37,631 INFO Loaded 2048 images
2022-04-04 17:14:37,632 INFO Initializing density
2022-04-04 17:14:38,073 INFO Initialising Solver
2022-04-04 17:14:38,074 INFO Update data_discrepancies
2022-04-04 17:14:38,075 INFO Computing \|Ag.u - f_i\|^2
2022-04-04 17:14:39,469 DEBUG Corresponding type is already real float64.
2022-04-04 17:14:39,469 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:14:54,550 INFO Computing data fidelity for 14761 rotations and 2048 images at 6%
2022-04-04 17:14:55,849 DEBUG Corresponding type is already real float64.
2022-04-04 17:14:55,849 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:15:11,394 INFO Computing data fidelity for 14761 rotations and 2048 images at 13%
2022-04-04 17:15:12,614 DEBUG Corresponding type is already real float64.
2022-04-04 17:15:12,614 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:15:27,448 INFO Computing data fidelity for 14761 rotations and 2048 images at 20%
2022-04-04 17:15:28,234 DEBUG Corresponding type is already real float64.
2022-04-04 17:15:28,234 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:15:43,131 INFO Computing data fidelity for 14761 rotations and 2048 images at 27%
2022-04-04 17:15:43,965 DEBUG Corresponding type is already real float64.
2022-04-04 17:15:43,965 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:15:59,855 INFO Computing data fidelity for 14761 rotations and 2048 images at 34%
2022-04-04 17:16:00,716 DEBUG Corresponding type is already real float64.
2022-04-04 17:16:00,716 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:16:17,122 INFO Computing data fidelity for 14761 rotations and 2048 images at 41%
2022-04-04 17:16:18,032 DEBUG Corresponding type is already real float64.
2022-04-04 17:16:18,033 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:16:36,064 INFO Computing data fidelity for 14761 rotations and 2048 images at 48%
2022-04-04 17:16:37,478 DEBUG Corresponding type is already real float64.
2022-04-04 17:16:37,478 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:16:53,678 INFO Computing data fidelity for 14761 rotations and 2048 images at 55%
2022-04-04 17:16:54,504 DEBUG Corresponding type is already real float64.
2022-04-04 17:16:54,504 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:17:11,015 INFO Computing data fidelity for 14761 rotations and 2048 images at 62%
2022-04-04 17:17:11,782 DEBUG Corresponding type is already real float64.
2022-04-04 17:17:11,783 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:17:27,085 INFO Computing data fidelity for 14761 rotations and 2048 images at 69%
2022-04-04 17:17:27,820 DEBUG Corresponding type is already real float64.
2022-04-04 17:17:27,821 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:17:43,238 INFO Computing data fidelity for 14761 rotations and 2048 images at 76%
2022-04-04 17:17:44,027 DEBUG Corresponding type is already real float64.
2022-04-04 17:17:44,027 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:17:59,662 INFO Computing data fidelity for 14761 rotations and 2048 images at 83%
2022-04-04 17:18:00,415 DEBUG Corresponding type is already real float64.
2022-04-04 17:18:00,415 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:18:16,939 INFO Computing data fidelity for 14761 rotations and 2048 images at 90%
2022-04-04 17:18:17,930 DEBUG Corresponding type is already real float64.
2022-04-04 17:18:17,930 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:18:34,352 INFO Computing data fidelity for 14761 rotations and 2048 images at 97%
2022-04-04 17:18:34,582 DEBUG Corresponding type is already real float64.
2022-04-04 17:18:34,582 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:18:41,076 INFO Computing data fidelity for 14761 rotations and 2048 images at 100%
2022-04-04 17:18:41,286 INFO Do lambda update step
2022-04-04 17:18:44,001 INFO Do rots update step
2022-04-04 17:18:44,116 INFO Projecting 2048 vectors onto 14761-simplex at 2%
2022-04-04 17:18:44,192 INFO Projecting 2048 vectors onto 14761-simplex at 4%
2022-04-04 17:18:44,267 INFO Projecting 2048 vectors onto 14761-simplex at 7%
2022-04-04 17:18:44,341 INFO Projecting 2048 vectors onto 14761-simplex at 9%
2022-04-04 17:18:44,417 INFO Projecting 2048 vectors onto 14761-simplex at 12%
2022-04-04 17:18:44,491 INFO Projecting 2048 vectors onto 14761-simplex at 14%
2022-04-04 17:18:44,565 INFO Projecting 2048 vectors onto 14761-simplex at 17%
2022-04-04 17:18:44,639 INFO Projecting 2048 vectors onto 14761-simplex at 19%
2022-04-04 17:18:44,712 INFO Projecting 2048 vectors onto 14761-simplex at 21%
2022-04-04 17:18:44,785 INFO Projecting 2048 vectors onto 14761-simplex at 24%
2022-04-04 17:18:44,884 INFO Projecting 2048 vectors onto 14761-simplex at 26%
2022-04-04 17:18:44,957 INFO Projecting 2048 vectors onto 14761-simplex at 29%
2022-04-04 17:18:45,029 INFO Projecting 2048 vectors onto 14761-simplex at 31%
2022-04-04 17:18:45,101 INFO Projecting 2048 vectors onto 14761-simplex at 34%
2022-04-04 17:18:45,174 INFO Projecting 2048 vectors onto 14761-simplex at 36%
2022-04-04 17:18:45,246 INFO Projecting 2048 vectors onto 14761-simplex at 39%
2022-04-04 17:18:45,321 INFO Projecting 2048 vectors onto 14761-simplex at 41%
2022-04-04 17:18:45,400 INFO Projecting 2048 vectors onto 14761-simplex at 43%
2022-04-04 17:18:45,494 INFO Projecting 2048 vectors onto 14761-simplex at 46%
2022-04-04 17:18:45,575 INFO Projecting 2048 vectors onto 14761-simplex at 48%
2022-04-04 17:18:45,690 INFO Projecting 2048 vectors onto 14761-simplex at 51%
2022-04-04 17:18:45,825 INFO Projecting 2048 vectors onto 14761-simplex at 53%
2022-04-04 17:18:45,934 INFO Projecting 2048 vectors onto 14761-simplex at 56%
2022-04-04 17:18:46,030 INFO Projecting 2048 vectors onto 14761-simplex at 58%
2022-04-04 17:18:46,135 INFO Projecting 2048 vectors onto 14761-simplex at 61%
2022-04-04 17:18:46,226 INFO Projecting 2048 vectors onto 14761-simplex at 63%
2022-04-04 17:18:46,319 INFO Projecting 2048 vectors onto 14761-simplex at 65%
2022-04-04 17:18:46,425 INFO Projecting 2048 vectors onto 14761-simplex at 68%
2022-04-04 17:18:46,522 INFO Projecting 2048 vectors onto 14761-simplex at 70%
2022-04-04 17:18:46,623 INFO Projecting 2048 vectors onto 14761-simplex at 73%
2022-04-04 17:18:46,757 INFO Projecting 2048 vectors onto 14761-simplex at 75%
2022-04-04 17:18:46,861 INFO Projecting 2048 vectors onto 14761-simplex at 78%
2022-04-04 17:18:46,957 INFO Projecting 2048 vectors onto 14761-simplex at 80%
2022-04-04 17:18:47,059 INFO Projecting 2048 vectors onto 14761-simplex at 83%
2022-04-04 17:18:47,162 INFO Projecting 2048 vectors onto 14761-simplex at 85%
2022-04-04 17:18:47,260 INFO Projecting 2048 vectors onto 14761-simplex at 87%
2022-04-04 17:18:47,363 INFO Projecting 2048 vectors onto 14761-simplex at 90%
2022-04-04 17:18:47,460 INFO Projecting 2048 vectors onto 14761-simplex at 92%
2022-04-04 17:18:47,560 INFO Projecting 2048 vectors onto 14761-simplex at 95%
2022-04-04 17:18:47,661 INFO Projecting 2048 vectors onto 14761-simplex at 97%
2022-04-04 17:18:47,738 INFO Projecting 2048 vectors onto 14761-simplex at 100%
2022-04-04 17:18:47,983 INFO Computing 50 means of 614 points in at most 20 steps...
2022-04-04 17:18:48,073 INFO Computing 2048 means at 2%
2022-04-04 17:18:48,083 INFO Computing 50 means of 618 points in at most 20 steps...
2022-04-04 17:18:48,162 INFO Computing 2048 means at 4%
2022-04-04 17:18:48,172 INFO Computing 50 means of 624 points in at most 20 steps...
2022-04-04 17:18:48,264 INFO Computing 2048 means at 7%
2022-04-04 17:18:48,275 INFO Computing 50 means of 606 points in at most 20 steps...
2022-04-04 17:18:48,350 INFO Computing 2048 means at 9%
2022-04-04 17:18:48,359 INFO Computing 50 means of 629 points in at most 20 steps...
2022-04-04 17:18:48,456 INFO Computing 2048 means at 12%
2022-04-04 17:18:48,466 INFO Computing 50 means of 627 points in at most 20 steps...
2022-04-04 17:18:48,543 INFO Computing 2048 means at 14%
2022-04-04 17:18:48,553 INFO Computing 50 means of 650 points in at most 20 steps...
2022-04-04 17:18:48,632 INFO Computing 2048 means at 17%
2022-04-04 17:18:48,642 INFO Computing 50 means of 613 points in at most 20 steps...
2022-04-04 17:18:48,715 INFO Computing 2048 means at 19%
2022-04-04 17:18:48,725 INFO Computing 50 means of 629 points in at most 20 steps...
2022-04-04 17:18:48,798 INFO Computing 2048 means at 21%
2022-04-04 17:18:48,808 INFO Computing 50 means of 622 points in at most 20 steps...
2022-04-04 17:18:48,886 INFO Computing 2048 means at 24%
2022-04-04 17:18:48,897 INFO Computing 50 means of 604 points in at most 20 steps...
2022-04-04 17:18:48,967 INFO Computing 2048 means at 26%
2022-04-04 17:18:48,977 INFO Computing 50 means of 629 points in at most 20 steps...
2022-04-04 17:18:49,051 INFO Computing 2048 means at 29%
2022-04-04 17:18:49,061 INFO Computing 50 means of 590 points in at most 20 steps...
2022-04-04 17:18:49,130 INFO Computing 2048 means at 31%
2022-04-04 17:18:49,140 INFO Computing 50 means of 629 points in at most 20 steps...
2022-04-04 17:18:49,217 INFO Computing 2048 means at 34%
2022-04-04 17:18:49,227 INFO Computing 50 means of 612 points in at most 20 steps...
2022-04-04 17:18:49,302 INFO Computing 2048 means at 36%
2022-04-04 17:18:49,312 INFO Computing 50 means of 602 points in at most 20 steps...
2022-04-04 17:18:49,385 INFO Computing 2048 means at 39%
2022-04-04 17:18:49,395 INFO Computing 50 means of 589 points in at most 20 steps...
2022-04-04 17:18:49,464 INFO Computing 2048 means at 41%
2022-04-04 17:18:49,474 INFO Computing 50 means of 600 points in at most 20 steps...
2022-04-04 17:18:49,546 INFO Computing 2048 means at 43%
2022-04-04 17:18:49,556 INFO Computing 50 means of 632 points in at most 20 steps...
2022-04-04 17:18:49,637 INFO Computing 2048 means at 46%
2022-04-04 17:18:49,647 INFO Computing 50 means of 614 points in at most 20 steps...
2022-04-04 17:18:49,721 INFO Computing 2048 means at 48%
2022-04-04 17:18:49,731 INFO Computing 50 means of 624 points in at most 20 steps...
2022-04-04 17:18:49,808 INFO Computing 2048 means at 51%
2022-04-04 17:18:49,818 INFO Computing 50 means of 609 points in at most 20 steps...
2022-04-04 17:18:49,894 INFO Computing 2048 means at 53%
2022-04-04 17:18:49,905 INFO Computing 50 means of 636 points in at most 20 steps...
2022-04-04 17:18:49,980 INFO Computing 2048 means at 56%
2022-04-04 17:18:49,990 INFO Computing 50 means of 640 points in at most 20 steps...
2022-04-04 17:18:50,069 INFO Computing 2048 means at 58%
2022-04-04 17:18:50,078 INFO Computing 50 means of 631 points in at most 20 steps...
2022-04-04 17:18:50,157 INFO Computing 2048 means at 61%
2022-04-04 17:18:50,167 INFO Computing 50 means of 606 points in at most 20 steps...
2022-04-04 17:18:50,240 INFO Computing 2048 means at 63%
2022-04-04 17:18:50,250 INFO Computing 50 means of 637 points in at most 20 steps...
2022-04-04 17:18:50,326 INFO Computing 2048 means at 65%
2022-04-04 17:18:50,337 INFO Computing 50 means of 634 points in at most 20 steps...
2022-04-04 17:18:50,418 INFO Computing 2048 means at 68%
2022-04-04 17:18:50,428 INFO Computing 50 means of 615 points in at most 20 steps...
2022-04-04 17:18:50,500 INFO Computing 2048 means at 70%
2022-04-04 17:18:50,510 INFO Computing 50 means of 589 points in at most 20 steps...
2022-04-04 17:18:50,583 INFO Computing 2048 means at 73%
2022-04-04 17:18:50,594 INFO Computing 50 means of 611 points in at most 20 steps...
2022-04-04 17:18:50,668 INFO Computing 2048 means at 75%
2022-04-04 17:18:50,678 INFO Computing 50 means of 623 points in at most 20 steps...
2022-04-04 17:18:50,751 INFO Computing 2048 means at 78%
2022-04-04 17:18:50,760 INFO Computing 50 means of 601 points in at most 20 steps...
2022-04-04 17:18:50,832 INFO Computing 2048 means at 80%
2022-04-04 17:18:50,842 INFO Computing 50 means of 605 points in at most 20 steps...
2022-04-04 17:18:50,916 INFO Computing 2048 means at 83%
2022-04-04 17:18:50,926 INFO Computing 50 means of 610 points in at most 20 steps...
2022-04-04 17:18:50,998 INFO Computing 2048 means at 85%
2022-04-04 17:18:51,008 INFO Computing 50 means of 625 points in at most 20 steps...
2022-04-04 17:18:51,081 INFO Computing 2048 means at 87%
2022-04-04 17:18:51,091 INFO Computing 50 means of 600 points in at most 20 steps...
2022-04-04 17:18:51,161 INFO Computing 2048 means at 90%
2022-04-04 17:18:51,171 INFO Computing 50 means of 611 points in at most 20 steps...
2022-04-04 17:18:51,240 INFO Computing 2048 means at 92%
2022-04-04 17:18:51,250 INFO Computing 50 means of 600 points in at most 20 steps...
2022-04-04 17:18:51,326 INFO Computing 2048 means at 95%
2022-04-04 17:18:51,335 INFO Computing 50 means of 633 points in at most 20 steps...
2022-04-04 17:18:51,407 INFO Computing 2048 means at 97%
2022-04-04 17:18:51,417 INFO Computing 48 means of 614 points in at most 20 steps...
2022-04-04 17:18:51,485 INFO Computing 2048 means at 100%
2022-04-04 17:18:51,933 INFO Do vol update step
2022-04-04 17:18:51,934 INFO Compute adjoint forward mapping on the images
2022-04-04 17:18:53,763 DEBUG Corresponding type is already complex complex128.
2022-04-04 17:18:56,544 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2022-04-04 17:18:56,562 INFO Computing adjoint forward mappings from 2048 rotations at 50%
2022-04-04 17:18:58,265 DEBUG Corresponding type is already complex complex128.
2022-04-04 17:19:01,161 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2022-04-04 17:19:01,177 INFO Computing adjoint forward mappings from 2048 rotations at 100%
2022-04-04 17:19:02,195 DEBUG Corresponding type is already real float64.
2022-04-04 17:19:02,195 DEBUG anufft passed real_type for signal, converting
2022-04-04 17:19:11,573 INFO Computing kernel from 2048 rotations at 50%
2022-04-04 17:19:12,524 DEBUG Corresponding type is already real float64.
2022-04-04 17:19:12,524 DEBUG anufft passed real_type for signal, converting
2022-04-04 17:19:19,713 INFO Computing kernel from 2048 rotations at 100%
2022-04-04 17:19:19,715 INFO Computing non-centered Fourier Transform
2022-04-04 17:19:19,910 INFO Add ramp filter regularisation
2022-04-04 17:19:21,173 INFO Update data_discrepancies
2022-04-04 17:19:21,175 INFO Computing \|Ag.u - f_i\|^2
2022-04-04 17:19:22,155 DEBUG Corresponding type is already real float64.
2022-04-04 17:19:22,156 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:19:38,610 INFO Computing data fidelity for 14761 rotations and 2048 images at 6%
2022-04-04 17:19:39,477 DEBUG Corresponding type is already real float64.
2022-04-04 17:19:39,477 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:19:55,893 INFO Computing data fidelity for 14761 rotations and 2048 images at 13%
2022-04-04 17:19:56,712 DEBUG Corresponding type is already real float64.
2022-04-04 17:19:56,712 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:20:12,772 INFO Computing data fidelity for 14761 rotations and 2048 images at 20%
2022-04-04 17:20:13,659 DEBUG Corresponding type is already real float64.
2022-04-04 17:20:13,659 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:20:29,831 INFO Computing data fidelity for 14761 rotations and 2048 images at 27%
2022-04-04 17:20:30,710 DEBUG Corresponding type is already real float64.
2022-04-04 17:20:30,710 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:20:46,959 INFO Computing data fidelity for 14761 rotations and 2048 images at 34%
2022-04-04 17:20:47,812 DEBUG Corresponding type is already real float64.
2022-04-04 17:20:47,812 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:21:03,795 INFO Computing data fidelity for 14761 rotations and 2048 images at 41%
2022-04-04 17:21:04,609 DEBUG Corresponding type is already real float64.
2022-04-04 17:21:04,609 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:21:20,040 INFO Computing data fidelity for 14761 rotations and 2048 images at 48%
2022-04-04 17:21:20,852 DEBUG Corresponding type is already real float64.
2022-04-04 17:21:20,852 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:21:36,533 INFO Computing data fidelity for 14761 rotations and 2048 images at 55%
2022-04-04 17:21:37,342 DEBUG Corresponding type is already real float64.
2022-04-04 17:21:37,342 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:21:53,351 INFO Computing data fidelity for 14761 rotations and 2048 images at 62%
2022-04-04 17:21:54,257 DEBUG Corresponding type is already real float64.
2022-04-04 17:21:54,267 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:22:10,708 INFO Computing data fidelity for 14761 rotations and 2048 images at 69%
2022-04-04 17:22:11,608 DEBUG Corresponding type is already real float64.
2022-04-04 17:22:11,608 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:22:27,627 INFO Computing data fidelity for 14761 rotations and 2048 images at 76%
2022-04-04 17:22:28,569 DEBUG Corresponding type is already real float64.
2022-04-04 17:22:28,569 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:22:44,576 INFO Computing data fidelity for 14761 rotations and 2048 images at 83%
2022-04-04 17:22:45,410 DEBUG Corresponding type is already real float64.
2022-04-04 17:22:45,410 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:23:01,677 INFO Computing data fidelity for 14761 rotations and 2048 images at 90%
2022-04-04 17:23:02,668 DEBUG Corresponding type is already real float64.
2022-04-04 17:23:02,668 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:23:18,488 INFO Computing data fidelity for 14761 rotations and 2048 images at 97%
2022-04-04 17:23:18,742 DEBUG Corresponding type is already real float64.
2022-04-04 17:23:18,742 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:23:25,363 INFO Computing data fidelity for 14761 rotations and 2048 images at 100%
2022-04-04 17:23:25,595 INFO Do lambda update step
2022-04-04 17:23:29,361 INFO Do rots update step
2022-04-04 17:23:29,531 INFO Projecting 2048 vectors onto 14761-simplex at 2%
2022-04-04 17:23:29,630 INFO Projecting 2048 vectors onto 14761-simplex at 4%
2022-04-04 17:23:29,737 INFO Projecting 2048 vectors onto 14761-simplex at 7%
2022-04-04 17:23:29,846 INFO Projecting 2048 vectors onto 14761-simplex at 9%
2022-04-04 17:23:29,944 INFO Projecting 2048 vectors onto 14761-simplex at 12%
2022-04-04 17:23:30,049 INFO Projecting 2048 vectors onto 14761-simplex at 14%
2022-04-04 17:23:30,155 INFO Projecting 2048 vectors onto 14761-simplex at 17%
2022-04-04 17:23:30,264 INFO Projecting 2048 vectors onto 14761-simplex at 19%
2022-04-04 17:23:30,392 INFO Projecting 2048 vectors onto 14761-simplex at 21%
2022-04-04 17:23:30,486 INFO Projecting 2048 vectors onto 14761-simplex at 24%
2022-04-04 17:23:30,588 INFO Projecting 2048 vectors onto 14761-simplex at 26%
2022-04-04 17:23:30,666 INFO Projecting 2048 vectors onto 14761-simplex at 29%
2022-04-04 17:23:30,740 INFO Projecting 2048 vectors onto 14761-simplex at 31%
2022-04-04 17:23:30,817 INFO Projecting 2048 vectors onto 14761-simplex at 34%
2022-04-04 17:23:30,892 INFO Projecting 2048 vectors onto 14761-simplex at 36%
2022-04-04 17:23:30,969 INFO Projecting 2048 vectors onto 14761-simplex at 39%
2022-04-04 17:23:31,044 INFO Projecting 2048 vectors onto 14761-simplex at 41%
2022-04-04 17:23:31,119 INFO Projecting 2048 vectors onto 14761-simplex at 43%
2022-04-04 17:23:31,193 INFO Projecting 2048 vectors onto 14761-simplex at 46%
2022-04-04 17:23:31,267 INFO Projecting 2048 vectors onto 14761-simplex at 48%
2022-04-04 17:23:31,366 INFO Projecting 2048 vectors onto 14761-simplex at 51%
2022-04-04 17:23:31,441 INFO Projecting 2048 vectors onto 14761-simplex at 53%
2022-04-04 17:23:31,515 INFO Projecting 2048 vectors onto 14761-simplex at 56%
2022-04-04 17:23:31,589 INFO Projecting 2048 vectors onto 14761-simplex at 58%
2022-04-04 17:23:31,662 INFO Projecting 2048 vectors onto 14761-simplex at 61%
2022-04-04 17:23:31,736 INFO Projecting 2048 vectors onto 14761-simplex at 63%
2022-04-04 17:23:31,809 INFO Projecting 2048 vectors onto 14761-simplex at 65%
2022-04-04 17:23:31,883 INFO Projecting 2048 vectors onto 14761-simplex at 68%
2022-04-04 17:23:31,956 INFO Projecting 2048 vectors onto 14761-simplex at 70%
2022-04-04 17:23:32,033 INFO Projecting 2048 vectors onto 14761-simplex at 73%
2022-04-04 17:23:32,138 INFO Projecting 2048 vectors onto 14761-simplex at 75%
2022-04-04 17:23:32,223 INFO Projecting 2048 vectors onto 14761-simplex at 78%
2022-04-04 17:23:32,309 INFO Projecting 2048 vectors onto 14761-simplex at 80%
2022-04-04 17:23:32,397 INFO Projecting 2048 vectors onto 14761-simplex at 83%
2022-04-04 17:23:32,475 INFO Projecting 2048 vectors onto 14761-simplex at 85%
2022-04-04 17:23:32,603 INFO Projecting 2048 vectors onto 14761-simplex at 87%
2022-04-04 17:23:32,696 INFO Projecting 2048 vectors onto 14761-simplex at 90%
2022-04-04 17:23:32,804 INFO Projecting 2048 vectors onto 14761-simplex at 92%
2022-04-04 17:23:32,895 INFO Projecting 2048 vectors onto 14761-simplex at 95%
2022-04-04 17:23:33,007 INFO Projecting 2048 vectors onto 14761-simplex at 97%
2022-04-04 17:23:33,107 INFO Projecting 2048 vectors onto 14761-simplex at 100%
2022-04-04 17:23:33,377 INFO Computing 50 means of 531 points in at most 20 steps...
2022-04-04 17:23:33,539 INFO Computing 2048 means at 2%
2022-04-04 17:23:33,552 INFO Computing 50 means of 532 points in at most 20 steps...
2022-04-04 17:23:33,679 INFO Computing 2048 means at 4%
2022-04-04 17:23:33,693 INFO Computing 50 means of 536 points in at most 20 steps...
2022-04-04 17:23:33,817 INFO Computing 2048 means at 7%
2022-04-04 17:23:33,832 INFO Computing 50 means of 542 points in at most 20 steps...
2022-04-04 17:23:33,956 INFO Computing 2048 means at 9%
2022-04-04 17:23:33,971 INFO Computing 50 means of 520 points in at most 20 steps...
2022-04-04 17:23:34,094 INFO Computing 2048 means at 12%
2022-04-04 17:23:34,106 INFO Computing 50 means of 556 points in at most 20 steps...
2022-04-04 17:23:34,239 INFO Computing 2048 means at 14%
2022-04-04 17:23:34,250 INFO Computing 50 means of 541 points in at most 20 steps...
2022-04-04 17:23:34,417 INFO Computing 2048 means at 17%
2022-04-04 17:23:34,434 INFO Computing 50 means of 543 points in at most 20 steps...
2022-04-04 17:23:34,582 INFO Computing 2048 means at 19%
2022-04-04 17:23:34,594 INFO Computing 50 means of 562 points in at most 20 steps...
2022-04-04 17:23:34,743 INFO Computing 2048 means at 21%
2022-04-04 17:23:34,762 INFO Computing 50 means of 541 points in at most 20 steps...
2022-04-04 17:23:34,902 INFO Computing 2048 means at 24%
2022-04-04 17:23:34,917 INFO Computing 50 means of 552 points in at most 20 steps...
2022-04-04 17:23:35,047 INFO Computing 2048 means at 26%
2022-04-04 17:23:35,057 INFO Computing 50 means of 552 points in at most 20 steps...
2022-04-04 17:23:35,180 INFO Computing 2048 means at 29%
2022-04-04 17:23:35,190 INFO Computing 50 means of 515 points in at most 20 steps...
2022-04-04 17:23:35,305 INFO Computing 2048 means at 31%
2022-04-04 17:23:35,317 INFO Computing 50 means of 537 points in at most 20 steps...
2022-04-04 17:23:35,442 INFO Computing 2048 means at 34%
2022-04-04 17:23:35,461 INFO Computing 50 means of 517 points in at most 20 steps...
2022-04-04 17:23:35,578 INFO Computing 2048 means at 36%
2022-04-04 17:23:35,589 INFO Computing 50 means of 535 points in at most 20 steps...
2022-04-04 17:23:35,711 INFO Computing 2048 means at 39%
2022-04-04 17:23:35,731 INFO Computing 50 means of 558 points in at most 20 steps...
2022-04-04 17:23:35,849 INFO Computing 2048 means at 41%
2022-04-04 17:23:35,867 INFO Computing 50 means of 533 points in at most 20 steps...
2022-04-04 17:23:35,993 INFO Computing 2048 means at 43%
2022-04-04 17:23:36,005 INFO Computing 50 means of 542 points in at most 20 steps...
2022-04-04 17:23:36,124 INFO Computing 2048 means at 46%
2022-04-04 17:23:36,134 INFO Computing 50 means of 563 points in at most 20 steps...
2022-04-04 17:23:36,264 INFO Computing 2048 means at 48%
2022-04-04 17:23:36,284 INFO Computing 50 means of 543 points in at most 20 steps...
2022-04-04 17:23:36,407 INFO Computing 2048 means at 51%
2022-04-04 17:23:36,420 INFO Computing 50 means of 544 points in at most 20 steps...
2022-04-04 17:23:36,540 INFO Computing 2048 means at 53%
2022-04-04 17:23:36,553 INFO Computing 50 means of 549 points in at most 20 steps...
2022-04-04 17:23:36,694 INFO Computing 2048 means at 56%
2022-04-04 17:23:36,705 INFO Computing 50 means of 549 points in at most 20 steps...
2022-04-04 17:23:36,832 INFO Computing 2048 means at 58%
2022-04-04 17:23:36,843 INFO Computing 50 means of 554 points in at most 20 steps...
2022-04-04 17:23:36,969 INFO Computing 2048 means at 61%
2022-04-04 17:23:36,981 INFO Computing 50 means of 553 points in at most 20 steps...
2022-04-04 17:23:37,112 INFO Computing 2048 means at 63%
2022-04-04 17:23:37,125 INFO Computing 50 means of 551 points in at most 20 steps...
2022-04-04 17:23:37,257 INFO Computing 2048 means at 65%
2022-04-04 17:23:37,269 INFO Computing 50 means of 558 points in at most 20 steps...
2022-04-04 17:23:37,389 INFO Computing 2048 means at 68%
2022-04-04 17:23:37,401 INFO Computing 50 means of 543 points in at most 20 steps...
2022-04-04 17:23:37,533 INFO Computing 2048 means at 70%
2022-04-04 17:23:37,544 INFO Computing 50 means of 522 points in at most 20 steps...
2022-04-04 17:23:37,667 INFO Computing 2048 means at 73%
2022-04-04 17:23:37,688 INFO Computing 50 means of 535 points in at most 20 steps...
2022-04-04 17:23:37,818 INFO Computing 2048 means at 75%
2022-04-04 17:23:37,830 INFO Computing 50 means of 528 points in at most 20 steps...
2022-04-04 17:23:37,953 INFO Computing 2048 means at 78%
2022-04-04 17:23:37,971 INFO Computing 50 means of 544 points in at most 20 steps...
2022-04-04 17:23:38,097 INFO Computing 2048 means at 80%
2022-04-04 17:23:38,110 INFO Computing 50 means of 529 points in at most 20 steps...
2022-04-04 17:23:38,250 INFO Computing 2048 means at 83%
2022-04-04 17:23:38,268 INFO Computing 50 means of 538 points in at most 20 steps...
2022-04-04 17:23:38,341 INFO Computing 2048 means at 85%
2022-04-04 17:23:38,351 INFO Computing 50 means of 559 points in at most 20 steps...
2022-04-04 17:23:38,423 INFO Computing 2048 means at 87%
2022-04-04 17:23:38,434 INFO Computing 50 means of 552 points in at most 20 steps...
2022-04-04 17:23:38,500 INFO Computing 2048 means at 90%
2022-04-04 17:23:38,509 INFO Computing 50 means of 526 points in at most 20 steps...
2022-04-04 17:23:38,574 INFO Computing 2048 means at 92%
2022-04-04 17:23:38,584 INFO Computing 50 means of 520 points in at most 20 steps...
2022-04-04 17:23:38,646 INFO Computing 2048 means at 95%
2022-04-04 17:23:38,655 INFO Computing 50 means of 547 points in at most 20 steps...
2022-04-04 17:23:38,720 INFO Computing 2048 means at 97%
2022-04-04 17:23:38,730 INFO Computing 48 means of 519 points in at most 20 steps...
2022-04-04 17:23:38,791 INFO Computing 2048 means at 100%
2022-04-04 17:23:39,262 INFO Do vol update step
2022-04-04 17:23:39,263 INFO Compute adjoint forward mapping on the images
2022-04-04 17:23:41,074 DEBUG Corresponding type is already complex complex128.
2022-04-04 17:23:43,964 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2022-04-04 17:23:43,982 INFO Computing adjoint forward mappings from 2048 rotations at 50%
2022-04-04 17:23:45,698 DEBUG Corresponding type is already complex complex128.
2022-04-04 17:23:48,406 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2022-04-04 17:23:48,422 INFO Computing adjoint forward mappings from 2048 rotations at 100%
2022-04-04 17:23:49,397 DEBUG Corresponding type is already real float64.
2022-04-04 17:23:49,397 DEBUG anufft passed real_type for signal, converting
2022-04-04 17:23:55,753 INFO Computing kernel from 2048 rotations at 50%
2022-04-04 17:23:56,802 DEBUG Corresponding type is already real float64.
2022-04-04 17:23:56,802 DEBUG anufft passed real_type for signal, converting
2022-04-04 17:24:03,580 INFO Computing kernel from 2048 rotations at 100%
2022-04-04 17:24:03,582 INFO Computing non-centered Fourier Transform
2022-04-04 17:24:03,810 INFO Add ramp filter regularisation
2022-04-04 17:24:04,980 INFO Update data_discrepancies
2022-04-04 17:24:04,981 INFO Computing \|Ag.u - f_i\|^2
2022-04-04 17:24:05,999 DEBUG Corresponding type is already real float64.
2022-04-04 17:24:05,999 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:24:24,287 INFO Computing data fidelity for 14761 rotations and 2048 images at 6%
2022-04-04 17:24:25,177 DEBUG Corresponding type is already real float64.
2022-04-04 17:24:25,178 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:24:42,418 INFO Computing data fidelity for 14761 rotations and 2048 images at 13%
2022-04-04 17:24:43,336 DEBUG Corresponding type is already real float64.
2022-04-04 17:24:43,336 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:24:59,587 INFO Computing data fidelity for 14761 rotations and 2048 images at 20%
2022-04-04 17:25:00,455 DEBUG Corresponding type is already real float64.
2022-04-04 17:25:00,455 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:25:16,532 INFO Computing data fidelity for 14761 rotations and 2048 images at 27%
2022-04-04 17:25:17,411 DEBUG Corresponding type is already real float64.
2022-04-04 17:25:17,412 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:25:33,584 INFO Computing data fidelity for 14761 rotations and 2048 images at 34%
2022-04-04 17:25:34,456 DEBUG Corresponding type is already real float64.
2022-04-04 17:25:34,456 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:25:50,589 INFO Computing data fidelity for 14761 rotations and 2048 images at 41%
2022-04-04 17:25:51,413 DEBUG Corresponding type is already real float64.
2022-04-04 17:25:51,413 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:26:06,746 INFO Computing data fidelity for 14761 rotations and 2048 images at 48%
2022-04-04 17:26:07,564 DEBUG Corresponding type is already real float64.
2022-04-04 17:26:07,564 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:26:23,780 INFO Computing data fidelity for 14761 rotations and 2048 images at 55%
2022-04-04 17:26:24,577 DEBUG Corresponding type is already real float64.
2022-04-04 17:26:24,577 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:26:41,342 INFO Computing data fidelity for 14761 rotations and 2048 images at 62%
2022-04-04 17:26:42,167 DEBUG Corresponding type is already real float64.
2022-04-04 17:26:42,167 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:26:57,791 INFO Computing data fidelity for 14761 rotations and 2048 images at 69%
2022-04-04 17:26:58,594 DEBUG Corresponding type is already real float64.
2022-04-04 17:26:58,594 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:27:13,950 INFO Computing data fidelity for 14761 rotations and 2048 images at 76%
2022-04-04 17:27:14,750 DEBUG Corresponding type is already real float64.
2022-04-04 17:27:14,750 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:27:31,253 INFO Computing data fidelity for 14761 rotations and 2048 images at 83%
2022-04-04 17:27:32,085 DEBUG Corresponding type is already real float64.
2022-04-04 17:27:32,085 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:27:47,470 INFO Computing data fidelity for 14761 rotations and 2048 images at 90%
2022-04-04 17:27:48,264 DEBUG Corresponding type is already real float64.
2022-04-04 17:27:48,265 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:28:02,717 INFO Computing data fidelity for 14761 rotations and 2048 images at 97%
2022-04-04 17:28:02,946 DEBUG Corresponding type is already real float64.
2022-04-04 17:28:02,946 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:28:09,456 INFO Computing data fidelity for 14761 rotations and 2048 images at 100%
2022-04-04 17:28:09,702 INFO Do lambda update step
2022-04-04 17:28:12,628 INFO Do rots update step
2022-04-04 17:28:12,742 INFO Projecting 2048 vectors onto 14761-simplex at 2%
2022-04-04 17:28:12,821 INFO Projecting 2048 vectors onto 14761-simplex at 4%
2022-04-04 17:28:12,896 INFO Projecting 2048 vectors onto 14761-simplex at 7%
2022-04-04 17:28:12,970 INFO Projecting 2048 vectors onto 14761-simplex at 9%
2022-04-04 17:28:13,045 INFO Projecting 2048 vectors onto 14761-simplex at 12%
2022-04-04 17:28:13,121 INFO Projecting 2048 vectors onto 14761-simplex at 14%
2022-04-04 17:28:13,194 INFO Projecting 2048 vectors onto 14761-simplex at 17%
2022-04-04 17:28:13,270 INFO Projecting 2048 vectors onto 14761-simplex at 19%
2022-04-04 17:28:13,344 INFO Projecting 2048 vectors onto 14761-simplex at 21%
2022-04-04 17:28:13,420 INFO Projecting 2048 vectors onto 14761-simplex at 24%
2022-04-04 17:28:13,517 INFO Projecting 2048 vectors onto 14761-simplex at 26%
2022-04-04 17:28:13,592 INFO Projecting 2048 vectors onto 14761-simplex at 29%
2022-04-04 17:28:13,669 INFO Projecting 2048 vectors onto 14761-simplex at 31%
2022-04-04 17:28:13,744 INFO Projecting 2048 vectors onto 14761-simplex at 34%
2022-04-04 17:28:13,819 INFO Projecting 2048 vectors onto 14761-simplex at 36%
2022-04-04 17:28:13,894 INFO Projecting 2048 vectors onto 14761-simplex at 39%
2022-04-04 17:28:13,970 INFO Projecting 2048 vectors onto 14761-simplex at 41%
2022-04-04 17:28:14,044 INFO Projecting 2048 vectors onto 14761-simplex at 43%
2022-04-04 17:28:14,121 INFO Projecting 2048 vectors onto 14761-simplex at 46%
2022-04-04 17:28:14,195 INFO Projecting 2048 vectors onto 14761-simplex at 48%
2022-04-04 17:28:14,294 INFO Projecting 2048 vectors onto 14761-simplex at 51%
2022-04-04 17:28:14,370 INFO Projecting 2048 vectors onto 14761-simplex at 53%
2022-04-04 17:28:14,443 INFO Projecting 2048 vectors onto 14761-simplex at 56%
2022-04-04 17:28:14,518 INFO Projecting 2048 vectors onto 14761-simplex at 58%
2022-04-04 17:28:14,592 INFO Projecting 2048 vectors onto 14761-simplex at 61%
2022-04-04 17:28:14,668 INFO Projecting 2048 vectors onto 14761-simplex at 63%
2022-04-04 17:28:14,742 INFO Projecting 2048 vectors onto 14761-simplex at 65%
2022-04-04 17:28:14,818 INFO Projecting 2048 vectors onto 14761-simplex at 68%
2022-04-04 17:28:14,892 INFO Projecting 2048 vectors onto 14761-simplex at 70%
2022-04-04 17:28:14,967 INFO Projecting 2048 vectors onto 14761-simplex at 73%
2022-04-04 17:28:15,064 INFO Projecting 2048 vectors onto 14761-simplex at 75%
2022-04-04 17:28:15,139 INFO Projecting 2048 vectors onto 14761-simplex at 78%
2022-04-04 17:28:15,216 INFO Projecting 2048 vectors onto 14761-simplex at 80%
2022-04-04 17:28:15,290 INFO Projecting 2048 vectors onto 14761-simplex at 83%
2022-04-04 17:28:15,366 INFO Projecting 2048 vectors onto 14761-simplex at 85%
2022-04-04 17:28:15,441 INFO Projecting 2048 vectors onto 14761-simplex at 87%
2022-04-04 17:28:15,518 INFO Projecting 2048 vectors onto 14761-simplex at 90%
2022-04-04 17:28:15,593 INFO Projecting 2048 vectors onto 14761-simplex at 92%
2022-04-04 17:28:15,670 INFO Projecting 2048 vectors onto 14761-simplex at 95%
2022-04-04 17:28:15,744 INFO Projecting 2048 vectors onto 14761-simplex at 97%
2022-04-04 17:28:15,817 INFO Projecting 2048 vectors onto 14761-simplex at 100%
2022-04-04 17:28:15,992 INFO Computing 50 means of 515 points in at most 20 steps...
2022-04-04 17:28:16,085 INFO Computing 2048 means at 2%
2022-04-04 17:28:16,097 INFO Computing 50 means of 504 points in at most 20 steps...
2022-04-04 17:28:16,171 INFO Computing 2048 means at 4%
2022-04-04 17:28:16,181 INFO Computing 50 means of 502 points in at most 20 steps...
2022-04-04 17:28:16,250 INFO Computing 2048 means at 7%
2022-04-04 17:28:16,261 INFO Computing 50 means of 509 points in at most 20 steps...
2022-04-04 17:28:16,326 INFO Computing 2048 means at 9%
2022-04-04 17:28:16,335 INFO Computing 50 means of 492 points in at most 20 steps...
2022-04-04 17:28:16,402 INFO Computing 2048 means at 12%
2022-04-04 17:28:16,412 INFO Computing 50 means of 506 points in at most 20 steps...
2022-04-04 17:28:16,480 INFO Computing 2048 means at 14%
2022-04-04 17:28:16,490 INFO Computing 50 means of 507 points in at most 20 steps...
2022-04-04 17:28:16,558 INFO Computing 2048 means at 17%
2022-04-04 17:28:16,568 INFO Computing 50 means of 522 points in at most 20 steps...
2022-04-04 17:28:16,639 INFO Computing 2048 means at 19%
2022-04-04 17:28:16,649 INFO Computing 50 means of 496 points in at most 20 steps...
2022-04-04 17:28:16,721 INFO Computing 2048 means at 21%
2022-04-04 17:28:16,731 INFO Computing 50 means of 523 points in at most 20 steps...
2022-04-04 17:28:16,804 INFO Computing 2048 means at 24%
2022-04-04 17:28:16,818 INFO Computing 50 means of 502 points in at most 20 steps...
2022-04-04 17:28:16,883 INFO Computing 2048 means at 26%
2022-04-04 17:28:16,893 INFO Computing 50 means of 525 points in at most 20 steps...
2022-04-04 17:28:16,964 INFO Computing 2048 means at 29%
2022-04-04 17:28:16,974 INFO Computing 50 means of 500 points in at most 20 steps...
2022-04-04 17:28:17,040 INFO Computing 2048 means at 31%
2022-04-04 17:28:17,050 INFO Computing 50 means of 493 points in at most 20 steps...
2022-04-04 17:28:17,118 INFO Computing 2048 means at 34%
2022-04-04 17:28:17,127 INFO Computing 50 means of 509 points in at most 20 steps...
2022-04-04 17:28:17,192 INFO Computing 2048 means at 36%
2022-04-04 17:28:17,201 INFO Computing 50 means of 487 points in at most 20 steps...
2022-04-04 17:28:17,270 INFO Computing 2048 means at 39%
2022-04-04 17:28:17,280 INFO Computing 50 means of 498 points in at most 20 steps...
2022-04-04 17:28:17,347 INFO Computing 2048 means at 41%
2022-04-04 17:28:17,358 INFO Computing 50 means of 513 points in at most 20 steps...
2022-04-04 17:28:17,423 INFO Computing 2048 means at 43%
2022-04-04 17:28:17,433 INFO Computing 50 means of 519 points in at most 20 steps...
2022-04-04 17:28:17,503 INFO Computing 2048 means at 46%
2022-04-04 17:28:17,514 INFO Computing 50 means of 532 points in at most 20 steps...
2022-04-04 17:28:17,586 INFO Computing 2048 means at 48%
2022-04-04 17:28:17,599 INFO Computing 50 means of 522 points in at most 20 steps...
2022-04-04 17:28:17,670 INFO Computing 2048 means at 51%
2022-04-04 17:28:17,679 INFO Computing 50 means of 509 points in at most 20 steps...
2022-04-04 17:28:17,748 INFO Computing 2048 means at 53%
2022-04-04 17:28:17,759 INFO Computing 50 means of 513 points in at most 20 steps...
2022-04-04 17:28:17,825 INFO Computing 2048 means at 56%
2022-04-04 17:28:17,834 INFO Computing 50 means of 529 points in at most 20 steps...
2022-04-04 17:28:17,906 INFO Computing 2048 means at 58%
2022-04-04 17:28:17,917 INFO Computing 50 means of 515 points in at most 20 steps...
2022-04-04 17:28:17,985 INFO Computing 2048 means at 61%
2022-04-04 17:28:17,995 INFO Computing 50 means of 512 points in at most 20 steps...
2022-04-04 17:28:18,067 INFO Computing 2048 means at 63%
2022-04-04 17:28:18,076 INFO Computing 50 means of 510 points in at most 20 steps...
2022-04-04 17:28:18,140 INFO Computing 2048 means at 65%
2022-04-04 17:28:18,151 INFO Computing 50 means of 511 points in at most 20 steps...
2022-04-04 17:28:18,219 INFO Computing 2048 means at 68%
2022-04-04 17:28:18,229 INFO Computing 50 means of 497 points in at most 20 steps...
2022-04-04 17:28:18,295 INFO Computing 2048 means at 70%
2022-04-04 17:28:18,307 INFO Computing 50 means of 511 points in at most 20 steps...
2022-04-04 17:28:18,372 INFO Computing 2048 means at 73%
2022-04-04 17:28:18,386 INFO Computing 50 means of 529 points in at most 20 steps...
2022-04-04 17:28:18,456 INFO Computing 2048 means at 75%
2022-04-04 17:28:18,468 INFO Computing 50 means of 511 points in at most 20 steps...
2022-04-04 17:28:18,534 INFO Computing 2048 means at 78%
2022-04-04 17:28:18,544 INFO Computing 50 means of 494 points in at most 20 steps...
2022-04-04 17:28:18,608 INFO Computing 2048 means at 80%
2022-04-04 17:28:18,619 INFO Computing 50 means of 509 points in at most 20 steps...
2022-04-04 17:28:18,685 INFO Computing 2048 means at 83%
2022-04-04 17:28:18,694 INFO Computing 50 means of 517 points in at most 20 steps...
2022-04-04 17:28:18,765 INFO Computing 2048 means at 85%
2022-04-04 17:28:18,775 INFO Computing 50 means of 515 points in at most 20 steps...
2022-04-04 17:28:18,842 INFO Computing 2048 means at 87%
2022-04-04 17:28:18,854 INFO Computing 50 means of 517 points in at most 20 steps...
2022-04-04 17:28:18,925 INFO Computing 2048 means at 90%
2022-04-04 17:28:18,935 INFO Computing 50 means of 480 points in at most 20 steps...
2022-04-04 17:28:19,001 INFO Computing 2048 means at 92%
2022-04-04 17:28:19,011 INFO Computing 50 means of 502 points in at most 20 steps...
2022-04-04 17:28:19,078 INFO Computing 2048 means at 95%
2022-04-04 17:28:19,087 INFO Computing 50 means of 512 points in at most 20 steps...
2022-04-04 17:28:19,154 INFO Computing 2048 means at 97%
2022-04-04 17:28:19,165 INFO Computing 48 means of 512 points in at most 20 steps...
2022-04-04 17:28:19,232 INFO Computing 2048 means at 100%
2022-04-04 17:28:19,667 INFO Do vol update step
2022-04-04 17:28:19,668 INFO Compute adjoint forward mapping on the images
2022-04-04 17:28:21,434 DEBUG Corresponding type is already complex complex128.
2022-04-04 17:28:24,310 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2022-04-04 17:28:24,329 INFO Computing adjoint forward mappings from 2048 rotations at 50%
2022-04-04 17:28:26,695 DEBUG Corresponding type is already complex complex128.
2022-04-04 17:28:30,294 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2022-04-04 17:28:30,316 INFO Computing adjoint forward mappings from 2048 rotations at 100%
2022-04-04 17:28:31,386 DEBUG Corresponding type is already real float64.
2022-04-04 17:28:31,386 DEBUG anufft passed real_type for signal, converting
2022-04-04 17:28:38,765 INFO Computing kernel from 2048 rotations at 50%
2022-04-04 17:28:39,762 DEBUG Corresponding type is already real float64.
2022-04-04 17:28:39,762 DEBUG anufft passed real_type for signal, converting
2022-04-04 17:28:47,241 INFO Computing kernel from 2048 rotations at 100%
2022-04-04 17:28:47,243 INFO Computing non-centered Fourier Transform
2022-04-04 17:28:47,419 INFO Add ramp filter regularisation
2022-04-04 17:28:48,471 INFO Update data_discrepancies
2022-04-04 17:28:48,472 INFO Computing \|Ag.u - f_i\|^2
2022-04-04 17:28:49,417 DEBUG Corresponding type is already real float64.
2022-04-04 17:28:49,417 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:29:05,289 INFO Computing data fidelity for 14761 rotations and 2048 images at 6%
2022-04-04 17:29:06,080 DEBUG Corresponding type is already real float64.
2022-04-04 17:29:06,080 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:29:24,106 INFO Computing data fidelity for 14761 rotations and 2048 images at 13%
2022-04-04 17:29:25,305 DEBUG Corresponding type is already real float64.
2022-04-04 17:29:25,306 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:29:40,735 INFO Computing data fidelity for 14761 rotations and 2048 images at 20%
2022-04-04 17:29:41,444 DEBUG Corresponding type is already real float64.
2022-04-04 17:29:41,445 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:29:54,912 INFO Computing data fidelity for 14761 rotations and 2048 images at 27%
2022-04-04 17:29:55,624 DEBUG Corresponding type is already real float64.
2022-04-04 17:29:55,624 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:30:09,296 INFO Computing data fidelity for 14761 rotations and 2048 images at 34%
2022-04-04 17:30:10,002 DEBUG Corresponding type is already real float64.
2022-04-04 17:30:10,002 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:30:23,771 INFO Computing data fidelity for 14761 rotations and 2048 images at 41%
2022-04-04 17:30:24,503 DEBUG Corresponding type is already real float64.
2022-04-04 17:30:24,503 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:30:38,614 INFO Computing data fidelity for 14761 rotations and 2048 images at 48%
2022-04-04 17:30:39,339 DEBUG Corresponding type is already real float64.
2022-04-04 17:30:39,339 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:30:52,671 INFO Computing data fidelity for 14761 rotations and 2048 images at 55%
2022-04-04 17:30:53,389 DEBUG Corresponding type is already real float64.
2022-04-04 17:30:53,390 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:31:06,725 INFO Computing data fidelity for 14761 rotations and 2048 images at 62%
2022-04-04 17:31:07,433 DEBUG Corresponding type is already real float64.
2022-04-04 17:31:07,433 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:31:20,902 INFO Computing data fidelity for 14761 rotations and 2048 images at 69%
2022-04-04 17:31:21,671 DEBUG Corresponding type is already real float64.
2022-04-04 17:31:21,672 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:31:35,986 INFO Computing data fidelity for 14761 rotations and 2048 images at 76%
2022-04-04 17:31:36,772 DEBUG Corresponding type is already real float64.
2022-04-04 17:31:36,773 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:31:50,947 INFO Computing data fidelity for 14761 rotations and 2048 images at 83%
2022-04-04 17:31:51,663 DEBUG Corresponding type is already real float64.
2022-04-04 17:31:51,664 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:32:06,628 INFO Computing data fidelity for 14761 rotations and 2048 images at 90%
2022-04-04 17:32:08,038 DEBUG Corresponding type is already real float64.
2022-04-04 17:32:08,039 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:32:23,143 INFO Computing data fidelity for 14761 rotations and 2048 images at 97%
2022-04-04 17:32:23,403 DEBUG Corresponding type is already real float64.
2022-04-04 17:32:23,403 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:32:29,389 INFO Computing data fidelity for 14761 rotations and 2048 images at 100%
2022-04-04 17:32:29,556 INFO Do lambda update step
2022-04-04 17:32:32,161 INFO Do rots update step
2022-04-04 17:32:32,274 INFO Projecting 2048 vectors onto 14761-simplex at 2%
2022-04-04 17:32:32,351 INFO Projecting 2048 vectors onto 14761-simplex at 4%
2022-04-04 17:32:32,426 INFO Projecting 2048 vectors onto 14761-simplex at 7%
2022-04-04 17:32:32,500 INFO Projecting 2048 vectors onto 14761-simplex at 9%
2022-04-04 17:32:32,574 INFO Projecting 2048 vectors onto 14761-simplex at 12%
2022-04-04 17:32:32,647 INFO Projecting 2048 vectors onto 14761-simplex at 14%
2022-04-04 17:32:32,720 INFO Projecting 2048 vectors onto 14761-simplex at 17%
2022-04-04 17:32:32,793 INFO Projecting 2048 vectors onto 14761-simplex at 19%
2022-04-04 17:32:32,866 INFO Projecting 2048 vectors onto 14761-simplex at 21%
2022-04-04 17:32:32,940 INFO Projecting 2048 vectors onto 14761-simplex at 24%
2022-04-04 17:32:33,037 INFO Projecting 2048 vectors onto 14761-simplex at 26%
2022-04-04 17:32:33,110 INFO Projecting 2048 vectors onto 14761-simplex at 29%
2022-04-04 17:32:33,183 INFO Projecting 2048 vectors onto 14761-simplex at 31%
2022-04-04 17:32:33,256 INFO Projecting 2048 vectors onto 14761-simplex at 34%
2022-04-04 17:32:33,329 INFO Projecting 2048 vectors onto 14761-simplex at 36%
2022-04-04 17:32:33,401 INFO Projecting 2048 vectors onto 14761-simplex at 39%
2022-04-04 17:32:33,475 INFO Projecting 2048 vectors onto 14761-simplex at 41%
2022-04-04 17:32:33,551 INFO Projecting 2048 vectors onto 14761-simplex at 43%
2022-04-04 17:32:33,628 INFO Projecting 2048 vectors onto 14761-simplex at 46%
2022-04-04 17:32:33,705 INFO Projecting 2048 vectors onto 14761-simplex at 48%
2022-04-04 17:32:33,809 INFO Projecting 2048 vectors onto 14761-simplex at 51%
2022-04-04 17:32:33,883 INFO Projecting 2048 vectors onto 14761-simplex at 53%
2022-04-04 17:32:33,956 INFO Projecting 2048 vectors onto 14761-simplex at 56%
2022-04-04 17:32:34,029 INFO Projecting 2048 vectors onto 14761-simplex at 58%
2022-04-04 17:32:34,103 INFO Projecting 2048 vectors onto 14761-simplex at 61%
2022-04-04 17:32:34,176 INFO Projecting 2048 vectors onto 14761-simplex at 63%
2022-04-04 17:32:34,249 INFO Projecting 2048 vectors onto 14761-simplex at 65%
2022-04-04 17:32:34,323 INFO Projecting 2048 vectors onto 14761-simplex at 68%
2022-04-04 17:32:34,395 INFO Projecting 2048 vectors onto 14761-simplex at 70%
2022-04-04 17:32:34,469 INFO Projecting 2048 vectors onto 14761-simplex at 73%
2022-04-04 17:32:34,568 INFO Projecting 2048 vectors onto 14761-simplex at 75%
2022-04-04 17:32:34,640 INFO Projecting 2048 vectors onto 14761-simplex at 78%
2022-04-04 17:32:34,714 INFO Projecting 2048 vectors onto 14761-simplex at 80%
2022-04-04 17:32:34,786 INFO Projecting 2048 vectors onto 14761-simplex at 83%
2022-04-04 17:32:34,859 INFO Projecting 2048 vectors onto 14761-simplex at 85%
2022-04-04 17:32:34,933 INFO Projecting 2048 vectors onto 14761-simplex at 87%
2022-04-04 17:32:35,005 INFO Projecting 2048 vectors onto 14761-simplex at 90%
2022-04-04 17:32:35,082 INFO Projecting 2048 vectors onto 14761-simplex at 92%
2022-04-04 17:32:35,155 INFO Projecting 2048 vectors onto 14761-simplex at 95%
2022-04-04 17:32:35,228 INFO Projecting 2048 vectors onto 14761-simplex at 97%
2022-04-04 17:32:35,299 INFO Projecting 2048 vectors onto 14761-simplex at 100%
2022-04-04 17:32:35,479 INFO Computing 50 means of 412 points in at most 20 steps...
2022-04-04 17:32:35,548 INFO Computing 2048 means at 2%
2022-04-04 17:32:35,561 INFO Computing 50 means of 418 points in at most 20 steps...
2022-04-04 17:32:35,618 INFO Computing 2048 means at 4%
2022-04-04 17:32:35,629 INFO Computing 50 means of 424 points in at most 20 steps...
2022-04-04 17:32:35,680 INFO Computing 2048 means at 7%
2022-04-04 17:32:35,690 INFO Computing 50 means of 461 points in at most 20 steps...
2022-04-04 17:32:35,745 INFO Computing 2048 means at 9%
2022-04-04 17:32:35,755 INFO Computing 50 means of 446 points in at most 20 steps...
2022-04-04 17:32:35,810 INFO Computing 2048 means at 12%
2022-04-04 17:32:35,820 INFO Computing 50 means of 429 points in at most 20 steps...
2022-04-04 17:32:35,871 INFO Computing 2048 means at 14%
2022-04-04 17:32:35,881 INFO Computing 50 means of 426 points in at most 20 steps...
2022-04-04 17:32:35,933 INFO Computing 2048 means at 17%
2022-04-04 17:32:35,943 INFO Computing 50 means of 465 points in at most 20 steps...
2022-04-04 17:32:36,000 INFO Computing 2048 means at 19%
2022-04-04 17:32:36,010 INFO Computing 50 means of 434 points in at most 20 steps...
2022-04-04 17:32:36,063 INFO Computing 2048 means at 21%
2022-04-04 17:32:36,075 INFO Computing 50 means of 430 points in at most 20 steps...
2022-04-04 17:32:36,126 INFO Computing 2048 means at 24%
2022-04-04 17:32:36,141 INFO Computing 50 means of 445 points in at most 20 steps...
2022-04-04 17:32:36,194 INFO Computing 2048 means at 26%
2022-04-04 17:32:36,204 INFO Computing 50 means of 473 points in at most 20 steps...
2022-04-04 17:32:36,262 INFO Computing 2048 means at 29%
2022-04-04 17:32:36,272 INFO Computing 50 means of 438 points in at most 20 steps...
2022-04-04 17:32:36,323 INFO Computing 2048 means at 31%
2022-04-04 17:32:36,334 INFO Computing 50 means of 438 points in at most 20 steps...
2022-04-04 17:32:36,386 INFO Computing 2048 means at 34%
2022-04-04 17:32:36,396 INFO Computing 50 means of 489 points in at most 20 steps...
2022-04-04 17:32:36,456 INFO Computing 2048 means at 36%
2022-04-04 17:32:36,466 INFO Computing 50 means of 428 points in at most 20 steps...
2022-04-04 17:32:36,519 INFO Computing 2048 means at 39%
2022-04-04 17:32:36,529 INFO Computing 50 means of 423 points in at most 20 steps...
2022-04-04 17:32:36,584 INFO Computing 2048 means at 41%
2022-04-04 17:32:36,594 INFO Computing 50 means of 431 points in at most 20 steps...
2022-04-04 17:32:36,649 INFO Computing 2048 means at 43%
2022-04-04 17:32:36,658 INFO Computing 50 means of 448 points in at most 20 steps...
2022-04-04 17:32:36,713 INFO Computing 2048 means at 46%
2022-04-04 17:32:36,723 INFO Computing 50 means of 446 points in at most 20 steps...
2022-04-04 17:32:36,778 INFO Computing 2048 means at 48%
2022-04-04 17:32:36,791 INFO Computing 50 means of 473 points in at most 20 steps...
2022-04-04 17:32:36,847 INFO Computing 2048 means at 51%
2022-04-04 17:32:36,857 INFO Computing 50 means of 461 points in at most 20 steps...
2022-04-04 17:32:36,912 INFO Computing 2048 means at 53%
2022-04-04 17:32:36,922 INFO Computing 50 means of 417 points in at most 20 steps...
2022-04-04 17:32:36,974 INFO Computing 2048 means at 56%
2022-04-04 17:32:36,985 INFO Computing 50 means of 443 points in at most 20 steps...
2022-04-04 17:32:37,040 INFO Computing 2048 means at 58%
2022-04-04 17:32:37,050 INFO Computing 50 means of 421 points in at most 20 steps...
2022-04-04 17:32:37,106 INFO Computing 2048 means at 61%
2022-04-04 17:32:37,116 INFO Computing 50 means of 452 points in at most 20 steps...
2022-04-04 17:32:37,170 INFO Computing 2048 means at 63%
2022-04-04 17:32:37,181 INFO Computing 50 means of 441 points in at most 20 steps...
2022-04-04 17:32:37,235 INFO Computing 2048 means at 65%
2022-04-04 17:32:37,246 INFO Computing 50 means of 458 points in at most 20 steps...
2022-04-04 17:32:37,301 INFO Computing 2048 means at 68%
2022-04-04 17:32:37,311 INFO Computing 50 means of 423 points in at most 20 steps...
2022-04-04 17:32:37,363 INFO Computing 2048 means at 70%
2022-04-04 17:32:37,372 INFO Computing 50 means of 429 points in at most 20 steps...
2022-04-04 17:32:37,424 INFO Computing 2048 means at 73%
2022-04-04 17:32:37,438 INFO Computing 50 means of 461 points in at most 20 steps...
2022-04-04 17:32:37,495 INFO Computing 2048 means at 75%
2022-04-04 17:32:37,505 INFO Computing 50 means of 414 points in at most 20 steps...
2022-04-04 17:32:37,556 INFO Computing 2048 means at 78%
2022-04-04 17:32:37,566 INFO Computing 50 means of 441 points in at most 20 steps...
2022-04-04 17:32:37,624 INFO Computing 2048 means at 80%
2022-04-04 17:32:37,634 INFO Computing 50 means of 473 points in at most 20 steps...
2022-04-04 17:32:37,691 INFO Computing 2048 means at 83%
2022-04-04 17:32:37,701 INFO Computing 50 means of 439 points in at most 20 steps...
2022-04-04 17:32:37,754 INFO Computing 2048 means at 85%
2022-04-04 17:32:37,765 INFO Computing 50 means of 450 points in at most 20 steps...
2022-04-04 17:32:37,819 INFO Computing 2048 means at 87%
2022-04-04 17:32:37,830 INFO Computing 50 means of 448 points in at most 20 steps...
2022-04-04 17:32:37,885 INFO Computing 2048 means at 90%
2022-04-04 17:32:37,895 INFO Computing 50 means of 410 points in at most 20 steps...
2022-04-04 17:32:37,944 INFO Computing 2048 means at 92%
2022-04-04 17:32:37,954 INFO Computing 50 means of 432 points in at most 20 steps...
2022-04-04 17:32:38,007 INFO Computing 2048 means at 95%
2022-04-04 17:32:38,017 INFO Computing 50 means of 453 points in at most 20 steps...
2022-04-04 17:32:38,075 INFO Computing 2048 means at 97%
2022-04-04 17:32:38,088 INFO Computing 48 means of 424 points in at most 20 steps...
2022-04-04 17:32:38,137 INFO Computing 2048 means at 100%
2022-04-04 17:32:38,578 INFO Do vol update step
2022-04-04 17:32:38,579 INFO Compute adjoint forward mapping on the images
2022-04-04 17:32:40,299 DEBUG Corresponding type is already complex complex128.
2022-04-04 17:32:42,696 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2022-04-04 17:32:42,714 INFO Computing adjoint forward mappings from 2048 rotations at 50%
2022-04-04 17:32:44,242 DEBUG Corresponding type is already complex complex128.
2022-04-04 17:32:46,644 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2022-04-04 17:32:46,658 INFO Computing adjoint forward mappings from 2048 rotations at 100%
2022-04-04 17:32:47,516 DEBUG Corresponding type is already real float64.
2022-04-04 17:32:47,516 DEBUG anufft passed real_type for signal, converting
2022-04-04 17:32:53,474 INFO Computing kernel from 2048 rotations at 50%
2022-04-04 17:32:54,317 DEBUG Corresponding type is already real float64.
2022-04-04 17:32:54,317 DEBUG anufft passed real_type for signal, converting
2022-04-04 17:33:00,400 INFO Computing kernel from 2048 rotations at 100%
2022-04-04 17:33:00,402 INFO Computing non-centered Fourier Transform
2022-04-04 17:33:00,569 INFO Add ramp filter regularisation
2022-04-04 17:33:01,505 INFO Update data_discrepancies
2022-04-04 17:33:01,506 INFO Computing \|Ag.u - f_i\|^2
2022-04-04 17:33:02,303 DEBUG Corresponding type is already real float64.
2022-04-04 17:33:02,303 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:33:15,649 INFO Computing data fidelity for 14761 rotations and 2048 images at 6%
2022-04-04 17:33:16,357 DEBUG Corresponding type is already real float64.
2022-04-04 17:33:16,358 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:33:30,166 INFO Computing data fidelity for 14761 rotations and 2048 images at 13%
2022-04-04 17:33:30,880 DEBUG Corresponding type is already real float64.
2022-04-04 17:33:30,881 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:33:44,011 INFO Computing data fidelity for 14761 rotations and 2048 images at 20%
2022-04-04 17:33:44,728 DEBUG Corresponding type is already real float64.
2022-04-04 17:33:44,728 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:33:58,834 INFO Computing data fidelity for 14761 rotations and 2048 images at 27%
2022-04-04 17:33:59,628 DEBUG Corresponding type is already real float64.
2022-04-04 17:33:59,628 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:34:15,289 INFO Computing data fidelity for 14761 rotations and 2048 images at 34%
2022-04-04 17:34:16,077 DEBUG Corresponding type is already real float64.
2022-04-04 17:34:16,077 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:34:32,216 INFO Computing data fidelity for 14761 rotations and 2048 images at 41%
2022-04-04 17:34:32,937 DEBUG Corresponding type is already real float64.
2022-04-04 17:34:32,937 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:34:48,050 INFO Computing data fidelity for 14761 rotations and 2048 images at 48%
2022-04-04 17:34:49,045 DEBUG Corresponding type is already real float64.
2022-04-04 17:34:49,045 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:35:05,803 INFO Computing data fidelity for 14761 rotations and 2048 images at 55%
2022-04-04 17:35:06,617 DEBUG Corresponding type is already real float64.
2022-04-04 17:35:06,617 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:35:22,764 INFO Computing data fidelity for 14761 rotations and 2048 images at 62%
2022-04-04 17:35:23,552 DEBUG Corresponding type is already real float64.
2022-04-04 17:35:23,552 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:35:38,739 INFO Computing data fidelity for 14761 rotations and 2048 images at 69%
2022-04-04 17:35:39,494 DEBUG Corresponding type is already real float64.
2022-04-04 17:35:39,494 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:35:56,000 INFO Computing data fidelity for 14761 rotations and 2048 images at 76%
2022-04-04 17:35:56,772 DEBUG Corresponding type is already real float64.
2022-04-04 17:35:56,772 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:36:13,003 INFO Computing data fidelity for 14761 rotations and 2048 images at 83%
2022-04-04 17:36:13,799 DEBUG Corresponding type is already real float64.
2022-04-04 17:36:13,799 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:36:27,635 INFO Computing data fidelity for 14761 rotations and 2048 images at 90%
2022-04-04 17:36:28,423 DEBUG Corresponding type is already real float64.
2022-04-04 17:36:28,424 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:36:43,639 INFO Computing data fidelity for 14761 rotations and 2048 images at 97%
2022-04-04 17:36:43,844 DEBUG Corresponding type is already real float64.
2022-04-04 17:36:43,845 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:36:50,751 INFO Computing data fidelity for 14761 rotations and 2048 images at 100%
2022-04-04 17:36:50,917 INFO Do lambda update step
2022-04-04 17:36:53,690 INFO Do rots update step
2022-04-04 17:36:53,820 INFO Projecting 2048 vectors onto 14761-simplex at 2%
2022-04-04 17:36:53,898 INFO Projecting 2048 vectors onto 14761-simplex at 4%
2022-04-04 17:36:53,970 INFO Projecting 2048 vectors onto 14761-simplex at 7%
2022-04-04 17:36:54,041 INFO Projecting 2048 vectors onto 14761-simplex at 9%
2022-04-04 17:36:54,116 INFO Projecting 2048 vectors onto 14761-simplex at 12%
2022-04-04 17:36:54,190 INFO Projecting 2048 vectors onto 14761-simplex at 14%
2022-04-04 17:36:54,276 INFO Projecting 2048 vectors onto 14761-simplex at 17%
2022-04-04 17:36:54,363 INFO Projecting 2048 vectors onto 14761-simplex at 19%
2022-04-04 17:36:54,454 INFO Projecting 2048 vectors onto 14761-simplex at 21%
2022-04-04 17:36:54,541 INFO Projecting 2048 vectors onto 14761-simplex at 24%
2022-04-04 17:36:54,639 INFO Projecting 2048 vectors onto 14761-simplex at 26%
2022-04-04 17:36:54,712 INFO Projecting 2048 vectors onto 14761-simplex at 29%
2022-04-04 17:36:54,785 INFO Projecting 2048 vectors onto 14761-simplex at 31%
2022-04-04 17:36:54,866 INFO Projecting 2048 vectors onto 14761-simplex at 34%
2022-04-04 17:36:54,946 INFO Projecting 2048 vectors onto 14761-simplex at 36%
2022-04-04 17:36:55,023 INFO Projecting 2048 vectors onto 14761-simplex at 39%
2022-04-04 17:36:55,096 INFO Projecting 2048 vectors onto 14761-simplex at 41%
2022-04-04 17:36:55,168 INFO Projecting 2048 vectors onto 14761-simplex at 43%
2022-04-04 17:36:55,244 INFO Projecting 2048 vectors onto 14761-simplex at 46%
2022-04-04 17:36:55,328 INFO Projecting 2048 vectors onto 14761-simplex at 48%
2022-04-04 17:36:55,440 INFO Projecting 2048 vectors onto 14761-simplex at 51%
2022-04-04 17:36:55,526 INFO Projecting 2048 vectors onto 14761-simplex at 53%
2022-04-04 17:36:55,609 INFO Projecting 2048 vectors onto 14761-simplex at 56%
2022-04-04 17:36:55,688 INFO Projecting 2048 vectors onto 14761-simplex at 58%
2022-04-04 17:36:55,765 INFO Projecting 2048 vectors onto 14761-simplex at 61%
2022-04-04 17:36:55,840 INFO Projecting 2048 vectors onto 14761-simplex at 63%
2022-04-04 17:36:55,912 INFO Projecting 2048 vectors onto 14761-simplex at 65%
2022-04-04 17:36:55,984 INFO Projecting 2048 vectors onto 14761-simplex at 68%
2022-04-04 17:36:56,056 INFO Projecting 2048 vectors onto 14761-simplex at 70%
2022-04-04 17:36:56,129 INFO Projecting 2048 vectors onto 14761-simplex at 73%
2022-04-04 17:36:56,224 INFO Projecting 2048 vectors onto 14761-simplex at 75%
2022-04-04 17:36:56,296 INFO Projecting 2048 vectors onto 14761-simplex at 78%
2022-04-04 17:36:56,367 INFO Projecting 2048 vectors onto 14761-simplex at 80%
2022-04-04 17:36:56,435 INFO Projecting 2048 vectors onto 14761-simplex at 83%
2022-04-04 17:36:56,507 INFO Projecting 2048 vectors onto 14761-simplex at 85%
2022-04-04 17:36:56,578 INFO Projecting 2048 vectors onto 14761-simplex at 87%
2022-04-04 17:36:56,653 INFO Projecting 2048 vectors onto 14761-simplex at 90%
2022-04-04 17:36:56,733 INFO Projecting 2048 vectors onto 14761-simplex at 92%
2022-04-04 17:36:56,809 INFO Projecting 2048 vectors onto 14761-simplex at 95%
2022-04-04 17:36:56,881 INFO Projecting 2048 vectors onto 14761-simplex at 97%
2022-04-04 17:36:56,946 INFO Projecting 2048 vectors onto 14761-simplex at 100%
2022-04-04 17:36:57,110 INFO Computing 50 means of 351 points in at most 20 steps...
2022-04-04 17:36:57,176 INFO Computing 2048 means at 2%
2022-04-04 17:36:57,195 INFO Computing 50 means of 385 points in at most 20 steps...
2022-04-04 17:36:57,250 INFO Computing 2048 means at 4%
2022-04-04 17:36:57,260 INFO Computing 50 means of 381 points in at most 20 steps...
2022-04-04 17:36:57,307 INFO Computing 2048 means at 7%
2022-04-04 17:36:57,318 INFO Computing 50 means of 389 points in at most 20 steps...
2022-04-04 17:36:57,375 INFO Computing 2048 means at 9%
2022-04-04 17:36:57,384 INFO Computing 50 means of 365 points in at most 20 steps...
2022-04-04 17:36:57,428 INFO Computing 2048 means at 12%
2022-04-04 17:36:57,438 INFO Computing 50 means of 351 points in at most 20 steps...
2022-04-04 17:36:57,482 INFO Computing 2048 means at 14%
2022-04-04 17:36:57,492 INFO Computing 50 means of 351 points in at most 20 steps...
2022-04-04 17:36:57,536 INFO Computing 2048 means at 17%
2022-04-04 17:36:57,545 INFO Computing 50 means of 387 points in at most 20 steps...
2022-04-04 17:36:57,593 INFO Computing 2048 means at 19%
2022-04-04 17:36:57,603 INFO Computing 50 means of 373 points in at most 20 steps...
2022-04-04 17:36:57,650 INFO Computing 2048 means at 21%
2022-04-04 17:36:57,660 INFO Computing 50 means of 376 points in at most 20 steps...
2022-04-04 17:36:57,705 INFO Computing 2048 means at 24%
2022-04-04 17:36:57,720 INFO Computing 50 means of 390 points in at most 20 steps...
2022-04-04 17:36:57,768 INFO Computing 2048 means at 26%
2022-04-04 17:36:57,778 INFO Computing 50 means of 380 points in at most 20 steps...
2022-04-04 17:36:57,824 INFO Computing 2048 means at 29%
2022-04-04 17:36:57,833 INFO Computing 50 means of 375 points in at most 20 steps...
2022-04-04 17:36:57,879 INFO Computing 2048 means at 31%
2022-04-04 17:36:57,889 INFO Computing 50 means of 382 points in at most 20 steps...
2022-04-04 17:36:57,935 INFO Computing 2048 means at 34%
2022-04-04 17:36:57,945 INFO Computing 50 means of 398 points in at most 20 steps...
2022-04-04 17:36:57,993 INFO Computing 2048 means at 36%
2022-04-04 17:36:58,003 INFO Computing 50 means of 383 points in at most 20 steps...
2022-04-04 17:36:58,050 INFO Computing 2048 means at 39%
2022-04-04 17:36:58,060 INFO Computing 50 means of 392 points in at most 20 steps...
2022-04-04 17:36:58,115 INFO Computing 2048 means at 41%
2022-04-04 17:36:58,125 INFO Computing 50 means of 375 points in at most 20 steps...
2022-04-04 17:36:58,180 INFO Computing 2048 means at 43%
2022-04-04 17:36:58,190 INFO Computing 50 means of 375 points in at most 20 steps...
2022-04-04 17:36:58,243 INFO Computing 2048 means at 46%
2022-04-04 17:36:58,253 INFO Computing 50 means of 394 points in at most 20 steps...
2022-04-04 17:36:58,307 INFO Computing 2048 means at 48%
2022-04-04 17:36:58,322 INFO Computing 50 means of 391 points in at most 20 steps...
2022-04-04 17:36:58,376 INFO Computing 2048 means at 51%
2022-04-04 17:36:58,386 INFO Computing 50 means of 385 points in at most 20 steps...
2022-04-04 17:36:58,440 INFO Computing 2048 means at 53%
2022-04-04 17:36:58,450 INFO Computing 50 means of 383 points in at most 20 steps...
2022-04-04 17:36:58,507 INFO Computing 2048 means at 56%
2022-04-04 17:36:58,516 INFO Computing 50 means of 389 points in at most 20 steps...
2022-04-04 17:36:58,571 INFO Computing 2048 means at 58%
2022-04-04 17:36:58,581 INFO Computing 50 means of 362 points in at most 20 steps...
2022-04-04 17:36:58,636 INFO Computing 2048 means at 61%
2022-04-04 17:36:58,646 INFO Computing 50 means of 392 points in at most 20 steps...
2022-04-04 17:36:58,701 INFO Computing 2048 means at 63%
2022-04-04 17:36:58,711 INFO Computing 50 means of 369 points in at most 20 steps...
2022-04-04 17:36:58,763 INFO Computing 2048 means at 65%
2022-04-04 17:36:58,772 INFO Computing 50 means of 348 points in at most 20 steps...
2022-04-04 17:36:58,820 INFO Computing 2048 means at 68%
2022-04-04 17:36:58,830 INFO Computing 50 means of 352 points in at most 20 steps...
2022-04-04 17:36:58,879 INFO Computing 2048 means at 70%
2022-04-04 17:36:58,889 INFO Computing 50 means of 354 points in at most 20 steps...
2022-04-04 17:36:58,940 INFO Computing 2048 means at 73%
2022-04-04 17:36:58,954 INFO Computing 50 means of 375 points in at most 20 steps...
2022-04-04 17:36:59,005 INFO Computing 2048 means at 75%
2022-04-04 17:36:59,015 INFO Computing 50 means of 385 points in at most 20 steps...
2022-04-04 17:36:59,064 INFO Computing 2048 means at 78%
2022-04-04 17:36:59,074 INFO Computing 50 means of 376 points in at most 20 steps...
2022-04-04 17:36:59,127 INFO Computing 2048 means at 80%
2022-04-04 17:36:59,140 INFO Computing 50 means of 397 points in at most 20 steps...
2022-04-04 17:36:59,193 INFO Computing 2048 means at 83%
2022-04-04 17:36:59,204 INFO Computing 50 means of 375 points in at most 20 steps...
2022-04-04 17:36:59,256 INFO Computing 2048 means at 85%
2022-04-04 17:36:59,266 INFO Computing 50 means of 361 points in at most 20 steps...
2022-04-04 17:36:59,313 INFO Computing 2048 means at 87%
2022-04-04 17:36:59,323 INFO Computing 50 means of 380 points in at most 20 steps...
2022-04-04 17:36:59,372 INFO Computing 2048 means at 90%
2022-04-04 17:36:59,382 INFO Computing 50 means of 355 points in at most 20 steps...
2022-04-04 17:36:59,433 INFO Computing 2048 means at 92%
2022-04-04 17:36:59,443 INFO Computing 50 means of 370 points in at most 20 steps...
2022-04-04 17:36:59,496 INFO Computing 2048 means at 95%
2022-04-04 17:36:59,506 INFO Computing 50 means of 364 points in at most 20 steps...
2022-04-04 17:36:59,559 INFO Computing 2048 means at 97%
2022-04-04 17:36:59,569 INFO Computing 48 means of 383 points in at most 20 steps...
2022-04-04 17:36:59,620 INFO Computing 2048 means at 100%
2022-04-04 17:37:00,106 INFO Do vol update step
2022-04-04 17:37:00,107 INFO Compute adjoint forward mapping on the images
2022-04-04 17:37:01,961 DEBUG Corresponding type is already complex complex128.
2022-04-04 17:37:04,880 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2022-04-04 17:37:04,904 INFO Computing adjoint forward mappings from 2048 rotations at 50%
2022-04-04 17:37:06,747 DEBUG Corresponding type is already complex complex128.
2022-04-04 17:37:09,204 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2022-04-04 17:37:09,221 INFO Computing adjoint forward mappings from 2048 rotations at 100%
2022-04-04 17:37:10,105 DEBUG Corresponding type is already real float64.
2022-04-04 17:37:10,105 DEBUG anufft passed real_type for signal, converting
2022-04-04 17:37:17,941 INFO Computing kernel from 2048 rotations at 50%
2022-04-04 17:37:18,904 DEBUG Corresponding type is already real float64.
2022-04-04 17:37:18,904 DEBUG anufft passed real_type for signal, converting
2022-04-04 17:37:25,507 INFO Computing kernel from 2048 rotations at 100%
2022-04-04 17:37:25,509 INFO Computing non-centered Fourier Transform
2022-04-04 17:37:25,704 INFO Add ramp filter regularisation
2022-04-04 17:37:26,804 INFO Update data_discrepancies
2022-04-04 17:37:26,804 INFO Computing \|Ag.u - f_i\|^2
2022-04-04 17:37:27,784 DEBUG Corresponding type is already real float64.
2022-04-04 17:37:27,784 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:37:45,829 INFO Computing data fidelity for 14761 rotations and 2048 images at 6%
2022-04-04 17:37:46,855 DEBUG Corresponding type is already real float64.
2022-04-04 17:37:46,855 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:38:03,768 INFO Computing data fidelity for 14761 rotations and 2048 images at 13%
2022-04-04 17:38:04,603 DEBUG Corresponding type is already real float64.
2022-04-04 17:38:04,603 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:38:20,548 INFO Computing data fidelity for 14761 rotations and 2048 images at 20%
2022-04-04 17:38:21,337 DEBUG Corresponding type is already real float64.
2022-04-04 17:38:21,338 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:38:37,039 INFO Computing data fidelity for 14761 rotations and 2048 images at 27%
2022-04-04 17:38:37,845 DEBUG Corresponding type is already real float64.
2022-04-04 17:38:37,845 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:38:52,323 INFO Computing data fidelity for 14761 rotations and 2048 images at 34%
2022-04-04 17:38:53,108 DEBUG Corresponding type is already real float64.
2022-04-04 17:38:53,108 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:39:07,696 INFO Computing data fidelity for 14761 rotations and 2048 images at 41%
2022-04-04 17:39:08,488 DEBUG Corresponding type is already real float64.
2022-04-04 17:39:08,489 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:39:23,046 INFO Computing data fidelity for 14761 rotations and 2048 images at 48%
2022-04-04 17:39:23,825 DEBUG Corresponding type is already real float64.
2022-04-04 17:39:23,825 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:39:38,163 INFO Computing data fidelity for 14761 rotations and 2048 images at 55%
2022-04-04 17:39:38,931 DEBUG Corresponding type is already real float64.
2022-04-04 17:39:38,931 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:39:53,283 INFO Computing data fidelity for 14761 rotations and 2048 images at 62%
2022-04-04 17:39:54,055 DEBUG Corresponding type is already real float64.
2022-04-04 17:39:54,056 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:40:08,355 INFO Computing data fidelity for 14761 rotations and 2048 images at 69%
2022-04-04 17:40:09,134 DEBUG Corresponding type is already real float64.
2022-04-04 17:40:09,134 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:40:23,501 INFO Computing data fidelity for 14761 rotations and 2048 images at 76%
2022-04-04 17:40:24,287 DEBUG Corresponding type is already real float64.
2022-04-04 17:40:24,287 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:40:38,848 INFO Computing data fidelity for 14761 rotations and 2048 images at 83%
2022-04-04 17:40:39,607 DEBUG Corresponding type is already real float64.
2022-04-04 17:40:39,607 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:40:54,329 INFO Computing data fidelity for 14761 rotations and 2048 images at 90%
2022-04-04 17:40:55,083 DEBUG Corresponding type is already real float64.
2022-04-04 17:40:55,084 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:41:09,649 INFO Computing data fidelity for 14761 rotations and 2048 images at 97%
2022-04-04 17:41:09,867 DEBUG Corresponding type is already real float64.
2022-04-04 17:41:09,867 DEBUG nufft passed real_type for signal, converting
2022-04-04 17:41:15,559 INFO Computing data fidelity for 14761 rotations and 2048 images at 100%
2022-04-04 17:41:15,724 INFO Do lambda update step
2022-04-04 17:41:18,281 INFO Do rots update step
2022-04-04 17:41:18,394 INFO Projecting 2048 vectors onto 14761-simplex at 2%
2022-04-04 17:41:18,473 INFO Projecting 2048 vectors onto 14761-simplex at 4%
2022-04-04 17:41:18,548 INFO Projecting 2048 vectors onto 14761-simplex at 7%
2022-04-04 17:41:18,624 INFO Projecting 2048 vectors onto 14761-simplex at 9%
2022-04-04 17:41:18,699 INFO Projecting 2048 vectors onto 14761-simplex at 12%
2022-04-04 17:41:18,773 INFO Projecting 2048 vectors onto 14761-simplex at 14%
2022-04-04 17:41:18,848 INFO Projecting 2048 vectors onto 14761-simplex at 17%
2022-04-04 17:41:18,922 INFO Projecting 2048 vectors onto 14761-simplex at 19%
2022-04-04 17:41:18,997 INFO Projecting 2048 vectors onto 14761-simplex at 21%
2022-04-04 17:41:19,071 INFO Projecting 2048 vectors onto 14761-simplex at 24%
2022-04-04 17:41:19,168 INFO Projecting 2048 vectors onto 14761-simplex at 26%
2022-04-04 17:41:19,242 INFO Projecting 2048 vectors onto 14761-simplex at 29%
2022-04-04 17:41:19,316 INFO Projecting 2048 vectors onto 14761-simplex at 31%
2022-04-04 17:41:19,390 INFO Projecting 2048 vectors onto 14761-simplex at 34%
2022-04-04 17:41:19,464 INFO Projecting 2048 vectors onto 14761-simplex at 36%
2022-04-04 17:41:19,542 INFO Projecting 2048 vectors onto 14761-simplex at 39%
2022-04-04 17:41:19,622 INFO Projecting 2048 vectors onto 14761-simplex at 41%
2022-04-04 17:41:19,716 INFO Projecting 2048 vectors onto 14761-simplex at 43%
2022-04-04 17:41:19,799 INFO Projecting 2048 vectors onto 14761-simplex at 46%
2022-04-04 17:41:19,884 INFO Projecting 2048 vectors onto 14761-simplex at 48%
2022-04-04 17:41:20,035 INFO Projecting 2048 vectors onto 14761-simplex at 51%
2022-04-04 17:41:20,145 INFO Projecting 2048 vectors onto 14761-simplex at 53%
2022-04-04 17:41:20,250 INFO Projecting 2048 vectors onto 14761-simplex at 56%
2022-04-04 17:41:20,351 INFO Projecting 2048 vectors onto 14761-simplex at 58%
2022-04-04 17:41:20,448 INFO Projecting 2048 vectors onto 14761-simplex at 61%
2022-04-04 17:41:20,546 INFO Projecting 2048 vectors onto 14761-simplex at 63%
2022-04-04 17:41:20,666 INFO Projecting 2048 vectors onto 14761-simplex at 65%
2022-04-04 17:41:20,773 INFO Projecting 2048 vectors onto 14761-simplex at 68%
2022-04-04 17:41:20,873 INFO Projecting 2048 vectors onto 14761-simplex at 70%
2022-04-04 17:41:20,970 INFO Projecting 2048 vectors onto 14761-simplex at 73%
2022-04-04 17:41:21,104 INFO Projecting 2048 vectors onto 14761-simplex at 75%
2022-04-04 17:41:21,200 INFO Projecting 2048 vectors onto 14761-simplex at 78%
2022-04-04 17:41:21,304 INFO Projecting 2048 vectors onto 14761-simplex at 80%
2022-04-04 17:41:21,404 INFO Projecting 2048 vectors onto 14761-simplex at 83%
2022-04-04 17:41:21,499 INFO Projecting 2048 vectors onto 14761-simplex at 85%
2022-04-04 17:41:21,600 INFO Projecting 2048 vectors onto 14761-simplex at 87%
2022-04-04 17:41:21,699 INFO Projecting 2048 vectors onto 14761-simplex at 90%
2022-04-04 17:41:21,813 INFO Projecting 2048 vectors onto 14761-simplex at 92%
2022-04-04 17:41:21,899 INFO Projecting 2048 vectors onto 14761-simplex at 95%
2022-04-04 17:41:21,976 INFO Projecting 2048 vectors onto 14761-simplex at 97%
2022-04-04 17:41:22,053 INFO Projecting 2048 vectors onto 14761-simplex at 100%
2022-04-04 17:41:22,254 INFO Computing 50 means of 346 points in at most 20 steps...
2022-04-04 17:41:22,319 INFO Computing 2048 means at 2%
2022-04-04 17:41:22,329 INFO Computing 50 means of 345 points in at most 20 steps...
2022-04-04 17:41:22,391 INFO Computing 2048 means at 4%
2022-04-04 17:41:22,400 INFO Computing 50 means of 361 points in at most 20 steps...
2022-04-04 17:41:22,479 INFO Computing 2048 means at 7%
2022-04-04 17:41:22,488 INFO Computing 50 means of 363 points in at most 20 steps...
2022-04-04 17:41:22,542 INFO Computing 2048 means at 9%
2022-04-04 17:41:22,551 INFO Computing 50 means of 341 points in at most 20 steps...
2022-04-04 17:41:22,598 INFO Computing 2048 means at 12%
2022-04-04 17:41:22,608 INFO Computing 50 means of 327 points in at most 20 steps...
2022-04-04 17:41:22,663 INFO Computing 2048 means at 14%
2022-04-04 17:41:22,676 INFO Computing 50 means of 321 points in at most 20 steps...
2022-04-04 17:41:22,735 INFO Computing 2048 means at 17%
2022-04-04 17:41:22,745 INFO Computing 50 means of 353 points in at most 20 steps...
2022-04-04 17:41:22,803 INFO Computing 2048 means at 19%
2022-04-04 17:41:22,813 INFO Computing 50 means of 343 points in at most 20 steps...
2022-04-04 17:41:22,871 INFO Computing 2048 means at 21%
2022-04-04 17:41:22,882 INFO Computing 50 means of 367 points in at most 20 steps...
2022-04-04 17:41:22,939 INFO Computing 2048 means at 24%
2022-04-04 17:41:22,952 INFO Computing 50 means of 359 points in at most 20 steps...
2022-04-04 17:41:23,007 INFO Computing 2048 means at 26%
2022-04-04 17:41:23,019 INFO Computing 50 means of 384 points in at most 20 steps...
2022-04-04 17:41:23,077 INFO Computing 2048 means at 29%
2022-04-04 17:41:23,087 INFO Computing 50 means of 351 points in at most 20 steps...
2022-04-04 17:41:23,147 INFO Computing 2048 means at 31%
2022-04-04 17:41:23,157 INFO Computing 50 means of 368 points in at most 20 steps...
2022-04-04 17:41:23,217 INFO Computing 2048 means at 34%
2022-04-04 17:41:23,228 INFO Computing 50 means of 380 points in at most 20 steps...
2022-04-04 17:41:23,287 INFO Computing 2048 means at 36%
2022-04-04 17:41:23,297 INFO Computing 50 means of 357 points in at most 20 steps...
2022-04-04 17:41:23,354 INFO Computing 2048 means at 39%
2022-04-04 17:41:23,364 INFO Computing 50 means of 375 points in at most 20 steps...
2022-04-04 17:41:23,423 INFO Computing 2048 means at 41%
2022-04-04 17:41:23,433 INFO Computing 50 means of 331 points in at most 20 steps...
2022-04-04 17:41:23,485 INFO Computing 2048 means at 43%
2022-04-04 17:41:23,496 INFO Computing 50 means of 355 points in at most 20 steps...
2022-04-04 17:41:23,546 INFO Computing 2048 means at 46%
2022-04-04 17:41:23,554 INFO Computing 50 means of 361 points in at most 20 steps...
2022-04-04 17:41:23,609 INFO Computing 2048 means at 48%
2022-04-04 17:41:23,620 INFO Computing 50 means of 357 points in at most 20 steps...
2022-04-04 17:41:23,671 INFO Computing 2048 means at 51%
2022-04-04 17:41:23,680 INFO Computing 50 means of 354 points in at most 20 steps...
2022-04-04 17:41:23,733 INFO Computing 2048 means at 53%
2022-04-04 17:41:23,744 INFO Computing 50 means of 371 points in at most 20 steps...
2022-04-04 17:41:23,800 INFO Computing 2048 means at 56%
2022-04-04 17:41:23,811 INFO Computing 50 means of 356 points in at most 20 steps...
2022-04-04 17:41:23,868 INFO Computing 2048 means at 58%
2022-04-04 17:41:23,879 INFO Computing 50 means of 347 points in at most 20 steps...
2022-04-04 17:41:23,934 INFO Computing 2048 means at 61%
2022-04-04 17:41:23,944 INFO Computing 50 means of 357 points in at most 20 steps...
2022-04-04 17:41:23,998 INFO Computing 2048 means at 63%
2022-04-04 17:41:24,007 INFO Computing 50 means of 341 points in at most 20 steps...
2022-04-04 17:41:24,060 INFO Computing 2048 means at 65%
2022-04-04 17:41:24,070 INFO Computing 50 means of 323 points in at most 20 steps...
2022-04-04 17:41:24,122 INFO Computing 2048 means at 68%
2022-04-04 17:41:24,131 INFO Computing 50 means of 326 points in at most 20 steps...
2022-04-04 17:41:24,180 INFO Computing 2048 means at 70%
2022-04-04 17:41:24,189 INFO Computing 50 means of 335 points in at most 20 steps...
2022-04-04 17:41:24,246 INFO Computing 2048 means at 73%
2022-04-04 17:41:24,257 INFO Computing 50 means of 327 points in at most 20 steps...
2022-04-04 17:41:24,310 INFO Computing 2048 means at 75%
2022-04-04 17:41:24,320 INFO Computing 50 means of 357 points in at most 20 steps...
2022-04-04 17:41:24,377 INFO Computing 2048 means at 78%
2022-04-04 17:41:24,386 INFO Computing 50 means of 355 points in at most 20 steps...
2022-04-04 17:41:24,442 INFO Computing 2048 means at 80%
2022-04-04 17:41:24,452 INFO Computing 50 means of 374 points in at most 20 steps...
2022-04-04 17:41:24,505 INFO Computing 2048 means at 83%
2022-04-04 17:41:24,515 INFO Computing 50 means of 347 points in at most 20 steps...
2022-04-04 17:41:24,565 INFO Computing 2048 means at 85%
2022-04-04 17:41:24,574 INFO Computing 50 means of 353 points in at most 20 steps...
2022-04-04 17:41:24,630 INFO Computing 2048 means at 87%
2022-04-04 17:41:24,640 INFO Computing 50 means of 351 points in at most 20 steps...
2022-04-04 17:41:24,694 INFO Computing 2048 means at 90%
2022-04-04 17:41:24,703 INFO Computing 50 means of 347 points in at most 20 steps...
2022-04-04 17:41:24,758 INFO Computing 2048 means at 92%
2022-04-04 17:41:24,767 INFO Computing 50 means of 341 points in at most 20 steps...
2022-04-04 17:41:24,816 INFO Computing 2048 means at 95%
2022-04-04 17:41:24,825 INFO Computing 50 means of 349 points in at most 20 steps...
2022-04-04 17:41:24,880 INFO Computing 2048 means at 97%
2022-04-04 17:41:24,889 INFO Computing 48 means of 361 points in at most 20 steps...
2022-04-04 17:41:24,942 INFO Computing 2048 means at 100%
2022-04-04 17:41:25,397 INFO Do vol update step
2022-04-04 17:41:25,398 INFO Compute adjoint forward mapping on the images
2022-04-04 17:41:27,103 DEBUG Corresponding type is already complex complex128.
2022-04-04 17:41:29,686 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2022-04-04 17:41:29,704 INFO Computing adjoint forward mappings from 2048 rotations at 50%
2022-04-04 17:41:31,258 DEBUG Corresponding type is already complex complex128.
2022-04-04 17:41:33,829 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2022-04-04 17:41:33,844 INFO Computing adjoint forward mappings from 2048 rotations at 100%
2022-04-04 17:41:34,740 DEBUG Corresponding type is already real float64.
2022-04-04 17:41:34,740 DEBUG anufft passed real_type for signal, converting
2022-04-04 17:41:42,507 INFO Computing kernel from 2048 rotations at 50%
2022-04-04 17:41:43,383 DEBUG Corresponding type is already real float64.
2022-04-04 17:41:43,383 DEBUG anufft passed real_type for signal, converting
2022-04-04 17:41:49,756 INFO Computing kernel from 2048 rotations at 100%
2022-04-04 17:41:49,758 INFO Computing non-centered Fourier Transform
2022-04-04 17:41:49,933 INFO Add ramp filter regularisation
2022-04-04 17:41:56,112 INFO Start Postprocessing
2022-04-04 17:41:56,114 INFO Postprocessing started
2022-04-04 17:41:58,176 DEBUG locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9097a42c88>
2022-04-04 17:41:58,176 DEBUG Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9097a42c88> on colorbar
2022-04-04 17:41:58,176 DEBUG Setting pcolormesh
2022-04-04 17:41:58,379 INFO MSE deviation of the 1:th estimated GD-refined rotations using register_rotations : 2.3106564237522385
2022-04-04 17:41:59,124 DEBUG locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f8f286cd8d0>
2022-04-04 17:41:59,125 DEBUG Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f8f286cd8d0> on colorbar
2022-04-04 17:41:59,125 DEBUG Setting pcolormesh
2022-04-04 17:41:59,312 INFO MSE deviation of the 2:th estimated GD-refined rotations using register_rotations : 1.1019010091836179
2022-04-04 17:42:00,265 DEBUG locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9097542f98>
2022-04-04 17:42:00,266 DEBUG Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9097542f98> on colorbar
2022-04-04 17:42:00,266 DEBUG Setting pcolormesh
2022-04-04 17:42:00,529 INFO MSE deviation of the 3:th estimated GD-refined rotations using register_rotations : 0.5281249631666617
2022-04-04 17:42:01,273 DEBUG locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f909768f160>
2022-04-04 17:42:01,273 DEBUG Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f909768f160> on colorbar
2022-04-04 17:42:01,273 DEBUG Setting pcolormesh
2022-04-04 17:42:01,494 INFO MSE deviation of the 4:th estimated GD-refined rotations using register_rotations : 0.04716629262434209
2022-04-04 17:42:02,283 DEBUG locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f90979fdb38>
2022-04-04 17:42:02,283 DEBUG Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f90979fdb38> on colorbar
2022-04-04 17:42:02,283 DEBUG Setting pcolormesh
2022-04-04 17:42:02,529 INFO MSE deviation of the 5:th estimated GD-refined rotations using register_rotations : 0.008323998868154868
2022-04-04 17:42:03,385 DEBUG locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f925b80db70>
2022-04-04 17:42:03,385 DEBUG Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f925b80db70> on colorbar
2022-04-04 17:42:03,385 DEBUG Setting pcolormesh
2022-04-04 17:42:03,627 INFO MSE deviation of the 6:th estimated GD-refined rotations using register_rotations : 0.007511949192977098
2022-04-04 18:02:10,789 INFO Results folder is /Users/wdiepeveen/Documents/PhD/Projects/2 - Cryo-EM/src/src/Cryo-EM/tools/../results/expC3_22-04-04_18-02-10_SNR16_N2048_J20_r2_s10_i20
2022-04-04 18:02:11,431 INFO Start Experiment
2022-04-04 18:02:11,432 INFO Running Experiment for SNR = 0.0625 and 2048 images
2022-04-04 18:02:11,434 INFO This experiment illustrates orientation refinement using a lifting approach
2022-04-04 18:02:11,435 INFO Initialize simulation object and CTF filters.
2022-04-04 18:02:11,452 INFO Load 3D map and downsample 3D map to desired grids of 91 x 91 x 91.
2022-04-04 18:02:11,571 INFO Use downsampled map to creat simulation object.
2022-04-04 18:02:11,611 INFO Get true rotation angles generated randomly by the simulation object.
2022-04-04 18:02:13,502 DEBUG Corresponding type is already real float64.
2022-04-04 18:02:13,502 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:02:31,346 INFO Applying forward transformations in pipeline
2022-04-04 18:02:31,348 INFO All forward transformations applied
2022-04-04 18:02:31,349 INFO Loaded 2048 images
2022-04-04 18:02:33,062 DEBUG Corresponding type is already real float64.
2022-04-04 18:02:33,062 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:02:50,338 INFO Applying forward transformations in pipeline
2022-04-04 18:02:50,340 INFO All forward transformations applied
2022-04-04 18:02:50,341 INFO Loaded 2048 images
2022-04-04 18:02:50,342 INFO Initializing density
2022-04-04 18:02:51,721 INFO Initialising Solver
2022-04-04 18:02:51,722 INFO Update data_discrepancies
2022-04-04 18:02:51,723 INFO Computing \|Ag.u - f_i\|^2
2022-04-04 18:02:52,714 DEBUG Corresponding type is already real float64.
2022-04-04 18:02:52,714 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:03:08,751 INFO Computing data fidelity for 114564 rotations and 2048 images at 0%
2022-04-04 18:03:09,593 DEBUG Corresponding type is already real float64.
2022-04-04 18:03:09,593 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:03:25,307 INFO Computing data fidelity for 114564 rotations and 2048 images at 1%
2022-04-04 18:03:26,160 DEBUG Corresponding type is already real float64.
2022-04-04 18:03:26,160 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:03:41,869 INFO Computing data fidelity for 114564 rotations and 2048 images at 2%
2022-04-04 18:03:42,720 DEBUG Corresponding type is already real float64.
2022-04-04 18:03:42,720 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:03:58,402 INFO Computing data fidelity for 114564 rotations and 2048 images at 3%
2022-04-04 18:03:59,271 DEBUG Corresponding type is already real float64.
2022-04-04 18:03:59,271 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:04:15,027 INFO Computing data fidelity for 114564 rotations and 2048 images at 4%
2022-04-04 18:04:15,903 DEBUG Corresponding type is already real float64.
2022-04-04 18:04:15,903 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:04:31,168 INFO Computing data fidelity for 114564 rotations and 2048 images at 5%
2022-04-04 18:04:32,044 DEBUG Corresponding type is already real float64.
2022-04-04 18:04:32,044 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:04:47,133 INFO Computing data fidelity for 114564 rotations and 2048 images at 6%
2022-04-04 18:04:47,932 DEBUG Corresponding type is already real float64.
2022-04-04 18:04:47,932 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:05:02,982 INFO Computing data fidelity for 114564 rotations and 2048 images at 7%
2022-04-04 18:05:03,899 DEBUG Corresponding type is already real float64.
2022-04-04 18:05:03,900 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:05:20,038 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2022-04-04 18:05:20,878 DEBUG Corresponding type is already real float64.
2022-04-04 18:05:20,878 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:05:35,505 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2022-04-04 18:05:36,357 DEBUG Corresponding type is already real float64.
2022-04-04 18:05:36,357 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:05:51,022 INFO Computing data fidelity for 114564 rotations and 2048 images at 9%
2022-04-04 18:05:51,808 DEBUG Corresponding type is already real float64.
2022-04-04 18:05:51,808 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:06:06,364 INFO Computing data fidelity for 114564 rotations and 2048 images at 10%
2022-04-04 18:06:07,134 DEBUG Corresponding type is already real float64.
2022-04-04 18:06:07,134 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:06:21,637 INFO Computing data fidelity for 114564 rotations and 2048 images at 11%
2022-04-04 18:06:22,428 DEBUG Corresponding type is already real float64.
2022-04-04 18:06:22,428 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:06:36,846 INFO Computing data fidelity for 114564 rotations and 2048 images at 12%
2022-04-04 18:06:37,621 DEBUG Corresponding type is already real float64.
2022-04-04 18:06:37,621 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:06:52,134 INFO Computing data fidelity for 114564 rotations and 2048 images at 13%
2022-04-04 18:06:52,941 DEBUG Corresponding type is already real float64.
2022-04-04 18:06:52,941 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:07:08,320 INFO Computing data fidelity for 114564 rotations and 2048 images at 14%
2022-04-04 18:07:09,118 DEBUG Corresponding type is already real float64.
2022-04-04 18:07:09,118 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:07:23,553 INFO Computing data fidelity for 114564 rotations and 2048 images at 15%
2022-04-04 18:07:24,325 DEBUG Corresponding type is already real float64.
2022-04-04 18:07:24,326 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:07:38,687 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2022-04-04 18:07:39,463 DEBUG Corresponding type is already real float64.
2022-04-04 18:07:39,463 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:07:54,171 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2022-04-04 18:07:54,948 DEBUG Corresponding type is already real float64.
2022-04-04 18:07:54,948 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:08:09,258 INFO Computing data fidelity for 114564 rotations and 2048 images at 17%
2022-04-04 18:08:10,029 DEBUG Corresponding type is already real float64.
2022-04-04 18:08:10,029 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:08:24,372 INFO Computing data fidelity for 114564 rotations and 2048 images at 18%
2022-04-04 18:08:25,142 DEBUG Corresponding type is already real float64.
2022-04-04 18:08:25,142 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:08:39,460 INFO Computing data fidelity for 114564 rotations and 2048 images at 19%
2022-04-04 18:08:40,229 DEBUG Corresponding type is already real float64.
2022-04-04 18:08:40,229 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:08:54,586 INFO Computing data fidelity for 114564 rotations and 2048 images at 20%
2022-04-04 18:08:55,353 DEBUG Corresponding type is already real float64.
2022-04-04 18:08:55,353 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:09:09,971 INFO Computing data fidelity for 114564 rotations and 2048 images at 21%
2022-04-04 18:09:10,750 DEBUG Corresponding type is already real float64.
2022-04-04 18:09:10,751 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:09:24,987 INFO Computing data fidelity for 114564 rotations and 2048 images at 22%
2022-04-04 18:09:25,749 DEBUG Corresponding type is already real float64.
2022-04-04 18:09:25,749 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:09:40,056 INFO Computing data fidelity for 114564 rotations and 2048 images at 23%
2022-04-04 18:09:40,818 DEBUG Corresponding type is already real float64.
2022-04-04 18:09:40,818 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:09:55,111 INFO Computing data fidelity for 114564 rotations and 2048 images at 24%
2022-04-04 18:09:55,874 DEBUG Corresponding type is already real float64.
2022-04-04 18:09:55,875 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:10:10,103 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2022-04-04 18:10:10,873 DEBUG Corresponding type is already real float64.
2022-04-04 18:10:10,873 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:10:25,273 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2022-04-04 18:10:26,036 DEBUG Corresponding type is already real float64.
2022-04-04 18:10:26,036 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:10:41,408 INFO Computing data fidelity for 114564 rotations and 2048 images at 26%
2022-04-04 18:10:42,208 DEBUG Corresponding type is already real float64.
2022-04-04 18:10:42,208 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:10:57,554 INFO Computing data fidelity for 114564 rotations and 2048 images at 27%
2022-04-04 18:10:58,339 DEBUG Corresponding type is already real float64.
2022-04-04 18:10:58,339 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:11:13,002 INFO Computing data fidelity for 114564 rotations and 2048 images at 28%
2022-04-04 18:11:13,819 DEBUG Corresponding type is already real float64.
2022-04-04 18:11:13,820 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:11:28,401 INFO Computing data fidelity for 114564 rotations and 2048 images at 29%
2022-04-04 18:11:29,171 DEBUG Corresponding type is already real float64.
2022-04-04 18:11:29,171 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:11:43,679 INFO Computing data fidelity for 114564 rotations and 2048 images at 30%
2022-04-04 18:11:44,452 DEBUG Corresponding type is already real float64.
2022-04-04 18:11:44,452 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:11:59,980 INFO Computing data fidelity for 114564 rotations and 2048 images at 31%
2022-04-04 18:12:00,755 DEBUG Corresponding type is already real float64.
2022-04-04 18:12:00,755 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:12:16,112 INFO Computing data fidelity for 114564 rotations and 2048 images at 32%
2022-04-04 18:12:16,885 DEBUG Corresponding type is already real float64.
2022-04-04 18:12:16,885 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:12:31,459 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2022-04-04 18:12:32,233 DEBUG Corresponding type is already real float64.
2022-04-04 18:12:32,233 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:12:46,922 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2022-04-04 18:12:47,690 DEBUG Corresponding type is already real float64.
2022-04-04 18:12:47,690 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:13:02,132 INFO Computing data fidelity for 114564 rotations and 2048 images at 34%
2022-04-04 18:13:02,908 DEBUG Corresponding type is already real float64.
2022-04-04 18:13:02,908 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:13:17,685 INFO Computing data fidelity for 114564 rotations and 2048 images at 35%
2022-04-04 18:13:18,449 DEBUG Corresponding type is already real float64.
2022-04-04 18:13:18,449 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:13:32,789 INFO Computing data fidelity for 114564 rotations and 2048 images at 36%
2022-04-04 18:13:33,551 DEBUG Corresponding type is already real float64.
2022-04-04 18:13:33,551 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:13:47,985 INFO Computing data fidelity for 114564 rotations and 2048 images at 37%
2022-04-04 18:13:48,764 DEBUG Corresponding type is already real float64.
2022-04-04 18:13:48,764 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:14:03,090 INFO Computing data fidelity for 114564 rotations and 2048 images at 38%
2022-04-04 18:14:03,858 DEBUG Corresponding type is already real float64.
2022-04-04 18:14:03,858 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:14:18,235 INFO Computing data fidelity for 114564 rotations and 2048 images at 39%
2022-04-04 18:14:18,999 DEBUG Corresponding type is already real float64.
2022-04-04 18:14:19,000 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:14:33,579 INFO Computing data fidelity for 114564 rotations and 2048 images at 40%
2022-04-04 18:14:34,341 DEBUG Corresponding type is already real float64.
2022-04-04 18:14:34,341 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:14:48,671 INFO Computing data fidelity for 114564 rotations and 2048 images at 41%
2022-04-04 18:14:49,435 DEBUG Corresponding type is already real float64.
2022-04-04 18:14:49,435 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:15:03,775 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2022-04-04 18:15:04,538 DEBUG Corresponding type is already real float64.
2022-04-04 18:15:04,538 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:15:18,777 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2022-04-04 18:15:19,543 DEBUG Corresponding type is already real float64.
2022-04-04 18:15:19,544 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:15:33,833 INFO Computing data fidelity for 114564 rotations and 2048 images at 43%
2022-04-04 18:15:34,603 DEBUG Corresponding type is already real float64.
2022-04-04 18:15:34,603 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:15:48,848 INFO Computing data fidelity for 114564 rotations and 2048 images at 44%
2022-04-04 18:15:49,616 DEBUG Corresponding type is already real float64.
2022-04-04 18:15:49,617 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:16:04,097 INFO Computing data fidelity for 114564 rotations and 2048 images at 45%
2022-04-04 18:16:04,884 DEBUG Corresponding type is already real float64.
2022-04-04 18:16:04,884 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:16:19,352 INFO Computing data fidelity for 114564 rotations and 2048 images at 46%
2022-04-04 18:16:20,117 DEBUG Corresponding type is already real float64.
2022-04-04 18:16:20,117 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:16:34,436 INFO Computing data fidelity for 114564 rotations and 2048 images at 47%
2022-04-04 18:16:35,200 DEBUG Corresponding type is already real float64.
2022-04-04 18:16:35,200 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:16:49,515 INFO Computing data fidelity for 114564 rotations and 2048 images at 48%
2022-04-04 18:16:50,307 DEBUG Corresponding type is already real float64.
2022-04-04 18:16:50,307 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:17:04,742 INFO Computing data fidelity for 114564 rotations and 2048 images at 49%
2022-04-04 18:17:05,521 DEBUG Corresponding type is already real float64.
2022-04-04 18:17:05,521 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:17:20,140 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2022-04-04 18:17:20,917 DEBUG Corresponding type is already real float64.
2022-04-04 18:17:20,917 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:17:35,518 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2022-04-04 18:17:36,286 DEBUG Corresponding type is already real float64.
2022-04-04 18:17:36,286 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:17:50,551 INFO Computing data fidelity for 114564 rotations and 2048 images at 51%
2022-04-04 18:17:51,317 DEBUG Corresponding type is already real float64.
2022-04-04 18:17:51,317 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:18:05,796 INFO Computing data fidelity for 114564 rotations and 2048 images at 52%
2022-04-04 18:18:06,566 DEBUG Corresponding type is already real float64.
2022-04-04 18:18:06,566 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:18:21,156 INFO Computing data fidelity for 114564 rotations and 2048 images at 53%
2022-04-04 18:18:21,930 DEBUG Corresponding type is already real float64.
2022-04-04 18:18:21,931 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:18:36,293 INFO Computing data fidelity for 114564 rotations and 2048 images at 54%
2022-04-04 18:18:37,054 DEBUG Corresponding type is already real float64.
2022-04-04 18:18:37,054 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:18:51,236 INFO Computing data fidelity for 114564 rotations and 2048 images at 55%
2022-04-04 18:18:52,005 DEBUG Corresponding type is already real float64.
2022-04-04 18:18:52,005 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:19:06,367 INFO Computing data fidelity for 114564 rotations and 2048 images at 56%
2022-04-04 18:19:07,129 DEBUG Corresponding type is already real float64.
2022-04-04 18:19:07,129 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:19:21,363 INFO Computing data fidelity for 114564 rotations and 2048 images at 57%
2022-04-04 18:19:22,125 DEBUG Corresponding type is already real float64.
2022-04-04 18:19:22,125 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:19:36,760 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2022-04-04 18:19:37,536 DEBUG Corresponding type is already real float64.
2022-04-04 18:19:37,536 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:19:51,821 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2022-04-04 18:19:52,590 DEBUG Corresponding type is already real float64.
2022-04-04 18:19:52,591 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:20:06,888 INFO Computing data fidelity for 114564 rotations and 2048 images at 59%
2022-04-04 18:20:07,654 DEBUG Corresponding type is already real float64.
2022-04-04 18:20:07,654 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:20:21,856 INFO Computing data fidelity for 114564 rotations and 2048 images at 60%
2022-04-04 18:20:22,623 DEBUG Corresponding type is already real float64.
2022-04-04 18:20:22,623 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:20:36,817 INFO Computing data fidelity for 114564 rotations and 2048 images at 61%
2022-04-04 18:20:37,594 DEBUG Corresponding type is already real float64.
2022-04-04 18:20:37,595 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:20:53,389 INFO Computing data fidelity for 114564 rotations and 2048 images at 62%
2022-04-04 18:20:54,163 DEBUG Corresponding type is already real float64.
2022-04-04 18:20:54,163 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:21:09,166 INFO Computing data fidelity for 114564 rotations and 2048 images at 63%
2022-04-04 18:21:09,942 DEBUG Corresponding type is already real float64.
2022-04-04 18:21:09,942 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:21:24,883 INFO Computing data fidelity for 114564 rotations and 2048 images at 64%
2022-04-04 18:21:25,669 DEBUG Corresponding type is already real float64.
2022-04-04 18:21:25,669 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:21:41,871 INFO Computing data fidelity for 114564 rotations and 2048 images at 65%
2022-04-04 18:21:42,647 DEBUG Corresponding type is already real float64.
2022-04-04 18:21:42,647 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:21:59,507 INFO Computing data fidelity for 114564 rotations and 2048 images at 66%
2022-04-04 18:22:00,283 DEBUG Corresponding type is already real float64.
2022-04-04 18:22:00,283 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:22:15,571 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2022-04-04 18:22:16,337 DEBUG Corresponding type is already real float64.
2022-04-04 18:22:16,337 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:22:31,551 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2022-04-04 18:22:32,325 DEBUG Corresponding type is already real float64.
2022-04-04 18:22:32,326 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:22:47,073 INFO Computing data fidelity for 114564 rotations and 2048 images at 68%
2022-04-04 18:22:47,854 DEBUG Corresponding type is already real float64.
2022-04-04 18:22:47,854 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:23:02,761 INFO Computing data fidelity for 114564 rotations and 2048 images at 69%
2022-04-04 18:23:03,651 DEBUG Corresponding type is already real float64.
2022-04-04 18:23:03,651 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:23:18,969 INFO Computing data fidelity for 114564 rotations and 2048 images at 70%
2022-04-04 18:23:19,805 DEBUG Corresponding type is already real float64.
2022-04-04 18:23:19,805 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:23:34,586 INFO Computing data fidelity for 114564 rotations and 2048 images at 71%
2022-04-04 18:23:35,364 DEBUG Corresponding type is already real float64.
2022-04-04 18:23:35,364 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:23:50,234 INFO Computing data fidelity for 114564 rotations and 2048 images at 72%
2022-04-04 18:23:51,000 DEBUG Corresponding type is already real float64.
2022-04-04 18:23:51,000 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:24:05,613 INFO Computing data fidelity for 114564 rotations and 2048 images at 73%
2022-04-04 18:24:06,376 DEBUG Corresponding type is already real float64.
2022-04-04 18:24:06,377 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:24:21,101 INFO Computing data fidelity for 114564 rotations and 2048 images at 74%
2022-04-04 18:24:21,866 DEBUG Corresponding type is already real float64.
2022-04-04 18:24:21,866 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:24:36,628 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2022-04-04 18:24:37,395 DEBUG Corresponding type is already real float64.
2022-04-04 18:24:37,395 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:24:52,154 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2022-04-04 18:24:52,922 DEBUG Corresponding type is already real float64.
2022-04-04 18:24:52,923 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:25:07,591 INFO Computing data fidelity for 114564 rotations and 2048 images at 76%
2022-04-04 18:25:08,364 DEBUG Corresponding type is already real float64.
2022-04-04 18:25:08,364 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:25:23,023 INFO Computing data fidelity for 114564 rotations and 2048 images at 77%
2022-04-04 18:25:23,790 DEBUG Corresponding type is already real float64.
2022-04-04 18:25:23,790 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:25:38,498 INFO Computing data fidelity for 114564 rotations and 2048 images at 78%
2022-04-04 18:25:39,275 DEBUG Corresponding type is already real float64.
2022-04-04 18:25:39,275 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:25:53,964 INFO Computing data fidelity for 114564 rotations and 2048 images at 79%
2022-04-04 18:25:54,724 DEBUG Corresponding type is already real float64.
2022-04-04 18:25:54,724 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:26:09,384 INFO Computing data fidelity for 114564 rotations and 2048 images at 80%
2022-04-04 18:26:10,148 DEBUG Corresponding type is already real float64.
2022-04-04 18:26:10,148 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:26:24,825 INFO Computing data fidelity for 114564 rotations and 2048 images at 81%
2022-04-04 18:26:25,595 DEBUG Corresponding type is already real float64.
2022-04-04 18:26:25,595 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:26:40,274 INFO Computing data fidelity for 114564 rotations and 2048 images at 82%
2022-04-04 18:26:41,039 DEBUG Corresponding type is already real float64.
2022-04-04 18:26:41,039 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:26:55,746 INFO Computing data fidelity for 114564 rotations and 2048 images at 83%
2022-04-04 18:26:56,520 DEBUG Corresponding type is already real float64.
2022-04-04 18:26:56,520 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:27:11,034 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2022-04-04 18:27:11,821 DEBUG Corresponding type is already real float64.
2022-04-04 18:27:11,821 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:27:26,554 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2022-04-04 18:27:27,326 DEBUG Corresponding type is already real float64.
2022-04-04 18:27:27,326 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:27:42,053 INFO Computing data fidelity for 114564 rotations and 2048 images at 85%
2022-04-04 18:27:42,823 DEBUG Corresponding type is already real float64.
2022-04-04 18:27:42,823 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:27:57,537 INFO Computing data fidelity for 114564 rotations and 2048 images at 86%
2022-04-04 18:27:58,312 DEBUG Corresponding type is already real float64.
2022-04-04 18:27:58,312 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:28:12,956 INFO Computing data fidelity for 114564 rotations and 2048 images at 87%
2022-04-04 18:28:13,737 DEBUG Corresponding type is already real float64.
2022-04-04 18:28:13,737 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:28:28,516 INFO Computing data fidelity for 114564 rotations and 2048 images at 88%
2022-04-04 18:28:29,302 DEBUG Corresponding type is already real float64.
2022-04-04 18:28:29,302 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:28:44,089 INFO Computing data fidelity for 114564 rotations and 2048 images at 89%
2022-04-04 18:28:44,874 DEBUG Corresponding type is already real float64.
2022-04-04 18:28:44,875 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:28:59,727 INFO Computing data fidelity for 114564 rotations and 2048 images at 90%
2022-04-04 18:29:00,517 DEBUG Corresponding type is already real float64.
2022-04-04 18:29:00,517 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:29:15,294 INFO Computing data fidelity for 114564 rotations and 2048 images at 91%
2022-04-04 18:29:16,081 DEBUG Corresponding type is already real float64.
2022-04-04 18:29:16,081 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:29:30,935 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2022-04-04 18:29:31,732 DEBUG Corresponding type is already real float64.
2022-04-04 18:29:31,732 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:29:46,555 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2022-04-04 18:29:47,350 DEBUG Corresponding type is already real float64.
2022-04-04 18:29:47,350 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:30:02,136 INFO Computing data fidelity for 114564 rotations and 2048 images at 93%
2022-04-04 18:30:02,946 DEBUG Corresponding type is already real float64.
2022-04-04 18:30:02,946 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:30:17,694 INFO Computing data fidelity for 114564 rotations and 2048 images at 94%
2022-04-04 18:30:18,496 DEBUG Corresponding type is already real float64.
2022-04-04 18:30:18,496 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:30:33,322 INFO Computing data fidelity for 114564 rotations and 2048 images at 95%
2022-04-04 18:30:34,124 DEBUG Corresponding type is already real float64.
2022-04-04 18:30:34,124 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:30:48,946 INFO Computing data fidelity for 114564 rotations and 2048 images at 96%
2022-04-04 18:30:49,760 DEBUG Corresponding type is already real float64.
2022-04-04 18:30:49,760 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:31:04,570 INFO Computing data fidelity for 114564 rotations and 2048 images at 97%
2022-04-04 18:31:05,394 DEBUG Corresponding type is already real float64.
2022-04-04 18:31:05,394 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:31:20,212 INFO Computing data fidelity for 114564 rotations and 2048 images at 98%
2022-04-04 18:31:21,034 DEBUG Corresponding type is already real float64.
2022-04-04 18:31:21,035 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:31:35,828 INFO Computing data fidelity for 114564 rotations and 2048 images at 99%
2022-04-04 18:31:36,365 DEBUG Corresponding type is already real float64.
2022-04-04 18:31:36,366 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:31:49,185 INFO Computing data fidelity for 114564 rotations and 2048 images at 100%
2022-04-04 18:31:52,109 INFO Do lambda update step
2022-04-04 18:32:20,876 INFO Do rots update step
2022-04-04 18:32:21,794 INFO Projecting 2048 vectors onto 114564-simplex at 2%
2022-04-04 18:32:22,445 INFO Projecting 2048 vectors onto 114564-simplex at 4%
2022-04-04 18:32:23,106 INFO Projecting 2048 vectors onto 114564-simplex at 7%
2022-04-04 18:32:23,767 INFO Projecting 2048 vectors onto 114564-simplex at 9%
2022-04-04 18:32:24,419 INFO Projecting 2048 vectors onto 114564-simplex at 12%
2022-04-04 18:32:25,072 INFO Projecting 2048 vectors onto 114564-simplex at 14%
2022-04-04 18:32:25,723 INFO Projecting 2048 vectors onto 114564-simplex at 17%
2022-04-04 18:32:26,368 INFO Projecting 2048 vectors onto 114564-simplex at 19%
2022-04-04 18:32:27,017 INFO Projecting 2048 vectors onto 114564-simplex at 21%
2022-04-04 18:32:27,670 INFO Projecting 2048 vectors onto 114564-simplex at 24%
2022-04-04 18:32:28,520 INFO Projecting 2048 vectors onto 114564-simplex at 26%
2022-04-04 18:32:29,169 INFO Projecting 2048 vectors onto 114564-simplex at 29%
2022-04-04 18:32:29,822 INFO Projecting 2048 vectors onto 114564-simplex at 31%
2022-04-04 18:32:30,472 INFO Projecting 2048 vectors onto 114564-simplex at 34%
2022-04-04 18:32:31,118 INFO Projecting 2048 vectors onto 114564-simplex at 36%
2022-04-04 18:32:31,769 INFO Projecting 2048 vectors onto 114564-simplex at 39%
2022-04-04 18:32:32,416 INFO Projecting 2048 vectors onto 114564-simplex at 41%
2022-04-04 18:32:33,073 INFO Projecting 2048 vectors onto 114564-simplex at 43%
2022-04-04 18:32:33,726 INFO Projecting 2048 vectors onto 114564-simplex at 46%
2022-04-04 18:32:34,376 INFO Projecting 2048 vectors onto 114564-simplex at 48%
2022-04-04 18:32:35,228 INFO Projecting 2048 vectors onto 114564-simplex at 51%
2022-04-04 18:32:35,887 INFO Projecting 2048 vectors onto 114564-simplex at 53%
2022-04-04 18:32:36,541 INFO Projecting 2048 vectors onto 114564-simplex at 56%
2022-04-04 18:32:37,191 INFO Projecting 2048 vectors onto 114564-simplex at 58%
2022-04-04 18:32:37,839 INFO Projecting 2048 vectors onto 114564-simplex at 61%
2022-04-04 18:32:38,482 INFO Projecting 2048 vectors onto 114564-simplex at 63%
2022-04-04 18:32:39,140 INFO Projecting 2048 vectors onto 114564-simplex at 65%
2022-04-04 18:32:39,791 INFO Projecting 2048 vectors onto 114564-simplex at 68%
2022-04-04 18:32:40,445 INFO Projecting 2048 vectors onto 114564-simplex at 70%
2022-04-04 18:32:41,094 INFO Projecting 2048 vectors onto 114564-simplex at 73%
2022-04-04 18:32:41,944 INFO Projecting 2048 vectors onto 114564-simplex at 75%
2022-04-04 18:32:42,594 INFO Projecting 2048 vectors onto 114564-simplex at 78%
2022-04-04 18:32:43,242 INFO Projecting 2048 vectors onto 114564-simplex at 80%
2022-04-04 18:32:43,900 INFO Projecting 2048 vectors onto 114564-simplex at 83%
2022-04-04 18:32:44,548 INFO Projecting 2048 vectors onto 114564-simplex at 85%
2022-04-04 18:32:45,197 INFO Projecting 2048 vectors onto 114564-simplex at 87%
2022-04-04 18:32:45,845 INFO Projecting 2048 vectors onto 114564-simplex at 90%
2022-04-04 18:32:46,494 INFO Projecting 2048 vectors onto 114564-simplex at 92%
2022-04-04 18:32:47,137 INFO Projecting 2048 vectors onto 114564-simplex at 95%
2022-04-04 18:32:47,791 INFO Projecting 2048 vectors onto 114564-simplex at 97%
2022-04-04 18:32:48,425 INFO Projecting 2048 vectors onto 114564-simplex at 100%
2022-04-04 18:32:49,848 INFO Computing 50 means of 651 points in at most 20 steps...
2022-04-04 18:32:49,931 INFO Computing 2048 means at 2%
2022-04-04 18:32:50,013 INFO Computing 50 means of 651 points in at most 20 steps...
2022-04-04 18:32:50,086 INFO Computing 2048 means at 4%
2022-04-04 18:32:50,167 INFO Computing 50 means of 664 points in at most 20 steps...
2022-04-04 18:32:50,249 INFO Computing 2048 means at 7%
2022-04-04 18:32:50,328 INFO Computing 50 means of 638 points in at most 20 steps...
2022-04-04 18:32:50,398 INFO Computing 2048 means at 9%
2022-04-04 18:32:50,479 INFO Computing 50 means of 673 points in at most 20 steps...
2022-04-04 18:32:50,557 INFO Computing 2048 means at 12%
2022-04-04 18:32:50,635 INFO Computing 50 means of 661 points in at most 20 steps...
2022-04-04 18:32:50,710 INFO Computing 2048 means at 14%
2022-04-04 18:32:50,789 INFO Computing 50 means of 661 points in at most 20 steps...
2022-04-04 18:32:50,861 INFO Computing 2048 means at 17%
2022-04-04 18:32:50,939 INFO Computing 50 means of 637 points in at most 20 steps...
2022-04-04 18:32:51,008 INFO Computing 2048 means at 19%
2022-04-04 18:32:51,088 INFO Computing 50 means of 683 points in at most 20 steps...
2022-04-04 18:32:51,168 INFO Computing 2048 means at 21%
2022-04-04 18:32:51,248 INFO Computing 50 means of 647 points in at most 20 steps...
2022-04-04 18:32:51,319 INFO Computing 2048 means at 24%
2022-04-04 18:32:51,414 INFO Computing 50 means of 665 points in at most 20 steps...
2022-04-04 18:32:51,485 INFO Computing 2048 means at 26%
2022-04-04 18:32:51,567 INFO Computing 50 means of 651 points in at most 20 steps...
2022-04-04 18:32:51,646 INFO Computing 2048 means at 29%
2022-04-04 18:32:51,729 INFO Computing 50 means of 652 points in at most 20 steps...
2022-04-04 18:32:51,807 INFO Computing 2048 means at 31%
2022-04-04 18:32:51,889 INFO Computing 50 means of 671 points in at most 20 steps...
2022-04-04 18:32:51,963 INFO Computing 2048 means at 34%
2022-04-04 18:32:52,043 INFO Computing 50 means of 653 points in at most 20 steps...
2022-04-04 18:32:52,116 INFO Computing 2048 means at 36%
2022-04-04 18:32:52,196 INFO Computing 50 means of 653 points in at most 20 steps...
2022-04-04 18:32:52,268 INFO Computing 2048 means at 39%
2022-04-04 18:32:52,347 INFO Computing 50 means of 654 points in at most 20 steps...
2022-04-04 18:32:52,419 INFO Computing 2048 means at 41%
2022-04-04 18:32:52,501 INFO Computing 50 means of 642 points in at most 20 steps...
2022-04-04 18:32:52,572 INFO Computing 2048 means at 43%
2022-04-04 18:32:52,654 INFO Computing 50 means of 659 points in at most 20 steps...
2022-04-04 18:32:52,733 INFO Computing 2048 means at 46%
2022-04-04 18:32:52,820 INFO Computing 50 means of 663 points in at most 20 steps...
2022-04-04 18:32:52,902 INFO Computing 2048 means at 48%
2022-04-04 18:32:52,997 INFO Computing 50 means of 649 points in at most 20 steps...
2022-04-04 18:32:53,077 INFO Computing 2048 means at 51%
2022-04-04 18:32:53,165 INFO Computing 50 means of 664 points in at most 20 steps...
2022-04-04 18:32:53,249 INFO Computing 2048 means at 53%
2022-04-04 18:32:53,331 INFO Computing 50 means of 641 points in at most 20 steps...
2022-04-04 18:32:53,412 INFO Computing 2048 means at 56%
2022-04-04 18:32:53,495 INFO Computing 50 means of 654 points in at most 20 steps...
2022-04-04 18:32:53,571 INFO Computing 2048 means at 58%
2022-04-04 18:32:53,653 INFO Computing 50 means of 661 points in at most 20 steps...
2022-04-04 18:32:53,730 INFO Computing 2048 means at 61%
2022-04-04 18:32:53,809 INFO Computing 50 means of 649 points in at most 20 steps...
2022-04-04 18:32:53,888 INFO Computing 2048 means at 63%
2022-04-04 18:32:53,972 INFO Computing 50 means of 653 points in at most 20 steps...
2022-04-04 18:32:54,048 INFO Computing 2048 means at 65%
2022-04-04 18:32:54,134 INFO Computing 50 means of 667 points in at most 20 steps...
2022-04-04 18:32:54,216 INFO Computing 2048 means at 68%
2022-04-04 18:32:54,303 INFO Computing 50 means of 637 points in at most 20 steps...
2022-04-04 18:32:54,378 INFO Computing 2048 means at 70%
2022-04-04 18:32:54,464 INFO Computing 50 means of 651 points in at most 20 steps...
2022-04-04 18:32:54,541 INFO Computing 2048 means at 73%
2022-04-04 18:32:54,636 INFO Computing 50 means of 665 points in at most 20 steps...
2022-04-04 18:32:54,706 INFO Computing 2048 means at 75%
2022-04-04 18:32:54,788 INFO Computing 50 means of 661 points in at most 20 steps...
2022-04-04 18:32:54,857 INFO Computing 2048 means at 78%
2022-04-04 18:32:54,937 INFO Computing 50 means of 658 points in at most 20 steps...
2022-04-04 18:32:55,016 INFO Computing 2048 means at 80%
2022-04-04 18:32:55,104 INFO Computing 50 means of 642 points in at most 20 steps...
2022-04-04 18:32:55,186 INFO Computing 2048 means at 83%
2022-04-04 18:32:55,273 INFO Computing 50 means of 640 points in at most 20 steps...
2022-04-04 18:32:55,348 INFO Computing 2048 means at 85%
2022-04-04 18:32:55,433 INFO Computing 50 means of 650 points in at most 20 steps...
2022-04-04 18:32:55,506 INFO Computing 2048 means at 87%
2022-04-04 18:32:55,591 INFO Computing 50 means of 646 points in at most 20 steps...
2022-04-04 18:32:55,667 INFO Computing 2048 means at 90%
2022-04-04 18:32:55,751 INFO Computing 50 means of 685 points in at most 20 steps...
2022-04-04 18:32:55,840 INFO Computing 2048 means at 92%
2022-04-04 18:32:55,927 INFO Computing 50 means of 665 points in at most 20 steps...
2022-04-04 18:32:56,013 INFO Computing 2048 means at 95%
2022-04-04 18:32:56,099 INFO Computing 50 means of 670 points in at most 20 steps...
2022-04-04 18:32:56,184 INFO Computing 2048 means at 97%
2022-04-04 18:32:56,266 INFO Computing 48 means of 624 points in at most 20 steps...
2022-04-04 18:32:56,332 INFO Computing 2048 means at 100%
2022-04-04 18:33:00,474 INFO Do vol update step
2022-04-04 18:33:00,476 INFO Compute adjoint forward mapping on the images
2022-04-04 18:33:02,224 DEBUG Corresponding type is already complex complex128.
2022-04-04 18:33:04,669 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2022-04-04 18:33:04,683 INFO Computing adjoint forward mappings from 2048 rotations at 50%
2022-04-04 18:33:06,130 DEBUG Corresponding type is already complex complex128.
2022-04-04 18:33:08,546 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2022-04-04 18:33:08,559 INFO Computing adjoint forward mappings from 2048 rotations at 100%
2022-04-04 18:33:09,410 DEBUG Corresponding type is already real float64.
2022-04-04 18:33:09,410 DEBUG anufft passed real_type for signal, converting
2022-04-04 18:33:15,537 INFO Computing kernel from 2048 rotations at 50%
2022-04-04 18:33:16,371 DEBUG Corresponding type is already real float64.
2022-04-04 18:33:16,371 DEBUG anufft passed real_type for signal, converting
2022-04-04 18:33:22,672 INFO Computing kernel from 2048 rotations at 100%
2022-04-04 18:33:22,673 INFO Computing non-centered Fourier Transform
2022-04-04 18:33:22,849 INFO Add ramp filter regularisation
2022-04-04 18:33:26,813 INFO Update data_discrepancies
2022-04-04 18:33:26,814 INFO Computing \|Ag.u - f_i\|^2
2022-04-04 18:33:27,633 DEBUG Corresponding type is already real float64.
2022-04-04 18:33:27,634 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:33:41,016 INFO Computing data fidelity for 114564 rotations and 2048 images at 0%
2022-04-04 18:33:41,748 DEBUG Corresponding type is already real float64.
2022-04-04 18:33:41,748 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:33:55,134 INFO Computing data fidelity for 114564 rotations and 2048 images at 1%
2022-04-04 18:33:55,874 DEBUG Corresponding type is already real float64.
2022-04-04 18:33:55,874 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:34:09,098 INFO Computing data fidelity for 114564 rotations and 2048 images at 2%
2022-04-04 18:34:09,831 DEBUG Corresponding type is already real float64.
2022-04-04 18:34:09,831 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:34:22,966 INFO Computing data fidelity for 114564 rotations and 2048 images at 3%
2022-04-04 18:34:23,685 DEBUG Corresponding type is already real float64.
2022-04-04 18:34:23,685 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:34:37,693 INFO Computing data fidelity for 114564 rotations and 2048 images at 4%
2022-04-04 18:34:38,399 DEBUG Corresponding type is already real float64.
2022-04-04 18:34:38,399 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:34:51,431 INFO Computing data fidelity for 114564 rotations and 2048 images at 5%
2022-04-04 18:34:52,134 DEBUG Corresponding type is already real float64.
2022-04-04 18:34:52,134 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:35:05,152 INFO Computing data fidelity for 114564 rotations and 2048 images at 6%
2022-04-04 18:35:05,850 DEBUG Corresponding type is already real float64.
2022-04-04 18:35:05,850 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:35:18,905 INFO Computing data fidelity for 114564 rotations and 2048 images at 7%
2022-04-04 18:35:19,601 DEBUG Corresponding type is already real float64.
2022-04-04 18:35:19,601 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:35:32,600 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2022-04-04 18:35:33,306 DEBUG Corresponding type is already real float64.
2022-04-04 18:35:33,306 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:35:47,142 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2022-04-04 18:35:47,834 DEBUG Corresponding type is already real float64.
2022-04-04 18:35:47,834 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:36:00,890 INFO Computing data fidelity for 114564 rotations and 2048 images at 9%
2022-04-04 18:36:01,584 DEBUG Corresponding type is already real float64.
2022-04-04 18:36:01,584 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:36:14,711 INFO Computing data fidelity for 114564 rotations and 2048 images at 10%
2022-04-04 18:36:15,420 DEBUG Corresponding type is already real float64.
2022-04-04 18:36:15,421 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:36:29,901 INFO Computing data fidelity for 114564 rotations and 2048 images at 11%
2022-04-04 18:36:30,614 DEBUG Corresponding type is already real float64.
2022-04-04 18:36:30,614 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:36:43,721 INFO Computing data fidelity for 114564 rotations and 2048 images at 12%
2022-04-04 18:36:44,434 DEBUG Corresponding type is already real float64.
2022-04-04 18:36:44,434 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:36:57,311 INFO Computing data fidelity for 114564 rotations and 2048 images at 13%
2022-04-04 18:36:58,005 DEBUG Corresponding type is already real float64.
2022-04-04 18:36:58,005 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:37:10,883 INFO Computing data fidelity for 114564 rotations and 2048 images at 14%
2022-04-04 18:37:11,578 DEBUG Corresponding type is already real float64.
2022-04-04 18:37:11,578 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:37:25,638 INFO Computing data fidelity for 114564 rotations and 2048 images at 15%
2022-04-04 18:37:26,374 DEBUG Corresponding type is already real float64.
2022-04-04 18:37:26,374 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:37:40,727 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2022-04-04 18:37:41,454 DEBUG Corresponding type is already real float64.
2022-04-04 18:37:41,454 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:37:55,753 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2022-04-04 18:37:56,519 DEBUG Corresponding type is already real float64.
2022-04-04 18:37:56,519 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:38:10,327 INFO Computing data fidelity for 114564 rotations and 2048 images at 17%
2022-04-04 18:38:11,043 DEBUG Corresponding type is already real float64.
2022-04-04 18:38:11,043 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:38:24,531 INFO Computing data fidelity for 114564 rotations and 2048 images at 18%
2022-04-04 18:38:25,290 DEBUG Corresponding type is already real float64.
2022-04-04 18:38:25,290 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:38:39,036 INFO Computing data fidelity for 114564 rotations and 2048 images at 19%
2022-04-04 18:38:39,755 DEBUG Corresponding type is already real float64.
2022-04-04 18:38:39,756 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:38:52,684 INFO Computing data fidelity for 114564 rotations and 2048 images at 20%
2022-04-04 18:38:53,402 DEBUG Corresponding type is already real float64.
2022-04-04 18:38:53,402 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:39:06,274 INFO Computing data fidelity for 114564 rotations and 2048 images at 21%
2022-04-04 18:39:06,991 DEBUG Corresponding type is already real float64.
2022-04-04 18:39:06,992 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:39:19,922 INFO Computing data fidelity for 114564 rotations and 2048 images at 22%
2022-04-04 18:39:20,666 DEBUG Corresponding type is already real float64.
2022-04-04 18:39:20,666 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:39:33,548 INFO Computing data fidelity for 114564 rotations and 2048 images at 23%
2022-04-04 18:39:34,274 DEBUG Corresponding type is already real float64.
2022-04-04 18:39:34,274 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:39:47,248 INFO Computing data fidelity for 114564 rotations and 2048 images at 24%
2022-04-04 18:39:47,966 DEBUG Corresponding type is already real float64.
2022-04-04 18:39:47,966 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:40:00,841 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2022-04-04 18:40:01,568 DEBUG Corresponding type is already real float64.
2022-04-04 18:40:01,568 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:40:14,491 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2022-04-04 18:40:15,210 DEBUG Corresponding type is already real float64.
2022-04-04 18:40:15,210 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:40:28,098 INFO Computing data fidelity for 114564 rotations and 2048 images at 26%
2022-04-04 18:40:28,822 DEBUG Corresponding type is already real float64.
2022-04-04 18:40:28,823 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:40:41,838 INFO Computing data fidelity for 114564 rotations and 2048 images at 27%
2022-04-04 18:40:42,564 DEBUG Corresponding type is already real float64.
2022-04-04 18:40:42,564 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:40:55,438 INFO Computing data fidelity for 114564 rotations and 2048 images at 28%
2022-04-04 18:40:56,156 DEBUG Corresponding type is already real float64.
2022-04-04 18:40:56,156 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:41:09,022 INFO Computing data fidelity for 114564 rotations and 2048 images at 29%
2022-04-04 18:41:09,741 DEBUG Corresponding type is already real float64.
2022-04-04 18:41:09,741 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:41:22,606 INFO Computing data fidelity for 114564 rotations and 2048 images at 30%
2022-04-04 18:41:23,341 DEBUG Corresponding type is already real float64.
2022-04-04 18:41:23,341 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:41:37,055 INFO Computing data fidelity for 114564 rotations and 2048 images at 31%
2022-04-04 18:41:37,784 DEBUG Corresponding type is already real float64.
2022-04-04 18:41:37,784 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:41:50,664 INFO Computing data fidelity for 114564 rotations and 2048 images at 32%
2022-04-04 18:41:51,397 DEBUG Corresponding type is already real float64.
2022-04-04 18:41:51,397 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:42:04,356 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2022-04-04 18:42:05,082 DEBUG Corresponding type is already real float64.
2022-04-04 18:42:05,082 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:42:17,952 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2022-04-04 18:42:18,683 DEBUG Corresponding type is already real float64.
2022-04-04 18:42:18,683 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:42:31,564 INFO Computing data fidelity for 114564 rotations and 2048 images at 34%
2022-04-04 18:42:32,291 DEBUG Corresponding type is already real float64.
2022-04-04 18:42:32,291 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:42:45,219 INFO Computing data fidelity for 114564 rotations and 2048 images at 35%
2022-04-04 18:42:45,945 DEBUG Corresponding type is already real float64.
2022-04-04 18:42:45,945 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:42:58,937 INFO Computing data fidelity for 114564 rotations and 2048 images at 36%
2022-04-04 18:42:59,658 DEBUG Corresponding type is already real float64.
2022-04-04 18:42:59,659 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:43:12,563 INFO Computing data fidelity for 114564 rotations and 2048 images at 37%
2022-04-04 18:43:13,281 DEBUG Corresponding type is already real float64.
2022-04-04 18:43:13,281 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:43:26,147 INFO Computing data fidelity for 114564 rotations and 2048 images at 38%
2022-04-04 18:43:26,869 DEBUG Corresponding type is already real float64.
2022-04-04 18:43:26,869 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:43:39,792 INFO Computing data fidelity for 114564 rotations and 2048 images at 39%
2022-04-04 18:43:40,522 DEBUG Corresponding type is already real float64.
2022-04-04 18:43:40,522 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:43:53,440 INFO Computing data fidelity for 114564 rotations and 2048 images at 40%
2022-04-04 18:43:54,164 DEBUG Corresponding type is already real float64.
2022-04-04 18:43:54,164 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:44:07,084 INFO Computing data fidelity for 114564 rotations and 2048 images at 41%
2022-04-04 18:44:07,814 DEBUG Corresponding type is already real float64.
2022-04-04 18:44:07,814 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:44:20,704 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2022-04-04 18:44:21,436 DEBUG Corresponding type is already real float64.
2022-04-04 18:44:21,437 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:44:35,040 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2022-04-04 18:44:35,763 DEBUG Corresponding type is already real float64.
2022-04-04 18:44:35,763 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:44:48,726 INFO Computing data fidelity for 114564 rotations and 2048 images at 43%
2022-04-04 18:44:49,477 DEBUG Corresponding type is already real float64.
2022-04-04 18:44:49,477 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:45:02,493 INFO Computing data fidelity for 114564 rotations and 2048 images at 44%
2022-04-04 18:45:03,224 DEBUG Corresponding type is already real float64.
2022-04-04 18:45:03,225 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:45:16,098 INFO Computing data fidelity for 114564 rotations and 2048 images at 45%
2022-04-04 18:45:16,819 DEBUG Corresponding type is already real float64.
2022-04-04 18:45:16,819 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:45:29,741 INFO Computing data fidelity for 114564 rotations and 2048 images at 46%
2022-04-04 18:45:30,467 DEBUG Corresponding type is already real float64.
2022-04-04 18:45:30,467 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:45:43,418 INFO Computing data fidelity for 114564 rotations and 2048 images at 47%
2022-04-04 18:45:44,141 DEBUG Corresponding type is already real float64.
2022-04-04 18:45:44,142 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:45:57,053 INFO Computing data fidelity for 114564 rotations and 2048 images at 48%
2022-04-04 18:45:57,798 DEBUG Corresponding type is already real float64.
2022-04-04 18:45:57,799 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:46:10,736 INFO Computing data fidelity for 114564 rotations and 2048 images at 49%
2022-04-04 18:46:11,459 DEBUG Corresponding type is already real float64.
2022-04-04 18:46:11,459 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:46:24,453 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2022-04-04 18:46:25,176 DEBUG Corresponding type is already real float64.
2022-04-04 18:46:25,176 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:46:38,032 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2022-04-04 18:46:38,761 DEBUG Corresponding type is already real float64.
2022-04-04 18:46:38,761 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:46:51,771 INFO Computing data fidelity for 114564 rotations and 2048 images at 51%
2022-04-04 18:46:52,495 DEBUG Corresponding type is already real float64.
2022-04-04 18:46:52,495 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:47:05,413 INFO Computing data fidelity for 114564 rotations and 2048 images at 52%
2022-04-04 18:47:06,131 DEBUG Corresponding type is already real float64.
2022-04-04 18:47:06,131 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:47:19,007 INFO Computing data fidelity for 114564 rotations and 2048 images at 53%
2022-04-04 18:47:19,730 DEBUG Corresponding type is already real float64.
2022-04-04 18:47:19,730 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:47:33,367 INFO Computing data fidelity for 114564 rotations and 2048 images at 54%
2022-04-04 18:47:34,088 DEBUG Corresponding type is already real float64.
2022-04-04 18:47:34,088 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:47:47,024 INFO Computing data fidelity for 114564 rotations and 2048 images at 55%
2022-04-04 18:47:47,755 DEBUG Corresponding type is already real float64.
2022-04-04 18:47:47,755 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:48:00,920 INFO Computing data fidelity for 114564 rotations and 2048 images at 56%
2022-04-04 18:48:01,648 DEBUG Corresponding type is already real float64.
2022-04-04 18:48:01,648 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:48:14,622 INFO Computing data fidelity for 114564 rotations and 2048 images at 57%
2022-04-04 18:48:15,351 DEBUG Corresponding type is already real float64.
2022-04-04 18:48:15,351 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:48:28,220 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2022-04-04 18:48:28,947 DEBUG Corresponding type is already real float64.
2022-04-04 18:48:28,947 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:48:42,053 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2022-04-04 18:48:42,769 DEBUG Corresponding type is already real float64.
2022-04-04 18:48:42,769 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:48:55,648 INFO Computing data fidelity for 114564 rotations and 2048 images at 59%
2022-04-04 18:48:56,378 DEBUG Corresponding type is already real float64.
2022-04-04 18:48:56,378 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:49:09,261 INFO Computing data fidelity for 114564 rotations and 2048 images at 60%
2022-04-04 18:49:09,989 DEBUG Corresponding type is already real float64.
2022-04-04 18:49:09,989 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:49:23,150 INFO Computing data fidelity for 114564 rotations and 2048 images at 61%
2022-04-04 18:49:23,877 DEBUG Corresponding type is already real float64.
2022-04-04 18:49:23,877 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:49:36,718 INFO Computing data fidelity for 114564 rotations and 2048 images at 62%
2022-04-04 18:49:37,446 DEBUG Corresponding type is already real float64.
2022-04-04 18:49:37,446 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:49:50,360 INFO Computing data fidelity for 114564 rotations and 2048 images at 63%
2022-04-04 18:49:51,093 DEBUG Corresponding type is already real float64.
2022-04-04 18:49:51,094 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:50:04,045 INFO Computing data fidelity for 114564 rotations and 2048 images at 64%
2022-04-04 18:50:04,774 DEBUG Corresponding type is already real float64.
2022-04-04 18:50:04,774 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:50:17,815 INFO Computing data fidelity for 114564 rotations and 2048 images at 65%
2022-04-04 18:50:18,561 DEBUG Corresponding type is already real float64.
2022-04-04 18:50:18,561 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:50:32,222 INFO Computing data fidelity for 114564 rotations and 2048 images at 66%
2022-04-04 18:50:32,944 DEBUG Corresponding type is already real float64.
2022-04-04 18:50:32,944 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:50:45,928 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2022-04-04 18:50:46,664 DEBUG Corresponding type is already real float64.
2022-04-04 18:50:46,664 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:50:59,670 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2022-04-04 18:51:00,417 DEBUG Corresponding type is already real float64.
2022-04-04 18:51:00,417 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:51:13,480 INFO Computing data fidelity for 114564 rotations and 2048 images at 68%
2022-04-04 18:51:14,202 DEBUG Corresponding type is already real float64.
2022-04-04 18:51:14,203 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:51:27,121 INFO Computing data fidelity for 114564 rotations and 2048 images at 69%
2022-04-04 18:51:27,843 DEBUG Corresponding type is already real float64.
2022-04-04 18:51:27,844 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:51:40,806 INFO Computing data fidelity for 114564 rotations and 2048 images at 70%
2022-04-04 18:51:41,530 DEBUG Corresponding type is already real float64.
2022-04-04 18:51:41,530 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:51:54,550 INFO Computing data fidelity for 114564 rotations and 2048 images at 71%
2022-04-04 18:51:55,269 DEBUG Corresponding type is already real float64.
2022-04-04 18:51:55,269 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:52:08,190 INFO Computing data fidelity for 114564 rotations and 2048 images at 72%
2022-04-04 18:52:09,096 DEBUG Corresponding type is already real float64.
2022-04-04 18:52:09,096 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:52:22,091 INFO Computing data fidelity for 114564 rotations and 2048 images at 73%
2022-04-04 18:52:22,815 DEBUG Corresponding type is already real float64.
2022-04-04 18:52:22,816 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:52:35,727 INFO Computing data fidelity for 114564 rotations and 2048 images at 74%
2022-04-04 18:52:36,459 DEBUG Corresponding type is already real float64.
2022-04-04 18:52:36,459 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:52:49,451 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2022-04-04 18:52:50,178 DEBUG Corresponding type is already real float64.
2022-04-04 18:52:50,178 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:53:03,226 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2022-04-04 18:53:03,946 DEBUG Corresponding type is already real float64.
2022-04-04 18:53:03,947 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:53:16,978 INFO Computing data fidelity for 114564 rotations and 2048 images at 76%
2022-04-04 18:53:17,704 DEBUG Corresponding type is already real float64.
2022-04-04 18:53:17,704 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:53:30,647 INFO Computing data fidelity for 114564 rotations and 2048 images at 77%
2022-04-04 18:53:31,387 DEBUG Corresponding type is already real float64.
2022-04-04 18:53:31,387 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:53:45,496 INFO Computing data fidelity for 114564 rotations and 2048 images at 78%
2022-04-04 18:53:46,233 DEBUG Corresponding type is already real float64.
2022-04-04 18:53:46,233 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:54:00,274 INFO Computing data fidelity for 114564 rotations and 2048 images at 79%
2022-04-04 18:54:00,998 DEBUG Corresponding type is already real float64.
2022-04-04 18:54:00,998 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:54:13,902 INFO Computing data fidelity for 114564 rotations and 2048 images at 80%
2022-04-04 18:54:14,626 DEBUG Corresponding type is already real float64.
2022-04-04 18:54:14,626 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:54:27,550 INFO Computing data fidelity for 114564 rotations and 2048 images at 81%
2022-04-04 18:54:28,274 DEBUG Corresponding type is already real float64.
2022-04-04 18:54:28,274 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:54:41,188 INFO Computing data fidelity for 114564 rotations and 2048 images at 82%
2022-04-04 18:54:41,914 DEBUG Corresponding type is already real float64.
2022-04-04 18:54:41,914 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:54:54,901 INFO Computing data fidelity for 114564 rotations and 2048 images at 83%
2022-04-04 18:54:55,629 DEBUG Corresponding type is already real float64.
2022-04-04 18:54:55,629 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:55:08,546 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2022-04-04 18:55:09,268 DEBUG Corresponding type is already real float64.
2022-04-04 18:55:09,268 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:55:22,332 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2022-04-04 18:55:23,053 DEBUG Corresponding type is already real float64.
2022-04-04 18:55:23,053 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:55:35,897 INFO Computing data fidelity for 114564 rotations and 2048 images at 85%
2022-04-04 18:55:36,627 DEBUG Corresponding type is already real float64.
2022-04-04 18:55:36,627 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:55:49,550 INFO Computing data fidelity for 114564 rotations and 2048 images at 86%
2022-04-04 18:55:50,281 DEBUG Corresponding type is already real float64.
2022-04-04 18:55:50,281 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:56:03,158 INFO Computing data fidelity for 114564 rotations and 2048 images at 87%
2022-04-04 18:56:03,885 DEBUG Corresponding type is already real float64.
2022-04-04 18:56:03,885 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:56:16,827 INFO Computing data fidelity for 114564 rotations and 2048 images at 88%
2022-04-04 18:56:17,558 DEBUG Corresponding type is already real float64.
2022-04-04 18:56:17,558 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:56:30,420 INFO Computing data fidelity for 114564 rotations and 2048 images at 89%
2022-04-04 18:56:31,160 DEBUG Corresponding type is already real float64.
2022-04-04 18:56:31,161 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:56:44,598 INFO Computing data fidelity for 114564 rotations and 2048 images at 90%
2022-04-04 18:56:45,314 DEBUG Corresponding type is already real float64.
2022-04-04 18:56:45,314 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:56:58,173 INFO Computing data fidelity for 114564 rotations and 2048 images at 91%
2022-04-04 18:56:58,900 DEBUG Corresponding type is already real float64.
2022-04-04 18:56:58,901 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:57:11,792 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2022-04-04 18:57:12,520 DEBUG Corresponding type is already real float64.
2022-04-04 18:57:12,520 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:57:25,400 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2022-04-04 18:57:26,123 DEBUG Corresponding type is already real float64.
2022-04-04 18:57:26,123 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:57:39,025 INFO Computing data fidelity for 114564 rotations and 2048 images at 93%
2022-04-04 18:57:39,754 DEBUG Corresponding type is already real float64.
2022-04-04 18:57:39,754 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:57:52,733 INFO Computing data fidelity for 114564 rotations and 2048 images at 94%
2022-04-04 18:57:53,454 DEBUG Corresponding type is already real float64.
2022-04-04 18:57:53,454 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:58:06,493 INFO Computing data fidelity for 114564 rotations and 2048 images at 95%
2022-04-04 18:58:07,218 DEBUG Corresponding type is already real float64.
2022-04-04 18:58:07,219 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:58:20,185 INFO Computing data fidelity for 114564 rotations and 2048 images at 96%
2022-04-04 18:58:20,910 DEBUG Corresponding type is already real float64.
2022-04-04 18:58:20,910 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:58:33,791 INFO Computing data fidelity for 114564 rotations and 2048 images at 97%
2022-04-04 18:58:34,529 DEBUG Corresponding type is already real float64.
2022-04-04 18:58:34,529 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:58:47,524 INFO Computing data fidelity for 114564 rotations and 2048 images at 98%
2022-04-04 18:58:48,253 DEBUG Corresponding type is already real float64.
2022-04-04 18:58:48,253 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:59:01,172 INFO Computing data fidelity for 114564 rotations and 2048 images at 99%
2022-04-04 18:59:01,613 DEBUG Corresponding type is already real float64.
2022-04-04 18:59:01,613 DEBUG nufft passed real_type for signal, converting
2022-04-04 18:59:12,799 INFO Computing data fidelity for 114564 rotations and 2048 images at 100%
2022-04-04 18:59:14,038 INFO Do lambda update step
2022-04-04 18:59:37,690 INFO Do rots update step
2022-04-04 18:59:38,621 INFO Projecting 2048 vectors onto 114564-simplex at 2%
2022-04-04 18:59:39,337 INFO Projecting 2048 vectors onto 114564-simplex at 4%
2022-04-04 18:59:40,041 INFO Projecting 2048 vectors onto 114564-simplex at 7%
2022-04-04 18:59:40,750 INFO Projecting 2048 vectors onto 114564-simplex at 9%
2022-04-04 18:59:41,454 INFO Projecting 2048 vectors onto 114564-simplex at 12%
2022-04-04 18:59:42,159 INFO Projecting 2048 vectors onto 114564-simplex at 14%
2022-04-04 18:59:42,862 INFO Projecting 2048 vectors onto 114564-simplex at 17%
2022-04-04 18:59:43,559 INFO Projecting 2048 vectors onto 114564-simplex at 19%
2022-04-04 18:59:44,257 INFO Projecting 2048 vectors onto 114564-simplex at 21%
2022-04-04 18:59:44,953 INFO Projecting 2048 vectors onto 114564-simplex at 24%
2022-04-04 18:59:45,851 INFO Projecting 2048 vectors onto 114564-simplex at 26%
2022-04-04 18:59:46,545 INFO Projecting 2048 vectors onto 114564-simplex at 29%
2022-04-04 18:59:47,242 INFO Projecting 2048 vectors onto 114564-simplex at 31%
2022-04-04 18:59:47,928 INFO Projecting 2048 vectors onto 114564-simplex at 34%
2022-04-04 18:59:48,624 INFO Projecting 2048 vectors onto 114564-simplex at 36%
2022-04-04 18:59:49,315 INFO Projecting 2048 vectors onto 114564-simplex at 39%
2022-04-04 18:59:50,001 INFO Projecting 2048 vectors onto 114564-simplex at 41%
2022-04-04 18:59:50,684 INFO Projecting 2048 vectors onto 114564-simplex at 43%
2022-04-04 18:59:51,380 INFO Projecting 2048 vectors onto 114564-simplex at 46%
2022-04-04 18:59:52,070 INFO Projecting 2048 vectors onto 114564-simplex at 48%
2022-04-04 18:59:52,958 INFO Projecting 2048 vectors onto 114564-simplex at 51%
2022-04-04 18:59:53,650 INFO Projecting 2048 vectors onto 114564-simplex at 53%
2022-04-04 18:59:54,351 INFO Projecting 2048 vectors onto 114564-simplex at 56%
2022-04-04 18:59:55,015 INFO Projecting 2048 vectors onto 114564-simplex at 58%
2022-04-04 18:59:55,670 INFO Projecting 2048 vectors onto 114564-simplex at 61%
2022-04-04 18:59:56,300 INFO Projecting 2048 vectors onto 114564-simplex at 63%
2022-04-04 18:59:56,930 INFO Projecting 2048 vectors onto 114564-simplex at 65%
2022-04-04 18:59:57,569 INFO Projecting 2048 vectors onto 114564-simplex at 68%
2022-04-04 18:59:58,210 INFO Projecting 2048 vectors onto 114564-simplex at 70%
2022-04-04 18:59:58,850 INFO Projecting 2048 vectors onto 114564-simplex at 73%
2022-04-04 18:59:59,700 INFO Projecting 2048 vectors onto 114564-simplex at 75%
2022-04-04 19:00:00,381 INFO Projecting 2048 vectors onto 114564-simplex at 78%
2022-04-04 19:00:01,047 INFO Projecting 2048 vectors onto 114564-simplex at 80%
2022-04-04 19:00:01,692 INFO Projecting 2048 vectors onto 114564-simplex at 83%
2022-04-04 19:00:02,343 INFO Projecting 2048 vectors onto 114564-simplex at 85%
2022-04-04 19:00:02,986 INFO Projecting 2048 vectors onto 114564-simplex at 87%
2022-04-04 19:00:03,633 INFO Projecting 2048 vectors onto 114564-simplex at 90%
2022-04-04 19:00:04,308 INFO Projecting 2048 vectors onto 114564-simplex at 92%
2022-04-04 19:00:05,014 INFO Projecting 2048 vectors onto 114564-simplex at 95%
2022-04-04 19:00:05,691 INFO Projecting 2048 vectors onto 114564-simplex at 97%
2022-04-04 19:00:06,322 INFO Projecting 2048 vectors onto 114564-simplex at 100%
2022-04-04 19:00:07,822 INFO Computing 50 means of 599 points in at most 20 steps...
2022-04-04 19:00:07,923 INFO Computing 2048 means at 2%
2022-04-04 19:00:08,021 INFO Computing 50 means of 603 points in at most 20 steps...
2022-04-04 19:00:08,103 INFO Computing 2048 means at 4%
2022-04-04 19:00:08,194 INFO Computing 50 means of 603 points in at most 20 steps...
2022-04-04 19:00:08,266 INFO Computing 2048 means at 7%
2022-04-04 19:00:08,347 INFO Computing 50 means of 596 points in at most 20 steps...
2022-04-04 19:00:08,419 INFO Computing 2048 means at 9%
2022-04-04 19:00:08,497 INFO Computing 50 means of 602 points in at most 20 steps...
2022-04-04 19:00:08,562 INFO Computing 2048 means at 12%
2022-04-04 19:00:08,637 INFO Computing 50 means of 628 points in at most 20 steps...
2022-04-04 19:00:08,709 INFO Computing 2048 means at 14%
2022-04-04 19:00:08,785 INFO Computing 50 means of 590 points in at most 20 steps...
2022-04-04 19:00:08,850 INFO Computing 2048 means at 17%
2022-04-04 19:00:08,926 INFO Computing 50 means of 601 points in at most 20 steps...
2022-04-04 19:00:08,991 INFO Computing 2048 means at 19%
2022-04-04 19:00:09,069 INFO Computing 50 means of 598 points in at most 20 steps...
2022-04-04 19:00:09,134 INFO Computing 2048 means at 21%
2022-04-04 19:00:09,211 INFO Computing 50 means of 585 points in at most 20 steps...
2022-04-04 19:00:09,274 INFO Computing 2048 means at 24%
2022-04-04 19:00:09,364 INFO Computing 50 means of 614 points in at most 20 steps...
2022-04-04 19:00:09,430 INFO Computing 2048 means at 26%
2022-04-04 19:00:09,506 INFO Computing 50 means of 627 points in at most 20 steps...
2022-04-04 19:00:09,574 INFO Computing 2048 means at 29%
2022-04-04 19:00:09,654 INFO Computing 50 means of 607 points in at most 20 steps...
2022-04-04 19:00:09,719 INFO Computing 2048 means at 31%
2022-04-04 19:00:09,797 INFO Computing 50 means of 618 points in at most 20 steps...
2022-04-04 19:00:09,865 INFO Computing 2048 means at 34%
2022-04-04 19:00:09,942 INFO Computing 50 means of 605 points in at most 20 steps...
2022-04-04 19:00:10,007 INFO Computing 2048 means at 36%
2022-04-04 19:00:10,082 INFO Computing 50 means of 582 points in at most 20 steps...
2022-04-04 19:00:10,146 INFO Computing 2048 means at 39%
2022-04-04 19:00:10,223 INFO Computing 50 means of 604 points in at most 20 steps...
2022-04-04 19:00:10,290 INFO Computing 2048 means at 41%
2022-04-04 19:00:10,367 INFO Computing 50 means of 625 points in at most 20 steps...
2022-04-04 19:00:10,438 INFO Computing 2048 means at 43%
2022-04-04 19:00:10,516 INFO Computing 50 means of 622 points in at most 20 steps...
2022-04-04 19:00:10,588 INFO Computing 2048 means at 46%
2022-04-04 19:00:10,663 INFO Computing 50 means of 604 points in at most 20 steps...
2022-04-04 19:00:10,728 INFO Computing 2048 means at 48%
2022-04-04 19:00:10,818 INFO Computing 50 means of 602 points in at most 20 steps...
2022-04-04 19:00:10,885 INFO Computing 2048 means at 51%
2022-04-04 19:00:10,962 INFO Computing 50 means of 616 points in at most 20 steps...
2022-04-04 19:00:11,029 INFO Computing 2048 means at 53%
2022-04-04 19:00:11,107 INFO Computing 50 means of 598 points in at most 20 steps...
2022-04-04 19:00:11,172 INFO Computing 2048 means at 56%
2022-04-04 19:00:11,249 INFO Computing 50 means of 629 points in at most 20 steps...
2022-04-04 19:00:11,317 INFO Computing 2048 means at 58%
2022-04-04 19:00:11,394 INFO Computing 50 means of 603 points in at most 20 steps...
2022-04-04 19:00:11,464 INFO Computing 2048 means at 61%
2022-04-04 19:00:11,545 INFO Computing 50 means of 614 points in at most 20 steps...
2022-04-04 19:00:11,614 INFO Computing 2048 means at 63%
2022-04-04 19:00:11,692 INFO Computing 50 means of 618 points in at most 20 steps...
2022-04-04 19:00:11,760 INFO Computing 2048 means at 65%
2022-04-04 19:00:11,837 INFO Computing 50 means of 603 points in at most 20 steps...
2022-04-04 19:00:11,901 INFO Computing 2048 means at 68%
2022-04-04 19:00:11,980 INFO Computing 50 means of 569 points in at most 20 steps...
2022-04-04 19:00:12,042 INFO Computing 2048 means at 70%
2022-04-04 19:00:12,120 INFO Computing 50 means of 578 points in at most 20 steps...
2022-04-04 19:00:12,183 INFO Computing 2048 means at 73%
2022-04-04 19:00:12,272 INFO Computing 50 means of 583 points in at most 20 steps...
2022-04-04 19:00:12,336 INFO Computing 2048 means at 75%
2022-04-04 19:00:12,413 INFO Computing 50 means of 629 points in at most 20 steps...
2022-04-04 19:00:12,481 INFO Computing 2048 means at 78%
2022-04-04 19:00:12,558 INFO Computing 50 means of 605 points in at most 20 steps...
2022-04-04 19:00:12,624 INFO Computing 2048 means at 80%
2022-04-04 19:00:12,699 INFO Computing 50 means of 601 points in at most 20 steps...
2022-04-04 19:00:12,765 INFO Computing 2048 means at 83%
2022-04-04 19:00:12,842 INFO Computing 50 means of 620 points in at most 20 steps...
2022-04-04 19:00:12,907 INFO Computing 2048 means at 85%
2022-04-04 19:00:12,982 INFO Computing 50 means of 615 points in at most 20 steps...
2022-04-04 19:00:13,047 INFO Computing 2048 means at 87%
2022-04-04 19:00:13,125 INFO Computing 50 means of 614 points in at most 20 steps...
2022-04-04 19:00:13,190 INFO Computing 2048 means at 90%
2022-04-04 19:00:13,266 INFO Computing 50 means of 589 points in at most 20 steps...
2022-04-04 19:00:13,329 INFO Computing 2048 means at 92%
2022-04-04 19:00:13,407 INFO Computing 50 means of 615 points in at most 20 steps...
2022-04-04 19:00:13,473 INFO Computing 2048 means at 95%
2022-04-04 19:00:13,548 INFO Computing 50 means of 563 points in at most 20 steps...
2022-04-04 19:00:13,614 INFO Computing 2048 means at 97%
2022-04-04 19:00:13,691 INFO Computing 48 means of 562 points in at most 20 steps...
2022-04-04 19:00:13,753 INFO Computing 2048 means at 100%
2022-04-04 19:00:18,602 INFO Do vol update step
2022-04-04 19:00:18,604 INFO Compute adjoint forward mapping on the images
2022-04-04 19:00:20,320 DEBUG Corresponding type is already complex complex128.
2022-04-04 19:00:22,827 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2022-04-04 19:00:22,843 INFO Computing adjoint forward mappings from 2048 rotations at 50%
2022-04-04 19:00:24,328 DEBUG Corresponding type is already complex complex128.
2022-04-04 19:00:26,867 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2022-04-04 19:00:26,878 INFO Computing adjoint forward mappings from 2048 rotations at 100%
2022-04-04 19:00:27,733 DEBUG Corresponding type is already real float64.
2022-04-04 19:00:27,733 DEBUG anufft passed real_type for signal, converting
2022-04-04 19:00:33,867 INFO Computing kernel from 2048 rotations at 50%
2022-04-04 19:00:34,705 DEBUG Corresponding type is already real float64.
2022-04-04 19:00:34,705 DEBUG anufft passed real_type for signal, converting
2022-04-04 19:00:41,129 INFO Computing kernel from 2048 rotations at 100%
2022-04-04 19:00:41,131 INFO Computing non-centered Fourier Transform
2022-04-04 19:00:41,325 INFO Add ramp filter regularisation
2022-04-04 19:00:46,137 INFO Update data_discrepancies
2022-04-04 19:00:46,139 INFO Computing \|Ag.u - f_i\|^2
2022-04-04 19:00:46,985 DEBUG Corresponding type is already real float64.
2022-04-04 19:00:46,985 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:01:01,400 INFO Computing data fidelity for 114564 rotations and 2048 images at 0%
2022-04-04 19:01:02,132 DEBUG Corresponding type is already real float64.
2022-04-04 19:01:02,133 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:01:16,440 INFO Computing data fidelity for 114564 rotations and 2048 images at 1%
2022-04-04 19:01:17,169 DEBUG Corresponding type is already real float64.
2022-04-04 19:01:17,169 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:01:31,296 INFO Computing data fidelity for 114564 rotations and 2048 images at 2%
2022-04-04 19:01:32,014 DEBUG Corresponding type is already real float64.
2022-04-04 19:01:32,014 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:01:45,165 INFO Computing data fidelity for 114564 rotations and 2048 images at 3%
2022-04-04 19:01:45,895 DEBUG Corresponding type is already real float64.
2022-04-04 19:01:45,895 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:01:59,009 INFO Computing data fidelity for 114564 rotations and 2048 images at 4%
2022-04-04 19:01:59,715 DEBUG Corresponding type is already real float64.
2022-04-04 19:01:59,716 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:02:12,768 INFO Computing data fidelity for 114564 rotations and 2048 images at 5%
2022-04-04 19:02:13,476 DEBUG Corresponding type is already real float64.
2022-04-04 19:02:13,476 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:02:26,606 INFO Computing data fidelity for 114564 rotations and 2048 images at 6%
2022-04-04 19:02:27,327 DEBUG Corresponding type is already real float64.
2022-04-04 19:02:27,327 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:02:40,932 INFO Computing data fidelity for 114564 rotations and 2048 images at 7%
2022-04-04 19:02:41,627 DEBUG Corresponding type is already real float64.
2022-04-04 19:02:41,627 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:02:54,802 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2022-04-04 19:02:55,504 DEBUG Corresponding type is already real float64.
2022-04-04 19:02:55,505 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:03:08,595 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2022-04-04 19:03:09,293 DEBUG Corresponding type is already real float64.
2022-04-04 19:03:09,293 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:03:22,307 INFO Computing data fidelity for 114564 rotations and 2048 images at 9%
2022-04-04 19:03:23,003 DEBUG Corresponding type is already real float64.
2022-04-04 19:03:23,004 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:03:36,003 INFO Computing data fidelity for 114564 rotations and 2048 images at 10%
2022-04-04 19:03:36,700 DEBUG Corresponding type is already real float64.
2022-04-04 19:03:36,700 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:03:49,798 INFO Computing data fidelity for 114564 rotations and 2048 images at 11%
2022-04-04 19:03:50,511 DEBUG Corresponding type is already real float64.
2022-04-04 19:03:50,511 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:04:03,538 INFO Computing data fidelity for 114564 rotations and 2048 images at 12%
2022-04-04 19:04:04,252 DEBUG Corresponding type is already real float64.
2022-04-04 19:04:04,252 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:04:17,260 INFO Computing data fidelity for 114564 rotations and 2048 images at 13%
2022-04-04 19:04:17,959 DEBUG Corresponding type is already real float64.
2022-04-04 19:04:17,959 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:04:31,020 INFO Computing data fidelity for 114564 rotations and 2048 images at 14%
2022-04-04 19:04:31,717 DEBUG Corresponding type is already real float64.
2022-04-04 19:04:31,717 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:04:44,884 INFO Computing data fidelity for 114564 rotations and 2048 images at 15%
2022-04-04 19:04:45,581 DEBUG Corresponding type is already real float64.
2022-04-04 19:04:45,581 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:04:58,658 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2022-04-04 19:04:59,361 DEBUG Corresponding type is already real float64.
2022-04-04 19:04:59,361 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:05:12,324 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2022-04-04 19:05:13,028 DEBUG Corresponding type is already real float64.
2022-04-04 19:05:13,028 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:05:26,522 INFO Computing data fidelity for 114564 rotations and 2048 images at 17%
2022-04-04 19:05:27,273 DEBUG Corresponding type is already real float64.
2022-04-04 19:05:27,274 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:05:40,323 INFO Computing data fidelity for 114564 rotations and 2048 images at 18%
2022-04-04 19:05:41,016 DEBUG Corresponding type is already real float64.
2022-04-04 19:05:41,017 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:05:54,019 INFO Computing data fidelity for 114564 rotations and 2048 images at 19%
2022-04-04 19:05:54,726 DEBUG Corresponding type is already real float64.
2022-04-04 19:05:54,726 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:06:07,707 INFO Computing data fidelity for 114564 rotations and 2048 images at 20%
2022-04-04 19:06:08,407 DEBUG Corresponding type is already real float64.
2022-04-04 19:06:08,407 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:06:21,380 INFO Computing data fidelity for 114564 rotations and 2048 images at 21%
2022-04-04 19:06:22,087 DEBUG Corresponding type is already real float64.
2022-04-04 19:06:22,087 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:06:35,000 INFO Computing data fidelity for 114564 rotations and 2048 images at 22%
2022-04-04 19:06:35,704 DEBUG Corresponding type is already real float64.
2022-04-04 19:06:35,705 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:06:48,573 INFO Computing data fidelity for 114564 rotations and 2048 images at 23%
2022-04-04 19:06:49,271 DEBUG Corresponding type is already real float64.
2022-04-04 19:06:49,272 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:07:02,063 INFO Computing data fidelity for 114564 rotations and 2048 images at 24%
2022-04-04 19:07:02,761 DEBUG Corresponding type is already real float64.
2022-04-04 19:07:02,761 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:07:15,588 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2022-04-04 19:07:16,289 DEBUG Corresponding type is already real float64.
2022-04-04 19:07:16,289 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:07:29,229 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2022-04-04 19:07:29,969 DEBUG Corresponding type is already real float64.
2022-04-04 19:07:29,969 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:07:42,814 INFO Computing data fidelity for 114564 rotations and 2048 images at 26%
2022-04-04 19:07:43,521 DEBUG Corresponding type is already real float64.
2022-04-04 19:07:43,521 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:07:56,917 INFO Computing data fidelity for 114564 rotations and 2048 images at 27%
2022-04-04 19:07:57,618 DEBUG Corresponding type is already real float64.
2022-04-04 19:07:57,618 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:08:10,522 INFO Computing data fidelity for 114564 rotations and 2048 images at 28%
2022-04-04 19:08:11,232 DEBUG Corresponding type is already real float64.
2022-04-04 19:08:11,232 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:08:24,285 INFO Computing data fidelity for 114564 rotations and 2048 images at 29%
2022-04-04 19:08:25,031 DEBUG Corresponding type is already real float64.
2022-04-04 19:08:25,032 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:08:38,565 INFO Computing data fidelity for 114564 rotations and 2048 images at 30%
2022-04-04 19:08:39,272 DEBUG Corresponding type is already real float64.
2022-04-04 19:08:39,272 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:08:52,263 INFO Computing data fidelity for 114564 rotations and 2048 images at 31%
2022-04-04 19:08:52,984 DEBUG Corresponding type is already real float64.
2022-04-04 19:08:52,984 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:09:06,004 INFO Computing data fidelity for 114564 rotations and 2048 images at 32%
2022-04-04 19:09:06,730 DEBUG Corresponding type is already real float64.
2022-04-04 19:09:06,730 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:09:19,612 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2022-04-04 19:09:20,326 DEBUG Corresponding type is already real float64.
2022-04-04 19:09:20,326 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:09:33,215 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2022-04-04 19:09:33,946 DEBUG Corresponding type is already real float64.
2022-04-04 19:09:33,946 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:09:46,938 INFO Computing data fidelity for 114564 rotations and 2048 images at 34%
2022-04-04 19:09:47,656 DEBUG Corresponding type is already real float64.
2022-04-04 19:09:47,656 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:10:00,636 INFO Computing data fidelity for 114564 rotations and 2048 images at 35%
2022-04-04 19:10:01,357 DEBUG Corresponding type is already real float64.
2022-04-04 19:10:01,358 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:10:14,219 INFO Computing data fidelity for 114564 rotations and 2048 images at 36%
2022-04-04 19:10:14,947 DEBUG Corresponding type is already real float64.
2022-04-04 19:10:14,947 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:10:27,862 INFO Computing data fidelity for 114564 rotations and 2048 images at 37%
2022-04-04 19:10:28,586 DEBUG Corresponding type is already real float64.
2022-04-04 19:10:28,586 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:10:41,485 INFO Computing data fidelity for 114564 rotations and 2048 images at 38%
2022-04-04 19:10:42,215 DEBUG Corresponding type is already real float64.
2022-04-04 19:10:42,215 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:10:55,136 INFO Computing data fidelity for 114564 rotations and 2048 images at 39%
2022-04-04 19:10:55,858 DEBUG Corresponding type is already real float64.
2022-04-04 19:10:55,858 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:11:08,765 INFO Computing data fidelity for 114564 rotations and 2048 images at 40%
2022-04-04 19:11:09,483 DEBUG Corresponding type is already real float64.
2022-04-04 19:11:09,483 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:11:22,439 INFO Computing data fidelity for 114564 rotations and 2048 images at 41%
2022-04-04 19:11:23,160 DEBUG Corresponding type is already real float64.
2022-04-04 19:11:23,160 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:11:36,092 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2022-04-04 19:11:36,836 DEBUG Corresponding type is already real float64.
2022-04-04 19:11:36,836 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:11:50,293 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2022-04-04 19:11:51,022 DEBUG Corresponding type is already real float64.
2022-04-04 19:11:51,023 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:12:03,950 INFO Computing data fidelity for 114564 rotations and 2048 images at 43%
2022-04-04 19:12:04,677 DEBUG Corresponding type is already real float64.
2022-04-04 19:12:04,677 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:12:19,058 INFO Computing data fidelity for 114564 rotations and 2048 images at 44%
2022-04-04 19:12:19,797 DEBUG Corresponding type is already real float64.
2022-04-04 19:12:19,797 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:12:33,221 INFO Computing data fidelity for 114564 rotations and 2048 images at 45%
2022-04-04 19:12:33,943 DEBUG Corresponding type is already real float64.
2022-04-04 19:12:33,943 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:12:46,840 INFO Computing data fidelity for 114564 rotations and 2048 images at 46%
2022-04-04 19:12:47,570 DEBUG Corresponding type is already real float64.
2022-04-04 19:12:47,570 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:13:00,592 INFO Computing data fidelity for 114564 rotations and 2048 images at 47%
2022-04-04 19:13:01,318 DEBUG Corresponding type is already real float64.
2022-04-04 19:13:01,318 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:13:14,303 INFO Computing data fidelity for 114564 rotations and 2048 images at 48%
2022-04-04 19:13:15,026 DEBUG Corresponding type is already real float64.
2022-04-04 19:13:15,026 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:13:27,871 INFO Computing data fidelity for 114564 rotations and 2048 images at 49%
2022-04-04 19:13:28,584 DEBUG Corresponding type is already real float64.
2022-04-04 19:13:28,584 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:13:41,503 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2022-04-04 19:13:42,247 DEBUG Corresponding type is already real float64.
2022-04-04 19:13:42,247 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:13:55,132 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2022-04-04 19:13:55,868 DEBUG Corresponding type is already real float64.
2022-04-04 19:13:55,868 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:14:08,761 INFO Computing data fidelity for 114564 rotations and 2048 images at 51%
2022-04-04 19:14:09,482 DEBUG Corresponding type is already real float64.
2022-04-04 19:14:09,482 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:14:22,364 INFO Computing data fidelity for 114564 rotations and 2048 images at 52%
2022-04-04 19:14:23,098 DEBUG Corresponding type is already real float64.
2022-04-04 19:14:23,098 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:14:36,003 INFO Computing data fidelity for 114564 rotations and 2048 images at 53%
2022-04-04 19:14:36,731 DEBUG Corresponding type is already real float64.
2022-04-04 19:14:36,731 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:14:50,238 INFO Computing data fidelity for 114564 rotations and 2048 images at 54%
2022-04-04 19:14:50,974 DEBUG Corresponding type is already real float64.
2022-04-04 19:14:50,975 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:15:03,900 INFO Computing data fidelity for 114564 rotations and 2048 images at 55%
2022-04-04 19:15:04,619 DEBUG Corresponding type is already real float64.
2022-04-04 19:15:04,619 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:15:17,585 INFO Computing data fidelity for 114564 rotations and 2048 images at 56%
2022-04-04 19:15:18,315 DEBUG Corresponding type is already real float64.
2022-04-04 19:15:18,315 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:15:31,206 INFO Computing data fidelity for 114564 rotations and 2048 images at 57%
2022-04-04 19:15:31,923 DEBUG Corresponding type is already real float64.
2022-04-04 19:15:31,923 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:15:44,803 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2022-04-04 19:15:45,535 DEBUG Corresponding type is already real float64.
2022-04-04 19:15:45,536 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:15:58,534 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2022-04-04 19:15:59,254 DEBUG Corresponding type is already real float64.
2022-04-04 19:15:59,255 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:16:12,127 INFO Computing data fidelity for 114564 rotations and 2048 images at 59%
2022-04-04 19:16:12,847 DEBUG Corresponding type is already real float64.
2022-04-04 19:16:12,848 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:16:25,747 INFO Computing data fidelity for 114564 rotations and 2048 images at 60%
2022-04-04 19:16:26,468 DEBUG Corresponding type is already real float64.
2022-04-04 19:16:26,468 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:16:39,388 INFO Computing data fidelity for 114564 rotations and 2048 images at 61%
2022-04-04 19:16:40,120 DEBUG Corresponding type is already real float64.
2022-04-04 19:16:40,120 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:16:53,092 INFO Computing data fidelity for 114564 rotations and 2048 images at 62%
2022-04-04 19:16:53,822 DEBUG Corresponding type is already real float64.
2022-04-04 19:16:53,822 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:17:06,782 INFO Computing data fidelity for 114564 rotations and 2048 images at 63%
2022-04-04 19:17:07,505 DEBUG Corresponding type is already real float64.
2022-04-04 19:17:07,505 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:17:20,389 INFO Computing data fidelity for 114564 rotations and 2048 images at 64%
2022-04-04 19:17:21,127 DEBUG Corresponding type is already real float64.
2022-04-04 19:17:21,127 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:17:34,159 INFO Computing data fidelity for 114564 rotations and 2048 images at 65%
2022-04-04 19:17:34,909 DEBUG Corresponding type is already real float64.
2022-04-04 19:17:34,909 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:17:48,001 INFO Computing data fidelity for 114564 rotations and 2048 images at 66%
2022-04-04 19:17:48,729 DEBUG Corresponding type is already real float64.
2022-04-04 19:17:48,729 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:18:01,855 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2022-04-04 19:18:02,586 DEBUG Corresponding type is already real float64.
2022-04-04 19:18:02,587 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:18:15,490 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2022-04-04 19:18:16,229 DEBUG Corresponding type is already real float64.
2022-04-04 19:18:16,229 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:18:29,147 INFO Computing data fidelity for 114564 rotations and 2048 images at 68%
2022-04-04 19:18:29,868 DEBUG Corresponding type is already real float64.
2022-04-04 19:18:29,869 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:18:42,788 INFO Computing data fidelity for 114564 rotations and 2048 images at 69%
2022-04-04 19:18:43,514 DEBUG Corresponding type is already real float64.
2022-04-04 19:18:43,514 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:18:56,486 INFO Computing data fidelity for 114564 rotations and 2048 images at 70%
2022-04-04 19:18:57,212 DEBUG Corresponding type is already real float64.
2022-04-04 19:18:57,212 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:19:10,106 INFO Computing data fidelity for 114564 rotations and 2048 images at 71%
2022-04-04 19:19:10,844 DEBUG Corresponding type is already real float64.
2022-04-04 19:19:10,844 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:19:23,748 INFO Computing data fidelity for 114564 rotations and 2048 images at 72%
2022-04-04 19:19:24,469 DEBUG Corresponding type is already real float64.
2022-04-04 19:19:24,469 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:19:37,327 INFO Computing data fidelity for 114564 rotations and 2048 images at 73%
2022-04-04 19:19:38,049 DEBUG Corresponding type is already real float64.
2022-04-04 19:19:38,049 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:19:51,215 INFO Computing data fidelity for 114564 rotations and 2048 images at 74%
2022-04-04 19:19:51,951 DEBUG Corresponding type is already real float64.
2022-04-04 19:19:51,951 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:20:04,898 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2022-04-04 19:20:05,618 DEBUG Corresponding type is already real float64.
2022-04-04 19:20:05,618 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:20:18,491 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2022-04-04 19:20:19,219 DEBUG Corresponding type is already real float64.
2022-04-04 19:20:19,219 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:20:32,553 INFO Computing data fidelity for 114564 rotations and 2048 images at 76%
2022-04-04 19:20:33,292 DEBUG Corresponding type is already real float64.
2022-04-04 19:20:33,293 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:20:46,220 INFO Computing data fidelity for 114564 rotations and 2048 images at 77%
2022-04-04 19:20:46,943 DEBUG Corresponding type is already real float64.
2022-04-04 19:20:46,943 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:20:59,916 INFO Computing data fidelity for 114564 rotations and 2048 images at 78%
2022-04-04 19:21:00,650 DEBUG Corresponding type is already real float64.
2022-04-04 19:21:00,650 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:21:13,543 INFO Computing data fidelity for 114564 rotations and 2048 images at 79%
2022-04-04 19:21:14,266 DEBUG Corresponding type is already real float64.
2022-04-04 19:21:14,266 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:21:27,219 INFO Computing data fidelity for 114564 rotations and 2048 images at 80%
2022-04-04 19:21:27,953 DEBUG Corresponding type is already real float64.
2022-04-04 19:21:27,953 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:21:40,794 INFO Computing data fidelity for 114564 rotations and 2048 images at 81%
2022-04-04 19:21:41,518 DEBUG Corresponding type is already real float64.
2022-04-04 19:21:41,518 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:21:54,512 INFO Computing data fidelity for 114564 rotations and 2048 images at 82%
2022-04-04 19:21:55,236 DEBUG Corresponding type is already real float64.
2022-04-04 19:21:55,236 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:22:08,125 INFO Computing data fidelity for 114564 rotations and 2048 images at 83%
2022-04-04 19:22:08,846 DEBUG Corresponding type is already real float64.
2022-04-04 19:22:08,846 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:22:21,719 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2022-04-04 19:22:22,442 DEBUG Corresponding type is already real float64.
2022-04-04 19:22:22,442 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:22:35,272 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2022-04-04 19:22:35,994 DEBUG Corresponding type is already real float64.
2022-04-04 19:22:35,994 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:22:48,866 INFO Computing data fidelity for 114564 rotations and 2048 images at 85%
2022-04-04 19:22:49,596 DEBUG Corresponding type is already real float64.
2022-04-04 19:22:49,596 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:23:02,559 INFO Computing data fidelity for 114564 rotations and 2048 images at 86%
2022-04-04 19:23:03,282 DEBUG Corresponding type is already real float64.
2022-04-04 19:23:03,282 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:23:16,159 INFO Computing data fidelity for 114564 rotations and 2048 images at 87%
2022-04-04 19:23:16,891 DEBUG Corresponding type is already real float64.
2022-04-04 19:23:16,892 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:23:30,377 INFO Computing data fidelity for 114564 rotations and 2048 images at 88%
2022-04-04 19:23:31,125 DEBUG Corresponding type is already real float64.
2022-04-04 19:23:31,126 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:23:44,117 INFO Computing data fidelity for 114564 rotations and 2048 images at 89%
2022-04-04 19:23:44,851 DEBUG Corresponding type is already real float64.
2022-04-04 19:23:44,851 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:23:57,957 INFO Computing data fidelity for 114564 rotations and 2048 images at 90%
2022-04-04 19:23:58,691 DEBUG Corresponding type is already real float64.
2022-04-04 19:23:58,691 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:24:11,654 INFO Computing data fidelity for 114564 rotations and 2048 images at 91%
2022-04-04 19:24:12,378 DEBUG Corresponding type is already real float64.
2022-04-04 19:24:12,378 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:24:25,347 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2022-04-04 19:24:26,068 DEBUG Corresponding type is already real float64.
2022-04-04 19:24:26,068 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:24:38,945 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2022-04-04 19:24:39,672 DEBUG Corresponding type is already real float64.
2022-04-04 19:24:39,672 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:24:52,642 INFO Computing data fidelity for 114564 rotations and 2048 images at 93%
2022-04-04 19:24:53,365 DEBUG Corresponding type is already real float64.
2022-04-04 19:24:53,366 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:25:06,321 INFO Computing data fidelity for 114564 rotations and 2048 images at 94%
2022-04-04 19:25:07,059 DEBUG Corresponding type is already real float64.
2022-04-04 19:25:07,060 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:25:19,998 INFO Computing data fidelity for 114564 rotations and 2048 images at 95%
2022-04-04 19:25:20,719 DEBUG Corresponding type is already real float64.
2022-04-04 19:25:20,719 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:25:33,634 INFO Computing data fidelity for 114564 rotations and 2048 images at 96%
2022-04-04 19:25:34,349 DEBUG Corresponding type is already real float64.
2022-04-04 19:25:34,349 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:25:47,290 INFO Computing data fidelity for 114564 rotations and 2048 images at 97%
2022-04-04 19:25:48,034 DEBUG Corresponding type is already real float64.
2022-04-04 19:25:48,034 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:26:00,987 INFO Computing data fidelity for 114564 rotations and 2048 images at 98%
2022-04-04 19:26:01,710 DEBUG Corresponding type is already real float64.
2022-04-04 19:26:01,710 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:26:14,602 INFO Computing data fidelity for 114564 rotations and 2048 images at 99%
2022-04-04 19:26:15,034 DEBUG Corresponding type is already real float64.
2022-04-04 19:26:15,034 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:26:26,420 INFO Computing data fidelity for 114564 rotations and 2048 images at 100%
2022-04-04 19:26:28,043 INFO Do lambda update step
2022-04-04 19:26:51,245 INFO Do rots update step
2022-04-04 19:26:52,038 INFO Projecting 2048 vectors onto 114564-simplex at 2%
2022-04-04 19:26:52,643 INFO Projecting 2048 vectors onto 114564-simplex at 4%
2022-04-04 19:26:53,243 INFO Projecting 2048 vectors onto 114564-simplex at 7%
2022-04-04 19:26:53,843 INFO Projecting 2048 vectors onto 114564-simplex at 9%
2022-04-04 19:26:54,470 INFO Projecting 2048 vectors onto 114564-simplex at 12%
2022-04-04 19:26:55,070 INFO Projecting 2048 vectors onto 114564-simplex at 14%
2022-04-04 19:26:55,679 INFO Projecting 2048 vectors onto 114564-simplex at 17%
2022-04-04 19:26:56,322 INFO Projecting 2048 vectors onto 114564-simplex at 19%
2022-04-04 19:26:57,003 INFO Projecting 2048 vectors onto 114564-simplex at 21%
2022-04-04 19:26:57,694 INFO Projecting 2048 vectors onto 114564-simplex at 24%
2022-04-04 19:26:58,593 INFO Projecting 2048 vectors onto 114564-simplex at 26%
2022-04-04 19:26:59,296 INFO Projecting 2048 vectors onto 114564-simplex at 29%
2022-04-04 19:27:00,001 INFO Projecting 2048 vectors onto 114564-simplex at 31%
2022-04-04 19:27:00,714 INFO Projecting 2048 vectors onto 114564-simplex at 34%
2022-04-04 19:27:01,432 INFO Projecting 2048 vectors onto 114564-simplex at 36%
2022-04-04 19:27:02,123 INFO Projecting 2048 vectors onto 114564-simplex at 39%
2022-04-04 19:27:02,813 INFO Projecting 2048 vectors onto 114564-simplex at 41%
2022-04-04 19:27:03,497 INFO Projecting 2048 vectors onto 114564-simplex at 43%
2022-04-04 19:27:04,179 INFO Projecting 2048 vectors onto 114564-simplex at 46%
2022-04-04 19:27:04,875 INFO Projecting 2048 vectors onto 114564-simplex at 48%
2022-04-04 19:27:05,768 INFO Projecting 2048 vectors onto 114564-simplex at 51%
2022-04-04 19:27:06,464 INFO Projecting 2048 vectors onto 114564-simplex at 53%
2022-04-04 19:27:07,160 INFO Projecting 2048 vectors onto 114564-simplex at 56%
2022-04-04 19:27:07,850 INFO Projecting 2048 vectors onto 114564-simplex at 58%
2022-04-04 19:27:08,538 INFO Projecting 2048 vectors onto 114564-simplex at 61%
2022-04-04 19:27:09,223 INFO Projecting 2048 vectors onto 114564-simplex at 63%
2022-04-04 19:27:09,912 INFO Projecting 2048 vectors onto 114564-simplex at 65%
2022-04-04 19:27:10,600 INFO Projecting 2048 vectors onto 114564-simplex at 68%
2022-04-04 19:27:11,287 INFO Projecting 2048 vectors onto 114564-simplex at 70%
2022-04-04 19:27:11,976 INFO Projecting 2048 vectors onto 114564-simplex at 73%
2022-04-04 19:27:12,885 INFO Projecting 2048 vectors onto 114564-simplex at 75%
2022-04-04 19:27:13,546 INFO Projecting 2048 vectors onto 114564-simplex at 78%
2022-04-04 19:27:14,198 INFO Projecting 2048 vectors onto 114564-simplex at 80%
2022-04-04 19:27:14,835 INFO Projecting 2048 vectors onto 114564-simplex at 83%
2022-04-04 19:27:15,460 INFO Projecting 2048 vectors onto 114564-simplex at 85%
2022-04-04 19:27:16,096 INFO Projecting 2048 vectors onto 114564-simplex at 87%
2022-04-04 19:27:16,737 INFO Projecting 2048 vectors onto 114564-simplex at 90%
2022-04-04 19:27:17,374 INFO Projecting 2048 vectors onto 114564-simplex at 92%
2022-04-04 19:27:18,015 INFO Projecting 2048 vectors onto 114564-simplex at 95%
2022-04-04 19:27:18,677 INFO Projecting 2048 vectors onto 114564-simplex at 97%
2022-04-04 19:27:19,325 INFO Projecting 2048 vectors onto 114564-simplex at 100%
2022-04-04 19:27:20,813 INFO Computing 50 means of 582 points in at most 20 steps...
2022-04-04 19:27:20,916 INFO Computing 2048 means at 2%
2022-04-04 19:27:21,009 INFO Computing 50 means of 597 points in at most 20 steps...
2022-04-04 19:27:21,089 INFO Computing 2048 means at 4%
2022-04-04 19:27:21,181 INFO Computing 50 means of 614 points in at most 20 steps...
2022-04-04 19:27:21,255 INFO Computing 2048 means at 7%
2022-04-04 19:27:21,345 INFO Computing 50 means of 617 points in at most 20 steps...
2022-04-04 19:27:21,425 INFO Computing 2048 means at 9%
2022-04-04 19:27:21,505 INFO Computing 50 means of 635 points in at most 20 steps...
2022-04-04 19:27:21,576 INFO Computing 2048 means at 12%
2022-04-04 19:27:21,651 INFO Computing 50 means of 631 points in at most 20 steps...
2022-04-04 19:27:21,719 INFO Computing 2048 means at 14%
2022-04-04 19:27:21,796 INFO Computing 50 means of 628 points in at most 20 steps...
2022-04-04 19:27:21,864 INFO Computing 2048 means at 17%
2022-04-04 19:27:21,940 INFO Computing 50 means of 633 points in at most 20 steps...
2022-04-04 19:27:22,008 INFO Computing 2048 means at 19%
2022-04-04 19:27:22,086 INFO Computing 50 means of 612 points in at most 20 steps...
2022-04-04 19:27:22,150 INFO Computing 2048 means at 21%
2022-04-04 19:27:22,226 INFO Computing 50 means of 602 points in at most 20 steps...
2022-04-04 19:27:22,292 INFO Computing 2048 means at 24%
2022-04-04 19:27:22,383 INFO Computing 50 means of 640 points in at most 20 steps...
2022-04-04 19:27:22,455 INFO Computing 2048 means at 26%
2022-04-04 19:27:22,531 INFO Computing 50 means of 632 points in at most 20 steps...
2022-04-04 19:27:22,618 INFO Computing 2048 means at 29%
2022-04-04 19:27:22,695 INFO Computing 50 means of 619 points in at most 20 steps...
2022-04-04 19:27:22,760 INFO Computing 2048 means at 31%
2022-04-04 19:27:22,836 INFO Computing 50 means of 622 points in at most 20 steps...
2022-04-04 19:27:22,901 INFO Computing 2048 means at 34%
2022-04-04 19:27:22,978 INFO Computing 50 means of 600 points in at most 20 steps...
2022-04-04 19:27:23,040 INFO Computing 2048 means at 36%
2022-04-04 19:27:23,115 INFO Computing 50 means of 592 points in at most 20 steps...
2022-04-04 19:27:23,204 INFO Computing 2048 means at 39%
2022-04-04 19:27:23,282 INFO Computing 50 means of 627 points in at most 20 steps...
2022-04-04 19:27:23,349 INFO Computing 2048 means at 41%
2022-04-04 19:27:23,425 INFO Computing 50 means of 629 points in at most 20 steps...
2022-04-04 19:27:23,492 INFO Computing 2048 means at 43%
2022-04-04 19:27:23,568 INFO Computing 50 means of 620 points in at most 20 steps...
2022-04-04 19:27:23,635 INFO Computing 2048 means at 46%
2022-04-04 19:27:23,710 INFO Computing 50 means of 599 points in at most 20 steps...
2022-04-04 19:27:23,774 INFO Computing 2048 means at 48%
2022-04-04 19:27:23,865 INFO Computing 50 means of 624 points in at most 20 steps...
2022-04-04 19:27:23,932 INFO Computing 2048 means at 51%
2022-04-04 19:27:24,009 INFO Computing 50 means of 608 points in at most 20 steps...
2022-04-04 19:27:24,076 INFO Computing 2048 means at 53%
2022-04-04 19:27:24,153 INFO Computing 50 means of 628 points in at most 20 steps...
2022-04-04 19:27:24,221 INFO Computing 2048 means at 56%
2022-04-04 19:27:24,297 INFO Computing 50 means of 593 points in at most 20 steps...
2022-04-04 19:27:24,361 INFO Computing 2048 means at 58%
2022-04-04 19:27:24,437 INFO Computing 50 means of 625 points in at most 20 steps...
2022-04-04 19:27:24,504 INFO Computing 2048 means at 61%
2022-04-04 19:27:24,581 INFO Computing 50 means of 636 points in at most 20 steps...
2022-04-04 19:27:24,650 INFO Computing 2048 means at 63%
2022-04-04 19:27:24,729 INFO Computing 50 means of 612 points in at most 20 steps...
2022-04-04 19:27:24,798 INFO Computing 2048 means at 65%
2022-04-04 19:27:24,877 INFO Computing 50 means of 622 points in at most 20 steps...
2022-04-04 19:27:24,945 INFO Computing 2048 means at 68%
2022-04-04 19:27:25,022 INFO Computing 50 means of 597 points in at most 20 steps...
2022-04-04 19:27:25,088 INFO Computing 2048 means at 70%
2022-04-04 19:27:25,169 INFO Computing 50 means of 611 points in at most 20 steps...
2022-04-04 19:27:25,234 INFO Computing 2048 means at 73%
2022-04-04 19:27:25,326 INFO Computing 50 means of 619 points in at most 20 steps...
2022-04-04 19:27:25,394 INFO Computing 2048 means at 75%
2022-04-04 19:27:25,471 INFO Computing 50 means of 635 points in at most 20 steps...
2022-04-04 19:27:25,539 INFO Computing 2048 means at 78%
2022-04-04 19:27:25,617 INFO Computing 50 means of 596 points in at most 20 steps...
2022-04-04 19:27:25,681 INFO Computing 2048 means at 80%
2022-04-04 19:27:25,759 INFO Computing 50 means of 637 points in at most 20 steps...
2022-04-04 19:27:25,833 INFO Computing 2048 means at 83%
2022-04-04 19:27:25,910 INFO Computing 50 means of 615 points in at most 20 steps...
2022-04-04 19:27:25,976 INFO Computing 2048 means at 85%
2022-04-04 19:27:26,051 INFO Computing 50 means of 638 points in at most 20 steps...
2022-04-04 19:27:26,119 INFO Computing 2048 means at 87%
2022-04-04 19:27:26,196 INFO Computing 50 means of 619 points in at most 20 steps...
2022-04-04 19:27:26,261 INFO Computing 2048 means at 90%
2022-04-04 19:27:26,337 INFO Computing 50 means of 615 points in at most 20 steps...
2022-04-04 19:27:26,400 INFO Computing 2048 means at 92%
2022-04-04 19:27:26,477 INFO Computing 50 means of 624 points in at most 20 steps...
2022-04-04 19:27:26,544 INFO Computing 2048 means at 95%
2022-04-04 19:27:26,619 INFO Computing 50 means of 603 points in at most 20 steps...
2022-04-04 19:27:26,684 INFO Computing 2048 means at 97%
2022-04-04 19:27:26,760 INFO Computing 48 means of 614 points in at most 20 steps...
2022-04-04 19:27:26,824 INFO Computing 2048 means at 100%
2022-04-04 19:27:31,393 INFO Do vol update step
2022-04-04 19:27:31,395 INFO Compute adjoint forward mapping on the images
2022-04-04 19:27:33,045 DEBUG Corresponding type is already complex complex128.
2022-04-04 19:27:35,438 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2022-04-04 19:27:35,455 INFO Computing adjoint forward mappings from 2048 rotations at 50%
2022-04-04 19:27:37,013 DEBUG Corresponding type is already complex complex128.
2022-04-04 19:27:39,535 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2022-04-04 19:27:39,548 INFO Computing adjoint forward mappings from 2048 rotations at 100%
2022-04-04 19:27:40,395 DEBUG Corresponding type is already real float64.
2022-04-04 19:27:40,395 DEBUG anufft passed real_type for signal, converting
2022-04-04 19:27:46,410 INFO Computing kernel from 2048 rotations at 50%
2022-04-04 19:27:47,241 DEBUG Corresponding type is already real float64.
2022-04-04 19:27:47,241 DEBUG anufft passed real_type for signal, converting
2022-04-04 19:27:53,554 INFO Computing kernel from 2048 rotations at 100%
2022-04-04 19:27:53,556 INFO Computing non-centered Fourier Transform
2022-04-04 19:27:53,749 INFO Add ramp filter regularisation
2022-04-04 19:27:58,863 INFO Update data_discrepancies
2022-04-04 19:27:58,864 INFO Computing \|Ag.u - f_i\|^2
2022-04-04 19:27:59,701 DEBUG Corresponding type is already real float64.
2022-04-04 19:27:59,701 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:28:14,114 INFO Computing data fidelity for 114564 rotations and 2048 images at 0%
2022-04-04 19:28:14,856 DEBUG Corresponding type is already real float64.
2022-04-04 19:28:14,857 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:28:29,217 INFO Computing data fidelity for 114564 rotations and 2048 images at 1%
2022-04-04 19:28:29,941 DEBUG Corresponding type is already real float64.
2022-04-04 19:28:29,941 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:28:43,774 INFO Computing data fidelity for 114564 rotations and 2048 images at 2%
2022-04-04 19:28:44,479 DEBUG Corresponding type is already real float64.
2022-04-04 19:28:44,479 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:28:57,529 INFO Computing data fidelity for 114564 rotations and 2048 images at 3%
2022-04-04 19:28:58,224 DEBUG Corresponding type is already real float64.
2022-04-04 19:28:58,224 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:29:11,119 INFO Computing data fidelity for 114564 rotations and 2048 images at 4%
2022-04-04 19:29:11,816 DEBUG Corresponding type is already real float64.
2022-04-04 19:29:11,816 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:29:24,991 INFO Computing data fidelity for 114564 rotations and 2048 images at 5%
2022-04-04 19:29:25,715 DEBUG Corresponding type is already real float64.
2022-04-04 19:29:25,715 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:29:39,620 INFO Computing data fidelity for 114564 rotations and 2048 images at 6%
2022-04-04 19:29:40,325 DEBUG Corresponding type is already real float64.
2022-04-04 19:29:40,326 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:29:53,428 INFO Computing data fidelity for 114564 rotations and 2048 images at 7%
2022-04-04 19:29:54,132 DEBUG Corresponding type is already real float64.
2022-04-04 19:29:54,132 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:30:07,220 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2022-04-04 19:30:07,922 DEBUG Corresponding type is already real float64.
2022-04-04 19:30:07,922 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:30:21,035 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2022-04-04 19:30:21,733 DEBUG Corresponding type is already real float64.
2022-04-04 19:30:21,733 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:30:34,821 INFO Computing data fidelity for 114564 rotations and 2048 images at 9%
2022-04-04 19:30:35,515 DEBUG Corresponding type is already real float64.
2022-04-04 19:30:35,516 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:30:48,633 INFO Computing data fidelity for 114564 rotations and 2048 images at 10%
2022-04-04 19:30:49,338 DEBUG Corresponding type is already real float64.
2022-04-04 19:30:49,339 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:31:02,438 INFO Computing data fidelity for 114564 rotations and 2048 images at 11%
2022-04-04 19:31:03,134 DEBUG Corresponding type is already real float64.
2022-04-04 19:31:03,134 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:31:16,141 INFO Computing data fidelity for 114564 rotations and 2048 images at 12%
2022-04-04 19:31:16,846 DEBUG Corresponding type is already real float64.
2022-04-04 19:31:16,846 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:31:29,914 INFO Computing data fidelity for 114564 rotations and 2048 images at 13%
2022-04-04 19:31:30,611 DEBUG Corresponding type is already real float64.
2022-04-04 19:31:30,611 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:31:43,625 INFO Computing data fidelity for 114564 rotations and 2048 images at 14%
2022-04-04 19:31:44,330 DEBUG Corresponding type is already real float64.
2022-04-04 19:31:44,330 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:31:57,356 INFO Computing data fidelity for 114564 rotations and 2048 images at 15%
2022-04-04 19:31:58,065 DEBUG Corresponding type is already real float64.
2022-04-04 19:31:58,065 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:32:10,961 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2022-04-04 19:32:11,665 DEBUG Corresponding type is already real float64.
2022-04-04 19:32:11,666 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:32:24,550 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2022-04-04 19:32:25,283 DEBUG Corresponding type is already real float64.
2022-04-04 19:32:25,283 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:32:38,725 INFO Computing data fidelity for 114564 rotations and 2048 images at 17%
2022-04-04 19:32:39,421 DEBUG Corresponding type is already real float64.
2022-04-04 19:32:39,421 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:32:52,270 INFO Computing data fidelity for 114564 rotations and 2048 images at 18%
2022-04-04 19:32:52,977 DEBUG Corresponding type is already real float64.
2022-04-04 19:32:52,977 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:33:05,741 INFO Computing data fidelity for 114564 rotations and 2048 images at 19%
2022-04-04 19:33:06,435 DEBUG Corresponding type is already real float64.
2022-04-04 19:33:06,435 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:33:19,254 INFO Computing data fidelity for 114564 rotations and 2048 images at 20%
2022-04-04 19:33:19,955 DEBUG Corresponding type is already real float64.
2022-04-04 19:33:19,956 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:33:32,766 INFO Computing data fidelity for 114564 rotations and 2048 images at 21%
2022-04-04 19:33:33,462 DEBUG Corresponding type is already real float64.
2022-04-04 19:33:33,462 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:33:46,309 INFO Computing data fidelity for 114564 rotations and 2048 images at 22%
2022-04-04 19:33:47,003 DEBUG Corresponding type is already real float64.
2022-04-04 19:33:47,003 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:33:59,846 INFO Computing data fidelity for 114564 rotations and 2048 images at 23%
2022-04-04 19:34:00,553 DEBUG Corresponding type is already real float64.
2022-04-04 19:34:00,553 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:34:13,366 INFO Computing data fidelity for 114564 rotations and 2048 images at 24%
2022-04-04 19:34:14,066 DEBUG Corresponding type is already real float64.
2022-04-04 19:34:14,066 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:34:26,973 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2022-04-04 19:34:27,671 DEBUG Corresponding type is already real float64.
2022-04-04 19:34:27,671 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:34:40,502 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2022-04-04 19:34:41,218 DEBUG Corresponding type is already real float64.
2022-04-04 19:34:41,218 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:34:54,090 INFO Computing data fidelity for 114564 rotations and 2048 images at 26%
2022-04-04 19:34:54,809 DEBUG Corresponding type is already real float64.
2022-04-04 19:34:54,809 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:35:07,686 INFO Computing data fidelity for 114564 rotations and 2048 images at 27%
2022-04-04 19:35:08,394 DEBUG Corresponding type is already real float64.
2022-04-04 19:35:08,394 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:35:21,306 INFO Computing data fidelity for 114564 rotations and 2048 images at 28%
2022-04-04 19:35:22,007 DEBUG Corresponding type is already real float64.
2022-04-04 19:35:22,007 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:35:34,787 INFO Computing data fidelity for 114564 rotations and 2048 images at 29%
2022-04-04 19:35:35,500 DEBUG Corresponding type is already real float64.
2022-04-04 19:35:35,500 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:35:48,878 INFO Computing data fidelity for 114564 rotations and 2048 images at 30%
2022-04-04 19:35:49,585 DEBUG Corresponding type is already real float64.
2022-04-04 19:35:49,585 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:36:02,450 INFO Computing data fidelity for 114564 rotations and 2048 images at 31%
2022-04-04 19:36:03,150 DEBUG Corresponding type is already real float64.
2022-04-04 19:36:03,150 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:36:15,965 INFO Computing data fidelity for 114564 rotations and 2048 images at 32%
2022-04-04 19:36:16,665 DEBUG Corresponding type is already real float64.
2022-04-04 19:36:16,665 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:36:29,474 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2022-04-04 19:36:30,180 DEBUG Corresponding type is already real float64.
2022-04-04 19:36:30,181 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:36:42,998 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2022-04-04 19:36:43,699 DEBUG Corresponding type is already real float64.
2022-04-04 19:36:43,699 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:36:56,622 INFO Computing data fidelity for 114564 rotations and 2048 images at 34%
2022-04-04 19:36:57,325 DEBUG Corresponding type is already real float64.
2022-04-04 19:36:57,325 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:37:10,167 INFO Computing data fidelity for 114564 rotations and 2048 images at 35%
2022-04-04 19:37:10,885 DEBUG Corresponding type is already real float64.
2022-04-04 19:37:10,885 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:37:23,716 INFO Computing data fidelity for 114564 rotations and 2048 images at 36%
2022-04-04 19:37:24,417 DEBUG Corresponding type is already real float64.
2022-04-04 19:37:24,417 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:37:37,211 INFO Computing data fidelity for 114564 rotations and 2048 images at 37%
2022-04-04 19:37:37,920 DEBUG Corresponding type is already real float64.
2022-04-04 19:37:37,920 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:37:50,858 INFO Computing data fidelity for 114564 rotations and 2048 images at 38%
2022-04-04 19:37:51,577 DEBUG Corresponding type is already real float64.
2022-04-04 19:37:51,577 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:38:04,511 INFO Computing data fidelity for 114564 rotations and 2048 images at 39%
2022-04-04 19:38:05,220 DEBUG Corresponding type is already real float64.
2022-04-04 19:38:05,220 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:38:18,174 INFO Computing data fidelity for 114564 rotations and 2048 images at 40%
2022-04-04 19:38:18,887 DEBUG Corresponding type is already real float64.
2022-04-04 19:38:18,887 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:38:32,540 INFO Computing data fidelity for 114564 rotations and 2048 images at 41%
2022-04-04 19:38:33,259 DEBUG Corresponding type is already real float64.
2022-04-04 19:38:33,259 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:38:47,725 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2022-04-04 19:38:48,458 DEBUG Corresponding type is already real float64.
2022-04-04 19:38:48,458 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:39:01,857 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2022-04-04 19:39:02,577 DEBUG Corresponding type is already real float64.
2022-04-04 19:39:02,577 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:39:15,572 INFO Computing data fidelity for 114564 rotations and 2048 images at 43%
2022-04-04 19:39:16,297 DEBUG Corresponding type is already real float64.
2022-04-04 19:39:16,297 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:39:29,234 INFO Computing data fidelity for 114564 rotations and 2048 images at 44%
2022-04-04 19:39:29,966 DEBUG Corresponding type is already real float64.
2022-04-04 19:39:29,966 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:39:42,851 INFO Computing data fidelity for 114564 rotations and 2048 images at 45%
2022-04-04 19:39:43,580 DEBUG Corresponding type is already real float64.
2022-04-04 19:39:43,580 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:39:56,602 INFO Computing data fidelity for 114564 rotations and 2048 images at 46%
2022-04-04 19:39:57,330 DEBUG Corresponding type is already real float64.
2022-04-04 19:39:57,330 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:40:10,201 INFO Computing data fidelity for 114564 rotations and 2048 images at 47%
2022-04-04 19:40:10,938 DEBUG Corresponding type is already real float64.
2022-04-04 19:40:10,939 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:40:23,917 INFO Computing data fidelity for 114564 rotations and 2048 images at 48%
2022-04-04 19:40:24,648 DEBUG Corresponding type is already real float64.
2022-04-04 19:40:24,648 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:40:38,524 INFO Computing data fidelity for 114564 rotations and 2048 images at 49%
2022-04-04 19:40:39,250 DEBUG Corresponding type is already real float64.
2022-04-04 19:40:39,250 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:40:52,205 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2022-04-04 19:40:52,926 DEBUG Corresponding type is already real float64.
2022-04-04 19:40:52,926 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:41:05,922 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2022-04-04 19:41:06,651 DEBUG Corresponding type is already real float64.
2022-04-04 19:41:06,651 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:41:19,597 INFO Computing data fidelity for 114564 rotations and 2048 images at 51%
2022-04-04 19:41:20,317 DEBUG Corresponding type is already real float64.
2022-04-04 19:41:20,317 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:41:33,888 INFO Computing data fidelity for 114564 rotations and 2048 images at 52%
2022-04-04 19:41:34,641 DEBUG Corresponding type is already real float64.
2022-04-04 19:41:34,642 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:41:48,951 INFO Computing data fidelity for 114564 rotations and 2048 images at 53%
2022-04-04 19:41:49,740 DEBUG Corresponding type is already real float64.
2022-04-04 19:41:49,740 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:42:03,092 INFO Computing data fidelity for 114564 rotations and 2048 images at 54%
2022-04-04 19:42:03,964 DEBUG Corresponding type is already real float64.
2022-04-04 19:42:03,965 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:42:19,402 INFO Computing data fidelity for 114564 rotations and 2048 images at 55%
2022-04-04 19:42:20,202 DEBUG Corresponding type is already real float64.
2022-04-04 19:42:20,203 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:42:35,099 INFO Computing data fidelity for 114564 rotations and 2048 images at 56%
2022-04-04 19:42:35,969 DEBUG Corresponding type is already real float64.
2022-04-04 19:42:35,969 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:42:51,369 INFO Computing data fidelity for 114564 rotations and 2048 images at 57%
2022-04-04 19:42:52,195 DEBUG Corresponding type is already real float64.
2022-04-04 19:42:52,195 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:43:07,184 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2022-04-04 19:43:08,038 DEBUG Corresponding type is already real float64.
2022-04-04 19:43:08,038 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:43:23,357 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2022-04-04 19:43:24,187 DEBUG Corresponding type is already real float64.
2022-04-04 19:43:24,188 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:43:39,816 INFO Computing data fidelity for 114564 rotations and 2048 images at 59%
2022-04-04 19:43:40,960 DEBUG Corresponding type is already real float64.
2022-04-04 19:43:40,961 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:43:56,562 INFO Computing data fidelity for 114564 rotations and 2048 images at 60%
2022-04-04 19:43:58,162 DEBUG Corresponding type is already real float64.
2022-04-04 19:43:58,163 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:44:16,311 INFO Computing data fidelity for 114564 rotations and 2048 images at 61%
2022-04-04 19:44:17,506 DEBUG Corresponding type is already real float64.
2022-04-04 19:44:17,507 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:44:37,322 INFO Computing data fidelity for 114564 rotations and 2048 images at 62%
2022-04-04 19:44:38,437 DEBUG Corresponding type is already real float64.
2022-04-04 19:44:38,437 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:44:55,175 INFO Computing data fidelity for 114564 rotations and 2048 images at 63%
2022-04-04 19:44:56,142 DEBUG Corresponding type is already real float64.
2022-04-04 19:44:56,142 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:45:12,490 INFO Computing data fidelity for 114564 rotations and 2048 images at 64%
2022-04-04 19:45:13,355 DEBUG Corresponding type is already real float64.
2022-04-04 19:45:13,356 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:45:28,918 INFO Computing data fidelity for 114564 rotations and 2048 images at 65%
2022-04-04 19:45:29,757 DEBUG Corresponding type is already real float64.
2022-04-04 19:45:29,757 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:45:45,927 INFO Computing data fidelity for 114564 rotations and 2048 images at 66%
2022-04-04 19:45:46,865 DEBUG Corresponding type is already real float64.
2022-04-04 19:45:46,865 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:46:02,611 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2022-04-04 19:46:03,442 DEBUG Corresponding type is already real float64.
2022-04-04 19:46:03,442 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:46:19,732 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2022-04-04 19:46:20,656 DEBUG Corresponding type is already real float64.
2022-04-04 19:46:20,656 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:46:36,641 INFO Computing data fidelity for 114564 rotations and 2048 images at 68%
2022-04-04 19:46:37,471 DEBUG Corresponding type is already real float64.
2022-04-04 19:46:37,472 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:46:52,603 INFO Computing data fidelity for 114564 rotations and 2048 images at 69%
2022-04-04 19:46:53,419 DEBUG Corresponding type is already real float64.
2022-04-04 19:46:53,419 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:47:08,060 INFO Computing data fidelity for 114564 rotations and 2048 images at 70%
2022-04-04 19:47:08,848 DEBUG Corresponding type is already real float64.
2022-04-04 19:47:08,848 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:47:23,511 INFO Computing data fidelity for 114564 rotations and 2048 images at 71%
2022-04-04 19:47:24,299 DEBUG Corresponding type is already real float64.
2022-04-04 19:47:24,299 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:47:38,955 INFO Computing data fidelity for 114564 rotations and 2048 images at 72%
2022-04-04 19:47:39,744 DEBUG Corresponding type is already real float64.
2022-04-04 19:47:39,745 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:47:54,356 INFO Computing data fidelity for 114564 rotations and 2048 images at 73%
2022-04-04 19:47:55,164 DEBUG Corresponding type is already real float64.
2022-04-04 19:47:55,164 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:48:10,161 INFO Computing data fidelity for 114564 rotations and 2048 images at 74%
2022-04-04 19:48:10,947 DEBUG Corresponding type is already real float64.
2022-04-04 19:48:10,947 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:48:25,518 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2022-04-04 19:48:26,297 DEBUG Corresponding type is already real float64.
2022-04-04 19:48:26,297 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:48:40,835 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2022-04-04 19:48:41,607 DEBUG Corresponding type is already real float64.
2022-04-04 19:48:41,607 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:48:56,115 INFO Computing data fidelity for 114564 rotations and 2048 images at 76%
2022-04-04 19:48:56,892 DEBUG Corresponding type is already real float64.
2022-04-04 19:48:56,892 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:49:11,385 INFO Computing data fidelity for 114564 rotations and 2048 images at 77%
2022-04-04 19:49:12,158 DEBUG Corresponding type is already real float64.
2022-04-04 19:49:12,158 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:49:26,662 INFO Computing data fidelity for 114564 rotations and 2048 images at 78%
2022-04-04 19:49:27,443 DEBUG Corresponding type is already real float64.
2022-04-04 19:49:27,443 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:49:42,106 INFO Computing data fidelity for 114564 rotations and 2048 images at 79%
2022-04-04 19:49:42,903 DEBUG Corresponding type is already real float64.
2022-04-04 19:49:42,903 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:49:57,718 INFO Computing data fidelity for 114564 rotations and 2048 images at 80%
2022-04-04 19:49:58,498 DEBUG Corresponding type is already real float64.
2022-04-04 19:49:58,498 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:50:13,056 INFO Computing data fidelity for 114564 rotations and 2048 images at 81%
2022-04-04 19:50:13,832 DEBUG Corresponding type is already real float64.
2022-04-04 19:50:13,833 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:50:28,341 INFO Computing data fidelity for 114564 rotations and 2048 images at 82%
2022-04-04 19:50:29,119 DEBUG Corresponding type is already real float64.
2022-04-04 19:50:29,119 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:50:43,596 INFO Computing data fidelity for 114564 rotations and 2048 images at 83%
2022-04-04 19:50:44,372 DEBUG Corresponding type is already real float64.
2022-04-04 19:50:44,373 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:50:58,812 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2022-04-04 19:50:59,595 DEBUG Corresponding type is already real float64.
2022-04-04 19:50:59,595 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:51:14,086 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2022-04-04 19:51:14,873 DEBUG Corresponding type is already real float64.
2022-04-04 19:51:14,873 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:51:29,288 INFO Computing data fidelity for 114564 rotations and 2048 images at 85%
2022-04-04 19:51:30,071 DEBUG Corresponding type is already real float64.
2022-04-04 19:51:30,071 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:51:44,856 INFO Computing data fidelity for 114564 rotations and 2048 images at 86%
2022-04-04 19:51:45,652 DEBUG Corresponding type is already real float64.
2022-04-04 19:51:45,653 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:52:00,409 INFO Computing data fidelity for 114564 rotations and 2048 images at 87%
2022-04-04 19:52:01,243 DEBUG Corresponding type is already real float64.
2022-04-04 19:52:01,243 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:52:16,199 INFO Computing data fidelity for 114564 rotations and 2048 images at 88%
2022-04-04 19:52:17,083 DEBUG Corresponding type is already real float64.
2022-04-04 19:52:17,083 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:52:32,775 INFO Computing data fidelity for 114564 rotations and 2048 images at 89%
2022-04-04 19:52:33,609 DEBUG Corresponding type is already real float64.
2022-04-04 19:52:33,610 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:52:49,475 INFO Computing data fidelity for 114564 rotations and 2048 images at 90%
2022-04-04 19:52:50,342 DEBUG Corresponding type is already real float64.
2022-04-04 19:52:50,343 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:53:05,548 INFO Computing data fidelity for 114564 rotations and 2048 images at 91%
2022-04-04 19:53:06,452 DEBUG Corresponding type is already real float64.
2022-04-04 19:53:06,452 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:53:21,176 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2022-04-04 19:53:22,040 DEBUG Corresponding type is already real float64.
2022-04-04 19:53:22,040 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:53:36,860 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2022-04-04 19:53:37,845 DEBUG Corresponding type is already real float64.
2022-04-04 19:53:37,845 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:53:52,884 INFO Computing data fidelity for 114564 rotations and 2048 images at 93%
2022-04-04 19:53:53,900 DEBUG Corresponding type is already real float64.
2022-04-04 19:53:53,901 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:54:09,277 INFO Computing data fidelity for 114564 rotations and 2048 images at 94%
2022-04-04 19:54:10,299 DEBUG Corresponding type is already real float64.
2022-04-04 19:54:10,300 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:54:25,395 INFO Computing data fidelity for 114564 rotations and 2048 images at 95%
2022-04-04 19:54:26,605 DEBUG Corresponding type is already real float64.
2022-04-04 19:54:26,605 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:54:41,761 INFO Computing data fidelity for 114564 rotations and 2048 images at 96%
2022-04-04 19:54:42,922 DEBUG Corresponding type is already real float64.
2022-04-04 19:54:42,922 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:54:57,637 INFO Computing data fidelity for 114564 rotations and 2048 images at 97%
2022-04-04 19:54:58,700 DEBUG Corresponding type is already real float64.
2022-04-04 19:54:58,700 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:55:13,307 INFO Computing data fidelity for 114564 rotations and 2048 images at 98%
2022-04-04 19:55:14,381 DEBUG Corresponding type is already real float64.
2022-04-04 19:55:14,381 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:55:29,966 INFO Computing data fidelity for 114564 rotations and 2048 images at 99%
2022-04-04 19:55:31,008 DEBUG Corresponding type is already real float64.
2022-04-04 19:55:31,009 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:55:43,633 INFO Computing data fidelity for 114564 rotations and 2048 images at 100%
2022-04-04 19:55:48,177 INFO Do lambda update step
2022-04-04 19:56:14,380 INFO Do rots update step
2022-04-04 19:56:15,388 INFO Projecting 2048 vectors onto 114564-simplex at 2%
2022-04-04 19:56:16,100 INFO Projecting 2048 vectors onto 114564-simplex at 4%
2022-04-04 19:56:17,035 INFO Projecting 2048 vectors onto 114564-simplex at 7%
2022-04-04 19:56:17,983 INFO Projecting 2048 vectors onto 114564-simplex at 9%
2022-04-04 19:56:18,881 INFO Projecting 2048 vectors onto 114564-simplex at 12%
2022-04-04 19:56:19,584 INFO Projecting 2048 vectors onto 114564-simplex at 14%
2022-04-04 19:56:20,298 INFO Projecting 2048 vectors onto 114564-simplex at 17%
2022-04-04 19:56:20,996 INFO Projecting 2048 vectors onto 114564-simplex at 19%
2022-04-04 19:56:21,673 INFO Projecting 2048 vectors onto 114564-simplex at 21%
2022-04-04 19:56:22,343 INFO Projecting 2048 vectors onto 114564-simplex at 24%
2022-04-04 19:56:23,258 INFO Projecting 2048 vectors onto 114564-simplex at 26%
2022-04-04 19:56:24,036 INFO Projecting 2048 vectors onto 114564-simplex at 29%
2022-04-04 19:56:24,769 INFO Projecting 2048 vectors onto 114564-simplex at 31%
2022-04-04 19:56:25,499 INFO Projecting 2048 vectors onto 114564-simplex at 34%
2022-04-04 19:56:26,190 INFO Projecting 2048 vectors onto 114564-simplex at 36%
2022-04-04 19:56:26,955 INFO Projecting 2048 vectors onto 114564-simplex at 39%
2022-04-04 19:56:27,757 INFO Projecting 2048 vectors onto 114564-simplex at 41%
2022-04-04 19:56:28,536 INFO Projecting 2048 vectors onto 114564-simplex at 43%
2022-04-04 19:56:29,323 INFO Projecting 2048 vectors onto 114564-simplex at 46%
2022-04-04 19:56:30,002 INFO Projecting 2048 vectors onto 114564-simplex at 48%
2022-04-04 19:56:30,874 INFO Projecting 2048 vectors onto 114564-simplex at 51%
2022-04-04 19:56:31,542 INFO Projecting 2048 vectors onto 114564-simplex at 53%
2022-04-04 19:56:32,199 INFO Projecting 2048 vectors onto 114564-simplex at 56%
2022-04-04 19:56:32,996 INFO Projecting 2048 vectors onto 114564-simplex at 58%
2022-04-04 19:56:33,868 INFO Projecting 2048 vectors onto 114564-simplex at 61%
2022-04-04 19:56:34,715 INFO Projecting 2048 vectors onto 114564-simplex at 63%
2022-04-04 19:56:35,475 INFO Projecting 2048 vectors onto 114564-simplex at 65%
2022-04-04 19:56:36,191 INFO Projecting 2048 vectors onto 114564-simplex at 68%
2022-04-04 19:56:36,895 INFO Projecting 2048 vectors onto 114564-simplex at 70%
2022-04-04 19:56:37,591 INFO Projecting 2048 vectors onto 114564-simplex at 73%
2022-04-04 19:56:38,471 INFO Projecting 2048 vectors onto 114564-simplex at 75%
2022-04-04 19:56:39,155 INFO Projecting 2048 vectors onto 114564-simplex at 78%
2022-04-04 19:56:39,855 INFO Projecting 2048 vectors onto 114564-simplex at 80%
2022-04-04 19:56:40,565 INFO Projecting 2048 vectors onto 114564-simplex at 83%
2022-04-04 19:56:41,294 INFO Projecting 2048 vectors onto 114564-simplex at 85%
2022-04-04 19:56:42,058 INFO Projecting 2048 vectors onto 114564-simplex at 87%
2022-04-04 19:56:42,794 INFO Projecting 2048 vectors onto 114564-simplex at 90%
2022-04-04 19:56:43,536 INFO Projecting 2048 vectors onto 114564-simplex at 92%
2022-04-04 19:56:44,256 INFO Projecting 2048 vectors onto 114564-simplex at 95%
2022-04-04 19:56:44,977 INFO Projecting 2048 vectors onto 114564-simplex at 97%
2022-04-04 19:56:45,705 INFO Projecting 2048 vectors onto 114564-simplex at 100%
2022-04-04 19:56:47,230 INFO Computing 50 means of 632 points in at most 20 steps...
2022-04-04 19:56:47,416 INFO Computing 2048 means at 2%
2022-04-04 19:56:47,535 INFO Computing 50 means of 621 points in at most 20 steps...
2022-04-04 19:56:47,640 INFO Computing 2048 means at 4%
2022-04-04 19:56:47,753 INFO Computing 50 means of 631 points in at most 20 steps...
2022-04-04 19:56:47,865 INFO Computing 2048 means at 7%
2022-04-04 19:56:47,975 INFO Computing 50 means of 643 points in at most 20 steps...
2022-04-04 19:56:48,116 INFO Computing 2048 means at 9%
2022-04-04 19:56:48,225 INFO Computing 50 means of 618 points in at most 20 steps...
2022-04-04 19:56:48,343 INFO Computing 2048 means at 12%
2022-04-04 19:56:48,446 INFO Computing 50 means of 619 points in at most 20 steps...
2022-04-04 19:56:48,558 INFO Computing 2048 means at 14%
2022-04-04 19:56:48,656 INFO Computing 50 means of 611 points in at most 20 steps...
2022-04-04 19:56:48,765 INFO Computing 2048 means at 17%
2022-04-04 19:56:48,876 INFO Computing 50 means of 626 points in at most 20 steps...
2022-04-04 19:56:48,991 INFO Computing 2048 means at 19%
2022-04-04 19:56:49,108 INFO Computing 50 means of 609 points in at most 20 steps...
2022-04-04 19:56:49,231 INFO Computing 2048 means at 21%
2022-04-04 19:56:49,328 INFO Computing 50 means of 618 points in at most 20 steps...
2022-04-04 19:56:49,466 INFO Computing 2048 means at 24%
2022-04-04 19:56:49,579 INFO Computing 50 means of 615 points in at most 20 steps...
2022-04-04 19:56:49,683 INFO Computing 2048 means at 26%
2022-04-04 19:56:49,813 INFO Computing 50 means of 636 points in at most 20 steps...
2022-04-04 19:56:50,063 INFO Computing 2048 means at 29%
2022-04-04 19:56:50,215 INFO Computing 50 means of 638 points in at most 20 steps...
2022-04-04 19:56:50,382 INFO Computing 2048 means at 31%
2022-04-04 19:56:50,503 INFO Computing 50 means of 610 points in at most 20 steps...
2022-04-04 19:56:50,654 INFO Computing 2048 means at 34%
2022-04-04 19:56:50,775 INFO Computing 50 means of 585 points in at most 20 steps...
2022-04-04 19:56:50,940 INFO Computing 2048 means at 36%
2022-04-04 19:56:51,070 INFO Computing 50 means of 591 points in at most 20 steps...
2022-04-04 19:56:51,218 INFO Computing 2048 means at 39%
2022-04-04 19:56:51,338 INFO Computing 50 means of 632 points in at most 20 steps...
2022-04-04 19:56:51,491 INFO Computing 2048 means at 41%
2022-04-04 19:56:51,616 INFO Computing 50 means of 589 points in at most 20 steps...
2022-04-04 19:56:51,766 INFO Computing 2048 means at 43%
2022-04-04 19:56:51,890 INFO Computing 50 means of 608 points in at most 20 steps...
2022-04-04 19:56:52,045 INFO Computing 2048 means at 46%
2022-04-04 19:56:52,170 INFO Computing 50 means of 638 points in at most 20 steps...
2022-04-04 19:56:52,330 INFO Computing 2048 means at 48%
2022-04-04 19:56:52,481 INFO Computing 50 means of 636 points in at most 20 steps...
2022-04-04 19:56:52,578 INFO Computing 2048 means at 51%
2022-04-04 19:56:52,665 INFO Computing 50 means of 608 points in at most 20 steps...
2022-04-04 19:56:52,766 INFO Computing 2048 means at 53%
2022-04-04 19:56:52,858 INFO Computing 50 means of 612 points in at most 20 steps...
2022-04-04 19:56:52,944 INFO Computing 2048 means at 56%
2022-04-04 19:56:53,042 INFO Computing 50 means of 618 points in at most 20 steps...
2022-04-04 19:56:53,133 INFO Computing 2048 means at 58%
2022-04-04 19:56:53,224 INFO Computing 50 means of 625 points in at most 20 steps...
2022-04-04 19:56:53,325 INFO Computing 2048 means at 61%
2022-04-04 19:56:53,420 INFO Computing 50 means of 627 points in at most 20 steps...
2022-04-04 19:56:53,513 INFO Computing 2048 means at 63%
2022-04-04 19:56:53,608 INFO Computing 50 means of 611 points in at most 20 steps...
2022-04-04 19:56:53,696 INFO Computing 2048 means at 65%
2022-04-04 19:56:53,790 INFO Computing 50 means of 622 points in at most 20 steps...
2022-04-04 19:56:53,878 INFO Computing 2048 means at 68%
2022-04-04 19:56:53,973 INFO Computing 50 means of 613 points in at most 20 steps...
2022-04-04 19:56:54,061 INFO Computing 2048 means at 70%
2022-04-04 19:56:54,157 INFO Computing 50 means of 606 points in at most 20 steps...
2022-04-04 19:56:54,245 INFO Computing 2048 means at 73%
2022-04-04 19:56:54,366 INFO Computing 50 means of 619 points in at most 20 steps...
2022-04-04 19:56:54,456 INFO Computing 2048 means at 75%
2022-04-04 19:56:54,547 INFO Computing 50 means of 612 points in at most 20 steps...
2022-04-04 19:56:54,621 INFO Computing 2048 means at 78%
2022-04-04 19:56:54,710 INFO Computing 50 means of 616 points in at most 20 steps...
2022-04-04 19:56:54,790 INFO Computing 2048 means at 80%
2022-04-04 19:56:54,887 INFO Computing 50 means of 623 points in at most 20 steps...
2022-04-04 19:56:54,991 INFO Computing 2048 means at 83%
2022-04-04 19:56:55,094 INFO Computing 50 means of 599 points in at most 20 steps...
2022-04-04 19:56:55,190 INFO Computing 2048 means at 85%
2022-04-04 19:56:55,286 INFO Computing 50 means of 599 points in at most 20 steps...
2022-04-04 19:56:55,376 INFO Computing 2048 means at 87%
2022-04-04 19:56:55,483 INFO Computing 50 means of 644 points in at most 20 steps...
2022-04-04 19:56:55,583 INFO Computing 2048 means at 90%
2022-04-04 19:56:55,673 INFO Computing 50 means of 602 points in at most 20 steps...
2022-04-04 19:56:55,748 INFO Computing 2048 means at 92%
2022-04-04 19:56:55,834 INFO Computing 50 means of 607 points in at most 20 steps...
2022-04-04 19:56:55,920 INFO Computing 2048 means at 95%
2022-04-04 19:56:56,009 INFO Computing 50 means of 584 points in at most 20 steps...
2022-04-04 19:56:56,102 INFO Computing 2048 means at 97%
2022-04-04 19:56:56,197 INFO Computing 48 means of 593 points in at most 20 steps...
2022-04-04 19:56:56,286 INFO Computing 2048 means at 100%
2022-04-04 19:57:00,445 INFO Do vol update step
2022-04-04 19:57:00,446 INFO Compute adjoint forward mapping on the images
2022-04-04 19:57:02,796 DEBUG Corresponding type is already complex complex128.
2022-04-04 19:57:05,562 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2022-04-04 19:57:05,575 INFO Computing adjoint forward mappings from 2048 rotations at 50%
2022-04-04 19:57:07,126 DEBUG Corresponding type is already complex complex128.
2022-04-04 19:57:11,402 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2022-04-04 19:57:11,415 INFO Computing adjoint forward mappings from 2048 rotations at 100%
2022-04-04 19:57:12,305 DEBUG Corresponding type is already real float64.
2022-04-04 19:57:12,305 DEBUG anufft passed real_type for signal, converting
2022-04-04 19:57:19,270 INFO Computing kernel from 2048 rotations at 50%
2022-04-04 19:57:20,210 DEBUG Corresponding type is already real float64.
2022-04-04 19:57:20,210 DEBUG anufft passed real_type for signal, converting
2022-04-04 19:57:27,020 INFO Computing kernel from 2048 rotations at 100%
2022-04-04 19:57:27,021 INFO Computing non-centered Fourier Transform
2022-04-04 19:57:27,185 INFO Add ramp filter regularisation
2022-04-04 19:57:32,664 INFO Update data_discrepancies
2022-04-04 19:57:32,665 INFO Computing \|Ag.u - f_i\|^2
2022-04-04 19:57:33,688 DEBUG Corresponding type is already real float64.
2022-04-04 19:57:33,688 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:57:49,071 INFO Computing data fidelity for 114564 rotations and 2048 images at 0%
2022-04-04 19:57:49,856 DEBUG Corresponding type is already real float64.
2022-04-04 19:57:49,856 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:58:04,873 INFO Computing data fidelity for 114564 rotations and 2048 images at 1%
2022-04-04 19:58:05,653 DEBUG Corresponding type is already real float64.
2022-04-04 19:58:05,653 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:58:20,399 INFO Computing data fidelity for 114564 rotations and 2048 images at 2%
2022-04-04 19:58:21,176 DEBUG Corresponding type is already real float64.
2022-04-04 19:58:21,176 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:58:36,022 INFO Computing data fidelity for 114564 rotations and 2048 images at 3%
2022-04-04 19:58:36,797 DEBUG Corresponding type is already real float64.
2022-04-04 19:58:36,797 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:58:51,292 INFO Computing data fidelity for 114564 rotations and 2048 images at 4%
2022-04-04 19:58:52,055 DEBUG Corresponding type is already real float64.
2022-04-04 19:58:52,055 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:59:06,525 INFO Computing data fidelity for 114564 rotations and 2048 images at 5%
2022-04-04 19:59:07,295 DEBUG Corresponding type is already real float64.
2022-04-04 19:59:07,295 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:59:21,892 INFO Computing data fidelity for 114564 rotations and 2048 images at 6%
2022-04-04 19:59:22,742 DEBUG Corresponding type is already real float64.
2022-04-04 19:59:22,742 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:59:37,740 INFO Computing data fidelity for 114564 rotations and 2048 images at 7%
2022-04-04 19:59:38,532 DEBUG Corresponding type is already real float64.
2022-04-04 19:59:38,533 DEBUG nufft passed real_type for signal, converting
2022-04-04 19:59:53,299 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2022-04-04 19:59:54,080 DEBUG Corresponding type is already real float64.
2022-04-04 19:59:54,081 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:00:08,930 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2022-04-04 20:00:09,721 DEBUG Corresponding type is already real float64.
2022-04-04 20:00:09,721 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:00:24,411 INFO Computing data fidelity for 114564 rotations and 2048 images at 9%
2022-04-04 20:00:25,184 DEBUG Corresponding type is already real float64.
2022-04-04 20:00:25,184 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:00:39,938 INFO Computing data fidelity for 114564 rotations and 2048 images at 10%
2022-04-04 20:00:40,732 DEBUG Corresponding type is already real float64.
2022-04-04 20:00:40,732 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:00:55,707 INFO Computing data fidelity for 114564 rotations and 2048 images at 11%
2022-04-04 20:00:56,494 DEBUG Corresponding type is already real float64.
2022-04-04 20:00:56,494 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:01:11,121 INFO Computing data fidelity for 114564 rotations and 2048 images at 12%
2022-04-04 20:01:11,892 DEBUG Corresponding type is already real float64.
2022-04-04 20:01:11,892 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:01:26,458 INFO Computing data fidelity for 114564 rotations and 2048 images at 13%
2022-04-04 20:01:27,230 DEBUG Corresponding type is already real float64.
2022-04-04 20:01:27,230 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:01:41,706 INFO Computing data fidelity for 114564 rotations and 2048 images at 14%
2022-04-04 20:01:42,486 DEBUG Corresponding type is already real float64.
2022-04-04 20:01:42,487 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:01:56,956 INFO Computing data fidelity for 114564 rotations and 2048 images at 15%
2022-04-04 20:01:57,739 DEBUG Corresponding type is already real float64.
2022-04-04 20:01:57,740 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:02:12,262 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2022-04-04 20:02:13,065 DEBUG Corresponding type is already real float64.
2022-04-04 20:02:13,065 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:02:27,504 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2022-04-04 20:02:28,314 DEBUG Corresponding type is already real float64.
2022-04-04 20:02:28,315 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:02:42,801 INFO Computing data fidelity for 114564 rotations and 2048 images at 17%
2022-04-04 20:02:43,612 DEBUG Corresponding type is already real float64.
2022-04-04 20:02:43,612 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:02:58,099 INFO Computing data fidelity for 114564 rotations and 2048 images at 18%
2022-04-04 20:02:58,907 DEBUG Corresponding type is already real float64.
2022-04-04 20:02:58,907 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:03:13,511 INFO Computing data fidelity for 114564 rotations and 2048 images at 19%
2022-04-04 20:03:14,379 DEBUG Corresponding type is already real float64.
2022-04-04 20:03:14,380 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:03:29,053 INFO Computing data fidelity for 114564 rotations and 2048 images at 20%
2022-04-04 20:03:29,886 DEBUG Corresponding type is already real float64.
2022-04-04 20:03:29,886 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:03:44,402 INFO Computing data fidelity for 114564 rotations and 2048 images at 21%
2022-04-04 20:03:45,255 DEBUG Corresponding type is already real float64.
2022-04-04 20:03:45,255 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:03:59,896 INFO Computing data fidelity for 114564 rotations and 2048 images at 22%
2022-04-04 20:04:00,761 DEBUG Corresponding type is already real float64.
2022-04-04 20:04:00,761 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:04:15,304 INFO Computing data fidelity for 114564 rotations and 2048 images at 23%
2022-04-04 20:04:16,201 DEBUG Corresponding type is already real float64.
2022-04-04 20:04:16,201 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:04:31,226 INFO Computing data fidelity for 114564 rotations and 2048 images at 24%
2022-04-04 20:04:32,133 DEBUG Corresponding type is already real float64.
2022-04-04 20:04:32,133 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:04:47,192 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2022-04-04 20:04:48,142 DEBUG Corresponding type is already real float64.
2022-04-04 20:04:48,143 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:05:03,387 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2022-04-04 20:05:04,309 DEBUG Corresponding type is already real float64.
2022-04-04 20:05:04,309 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:05:19,005 INFO Computing data fidelity for 114564 rotations and 2048 images at 26%
2022-04-04 20:05:19,947 DEBUG Corresponding type is already real float64.
2022-04-04 20:05:19,948 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:05:34,548 INFO Computing data fidelity for 114564 rotations and 2048 images at 27%
2022-04-04 20:05:35,620 DEBUG Corresponding type is already real float64.
2022-04-04 20:05:35,621 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:05:50,129 INFO Computing data fidelity for 114564 rotations and 2048 images at 28%
2022-04-04 20:05:51,125 DEBUG Corresponding type is already real float64.
2022-04-04 20:05:51,125 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:06:05,377 INFO Computing data fidelity for 114564 rotations and 2048 images at 29%
2022-04-04 20:06:06,463 DEBUG Corresponding type is already real float64.
2022-04-04 20:06:06,463 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:06:21,524 INFO Computing data fidelity for 114564 rotations and 2048 images at 30%
2022-04-04 20:06:22,496 DEBUG Corresponding type is already real float64.
2022-04-04 20:06:22,497 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:06:36,831 INFO Computing data fidelity for 114564 rotations and 2048 images at 31%
2022-04-04 20:06:37,804 DEBUG Corresponding type is already real float64.
2022-04-04 20:06:37,805 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:06:52,167 INFO Computing data fidelity for 114564 rotations and 2048 images at 32%
2022-04-04 20:06:53,151 DEBUG Corresponding type is already real float64.
2022-04-04 20:06:53,151 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:07:07,493 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2022-04-04 20:07:08,453 DEBUG Corresponding type is already real float64.
2022-04-04 20:07:08,454 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:07:22,744 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2022-04-04 20:07:23,736 DEBUG Corresponding type is already real float64.
2022-04-04 20:07:23,736 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:07:38,079 INFO Computing data fidelity for 114564 rotations and 2048 images at 34%
2022-04-04 20:07:39,127 DEBUG Corresponding type is already real float64.
2022-04-04 20:07:39,127 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:07:53,711 INFO Computing data fidelity for 114564 rotations and 2048 images at 35%
2022-04-04 20:07:54,724 DEBUG Corresponding type is already real float64.
2022-04-04 20:07:54,725 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:08:09,087 INFO Computing data fidelity for 114564 rotations and 2048 images at 36%
2022-04-04 20:08:10,076 DEBUG Corresponding type is already real float64.
2022-04-04 20:08:10,076 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:08:24,539 INFO Computing data fidelity for 114564 rotations and 2048 images at 37%
2022-04-04 20:08:25,559 DEBUG Corresponding type is already real float64.
2022-04-04 20:08:25,559 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:08:40,241 INFO Computing data fidelity for 114564 rotations and 2048 images at 38%
2022-04-04 20:08:41,224 DEBUG Corresponding type is already real float64.
2022-04-04 20:08:41,224 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:08:55,686 INFO Computing data fidelity for 114564 rotations and 2048 images at 39%
2022-04-04 20:08:56,677 DEBUG Corresponding type is already real float64.
2022-04-04 20:08:56,677 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:09:11,490 INFO Computing data fidelity for 114564 rotations and 2048 images at 40%
2022-04-04 20:09:12,479 DEBUG Corresponding type is already real float64.
2022-04-04 20:09:12,479 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:09:27,139 INFO Computing data fidelity for 114564 rotations and 2048 images at 41%
2022-04-04 20:09:28,127 DEBUG Corresponding type is already real float64.
2022-04-04 20:09:28,127 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:09:42,526 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2022-04-04 20:09:43,527 DEBUG Corresponding type is already real float64.
2022-04-04 20:09:43,527 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:09:57,793 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2022-04-04 20:09:58,811 DEBUG Corresponding type is already real float64.
2022-04-04 20:09:58,811 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:10:13,131 INFO Computing data fidelity for 114564 rotations and 2048 images at 43%
2022-04-04 20:10:14,131 DEBUG Corresponding type is already real float64.
2022-04-04 20:10:14,131 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:10:28,585 INFO Computing data fidelity for 114564 rotations and 2048 images at 44%
2022-04-04 20:10:29,577 DEBUG Corresponding type is already real float64.
2022-04-04 20:10:29,577 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:10:43,858 INFO Computing data fidelity for 114564 rotations and 2048 images at 45%
2022-04-04 20:10:44,850 DEBUG Corresponding type is already real float64.
2022-04-04 20:10:44,850 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:10:59,189 INFO Computing data fidelity for 114564 rotations and 2048 images at 46%
2022-04-04 20:11:00,185 DEBUG Corresponding type is already real float64.
2022-04-04 20:11:00,185 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:11:14,482 INFO Computing data fidelity for 114564 rotations and 2048 images at 47%
2022-04-04 20:11:15,479 DEBUG Corresponding type is already real float64.
2022-04-04 20:11:15,479 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:11:29,978 INFO Computing data fidelity for 114564 rotations and 2048 images at 48%
2022-04-04 20:11:31,000 DEBUG Corresponding type is already real float64.
2022-04-04 20:11:31,000 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:11:45,459 INFO Computing data fidelity for 114564 rotations and 2048 images at 49%
2022-04-04 20:11:46,455 DEBUG Corresponding type is already real float64.
2022-04-04 20:11:46,455 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:12:00,847 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2022-04-04 20:12:01,823 DEBUG Corresponding type is already real float64.
2022-04-04 20:12:01,824 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:12:16,280 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2022-04-04 20:12:17,263 DEBUG Corresponding type is already real float64.
2022-04-04 20:12:17,263 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:12:31,692 INFO Computing data fidelity for 114564 rotations and 2048 images at 51%
2022-04-04 20:12:32,678 DEBUG Corresponding type is already real float64.
2022-04-04 20:12:32,678 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:12:47,170 INFO Computing data fidelity for 114564 rotations and 2048 images at 52%
2022-04-04 20:12:48,148 DEBUG Corresponding type is already real float64.
2022-04-04 20:12:48,148 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:13:02,595 INFO Computing data fidelity for 114564 rotations and 2048 images at 53%
2022-04-04 20:13:03,564 DEBUG Corresponding type is already real float64.
2022-04-04 20:13:03,564 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:13:17,937 INFO Computing data fidelity for 114564 rotations and 2048 images at 54%
2022-04-04 20:13:18,937 DEBUG Corresponding type is already real float64.
2022-04-04 20:13:18,937 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:13:33,631 INFO Computing data fidelity for 114564 rotations and 2048 images at 55%
2022-04-04 20:13:34,688 DEBUG Corresponding type is already real float64.
2022-04-04 20:13:34,689 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:13:49,435 INFO Computing data fidelity for 114564 rotations and 2048 images at 56%
2022-04-04 20:13:50,436 DEBUG Corresponding type is already real float64.
2022-04-04 20:13:50,436 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:14:05,939 INFO Computing data fidelity for 114564 rotations and 2048 images at 57%
2022-04-04 20:14:06,944 DEBUG Corresponding type is already real float64.
2022-04-04 20:14:06,944 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:14:22,155 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2022-04-04 20:14:23,053 DEBUG Corresponding type is already real float64.
2022-04-04 20:14:23,053 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:14:37,672 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2022-04-04 20:14:38,605 DEBUG Corresponding type is already real float64.
2022-04-04 20:14:38,605 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:14:53,102 INFO Computing data fidelity for 114564 rotations and 2048 images at 59%
2022-04-04 20:14:54,063 DEBUG Corresponding type is already real float64.
2022-04-04 20:14:54,063 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:15:08,765 INFO Computing data fidelity for 114564 rotations and 2048 images at 60%
2022-04-04 20:15:09,836 DEBUG Corresponding type is already real float64.
2022-04-04 20:15:09,837 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:15:24,347 INFO Computing data fidelity for 114564 rotations and 2048 images at 61%
2022-04-04 20:15:25,326 DEBUG Corresponding type is already real float64.
2022-04-04 20:15:25,326 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:15:39,765 INFO Computing data fidelity for 114564 rotations and 2048 images at 62%
2022-04-04 20:15:40,761 DEBUG Corresponding type is already real float64.
2022-04-04 20:15:40,761 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:15:55,234 INFO Computing data fidelity for 114564 rotations and 2048 images at 63%
2022-04-04 20:15:56,205 DEBUG Corresponding type is already real float64.
2022-04-04 20:15:56,206 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:16:10,666 INFO Computing data fidelity for 114564 rotations and 2048 images at 64%
2022-04-04 20:16:11,623 DEBUG Corresponding type is already real float64.
2022-04-04 20:16:11,623 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:16:25,938 INFO Computing data fidelity for 114564 rotations and 2048 images at 65%
2022-04-04 20:16:26,901 DEBUG Corresponding type is already real float64.
2022-04-04 20:16:26,901 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:16:41,196 INFO Computing data fidelity for 114564 rotations and 2048 images at 66%
2022-04-04 20:16:42,197 DEBUG Corresponding type is already real float64.
2022-04-04 20:16:42,197 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:16:56,484 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2022-04-04 20:16:57,477 DEBUG Corresponding type is already real float64.
2022-04-04 20:16:57,477 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:17:11,861 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2022-04-04 20:17:12,838 DEBUG Corresponding type is already real float64.
2022-04-04 20:17:12,838 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:17:27,399 INFO Computing data fidelity for 114564 rotations and 2048 images at 68%
2022-04-04 20:17:28,445 DEBUG Corresponding type is already real float64.
2022-04-04 20:17:28,445 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:17:42,761 INFO Computing data fidelity for 114564 rotations and 2048 images at 69%
2022-04-04 20:17:43,719 DEBUG Corresponding type is already real float64.
2022-04-04 20:17:43,720 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:17:58,029 INFO Computing data fidelity for 114564 rotations and 2048 images at 70%
2022-04-04 20:17:59,033 DEBUG Corresponding type is already real float64.
2022-04-04 20:17:59,033 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:18:13,332 INFO Computing data fidelity for 114564 rotations and 2048 images at 71%
2022-04-04 20:18:14,338 DEBUG Corresponding type is already real float64.
2022-04-04 20:18:14,338 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:18:28,638 INFO Computing data fidelity for 114564 rotations and 2048 images at 72%
2022-04-04 20:18:29,629 DEBUG Corresponding type is already real float64.
2022-04-04 20:18:29,629 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:18:43,949 INFO Computing data fidelity for 114564 rotations and 2048 images at 73%
2022-04-04 20:18:44,966 DEBUG Corresponding type is already real float64.
2022-04-04 20:18:44,966 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:18:59,237 INFO Computing data fidelity for 114564 rotations and 2048 images at 74%
2022-04-04 20:19:00,247 DEBUG Corresponding type is already real float64.
2022-04-04 20:19:00,248 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:19:14,596 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2022-04-04 20:19:15,599 DEBUG Corresponding type is already real float64.
2022-04-04 20:19:15,599 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:19:29,894 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2022-04-04 20:19:30,900 DEBUG Corresponding type is already real float64.
2022-04-04 20:19:30,900 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:19:45,291 INFO Computing data fidelity for 114564 rotations and 2048 images at 76%
2022-04-04 20:19:46,293 DEBUG Corresponding type is already real float64.
2022-04-04 20:19:46,293 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:20:00,573 INFO Computing data fidelity for 114564 rotations and 2048 images at 77%
2022-04-04 20:20:01,582 DEBUG Corresponding type is already real float64.
2022-04-04 20:20:01,583 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:20:15,933 INFO Computing data fidelity for 114564 rotations and 2048 images at 78%
2022-04-04 20:20:16,942 DEBUG Corresponding type is already real float64.
2022-04-04 20:20:16,942 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:20:31,395 INFO Computing data fidelity for 114564 rotations and 2048 images at 79%
2022-04-04 20:20:32,503 DEBUG Corresponding type is already real float64.
2022-04-04 20:20:32,503 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:20:46,850 INFO Computing data fidelity for 114564 rotations and 2048 images at 80%
2022-04-04 20:20:47,859 DEBUG Corresponding type is already real float64.
2022-04-04 20:20:47,859 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:21:02,178 INFO Computing data fidelity for 114564 rotations and 2048 images at 81%
2022-04-04 20:21:03,197 DEBUG Corresponding type is already real float64.
2022-04-04 20:21:03,197 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:21:17,461 INFO Computing data fidelity for 114564 rotations and 2048 images at 82%
2022-04-04 20:21:18,468 DEBUG Corresponding type is already real float64.
2022-04-04 20:21:18,469 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:21:32,735 INFO Computing data fidelity for 114564 rotations and 2048 images at 83%
2022-04-04 20:21:33,736 DEBUG Corresponding type is already real float64.
2022-04-04 20:21:33,736 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:21:48,358 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2022-04-04 20:21:49,477 DEBUG Corresponding type is already real float64.
2022-04-04 20:21:49,478 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:22:04,833 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2022-04-04 20:22:06,161 DEBUG Corresponding type is already real float64.
2022-04-04 20:22:06,162 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:22:21,560 INFO Computing data fidelity for 114564 rotations and 2048 images at 85%
2022-04-04 20:22:22,752 DEBUG Corresponding type is already real float64.
2022-04-04 20:22:22,752 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:22:37,976 INFO Computing data fidelity for 114564 rotations and 2048 images at 86%
2022-04-04 20:22:39,148 DEBUG Corresponding type is already real float64.
2022-04-04 20:22:39,148 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:22:54,358 INFO Computing data fidelity for 114564 rotations and 2048 images at 87%
2022-04-04 20:22:55,517 DEBUG Corresponding type is already real float64.
2022-04-04 20:22:55,517 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:23:10,639 INFO Computing data fidelity for 114564 rotations and 2048 images at 88%
2022-04-04 20:23:11,817 DEBUG Corresponding type is already real float64.
2022-04-04 20:23:11,817 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:23:26,782 INFO Computing data fidelity for 114564 rotations and 2048 images at 89%
2022-04-04 20:23:28,083 DEBUG Corresponding type is already real float64.
2022-04-04 20:23:28,084 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:23:43,020 INFO Computing data fidelity for 114564 rotations and 2048 images at 90%
2022-04-04 20:23:44,223 DEBUG Corresponding type is already real float64.
2022-04-04 20:23:44,223 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:23:59,099 INFO Computing data fidelity for 114564 rotations and 2048 images at 91%
2022-04-04 20:24:00,317 DEBUG Corresponding type is already real float64.
2022-04-04 20:24:00,318 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:24:14,932 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2022-04-04 20:24:15,956 DEBUG Corresponding type is already real float64.
2022-04-04 20:24:15,956 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:24:30,213 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2022-04-04 20:24:31,233 DEBUG Corresponding type is already real float64.
2022-04-04 20:24:31,233 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:24:45,584 INFO Computing data fidelity for 114564 rotations and 2048 images at 93%
2022-04-04 20:24:46,597 DEBUG Corresponding type is already real float64.
2022-04-04 20:24:46,598 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:25:00,932 INFO Computing data fidelity for 114564 rotations and 2048 images at 94%
2022-04-04 20:25:01,917 DEBUG Corresponding type is already real float64.
2022-04-04 20:25:01,917 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:25:16,167 INFO Computing data fidelity for 114564 rotations and 2048 images at 95%
2022-04-04 20:25:17,143 DEBUG Corresponding type is already real float64.
2022-04-04 20:25:17,144 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:25:31,620 INFO Computing data fidelity for 114564 rotations and 2048 images at 96%
2022-04-04 20:25:32,680 DEBUG Corresponding type is already real float64.
2022-04-04 20:25:32,681 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:25:46,864 INFO Computing data fidelity for 114564 rotations and 2048 images at 97%
2022-04-04 20:25:47,841 DEBUG Corresponding type is already real float64.
2022-04-04 20:25:47,842 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:26:01,903 INFO Computing data fidelity for 114564 rotations and 2048 images at 98%
2022-04-04 20:26:02,900 DEBUG Corresponding type is already real float64.
2022-04-04 20:26:02,900 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:26:16,882 INFO Computing data fidelity for 114564 rotations and 2048 images at 99%
2022-04-04 20:26:17,639 DEBUG Corresponding type is already real float64.
2022-04-04 20:26:17,639 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:26:30,109 INFO Computing data fidelity for 114564 rotations and 2048 images at 100%
2022-04-04 20:26:34,809 INFO Do lambda update step
2022-04-04 20:26:59,089 INFO Do rots update step
2022-04-04 20:26:59,944 INFO Projecting 2048 vectors onto 114564-simplex at 2%
2022-04-04 20:27:00,592 INFO Projecting 2048 vectors onto 114564-simplex at 4%
2022-04-04 20:27:01,230 INFO Projecting 2048 vectors onto 114564-simplex at 7%
2022-04-04 20:27:02,072 INFO Projecting 2048 vectors onto 114564-simplex at 9%
2022-04-04 20:27:02,942 INFO Projecting 2048 vectors onto 114564-simplex at 12%
2022-04-04 20:27:03,734 INFO Projecting 2048 vectors onto 114564-simplex at 14%
2022-04-04 20:27:04,395 INFO Projecting 2048 vectors onto 114564-simplex at 17%
2022-04-04 20:27:05,038 INFO Projecting 2048 vectors onto 114564-simplex at 19%
2022-04-04 20:27:05,676 INFO Projecting 2048 vectors onto 114564-simplex at 21%
2022-04-04 20:27:06,324 INFO Projecting 2048 vectors onto 114564-simplex at 24%
2022-04-04 20:27:07,140 INFO Projecting 2048 vectors onto 114564-simplex at 26%
2022-04-04 20:27:07,782 INFO Projecting 2048 vectors onto 114564-simplex at 29%
2022-04-04 20:27:08,423 INFO Projecting 2048 vectors onto 114564-simplex at 31%
2022-04-04 20:27:09,064 INFO Projecting 2048 vectors onto 114564-simplex at 34%
2022-04-04 20:27:09,700 INFO Projecting 2048 vectors onto 114564-simplex at 36%
2022-04-04 20:27:10,346 INFO Projecting 2048 vectors onto 114564-simplex at 39%
2022-04-04 20:27:10,979 INFO Projecting 2048 vectors onto 114564-simplex at 41%
2022-04-04 20:27:11,621 INFO Projecting 2048 vectors onto 114564-simplex at 43%
2022-04-04 20:27:12,253 INFO Projecting 2048 vectors onto 114564-simplex at 46%
2022-04-04 20:27:12,894 INFO Projecting 2048 vectors onto 114564-simplex at 48%
2022-04-04 20:27:13,709 INFO Projecting 2048 vectors onto 114564-simplex at 51%
2022-04-04 20:27:14,355 INFO Projecting 2048 vectors onto 114564-simplex at 53%
2022-04-04 20:27:14,996 INFO Projecting 2048 vectors onto 114564-simplex at 56%
2022-04-04 20:27:15,632 INFO Projecting 2048 vectors onto 114564-simplex at 58%
2022-04-04 20:27:16,445 INFO Projecting 2048 vectors onto 114564-simplex at 61%
2022-04-04 20:27:17,315 INFO Projecting 2048 vectors onto 114564-simplex at 63%
2022-04-04 20:27:18,140 INFO Projecting 2048 vectors onto 114564-simplex at 65%
2022-04-04 20:27:18,823 INFO Projecting 2048 vectors onto 114564-simplex at 68%
2022-04-04 20:27:19,457 INFO Projecting 2048 vectors onto 114564-simplex at 70%
2022-04-04 20:27:20,094 INFO Projecting 2048 vectors onto 114564-simplex at 73%
2022-04-04 20:27:20,920 INFO Projecting 2048 vectors onto 114564-simplex at 75%
2022-04-04 20:27:21,560 INFO Projecting 2048 vectors onto 114564-simplex at 78%
2022-04-04 20:27:22,190 INFO Projecting 2048 vectors onto 114564-simplex at 80%
2022-04-04 20:27:22,826 INFO Projecting 2048 vectors onto 114564-simplex at 83%
2022-04-04 20:27:23,468 INFO Projecting 2048 vectors onto 114564-simplex at 85%
2022-04-04 20:27:24,113 INFO Projecting 2048 vectors onto 114564-simplex at 87%
2022-04-04 20:27:24,766 INFO Projecting 2048 vectors onto 114564-simplex at 90%
2022-04-04 20:27:25,409 INFO Projecting 2048 vectors onto 114564-simplex at 92%
2022-04-04 20:27:26,046 INFO Projecting 2048 vectors onto 114564-simplex at 95%
2022-04-04 20:27:26,689 INFO Projecting 2048 vectors onto 114564-simplex at 97%
2022-04-04 20:27:27,306 INFO Projecting 2048 vectors onto 114564-simplex at 100%
2022-04-04 20:27:28,606 INFO Computing 50 means of 596 points in at most 20 steps...
2022-04-04 20:27:28,680 INFO Computing 2048 means at 2%
2022-04-04 20:27:28,759 INFO Computing 50 means of 601 points in at most 20 steps...
2022-04-04 20:27:28,831 INFO Computing 2048 means at 4%
2022-04-04 20:27:28,911 INFO Computing 50 means of 617 points in at most 20 steps...
2022-04-04 20:27:28,978 INFO Computing 2048 means at 7%
2022-04-04 20:27:29,056 INFO Computing 50 means of 599 points in at most 20 steps...
2022-04-04 20:27:29,122 INFO Computing 2048 means at 9%
2022-04-04 20:27:29,203 INFO Computing 50 means of 615 points in at most 20 steps...
2022-04-04 20:27:29,268 INFO Computing 2048 means at 12%
2022-04-04 20:27:29,346 INFO Computing 50 means of 610 points in at most 20 steps...
2022-04-04 20:27:29,413 INFO Computing 2048 means at 14%
2022-04-04 20:27:29,489 INFO Computing 50 means of 609 points in at most 20 steps...
2022-04-04 20:27:29,553 INFO Computing 2048 means at 17%
2022-04-04 20:27:29,631 INFO Computing 50 means of 616 points in at most 20 steps...
2022-04-04 20:27:29,696 INFO Computing 2048 means at 19%
2022-04-04 20:27:29,771 INFO Computing 50 means of 590 points in at most 20 steps...
2022-04-04 20:27:29,834 INFO Computing 2048 means at 21%
2022-04-04 20:27:29,910 INFO Computing 50 means of 597 points in at most 20 steps...
2022-04-04 20:27:29,976 INFO Computing 2048 means at 24%
2022-04-04 20:27:30,067 INFO Computing 50 means of 602 points in at most 20 steps...
2022-04-04 20:27:30,131 INFO Computing 2048 means at 26%
2022-04-04 20:27:30,204 INFO Computing 50 means of 605 points in at most 20 steps...
2022-04-04 20:27:30,267 INFO Computing 2048 means at 29%
2022-04-04 20:27:30,342 INFO Computing 50 means of 596 points in at most 20 steps...
2022-04-04 20:27:30,407 INFO Computing 2048 means at 31%
2022-04-04 20:27:30,485 INFO Computing 50 means of 632 points in at most 20 steps...
2022-04-04 20:27:30,573 INFO Computing 2048 means at 34%
2022-04-04 20:27:30,652 INFO Computing 50 means of 607 points in at most 20 steps...
2022-04-04 20:27:30,741 INFO Computing 2048 means at 36%
2022-04-04 20:27:30,826 INFO Computing 50 means of 606 points in at most 20 steps...
2022-04-04 20:27:30,916 INFO Computing 2048 means at 39%
2022-04-04 20:27:31,015 INFO Computing 50 means of 598 points in at most 20 steps...
2022-04-04 20:27:31,146 INFO Computing 2048 means at 41%
2022-04-04 20:27:31,236 INFO Computing 50 means of 595 points in at most 20 steps...
2022-04-04 20:27:31,344 INFO Computing 2048 means at 43%
2022-04-04 20:27:31,434 INFO Computing 50 means of 612 points in at most 20 steps...
2022-04-04 20:27:31,543 INFO Computing 2048 means at 46%
2022-04-04 20:27:31,633 INFO Computing 50 means of 606 points in at most 20 steps...
2022-04-04 20:27:31,748 INFO Computing 2048 means at 48%
2022-04-04 20:27:31,848 INFO Computing 50 means of 586 points in at most 20 steps...
2022-04-04 20:27:31,960 INFO Computing 2048 means at 51%
2022-04-04 20:27:32,047 INFO Computing 50 means of 614 points in at most 20 steps...
2022-04-04 20:27:32,161 INFO Computing 2048 means at 53%
2022-04-04 20:27:32,247 INFO Computing 50 means of 601 points in at most 20 steps...
2022-04-04 20:27:32,364 INFO Computing 2048 means at 56%
2022-04-04 20:27:32,445 INFO Computing 50 means of 589 points in at most 20 steps...
2022-04-04 20:27:32,554 INFO Computing 2048 means at 58%
2022-04-04 20:27:32,636 INFO Computing 50 means of 609 points in at most 20 steps...
2022-04-04 20:27:32,753 INFO Computing 2048 means at 61%
2022-04-04 20:27:32,835 INFO Computing 50 means of 615 points in at most 20 steps...
2022-04-04 20:27:32,914 INFO Computing 2048 means at 63%
2022-04-04 20:27:32,990 INFO Computing 50 means of 598 points in at most 20 steps...
2022-04-04 20:27:33,062 INFO Computing 2048 means at 65%
2022-04-04 20:27:33,172 INFO Computing 50 means of 612 points in at most 20 steps...
2022-04-04 20:27:33,238 INFO Computing 2048 means at 68%
2022-04-04 20:27:33,318 INFO Computing 50 means of 614 points in at most 20 steps...
2022-04-04 20:27:33,404 INFO Computing 2048 means at 70%
2022-04-04 20:27:33,479 INFO Computing 50 means of 597 points in at most 20 steps...
2022-04-04 20:27:33,544 INFO Computing 2048 means at 73%
2022-04-04 20:27:33,652 INFO Computing 50 means of 601 points in at most 20 steps...
2022-04-04 20:27:33,718 INFO Computing 2048 means at 75%
2022-04-04 20:27:33,800 INFO Computing 50 means of 594 points in at most 20 steps...
2022-04-04 20:27:33,864 INFO Computing 2048 means at 78%
2022-04-04 20:27:33,943 INFO Computing 50 means of 582 points in at most 20 steps...
2022-04-04 20:27:34,006 INFO Computing 2048 means at 80%
2022-04-04 20:27:34,085 INFO Computing 50 means of 632 points in at most 20 steps...
2022-04-04 20:27:34,153 INFO Computing 2048 means at 83%
2022-04-04 20:27:34,232 INFO Computing 50 means of 608 points in at most 20 steps...
2022-04-04 20:27:34,295 INFO Computing 2048 means at 85%
2022-04-04 20:27:34,373 INFO Computing 50 means of 580 points in at most 20 steps...
2022-04-04 20:27:34,435 INFO Computing 2048 means at 87%
2022-04-04 20:27:34,515 INFO Computing 50 means of 615 points in at most 20 steps...
2022-04-04 20:27:34,581 INFO Computing 2048 means at 90%
2022-04-04 20:27:34,659 INFO Computing 50 means of 595 points in at most 20 steps...
2022-04-04 20:27:34,723 INFO Computing 2048 means at 92%
2022-04-04 20:27:34,801 INFO Computing 50 means of 599 points in at most 20 steps...
2022-04-04 20:27:34,864 INFO Computing 2048 means at 95%
2022-04-04 20:27:34,942 INFO Computing 50 means of 588 points in at most 20 steps...
2022-04-04 20:27:35,005 INFO Computing 2048 means at 97%
2022-04-04 20:27:35,085 INFO Computing 48 means of 598 points in at most 20 steps...
2022-04-04 20:27:35,145 INFO Computing 2048 means at 100%
2022-04-04 20:27:39,193 INFO Do vol update step
2022-04-04 20:27:39,200 INFO Compute adjoint forward mapping on the images
2022-04-04 20:27:40,800 DEBUG Corresponding type is already complex complex128.
2022-04-04 20:27:43,350 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2022-04-04 20:27:43,363 INFO Computing adjoint forward mappings from 2048 rotations at 50%
2022-04-04 20:27:44,824 DEBUG Corresponding type is already complex complex128.
2022-04-04 20:27:47,483 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2022-04-04 20:27:47,556 INFO Computing adjoint forward mappings from 2048 rotations at 100%
2022-04-04 20:27:48,876 DEBUG Corresponding type is already real float64.
2022-04-04 20:27:48,876 DEBUG anufft passed real_type for signal, converting
2022-04-04 20:27:55,715 INFO Computing kernel from 2048 rotations at 50%
2022-04-04 20:27:56,554 DEBUG Corresponding type is already real float64.
2022-04-04 20:27:56,554 DEBUG anufft passed real_type for signal, converting
2022-04-04 20:28:03,150 INFO Computing kernel from 2048 rotations at 100%
2022-04-04 20:28:03,152 INFO Computing non-centered Fourier Transform
2022-04-04 20:28:03,319 INFO Add ramp filter regularisation
2022-04-04 20:28:08,532 INFO Update data_discrepancies
2022-04-04 20:28:08,533 INFO Computing \|Ag.u - f_i\|^2
2022-04-04 20:28:09,374 DEBUG Corresponding type is already real float64.
2022-04-04 20:28:09,374 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:28:23,936 INFO Computing data fidelity for 114564 rotations and 2048 images at 0%
2022-04-04 20:28:24,688 DEBUG Corresponding type is already real float64.
2022-04-04 20:28:24,689 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:28:39,125 INFO Computing data fidelity for 114564 rotations and 2048 images at 1%
2022-04-04 20:28:39,881 DEBUG Corresponding type is already real float64.
2022-04-04 20:28:39,881 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:28:54,311 INFO Computing data fidelity for 114564 rotations and 2048 images at 2%
2022-04-04 20:28:55,060 DEBUG Corresponding type is already real float64.
2022-04-04 20:28:55,060 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:29:09,375 INFO Computing data fidelity for 114564 rotations and 2048 images at 3%
2022-04-04 20:29:10,132 DEBUG Corresponding type is already real float64.
2022-04-04 20:29:10,132 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:29:24,455 INFO Computing data fidelity for 114564 rotations and 2048 images at 4%
2022-04-04 20:29:25,220 DEBUG Corresponding type is already real float64.
2022-04-04 20:29:25,220 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:29:39,936 INFO Computing data fidelity for 114564 rotations and 2048 images at 5%
2022-04-04 20:29:40,694 DEBUG Corresponding type is already real float64.
2022-04-04 20:29:40,694 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:29:55,181 INFO Computing data fidelity for 114564 rotations and 2048 images at 6%
2022-04-04 20:29:55,949 DEBUG Corresponding type is already real float64.
2022-04-04 20:29:55,949 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:30:10,303 INFO Computing data fidelity for 114564 rotations and 2048 images at 7%
2022-04-04 20:30:11,079 DEBUG Corresponding type is already real float64.
2022-04-04 20:30:11,079 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:30:25,337 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2022-04-04 20:30:26,112 DEBUG Corresponding type is already real float64.
2022-04-04 20:30:26,112 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:30:40,261 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2022-04-04 20:30:41,035 DEBUG Corresponding type is already real float64.
2022-04-04 20:30:41,035 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:30:55,071 INFO Computing data fidelity for 114564 rotations and 2048 images at 9%
2022-04-04 20:30:55,870 DEBUG Corresponding type is already real float64.
2022-04-04 20:30:55,870 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:31:09,808 INFO Computing data fidelity for 114564 rotations and 2048 images at 10%
2022-04-04 20:31:10,606 DEBUG Corresponding type is already real float64.
2022-04-04 20:31:10,607 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:31:24,622 INFO Computing data fidelity for 114564 rotations and 2048 images at 11%
2022-04-04 20:31:25,459 DEBUG Corresponding type is already real float64.
2022-04-04 20:31:25,460 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:31:39,395 INFO Computing data fidelity for 114564 rotations and 2048 images at 12%
2022-04-04 20:31:40,254 DEBUG Corresponding type is already real float64.
2022-04-04 20:31:40,254 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:31:54,359 INFO Computing data fidelity for 114564 rotations and 2048 images at 13%
2022-04-04 20:31:55,223 DEBUG Corresponding type is already real float64.
2022-04-04 20:31:55,223 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:32:09,233 INFO Computing data fidelity for 114564 rotations and 2048 images at 14%
2022-04-04 20:32:10,111 DEBUG Corresponding type is already real float64.
2022-04-04 20:32:10,111 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:32:24,124 INFO Computing data fidelity for 114564 rotations and 2048 images at 15%
2022-04-04 20:32:25,016 DEBUG Corresponding type is already real float64.
2022-04-04 20:32:25,016 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:32:39,330 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2022-04-04 20:32:40,250 DEBUG Corresponding type is already real float64.
2022-04-04 20:32:40,251 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:32:54,202 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2022-04-04 20:32:55,165 DEBUG Corresponding type is already real float64.
2022-04-04 20:32:55,165 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:33:09,131 INFO Computing data fidelity for 114564 rotations and 2048 images at 17%
2022-04-04 20:33:10,093 DEBUG Corresponding type is already real float64.
2022-04-04 20:33:10,093 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:33:24,052 INFO Computing data fidelity for 114564 rotations and 2048 images at 18%
2022-04-04 20:33:25,001 DEBUG Corresponding type is already real float64.
2022-04-04 20:33:25,001 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:33:38,951 INFO Computing data fidelity for 114564 rotations and 2048 images at 19%
2022-04-04 20:33:39,932 DEBUG Corresponding type is already real float64.
2022-04-04 20:33:39,932 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:33:53,945 INFO Computing data fidelity for 114564 rotations and 2048 images at 20%
2022-04-04 20:33:54,913 DEBUG Corresponding type is already real float64.
2022-04-04 20:33:54,913 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:34:08,841 INFO Computing data fidelity for 114564 rotations and 2048 images at 21%
2022-04-04 20:34:09,851 DEBUG Corresponding type is already real float64.
2022-04-04 20:34:09,851 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:34:23,821 INFO Computing data fidelity for 114564 rotations and 2048 images at 22%
2022-04-04 20:34:24,827 DEBUG Corresponding type is already real float64.
2022-04-04 20:34:24,827 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:34:38,809 INFO Computing data fidelity for 114564 rotations and 2048 images at 23%
2022-04-04 20:34:39,827 DEBUG Corresponding type is already real float64.
2022-04-04 20:34:39,827 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:34:53,791 INFO Computing data fidelity for 114564 rotations and 2048 images at 24%
2022-04-04 20:34:54,808 DEBUG Corresponding type is already real float64.
2022-04-04 20:34:54,809 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:35:08,790 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2022-04-04 20:35:09,806 DEBUG Corresponding type is already real float64.
2022-04-04 20:35:09,806 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:35:23,771 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2022-04-04 20:35:24,762 DEBUG Corresponding type is already real float64.
2022-04-04 20:35:24,762 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:35:40,473 INFO Computing data fidelity for 114564 rotations and 2048 images at 26%
2022-04-04 20:35:41,568 DEBUG Corresponding type is already real float64.
2022-04-04 20:35:41,568 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:35:56,649 INFO Computing data fidelity for 114564 rotations and 2048 images at 27%
2022-04-04 20:35:57,768 DEBUG Corresponding type is already real float64.
2022-04-04 20:35:57,768 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:36:13,076 INFO Computing data fidelity for 114564 rotations and 2048 images at 28%
2022-04-04 20:36:14,234 DEBUG Corresponding type is already real float64.
2022-04-04 20:36:14,235 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:36:29,262 INFO Computing data fidelity for 114564 rotations and 2048 images at 29%
2022-04-04 20:36:30,394 DEBUG Corresponding type is already real float64.
2022-04-04 20:36:30,394 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:36:45,427 INFO Computing data fidelity for 114564 rotations and 2048 images at 30%
2022-04-04 20:36:46,573 DEBUG Corresponding type is already real float64.
2022-04-04 20:36:46,574 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:37:01,759 INFO Computing data fidelity for 114564 rotations and 2048 images at 31%
2022-04-04 20:37:02,870 DEBUG Corresponding type is already real float64.
2022-04-04 20:37:02,871 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:37:17,780 INFO Computing data fidelity for 114564 rotations and 2048 images at 32%
2022-04-04 20:37:18,917 DEBUG Corresponding type is already real float64.
2022-04-04 20:37:18,917 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:37:33,893 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2022-04-04 20:37:35,042 DEBUG Corresponding type is already real float64.
2022-04-04 20:37:35,042 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:37:50,103 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2022-04-04 20:37:51,252 DEBUG Corresponding type is already real float64.
2022-04-04 20:37:51,252 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:38:06,257 INFO Computing data fidelity for 114564 rotations and 2048 images at 34%
2022-04-04 20:38:07,405 DEBUG Corresponding type is already real float64.
2022-04-04 20:38:07,405 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:38:22,533 INFO Computing data fidelity for 114564 rotations and 2048 images at 35%
2022-04-04 20:38:23,532 DEBUG Corresponding type is already real float64.
2022-04-04 20:38:23,532 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:38:38,589 INFO Computing data fidelity for 114564 rotations and 2048 images at 36%
2022-04-04 20:38:39,711 DEBUG Corresponding type is already real float64.
2022-04-04 20:38:39,712 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:38:54,851 INFO Computing data fidelity for 114564 rotations and 2048 images at 37%
2022-04-04 20:38:55,998 DEBUG Corresponding type is already real float64.
2022-04-04 20:38:55,998 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:39:10,836 INFO Computing data fidelity for 114564 rotations and 2048 images at 38%
2022-04-04 20:39:11,876 DEBUG Corresponding type is already real float64.
2022-04-04 20:39:11,876 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:39:26,561 INFO Computing data fidelity for 114564 rotations and 2048 images at 39%
2022-04-04 20:39:27,618 DEBUG Corresponding type is already real float64.
2022-04-04 20:39:27,618 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:39:42,617 INFO Computing data fidelity for 114564 rotations and 2048 images at 40%
2022-04-04 20:39:43,796 DEBUG Corresponding type is already real float64.
2022-04-04 20:39:43,796 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:39:58,918 INFO Computing data fidelity for 114564 rotations and 2048 images at 41%
2022-04-04 20:40:00,070 DEBUG Corresponding type is already real float64.
2022-04-04 20:40:00,070 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:40:15,001 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2022-04-04 20:40:16,220 DEBUG Corresponding type is already real float64.
2022-04-04 20:40:16,220 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:40:31,033 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2022-04-04 20:40:32,254 DEBUG Corresponding type is already real float64.
2022-04-04 20:40:32,254 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:40:47,482 INFO Computing data fidelity for 114564 rotations and 2048 images at 43%
2022-04-04 20:40:48,623 DEBUG Corresponding type is already real float64.
2022-04-04 20:40:48,623 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:41:03,444 INFO Computing data fidelity for 114564 rotations and 2048 images at 44%
2022-04-04 20:41:04,431 DEBUG Corresponding type is already real float64.
2022-04-04 20:41:04,431 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:41:18,780 INFO Computing data fidelity for 114564 rotations and 2048 images at 45%
2022-04-04 20:41:19,809 DEBUG Corresponding type is already real float64.
2022-04-04 20:41:19,809 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:41:34,420 INFO Computing data fidelity for 114564 rotations and 2048 images at 46%
2022-04-04 20:41:35,433 DEBUG Corresponding type is already real float64.
2022-04-04 20:41:35,433 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:41:49,965 INFO Computing data fidelity for 114564 rotations and 2048 images at 47%
2022-04-04 20:41:51,103 DEBUG Corresponding type is already real float64.
2022-04-04 20:41:51,104 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:42:05,545 INFO Computing data fidelity for 114564 rotations and 2048 images at 48%
2022-04-04 20:42:06,642 DEBUG Corresponding type is already real float64.
2022-04-04 20:42:06,642 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:42:20,972 INFO Computing data fidelity for 114564 rotations and 2048 images at 49%
2022-04-04 20:42:22,061 DEBUG Corresponding type is already real float64.
2022-04-04 20:42:22,061 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:42:36,593 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2022-04-04 20:42:37,632 DEBUG Corresponding type is already real float64.
2022-04-04 20:42:37,632 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:42:52,030 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2022-04-04 20:42:53,070 DEBUG Corresponding type is already real float64.
2022-04-04 20:42:53,070 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:43:07,557 INFO Computing data fidelity for 114564 rotations and 2048 images at 51%
2022-04-04 20:43:08,580 DEBUG Corresponding type is already real float64.
2022-04-04 20:43:08,580 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:43:23,061 INFO Computing data fidelity for 114564 rotations and 2048 images at 52%
2022-04-04 20:43:24,128 DEBUG Corresponding type is already real float64.
2022-04-04 20:43:24,128 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:43:39,036 INFO Computing data fidelity for 114564 rotations and 2048 images at 53%
2022-04-04 20:43:40,239 DEBUG Corresponding type is already real float64.
2022-04-04 20:43:40,239 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:43:55,036 INFO Computing data fidelity for 114564 rotations and 2048 images at 54%
2022-04-04 20:43:56,214 DEBUG Corresponding type is already real float64.
2022-04-04 20:43:56,214 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:44:11,126 INFO Computing data fidelity for 114564 rotations and 2048 images at 55%
2022-04-04 20:44:12,360 DEBUG Corresponding type is already real float64.
2022-04-04 20:44:12,360 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:44:27,427 INFO Computing data fidelity for 114564 rotations and 2048 images at 56%
2022-04-04 20:44:28,626 DEBUG Corresponding type is already real float64.
2022-04-04 20:44:28,627 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:44:43,470 INFO Computing data fidelity for 114564 rotations and 2048 images at 57%
2022-04-04 20:44:44,698 DEBUG Corresponding type is already real float64.
2022-04-04 20:44:44,698 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:44:59,177 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2022-04-04 20:45:00,292 DEBUG Corresponding type is already real float64.
2022-04-04 20:45:00,292 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:45:14,667 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2022-04-04 20:45:15,789 DEBUG Corresponding type is already real float64.
2022-04-04 20:45:15,790 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:45:30,227 INFO Computing data fidelity for 114564 rotations and 2048 images at 59%
2022-04-04 20:45:31,313 DEBUG Corresponding type is already real float64.
2022-04-04 20:45:31,313 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:45:45,738 INFO Computing data fidelity for 114564 rotations and 2048 images at 60%
2022-04-04 20:45:46,822 DEBUG Corresponding type is already real float64.
2022-04-04 20:45:46,822 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:46:01,272 INFO Computing data fidelity for 114564 rotations and 2048 images at 61%
2022-04-04 20:46:02,311 DEBUG Corresponding type is already real float64.
2022-04-04 20:46:02,311 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:46:16,868 INFO Computing data fidelity for 114564 rotations and 2048 images at 62%
2022-04-04 20:46:17,901 DEBUG Corresponding type is already real float64.
2022-04-04 20:46:17,902 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:46:32,706 INFO Computing data fidelity for 114564 rotations and 2048 images at 63%
2022-04-04 20:46:33,946 DEBUG Corresponding type is already real float64.
2022-04-04 20:46:33,947 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:46:48,739 INFO Computing data fidelity for 114564 rotations and 2048 images at 64%
2022-04-04 20:46:49,843 DEBUG Corresponding type is already real float64.
2022-04-04 20:46:49,843 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:47:04,173 INFO Computing data fidelity for 114564 rotations and 2048 images at 65%
2022-04-04 20:47:05,216 DEBUG Corresponding type is already real float64.
2022-04-04 20:47:05,216 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:47:19,613 INFO Computing data fidelity for 114564 rotations and 2048 images at 66%
2022-04-04 20:47:20,607 DEBUG Corresponding type is already real float64.
2022-04-04 20:47:20,608 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:47:34,834 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2022-04-04 20:47:35,883 DEBUG Corresponding type is already real float64.
2022-04-04 20:47:35,883 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:47:50,268 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2022-04-04 20:47:51,268 DEBUG Corresponding type is already real float64.
2022-04-04 20:47:51,268 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:48:06,081 INFO Computing data fidelity for 114564 rotations and 2048 images at 68%
2022-04-04 20:48:07,264 DEBUG Corresponding type is already real float64.
2022-04-04 20:48:07,264 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:48:21,737 INFO Computing data fidelity for 114564 rotations and 2048 images at 69%
2022-04-04 20:48:22,773 DEBUG Corresponding type is already real float64.
2022-04-04 20:48:22,773 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:48:36,985 INFO Computing data fidelity for 114564 rotations and 2048 images at 70%
2022-04-04 20:48:38,025 DEBUG Corresponding type is already real float64.
2022-04-04 20:48:38,025 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:48:52,328 INFO Computing data fidelity for 114564 rotations and 2048 images at 71%
2022-04-04 20:48:53,352 DEBUG Corresponding type is already real float64.
2022-04-04 20:48:53,353 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:49:07,696 INFO Computing data fidelity for 114564 rotations and 2048 images at 72%
2022-04-04 20:49:08,697 DEBUG Corresponding type is already real float64.
2022-04-04 20:49:08,697 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:49:23,132 INFO Computing data fidelity for 114564 rotations and 2048 images at 73%
2022-04-04 20:49:24,283 DEBUG Corresponding type is already real float64.
2022-04-04 20:49:24,284 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:49:39,052 INFO Computing data fidelity for 114564 rotations and 2048 images at 74%
2022-04-04 20:49:40,256 DEBUG Corresponding type is already real float64.
2022-04-04 20:49:40,257 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:49:55,063 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2022-04-04 20:49:56,234 DEBUG Corresponding type is already real float64.
2022-04-04 20:49:56,235 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:50:11,090 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2022-04-04 20:50:12,255 DEBUG Corresponding type is already real float64.
2022-04-04 20:50:12,256 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:50:27,346 INFO Computing data fidelity for 114564 rotations and 2048 images at 76%
2022-04-04 20:50:28,859 DEBUG Corresponding type is already real float64.
2022-04-04 20:50:28,859 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:50:43,842 INFO Computing data fidelity for 114564 rotations and 2048 images at 77%
2022-04-04 20:50:45,015 DEBUG Corresponding type is already real float64.
2022-04-04 20:50:45,016 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:50:59,722 INFO Computing data fidelity for 114564 rotations and 2048 images at 78%
2022-04-04 20:51:00,897 DEBUG Corresponding type is already real float64.
2022-04-04 20:51:00,897 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:51:15,764 INFO Computing data fidelity for 114564 rotations and 2048 images at 79%
2022-04-04 20:51:16,948 DEBUG Corresponding type is already real float64.
2022-04-04 20:51:16,948 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:51:31,795 INFO Computing data fidelity for 114564 rotations and 2048 images at 80%
2022-04-04 20:51:32,894 DEBUG Corresponding type is already real float64.
2022-04-04 20:51:32,894 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:51:47,735 INFO Computing data fidelity for 114564 rotations and 2048 images at 81%
2022-04-04 20:51:48,908 DEBUG Corresponding type is already real float64.
2022-04-04 20:51:48,908 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:52:03,725 INFO Computing data fidelity for 114564 rotations and 2048 images at 82%
2022-04-04 20:52:04,916 DEBUG Corresponding type is already real float64.
2022-04-04 20:52:04,916 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:52:19,915 INFO Computing data fidelity for 114564 rotations and 2048 images at 83%
2022-04-04 20:52:21,062 DEBUG Corresponding type is already real float64.
2022-04-04 20:52:21,062 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:52:35,955 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2022-04-04 20:52:37,175 DEBUG Corresponding type is already real float64.
2022-04-04 20:52:37,175 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:52:51,985 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2022-04-04 20:52:53,219 DEBUG Corresponding type is already real float64.
2022-04-04 20:52:53,219 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:53:08,015 INFO Computing data fidelity for 114564 rotations and 2048 images at 85%
2022-04-04 20:53:09,230 DEBUG Corresponding type is already real float64.
2022-04-04 20:53:09,231 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:53:24,178 INFO Computing data fidelity for 114564 rotations and 2048 images at 86%
2022-04-04 20:53:25,529 DEBUG Corresponding type is already real float64.
2022-04-04 20:53:25,530 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:53:40,519 INFO Computing data fidelity for 114564 rotations and 2048 images at 87%
2022-04-04 20:53:42,218 DEBUG Corresponding type is already real float64.
2022-04-04 20:53:42,219 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:53:57,142 INFO Computing data fidelity for 114564 rotations and 2048 images at 88%
2022-04-04 20:53:58,551 DEBUG Corresponding type is already real float64.
2022-04-04 20:53:58,552 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:54:13,308 INFO Computing data fidelity for 114564 rotations and 2048 images at 89%
2022-04-04 20:54:14,600 DEBUG Corresponding type is already real float64.
2022-04-04 20:54:14,601 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:54:29,580 INFO Computing data fidelity for 114564 rotations and 2048 images at 90%
2022-04-04 20:54:30,851 DEBUG Corresponding type is already real float64.
2022-04-04 20:54:30,851 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:54:45,647 INFO Computing data fidelity for 114564 rotations and 2048 images at 91%
2022-04-04 20:54:46,911 DEBUG Corresponding type is already real float64.
2022-04-04 20:54:46,911 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:55:01,756 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2022-04-04 20:55:03,034 DEBUG Corresponding type is already real float64.
2022-04-04 20:55:03,035 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:55:17,731 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2022-04-04 20:55:19,012 DEBUG Corresponding type is already real float64.
2022-04-04 20:55:19,012 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:55:33,954 INFO Computing data fidelity for 114564 rotations and 2048 images at 93%
2022-04-04 20:55:35,259 DEBUG Corresponding type is already real float64.
2022-04-04 20:55:35,259 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:55:49,937 INFO Computing data fidelity for 114564 rotations and 2048 images at 94%
2022-04-04 20:55:51,231 DEBUG Corresponding type is already real float64.
2022-04-04 20:55:51,231 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:56:06,164 INFO Computing data fidelity for 114564 rotations and 2048 images at 95%
2022-04-04 20:56:07,462 DEBUG Corresponding type is already real float64.
2022-04-04 20:56:07,463 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:56:22,352 INFO Computing data fidelity for 114564 rotations and 2048 images at 96%
2022-04-04 20:56:23,536 DEBUG Corresponding type is already real float64.
2022-04-04 20:56:23,537 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:56:38,507 INFO Computing data fidelity for 114564 rotations and 2048 images at 97%
2022-04-04 20:56:39,851 DEBUG Corresponding type is already real float64.
2022-04-04 20:56:39,852 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:56:54,756 INFO Computing data fidelity for 114564 rotations and 2048 images at 98%
2022-04-04 20:56:56,010 DEBUG Corresponding type is already real float64.
2022-04-04 20:56:56,010 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:57:10,827 INFO Computing data fidelity for 114564 rotations and 2048 images at 99%
2022-04-04 20:57:11,772 DEBUG Corresponding type is already real float64.
2022-04-04 20:57:11,772 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:57:24,494 INFO Computing data fidelity for 114564 rotations and 2048 images at 100%
2022-04-04 20:57:29,037 INFO Do lambda update step
2022-04-04 20:57:55,484 INFO Do rots update step
2022-04-04 20:57:56,431 INFO Projecting 2048 vectors onto 114564-simplex at 2%
2022-04-04 20:57:57,172 INFO Projecting 2048 vectors onto 114564-simplex at 4%
2022-04-04 20:57:58,198 INFO Projecting 2048 vectors onto 114564-simplex at 7%
2022-04-04 20:57:59,191 INFO Projecting 2048 vectors onto 114564-simplex at 9%
2022-04-04 20:57:59,935 INFO Projecting 2048 vectors onto 114564-simplex at 12%
2022-04-04 20:58:00,647 INFO Projecting 2048 vectors onto 114564-simplex at 14%
2022-04-04 20:58:01,344 INFO Projecting 2048 vectors onto 114564-simplex at 17%
2022-04-04 20:58:02,032 INFO Projecting 2048 vectors onto 114564-simplex at 19%
2022-04-04 20:58:02,721 INFO Projecting 2048 vectors onto 114564-simplex at 21%
2022-04-04 20:58:03,420 INFO Projecting 2048 vectors onto 114564-simplex at 24%
2022-04-04 20:58:04,321 INFO Projecting 2048 vectors onto 114564-simplex at 26%
2022-04-04 20:58:05,028 INFO Projecting 2048 vectors onto 114564-simplex at 29%
2022-04-04 20:58:05,721 INFO Projecting 2048 vectors onto 114564-simplex at 31%
2022-04-04 20:58:06,411 INFO Projecting 2048 vectors onto 114564-simplex at 34%
2022-04-04 20:58:07,098 INFO Projecting 2048 vectors onto 114564-simplex at 36%
2022-04-04 20:58:07,790 INFO Projecting 2048 vectors onto 114564-simplex at 39%
2022-04-04 20:58:08,480 INFO Projecting 2048 vectors onto 114564-simplex at 41%
2022-04-04 20:58:09,181 INFO Projecting 2048 vectors onto 114564-simplex at 43%
2022-04-04 20:58:09,874 INFO Projecting 2048 vectors onto 114564-simplex at 46%
2022-04-04 20:58:10,573 INFO Projecting 2048 vectors onto 114564-simplex at 48%
2022-04-04 20:58:11,465 INFO Projecting 2048 vectors onto 114564-simplex at 51%
2022-04-04 20:58:12,140 INFO Projecting 2048 vectors onto 114564-simplex at 53%
2022-04-04 20:58:13,039 INFO Projecting 2048 vectors onto 114564-simplex at 56%
2022-04-04 20:58:14,017 INFO Projecting 2048 vectors onto 114564-simplex at 58%
2022-04-04 20:58:14,924 INFO Projecting 2048 vectors onto 114564-simplex at 61%
2022-04-04 20:58:15,644 INFO Projecting 2048 vectors onto 114564-simplex at 63%
2022-04-04 20:58:16,334 INFO Projecting 2048 vectors onto 114564-simplex at 65%
2022-04-04 20:58:17,018 INFO Projecting 2048 vectors onto 114564-simplex at 68%
2022-04-04 20:58:17,707 INFO Projecting 2048 vectors onto 114564-simplex at 70%
2022-04-04 20:58:18,390 INFO Projecting 2048 vectors onto 114564-simplex at 73%
2022-04-04 20:58:19,277 INFO Projecting 2048 vectors onto 114564-simplex at 75%
2022-04-04 20:58:19,970 INFO Projecting 2048 vectors onto 114564-simplex at 78%
2022-04-04 20:58:20,663 INFO Projecting 2048 vectors onto 114564-simplex at 80%
2022-04-04 20:58:21,357 INFO Projecting 2048 vectors onto 114564-simplex at 83%
2022-04-04 20:58:22,059 INFO Projecting 2048 vectors onto 114564-simplex at 85%
2022-04-04 20:58:22,750 INFO Projecting 2048 vectors onto 114564-simplex at 87%
2022-04-04 20:58:23,439 INFO Projecting 2048 vectors onto 114564-simplex at 90%
2022-04-04 20:58:24,130 INFO Projecting 2048 vectors onto 114564-simplex at 92%
2022-04-04 20:58:24,817 INFO Projecting 2048 vectors onto 114564-simplex at 95%
2022-04-04 20:58:25,502 INFO Projecting 2048 vectors onto 114564-simplex at 97%
2022-04-04 20:58:26,174 INFO Projecting 2048 vectors onto 114564-simplex at 100%
2022-04-04 20:58:27,648 INFO Computing 50 means of 573 points in at most 20 steps...
2022-04-04 20:58:27,746 INFO Computing 2048 means at 2%
2022-04-04 20:58:27,835 INFO Computing 50 means of 590 points in at most 20 steps...
2022-04-04 20:58:27,940 INFO Computing 2048 means at 4%
2022-04-04 20:58:28,030 INFO Computing 50 means of 616 points in at most 20 steps...
2022-04-04 20:58:28,195 INFO Computing 2048 means at 7%
2022-04-04 20:58:28,331 INFO Computing 50 means of 576 points in at most 20 steps...
2022-04-04 20:58:28,439 INFO Computing 2048 means at 9%
2022-04-04 20:58:28,529 INFO Computing 50 means of 595 points in at most 20 steps...
2022-04-04 20:58:28,633 INFO Computing 2048 means at 12%
2022-04-04 20:58:28,729 INFO Computing 50 means of 589 points in at most 20 steps...
2022-04-04 20:58:28,844 INFO Computing 2048 means at 14%
2022-04-04 20:58:28,930 INFO Computing 50 means of 603 points in at most 20 steps...
2022-04-04 20:58:29,052 INFO Computing 2048 means at 17%
2022-04-04 20:58:29,147 INFO Computing 50 means of 608 points in at most 20 steps...
2022-04-04 20:58:29,275 INFO Computing 2048 means at 19%
2022-04-04 20:58:29,370 INFO Computing 50 means of 575 points in at most 20 steps...
2022-04-04 20:58:29,485 INFO Computing 2048 means at 21%
2022-04-04 20:58:29,582 INFO Computing 50 means of 601 points in at most 20 steps...
2022-04-04 20:58:29,693 INFO Computing 2048 means at 24%
2022-04-04 20:58:29,798 INFO Computing 50 means of 579 points in at most 20 steps...
2022-04-04 20:58:29,919 INFO Computing 2048 means at 26%
2022-04-04 20:58:30,013 INFO Computing 50 means of 589 points in at most 20 steps...
2022-04-04 20:58:30,129 INFO Computing 2048 means at 29%
2022-04-04 20:58:30,206 INFO Computing 50 means of 585 points in at most 20 steps...
2022-04-04 20:58:30,302 INFO Computing 2048 means at 31%
2022-04-04 20:58:30,403 INFO Computing 50 means of 594 points in at most 20 steps...
2022-04-04 20:58:30,490 INFO Computing 2048 means at 34%
2022-04-04 20:58:30,578 INFO Computing 50 means of 590 points in at most 20 steps...
2022-04-04 20:58:30,651 INFO Computing 2048 means at 36%
2022-04-04 20:58:30,738 INFO Computing 50 means of 580 points in at most 20 steps...
2022-04-04 20:58:30,809 INFO Computing 2048 means at 39%
2022-04-04 20:58:30,889 INFO Computing 50 means of 609 points in at most 20 steps...
2022-04-04 20:58:30,978 INFO Computing 2048 means at 41%
2022-04-04 20:58:31,063 INFO Computing 50 means of 620 points in at most 20 steps...
2022-04-04 20:58:31,148 INFO Computing 2048 means at 43%
2022-04-04 20:58:31,231 INFO Computing 50 means of 617 points in at most 20 steps...
2022-04-04 20:58:31,305 INFO Computing 2048 means at 46%
2022-04-04 20:58:31,387 INFO Computing 50 means of 581 points in at most 20 steps...
2022-04-04 20:58:31,456 INFO Computing 2048 means at 48%
2022-04-04 20:58:31,547 INFO Computing 50 means of 614 points in at most 20 steps...
2022-04-04 20:58:31,624 INFO Computing 2048 means at 51%
2022-04-04 20:58:31,706 INFO Computing 50 means of 613 points in at most 20 steps...
2022-04-04 20:58:31,784 INFO Computing 2048 means at 53%
2022-04-04 20:58:31,867 INFO Computing 50 means of 598 points in at most 20 steps...
2022-04-04 20:58:31,940 INFO Computing 2048 means at 56%
2022-04-04 20:58:32,026 INFO Computing 50 means of 586 points in at most 20 steps...
2022-04-04 20:58:32,094 INFO Computing 2048 means at 58%
2022-04-04 20:58:32,179 INFO Computing 50 means of 609 points in at most 20 steps...
2022-04-04 20:58:32,249 INFO Computing 2048 means at 61%
2022-04-04 20:58:32,333 INFO Computing 50 means of 602 points in at most 20 steps...
2022-04-04 20:58:32,403 INFO Computing 2048 means at 63%
2022-04-04 20:58:32,486 INFO Computing 50 means of 590 points in at most 20 steps...
2022-04-04 20:58:32,556 INFO Computing 2048 means at 65%
2022-04-04 20:58:32,639 INFO Computing 50 means of 605 points in at most 20 steps...
2022-04-04 20:58:32,710 INFO Computing 2048 means at 68%
2022-04-04 20:58:32,792 INFO Computing 50 means of 591 points in at most 20 steps...
2022-04-04 20:58:32,861 INFO Computing 2048 means at 70%
2022-04-04 20:58:32,943 INFO Computing 50 means of 609 points in at most 20 steps...
2022-04-04 20:58:33,013 INFO Computing 2048 means at 73%
2022-04-04 20:58:33,102 INFO Computing 50 means of 593 points in at most 20 steps...
2022-04-04 20:58:33,180 INFO Computing 2048 means at 75%
2022-04-04 20:58:33,262 INFO Computing 50 means of 589 points in at most 20 steps...
2022-04-04 20:58:33,336 INFO Computing 2048 means at 78%
2022-04-04 20:58:33,419 INFO Computing 50 means of 570 points in at most 20 steps...
2022-04-04 20:58:33,487 INFO Computing 2048 means at 80%
2022-04-04 20:58:33,571 INFO Computing 50 means of 615 points in at most 20 steps...
2022-04-04 20:58:33,642 INFO Computing 2048 means at 83%
2022-04-04 20:58:33,728 INFO Computing 50 means of 582 points in at most 20 steps...
2022-04-04 20:58:33,795 INFO Computing 2048 means at 85%
2022-04-04 20:58:33,880 INFO Computing 50 means of 577 points in at most 20 steps...
2022-04-04 20:58:33,947 INFO Computing 2048 means at 87%
2022-04-04 20:58:34,032 INFO Computing 50 means of 605 points in at most 20 steps...
2022-04-04 20:58:34,102 INFO Computing 2048 means at 90%
2022-04-04 20:58:34,185 INFO Computing 50 means of 591 points in at most 20 steps...
2022-04-04 20:58:34,254 INFO Computing 2048 means at 92%
2022-04-04 20:58:34,337 INFO Computing 50 means of 610 points in at most 20 steps...
2022-04-04 20:58:34,410 INFO Computing 2048 means at 95%
2022-04-04 20:58:34,492 INFO Computing 50 means of 597 points in at most 20 steps...
2022-04-04 20:58:34,562 INFO Computing 2048 means at 97%
2022-04-04 20:58:34,644 INFO Computing 48 means of 574 points in at most 20 steps...
2022-04-04 20:58:34,709 INFO Computing 2048 means at 100%
2022-04-04 20:58:39,001 INFO Do vol update step
2022-04-04 20:58:39,003 INFO Compute adjoint forward mapping on the images
2022-04-04 20:58:40,882 DEBUG Corresponding type is already complex complex128.
2022-04-04 20:58:43,693 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2022-04-04 20:58:43,710 INFO Computing adjoint forward mappings from 2048 rotations at 50%
2022-04-04 20:58:45,985 DEBUG Corresponding type is already complex complex128.
2022-04-04 20:58:49,305 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2022-04-04 20:58:49,330 INFO Computing adjoint forward mappings from 2048 rotations at 100%
2022-04-04 20:58:50,312 DEBUG Corresponding type is already real float64.
2022-04-04 20:58:50,313 DEBUG anufft passed real_type for signal, converting
2022-04-04 20:58:57,540 INFO Computing kernel from 2048 rotations at 50%
2022-04-04 20:58:58,518 DEBUG Corresponding type is already real float64.
2022-04-04 20:58:58,518 DEBUG anufft passed real_type for signal, converting
2022-04-04 20:59:06,416 INFO Computing kernel from 2048 rotations at 100%
2022-04-04 20:59:06,420 INFO Computing non-centered Fourier Transform
2022-04-04 20:59:06,779 INFO Add ramp filter regularisation
2022-04-04 20:59:12,066 INFO Update data_discrepancies
2022-04-04 20:59:12,067 INFO Computing \|Ag.u - f_i\|^2
2022-04-04 20:59:13,019 DEBUG Corresponding type is already real float64.
2022-04-04 20:59:13,019 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:59:28,313 INFO Computing data fidelity for 114564 rotations and 2048 images at 0%
2022-04-04 20:59:29,241 DEBUG Corresponding type is already real float64.
2022-04-04 20:59:29,241 DEBUG nufft passed real_type for signal, converting
2022-04-04 20:59:44,611 INFO Computing data fidelity for 114564 rotations and 2048 images at 1%
2022-04-04 20:59:45,449 DEBUG Corresponding type is already real float64.
2022-04-04 20:59:45,449 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:00:00,683 INFO Computing data fidelity for 114564 rotations and 2048 images at 2%
2022-04-04 21:00:01,562 DEBUG Corresponding type is already real float64.
2022-04-04 21:00:01,562 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:00:16,788 INFO Computing data fidelity for 114564 rotations and 2048 images at 3%
2022-04-04 21:00:17,657 DEBUG Corresponding type is already real float64.
2022-04-04 21:00:17,658 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:00:32,816 INFO Computing data fidelity for 114564 rotations and 2048 images at 4%
2022-04-04 21:00:33,707 DEBUG Corresponding type is already real float64.
2022-04-04 21:00:33,707 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:00:48,788 INFO Computing data fidelity for 114564 rotations and 2048 images at 5%
2022-04-04 21:00:49,652 DEBUG Corresponding type is already real float64.
2022-04-04 21:00:49,652 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:01:04,810 INFO Computing data fidelity for 114564 rotations and 2048 images at 6%
2022-04-04 21:01:05,659 DEBUG Corresponding type is already real float64.
2022-04-04 21:01:05,659 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:01:20,725 INFO Computing data fidelity for 114564 rotations and 2048 images at 7%
2022-04-04 21:01:21,582 DEBUG Corresponding type is already real float64.
2022-04-04 21:01:21,582 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:01:36,672 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2022-04-04 21:01:37,530 DEBUG Corresponding type is already real float64.
2022-04-04 21:01:37,531 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:01:52,555 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2022-04-04 21:01:53,410 DEBUG Corresponding type is already real float64.
2022-04-04 21:01:53,410 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:02:08,454 INFO Computing data fidelity for 114564 rotations and 2048 images at 9%
2022-04-04 21:02:09,273 DEBUG Corresponding type is already real float64.
2022-04-04 21:02:09,273 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:02:24,151 INFO Computing data fidelity for 114564 rotations and 2048 images at 10%
2022-04-04 21:02:25,022 DEBUG Corresponding type is already real float64.
2022-04-04 21:02:25,022 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:02:40,252 INFO Computing data fidelity for 114564 rotations and 2048 images at 11%
2022-04-04 21:02:41,110 DEBUG Corresponding type is already real float64.
2022-04-04 21:02:41,110 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:02:56,211 INFO Computing data fidelity for 114564 rotations and 2048 images at 12%
2022-04-04 21:02:57,080 DEBUG Corresponding type is already real float64.
2022-04-04 21:02:57,080 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:03:12,193 INFO Computing data fidelity for 114564 rotations and 2048 images at 13%
2022-04-04 21:03:13,055 DEBUG Corresponding type is already real float64.
2022-04-04 21:03:13,055 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:03:28,400 INFO Computing data fidelity for 114564 rotations and 2048 images at 14%
2022-04-04 21:03:29,267 DEBUG Corresponding type is already real float64.
2022-04-04 21:03:29,267 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:03:44,308 INFO Computing data fidelity for 114564 rotations and 2048 images at 15%
2022-04-04 21:03:45,166 DEBUG Corresponding type is already real float64.
2022-04-04 21:03:45,166 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:04:00,229 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2022-04-04 21:04:01,088 DEBUG Corresponding type is already real float64.
2022-04-04 21:04:01,088 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:04:16,160 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2022-04-04 21:04:17,026 DEBUG Corresponding type is already real float64.
2022-04-04 21:04:17,026 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:04:32,098 INFO Computing data fidelity for 114564 rotations and 2048 images at 17%
2022-04-04 21:04:32,955 DEBUG Corresponding type is already real float64.
2022-04-04 21:04:32,955 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:04:47,832 INFO Computing data fidelity for 114564 rotations and 2048 images at 18%
2022-04-04 21:04:48,641 DEBUG Corresponding type is already real float64.
2022-04-04 21:04:48,641 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:05:03,566 INFO Computing data fidelity for 114564 rotations and 2048 images at 19%
2022-04-04 21:05:04,432 DEBUG Corresponding type is already real float64.
2022-04-04 21:05:04,432 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:05:19,733 INFO Computing data fidelity for 114564 rotations and 2048 images at 20%
2022-04-04 21:05:20,598 DEBUG Corresponding type is already real float64.
2022-04-04 21:05:20,599 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:05:35,834 INFO Computing data fidelity for 114564 rotations and 2048 images at 21%
2022-04-04 21:05:36,616 DEBUG Corresponding type is already real float64.
2022-04-04 21:05:36,616 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:05:51,376 INFO Computing data fidelity for 114564 rotations and 2048 images at 22%
2022-04-04 21:05:52,193 DEBUG Corresponding type is already real float64.
2022-04-04 21:05:52,193 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:06:07,292 INFO Computing data fidelity for 114564 rotations and 2048 images at 23%
2022-04-04 21:06:08,160 DEBUG Corresponding type is already real float64.
2022-04-04 21:06:08,160 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:06:23,280 INFO Computing data fidelity for 114564 rotations and 2048 images at 24%
2022-04-04 21:06:24,146 DEBUG Corresponding type is already real float64.
2022-04-04 21:06:24,146 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:06:39,293 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2022-04-04 21:06:40,168 DEBUG Corresponding type is already real float64.
2022-04-04 21:06:40,168 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:06:54,958 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2022-04-04 21:06:55,733 DEBUG Corresponding type is already real float64.
2022-04-04 21:06:55,733 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:07:10,138 INFO Computing data fidelity for 114564 rotations and 2048 images at 26%
2022-04-04 21:07:10,947 DEBUG Corresponding type is already real float64.
2022-04-04 21:07:10,947 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:07:25,492 INFO Computing data fidelity for 114564 rotations and 2048 images at 27%
2022-04-04 21:07:26,334 DEBUG Corresponding type is already real float64.
2022-04-04 21:07:26,334 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:07:41,373 INFO Computing data fidelity for 114564 rotations and 2048 images at 28%
2022-04-04 21:07:42,281 DEBUG Corresponding type is already real float64.
2022-04-04 21:07:42,281 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:07:57,593 INFO Computing data fidelity for 114564 rotations and 2048 images at 29%
2022-04-04 21:07:58,532 DEBUG Corresponding type is already real float64.
2022-04-04 21:07:58,533 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:08:13,572 INFO Computing data fidelity for 114564 rotations and 2048 images at 30%
2022-04-04 21:08:14,563 DEBUG Corresponding type is already real float64.
2022-04-04 21:08:14,563 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:08:29,775 INFO Computing data fidelity for 114564 rotations and 2048 images at 31%
2022-04-04 21:08:30,758 DEBUG Corresponding type is already real float64.
2022-04-04 21:08:30,759 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:08:45,931 INFO Computing data fidelity for 114564 rotations and 2048 images at 32%
2022-04-04 21:08:46,924 DEBUG Corresponding type is already real float64.
2022-04-04 21:08:46,925 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:09:01,925 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2022-04-04 21:09:02,976 DEBUG Corresponding type is already real float64.
2022-04-04 21:09:02,976 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:09:17,985 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2022-04-04 21:09:19,080 DEBUG Corresponding type is already real float64.
2022-04-04 21:09:19,080 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:09:33,968 INFO Computing data fidelity for 114564 rotations and 2048 images at 34%
2022-04-04 21:09:34,966 DEBUG Corresponding type is already real float64.
2022-04-04 21:09:34,966 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:09:49,676 INFO Computing data fidelity for 114564 rotations and 2048 images at 35%
2022-04-04 21:09:50,792 DEBUG Corresponding type is already real float64.
2022-04-04 21:09:50,792 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:10:05,739 INFO Computing data fidelity for 114564 rotations and 2048 images at 36%
2022-04-04 21:10:06,888 DEBUG Corresponding type is already real float64.
2022-04-04 21:10:06,888 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:10:21,786 INFO Computing data fidelity for 114564 rotations and 2048 images at 37%
2022-04-04 21:10:22,975 DEBUG Corresponding type is already real float64.
2022-04-04 21:10:22,975 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:10:37,838 INFO Computing data fidelity for 114564 rotations and 2048 images at 38%
2022-04-04 21:10:39,089 DEBUG Corresponding type is already real float64.
2022-04-04 21:10:39,089 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:10:53,933 INFO Computing data fidelity for 114564 rotations and 2048 images at 39%
2022-04-04 21:10:55,190 DEBUG Corresponding type is already real float64.
2022-04-04 21:10:55,191 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:11:10,035 INFO Computing data fidelity for 114564 rotations and 2048 images at 40%
2022-04-04 21:11:11,317 DEBUG Corresponding type is already real float64.
2022-04-04 21:11:11,317 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:11:26,244 INFO Computing data fidelity for 114564 rotations and 2048 images at 41%
2022-04-04 21:11:27,542 DEBUG Corresponding type is already real float64.
2022-04-04 21:11:27,542 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:11:42,162 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2022-04-04 21:11:43,417 DEBUG Corresponding type is already real float64.
2022-04-04 21:11:43,417 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:11:58,119 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2022-04-04 21:11:59,392 DEBUG Corresponding type is already real float64.
2022-04-04 21:11:59,392 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:12:14,236 INFO Computing data fidelity for 114564 rotations and 2048 images at 43%
2022-04-04 21:12:15,518 DEBUG Corresponding type is already real float64.
2022-04-04 21:12:15,518 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:12:30,399 INFO Computing data fidelity for 114564 rotations and 2048 images at 44%
2022-04-04 21:12:31,664 DEBUG Corresponding type is already real float64.
2022-04-04 21:12:31,664 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:12:46,565 INFO Computing data fidelity for 114564 rotations and 2048 images at 45%
2022-04-04 21:12:47,825 DEBUG Corresponding type is already real float64.
2022-04-04 21:12:47,827 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:13:02,752 INFO Computing data fidelity for 114564 rotations and 2048 images at 46%
2022-04-04 21:13:04,034 DEBUG Corresponding type is already real float64.
2022-04-04 21:13:04,034 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:13:19,453 INFO Computing data fidelity for 114564 rotations and 2048 images at 47%
2022-04-04 21:13:20,727 DEBUG Corresponding type is already real float64.
2022-04-04 21:13:20,727 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:13:36,190 INFO Computing data fidelity for 114564 rotations and 2048 images at 48%
2022-04-04 21:13:37,592 DEBUG Corresponding type is already real float64.
2022-04-04 21:13:37,592 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:13:52,642 INFO Computing data fidelity for 114564 rotations and 2048 images at 49%
2022-04-04 21:13:53,860 DEBUG Corresponding type is already real float64.
2022-04-04 21:13:53,860 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:14:08,804 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2022-04-04 21:14:10,033 DEBUG Corresponding type is already real float64.
2022-04-04 21:14:10,033 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:14:25,061 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2022-04-04 21:14:26,341 DEBUG Corresponding type is already real float64.
2022-04-04 21:14:26,341 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:14:41,285 INFO Computing data fidelity for 114564 rotations and 2048 images at 51%
2022-04-04 21:14:42,469 DEBUG Corresponding type is already real float64.
2022-04-04 21:14:42,470 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:14:57,152 INFO Computing data fidelity for 114564 rotations and 2048 images at 52%
2022-04-04 21:14:58,431 DEBUG Corresponding type is already real float64.
2022-04-04 21:14:58,431 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:15:13,423 INFO Computing data fidelity for 114564 rotations and 2048 images at 53%
2022-04-04 21:15:14,669 DEBUG Corresponding type is already real float64.
2022-04-04 21:15:14,669 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:15:29,646 INFO Computing data fidelity for 114564 rotations and 2048 images at 54%
2022-04-04 21:15:30,878 DEBUG Corresponding type is already real float64.
2022-04-04 21:15:30,879 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:15:45,853 INFO Computing data fidelity for 114564 rotations and 2048 images at 55%
2022-04-04 21:15:47,090 DEBUG Corresponding type is already real float64.
2022-04-04 21:15:47,090 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:16:02,046 INFO Computing data fidelity for 114564 rotations and 2048 images at 56%
2022-04-04 21:16:03,296 DEBUG Corresponding type is already real float64.
2022-04-04 21:16:03,297 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:16:18,279 INFO Computing data fidelity for 114564 rotations and 2048 images at 57%
2022-04-04 21:16:19,478 DEBUG Corresponding type is already real float64.
2022-04-04 21:16:19,479 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:16:34,072 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2022-04-04 21:16:35,203 DEBUG Corresponding type is already real float64.
2022-04-04 21:16:35,203 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:16:50,089 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2022-04-04 21:16:51,322 DEBUG Corresponding type is already real float64.
2022-04-04 21:16:51,322 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:17:06,295 INFO Computing data fidelity for 114564 rotations and 2048 images at 59%
2022-04-04 21:17:07,527 DEBUG Corresponding type is already real float64.
2022-04-04 21:17:07,528 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:17:22,471 INFO Computing data fidelity for 114564 rotations and 2048 images at 60%
2022-04-04 21:17:23,734 DEBUG Corresponding type is already real float64.
2022-04-04 21:17:23,734 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:17:38,872 INFO Computing data fidelity for 114564 rotations and 2048 images at 61%
2022-04-04 21:17:40,328 DEBUG Corresponding type is already real float64.
2022-04-04 21:17:40,329 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:17:55,307 INFO Computing data fidelity for 114564 rotations and 2048 images at 62%
2022-04-04 21:17:56,777 DEBUG Corresponding type is already real float64.
2022-04-04 21:17:56,777 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:18:11,745 INFO Computing data fidelity for 114564 rotations and 2048 images at 63%
2022-04-04 21:18:13,304 DEBUG Corresponding type is already real float64.
2022-04-04 21:18:13,305 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:18:28,182 INFO Computing data fidelity for 114564 rotations and 2048 images at 64%
2022-04-04 21:18:29,466 DEBUG Corresponding type is already real float64.
2022-04-04 21:18:29,466 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:18:43,991 INFO Computing data fidelity for 114564 rotations and 2048 images at 65%
2022-04-04 21:18:45,268 DEBUG Corresponding type is already real float64.
2022-04-04 21:18:45,268 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:19:00,382 INFO Computing data fidelity for 114564 rotations and 2048 images at 66%
2022-04-04 21:19:01,661 DEBUG Corresponding type is already real float64.
2022-04-04 21:19:01,661 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:19:16,828 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2022-04-04 21:19:18,115 DEBUG Corresponding type is already real float64.
2022-04-04 21:19:18,115 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:19:33,440 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2022-04-04 21:19:34,925 DEBUG Corresponding type is already real float64.
2022-04-04 21:19:34,926 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:19:49,939 INFO Computing data fidelity for 114564 rotations and 2048 images at 68%
2022-04-04 21:19:51,244 DEBUG Corresponding type is already real float64.
2022-04-04 21:19:51,245 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:20:06,315 INFO Computing data fidelity for 114564 rotations and 2048 images at 69%
2022-04-04 21:20:07,496 DEBUG Corresponding type is already real float64.
2022-04-04 21:20:07,497 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:20:22,200 INFO Computing data fidelity for 114564 rotations and 2048 images at 70%
2022-04-04 21:20:23,398 DEBUG Corresponding type is already real float64.
2022-04-04 21:20:23,399 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:20:38,644 INFO Computing data fidelity for 114564 rotations and 2048 images at 71%
2022-04-04 21:20:39,940 DEBUG Corresponding type is already real float64.
2022-04-04 21:20:39,941 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:20:55,107 INFO Computing data fidelity for 114564 rotations and 2048 images at 72%
2022-04-04 21:20:56,409 DEBUG Corresponding type is already real float64.
2022-04-04 21:20:56,409 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:21:11,392 INFO Computing data fidelity for 114564 rotations and 2048 images at 73%
2022-04-04 21:21:12,680 DEBUG Corresponding type is already real float64.
2022-04-04 21:21:12,680 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:21:27,878 INFO Computing data fidelity for 114564 rotations and 2048 images at 74%
2022-04-04 21:21:29,228 DEBUG Corresponding type is already real float64.
2022-04-04 21:21:29,229 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:21:44,224 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2022-04-04 21:21:45,502 DEBUG Corresponding type is already real float64.
2022-04-04 21:21:45,503 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:22:00,444 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2022-04-04 21:22:01,708 DEBUG Corresponding type is already real float64.
2022-04-04 21:22:01,708 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:22:16,674 INFO Computing data fidelity for 114564 rotations and 2048 images at 76%
2022-04-04 21:22:17,953 DEBUG Corresponding type is already real float64.
2022-04-04 21:22:17,954 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:22:32,871 INFO Computing data fidelity for 114564 rotations and 2048 images at 77%
2022-04-04 21:22:34,162 DEBUG Corresponding type is already real float64.
2022-04-04 21:22:34,163 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:22:49,157 INFO Computing data fidelity for 114564 rotations and 2048 images at 78%
2022-04-04 21:22:50,445 DEBUG Corresponding type is already real float64.
2022-04-04 21:22:50,445 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:23:05,184 INFO Computing data fidelity for 114564 rotations and 2048 images at 79%
2022-04-04 21:23:06,427 DEBUG Corresponding type is already real float64.
2022-04-04 21:23:06,427 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:23:21,042 INFO Computing data fidelity for 114564 rotations and 2048 images at 80%
2022-04-04 21:23:22,327 DEBUG Corresponding type is already real float64.
2022-04-04 21:23:22,327 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:23:37,461 INFO Computing data fidelity for 114564 rotations and 2048 images at 81%
2022-04-04 21:23:38,762 DEBUG Corresponding type is already real float64.
2022-04-04 21:23:38,763 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:23:53,791 INFO Computing data fidelity for 114564 rotations and 2048 images at 82%
2022-04-04 21:23:55,143 DEBUG Corresponding type is already real float64.
2022-04-04 21:23:55,143 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:24:10,177 INFO Computing data fidelity for 114564 rotations and 2048 images at 83%
2022-04-04 21:24:11,483 DEBUG Corresponding type is already real float64.
2022-04-04 21:24:11,483 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:24:26,448 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2022-04-04 21:24:27,713 DEBUG Corresponding type is already real float64.
2022-04-04 21:24:27,713 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:24:42,638 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2022-04-04 21:24:43,895 DEBUG Corresponding type is already real float64.
2022-04-04 21:24:43,895 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:24:58,568 INFO Computing data fidelity for 114564 rotations and 2048 images at 85%
2022-04-04 21:24:59,725 DEBUG Corresponding type is already real float64.
2022-04-04 21:24:59,725 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:25:14,646 INFO Computing data fidelity for 114564 rotations and 2048 images at 86%
2022-04-04 21:25:15,902 DEBUG Corresponding type is already real float64.
2022-04-04 21:25:15,903 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:25:30,816 INFO Computing data fidelity for 114564 rotations and 2048 images at 87%
2022-04-04 21:25:32,041 DEBUG Corresponding type is already real float64.
2022-04-04 21:25:32,041 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:25:46,903 INFO Computing data fidelity for 114564 rotations and 2048 images at 88%
2022-04-04 21:25:48,143 DEBUG Corresponding type is already real float64.
2022-04-04 21:25:48,144 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:26:03,003 INFO Computing data fidelity for 114564 rotations and 2048 images at 89%
2022-04-04 21:26:04,237 DEBUG Corresponding type is already real float64.
2022-04-04 21:26:04,237 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:26:19,173 INFO Computing data fidelity for 114564 rotations and 2048 images at 90%
2022-04-04 21:26:20,401 DEBUG Corresponding type is already real float64.
2022-04-04 21:26:20,401 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:26:35,379 INFO Computing data fidelity for 114564 rotations and 2048 images at 91%
2022-04-04 21:26:36,718 DEBUG Corresponding type is already real float64.
2022-04-04 21:26:36,719 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:26:51,730 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2022-04-04 21:26:52,990 DEBUG Corresponding type is already real float64.
2022-04-04 21:26:52,991 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:27:08,250 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2022-04-04 21:27:09,531 DEBUG Corresponding type is already real float64.
2022-04-04 21:27:09,531 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:27:24,532 INFO Computing data fidelity for 114564 rotations and 2048 images at 93%
2022-04-04 21:27:25,838 DEBUG Corresponding type is already real float64.
2022-04-04 21:27:25,838 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:27:40,774 INFO Computing data fidelity for 114564 rotations and 2048 images at 94%
2022-04-04 21:27:42,094 DEBUG Corresponding type is already real float64.
2022-04-04 21:27:42,094 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:27:57,090 INFO Computing data fidelity for 114564 rotations and 2048 images at 95%
2022-04-04 21:27:58,347 DEBUG Corresponding type is already real float64.
2022-04-04 21:27:58,347 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:28:13,382 INFO Computing data fidelity for 114564 rotations and 2048 images at 96%
2022-04-04 21:28:14,657 DEBUG Corresponding type is already real float64.
2022-04-04 21:28:14,657 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:28:29,609 INFO Computing data fidelity for 114564 rotations and 2048 images at 97%
2022-04-04 21:28:30,901 DEBUG Corresponding type is already real float64.
2022-04-04 21:28:30,902 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:28:45,819 INFO Computing data fidelity for 114564 rotations and 2048 images at 98%
2022-04-04 21:28:47,112 DEBUG Corresponding type is already real float64.
2022-04-04 21:28:47,112 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:29:02,159 INFO Computing data fidelity for 114564 rotations and 2048 images at 99%
2022-04-04 21:29:03,124 DEBUG Corresponding type is already real float64.
2022-04-04 21:29:03,124 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:29:15,851 INFO Computing data fidelity for 114564 rotations and 2048 images at 100%
2022-04-04 21:29:20,544 INFO Do lambda update step
2022-04-04 21:29:47,333 INFO Do rots update step
2022-04-04 21:29:48,217 INFO Projecting 2048 vectors onto 114564-simplex at 2%
2022-04-04 21:29:48,881 INFO Projecting 2048 vectors onto 114564-simplex at 4%
2022-04-04 21:29:49,774 INFO Projecting 2048 vectors onto 114564-simplex at 7%
2022-04-04 21:29:50,713 INFO Projecting 2048 vectors onto 114564-simplex at 9%
2022-04-04 21:29:51,650 INFO Projecting 2048 vectors onto 114564-simplex at 12%
2022-04-04 21:29:52,354 INFO Projecting 2048 vectors onto 114564-simplex at 14%
2022-04-04 21:29:53,003 INFO Projecting 2048 vectors onto 114564-simplex at 17%
2022-04-04 21:29:53,667 INFO Projecting 2048 vectors onto 114564-simplex at 19%
2022-04-04 21:29:54,329 INFO Projecting 2048 vectors onto 114564-simplex at 21%
2022-04-04 21:29:54,995 INFO Projecting 2048 vectors onto 114564-simplex at 24%
2022-04-04 21:29:55,840 INFO Projecting 2048 vectors onto 114564-simplex at 26%
2022-04-04 21:29:56,514 INFO Projecting 2048 vectors onto 114564-simplex at 29%
2022-04-04 21:29:57,180 INFO Projecting 2048 vectors onto 114564-simplex at 31%
2022-04-04 21:29:57,842 INFO Projecting 2048 vectors onto 114564-simplex at 34%
2022-04-04 21:29:58,506 INFO Projecting 2048 vectors onto 114564-simplex at 36%
2022-04-04 21:29:59,165 INFO Projecting 2048 vectors onto 114564-simplex at 39%
2022-04-04 21:29:59,862 INFO Projecting 2048 vectors onto 114564-simplex at 41%
2022-04-04 21:30:00,554 INFO Projecting 2048 vectors onto 114564-simplex at 43%
2022-04-04 21:30:01,220 INFO Projecting 2048 vectors onto 114564-simplex at 46%
2022-04-04 21:30:01,902 INFO Projecting 2048 vectors onto 114564-simplex at 48%
2022-04-04 21:30:02,782 INFO Projecting 2048 vectors onto 114564-simplex at 51%
2022-04-04 21:30:03,497 INFO Projecting 2048 vectors onto 114564-simplex at 53%
2022-04-04 21:30:04,178 INFO Projecting 2048 vectors onto 114564-simplex at 56%
2022-04-04 21:30:05,017 INFO Projecting 2048 vectors onto 114564-simplex at 58%
2022-04-04 21:30:05,977 INFO Projecting 2048 vectors onto 114564-simplex at 61%
2022-04-04 21:30:06,943 INFO Projecting 2048 vectors onto 114564-simplex at 63%
2022-04-04 21:30:07,714 INFO Projecting 2048 vectors onto 114564-simplex at 65%
2022-04-04 21:30:08,409 INFO Projecting 2048 vectors onto 114564-simplex at 68%
2022-04-04 21:30:09,093 INFO Projecting 2048 vectors onto 114564-simplex at 70%
2022-04-04 21:30:09,774 INFO Projecting 2048 vectors onto 114564-simplex at 73%
2022-04-04 21:30:10,654 INFO Projecting 2048 vectors onto 114564-simplex at 75%
2022-04-04 21:30:11,341 INFO Projecting 2048 vectors onto 114564-simplex at 78%
2022-04-04 21:30:12,023 INFO Projecting 2048 vectors onto 114564-simplex at 80%
2022-04-04 21:30:12,705 INFO Projecting 2048 vectors onto 114564-simplex at 83%
2022-04-04 21:30:13,383 INFO Projecting 2048 vectors onto 114564-simplex at 85%
2022-04-04 21:30:14,069 INFO Projecting 2048 vectors onto 114564-simplex at 87%
2022-04-04 21:30:14,751 INFO Projecting 2048 vectors onto 114564-simplex at 90%
2022-04-04 21:30:15,436 INFO Projecting 2048 vectors onto 114564-simplex at 92%
2022-04-04 21:30:16,119 INFO Projecting 2048 vectors onto 114564-simplex at 95%
2022-04-04 21:30:16,829 INFO Projecting 2048 vectors onto 114564-simplex at 97%
2022-04-04 21:30:17,503 INFO Projecting 2048 vectors onto 114564-simplex at 100%
2022-04-04 21:30:18,949 INFO Computing 50 means of 581 points in at most 20 steps...
2022-04-04 21:30:19,034 INFO Computing 2048 means at 2%
2022-04-04 21:30:19,115 INFO Computing 50 means of 591 points in at most 20 steps...
2022-04-04 21:30:19,191 INFO Computing 2048 means at 4%
2022-04-04 21:30:19,276 INFO Computing 50 means of 619 points in at most 20 steps...
2022-04-04 21:30:19,349 INFO Computing 2048 means at 7%
2022-04-04 21:30:19,428 INFO Computing 50 means of 549 points in at most 20 steps...
2022-04-04 21:30:19,493 INFO Computing 2048 means at 9%
2022-04-04 21:30:19,576 INFO Computing 50 means of 589 points in at most 20 steps...
2022-04-04 21:30:19,647 INFO Computing 2048 means at 12%
2022-04-04 21:30:19,727 INFO Computing 50 means of 595 points in at most 20 steps...
2022-04-04 21:30:19,795 INFO Computing 2048 means at 14%
2022-04-04 21:30:19,876 INFO Computing 50 means of 592 points in at most 20 steps...
2022-04-04 21:30:19,944 INFO Computing 2048 means at 17%
2022-04-04 21:30:20,027 INFO Computing 50 means of 601 points in at most 20 steps...
2022-04-04 21:30:20,097 INFO Computing 2048 means at 19%
2022-04-04 21:30:20,177 INFO Computing 50 means of 589 points in at most 20 steps...
2022-04-04 21:30:20,265 INFO Computing 2048 means at 21%
2022-04-04 21:30:20,357 INFO Computing 50 means of 603 points in at most 20 steps...
2022-04-04 21:30:20,456 INFO Computing 2048 means at 24%
2022-04-04 21:30:20,550 INFO Computing 50 means of 577 points in at most 20 steps...
2022-04-04 21:30:20,733 INFO Computing 2048 means at 26%
2022-04-04 21:30:20,826 INFO Computing 50 means of 583 points in at most 20 steps...
2022-04-04 21:30:20,934 INFO Computing 2048 means at 29%
2022-04-04 21:30:21,021 INFO Computing 50 means of 583 points in at most 20 steps...
2022-04-04 21:30:21,145 INFO Computing 2048 means at 31%
2022-04-04 21:30:21,234 INFO Computing 50 means of 584 points in at most 20 steps...
2022-04-04 21:30:21,339 INFO Computing 2048 means at 34%
2022-04-04 21:30:21,436 INFO Computing 50 means of 583 points in at most 20 steps...
2022-04-04 21:30:21,555 INFO Computing 2048 means at 36%
2022-04-04 21:30:21,653 INFO Computing 50 means of 566 points in at most 20 steps...
2022-04-04 21:30:21,764 INFO Computing 2048 means at 39%
2022-04-04 21:30:21,847 INFO Computing 50 means of 589 points in at most 20 steps...
2022-04-04 21:30:21,981 INFO Computing 2048 means at 41%
2022-04-04 21:30:22,065 INFO Computing 50 means of 621 points in at most 20 steps...
2022-04-04 21:30:22,192 INFO Computing 2048 means at 43%
2022-04-04 21:30:22,289 INFO Computing 50 means of 616 points in at most 20 steps...
2022-04-04 21:30:22,410 INFO Computing 2048 means at 46%
2022-04-04 21:30:22,509 INFO Computing 50 means of 588 points in at most 20 steps...
2022-04-04 21:30:22,604 INFO Computing 2048 means at 48%
2022-04-04 21:30:22,706 INFO Computing 50 means of 604 points in at most 20 steps...
2022-04-04 21:30:22,799 INFO Computing 2048 means at 51%
2022-04-04 21:30:22,909 INFO Computing 50 means of 582 points in at most 20 steps...
2022-04-04 21:30:22,984 INFO Computing 2048 means at 53%
2022-04-04 21:30:23,068 INFO Computing 50 means of 607 points in at most 20 steps...
2022-04-04 21:30:23,158 INFO Computing 2048 means at 56%
2022-04-04 21:30:23,237 INFO Computing 50 means of 578 points in at most 20 steps...
2022-04-04 21:30:23,307 INFO Computing 2048 means at 58%
2022-04-04 21:30:23,404 INFO Computing 50 means of 607 points in at most 20 steps...
2022-04-04 21:30:23,483 INFO Computing 2048 means at 61%
2022-04-04 21:30:23,562 INFO Computing 50 means of 602 points in at most 20 steps...
2022-04-04 21:30:23,634 INFO Computing 2048 means at 63%
2022-04-04 21:30:23,718 INFO Computing 50 means of 564 points in at most 20 steps...
2022-04-04 21:30:23,786 INFO Computing 2048 means at 65%
2022-04-04 21:30:23,869 INFO Computing 50 means of 602 points in at most 20 steps...
2022-04-04 21:30:23,939 INFO Computing 2048 means at 68%
2022-04-04 21:30:24,025 INFO Computing 50 means of 579 points in at most 20 steps...
2022-04-04 21:30:24,093 INFO Computing 2048 means at 70%
2022-04-04 21:30:24,178 INFO Computing 50 means of 612 points in at most 20 steps...
2022-04-04 21:30:24,249 INFO Computing 2048 means at 73%
2022-04-04 21:30:24,342 INFO Computing 50 means of 594 points in at most 20 steps...
2022-04-04 21:30:24,415 INFO Computing 2048 means at 75%
2022-04-04 21:30:24,498 INFO Computing 50 means of 589 points in at most 20 steps...
2022-04-04 21:30:24,575 INFO Computing 2048 means at 78%
2022-04-04 21:30:24,656 INFO Computing 50 means of 582 points in at most 20 steps...
2022-04-04 21:30:24,732 INFO Computing 2048 means at 80%
2022-04-04 21:30:24,814 INFO Computing 50 means of 607 points in at most 20 steps...
2022-04-04 21:30:24,886 INFO Computing 2048 means at 83%
2022-04-04 21:30:24,972 INFO Computing 50 means of 581 points in at most 20 steps...
2022-04-04 21:30:25,042 INFO Computing 2048 means at 85%
2022-04-04 21:30:25,125 INFO Computing 50 means of 582 points in at most 20 steps...
2022-04-04 21:30:25,194 INFO Computing 2048 means at 87%
2022-04-04 21:30:25,279 INFO Computing 50 means of 615 points in at most 20 steps...
2022-04-04 21:30:25,350 INFO Computing 2048 means at 90%
2022-04-04 21:30:25,431 INFO Computing 50 means of 578 points in at most 20 steps...
2022-04-04 21:30:25,500 INFO Computing 2048 means at 92%
2022-04-04 21:30:25,583 INFO Computing 50 means of 595 points in at most 20 steps...
2022-04-04 21:30:25,653 INFO Computing 2048 means at 95%
2022-04-04 21:30:25,734 INFO Computing 50 means of 597 points in at most 20 steps...
2022-04-04 21:30:25,805 INFO Computing 2048 means at 97%
2022-04-04 21:30:25,889 INFO Computing 48 means of 571 points in at most 20 steps...
2022-04-04 21:30:25,956 INFO Computing 2048 means at 100%
2022-04-04 21:30:29,550 INFO Do vol update step
2022-04-04 21:30:29,551 INFO Compute adjoint forward mapping on the images
2022-04-04 21:30:31,710 DEBUG Corresponding type is already complex complex128.
2022-04-04 21:30:34,602 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2022-04-04 21:30:34,622 INFO Computing adjoint forward mappings from 2048 rotations at 50%
2022-04-04 21:30:36,305 DEBUG Corresponding type is already complex complex128.
2022-04-04 21:30:41,055 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2022-04-04 21:30:41,071 INFO Computing adjoint forward mappings from 2048 rotations at 100%
2022-04-04 21:30:42,048 DEBUG Corresponding type is already real float64.
2022-04-04 21:30:42,048 DEBUG anufft passed real_type for signal, converting
2022-04-04 21:30:49,291 INFO Computing kernel from 2048 rotations at 50%
2022-04-04 21:30:50,235 DEBUG Corresponding type is already real float64.
2022-04-04 21:30:50,235 DEBUG anufft passed real_type for signal, converting
2022-04-04 21:30:57,532 INFO Computing kernel from 2048 rotations at 100%
2022-04-04 21:30:57,533 INFO Computing non-centered Fourier Transform
2022-04-04 21:30:57,720 INFO Add ramp filter regularisation
2022-04-04 21:31:03,151 INFO Update data_discrepancies
2022-04-04 21:31:03,152 INFO Computing \|Ag.u - f_i\|^2
2022-04-04 21:31:04,100 DEBUG Corresponding type is already real float64.
2022-04-04 21:31:04,100 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:31:19,431 INFO Computing data fidelity for 114564 rotations and 2048 images at 0%
2022-04-04 21:31:20,288 DEBUG Corresponding type is already real float64.
2022-04-04 21:31:20,289 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:31:35,545 INFO Computing data fidelity for 114564 rotations and 2048 images at 1%
2022-04-04 21:31:36,396 DEBUG Corresponding type is already real float64.
2022-04-04 21:31:36,397 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:31:51,492 INFO Computing data fidelity for 114564 rotations and 2048 images at 2%
2022-04-04 21:31:52,355 DEBUG Corresponding type is already real float64.
2022-04-04 21:31:52,355 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:32:07,453 INFO Computing data fidelity for 114564 rotations and 2048 images at 3%
2022-04-04 21:32:08,312 DEBUG Corresponding type is already real float64.
2022-04-04 21:32:08,313 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:32:23,338 INFO Computing data fidelity for 114564 rotations and 2048 images at 4%
2022-04-04 21:32:24,208 DEBUG Corresponding type is already real float64.
2022-04-04 21:32:24,208 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:32:39,378 INFO Computing data fidelity for 114564 rotations and 2048 images at 5%
2022-04-04 21:32:40,254 DEBUG Corresponding type is already real float64.
2022-04-04 21:32:40,255 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:32:55,339 INFO Computing data fidelity for 114564 rotations and 2048 images at 6%
2022-04-04 21:32:56,186 DEBUG Corresponding type is already real float64.
2022-04-04 21:32:56,186 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:33:11,206 INFO Computing data fidelity for 114564 rotations and 2048 images at 7%
2022-04-04 21:33:12,054 DEBUG Corresponding type is already real float64.
2022-04-04 21:33:12,054 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:33:27,309 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2022-04-04 21:33:28,151 DEBUG Corresponding type is already real float64.
2022-04-04 21:33:28,151 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:33:43,079 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2022-04-04 21:33:43,921 DEBUG Corresponding type is already real float64.
2022-04-04 21:33:43,921 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:33:58,896 INFO Computing data fidelity for 114564 rotations and 2048 images at 9%
2022-04-04 21:33:59,735 DEBUG Corresponding type is already real float64.
2022-04-04 21:33:59,735 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:34:14,707 INFO Computing data fidelity for 114564 rotations and 2048 images at 10%
2022-04-04 21:34:15,546 DEBUG Corresponding type is already real float64.
2022-04-04 21:34:15,546 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:34:30,501 INFO Computing data fidelity for 114564 rotations and 2048 images at 11%
2022-04-04 21:34:31,341 DEBUG Corresponding type is already real float64.
2022-04-04 21:34:31,341 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:34:46,382 INFO Computing data fidelity for 114564 rotations and 2048 images at 12%
2022-04-04 21:34:47,226 DEBUG Corresponding type is already real float64.
2022-04-04 21:34:47,226 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:35:02,223 INFO Computing data fidelity for 114564 rotations and 2048 images at 13%
2022-04-04 21:35:03,058 DEBUG Corresponding type is already real float64.
2022-04-04 21:35:03,058 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:35:18,056 INFO Computing data fidelity for 114564 rotations and 2048 images at 14%
2022-04-04 21:35:19,008 DEBUG Corresponding type is already real float64.
2022-04-04 21:35:19,008 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:35:34,898 INFO Computing data fidelity for 114564 rotations and 2048 images at 15%
2022-04-04 21:35:35,744 DEBUG Corresponding type is already real float64.
2022-04-04 21:35:35,744 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:35:50,725 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2022-04-04 21:35:51,579 DEBUG Corresponding type is already real float64.
2022-04-04 21:35:51,579 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:36:06,492 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2022-04-04 21:36:07,340 DEBUG Corresponding type is already real float64.
2022-04-04 21:36:07,340 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:36:22,379 INFO Computing data fidelity for 114564 rotations and 2048 images at 17%
2022-04-04 21:36:23,241 DEBUG Corresponding type is already real float64.
2022-04-04 21:36:23,241 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:36:38,208 INFO Computing data fidelity for 114564 rotations and 2048 images at 18%
2022-04-04 21:36:39,073 DEBUG Corresponding type is already real float64.
2022-04-04 21:36:39,073 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:36:54,153 INFO Computing data fidelity for 114564 rotations and 2048 images at 19%
2022-04-04 21:36:55,031 DEBUG Corresponding type is already real float64.
2022-04-04 21:36:55,031 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:37:10,050 INFO Computing data fidelity for 114564 rotations and 2048 images at 20%
2022-04-04 21:37:10,935 DEBUG Corresponding type is already real float64.
2022-04-04 21:37:10,935 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:37:25,845 INFO Computing data fidelity for 114564 rotations and 2048 images at 21%
2022-04-04 21:37:26,739 DEBUG Corresponding type is already real float64.
2022-04-04 21:37:26,740 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:37:41,740 INFO Computing data fidelity for 114564 rotations and 2048 images at 22%
2022-04-04 21:37:42,698 DEBUG Corresponding type is already real float64.
2022-04-04 21:37:42,698 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:37:57,483 INFO Computing data fidelity for 114564 rotations and 2048 images at 23%
2022-04-04 21:37:58,392 DEBUG Corresponding type is already real float64.
2022-04-04 21:37:58,392 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:38:12,993 INFO Computing data fidelity for 114564 rotations and 2048 images at 24%
2022-04-04 21:38:13,914 DEBUG Corresponding type is already real float64.
2022-04-04 21:38:13,915 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:38:28,464 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2022-04-04 21:38:29,490 DEBUG Corresponding type is already real float64.
2022-04-04 21:38:29,490 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:38:43,924 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2022-04-04 21:38:44,986 DEBUG Corresponding type is already real float64.
2022-04-04 21:38:44,986 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:38:59,529 INFO Computing data fidelity for 114564 rotations and 2048 images at 26%
2022-04-04 21:39:00,685 DEBUG Corresponding type is already real float64.
2022-04-04 21:39:00,686 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:39:16,106 INFO Computing data fidelity for 114564 rotations and 2048 images at 27%
2022-04-04 21:39:17,285 DEBUG Corresponding type is already real float64.
2022-04-04 21:39:17,286 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:39:32,094 INFO Computing data fidelity for 114564 rotations and 2048 images at 28%
2022-04-04 21:39:33,305 DEBUG Corresponding type is already real float64.
2022-04-04 21:39:33,305 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:39:48,202 INFO Computing data fidelity for 114564 rotations and 2048 images at 29%
2022-04-04 21:39:49,325 DEBUG Corresponding type is already real float64.
2022-04-04 21:39:49,325 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:40:03,816 INFO Computing data fidelity for 114564 rotations and 2048 images at 30%
2022-04-04 21:40:05,087 DEBUG Corresponding type is already real float64.
2022-04-04 21:40:05,087 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:40:19,904 INFO Computing data fidelity for 114564 rotations and 2048 images at 31%
2022-04-04 21:40:21,175 DEBUG Corresponding type is already real float64.
2022-04-04 21:40:21,175 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:40:36,159 INFO Computing data fidelity for 114564 rotations and 2048 images at 32%
2022-04-04 21:40:37,443 DEBUG Corresponding type is already real float64.
2022-04-04 21:40:37,443 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:40:52,071 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2022-04-04 21:40:53,309 DEBUG Corresponding type is already real float64.
2022-04-04 21:40:53,310 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:41:08,156 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2022-04-04 21:41:09,429 DEBUG Corresponding type is already real float64.
2022-04-04 21:41:09,429 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:41:24,329 INFO Computing data fidelity for 114564 rotations and 2048 images at 34%
2022-04-04 21:41:25,681 DEBUG Corresponding type is already real float64.
2022-04-04 21:41:25,681 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:41:40,812 INFO Computing data fidelity for 114564 rotations and 2048 images at 35%
2022-04-04 21:41:41,972 DEBUG Corresponding type is already real float64.
2022-04-04 21:41:41,972 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:41:56,692 INFO Computing data fidelity for 114564 rotations and 2048 images at 36%
2022-04-04 21:41:57,757 DEBUG Corresponding type is already real float64.
2022-04-04 21:41:57,757 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:42:12,074 INFO Computing data fidelity for 114564 rotations and 2048 images at 37%
2022-04-04 21:42:13,319 DEBUG Corresponding type is already real float64.
2022-04-04 21:42:13,319 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:42:28,201 INFO Computing data fidelity for 114564 rotations and 2048 images at 38%
2022-04-04 21:42:29,410 DEBUG Corresponding type is already real float64.
2022-04-04 21:42:29,410 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:42:44,123 INFO Computing data fidelity for 114564 rotations and 2048 images at 39%
2022-04-04 21:42:45,365 DEBUG Corresponding type is already real float64.
2022-04-04 21:42:45,365 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:42:59,998 INFO Computing data fidelity for 114564 rotations and 2048 images at 40%
2022-04-04 21:43:01,263 DEBUG Corresponding type is already real float64.
2022-04-04 21:43:01,263 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:43:16,219 INFO Computing data fidelity for 114564 rotations and 2048 images at 41%
2022-04-04 21:43:17,475 DEBUG Corresponding type is already real float64.
2022-04-04 21:43:17,475 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:43:32,186 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2022-04-04 21:43:33,446 DEBUG Corresponding type is already real float64.
2022-04-04 21:43:33,446 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:43:48,054 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2022-04-04 21:43:49,210 DEBUG Corresponding type is already real float64.
2022-04-04 21:43:49,210 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:44:03,876 INFO Computing data fidelity for 114564 rotations and 2048 images at 43%
2022-04-04 21:44:05,140 DEBUG Corresponding type is already real float64.
2022-04-04 21:44:05,140 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:44:19,676 INFO Computing data fidelity for 114564 rotations and 2048 images at 44%
2022-04-04 21:44:20,844 DEBUG Corresponding type is already real float64.
2022-04-04 21:44:20,844 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:44:35,354 INFO Computing data fidelity for 114564 rotations and 2048 images at 45%
2022-04-04 21:44:36,474 DEBUG Corresponding type is already real float64.
2022-04-04 21:44:36,474 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:44:50,737 INFO Computing data fidelity for 114564 rotations and 2048 images at 46%
2022-04-04 21:44:51,829 DEBUG Corresponding type is already real float64.
2022-04-04 21:44:51,829 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:45:06,324 INFO Computing data fidelity for 114564 rotations and 2048 images at 47%
2022-04-04 21:45:07,435 DEBUG Corresponding type is already real float64.
2022-04-04 21:45:07,435 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:45:21,956 INFO Computing data fidelity for 114564 rotations and 2048 images at 48%
2022-04-04 21:45:23,173 DEBUG Corresponding type is already real float64.
2022-04-04 21:45:23,174 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:45:38,168 INFO Computing data fidelity for 114564 rotations and 2048 images at 49%
2022-04-04 21:45:39,338 DEBUG Corresponding type is already real float64.
2022-04-04 21:45:39,339 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:45:53,966 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2022-04-04 21:45:55,213 DEBUG Corresponding type is already real float64.
2022-04-04 21:45:55,213 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:46:10,083 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2022-04-04 21:46:11,314 DEBUG Corresponding type is already real float64.
2022-04-04 21:46:11,314 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:46:26,203 INFO Computing data fidelity for 114564 rotations and 2048 images at 51%
2022-04-04 21:46:27,457 DEBUG Corresponding type is already real float64.
2022-04-04 21:46:27,457 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:46:42,379 INFO Computing data fidelity for 114564 rotations and 2048 images at 52%
2022-04-04 21:46:43,600 DEBUG Corresponding type is already real float64.
2022-04-04 21:46:43,600 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:46:58,435 INFO Computing data fidelity for 114564 rotations and 2048 images at 53%
2022-04-04 21:46:59,731 DEBUG Corresponding type is already real float64.
2022-04-04 21:46:59,731 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:47:14,609 INFO Computing data fidelity for 114564 rotations and 2048 images at 54%
2022-04-04 21:47:15,883 DEBUG Corresponding type is already real float64.
2022-04-04 21:47:15,883 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:47:30,988 INFO Computing data fidelity for 114564 rotations and 2048 images at 55%
2022-04-04 21:47:32,272 DEBUG Corresponding type is already real float64.
2022-04-04 21:47:32,272 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:47:47,323 INFO Computing data fidelity for 114564 rotations and 2048 images at 56%
2022-04-04 21:47:48,628 DEBUG Corresponding type is already real float64.
2022-04-04 21:47:48,628 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:48:03,558 INFO Computing data fidelity for 114564 rotations and 2048 images at 57%
2022-04-04 21:48:04,809 DEBUG Corresponding type is already real float64.
2022-04-04 21:48:04,809 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:48:19,677 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2022-04-04 21:48:20,936 DEBUG Corresponding type is already real float64.
2022-04-04 21:48:20,936 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:48:35,922 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2022-04-04 21:48:37,189 DEBUG Corresponding type is already real float64.
2022-04-04 21:48:37,190 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:48:52,135 INFO Computing data fidelity for 114564 rotations and 2048 images at 59%
2022-04-04 21:48:53,411 DEBUG Corresponding type is already real float64.
2022-04-04 21:48:53,411 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:49:08,361 INFO Computing data fidelity for 114564 rotations and 2048 images at 60%
2022-04-04 21:49:09,594 DEBUG Corresponding type is already real float64.
2022-04-04 21:49:09,594 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:49:24,567 INFO Computing data fidelity for 114564 rotations and 2048 images at 61%
2022-04-04 21:49:25,817 DEBUG Corresponding type is already real float64.
2022-04-04 21:49:25,818 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:49:40,787 INFO Computing data fidelity for 114564 rotations and 2048 images at 62%
2022-04-04 21:49:42,022 DEBUG Corresponding type is already real float64.
2022-04-04 21:49:42,022 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:49:57,024 INFO Computing data fidelity for 114564 rotations and 2048 images at 63%
2022-04-04 21:49:58,252 DEBUG Corresponding type is already real float64.
2022-04-04 21:49:58,252 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:50:13,255 INFO Computing data fidelity for 114564 rotations and 2048 images at 64%
2022-04-04 21:50:14,462 DEBUG Corresponding type is already real float64.
2022-04-04 21:50:14,463 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:50:29,664 INFO Computing data fidelity for 114564 rotations and 2048 images at 65%
2022-04-04 21:50:30,978 DEBUG Corresponding type is already real float64.
2022-04-04 21:50:30,979 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:50:46,174 INFO Computing data fidelity for 114564 rotations and 2048 images at 66%
2022-04-04 21:50:47,386 DEBUG Corresponding type is already real float64.
2022-04-04 21:50:47,386 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:51:02,574 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2022-04-04 21:51:03,826 DEBUG Corresponding type is already real float64.
2022-04-04 21:51:03,826 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:51:18,667 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2022-04-04 21:51:19,932 DEBUG Corresponding type is already real float64.
2022-04-04 21:51:19,933 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:51:34,848 INFO Computing data fidelity for 114564 rotations and 2048 images at 68%
2022-04-04 21:51:36,125 DEBUG Corresponding type is already real float64.
2022-04-04 21:51:36,125 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:51:51,099 INFO Computing data fidelity for 114564 rotations and 2048 images at 69%
2022-04-04 21:51:52,345 DEBUG Corresponding type is already real float64.
2022-04-04 21:51:52,345 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:52:07,266 INFO Computing data fidelity for 114564 rotations and 2048 images at 70%
2022-04-04 21:52:08,607 DEBUG Corresponding type is already real float64.
2022-04-04 21:52:08,607 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:52:23,500 INFO Computing data fidelity for 114564 rotations and 2048 images at 71%
2022-04-04 21:52:24,734 DEBUG Corresponding type is already real float64.
2022-04-04 21:52:24,735 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:52:39,952 INFO Computing data fidelity for 114564 rotations and 2048 images at 72%
2022-04-04 21:52:41,240 DEBUG Corresponding type is already real float64.
2022-04-04 21:52:41,242 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:52:56,496 INFO Computing data fidelity for 114564 rotations and 2048 images at 73%
2022-04-04 21:52:57,784 DEBUG Corresponding type is already real float64.
2022-04-04 21:52:57,784 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:53:12,674 INFO Computing data fidelity for 114564 rotations and 2048 images at 74%
2022-04-04 21:53:13,952 DEBUG Corresponding type is already real float64.
2022-04-04 21:53:13,952 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:53:28,743 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2022-04-04 21:53:29,998 DEBUG Corresponding type is already real float64.
2022-04-04 21:53:29,998 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:53:44,818 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2022-04-04 21:53:46,108 DEBUG Corresponding type is already real float64.
2022-04-04 21:53:46,108 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:54:00,896 INFO Computing data fidelity for 114564 rotations and 2048 images at 76%
2022-04-04 21:54:02,137 DEBUG Corresponding type is already real float64.
2022-04-04 21:54:02,137 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:54:16,901 INFO Computing data fidelity for 114564 rotations and 2048 images at 77%
2022-04-04 21:54:18,173 DEBUG Corresponding type is already real float64.
2022-04-04 21:54:18,173 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:54:32,988 INFO Computing data fidelity for 114564 rotations and 2048 images at 78%
2022-04-04 21:54:34,222 DEBUG Corresponding type is already real float64.
2022-04-04 21:54:34,223 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:54:49,038 INFO Computing data fidelity for 114564 rotations and 2048 images at 79%
2022-04-04 21:54:50,270 DEBUG Corresponding type is already real float64.
2022-04-04 21:54:50,270 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:55:05,023 INFO Computing data fidelity for 114564 rotations and 2048 images at 80%
2022-04-04 21:55:06,228 DEBUG Corresponding type is already real float64.
2022-04-04 21:55:06,229 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:55:20,963 INFO Computing data fidelity for 114564 rotations and 2048 images at 81%
2022-04-04 21:55:22,210 DEBUG Corresponding type is already real float64.
2022-04-04 21:55:22,211 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:55:37,065 INFO Computing data fidelity for 114564 rotations and 2048 images at 82%
2022-04-04 21:55:38,330 DEBUG Corresponding type is already real float64.
2022-04-04 21:55:38,331 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:55:53,093 INFO Computing data fidelity for 114564 rotations and 2048 images at 83%
2022-04-04 21:55:54,308 DEBUG Corresponding type is already real float64.
2022-04-04 21:55:54,308 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:56:08,992 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2022-04-04 21:56:10,240 DEBUG Corresponding type is already real float64.
2022-04-04 21:56:10,240 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:56:25,019 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2022-04-04 21:56:26,251 DEBUG Corresponding type is already real float64.
2022-04-04 21:56:26,251 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:56:41,170 INFO Computing data fidelity for 114564 rotations and 2048 images at 85%
2022-04-04 21:56:42,359 DEBUG Corresponding type is already real float64.
2022-04-04 21:56:42,359 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:56:57,016 INFO Computing data fidelity for 114564 rotations and 2048 images at 86%
2022-04-04 21:56:58,246 DEBUG Corresponding type is already real float64.
2022-04-04 21:56:58,246 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:57:13,039 INFO Computing data fidelity for 114564 rotations and 2048 images at 87%
2022-04-04 21:57:14,253 DEBUG Corresponding type is already real float64.
2022-04-04 21:57:14,254 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:57:29,103 INFO Computing data fidelity for 114564 rotations and 2048 images at 88%
2022-04-04 21:57:30,462 DEBUG Corresponding type is already real float64.
2022-04-04 21:57:30,462 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:57:45,289 INFO Computing data fidelity for 114564 rotations and 2048 images at 89%
2022-04-04 21:57:46,533 DEBUG Corresponding type is already real float64.
2022-04-04 21:57:46,533 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:58:01,597 INFO Computing data fidelity for 114564 rotations and 2048 images at 90%
2022-04-04 21:58:03,392 DEBUG Corresponding type is already real float64.
2022-04-04 21:58:03,392 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:58:18,044 INFO Computing data fidelity for 114564 rotations and 2048 images at 91%
2022-04-04 21:58:19,250 DEBUG Corresponding type is already real float64.
2022-04-04 21:58:19,251 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:58:33,923 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2022-04-04 21:58:35,101 DEBUG Corresponding type is already real float64.
2022-04-04 21:58:35,102 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:58:49,918 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2022-04-04 21:58:51,116 DEBUG Corresponding type is already real float64.
2022-04-04 21:58:51,117 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:59:05,888 INFO Computing data fidelity for 114564 rotations and 2048 images at 93%
2022-04-04 21:59:07,255 DEBUG Corresponding type is already real float64.
2022-04-04 21:59:07,255 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:59:22,119 INFO Computing data fidelity for 114564 rotations and 2048 images at 94%
2022-04-04 21:59:23,400 DEBUG Corresponding type is already real float64.
2022-04-04 21:59:23,400 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:59:38,301 INFO Computing data fidelity for 114564 rotations and 2048 images at 95%
2022-04-04 21:59:39,746 DEBUG Corresponding type is already real float64.
2022-04-04 21:59:39,746 DEBUG nufft passed real_type for signal, converting
2022-04-04 21:59:54,627 INFO Computing data fidelity for 114564 rotations and 2048 images at 96%
2022-04-04 21:59:55,973 DEBUG Corresponding type is already real float64.
2022-04-04 21:59:55,973 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:00:10,845 INFO Computing data fidelity for 114564 rotations and 2048 images at 97%
2022-04-04 22:00:12,092 DEBUG Corresponding type is already real float64.
2022-04-04 22:00:12,092 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:00:26,920 INFO Computing data fidelity for 114564 rotations and 2048 images at 98%
2022-04-04 22:00:28,167 DEBUG Corresponding type is already real float64.
2022-04-04 22:00:28,167 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:00:42,890 INFO Computing data fidelity for 114564 rotations and 2048 images at 99%
2022-04-04 22:00:43,923 DEBUG Corresponding type is already real float64.
2022-04-04 22:00:43,923 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:00:56,472 INFO Computing data fidelity for 114564 rotations and 2048 images at 100%
2022-04-04 22:01:01,167 INFO Do lambda update step
2022-04-04 22:01:28,023 INFO Do rots update step
2022-04-04 22:01:28,925 INFO Projecting 2048 vectors onto 114564-simplex at 2%
2022-04-04 22:01:29,604 INFO Projecting 2048 vectors onto 114564-simplex at 4%
2022-04-04 22:01:30,533 INFO Projecting 2048 vectors onto 114564-simplex at 7%
2022-04-04 22:01:31,521 INFO Projecting 2048 vectors onto 114564-simplex at 9%
2022-04-04 22:01:32,400 INFO Projecting 2048 vectors onto 114564-simplex at 12%
2022-04-04 22:01:33,094 INFO Projecting 2048 vectors onto 114564-simplex at 14%
2022-04-04 22:01:33,764 INFO Projecting 2048 vectors onto 114564-simplex at 17%
2022-04-04 22:01:34,437 INFO Projecting 2048 vectors onto 114564-simplex at 19%
2022-04-04 22:01:35,097 INFO Projecting 2048 vectors onto 114564-simplex at 21%
2022-04-04 22:01:35,759 INFO Projecting 2048 vectors onto 114564-simplex at 24%
2022-04-04 22:01:36,595 INFO Projecting 2048 vectors onto 114564-simplex at 26%
2022-04-04 22:01:37,259 INFO Projecting 2048 vectors onto 114564-simplex at 29%
2022-04-04 22:01:37,919 INFO Projecting 2048 vectors onto 114564-simplex at 31%
2022-04-04 22:01:38,591 INFO Projecting 2048 vectors onto 114564-simplex at 34%
2022-04-04 22:01:39,258 INFO Projecting 2048 vectors onto 114564-simplex at 36%
2022-04-04 22:01:39,937 INFO Projecting 2048 vectors onto 114564-simplex at 39%
2022-04-04 22:01:40,626 INFO Projecting 2048 vectors onto 114564-simplex at 41%
2022-04-04 22:01:41,318 INFO Projecting 2048 vectors onto 114564-simplex at 43%
2022-04-04 22:01:41,995 INFO Projecting 2048 vectors onto 114564-simplex at 46%
2022-04-04 22:01:42,677 INFO Projecting 2048 vectors onto 114564-simplex at 48%
2022-04-04 22:01:43,536 INFO Projecting 2048 vectors onto 114564-simplex at 51%
2022-04-04 22:01:44,205 INFO Projecting 2048 vectors onto 114564-simplex at 53%
2022-04-04 22:01:44,862 INFO Projecting 2048 vectors onto 114564-simplex at 56%
2022-04-04 22:01:45,754 INFO Projecting 2048 vectors onto 114564-simplex at 58%
2022-04-04 22:01:46,681 INFO Projecting 2048 vectors onto 114564-simplex at 61%
2022-04-04 22:01:47,554 INFO Projecting 2048 vectors onto 114564-simplex at 63%
2022-04-04 22:01:48,262 INFO Projecting 2048 vectors onto 114564-simplex at 65%
2022-04-04 22:01:48,938 INFO Projecting 2048 vectors onto 114564-simplex at 68%
2022-04-04 22:01:49,619 INFO Projecting 2048 vectors onto 114564-simplex at 70%
2022-04-04 22:01:50,294 INFO Projecting 2048 vectors onto 114564-simplex at 73%
2022-04-04 22:01:51,163 INFO Projecting 2048 vectors onto 114564-simplex at 75%
2022-04-04 22:01:51,839 INFO Projecting 2048 vectors onto 114564-simplex at 78%
2022-04-04 22:01:52,514 INFO Projecting 2048 vectors onto 114564-simplex at 80%
2022-04-04 22:01:53,186 INFO Projecting 2048 vectors onto 114564-simplex at 83%
2022-04-04 22:01:53,851 INFO Projecting 2048 vectors onto 114564-simplex at 85%
2022-04-04 22:01:54,527 INFO Projecting 2048 vectors onto 114564-simplex at 87%
2022-04-04 22:01:55,192 INFO Projecting 2048 vectors onto 114564-simplex at 90%
2022-04-04 22:01:55,870 INFO Projecting 2048 vectors onto 114564-simplex at 92%
2022-04-04 22:01:56,549 INFO Projecting 2048 vectors onto 114564-simplex at 95%
2022-04-04 22:01:57,229 INFO Projecting 2048 vectors onto 114564-simplex at 97%
2022-04-04 22:01:57,896 INFO Projecting 2048 vectors onto 114564-simplex at 100%
2022-04-04 22:01:59,289 INFO Computing 50 means of 574 points in at most 20 steps...
2022-04-04 22:01:59,366 INFO Computing 2048 means at 2%
2022-04-04 22:01:59,443 INFO Computing 50 means of 583 points in at most 20 steps...
2022-04-04 22:01:59,519 INFO Computing 2048 means at 4%
2022-04-04 22:01:59,596 INFO Computing 50 means of 607 points in at most 20 steps...
2022-04-04 22:01:59,669 INFO Computing 2048 means at 7%
2022-04-04 22:01:59,747 INFO Computing 50 means of 550 points in at most 20 steps...
2022-04-04 22:01:59,818 INFO Computing 2048 means at 9%
2022-04-04 22:01:59,893 INFO Computing 50 means of 589 points in at most 20 steps...
2022-04-04 22:01:59,963 INFO Computing 2048 means at 12%
2022-04-04 22:02:00,038 INFO Computing 50 means of 592 points in at most 20 steps...
2022-04-04 22:02:00,112 INFO Computing 2048 means at 14%
2022-04-04 22:02:00,191 INFO Computing 50 means of 593 points in at most 20 steps...
2022-04-04 22:02:00,275 INFO Computing 2048 means at 17%
2022-04-04 22:02:00,352 INFO Computing 50 means of 602 points in at most 20 steps...
2022-04-04 22:02:00,446 INFO Computing 2048 means at 19%
2022-04-04 22:02:00,525 INFO Computing 50 means of 593 points in at most 20 steps...
2022-04-04 22:02:00,624 INFO Computing 2048 means at 21%
2022-04-04 22:02:00,777 INFO Computing 50 means of 591 points in at most 20 steps...
2022-04-04 22:02:00,908 INFO Computing 2048 means at 24%
2022-04-04 22:02:01,011 INFO Computing 50 means of 583 points in at most 20 steps...
2022-04-04 22:02:01,116 INFO Computing 2048 means at 26%
2022-04-04 22:02:01,204 INFO Computing 50 means of 580 points in at most 20 steps...
2022-04-04 22:02:01,320 INFO Computing 2048 means at 29%
2022-04-04 22:02:01,412 INFO Computing 50 means of 583 points in at most 20 steps...
2022-04-04 22:02:01,517 INFO Computing 2048 means at 31%
2022-04-04 22:02:01,613 INFO Computing 50 means of 580 points in at most 20 steps...
2022-04-04 22:02:01,721 INFO Computing 2048 means at 34%
2022-04-04 22:02:01,824 INFO Computing 50 means of 570 points in at most 20 steps...
2022-04-04 22:02:01,933 INFO Computing 2048 means at 36%
2022-04-04 22:02:02,017 INFO Computing 50 means of 573 points in at most 20 steps...
2022-04-04 22:02:02,137 INFO Computing 2048 means at 39%
2022-04-04 22:02:02,222 INFO Computing 50 means of 588 points in at most 20 steps...
2022-04-04 22:02:02,340 INFO Computing 2048 means at 41%
2022-04-04 22:02:02,428 INFO Computing 50 means of 606 points in at most 20 steps...
2022-04-04 22:02:02,536 INFO Computing 2048 means at 43%
2022-04-04 22:02:02,627 INFO Computing 50 means of 604 points in at most 20 steps...
2022-04-04 22:02:02,723 INFO Computing 2048 means at 46%
2022-04-04 22:02:02,800 INFO Computing 50 means of 593 points in at most 20 steps...
2022-04-04 22:02:02,883 INFO Computing 2048 means at 48%
2022-04-04 22:02:02,980 INFO Computing 50 means of 590 points in at most 20 steps...
2022-04-04 22:02:03,046 INFO Computing 2048 means at 51%
2022-04-04 22:02:03,127 INFO Computing 50 means of 577 points in at most 20 steps...
2022-04-04 22:02:03,210 INFO Computing 2048 means at 53%
2022-04-04 22:02:03,291 INFO Computing 50 means of 595 points in at most 20 steps...
2022-04-04 22:02:03,366 INFO Computing 2048 means at 56%
2022-04-04 22:02:03,450 INFO Computing 50 means of 594 points in at most 20 steps...
2022-04-04 22:02:03,523 INFO Computing 2048 means at 58%
2022-04-04 22:02:03,610 INFO Computing 50 means of 589 points in at most 20 steps...
2022-04-04 22:02:03,685 INFO Computing 2048 means at 61%
2022-04-04 22:02:03,767 INFO Computing 50 means of 595 points in at most 20 steps...
2022-04-04 22:02:03,833 INFO Computing 2048 means at 63%
2022-04-04 22:02:03,916 INFO Computing 50 means of 571 points in at most 20 steps...
2022-04-04 22:02:03,983 INFO Computing 2048 means at 65%
2022-04-04 22:02:04,067 INFO Computing 50 means of 605 points in at most 20 steps...
2022-04-04 22:02:04,136 INFO Computing 2048 means at 68%
2022-04-04 22:02:04,220 INFO Computing 50 means of 581 points in at most 20 steps...
2022-04-04 22:02:04,288 INFO Computing 2048 means at 70%
2022-04-04 22:02:04,371 INFO Computing 50 means of 594 points in at most 20 steps...
2022-04-04 22:02:04,439 INFO Computing 2048 means at 73%
2022-04-04 22:02:04,533 INFO Computing 50 means of 593 points in at most 20 steps...
2022-04-04 22:02:04,606 INFO Computing 2048 means at 75%
2022-04-04 22:02:04,689 INFO Computing 50 means of 607 points in at most 20 steps...
2022-04-04 22:02:04,768 INFO Computing 2048 means at 78%
2022-04-04 22:02:04,848 INFO Computing 50 means of 577 points in at most 20 steps...
2022-04-04 22:02:04,923 INFO Computing 2048 means at 80%
2022-04-04 22:02:05,003 INFO Computing 50 means of 606 points in at most 20 steps...
2022-04-04 22:02:05,078 INFO Computing 2048 means at 83%
2022-04-04 22:02:05,161 INFO Computing 50 means of 583 points in at most 20 steps...
2022-04-04 22:02:05,229 INFO Computing 2048 means at 85%
2022-04-04 22:02:05,311 INFO Computing 50 means of 587 points in at most 20 steps...
2022-04-04 22:02:05,380 INFO Computing 2048 means at 87%
2022-04-04 22:02:05,464 INFO Computing 50 means of 599 points in at most 20 steps...
2022-04-04 22:02:05,533 INFO Computing 2048 means at 90%
2022-04-04 22:02:05,615 INFO Computing 50 means of 576 points in at most 20 steps...
2022-04-04 22:02:05,683 INFO Computing 2048 means at 92%
2022-04-04 22:02:05,768 INFO Computing 50 means of 580 points in at most 20 steps...
2022-04-04 22:02:05,836 INFO Computing 2048 means at 95%
2022-04-04 22:02:05,920 INFO Computing 50 means of 575 points in at most 20 steps...
2022-04-04 22:02:05,986 INFO Computing 2048 means at 97%
2022-04-04 22:02:06,072 INFO Computing 48 means of 564 points in at most 20 steps...
2022-04-04 22:02:06,138 INFO Computing 2048 means at 100%
2022-04-04 22:02:09,590 INFO Do vol update step
2022-04-04 22:02:09,591 INFO Compute adjoint forward mapping on the images
2022-04-04 22:02:11,345 DEBUG Corresponding type is already complex complex128.
2022-04-04 22:02:14,152 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2022-04-04 22:02:14,169 INFO Computing adjoint forward mappings from 2048 rotations at 50%
2022-04-04 22:02:15,824 DEBUG Corresponding type is already complex complex128.
2022-04-04 22:02:20,362 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2022-04-04 22:02:20,383 INFO Computing adjoint forward mappings from 2048 rotations at 100%
2022-04-04 22:02:21,367 DEBUG Corresponding type is already real float64.
2022-04-04 22:02:21,367 DEBUG anufft passed real_type for signal, converting
2022-04-04 22:02:28,612 INFO Computing kernel from 2048 rotations at 50%
2022-04-04 22:02:29,574 DEBUG Corresponding type is already real float64.
2022-04-04 22:02:29,574 DEBUG anufft passed real_type for signal, converting
2022-04-04 22:02:36,837 INFO Computing kernel from 2048 rotations at 100%
2022-04-04 22:02:36,839 INFO Computing non-centered Fourier Transform
2022-04-04 22:02:37,019 INFO Add ramp filter regularisation
2022-04-04 22:02:42,112 INFO Update data_discrepancies
2022-04-04 22:02:42,113 INFO Computing \|Ag.u - f_i\|^2
2022-04-04 22:02:43,054 DEBUG Corresponding type is already real float64.
2022-04-04 22:02:43,055 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:02:58,117 INFO Computing data fidelity for 114564 rotations and 2048 images at 0%
2022-04-04 22:02:58,931 DEBUG Corresponding type is already real float64.
2022-04-04 22:02:58,931 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:03:14,033 INFO Computing data fidelity for 114564 rotations and 2048 images at 1%
2022-04-04 22:03:14,859 DEBUG Corresponding type is already real float64.
2022-04-04 22:03:14,859 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:03:29,783 INFO Computing data fidelity for 114564 rotations and 2048 images at 2%
2022-04-04 22:03:30,594 DEBUG Corresponding type is already real float64.
2022-04-04 22:03:30,595 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:03:45,486 INFO Computing data fidelity for 114564 rotations and 2048 images at 3%
2022-04-04 22:03:46,339 DEBUG Corresponding type is already real float64.
2022-04-04 22:03:46,339 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:04:01,223 INFO Computing data fidelity for 114564 rotations and 2048 images at 4%
2022-04-04 22:04:02,064 DEBUG Corresponding type is already real float64.
2022-04-04 22:04:02,064 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:04:16,905 INFO Computing data fidelity for 114564 rotations and 2048 images at 5%
2022-04-04 22:04:17,712 DEBUG Corresponding type is already real float64.
2022-04-04 22:04:17,712 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:04:32,527 INFO Computing data fidelity for 114564 rotations and 2048 images at 6%
2022-04-04 22:04:33,315 DEBUG Corresponding type is already real float64.
2022-04-04 22:04:33,315 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:04:48,208 INFO Computing data fidelity for 114564 rotations and 2048 images at 7%
2022-04-04 22:04:48,992 DEBUG Corresponding type is already real float64.
2022-04-04 22:04:48,992 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:05:03,865 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2022-04-04 22:05:04,656 DEBUG Corresponding type is already real float64.
2022-04-04 22:05:04,657 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:05:19,523 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2022-04-04 22:05:20,367 DEBUG Corresponding type is already real float64.
2022-04-04 22:05:20,367 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:05:35,252 INFO Computing data fidelity for 114564 rotations and 2048 images at 9%
2022-04-04 22:05:36,074 DEBUG Corresponding type is already real float64.
2022-04-04 22:05:36,075 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:05:50,924 INFO Computing data fidelity for 114564 rotations and 2048 images at 10%
2022-04-04 22:05:51,808 DEBUG Corresponding type is already real float64.
2022-04-04 22:05:51,808 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:06:06,800 INFO Computing data fidelity for 114564 rotations and 2048 images at 11%
2022-04-04 22:06:07,667 DEBUG Corresponding type is already real float64.
2022-04-04 22:06:07,667 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:06:22,662 INFO Computing data fidelity for 114564 rotations and 2048 images at 12%
2022-04-04 22:06:23,525 DEBUG Corresponding type is already real float64.
2022-04-04 22:06:23,525 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:06:38,675 INFO Computing data fidelity for 114564 rotations and 2048 images at 13%
2022-04-04 22:06:39,548 DEBUG Corresponding type is already real float64.
2022-04-04 22:06:39,548 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:06:54,172 INFO Computing data fidelity for 114564 rotations and 2048 images at 14%
2022-04-04 22:06:55,028 DEBUG Corresponding type is already real float64.
2022-04-04 22:06:55,028 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:07:09,831 INFO Computing data fidelity for 114564 rotations and 2048 images at 15%
2022-04-04 22:07:10,726 DEBUG Corresponding type is already real float64.
2022-04-04 22:07:10,726 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:07:25,421 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2022-04-04 22:07:26,330 DEBUG Corresponding type is already real float64.
2022-04-04 22:07:26,330 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:07:41,130 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2022-04-04 22:07:42,027 DEBUG Corresponding type is already real float64.
2022-04-04 22:07:42,028 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:07:56,870 INFO Computing data fidelity for 114564 rotations and 2048 images at 17%
2022-04-04 22:07:57,886 DEBUG Corresponding type is already real float64.
2022-04-04 22:07:57,886 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:08:12,587 INFO Computing data fidelity for 114564 rotations and 2048 images at 18%
2022-04-04 22:08:13,583 DEBUG Corresponding type is already real float64.
2022-04-04 22:08:13,583 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:08:28,490 INFO Computing data fidelity for 114564 rotations and 2048 images at 19%
2022-04-04 22:08:29,543 DEBUG Corresponding type is already real float64.
2022-04-04 22:08:29,543 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:08:44,156 INFO Computing data fidelity for 114564 rotations and 2048 images at 20%
2022-04-04 22:08:45,209 DEBUG Corresponding type is already real float64.
2022-04-04 22:08:45,210 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:08:59,884 INFO Computing data fidelity for 114564 rotations and 2048 images at 21%
2022-04-04 22:09:01,113 DEBUG Corresponding type is already real float64.
2022-04-04 22:09:01,113 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:09:15,716 INFO Computing data fidelity for 114564 rotations and 2048 images at 22%
2022-04-04 22:09:16,934 DEBUG Corresponding type is already real float64.
2022-04-04 22:09:16,934 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:09:31,502 INFO Computing data fidelity for 114564 rotations and 2048 images at 23%
2022-04-04 22:09:32,759 DEBUG Corresponding type is already real float64.
2022-04-04 22:09:32,759 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:09:47,481 INFO Computing data fidelity for 114564 rotations and 2048 images at 24%
2022-04-04 22:09:48,747 DEBUG Corresponding type is already real float64.
2022-04-04 22:09:48,747 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:10:03,438 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2022-04-04 22:10:04,722 DEBUG Corresponding type is already real float64.
2022-04-04 22:10:04,722 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:10:19,490 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2022-04-04 22:10:20,754 DEBUG Corresponding type is already real float64.
2022-04-04 22:10:20,755 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:10:35,428 INFO Computing data fidelity for 114564 rotations and 2048 images at 26%
2022-04-04 22:10:36,615 DEBUG Corresponding type is already real float64.
2022-04-04 22:10:36,615 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:10:51,347 INFO Computing data fidelity for 114564 rotations and 2048 images at 27%
2022-04-04 22:10:52,611 DEBUG Corresponding type is already real float64.
2022-04-04 22:10:52,611 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:11:07,342 INFO Computing data fidelity for 114564 rotations and 2048 images at 28%
2022-04-04 22:11:08,594 DEBUG Corresponding type is already real float64.
2022-04-04 22:11:08,594 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:11:23,280 INFO Computing data fidelity for 114564 rotations and 2048 images at 29%
2022-04-04 22:11:24,568 DEBUG Corresponding type is already real float64.
2022-04-04 22:11:24,568 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:11:39,497 INFO Computing data fidelity for 114564 rotations and 2048 images at 30%
2022-04-04 22:11:40,761 DEBUG Corresponding type is already real float64.
2022-04-04 22:11:40,761 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:11:55,288 INFO Computing data fidelity for 114564 rotations and 2048 images at 31%
2022-04-04 22:11:56,510 DEBUG Corresponding type is already real float64.
2022-04-04 22:11:56,510 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:12:11,142 INFO Computing data fidelity for 114564 rotations and 2048 images at 32%
2022-04-04 22:12:12,387 DEBUG Corresponding type is already real float64.
2022-04-04 22:12:12,387 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:12:27,011 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2022-04-04 22:12:28,275 DEBUG Corresponding type is already real float64.
2022-04-04 22:12:28,275 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:12:43,255 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2022-04-04 22:12:44,523 DEBUG Corresponding type is already real float64.
2022-04-04 22:12:44,523 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:12:59,255 INFO Computing data fidelity for 114564 rotations and 2048 images at 34%
2022-04-04 22:13:00,517 DEBUG Corresponding type is already real float64.
2022-04-04 22:13:00,517 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:13:15,095 INFO Computing data fidelity for 114564 rotations and 2048 images at 35%
2022-04-04 22:13:16,354 DEBUG Corresponding type is already real float64.
2022-04-04 22:13:16,354 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:13:30,997 INFO Computing data fidelity for 114564 rotations and 2048 images at 36%
2022-04-04 22:13:32,205 DEBUG Corresponding type is already real float64.
2022-04-04 22:13:32,205 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:13:46,988 INFO Computing data fidelity for 114564 rotations and 2048 images at 37%
2022-04-04 22:13:48,155 DEBUG Corresponding type is already real float64.
2022-04-04 22:13:48,155 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:14:02,821 INFO Computing data fidelity for 114564 rotations and 2048 images at 38%
2022-04-04 22:14:03,983 DEBUG Corresponding type is already real float64.
2022-04-04 22:14:03,983 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:14:18,625 INFO Computing data fidelity for 114564 rotations and 2048 images at 39%
2022-04-04 22:14:19,775 DEBUG Corresponding type is already real float64.
2022-04-04 22:14:19,776 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:14:34,555 INFO Computing data fidelity for 114564 rotations and 2048 images at 40%
2022-04-04 22:14:35,726 DEBUG Corresponding type is already real float64.
2022-04-04 22:14:35,726 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:14:50,844 INFO Computing data fidelity for 114564 rotations and 2048 images at 41%
2022-04-04 22:14:51,934 DEBUG Corresponding type is already real float64.
2022-04-04 22:14:51,934 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:15:06,626 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2022-04-04 22:15:07,631 DEBUG Corresponding type is already real float64.
2022-04-04 22:15:07,631 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:15:21,859 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2022-04-04 22:15:22,863 DEBUG Corresponding type is already real float64.
2022-04-04 22:15:22,863 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:15:37,093 INFO Computing data fidelity for 114564 rotations and 2048 images at 43%
2022-04-04 22:15:38,136 DEBUG Corresponding type is already real float64.
2022-04-04 22:15:38,136 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:15:52,360 INFO Computing data fidelity for 114564 rotations and 2048 images at 44%
2022-04-04 22:15:53,398 DEBUG Corresponding type is already real float64.
2022-04-04 22:15:53,398 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:16:07,722 INFO Computing data fidelity for 114564 rotations and 2048 images at 45%
2022-04-04 22:16:08,759 DEBUG Corresponding type is already real float64.
2022-04-04 22:16:08,760 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:16:23,099 INFO Computing data fidelity for 114564 rotations and 2048 images at 46%
2022-04-04 22:16:24,113 DEBUG Corresponding type is already real float64.
2022-04-04 22:16:24,113 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:16:38,405 INFO Computing data fidelity for 114564 rotations and 2048 images at 47%
2022-04-04 22:16:39,506 DEBUG Corresponding type is already real float64.
2022-04-04 22:16:39,506 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:16:53,934 INFO Computing data fidelity for 114564 rotations and 2048 images at 48%
2022-04-04 22:16:54,988 DEBUG Corresponding type is already real float64.
2022-04-04 22:16:54,989 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:17:09,355 INFO Computing data fidelity for 114564 rotations and 2048 images at 49%
2022-04-04 22:17:10,396 DEBUG Corresponding type is already real float64.
2022-04-04 22:17:10,396 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:17:24,832 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2022-04-04 22:17:26,045 DEBUG Corresponding type is already real float64.
2022-04-04 22:17:26,045 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:17:40,748 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2022-04-04 22:17:42,032 DEBUG Corresponding type is already real float64.
2022-04-04 22:17:42,033 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:17:56,458 INFO Computing data fidelity for 114564 rotations and 2048 images at 51%
2022-04-04 22:17:57,462 DEBUG Corresponding type is already real float64.
2022-04-04 22:17:57,463 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:18:11,786 INFO Computing data fidelity for 114564 rotations and 2048 images at 52%
2022-04-04 22:18:12,786 DEBUG Corresponding type is already real float64.
2022-04-04 22:18:12,786 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:18:27,093 INFO Computing data fidelity for 114564 rotations and 2048 images at 53%
2022-04-04 22:18:28,099 DEBUG Corresponding type is already real float64.
2022-04-04 22:18:28,100 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:18:42,434 INFO Computing data fidelity for 114564 rotations and 2048 images at 54%
2022-04-04 22:18:43,445 DEBUG Corresponding type is already real float64.
2022-04-04 22:18:43,446 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:18:57,774 INFO Computing data fidelity for 114564 rotations and 2048 images at 55%
2022-04-04 22:18:58,826 DEBUG Corresponding type is already real float64.
2022-04-04 22:18:58,827 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:19:13,170 INFO Computing data fidelity for 114564 rotations and 2048 images at 56%
2022-04-04 22:19:14,179 DEBUG Corresponding type is already real float64.
2022-04-04 22:19:14,180 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:19:28,565 INFO Computing data fidelity for 114564 rotations and 2048 images at 57%
2022-04-04 22:19:29,567 DEBUG Corresponding type is already real float64.
2022-04-04 22:19:29,568 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:19:43,959 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2022-04-04 22:19:44,955 DEBUG Corresponding type is already real float64.
2022-04-04 22:19:44,955 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:19:59,253 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2022-04-04 22:20:00,239 DEBUG Corresponding type is already real float64.
2022-04-04 22:20:00,240 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:20:14,576 INFO Computing data fidelity for 114564 rotations and 2048 images at 59%
2022-04-04 22:20:15,565 DEBUG Corresponding type is already real float64.
2022-04-04 22:20:15,566 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:20:30,064 INFO Computing data fidelity for 114564 rotations and 2048 images at 60%
2022-04-04 22:20:31,087 DEBUG Corresponding type is already real float64.
2022-04-04 22:20:31,087 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:20:45,477 INFO Computing data fidelity for 114564 rotations and 2048 images at 61%
2022-04-04 22:20:46,444 DEBUG Corresponding type is already real float64.
2022-04-04 22:20:46,444 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:21:00,874 INFO Computing data fidelity for 114564 rotations and 2048 images at 62%
2022-04-04 22:21:01,874 DEBUG Corresponding type is already real float64.
2022-04-04 22:21:01,875 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:21:16,286 INFO Computing data fidelity for 114564 rotations and 2048 images at 63%
2022-04-04 22:21:17,363 DEBUG Corresponding type is already real float64.
2022-04-04 22:21:17,365 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:21:31,804 INFO Computing data fidelity for 114564 rotations and 2048 images at 64%
2022-04-04 22:21:32,876 DEBUG Corresponding type is already real float64.
2022-04-04 22:21:32,876 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:21:47,158 INFO Computing data fidelity for 114564 rotations and 2048 images at 65%
2022-04-04 22:21:48,088 DEBUG Corresponding type is already real float64.
2022-04-04 22:21:48,088 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:22:02,060 INFO Computing data fidelity for 114564 rotations and 2048 images at 66%
2022-04-04 22:22:03,025 DEBUG Corresponding type is already real float64.
2022-04-04 22:22:03,025 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:22:16,951 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2022-04-04 22:22:17,933 DEBUG Corresponding type is already real float64.
2022-04-04 22:22:17,934 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:22:31,867 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2022-04-04 22:22:32,830 DEBUG Corresponding type is already real float64.
2022-04-04 22:22:32,830 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:22:46,843 INFO Computing data fidelity for 114564 rotations and 2048 images at 68%
2022-04-04 22:22:47,837 DEBUG Corresponding type is already real float64.
2022-04-04 22:22:47,837 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:23:01,879 INFO Computing data fidelity for 114564 rotations and 2048 images at 69%
2022-04-04 22:23:02,823 DEBUG Corresponding type is already real float64.
2022-04-04 22:23:02,823 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:23:16,764 INFO Computing data fidelity for 114564 rotations and 2048 images at 70%
2022-04-04 22:23:17,708 DEBUG Corresponding type is already real float64.
2022-04-04 22:23:17,708 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:23:32,139 INFO Computing data fidelity for 114564 rotations and 2048 images at 71%
2022-04-04 22:23:33,067 DEBUG Corresponding type is already real float64.
2022-04-04 22:23:33,068 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:23:47,061 INFO Computing data fidelity for 114564 rotations and 2048 images at 72%
2022-04-04 22:23:48,108 DEBUG Corresponding type is already real float64.
2022-04-04 22:23:48,108 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:24:02,031 INFO Computing data fidelity for 114564 rotations and 2048 images at 73%
2022-04-04 22:24:02,979 DEBUG Corresponding type is already real float64.
2022-04-04 22:24:02,979 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:24:17,028 INFO Computing data fidelity for 114564 rotations and 2048 images at 74%
2022-04-04 22:24:17,987 DEBUG Corresponding type is already real float64.
2022-04-04 22:24:17,987 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:24:31,956 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2022-04-04 22:24:32,926 DEBUG Corresponding type is already real float64.
2022-04-04 22:24:32,926 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:24:46,884 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2022-04-04 22:24:47,884 DEBUG Corresponding type is already real float64.
2022-04-04 22:24:47,885 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:25:01,843 INFO Computing data fidelity for 114564 rotations and 2048 images at 76%
2022-04-04 22:25:02,836 DEBUG Corresponding type is already real float64.
2022-04-04 22:25:02,836 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:25:16,855 INFO Computing data fidelity for 114564 rotations and 2048 images at 77%
2022-04-04 22:25:17,849 DEBUG Corresponding type is already real float64.
2022-04-04 22:25:17,849 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:25:31,848 INFO Computing data fidelity for 114564 rotations and 2048 images at 78%
2022-04-04 22:25:32,855 DEBUG Corresponding type is already real float64.
2022-04-04 22:25:32,855 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:25:47,500 INFO Computing data fidelity for 114564 rotations and 2048 images at 79%
2022-04-04 22:25:48,474 DEBUG Corresponding type is already real float64.
2022-04-04 22:25:48,474 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:26:02,478 INFO Computing data fidelity for 114564 rotations and 2048 images at 80%
2022-04-04 22:26:03,445 DEBUG Corresponding type is already real float64.
2022-04-04 22:26:03,445 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:26:17,433 INFO Computing data fidelity for 114564 rotations and 2048 images at 81%
2022-04-04 22:26:18,406 DEBUG Corresponding type is already real float64.
2022-04-04 22:26:18,407 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:26:32,584 INFO Computing data fidelity for 114564 rotations and 2048 images at 82%
2022-04-04 22:26:33,587 DEBUG Corresponding type is already real float64.
2022-04-04 22:26:33,588 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:26:47,647 INFO Computing data fidelity for 114564 rotations and 2048 images at 83%
2022-04-04 22:26:48,631 DEBUG Corresponding type is already real float64.
2022-04-04 22:26:48,632 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:27:02,693 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2022-04-04 22:27:03,656 DEBUG Corresponding type is already real float64.
2022-04-04 22:27:03,656 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:27:17,647 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2022-04-04 22:27:18,629 DEBUG Corresponding type is already real float64.
2022-04-04 22:27:18,630 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:27:32,699 INFO Computing data fidelity for 114564 rotations and 2048 images at 85%
2022-04-04 22:27:33,641 DEBUG Corresponding type is already real float64.
2022-04-04 22:27:33,641 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:27:47,718 INFO Computing data fidelity for 114564 rotations and 2048 images at 86%
2022-04-04 22:27:48,683 DEBUG Corresponding type is already real float64.
2022-04-04 22:27:48,683 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:28:02,849 INFO Computing data fidelity for 114564 rotations and 2048 images at 87%
2022-04-04 22:28:03,806 DEBUG Corresponding type is already real float64.
2022-04-04 22:28:03,806 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:28:18,249 INFO Computing data fidelity for 114564 rotations and 2048 images at 88%
2022-04-04 22:28:19,233 DEBUG Corresponding type is already real float64.
2022-04-04 22:28:19,233 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:28:33,611 INFO Computing data fidelity for 114564 rotations and 2048 images at 89%
2022-04-04 22:28:34,580 DEBUG Corresponding type is already real float64.
2022-04-04 22:28:34,581 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:28:48,657 INFO Computing data fidelity for 114564 rotations and 2048 images at 90%
2022-04-04 22:28:49,630 DEBUG Corresponding type is already real float64.
2022-04-04 22:28:49,630 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:29:03,613 INFO Computing data fidelity for 114564 rotations and 2048 images at 91%
2022-04-04 22:29:04,624 DEBUG Corresponding type is already real float64.
2022-04-04 22:29:04,624 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:29:18,741 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2022-04-04 22:29:19,746 DEBUG Corresponding type is already real float64.
2022-04-04 22:29:19,746 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:29:33,942 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2022-04-04 22:29:34,982 DEBUG Corresponding type is already real float64.
2022-04-04 22:29:34,982 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:29:49,186 INFO Computing data fidelity for 114564 rotations and 2048 images at 93%
2022-04-04 22:29:50,192 DEBUG Corresponding type is already real float64.
2022-04-04 22:29:50,192 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:30:04,226 INFO Computing data fidelity for 114564 rotations and 2048 images at 94%
2022-04-04 22:30:05,208 DEBUG Corresponding type is already real float64.
2022-04-04 22:30:05,209 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:30:19,249 INFO Computing data fidelity for 114564 rotations and 2048 images at 95%
2022-04-04 22:30:20,222 DEBUG Corresponding type is already real float64.
2022-04-04 22:30:20,222 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:30:34,326 INFO Computing data fidelity for 114564 rotations and 2048 images at 96%
2022-04-04 22:30:35,282 DEBUG Corresponding type is already real float64.
2022-04-04 22:30:35,282 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:30:49,310 INFO Computing data fidelity for 114564 rotations and 2048 images at 97%
2022-04-04 22:30:50,289 DEBUG Corresponding type is already real float64.
2022-04-04 22:30:50,289 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:31:04,336 INFO Computing data fidelity for 114564 rotations and 2048 images at 98%
2022-04-04 22:31:05,309 DEBUG Corresponding type is already real float64.
2022-04-04 22:31:05,309 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:31:19,335 INFO Computing data fidelity for 114564 rotations and 2048 images at 99%
2022-04-04 22:31:20,071 DEBUG Corresponding type is already real float64.
2022-04-04 22:31:20,071 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:31:31,968 INFO Computing data fidelity for 114564 rotations and 2048 images at 100%
2022-04-04 22:31:36,042 INFO Do lambda update step
2022-04-04 22:32:00,665 INFO Do rots update step
2022-04-04 22:32:01,520 INFO Projecting 2048 vectors onto 114564-simplex at 2%
2022-04-04 22:32:02,172 INFO Projecting 2048 vectors onto 114564-simplex at 4%
2022-04-04 22:32:02,812 INFO Projecting 2048 vectors onto 114564-simplex at 7%
2022-04-04 22:32:03,648 INFO Projecting 2048 vectors onto 114564-simplex at 9%
2022-04-04 22:32:04,528 INFO Projecting 2048 vectors onto 114564-simplex at 12%
2022-04-04 22:32:05,347 INFO Projecting 2048 vectors onto 114564-simplex at 14%
2022-04-04 22:32:06,008 INFO Projecting 2048 vectors onto 114564-simplex at 17%
2022-04-04 22:32:06,653 INFO Projecting 2048 vectors onto 114564-simplex at 19%
2022-04-04 22:32:07,294 INFO Projecting 2048 vectors onto 114564-simplex at 21%
2022-04-04 22:32:07,932 INFO Projecting 2048 vectors onto 114564-simplex at 24%
2022-04-04 22:32:08,753 INFO Projecting 2048 vectors onto 114564-simplex at 26%
2022-04-04 22:32:09,404 INFO Projecting 2048 vectors onto 114564-simplex at 29%
2022-04-04 22:32:10,059 INFO Projecting 2048 vectors onto 114564-simplex at 31%
2022-04-04 22:32:10,693 INFO Projecting 2048 vectors onto 114564-simplex at 34%
2022-04-04 22:32:11,342 INFO Projecting 2048 vectors onto 114564-simplex at 36%
2022-04-04 22:32:11,985 INFO Projecting 2048 vectors onto 114564-simplex at 39%
2022-04-04 22:32:12,625 INFO Projecting 2048 vectors onto 114564-simplex at 41%
2022-04-04 22:32:13,258 INFO Projecting 2048 vectors onto 114564-simplex at 43%
2022-04-04 22:32:13,900 INFO Projecting 2048 vectors onto 114564-simplex at 46%
2022-04-04 22:32:14,540 INFO Projecting 2048 vectors onto 114564-simplex at 48%
2022-04-04 22:32:15,358 INFO Projecting 2048 vectors onto 114564-simplex at 51%
2022-04-04 22:32:16,009 INFO Projecting 2048 vectors onto 114564-simplex at 53%
2022-04-04 22:32:16,678 INFO Projecting 2048 vectors onto 114564-simplex at 56%
2022-04-04 22:32:17,317 INFO Projecting 2048 vectors onto 114564-simplex at 58%
2022-04-04 22:32:18,161 INFO Projecting 2048 vectors onto 114564-simplex at 61%
2022-04-04 22:32:19,030 INFO Projecting 2048 vectors onto 114564-simplex at 63%
2022-04-04 22:32:19,869 INFO Projecting 2048 vectors onto 114564-simplex at 65%
2022-04-04 22:32:20,554 INFO Projecting 2048 vectors onto 114564-simplex at 68%
2022-04-04 22:32:21,205 INFO Projecting 2048 vectors onto 114564-simplex at 70%
2022-04-04 22:32:21,861 INFO Projecting 2048 vectors onto 114564-simplex at 73%
2022-04-04 22:32:22,693 INFO Projecting 2048 vectors onto 114564-simplex at 75%
2022-04-04 22:32:23,365 INFO Projecting 2048 vectors onto 114564-simplex at 78%
2022-04-04 22:32:24,040 INFO Projecting 2048 vectors onto 114564-simplex at 80%
2022-04-04 22:32:24,736 INFO Projecting 2048 vectors onto 114564-simplex at 83%
2022-04-04 22:32:25,408 INFO Projecting 2048 vectors onto 114564-simplex at 85%
2022-04-04 22:32:26,078 INFO Projecting 2048 vectors onto 114564-simplex at 87%
2022-04-04 22:32:26,771 INFO Projecting 2048 vectors onto 114564-simplex at 90%
2022-04-04 22:32:27,449 INFO Projecting 2048 vectors onto 114564-simplex at 92%
2022-04-04 22:32:28,105 INFO Projecting 2048 vectors onto 114564-simplex at 95%
2022-04-04 22:32:28,769 INFO Projecting 2048 vectors onto 114564-simplex at 97%
2022-04-04 22:32:29,422 INFO Projecting 2048 vectors onto 114564-simplex at 100%
2022-04-04 22:32:30,769 INFO Computing 50 means of 581 points in at most 20 steps...
2022-04-04 22:32:30,855 INFO Computing 2048 means at 2%
2022-04-04 22:32:30,942 INFO Computing 50 means of 577 points in at most 20 steps...
2022-04-04 22:32:31,006 INFO Computing 2048 means at 4%
2022-04-04 22:32:31,087 INFO Computing 50 means of 600 points in at most 20 steps...
2022-04-04 22:32:31,158 INFO Computing 2048 means at 7%
2022-04-04 22:32:31,238 INFO Computing 50 means of 544 points in at most 20 steps...
2022-04-04 22:32:31,296 INFO Computing 2048 means at 9%
2022-04-04 22:32:31,373 INFO Computing 50 means of 583 points in at most 20 steps...
2022-04-04 22:32:31,436 INFO Computing 2048 means at 12%
2022-04-04 22:32:31,511 INFO Computing 50 means of 587 points in at most 20 steps...
2022-04-04 22:32:31,575 INFO Computing 2048 means at 14%
2022-04-04 22:32:31,653 INFO Computing 50 means of 595 points in at most 20 steps...
2022-04-04 22:32:31,716 INFO Computing 2048 means at 17%
2022-04-04 22:32:31,792 INFO Computing 50 means of 602 points in at most 20 steps...
2022-04-04 22:32:31,861 INFO Computing 2048 means at 19%
2022-04-04 22:32:31,937 INFO Computing 50 means of 599 points in at most 20 steps...
2022-04-04 22:32:32,002 INFO Computing 2048 means at 21%
2022-04-04 22:32:32,078 INFO Computing 50 means of 584 points in at most 20 steps...
2022-04-04 22:32:32,139 INFO Computing 2048 means at 24%
2022-04-04 22:32:32,230 INFO Computing 50 means of 569 points in at most 20 steps...
2022-04-04 22:32:32,288 INFO Computing 2048 means at 26%
2022-04-04 22:32:32,362 INFO Computing 50 means of 579 points in at most 20 steps...
2022-04-04 22:32:32,424 INFO Computing 2048 means at 29%
2022-04-04 22:32:32,503 INFO Computing 50 means of 588 points in at most 20 steps...
2022-04-04 22:32:32,582 INFO Computing 2048 means at 31%
2022-04-04 22:32:32,662 INFO Computing 50 means of 583 points in at most 20 steps...
2022-04-04 22:32:32,744 INFO Computing 2048 means at 34%
2022-04-04 22:32:32,833 INFO Computing 50 means of 566 points in at most 20 steps...
2022-04-04 22:32:32,924 INFO Computing 2048 means at 36%
2022-04-04 22:32:33,031 INFO Computing 50 means of 571 points in at most 20 steps...
2022-04-04 22:32:33,153 INFO Computing 2048 means at 39%
2022-04-04 22:32:33,231 INFO Computing 50 means of 586 points in at most 20 steps...
2022-04-04 22:32:33,344 INFO Computing 2048 means at 41%
2022-04-04 22:32:33,428 INFO Computing 50 means of 591 points in at most 20 steps...
2022-04-04 22:32:33,538 INFO Computing 2048 means at 43%
2022-04-04 22:32:33,623 INFO Computing 50 means of 593 points in at most 20 steps...
2022-04-04 22:32:33,739 INFO Computing 2048 means at 46%
2022-04-04 22:32:33,824 INFO Computing 50 means of 589 points in at most 20 steps...
2022-04-04 22:32:33,931 INFO Computing 2048 means at 48%
2022-04-04 22:32:34,037 INFO Computing 50 means of 594 points in at most 20 steps...
2022-04-04 22:32:34,149 INFO Computing 2048 means at 51%
2022-04-04 22:32:34,230 INFO Computing 50 means of 575 points in at most 20 steps...
2022-04-04 22:32:34,340 INFO Computing 2048 means at 53%
2022-04-04 22:32:34,424 INFO Computing 50 means of 594 points in at most 20 steps...
2022-04-04 22:32:34,540 INFO Computing 2048 means at 56%
2022-04-04 22:32:34,629 INFO Computing 50 means of 587 points in at most 20 steps...
2022-04-04 22:32:34,738 INFO Computing 2048 means at 58%
2022-04-04 22:32:34,822 INFO Computing 50 means of 585 points in at most 20 steps...
2022-04-04 22:32:34,901 INFO Computing 2048 means at 61%
2022-04-04 22:32:34,974 INFO Computing 50 means of 593 points in at most 20 steps...
2022-04-04 22:32:35,056 INFO Computing 2048 means at 63%
2022-04-04 22:32:35,133 INFO Computing 50 means of 561 points in at most 20 steps...
2022-04-04 22:32:35,194 INFO Computing 2048 means at 65%
2022-04-04 22:32:35,270 INFO Computing 50 means of 592 points in at most 20 steps...
2022-04-04 22:32:35,355 INFO Computing 2048 means at 68%
2022-04-04 22:32:35,433 INFO Computing 50 means of 578 points in at most 20 steps...
2022-04-04 22:32:35,495 INFO Computing 2048 means at 70%
2022-04-04 22:32:35,581 INFO Computing 50 means of 587 points in at most 20 steps...
2022-04-04 22:32:35,645 INFO Computing 2048 means at 73%
2022-04-04 22:32:35,740 INFO Computing 50 means of 596 points in at most 20 steps...
2022-04-04 22:32:35,804 INFO Computing 2048 means at 75%
2022-04-04 22:32:35,884 INFO Computing 50 means of 602 points in at most 20 steps...
2022-04-04 22:32:35,946 INFO Computing 2048 means at 78%
2022-04-04 22:32:36,026 INFO Computing 50 means of 570 points in at most 20 steps...
2022-04-04 22:32:36,085 INFO Computing 2048 means at 80%
2022-04-04 22:32:36,163 INFO Computing 50 means of 606 points in at most 20 steps...
2022-04-04 22:32:36,230 INFO Computing 2048 means at 83%
2022-04-04 22:32:36,309 INFO Computing 50 means of 587 points in at most 20 steps...
2022-04-04 22:32:36,371 INFO Computing 2048 means at 85%
2022-04-04 22:32:36,449 INFO Computing 50 means of 589 points in at most 20 steps...
2022-04-04 22:32:36,512 INFO Computing 2048 means at 87%
2022-04-04 22:32:36,591 INFO Computing 50 means of 591 points in at most 20 steps...
2022-04-04 22:32:36,653 INFO Computing 2048 means at 90%
2022-04-04 22:32:36,731 INFO Computing 50 means of 579 points in at most 20 steps...
2022-04-04 22:32:36,795 INFO Computing 2048 means at 92%
2022-04-04 22:32:36,874 INFO Computing 50 means of 570 points in at most 20 steps...
2022-04-04 22:32:36,936 INFO Computing 2048 means at 95%
2022-04-04 22:32:37,015 INFO Computing 50 means of 581 points in at most 20 steps...
2022-04-04 22:32:37,078 INFO Computing 2048 means at 97%
2022-04-04 22:32:37,158 INFO Computing 48 means of 561 points in at most 20 steps...
2022-04-04 22:32:37,215 INFO Computing 2048 means at 100%
2022-04-04 22:32:41,541 INFO Do vol update step
2022-04-04 22:32:41,543 INFO Compute adjoint forward mapping on the images
2022-04-04 22:32:43,206 DEBUG Corresponding type is already complex complex128.
2022-04-04 22:32:45,796 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2022-04-04 22:32:45,812 INFO Computing adjoint forward mappings from 2048 rotations at 50%
2022-04-04 22:32:47,336 DEBUG Corresponding type is already complex complex128.
2022-04-04 22:32:50,877 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2022-04-04 22:32:50,897 INFO Computing adjoint forward mappings from 2048 rotations at 100%
2022-04-04 22:32:52,008 DEBUG Corresponding type is already real float64.
2022-04-04 22:32:52,008 DEBUG anufft passed real_type for signal, converting
2022-04-04 22:32:58,663 INFO Computing kernel from 2048 rotations at 50%
2022-04-04 22:32:59,532 DEBUG Corresponding type is already real float64.
2022-04-04 22:32:59,532 DEBUG anufft passed real_type for signal, converting
2022-04-04 22:33:06,232 INFO Computing kernel from 2048 rotations at 100%
2022-04-04 22:33:06,233 INFO Computing non-centered Fourier Transform
2022-04-04 22:33:06,407 INFO Add ramp filter regularisation
2022-04-04 22:33:12,560 INFO Update data_discrepancies
2022-04-04 22:33:12,562 INFO Computing \|Ag.u - f_i\|^2
2022-04-04 22:33:13,391 DEBUG Corresponding type is already real float64.
2022-04-04 22:33:13,391 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:33:27,635 INFO Computing data fidelity for 114564 rotations and 2048 images at 0%
2022-04-04 22:33:28,380 DEBUG Corresponding type is already real float64.
2022-04-04 22:33:28,380 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:33:42,607 INFO Computing data fidelity for 114564 rotations and 2048 images at 1%
2022-04-04 22:33:43,357 DEBUG Corresponding type is already real float64.
2022-04-04 22:33:43,357 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:33:57,561 INFO Computing data fidelity for 114564 rotations and 2048 images at 2%
2022-04-04 22:33:58,327 DEBUG Corresponding type is already real float64.
2022-04-04 22:33:58,327 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:34:12,440 INFO Computing data fidelity for 114564 rotations and 2048 images at 3%
2022-04-04 22:34:13,196 DEBUG Corresponding type is already real float64.
2022-04-04 22:34:13,196 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:34:27,261 INFO Computing data fidelity for 114564 rotations and 2048 images at 4%
2022-04-04 22:34:28,014 DEBUG Corresponding type is already real float64.
2022-04-04 22:34:28,014 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:34:42,108 INFO Computing data fidelity for 114564 rotations and 2048 images at 5%
2022-04-04 22:34:42,859 DEBUG Corresponding type is already real float64.
2022-04-04 22:34:42,859 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:34:56,922 INFO Computing data fidelity for 114564 rotations and 2048 images at 6%
2022-04-04 22:34:57,669 DEBUG Corresponding type is already real float64.
2022-04-04 22:34:57,669 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:35:11,716 INFO Computing data fidelity for 114564 rotations and 2048 images at 7%
2022-04-04 22:35:12,463 DEBUG Corresponding type is already real float64.
2022-04-04 22:35:12,463 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:35:26,524 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2022-04-04 22:35:27,291 DEBUG Corresponding type is already real float64.
2022-04-04 22:35:27,292 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:35:41,885 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2022-04-04 22:35:42,648 DEBUG Corresponding type is already real float64.
2022-04-04 22:35:42,648 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:35:56,772 INFO Computing data fidelity for 114564 rotations and 2048 images at 9%
2022-04-04 22:35:57,540 DEBUG Corresponding type is already real float64.
2022-04-04 22:35:57,540 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:36:11,649 INFO Computing data fidelity for 114564 rotations and 2048 images at 10%
2022-04-04 22:36:12,412 DEBUG Corresponding type is already real float64.
2022-04-04 22:36:12,412 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:36:26,470 INFO Computing data fidelity for 114564 rotations and 2048 images at 11%
2022-04-04 22:36:27,230 DEBUG Corresponding type is already real float64.
2022-04-04 22:36:27,231 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:36:41,330 INFO Computing data fidelity for 114564 rotations and 2048 images at 12%
2022-04-04 22:36:42,097 DEBUG Corresponding type is already real float64.
2022-04-04 22:36:42,097 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:36:56,279 INFO Computing data fidelity for 114564 rotations and 2048 images at 13%
2022-04-04 22:36:57,039 DEBUG Corresponding type is already real float64.
2022-04-04 22:36:57,040 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:37:11,108 INFO Computing data fidelity for 114564 rotations and 2048 images at 14%
2022-04-04 22:37:11,874 DEBUG Corresponding type is already real float64.
2022-04-04 22:37:11,874 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:37:25,931 INFO Computing data fidelity for 114564 rotations and 2048 images at 15%
2022-04-04 22:37:26,688 DEBUG Corresponding type is already real float64.
2022-04-04 22:37:26,688 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:37:40,821 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2022-04-04 22:37:41,589 DEBUG Corresponding type is already real float64.
2022-04-04 22:37:41,589 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:37:55,915 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2022-04-04 22:37:56,677 DEBUG Corresponding type is already real float64.
2022-04-04 22:37:56,677 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:38:11,307 INFO Computing data fidelity for 114564 rotations and 2048 images at 17%
2022-04-04 22:38:12,076 DEBUG Corresponding type is already real float64.
2022-04-04 22:38:12,076 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:38:26,327 INFO Computing data fidelity for 114564 rotations and 2048 images at 18%
2022-04-04 22:38:27,128 DEBUG Corresponding type is already real float64.
2022-04-04 22:38:27,128 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:38:41,689 INFO Computing data fidelity for 114564 rotations and 2048 images at 19%
2022-04-04 22:38:42,477 DEBUG Corresponding type is already real float64.
2022-04-04 22:38:42,477 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:38:56,706 INFO Computing data fidelity for 114564 rotations and 2048 images at 20%
2022-04-04 22:38:57,499 DEBUG Corresponding type is already real float64.
2022-04-04 22:38:57,499 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:39:11,614 INFO Computing data fidelity for 114564 rotations and 2048 images at 21%
2022-04-04 22:39:12,435 DEBUG Corresponding type is already real float64.
2022-04-04 22:39:12,436 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:39:26,585 INFO Computing data fidelity for 114564 rotations and 2048 images at 22%
2022-04-04 22:39:27,387 DEBUG Corresponding type is already real float64.
2022-04-04 22:39:27,387 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:39:41,511 INFO Computing data fidelity for 114564 rotations and 2048 images at 23%
2022-04-04 22:39:42,320 DEBUG Corresponding type is already real float64.
2022-04-04 22:39:42,320 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:39:56,390 INFO Computing data fidelity for 114564 rotations and 2048 images at 24%
2022-04-04 22:39:57,215 DEBUG Corresponding type is already real float64.
2022-04-04 22:39:57,216 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:40:11,220 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2022-04-04 22:40:12,057 DEBUG Corresponding type is already real float64.
2022-04-04 22:40:12,057 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:40:26,063 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2022-04-04 22:40:26,914 DEBUG Corresponding type is already real float64.
2022-04-04 22:40:26,914 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:40:41,035 INFO Computing data fidelity for 114564 rotations and 2048 images at 26%
2022-04-04 22:40:41,888 DEBUG Corresponding type is already real float64.
2022-04-04 22:40:41,888 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:40:56,027 INFO Computing data fidelity for 114564 rotations and 2048 images at 27%
2022-04-04 22:40:56,904 DEBUG Corresponding type is already real float64.
2022-04-04 22:40:56,904 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:41:10,915 INFO Computing data fidelity for 114564 rotations and 2048 images at 28%
2022-04-04 22:41:11,810 DEBUG Corresponding type is already real float64.
2022-04-04 22:41:11,810 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:41:25,995 INFO Computing data fidelity for 114564 rotations and 2048 images at 29%
2022-04-04 22:41:26,960 DEBUG Corresponding type is already real float64.
2022-04-04 22:41:26,961 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:41:41,052 INFO Computing data fidelity for 114564 rotations and 2048 images at 30%
2022-04-04 22:41:42,016 DEBUG Corresponding type is already real float64.
2022-04-04 22:41:42,016 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:41:55,991 INFO Computing data fidelity for 114564 rotations and 2048 images at 31%
2022-04-04 22:41:56,967 DEBUG Corresponding type is already real float64.
2022-04-04 22:41:56,967 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:42:10,976 INFO Computing data fidelity for 114564 rotations and 2048 images at 32%
2022-04-04 22:42:11,980 DEBUG Corresponding type is already real float64.
2022-04-04 22:42:11,980 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:42:26,045 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2022-04-04 22:42:27,018 DEBUG Corresponding type is already real float64.
2022-04-04 22:42:27,018 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:42:41,108 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2022-04-04 22:42:42,070 DEBUG Corresponding type is already real float64.
2022-04-04 22:42:42,071 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:42:56,116 INFO Computing data fidelity for 114564 rotations and 2048 images at 34%
2022-04-04 22:42:57,085 DEBUG Corresponding type is already real float64.
2022-04-04 22:42:57,085 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:43:11,149 INFO Computing data fidelity for 114564 rotations and 2048 images at 35%
2022-04-04 22:43:12,157 DEBUG Corresponding type is already real float64.
2022-04-04 22:43:12,158 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:43:26,114 INFO Computing data fidelity for 114564 rotations and 2048 images at 36%
2022-04-04 22:43:27,132 DEBUG Corresponding type is already real float64.
2022-04-04 22:43:27,132 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:43:41,106 INFO Computing data fidelity for 114564 rotations and 2048 images at 37%
2022-04-04 22:43:42,116 DEBUG Corresponding type is already real float64.
2022-04-04 22:43:42,116 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:43:56,097 INFO Computing data fidelity for 114564 rotations and 2048 images at 38%
2022-04-04 22:43:57,111 DEBUG Corresponding type is already real float64.
2022-04-04 22:43:57,112 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:44:11,150 INFO Computing data fidelity for 114564 rotations and 2048 images at 39%
2022-04-04 22:44:12,160 DEBUG Corresponding type is already real float64.
2022-04-04 22:44:12,161 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:44:26,326 INFO Computing data fidelity for 114564 rotations and 2048 images at 40%
2022-04-04 22:44:27,399 DEBUG Corresponding type is already real float64.
2022-04-04 22:44:27,400 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:44:41,482 INFO Computing data fidelity for 114564 rotations and 2048 images at 41%
2022-04-04 22:44:42,497 DEBUG Corresponding type is already real float64.
2022-04-04 22:44:42,497 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:44:56,529 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2022-04-04 22:44:57,530 DEBUG Corresponding type is already real float64.
2022-04-04 22:44:57,530 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:45:11,503 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2022-04-04 22:45:12,524 DEBUG Corresponding type is already real float64.
2022-04-04 22:45:12,524 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:45:26,510 INFO Computing data fidelity for 114564 rotations and 2048 images at 43%
2022-04-04 22:45:27,530 DEBUG Corresponding type is already real float64.
2022-04-04 22:45:27,530 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:45:41,545 INFO Computing data fidelity for 114564 rotations and 2048 images at 44%
2022-04-04 22:45:42,564 DEBUG Corresponding type is already real float64.
2022-04-04 22:45:42,564 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:45:56,791 INFO Computing data fidelity for 114564 rotations and 2048 images at 45%
2022-04-04 22:45:57,855 DEBUG Corresponding type is already real float64.
2022-04-04 22:45:57,855 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:46:12,466 INFO Computing data fidelity for 114564 rotations and 2048 images at 46%
2022-04-04 22:46:13,544 DEBUG Corresponding type is already real float64.
2022-04-04 22:46:13,544 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:46:27,848 INFO Computing data fidelity for 114564 rotations and 2048 images at 47%
2022-04-04 22:46:28,859 DEBUG Corresponding type is already real float64.
2022-04-04 22:46:28,859 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:46:42,928 INFO Computing data fidelity for 114564 rotations and 2048 images at 48%
2022-04-04 22:46:43,974 DEBUG Corresponding type is already real float64.
2022-04-04 22:46:43,974 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:46:57,926 INFO Computing data fidelity for 114564 rotations and 2048 images at 49%
2022-04-04 22:46:58,967 DEBUG Corresponding type is already real float64.
2022-04-04 22:46:58,967 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:47:12,918 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2022-04-04 22:47:13,970 DEBUG Corresponding type is already real float64.
2022-04-04 22:47:13,970 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:47:28,234 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2022-04-04 22:47:29,399 DEBUG Corresponding type is already real float64.
2022-04-04 22:47:29,399 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:47:43,502 INFO Computing data fidelity for 114564 rotations and 2048 images at 51%
2022-04-04 22:47:44,545 DEBUG Corresponding type is already real float64.
2022-04-04 22:47:44,546 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:47:58,759 INFO Computing data fidelity for 114564 rotations and 2048 images at 52%
2022-04-04 22:47:59,789 DEBUG Corresponding type is already real float64.
2022-04-04 22:47:59,790 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:48:13,894 INFO Computing data fidelity for 114564 rotations and 2048 images at 53%
2022-04-04 22:48:14,944 DEBUG Corresponding type is already real float64.
2022-04-04 22:48:14,945 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:48:28,962 INFO Computing data fidelity for 114564 rotations and 2048 images at 54%
2022-04-04 22:48:29,985 DEBUG Corresponding type is already real float64.
2022-04-04 22:48:29,985 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:48:44,016 INFO Computing data fidelity for 114564 rotations and 2048 images at 55%
2022-04-04 22:48:45,030 DEBUG Corresponding type is already real float64.
2022-04-04 22:48:45,030 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:48:59,009 INFO Computing data fidelity for 114564 rotations and 2048 images at 56%
2022-04-04 22:49:00,023 DEBUG Corresponding type is already real float64.
2022-04-04 22:49:00,023 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:49:14,014 INFO Computing data fidelity for 114564 rotations and 2048 images at 57%
2022-04-04 22:49:15,025 DEBUG Corresponding type is already real float64.
2022-04-04 22:49:15,025 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:49:29,091 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2022-04-04 22:49:30,106 DEBUG Corresponding type is already real float64.
2022-04-04 22:49:30,107 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:49:44,220 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2022-04-04 22:49:45,226 DEBUG Corresponding type is already real float64.
2022-04-04 22:49:45,226 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:49:59,321 INFO Computing data fidelity for 114564 rotations and 2048 images at 59%
2022-04-04 22:50:00,334 DEBUG Corresponding type is already real float64.
2022-04-04 22:50:00,334 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:50:14,386 INFO Computing data fidelity for 114564 rotations and 2048 images at 60%
2022-04-04 22:50:15,380 DEBUG Corresponding type is already real float64.
2022-04-04 22:50:15,380 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:50:29,711 INFO Computing data fidelity for 114564 rotations and 2048 images at 61%
2022-04-04 22:50:30,740 DEBUG Corresponding type is already real float64.
2022-04-04 22:50:30,741 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:50:45,374 INFO Computing data fidelity for 114564 rotations and 2048 images at 62%
2022-04-04 22:50:46,368 DEBUG Corresponding type is already real float64.
2022-04-04 22:50:46,368 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:51:00,529 INFO Computing data fidelity for 114564 rotations and 2048 images at 63%
2022-04-04 22:51:01,510 DEBUG Corresponding type is already real float64.
2022-04-04 22:51:01,510 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:51:15,673 INFO Computing data fidelity for 114564 rotations and 2048 images at 64%
2022-04-04 22:51:16,623 DEBUG Corresponding type is already real float64.
2022-04-04 22:51:16,623 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:51:30,739 INFO Computing data fidelity for 114564 rotations and 2048 images at 65%
2022-04-04 22:51:31,727 DEBUG Corresponding type is already real float64.
2022-04-04 22:51:31,727 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:51:45,858 INFO Computing data fidelity for 114564 rotations and 2048 images at 66%
2022-04-04 22:51:46,950 DEBUG Corresponding type is already real float64.
2022-04-04 22:51:46,951 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:52:00,952 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2022-04-04 22:52:02,016 DEBUG Corresponding type is already real float64.
2022-04-04 22:52:02,017 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:52:16,005 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2022-04-04 22:52:17,087 DEBUG Corresponding type is already real float64.
2022-04-04 22:52:17,087 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:52:31,085 INFO Computing data fidelity for 114564 rotations and 2048 images at 68%
2022-04-04 22:52:32,129 DEBUG Corresponding type is already real float64.
2022-04-04 22:52:32,129 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:52:46,180 INFO Computing data fidelity for 114564 rotations and 2048 images at 69%
2022-04-04 22:52:47,216 DEBUG Corresponding type is already real float64.
2022-04-04 22:52:47,217 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:53:01,280 INFO Computing data fidelity for 114564 rotations and 2048 images at 70%
2022-04-04 22:53:02,273 DEBUG Corresponding type is already real float64.
2022-04-04 22:53:02,273 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:53:16,420 INFO Computing data fidelity for 114564 rotations and 2048 images at 71%
2022-04-04 22:53:17,389 DEBUG Corresponding type is already real float64.
2022-04-04 22:53:17,389 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:53:31,660 INFO Computing data fidelity for 114564 rotations and 2048 images at 72%
2022-04-04 22:53:32,737 DEBUG Corresponding type is already real float64.
2022-04-04 22:53:32,737 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:53:46,948 INFO Computing data fidelity for 114564 rotations and 2048 images at 73%
2022-04-04 22:53:47,902 DEBUG Corresponding type is already real float64.
2022-04-04 22:53:47,903 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:54:02,004 INFO Computing data fidelity for 114564 rotations and 2048 images at 74%
2022-04-04 22:54:02,975 DEBUG Corresponding type is already real float64.
2022-04-04 22:54:02,975 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:54:17,465 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2022-04-04 22:54:18,704 DEBUG Corresponding type is already real float64.
2022-04-04 22:54:18,705 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:54:32,942 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2022-04-04 22:54:33,924 DEBUG Corresponding type is already real float64.
2022-04-04 22:54:33,925 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:54:47,991 INFO Computing data fidelity for 114564 rotations and 2048 images at 76%
2022-04-04 22:54:48,966 DEBUG Corresponding type is already real float64.
2022-04-04 22:54:48,966 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:55:03,181 INFO Computing data fidelity for 114564 rotations and 2048 images at 77%
2022-04-04 22:55:04,182 DEBUG Corresponding type is already real float64.
2022-04-04 22:55:04,182 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:55:18,434 INFO Computing data fidelity for 114564 rotations and 2048 images at 78%
2022-04-04 22:55:19,404 DEBUG Corresponding type is already real float64.
2022-04-04 22:55:19,404 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:55:33,579 INFO Computing data fidelity for 114564 rotations and 2048 images at 79%
2022-04-04 22:55:34,553 DEBUG Corresponding type is already real float64.
2022-04-04 22:55:34,554 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:55:49,371 INFO Computing data fidelity for 114564 rotations and 2048 images at 80%
2022-04-04 22:55:50,566 DEBUG Corresponding type is already real float64.
2022-04-04 22:55:50,566 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:56:04,883 INFO Computing data fidelity for 114564 rotations and 2048 images at 81%
2022-04-04 22:56:05,943 DEBUG Corresponding type is already real float64.
2022-04-04 22:56:05,943 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:56:19,986 INFO Computing data fidelity for 114564 rotations and 2048 images at 82%
2022-04-04 22:56:21,045 DEBUG Corresponding type is already real float64.
2022-04-04 22:56:21,045 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:56:35,520 INFO Computing data fidelity for 114564 rotations and 2048 images at 83%
2022-04-04 22:56:36,601 DEBUG Corresponding type is already real float64.
2022-04-04 22:56:36,601 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:56:50,794 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2022-04-04 22:56:51,795 DEBUG Corresponding type is already real float64.
2022-04-04 22:56:51,795 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:57:05,869 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2022-04-04 22:57:06,887 DEBUG Corresponding type is already real float64.
2022-04-04 22:57:06,887 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:57:20,935 INFO Computing data fidelity for 114564 rotations and 2048 images at 85%
2022-04-04 22:57:21,967 DEBUG Corresponding type is already real float64.
2022-04-04 22:57:21,967 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:57:36,001 INFO Computing data fidelity for 114564 rotations and 2048 images at 86%
2022-04-04 22:57:36,986 DEBUG Corresponding type is already real float64.
2022-04-04 22:57:36,987 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:57:51,116 INFO Computing data fidelity for 114564 rotations and 2048 images at 87%
2022-04-04 22:57:52,192 DEBUG Corresponding type is already real float64.
2022-04-04 22:57:52,193 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:58:06,427 INFO Computing data fidelity for 114564 rotations and 2048 images at 88%
2022-04-04 22:58:07,460 DEBUG Corresponding type is already real float64.
2022-04-04 22:58:07,461 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:58:21,545 INFO Computing data fidelity for 114564 rotations and 2048 images at 89%
2022-04-04 22:58:22,557 DEBUG Corresponding type is already real float64.
2022-04-04 22:58:22,558 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:58:36,789 INFO Computing data fidelity for 114564 rotations and 2048 images at 90%
2022-04-04 22:58:37,899 DEBUG Corresponding type is already real float64.
2022-04-04 22:58:37,900 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:58:52,372 INFO Computing data fidelity for 114564 rotations and 2048 images at 91%
2022-04-04 22:58:53,391 DEBUG Corresponding type is already real float64.
2022-04-04 22:58:53,392 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:59:07,854 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2022-04-04 22:59:08,909 DEBUG Corresponding type is already real float64.
2022-04-04 22:59:08,909 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:59:23,352 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2022-04-04 22:59:24,379 DEBUG Corresponding type is already real float64.
2022-04-04 22:59:24,380 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:59:38,582 INFO Computing data fidelity for 114564 rotations and 2048 images at 93%
2022-04-04 22:59:39,554 DEBUG Corresponding type is already real float64.
2022-04-04 22:59:39,554 DEBUG nufft passed real_type for signal, converting
2022-04-04 22:59:53,623 INFO Computing data fidelity for 114564 rotations and 2048 images at 94%
2022-04-04 22:59:54,662 DEBUG Corresponding type is already real float64.
2022-04-04 22:59:54,663 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:00:08,810 INFO Computing data fidelity for 114564 rotations and 2048 images at 95%
2022-04-04 23:00:09,844 DEBUG Corresponding type is already real float64.
2022-04-04 23:00:09,845 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:00:23,995 INFO Computing data fidelity for 114564 rotations and 2048 images at 96%
2022-04-04 23:00:25,056 DEBUG Corresponding type is already real float64.
2022-04-04 23:00:25,056 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:00:39,186 INFO Computing data fidelity for 114564 rotations and 2048 images at 97%
2022-04-04 23:00:40,251 DEBUG Corresponding type is already real float64.
2022-04-04 23:00:40,252 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:00:54,297 INFO Computing data fidelity for 114564 rotations and 2048 images at 98%
2022-04-04 23:00:55,338 DEBUG Corresponding type is already real float64.
2022-04-04 23:00:55,338 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:01:09,339 INFO Computing data fidelity for 114564 rotations and 2048 images at 99%
2022-04-04 23:01:10,123 DEBUG Corresponding type is already real float64.
2022-04-04 23:01:10,123 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:01:22,075 INFO Computing data fidelity for 114564 rotations and 2048 images at 100%
2022-04-04 23:01:26,275 INFO Do lambda update step
2022-04-04 23:01:51,464 INFO Do rots update step
2022-04-04 23:01:52,363 INFO Projecting 2048 vectors onto 114564-simplex at 2%
2022-04-04 23:01:53,006 INFO Projecting 2048 vectors onto 114564-simplex at 4%
2022-04-04 23:01:53,729 INFO Projecting 2048 vectors onto 114564-simplex at 7%
2022-04-04 23:01:54,626 INFO Projecting 2048 vectors onto 114564-simplex at 9%
2022-04-04 23:01:55,500 INFO Projecting 2048 vectors onto 114564-simplex at 12%
2022-04-04 23:01:56,195 INFO Projecting 2048 vectors onto 114564-simplex at 14%
2022-04-04 23:01:56,847 INFO Projecting 2048 vectors onto 114564-simplex at 17%
2022-04-04 23:01:57,490 INFO Projecting 2048 vectors onto 114564-simplex at 19%
2022-04-04 23:01:58,130 INFO Projecting 2048 vectors onto 114564-simplex at 21%
2022-04-04 23:01:58,777 INFO Projecting 2048 vectors onto 114564-simplex at 24%
2022-04-04 23:01:59,597 INFO Projecting 2048 vectors onto 114564-simplex at 26%
2022-04-04 23:02:00,253 INFO Projecting 2048 vectors onto 114564-simplex at 29%
2022-04-04 23:02:00,894 INFO Projecting 2048 vectors onto 114564-simplex at 31%
2022-04-04 23:02:01,545 INFO Projecting 2048 vectors onto 114564-simplex at 34%
2022-04-04 23:02:02,184 INFO Projecting 2048 vectors onto 114564-simplex at 36%
2022-04-04 23:02:02,822 INFO Projecting 2048 vectors onto 114564-simplex at 39%
2022-04-04 23:02:03,459 INFO Projecting 2048 vectors onto 114564-simplex at 41%
2022-04-04 23:02:04,101 INFO Projecting 2048 vectors onto 114564-simplex at 43%
2022-04-04 23:02:04,742 INFO Projecting 2048 vectors onto 114564-simplex at 46%
2022-04-04 23:02:05,382 INFO Projecting 2048 vectors onto 114564-simplex at 48%
2022-04-04 23:02:06,213 INFO Projecting 2048 vectors onto 114564-simplex at 51%
2022-04-04 23:02:06,872 INFO Projecting 2048 vectors onto 114564-simplex at 53%
2022-04-04 23:02:07,521 INFO Projecting 2048 vectors onto 114564-simplex at 56%
2022-04-04 23:02:08,215 INFO Projecting 2048 vectors onto 114564-simplex at 58%
2022-04-04 23:02:09,134 INFO Projecting 2048 vectors onto 114564-simplex at 61%
2022-04-04 23:02:10,010 INFO Projecting 2048 vectors onto 114564-simplex at 63%
2022-04-04 23:02:10,718 INFO Projecting 2048 vectors onto 114564-simplex at 65%
2022-04-04 23:02:11,375 INFO Projecting 2048 vectors onto 114564-simplex at 68%
2022-04-04 23:02:12,023 INFO Projecting 2048 vectors onto 114564-simplex at 70%
2022-04-04 23:02:12,675 INFO Projecting 2048 vectors onto 114564-simplex at 73%
2022-04-04 23:02:13,511 INFO Projecting 2048 vectors onto 114564-simplex at 75%
2022-04-04 23:02:14,165 INFO Projecting 2048 vectors onto 114564-simplex at 78%
2022-04-04 23:02:14,805 INFO Projecting 2048 vectors onto 114564-simplex at 80%
2022-04-04 23:02:15,449 INFO Projecting 2048 vectors onto 114564-simplex at 83%
2022-04-04 23:02:16,090 INFO Projecting 2048 vectors onto 114564-simplex at 85%
2022-04-04 23:02:16,748 INFO Projecting 2048 vectors onto 114564-simplex at 87%
2022-04-04 23:02:17,386 INFO Projecting 2048 vectors onto 114564-simplex at 90%
2022-04-04 23:02:18,026 INFO Projecting 2048 vectors onto 114564-simplex at 92%
2022-04-04 23:02:18,667 INFO Projecting 2048 vectors onto 114564-simplex at 95%
2022-04-04 23:02:19,312 INFO Projecting 2048 vectors onto 114564-simplex at 97%
2022-04-04 23:02:19,940 INFO Projecting 2048 vectors onto 114564-simplex at 100%
2022-04-04 23:02:21,254 INFO Computing 50 means of 582 points in at most 20 steps...
2022-04-04 23:02:21,326 INFO Computing 2048 means at 2%
2022-04-04 23:02:21,412 INFO Computing 50 means of 569 points in at most 20 steps...
2022-04-04 23:02:21,474 INFO Computing 2048 means at 4%
2022-04-04 23:02:21,557 INFO Computing 50 means of 592 points in at most 20 steps...
2022-04-04 23:02:21,627 INFO Computing 2048 means at 7%
2022-04-04 23:02:21,703 INFO Computing 50 means of 547 points in at most 20 steps...
2022-04-04 23:02:21,761 INFO Computing 2048 means at 9%
2022-04-04 23:02:21,838 INFO Computing 50 means of 587 points in at most 20 steps...
2022-04-04 23:02:21,904 INFO Computing 2048 means at 12%
2022-04-04 23:02:21,979 INFO Computing 50 means of 581 points in at most 20 steps...
2022-04-04 23:02:22,042 INFO Computing 2048 means at 14%
2022-04-04 23:02:22,118 INFO Computing 50 means of 598 points in at most 20 steps...
2022-04-04 23:02:22,188 INFO Computing 2048 means at 17%
2022-04-04 23:02:22,266 INFO Computing 50 means of 594 points in at most 20 steps...
2022-04-04 23:02:22,327 INFO Computing 2048 means at 19%
2022-04-04 23:02:22,407 INFO Computing 50 means of 598 points in at most 20 steps...
2022-04-04 23:02:22,486 INFO Computing 2048 means at 21%
2022-04-04 23:02:22,574 INFO Computing 50 means of 586 points in at most 20 steps...
2022-04-04 23:02:22,663 INFO Computing 2048 means at 24%
2022-04-04 23:02:22,770 INFO Computing 50 means of 574 points in at most 20 steps...
2022-04-04 23:02:22,866 INFO Computing 2048 means at 26%
2022-04-04 23:02:22,966 INFO Computing 50 means of 568 points in at most 20 steps...
2022-04-04 23:02:23,063 INFO Computing 2048 means at 29%
2022-04-04 23:02:23,164 INFO Computing 50 means of 592 points in at most 20 steps...
2022-04-04 23:02:23,361 INFO Computing 2048 means at 31%
2022-04-04 23:02:23,488 INFO Computing 50 means of 581 points in at most 20 steps...
2022-04-04 23:02:23,636 INFO Computing 2048 means at 34%
2022-04-04 23:02:23,755 INFO Computing 50 means of 566 points in at most 20 steps...
2022-04-04 23:02:23,896 INFO Computing 2048 means at 36%
2022-04-04 23:02:24,019 INFO Computing 50 means of 576 points in at most 20 steps...
2022-04-04 23:02:24,188 INFO Computing 2048 means at 39%
2022-04-04 23:02:24,317 INFO Computing 50 means of 587 points in at most 20 steps...
2022-04-04 23:02:24,451 INFO Computing 2048 means at 41%
2022-04-04 23:02:24,574 INFO Computing 50 means of 593 points in at most 20 steps...
2022-04-04 23:02:24,708 INFO Computing 2048 means at 43%
2022-04-04 23:02:24,832 INFO Computing 50 means of 588 points in at most 20 steps...
2022-04-04 23:02:24,983 INFO Computing 2048 means at 46%
2022-04-04 23:02:25,109 INFO Computing 50 means of 596 points in at most 20 steps...
2022-04-04 23:02:25,246 INFO Computing 2048 means at 48%
2022-04-04 23:02:25,368 INFO Computing 50 means of 596 points in at most 20 steps...
2022-04-04 23:02:25,477 INFO Computing 2048 means at 51%
2022-04-04 23:02:25,571 INFO Computing 50 means of 579 points in at most 20 steps...
2022-04-04 23:02:25,689 INFO Computing 2048 means at 53%
2022-04-04 23:02:25,784 INFO Computing 50 means of 590 points in at most 20 steps...
2022-04-04 23:02:25,865 INFO Computing 2048 means at 56%
2022-04-04 23:02:25,944 INFO Computing 50 means of 591 points in at most 20 steps...
2022-04-04 23:02:26,017 INFO Computing 2048 means at 58%
2022-04-04 23:02:26,108 INFO Computing 50 means of 590 points in at most 20 steps...
2022-04-04 23:02:26,174 INFO Computing 2048 means at 61%
2022-04-04 23:02:26,252 INFO Computing 50 means of 587 points in at most 20 steps...
2022-04-04 23:02:26,334 INFO Computing 2048 means at 63%
2022-04-04 23:02:26,414 INFO Computing 50 means of 564 points in at most 20 steps...
2022-04-04 23:02:26,476 INFO Computing 2048 means at 65%
2022-04-04 23:02:26,564 INFO Computing 50 means of 593 points in at most 20 steps...
2022-04-04 23:02:26,627 INFO Computing 2048 means at 68%
2022-04-04 23:02:26,709 INFO Computing 50 means of 583 points in at most 20 steps...
2022-04-04 23:02:26,771 INFO Computing 2048 means at 70%
2022-04-04 23:02:26,851 INFO Computing 50 means of 590 points in at most 20 steps...
2022-04-04 23:02:26,916 INFO Computing 2048 means at 73%
2022-04-04 23:02:27,013 INFO Computing 50 means of 598 points in at most 20 steps...
2022-04-04 23:02:27,077 INFO Computing 2048 means at 75%
2022-04-04 23:02:27,157 INFO Computing 50 means of 604 points in at most 20 steps...
2022-04-04 23:02:27,226 INFO Computing 2048 means at 78%
2022-04-04 23:02:27,305 INFO Computing 50 means of 570 points in at most 20 steps...
2022-04-04 23:02:27,367 INFO Computing 2048 means at 80%
2022-04-04 23:02:27,446 INFO Computing 50 means of 604 points in at most 20 steps...
2022-04-04 23:02:27,511 INFO Computing 2048 means at 83%
2022-04-04 23:02:27,591 INFO Computing 50 means of 585 points in at most 20 steps...
2022-04-04 23:02:27,653 INFO Computing 2048 means at 85%
2022-04-04 23:02:27,732 INFO Computing 50 means of 588 points in at most 20 steps...
2022-04-04 23:02:27,796 INFO Computing 2048 means at 87%
2022-04-04 23:02:27,874 INFO Computing 50 means of 600 points in at most 20 steps...
2022-04-04 23:02:27,939 INFO Computing 2048 means at 90%
2022-04-04 23:02:28,018 INFO Computing 50 means of 582 points in at most 20 steps...
2022-04-04 23:02:28,083 INFO Computing 2048 means at 92%
2022-04-04 23:02:28,162 INFO Computing 50 means of 569 points in at most 20 steps...
2022-04-04 23:02:28,223 INFO Computing 2048 means at 95%
2022-04-04 23:02:28,303 INFO Computing 50 means of 579 points in at most 20 steps...
2022-04-04 23:02:28,366 INFO Computing 2048 means at 97%
2022-04-04 23:02:28,445 INFO Computing 48 means of 568 points in at most 20 steps...
2022-04-04 23:02:28,507 INFO Computing 2048 means at 100%
2022-04-04 23:02:31,676 INFO Do vol update step
2022-04-04 23:02:31,679 INFO Compute adjoint forward mapping on the images
2022-04-04 23:02:33,634 DEBUG Corresponding type is already complex complex128.
2022-04-04 23:02:36,198 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2022-04-04 23:02:36,213 INFO Computing adjoint forward mappings from 2048 rotations at 50%
2022-04-04 23:02:37,663 DEBUG Corresponding type is already complex complex128.
2022-04-04 23:02:40,451 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2022-04-04 23:02:40,474 INFO Computing adjoint forward mappings from 2048 rotations at 100%
2022-04-04 23:02:41,788 DEBUG Corresponding type is already real float64.
2022-04-04 23:02:41,788 DEBUG anufft passed real_type for signal, converting
2022-04-04 23:02:48,620 INFO Computing kernel from 2048 rotations at 50%
2022-04-04 23:02:49,460 DEBUG Corresponding type is already real float64.
2022-04-04 23:02:49,460 DEBUG anufft passed real_type for signal, converting
2022-04-04 23:02:56,061 INFO Computing kernel from 2048 rotations at 100%
2022-04-04 23:02:56,063 INFO Computing non-centered Fourier Transform
2022-04-04 23:02:56,231 INFO Add ramp filter regularisation
2022-04-04 23:03:00,926 INFO Update data_discrepancies
2022-04-04 23:03:00,927 INFO Computing \|Ag.u - f_i\|^2
2022-04-04 23:03:01,764 DEBUG Corresponding type is already real float64.
2022-04-04 23:03:01,764 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:03:16,289 INFO Computing data fidelity for 114564 rotations and 2048 images at 0%
2022-04-04 23:03:17,040 DEBUG Corresponding type is already real float64.
2022-04-04 23:03:17,040 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:03:31,516 INFO Computing data fidelity for 114564 rotations and 2048 images at 1%
2022-04-04 23:03:32,278 DEBUG Corresponding type is already real float64.
2022-04-04 23:03:32,278 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:03:46,723 INFO Computing data fidelity for 114564 rotations and 2048 images at 2%
2022-04-04 23:03:47,496 DEBUG Corresponding type is already real float64.
2022-04-04 23:03:47,497 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:04:01,835 INFO Computing data fidelity for 114564 rotations and 2048 images at 3%
2022-04-04 23:04:02,623 DEBUG Corresponding type is already real float64.
2022-04-04 23:04:02,623 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:04:17,680 INFO Computing data fidelity for 114564 rotations and 2048 images at 4%
2022-04-04 23:04:18,474 DEBUG Corresponding type is already real float64.
2022-04-04 23:04:18,474 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:04:33,294 INFO Computing data fidelity for 114564 rotations and 2048 images at 5%
2022-04-04 23:04:34,070 DEBUG Corresponding type is already real float64.
2022-04-04 23:04:34,071 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:04:48,543 INFO Computing data fidelity for 114564 rotations and 2048 images at 6%
2022-04-04 23:04:49,312 DEBUG Corresponding type is already real float64.
2022-04-04 23:04:49,312 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:05:03,685 INFO Computing data fidelity for 114564 rotations and 2048 images at 7%
2022-04-04 23:05:04,475 DEBUG Corresponding type is already real float64.
2022-04-04 23:05:04,475 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:05:18,760 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2022-04-04 23:05:19,571 DEBUG Corresponding type is already real float64.
2022-04-04 23:05:19,571 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:05:33,901 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2022-04-04 23:05:34,731 DEBUG Corresponding type is already real float64.
2022-04-04 23:05:34,731 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:05:49,148 INFO Computing data fidelity for 114564 rotations and 2048 images at 9%
2022-04-04 23:05:49,983 DEBUG Corresponding type is already real float64.
2022-04-04 23:05:49,983 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:06:04,814 INFO Computing data fidelity for 114564 rotations and 2048 images at 10%
2022-04-04 23:06:05,674 DEBUG Corresponding type is already real float64.
2022-04-04 23:06:05,674 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:06:20,071 INFO Computing data fidelity for 114564 rotations and 2048 images at 11%
2022-04-04 23:06:20,924 DEBUG Corresponding type is already real float64.
2022-04-04 23:06:20,924 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:06:35,189 INFO Computing data fidelity for 114564 rotations and 2048 images at 12%
2022-04-04 23:06:36,051 DEBUG Corresponding type is already real float64.
2022-04-04 23:06:36,051 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:06:50,373 INFO Computing data fidelity for 114564 rotations and 2048 images at 13%
2022-04-04 23:06:51,282 DEBUG Corresponding type is already real float64.
2022-04-04 23:06:51,283 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:07:05,609 INFO Computing data fidelity for 114564 rotations and 2048 images at 14%
2022-04-04 23:07:06,562 DEBUG Corresponding type is already real float64.
2022-04-04 23:07:06,563 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:07:20,887 INFO Computing data fidelity for 114564 rotations and 2048 images at 15%
2022-04-04 23:07:21,853 DEBUG Corresponding type is already real float64.
2022-04-04 23:07:21,853 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:07:36,112 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2022-04-04 23:07:37,066 DEBUG Corresponding type is already real float64.
2022-04-04 23:07:37,066 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:07:51,440 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2022-04-04 23:07:52,303 DEBUG Corresponding type is already real float64.
2022-04-04 23:07:52,303 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:08:06,660 INFO Computing data fidelity for 114564 rotations and 2048 images at 17%
2022-04-04 23:08:07,513 DEBUG Corresponding type is already real float64.
2022-04-04 23:08:07,513 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:08:21,756 INFO Computing data fidelity for 114564 rotations and 2048 images at 18%
2022-04-04 23:08:22,589 DEBUG Corresponding type is already real float64.
2022-04-04 23:08:22,589 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:08:36,747 INFO Computing data fidelity for 114564 rotations and 2048 images at 19%
2022-04-04 23:08:37,621 DEBUG Corresponding type is already real float64.
2022-04-04 23:08:37,621 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:08:51,711 INFO Computing data fidelity for 114564 rotations and 2048 images at 20%
2022-04-04 23:08:52,566 DEBUG Corresponding type is already real float64.
2022-04-04 23:08:52,566 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:09:06,588 INFO Computing data fidelity for 114564 rotations and 2048 images at 21%
2022-04-04 23:09:07,489 DEBUG Corresponding type is already real float64.
2022-04-04 23:09:07,489 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:09:21,450 INFO Computing data fidelity for 114564 rotations and 2048 images at 22%
2022-04-04 23:09:22,388 DEBUG Corresponding type is already real float64.
2022-04-04 23:09:22,388 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:09:36,348 INFO Computing data fidelity for 114564 rotations and 2048 images at 23%
2022-04-04 23:09:37,319 DEBUG Corresponding type is already real float64.
2022-04-04 23:09:37,319 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:09:51,235 INFO Computing data fidelity for 114564 rotations and 2048 images at 24%
2022-04-04 23:09:52,219 DEBUG Corresponding type is already real float64.
2022-04-04 23:09:52,219 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:10:06,132 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2022-04-04 23:10:07,091 DEBUG Corresponding type is already real float64.
2022-04-04 23:10:07,091 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:10:21,043 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2022-04-04 23:10:22,023 DEBUG Corresponding type is already real float64.
2022-04-04 23:10:22,024 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:10:35,880 INFO Computing data fidelity for 114564 rotations and 2048 images at 26%
2022-04-04 23:10:36,872 DEBUG Corresponding type is already real float64.
2022-04-04 23:10:36,872 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:10:50,809 INFO Computing data fidelity for 114564 rotations and 2048 images at 27%
2022-04-04 23:10:51,812 DEBUG Corresponding type is already real float64.
2022-04-04 23:10:51,812 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:11:05,718 INFO Computing data fidelity for 114564 rotations and 2048 images at 28%
2022-04-04 23:11:06,690 DEBUG Corresponding type is already real float64.
2022-04-04 23:11:06,690 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:11:20,598 INFO Computing data fidelity for 114564 rotations and 2048 images at 29%
2022-04-04 23:11:21,579 DEBUG Corresponding type is already real float64.
2022-04-04 23:11:21,579 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:11:35,594 INFO Computing data fidelity for 114564 rotations and 2048 images at 30%
2022-04-04 23:11:36,595 DEBUG Corresponding type is already real float64.
2022-04-04 23:11:36,595 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:11:50,541 INFO Computing data fidelity for 114564 rotations and 2048 images at 31%
2022-04-04 23:11:51,534 DEBUG Corresponding type is already real float64.
2022-04-04 23:11:51,534 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:12:05,503 INFO Computing data fidelity for 114564 rotations and 2048 images at 32%
2022-04-04 23:12:06,493 DEBUG Corresponding type is already real float64.
2022-04-04 23:12:06,493 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:12:20,487 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2022-04-04 23:12:21,457 DEBUG Corresponding type is already real float64.
2022-04-04 23:12:21,457 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:12:35,455 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2022-04-04 23:12:36,431 DEBUG Corresponding type is already real float64.
2022-04-04 23:12:36,431 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:12:50,326 INFO Computing data fidelity for 114564 rotations and 2048 images at 34%
2022-04-04 23:12:51,315 DEBUG Corresponding type is already real float64.
2022-04-04 23:12:51,315 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:13:05,274 INFO Computing data fidelity for 114564 rotations and 2048 images at 35%
2022-04-04 23:13:06,270 DEBUG Corresponding type is already real float64.
2022-04-04 23:13:06,270 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:13:20,173 INFO Computing data fidelity for 114564 rotations and 2048 images at 36%
2022-04-04 23:13:21,165 DEBUG Corresponding type is already real float64.
2022-04-04 23:13:21,165 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:13:35,170 INFO Computing data fidelity for 114564 rotations and 2048 images at 37%
2022-04-04 23:13:36,160 DEBUG Corresponding type is already real float64.
2022-04-04 23:13:36,160 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:13:50,171 INFO Computing data fidelity for 114564 rotations and 2048 images at 38%
2022-04-04 23:13:51,169 DEBUG Corresponding type is already real float64.
2022-04-04 23:13:51,169 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:14:05,098 INFO Computing data fidelity for 114564 rotations and 2048 images at 39%
2022-04-04 23:14:06,089 DEBUG Corresponding type is already real float64.
2022-04-04 23:14:06,090 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:14:20,055 INFO Computing data fidelity for 114564 rotations and 2048 images at 40%
2022-04-04 23:14:21,041 DEBUG Corresponding type is already real float64.
2022-04-04 23:14:21,041 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:14:35,231 INFO Computing data fidelity for 114564 rotations and 2048 images at 41%
2022-04-04 23:14:36,214 DEBUG Corresponding type is already real float64.
2022-04-04 23:14:36,214 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:14:50,194 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2022-04-04 23:14:51,188 DEBUG Corresponding type is already real float64.
2022-04-04 23:14:51,188 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:15:05,213 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2022-04-04 23:15:06,244 DEBUG Corresponding type is already real float64.
2022-04-04 23:15:06,245 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:15:20,307 INFO Computing data fidelity for 114564 rotations and 2048 images at 43%
2022-04-04 23:15:21,325 DEBUG Corresponding type is already real float64.
2022-04-04 23:15:21,325 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:15:35,299 INFO Computing data fidelity for 114564 rotations and 2048 images at 44%
2022-04-04 23:15:36,303 DEBUG Corresponding type is already real float64.
2022-04-04 23:15:36,303 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:15:50,284 INFO Computing data fidelity for 114564 rotations and 2048 images at 45%
2022-04-04 23:15:51,269 DEBUG Corresponding type is already real float64.
2022-04-04 23:15:51,269 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:16:05,198 INFO Computing data fidelity for 114564 rotations and 2048 images at 46%
2022-04-04 23:16:06,185 DEBUG Corresponding type is already real float64.
2022-04-04 23:16:06,186 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:16:20,200 INFO Computing data fidelity for 114564 rotations and 2048 images at 47%
2022-04-04 23:16:21,163 DEBUG Corresponding type is already real float64.
2022-04-04 23:16:21,163 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:16:35,065 INFO Computing data fidelity for 114564 rotations and 2048 images at 48%
2022-04-04 23:16:36,027 DEBUG Corresponding type is already real float64.
2022-04-04 23:16:36,028 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:16:50,022 INFO Computing data fidelity for 114564 rotations and 2048 images at 49%
2022-04-04 23:16:51,011 DEBUG Corresponding type is already real float64.
2022-04-04 23:16:51,011 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:17:04,939 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2022-04-04 23:17:05,932 DEBUG Corresponding type is already real float64.
2022-04-04 23:17:05,932 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:17:19,845 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2022-04-04 23:17:20,869 DEBUG Corresponding type is already real float64.
2022-04-04 23:17:20,869 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:17:34,893 INFO Computing data fidelity for 114564 rotations and 2048 images at 51%
2022-04-04 23:17:35,930 DEBUG Corresponding type is already real float64.
2022-04-04 23:17:35,930 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:17:49,895 INFO Computing data fidelity for 114564 rotations and 2048 images at 52%
2022-04-04 23:17:50,948 DEBUG Corresponding type is already real float64.
2022-04-04 23:17:50,948 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:18:05,076 INFO Computing data fidelity for 114564 rotations and 2048 images at 53%
2022-04-04 23:18:06,084 DEBUG Corresponding type is already real float64.
2022-04-04 23:18:06,084 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:18:20,017 INFO Computing data fidelity for 114564 rotations and 2048 images at 54%
2022-04-04 23:18:21,039 DEBUG Corresponding type is already real float64.
2022-04-04 23:18:21,039 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:18:34,976 INFO Computing data fidelity for 114564 rotations and 2048 images at 55%
2022-04-04 23:18:35,999 DEBUG Corresponding type is already real float64.
2022-04-04 23:18:35,999 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:18:50,051 INFO Computing data fidelity for 114564 rotations and 2048 images at 56%
2022-04-04 23:18:51,014 DEBUG Corresponding type is already real float64.
2022-04-04 23:18:51,014 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:19:05,054 INFO Computing data fidelity for 114564 rotations and 2048 images at 57%
2022-04-04 23:19:06,020 DEBUG Corresponding type is already real float64.
2022-04-04 23:19:06,020 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:19:19,957 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2022-04-04 23:19:20,943 DEBUG Corresponding type is already real float64.
2022-04-04 23:19:20,943 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:19:34,883 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2022-04-04 23:19:35,885 DEBUG Corresponding type is already real float64.
2022-04-04 23:19:35,885 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:19:49,932 INFO Computing data fidelity for 114564 rotations and 2048 images at 59%
2022-04-04 23:19:50,926 DEBUG Corresponding type is already real float64.
2022-04-04 23:19:50,926 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:20:04,921 INFO Computing data fidelity for 114564 rotations and 2048 images at 60%
2022-04-04 23:20:05,897 DEBUG Corresponding type is already real float64.
2022-04-04 23:20:05,898 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:20:19,901 INFO Computing data fidelity for 114564 rotations and 2048 images at 61%
2022-04-04 23:20:20,902 DEBUG Corresponding type is already real float64.
2022-04-04 23:20:20,902 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:20:35,007 INFO Computing data fidelity for 114564 rotations and 2048 images at 62%
2022-04-04 23:20:35,991 DEBUG Corresponding type is already real float64.
2022-04-04 23:20:35,991 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:20:49,896 INFO Computing data fidelity for 114564 rotations and 2048 images at 63%
2022-04-04 23:20:50,910 DEBUG Corresponding type is already real float64.
2022-04-04 23:20:50,910 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:21:04,890 INFO Computing data fidelity for 114564 rotations and 2048 images at 64%
2022-04-04 23:21:05,881 DEBUG Corresponding type is already real float64.
2022-04-04 23:21:05,881 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:21:19,851 INFO Computing data fidelity for 114564 rotations and 2048 images at 65%
2022-04-04 23:21:20,853 DEBUG Corresponding type is already real float64.
2022-04-04 23:21:20,853 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:21:34,879 INFO Computing data fidelity for 114564 rotations and 2048 images at 66%
2022-04-04 23:21:35,874 DEBUG Corresponding type is already real float64.
2022-04-04 23:21:35,874 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:21:49,904 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2022-04-04 23:21:50,915 DEBUG Corresponding type is already real float64.
2022-04-04 23:21:50,915 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:22:04,965 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2022-04-04 23:22:06,003 DEBUG Corresponding type is already real float64.
2022-04-04 23:22:06,003 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:22:20,413 INFO Computing data fidelity for 114564 rotations and 2048 images at 68%
2022-04-04 23:22:21,411 DEBUG Corresponding type is already real float64.
2022-04-04 23:22:21,412 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:22:35,619 INFO Computing data fidelity for 114564 rotations and 2048 images at 69%
2022-04-04 23:22:36,603 DEBUG Corresponding type is already real float64.
2022-04-04 23:22:36,604 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:22:50,661 INFO Computing data fidelity for 114564 rotations and 2048 images at 70%
2022-04-04 23:22:51,612 DEBUG Corresponding type is already real float64.
2022-04-04 23:22:51,612 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:23:05,550 INFO Computing data fidelity for 114564 rotations and 2048 images at 71%
2022-04-04 23:23:06,533 DEBUG Corresponding type is already real float64.
2022-04-04 23:23:06,534 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:23:20,462 INFO Computing data fidelity for 114564 rotations and 2048 images at 72%
2022-04-04 23:23:21,482 DEBUG Corresponding type is already real float64.
2022-04-04 23:23:21,482 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:23:35,467 INFO Computing data fidelity for 114564 rotations and 2048 images at 73%
2022-04-04 23:23:36,506 DEBUG Corresponding type is already real float64.
2022-04-04 23:23:36,506 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:23:50,487 INFO Computing data fidelity for 114564 rotations and 2048 images at 74%
2022-04-04 23:23:51,526 DEBUG Corresponding type is already real float64.
2022-04-04 23:23:51,526 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:24:05,762 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2022-04-04 23:24:06,801 DEBUG Corresponding type is already real float64.
2022-04-04 23:24:06,801 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:24:20,868 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2022-04-04 23:24:21,724 DEBUG Corresponding type is already real float64.
2022-04-04 23:24:21,725 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:24:36,117 INFO Computing data fidelity for 114564 rotations and 2048 images at 76%
2022-04-04 23:24:37,285 DEBUG Corresponding type is already real float64.
2022-04-04 23:24:37,285 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:24:54,082 INFO Computing data fidelity for 114564 rotations and 2048 images at 77%
2022-04-04 23:24:54,926 DEBUG Corresponding type is already real float64.
2022-04-04 23:24:54,926 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:25:10,657 INFO Computing data fidelity for 114564 rotations and 2048 images at 78%
2022-04-04 23:25:11,580 DEBUG Corresponding type is already real float64.
2022-04-04 23:25:11,580 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:25:27,588 INFO Computing data fidelity for 114564 rotations and 2048 images at 79%
2022-04-04 23:25:28,475 DEBUG Corresponding type is already real float64.
2022-04-04 23:25:28,475 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:25:44,312 INFO Computing data fidelity for 114564 rotations and 2048 images at 80%
2022-04-04 23:25:45,068 DEBUG Corresponding type is already real float64.
2022-04-04 23:25:45,068 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:25:59,585 INFO Computing data fidelity for 114564 rotations and 2048 images at 81%
2022-04-04 23:26:00,559 DEBUG Corresponding type is already real float64.
2022-04-04 23:26:00,560 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:26:16,172 INFO Computing data fidelity for 114564 rotations and 2048 images at 82%
2022-04-04 23:26:17,086 DEBUG Corresponding type is already real float64.
2022-04-04 23:26:17,086 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:26:31,751 INFO Computing data fidelity for 114564 rotations and 2048 images at 83%
2022-04-04 23:26:32,573 DEBUG Corresponding type is already real float64.
2022-04-04 23:26:32,573 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:26:46,570 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2022-04-04 23:26:47,348 DEBUG Corresponding type is already real float64.
2022-04-04 23:26:47,348 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:27:01,259 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2022-04-04 23:27:02,025 DEBUG Corresponding type is already real float64.
2022-04-04 23:27:02,025 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:27:15,789 INFO Computing data fidelity for 114564 rotations and 2048 images at 85%
2022-04-04 23:27:16,537 DEBUG Corresponding type is already real float64.
2022-04-04 23:27:16,538 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:27:30,971 INFO Computing data fidelity for 114564 rotations and 2048 images at 86%
2022-04-04 23:27:31,856 DEBUG Corresponding type is already real float64.
2022-04-04 23:27:31,857 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:27:46,573 INFO Computing data fidelity for 114564 rotations and 2048 images at 87%
2022-04-04 23:27:47,397 DEBUG Corresponding type is already real float64.
2022-04-04 23:27:47,397 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:28:02,222 INFO Computing data fidelity for 114564 rotations and 2048 images at 88%
2022-04-04 23:28:03,118 DEBUG Corresponding type is already real float64.
2022-04-04 23:28:03,120 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:28:17,420 INFO Computing data fidelity for 114564 rotations and 2048 images at 89%
2022-04-04 23:28:18,376 DEBUG Corresponding type is already real float64.
2022-04-04 23:28:18,376 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:28:32,476 INFO Computing data fidelity for 114564 rotations and 2048 images at 90%
2022-04-04 23:28:33,221 DEBUG Corresponding type is already real float64.
2022-04-04 23:28:33,221 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:28:47,502 INFO Computing data fidelity for 114564 rotations and 2048 images at 91%
2022-04-04 23:28:48,293 DEBUG Corresponding type is already real float64.
2022-04-04 23:28:48,294 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:29:01,960 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2022-04-04 23:29:02,713 DEBUG Corresponding type is already real float64.
2022-04-04 23:29:02,714 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:29:16,837 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2022-04-04 23:29:17,619 DEBUG Corresponding type is already real float64.
2022-04-04 23:29:17,619 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:29:32,776 INFO Computing data fidelity for 114564 rotations and 2048 images at 93%
2022-04-04 23:29:33,546 DEBUG Corresponding type is already real float64.
2022-04-04 23:29:33,546 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:29:49,019 INFO Computing data fidelity for 114564 rotations and 2048 images at 94%
2022-04-04 23:29:49,810 DEBUG Corresponding type is already real float64.
2022-04-04 23:29:49,810 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:30:03,862 INFO Computing data fidelity for 114564 rotations and 2048 images at 95%
2022-04-04 23:30:04,602 DEBUG Corresponding type is already real float64.
2022-04-04 23:30:04,603 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:30:18,452 INFO Computing data fidelity for 114564 rotations and 2048 images at 96%
2022-04-04 23:30:19,190 DEBUG Corresponding type is already real float64.
2022-04-04 23:30:19,191 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:30:32,910 INFO Computing data fidelity for 114564 rotations and 2048 images at 97%
2022-04-04 23:30:33,654 DEBUG Corresponding type is already real float64.
2022-04-04 23:30:33,654 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:30:47,541 INFO Computing data fidelity for 114564 rotations and 2048 images at 98%
2022-04-04 23:30:48,309 DEBUG Corresponding type is already real float64.
2022-04-04 23:30:48,309 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:31:03,433 INFO Computing data fidelity for 114564 rotations and 2048 images at 99%
2022-04-04 23:31:04,115 DEBUG Corresponding type is already real float64.
2022-04-04 23:31:04,115 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:31:17,834 INFO Computing data fidelity for 114564 rotations and 2048 images at 100%
2022-04-04 23:31:25,941 INFO Do lambda update step
2022-04-04 23:32:00,928 INFO Do rots update step
2022-04-04 23:32:02,420 INFO Projecting 2048 vectors onto 114564-simplex at 2%
2022-04-04 23:32:03,179 INFO Projecting 2048 vectors onto 114564-simplex at 4%
2022-04-04 23:32:03,919 INFO Projecting 2048 vectors onto 114564-simplex at 7%
2022-04-04 23:32:04,650 INFO Projecting 2048 vectors onto 114564-simplex at 9%
2022-04-04 23:32:05,361 INFO Projecting 2048 vectors onto 114564-simplex at 12%
2022-04-04 23:32:06,051 INFO Projecting 2048 vectors onto 114564-simplex at 14%
2022-04-04 23:32:06,743 INFO Projecting 2048 vectors onto 114564-simplex at 17%
2022-04-04 23:32:07,432 INFO Projecting 2048 vectors onto 114564-simplex at 19%
2022-04-04 23:32:08,130 INFO Projecting 2048 vectors onto 114564-simplex at 21%
2022-04-04 23:32:08,828 INFO Projecting 2048 vectors onto 114564-simplex at 24%
2022-04-04 23:32:10,166 INFO Projecting 2048 vectors onto 114564-simplex at 26%
2022-04-04 23:32:10,920 INFO Projecting 2048 vectors onto 114564-simplex at 29%
2022-04-04 23:32:11,631 INFO Projecting 2048 vectors onto 114564-simplex at 31%
2022-04-04 23:32:12,319 INFO Projecting 2048 vectors onto 114564-simplex at 34%
2022-04-04 23:32:13,005 INFO Projecting 2048 vectors onto 114564-simplex at 36%
2022-04-04 23:32:13,690 INFO Projecting 2048 vectors onto 114564-simplex at 39%
2022-04-04 23:32:14,382 INFO Projecting 2048 vectors onto 114564-simplex at 41%
2022-04-04 23:32:15,070 INFO Projecting 2048 vectors onto 114564-simplex at 43%
2022-04-04 23:32:15,752 INFO Projecting 2048 vectors onto 114564-simplex at 46%
2022-04-04 23:32:16,479 INFO Projecting 2048 vectors onto 114564-simplex at 48%
2022-04-04 23:32:19,400 INFO Projecting 2048 vectors onto 114564-simplex at 51%
2022-04-04 23:32:20,078 INFO Projecting 2048 vectors onto 114564-simplex at 53%
2022-04-04 23:32:20,742 INFO Projecting 2048 vectors onto 114564-simplex at 56%
2022-04-04 23:32:21,405 INFO Projecting 2048 vectors onto 114564-simplex at 58%
2022-04-04 23:32:22,069 INFO Projecting 2048 vectors onto 114564-simplex at 61%
2022-04-04 23:32:22,735 INFO Projecting 2048 vectors onto 114564-simplex at 63%
2022-04-04 23:32:23,410 INFO Projecting 2048 vectors onto 114564-simplex at 65%
2022-04-04 23:32:24,127 INFO Projecting 2048 vectors onto 114564-simplex at 68%
2022-04-04 23:32:24,896 INFO Projecting 2048 vectors onto 114564-simplex at 70%
2022-04-04 23:32:25,662 INFO Projecting 2048 vectors onto 114564-simplex at 73%
2022-04-04 23:32:27,732 INFO Projecting 2048 vectors onto 114564-simplex at 75%
2022-04-04 23:32:28,679 INFO Projecting 2048 vectors onto 114564-simplex at 78%
2022-04-04 23:32:29,440 INFO Projecting 2048 vectors onto 114564-simplex at 80%
2022-04-04 23:32:30,249 INFO Projecting 2048 vectors onto 114564-simplex at 83%
2022-04-04 23:32:31,007 INFO Projecting 2048 vectors onto 114564-simplex at 85%
2022-04-04 23:32:31,713 INFO Projecting 2048 vectors onto 114564-simplex at 87%
2022-04-04 23:32:33,492 INFO Projecting 2048 vectors onto 114564-simplex at 90%
2022-04-04 23:32:34,256 INFO Projecting 2048 vectors onto 114564-simplex at 92%
2022-04-04 23:32:34,966 INFO Projecting 2048 vectors onto 114564-simplex at 95%
2022-04-04 23:32:35,709 INFO Projecting 2048 vectors onto 114564-simplex at 97%
2022-04-04 23:32:36,378 INFO Projecting 2048 vectors onto 114564-simplex at 100%
2022-04-04 23:32:39,250 INFO Computing 50 means of 584 points in at most 20 steps...
2022-04-04 23:32:39,372 INFO Computing 2048 means at 2%
2022-04-04 23:32:39,485 INFO Computing 50 means of 568 points in at most 20 steps...
2022-04-04 23:32:39,553 INFO Computing 2048 means at 4%
2022-04-04 23:32:39,633 INFO Computing 50 means of 596 points in at most 20 steps...
2022-04-04 23:32:39,705 INFO Computing 2048 means at 7%
2022-04-04 23:32:39,785 INFO Computing 50 means of 547 points in at most 20 steps...
2022-04-04 23:32:39,848 INFO Computing 2048 means at 9%
2022-04-04 23:32:39,934 INFO Computing 50 means of 584 points in at most 20 steps...
2022-04-04 23:32:40,008 INFO Computing 2048 means at 12%
2022-04-04 23:32:40,097 INFO Computing 50 means of 584 points in at most 20 steps...
2022-04-04 23:32:40,173 INFO Computing 2048 means at 14%
2022-04-04 23:32:40,259 INFO Computing 50 means of 597 points in at most 20 steps...
2022-04-04 23:32:40,343 INFO Computing 2048 means at 17%
2022-04-04 23:32:40,456 INFO Computing 50 means of 592 points in at most 20 steps...
2022-04-04 23:32:40,560 INFO Computing 2048 means at 19%
2022-04-04 23:32:40,649 INFO Computing 50 means of 599 points in at most 20 steps...
2022-04-04 23:32:40,716 INFO Computing 2048 means at 21%
2022-04-04 23:32:40,795 INFO Computing 50 means of 590 points in at most 20 steps...
2022-04-04 23:32:40,864 INFO Computing 2048 means at 24%
2022-04-04 23:32:40,961 INFO Computing 50 means of 571 points in at most 20 steps...
2022-04-04 23:32:41,025 INFO Computing 2048 means at 26%
2022-04-04 23:32:41,108 INFO Computing 50 means of 565 points in at most 20 steps...
2022-04-04 23:32:41,169 INFO Computing 2048 means at 29%
2022-04-04 23:32:41,244 INFO Computing 50 means of 587 points in at most 20 steps...
2022-04-04 23:32:41,314 INFO Computing 2048 means at 31%
2022-04-04 23:32:41,394 INFO Computing 50 means of 577 points in at most 20 steps...
2022-04-04 23:32:41,458 INFO Computing 2048 means at 34%
2022-04-04 23:32:41,538 INFO Computing 50 means of 574 points in at most 20 steps...
2022-04-04 23:32:41,605 INFO Computing 2048 means at 36%
2022-04-04 23:32:41,683 INFO Computing 50 means of 581 points in at most 20 steps...
2022-04-04 23:32:41,749 INFO Computing 2048 means at 39%
2022-04-04 23:32:41,829 INFO Computing 50 means of 585 points in at most 20 steps...
2022-04-04 23:32:41,897 INFO Computing 2048 means at 41%
2022-04-04 23:32:41,972 INFO Computing 50 means of 592 points in at most 20 steps...
2022-04-04 23:32:42,038 INFO Computing 2048 means at 43%
2022-04-04 23:32:42,112 INFO Computing 50 means of 585 points in at most 20 steps...
2022-04-04 23:32:42,193 INFO Computing 2048 means at 46%
2022-04-04 23:32:42,272 INFO Computing 50 means of 600 points in at most 20 steps...
2022-04-04 23:32:42,346 INFO Computing 2048 means at 48%
2022-04-04 23:32:42,438 INFO Computing 50 means of 598 points in at most 20 steps...
2022-04-04 23:32:42,509 INFO Computing 2048 means at 51%
2022-04-04 23:32:42,586 INFO Computing 50 means of 587 points in at most 20 steps...
2022-04-04 23:32:42,649 INFO Computing 2048 means at 53%
2022-04-04 23:32:42,724 INFO Computing 50 means of 591 points in at most 20 steps...
2022-04-04 23:32:42,787 INFO Computing 2048 means at 56%
2022-04-04 23:32:42,863 INFO Computing 50 means of 589 points in at most 20 steps...
2022-04-04 23:32:42,928 INFO Computing 2048 means at 58%
2022-04-04 23:32:43,004 INFO Computing 50 means of 590 points in at most 20 steps...
2022-04-04 23:32:43,071 INFO Computing 2048 means at 61%
2022-04-04 23:32:43,147 INFO Computing 50 means of 592 points in at most 20 steps...
2022-04-04 23:32:43,214 INFO Computing 2048 means at 63%
2022-04-04 23:32:43,291 INFO Computing 50 means of 565 points in at most 20 steps...
2022-04-04 23:32:43,356 INFO Computing 2048 means at 65%
2022-04-04 23:32:43,432 INFO Computing 50 means of 592 points in at most 20 steps...
2022-04-04 23:32:43,499 INFO Computing 2048 means at 68%
2022-04-04 23:32:43,578 INFO Computing 50 means of 584 points in at most 20 steps...
2022-04-04 23:32:43,641 INFO Computing 2048 means at 70%
2022-04-04 23:32:43,719 INFO Computing 50 means of 594 points in at most 20 steps...
2022-04-04 23:32:43,784 INFO Computing 2048 means at 73%
2022-04-04 23:32:43,876 INFO Computing 50 means of 601 points in at most 20 steps...
2022-04-04 23:32:43,943 INFO Computing 2048 means at 75%
2022-04-04 23:32:44,021 INFO Computing 50 means of 606 points in at most 20 steps...
2022-04-04 23:32:44,094 INFO Computing 2048 means at 78%
2022-04-04 23:32:44,176 INFO Computing 50 means of 573 points in at most 20 steps...
2022-04-04 23:32:44,238 INFO Computing 2048 means at 80%
2022-04-04 23:32:44,313 INFO Computing 50 means of 606 points in at most 20 steps...
2022-04-04 23:32:44,379 INFO Computing 2048 means at 83%
2022-04-04 23:32:44,455 INFO Computing 50 means of 591 points in at most 20 steps...
2022-04-04 23:32:44,518 INFO Computing 2048 means at 85%
2022-04-04 23:32:44,596 INFO Computing 50 means of 581 points in at most 20 steps...
2022-04-04 23:32:44,663 INFO Computing 2048 means at 87%
2022-04-04 23:32:44,745 INFO Computing 50 means of 598 points in at most 20 steps...
2022-04-04 23:32:44,822 INFO Computing 2048 means at 90%
2022-04-04 23:32:44,923 INFO Computing 50 means of 584 points in at most 20 steps...
2022-04-04 23:32:45,002 INFO Computing 2048 means at 92%
2022-04-04 23:32:45,092 INFO Computing 50 means of 570 points in at most 20 steps...
2022-04-04 23:32:45,171 INFO Computing 2048 means at 95%
2022-04-04 23:32:45,257 INFO Computing 50 means of 574 points in at most 20 steps...
2022-04-04 23:32:45,332 INFO Computing 2048 means at 97%
2022-04-04 23:32:45,418 INFO Computing 48 means of 568 points in at most 20 steps...
2022-04-04 23:32:45,482 INFO Computing 2048 means at 100%
2022-04-04 23:33:03,200 INFO Do vol update step
2022-04-04 23:33:03,208 INFO Compute adjoint forward mapping on the images
2022-04-04 23:33:05,527 DEBUG Corresponding type is already complex complex128.
2022-04-04 23:33:08,589 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2022-04-04 23:33:08,609 INFO Computing adjoint forward mappings from 2048 rotations at 50%
2022-04-04 23:33:10,272 DEBUG Corresponding type is already complex complex128.
2022-04-04 23:33:13,582 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2022-04-04 23:33:13,605 INFO Computing adjoint forward mappings from 2048 rotations at 100%
2022-04-04 23:33:14,669 DEBUG Corresponding type is already real float64.
2022-04-04 23:33:14,669 DEBUG anufft passed real_type for signal, converting
2022-04-04 23:33:23,816 INFO Computing kernel from 2048 rotations at 50%
2022-04-04 23:33:24,914 DEBUG Corresponding type is already real float64.
2022-04-04 23:33:24,914 DEBUG anufft passed real_type for signal, converting
2022-04-04 23:33:34,205 INFO Computing kernel from 2048 rotations at 100%
2022-04-04 23:33:34,210 INFO Computing non-centered Fourier Transform
2022-04-04 23:33:34,421 INFO Add ramp filter regularisation
2022-04-04 23:33:55,245 INFO Update data_discrepancies
2022-04-04 23:33:55,253 INFO Computing \|Ag.u - f_i\|^2
2022-04-04 23:33:57,471 DEBUG Corresponding type is already real float64.
2022-04-04 23:33:57,472 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:34:13,258 INFO Computing data fidelity for 114564 rotations and 2048 images at 0%
2022-04-04 23:34:14,113 DEBUG Corresponding type is already real float64.
2022-04-04 23:34:14,114 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:34:29,138 INFO Computing data fidelity for 114564 rotations and 2048 images at 1%
2022-04-04 23:34:30,148 DEBUG Corresponding type is already real float64.
2022-04-04 23:34:30,148 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:34:45,760 INFO Computing data fidelity for 114564 rotations and 2048 images at 2%
2022-04-04 23:34:46,625 DEBUG Corresponding type is already real float64.
2022-04-04 23:34:46,626 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:35:01,204 INFO Computing data fidelity for 114564 rotations and 2048 images at 3%
2022-04-04 23:35:01,964 DEBUG Corresponding type is already real float64.
2022-04-04 23:35:01,965 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:35:17,260 INFO Computing data fidelity for 114564 rotations and 2048 images at 4%
2022-04-04 23:35:18,221 DEBUG Corresponding type is already real float64.
2022-04-04 23:35:18,221 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:35:34,004 INFO Computing data fidelity for 114564 rotations and 2048 images at 5%
2022-04-04 23:35:35,131 DEBUG Corresponding type is already real float64.
2022-04-04 23:35:35,131 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:35:51,004 INFO Computing data fidelity for 114564 rotations and 2048 images at 6%
2022-04-04 23:35:51,993 DEBUG Corresponding type is already real float64.
2022-04-04 23:35:51,993 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:36:08,001 INFO Computing data fidelity for 114564 rotations and 2048 images at 7%
2022-04-04 23:36:08,973 DEBUG Corresponding type is already real float64.
2022-04-04 23:36:08,974 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:36:24,356 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2022-04-04 23:36:25,249 DEBUG Corresponding type is already real float64.
2022-04-04 23:36:25,250 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:36:40,795 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2022-04-04 23:36:41,689 DEBUG Corresponding type is already real float64.
2022-04-04 23:36:41,689 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:36:57,771 INFO Computing data fidelity for 114564 rotations and 2048 images at 9%
2022-04-04 23:36:58,810 DEBUG Corresponding type is already real float64.
2022-04-04 23:36:58,811 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:37:14,694 INFO Computing data fidelity for 114564 rotations and 2048 images at 10%
2022-04-04 23:37:15,645 DEBUG Corresponding type is already real float64.
2022-04-04 23:37:15,646 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:37:31,912 INFO Computing data fidelity for 114564 rotations and 2048 images at 11%
2022-04-04 23:37:32,877 DEBUG Corresponding type is already real float64.
2022-04-04 23:37:32,877 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:37:49,136 INFO Computing data fidelity for 114564 rotations and 2048 images at 12%
2022-04-04 23:37:50,368 DEBUG Corresponding type is already real float64.
2022-04-04 23:37:50,368 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:38:07,102 INFO Computing data fidelity for 114564 rotations and 2048 images at 13%
2022-04-04 23:38:08,054 DEBUG Corresponding type is already real float64.
2022-04-04 23:38:08,054 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:38:26,938 INFO Computing data fidelity for 114564 rotations and 2048 images at 14%
2022-04-04 23:38:27,701 DEBUG Corresponding type is already real float64.
2022-04-04 23:38:27,701 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:38:43,418 INFO Computing data fidelity for 114564 rotations and 2048 images at 15%
2022-04-04 23:38:44,365 DEBUG Corresponding type is already real float64.
2022-04-04 23:38:44,366 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:39:00,342 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2022-04-04 23:39:01,317 DEBUG Corresponding type is already real float64.
2022-04-04 23:39:01,317 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:39:17,155 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2022-04-04 23:39:18,335 DEBUG Corresponding type is already real float64.
2022-04-04 23:39:18,435 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:39:34,576 INFO Computing data fidelity for 114564 rotations and 2048 images at 17%
2022-04-04 23:39:35,594 DEBUG Corresponding type is already real float64.
2022-04-04 23:39:35,594 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:39:51,587 INFO Computing data fidelity for 114564 rotations and 2048 images at 18%
2022-04-04 23:39:52,488 DEBUG Corresponding type is already real float64.
2022-04-04 23:39:52,488 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:40:07,918 INFO Computing data fidelity for 114564 rotations and 2048 images at 19%
2022-04-04 23:40:08,816 DEBUG Corresponding type is already real float64.
2022-04-04 23:40:08,817 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:40:24,618 INFO Computing data fidelity for 114564 rotations and 2048 images at 20%
2022-04-04 23:40:25,599 DEBUG Corresponding type is already real float64.
2022-04-04 23:40:25,600 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:40:41,891 INFO Computing data fidelity for 114564 rotations and 2048 images at 21%
2022-04-04 23:40:42,695 DEBUG Corresponding type is already real float64.
2022-04-04 23:40:42,696 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:40:59,246 INFO Computing data fidelity for 114564 rotations and 2048 images at 22%
2022-04-04 23:41:00,241 DEBUG Corresponding type is already real float64.
2022-04-04 23:41:00,242 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:41:16,849 INFO Computing data fidelity for 114564 rotations and 2048 images at 23%
2022-04-04 23:41:17,855 DEBUG Corresponding type is already real float64.
2022-04-04 23:41:17,856 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:41:32,969 INFO Computing data fidelity for 114564 rotations and 2048 images at 24%
2022-04-04 23:41:33,780 DEBUG Corresponding type is already real float64.
2022-04-04 23:41:33,780 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:41:48,723 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2022-04-04 23:41:49,578 DEBUG Corresponding type is already real float64.
2022-04-04 23:41:49,578 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:42:04,850 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2022-04-04 23:42:05,775 DEBUG Corresponding type is already real float64.
2022-04-04 23:42:05,776 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:42:21,528 INFO Computing data fidelity for 114564 rotations and 2048 images at 26%
2022-04-04 23:42:22,302 DEBUG Corresponding type is already real float64.
2022-04-04 23:42:22,302 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:42:37,204 INFO Computing data fidelity for 114564 rotations and 2048 images at 27%
2022-04-04 23:42:38,072 DEBUG Corresponding type is already real float64.
2022-04-04 23:42:38,072 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:42:53,080 INFO Computing data fidelity for 114564 rotations and 2048 images at 28%
2022-04-04 23:42:53,900 DEBUG Corresponding type is already real float64.
2022-04-04 23:42:53,900 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:43:08,935 INFO Computing data fidelity for 114564 rotations and 2048 images at 29%
2022-04-04 23:43:09,816 DEBUG Corresponding type is already real float64.
2022-04-04 23:43:09,816 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:43:25,045 INFO Computing data fidelity for 114564 rotations and 2048 images at 30%
2022-04-04 23:43:25,914 DEBUG Corresponding type is already real float64.
2022-04-04 23:43:25,915 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:43:41,883 INFO Computing data fidelity for 114564 rotations and 2048 images at 31%
2022-04-04 23:43:42,790 DEBUG Corresponding type is already real float64.
2022-04-04 23:43:42,790 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:43:58,933 INFO Computing data fidelity for 114564 rotations and 2048 images at 32%
2022-04-04 23:43:59,825 DEBUG Corresponding type is already real float64.
2022-04-04 23:43:59,825 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:44:14,868 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2022-04-04 23:44:15,728 DEBUG Corresponding type is already real float64.
2022-04-04 23:44:15,728 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:44:31,228 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2022-04-04 23:44:32,100 DEBUG Corresponding type is already real float64.
2022-04-04 23:44:32,100 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:44:47,299 INFO Computing data fidelity for 114564 rotations and 2048 images at 34%
2022-04-04 23:44:48,334 DEBUG Corresponding type is already real float64.
2022-04-04 23:44:48,334 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:45:03,490 INFO Computing data fidelity for 114564 rotations and 2048 images at 35%
2022-04-04 23:45:04,425 DEBUG Corresponding type is already real float64.
2022-04-04 23:45:04,425 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:45:19,671 INFO Computing data fidelity for 114564 rotations and 2048 images at 36%
2022-04-04 23:45:20,579 DEBUG Corresponding type is already real float64.
2022-04-04 23:45:20,580 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:45:35,836 INFO Computing data fidelity for 114564 rotations and 2048 images at 37%
2022-04-04 23:45:36,753 DEBUG Corresponding type is already real float64.
2022-04-04 23:45:36,753 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:45:53,181 INFO Computing data fidelity for 114564 rotations and 2048 images at 38%
2022-04-04 23:45:54,163 DEBUG Corresponding type is already real float64.
2022-04-04 23:45:54,163 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:46:10,727 INFO Computing data fidelity for 114564 rotations and 2048 images at 39%
2022-04-04 23:46:11,700 DEBUG Corresponding type is already real float64.
2022-04-04 23:46:11,700 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:46:28,373 INFO Computing data fidelity for 114564 rotations and 2048 images at 40%
2022-04-04 23:46:29,352 DEBUG Corresponding type is already real float64.
2022-04-04 23:46:29,352 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:46:45,750 INFO Computing data fidelity for 114564 rotations and 2048 images at 41%
2022-04-04 23:46:46,755 DEBUG Corresponding type is already real float64.
2022-04-04 23:46:46,755 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:47:03,889 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2022-04-04 23:47:04,910 DEBUG Corresponding type is already real float64.
2022-04-04 23:47:04,910 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:47:21,577 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2022-04-04 23:47:22,393 DEBUG Corresponding type is already real float64.
2022-04-04 23:47:22,394 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:47:37,499 INFO Computing data fidelity for 114564 rotations and 2048 images at 43%
2022-04-04 23:47:38,316 DEBUG Corresponding type is already real float64.
2022-04-04 23:47:38,316 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:47:53,233 INFO Computing data fidelity for 114564 rotations and 2048 images at 44%
2022-04-04 23:47:54,014 DEBUG Corresponding type is already real float64.
2022-04-04 23:47:54,014 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:48:08,799 INFO Computing data fidelity for 114564 rotations and 2048 images at 45%
2022-04-04 23:48:09,553 DEBUG Corresponding type is already real float64.
2022-04-04 23:48:09,553 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:48:24,316 INFO Computing data fidelity for 114564 rotations and 2048 images at 46%
2022-04-04 23:48:25,060 DEBUG Corresponding type is already real float64.
2022-04-04 23:48:25,060 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:48:39,798 INFO Computing data fidelity for 114564 rotations and 2048 images at 47%
2022-04-04 23:48:40,541 DEBUG Corresponding type is already real float64.
2022-04-04 23:48:40,541 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:48:55,280 INFO Computing data fidelity for 114564 rotations and 2048 images at 48%
2022-04-04 23:48:56,025 DEBUG Corresponding type is already real float64.
2022-04-04 23:48:56,025 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:49:10,798 INFO Computing data fidelity for 114564 rotations and 2048 images at 49%
2022-04-04 23:49:11,535 DEBUG Corresponding type is already real float64.
2022-04-04 23:49:11,535 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:49:26,242 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2022-04-04 23:49:26,982 DEBUG Corresponding type is already real float64.
2022-04-04 23:49:26,983 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:49:41,801 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2022-04-04 23:49:42,567 DEBUG Corresponding type is already real float64.
2022-04-04 23:49:42,567 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:49:57,398 INFO Computing data fidelity for 114564 rotations and 2048 images at 51%
2022-04-04 23:49:58,158 DEBUG Corresponding type is already real float64.
2022-04-04 23:49:58,158 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:50:12,973 INFO Computing data fidelity for 114564 rotations and 2048 images at 52%
2022-04-04 23:50:13,746 DEBUG Corresponding type is already real float64.
2022-04-04 23:50:13,747 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:50:28,482 INFO Computing data fidelity for 114564 rotations and 2048 images at 53%
2022-04-04 23:50:29,251 DEBUG Corresponding type is already real float64.
2022-04-04 23:50:29,251 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:50:44,095 INFO Computing data fidelity for 114564 rotations and 2048 images at 54%
2022-04-04 23:50:44,867 DEBUG Corresponding type is already real float64.
2022-04-04 23:50:44,867 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:50:59,722 INFO Computing data fidelity for 114564 rotations and 2048 images at 55%
2022-04-04 23:51:00,490 DEBUG Corresponding type is already real float64.
2022-04-04 23:51:00,490 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:51:15,240 INFO Computing data fidelity for 114564 rotations and 2048 images at 56%
2022-04-04 23:51:15,999 DEBUG Corresponding type is already real float64.
2022-04-04 23:51:15,999 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:51:30,882 INFO Computing data fidelity for 114564 rotations and 2048 images at 57%
2022-04-04 23:51:31,654 DEBUG Corresponding type is already real float64.
2022-04-04 23:51:31,655 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:51:46,501 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2022-04-04 23:51:47,272 DEBUG Corresponding type is already real float64.
2022-04-04 23:51:47,272 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:52:02,156 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2022-04-04 23:52:02,932 DEBUG Corresponding type is already real float64.
2022-04-04 23:52:02,932 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:52:17,815 INFO Computing data fidelity for 114564 rotations and 2048 images at 59%
2022-04-04 23:52:18,599 DEBUG Corresponding type is already real float64.
2022-04-04 23:52:18,599 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:52:33,491 INFO Computing data fidelity for 114564 rotations and 2048 images at 60%
2022-04-04 23:52:34,253 DEBUG Corresponding type is already real float64.
2022-04-04 23:52:34,253 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:52:49,065 INFO Computing data fidelity for 114564 rotations and 2048 images at 61%
2022-04-04 23:52:49,841 DEBUG Corresponding type is already real float64.
2022-04-04 23:52:49,841 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:53:04,669 INFO Computing data fidelity for 114564 rotations and 2048 images at 62%
2022-04-04 23:53:05,448 DEBUG Corresponding type is already real float64.
2022-04-04 23:53:05,448 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:53:20,261 INFO Computing data fidelity for 114564 rotations and 2048 images at 63%
2022-04-04 23:53:21,047 DEBUG Corresponding type is already real float64.
2022-04-04 23:53:21,047 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:53:35,944 INFO Computing data fidelity for 114564 rotations and 2048 images at 64%
2022-04-04 23:53:36,731 DEBUG Corresponding type is already real float64.
2022-04-04 23:53:36,731 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:53:51,535 INFO Computing data fidelity for 114564 rotations and 2048 images at 65%
2022-04-04 23:53:52,326 DEBUG Corresponding type is already real float64.
2022-04-04 23:53:52,326 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:54:07,204 INFO Computing data fidelity for 114564 rotations and 2048 images at 66%
2022-04-04 23:54:07,989 DEBUG Corresponding type is already real float64.
2022-04-04 23:54:07,989 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:54:22,839 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2022-04-04 23:54:23,635 DEBUG Corresponding type is already real float64.
2022-04-04 23:54:23,635 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:54:38,492 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2022-04-04 23:54:39,281 DEBUG Corresponding type is already real float64.
2022-04-04 23:54:39,281 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:54:54,094 INFO Computing data fidelity for 114564 rotations and 2048 images at 68%
2022-04-04 23:54:54,872 DEBUG Corresponding type is already real float64.
2022-04-04 23:54:54,872 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:55:09,679 INFO Computing data fidelity for 114564 rotations and 2048 images at 69%
2022-04-04 23:55:10,463 DEBUG Corresponding type is already real float64.
2022-04-04 23:55:10,463 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:55:25,317 INFO Computing data fidelity for 114564 rotations and 2048 images at 70%
2022-04-04 23:55:26,104 DEBUG Corresponding type is already real float64.
2022-04-04 23:55:26,104 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:55:40,965 INFO Computing data fidelity for 114564 rotations and 2048 images at 71%
2022-04-04 23:55:41,740 DEBUG Corresponding type is already real float64.
2022-04-04 23:55:41,740 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:55:56,612 INFO Computing data fidelity for 114564 rotations and 2048 images at 72%
2022-04-04 23:55:57,401 DEBUG Corresponding type is already real float64.
2022-04-04 23:55:57,401 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:56:12,268 INFO Computing data fidelity for 114564 rotations and 2048 images at 73%
2022-04-04 23:56:13,050 DEBUG Corresponding type is already real float64.
2022-04-04 23:56:13,050 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:56:27,865 INFO Computing data fidelity for 114564 rotations and 2048 images at 74%
2022-04-04 23:56:28,650 DEBUG Corresponding type is already real float64.
2022-04-04 23:56:28,651 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:56:43,276 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2022-04-04 23:56:44,045 DEBUG Corresponding type is already real float64.
2022-04-04 23:56:44,045 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:56:58,617 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2022-04-04 23:56:59,384 DEBUG Corresponding type is already real float64.
2022-04-04 23:56:59,384 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:57:13,952 INFO Computing data fidelity for 114564 rotations and 2048 images at 76%
2022-04-04 23:57:14,732 DEBUG Corresponding type is already real float64.
2022-04-04 23:57:14,732 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:57:29,335 INFO Computing data fidelity for 114564 rotations and 2048 images at 77%
2022-04-04 23:57:30,113 DEBUG Corresponding type is already real float64.
2022-04-04 23:57:30,113 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:57:44,798 INFO Computing data fidelity for 114564 rotations and 2048 images at 78%
2022-04-04 23:57:45,611 DEBUG Corresponding type is already real float64.
2022-04-04 23:57:45,611 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:58:00,344 INFO Computing data fidelity for 114564 rotations and 2048 images at 79%
2022-04-04 23:58:01,135 DEBUG Corresponding type is already real float64.
2022-04-04 23:58:01,135 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:58:15,886 INFO Computing data fidelity for 114564 rotations and 2048 images at 80%
2022-04-04 23:58:16,686 DEBUG Corresponding type is already real float64.
2022-04-04 23:58:16,686 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:58:31,468 INFO Computing data fidelity for 114564 rotations and 2048 images at 81%
2022-04-04 23:58:32,265 DEBUG Corresponding type is already real float64.
2022-04-04 23:58:32,265 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:58:47,096 INFO Computing data fidelity for 114564 rotations and 2048 images at 82%
2022-04-04 23:58:47,907 DEBUG Corresponding type is already real float64.
2022-04-04 23:58:47,907 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:59:02,750 INFO Computing data fidelity for 114564 rotations and 2048 images at 83%
2022-04-04 23:59:03,558 DEBUG Corresponding type is already real float64.
2022-04-04 23:59:03,558 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:59:18,405 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2022-04-04 23:59:19,201 DEBUG Corresponding type is already real float64.
2022-04-04 23:59:19,201 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:59:34,047 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2022-04-04 23:59:34,853 DEBUG Corresponding type is already real float64.
2022-04-04 23:59:34,853 DEBUG nufft passed real_type for signal, converting
2022-04-04 23:59:49,695 INFO Computing data fidelity for 114564 rotations and 2048 images at 85%
2022-04-04 23:59:50,505 DEBUG Corresponding type is already real float64.
2022-04-04 23:59:50,505 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:00:05,682 INFO Computing data fidelity for 114564 rotations and 2048 images at 86%
2022-04-05 00:00:06,504 DEBUG Corresponding type is already real float64.
2022-04-05 00:00:06,504 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:00:21,493 INFO Computing data fidelity for 114564 rotations and 2048 images at 87%
2022-04-05 00:00:22,319 DEBUG Corresponding type is already real float64.
2022-04-05 00:00:22,319 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:00:37,249 INFO Computing data fidelity for 114564 rotations and 2048 images at 88%
2022-04-05 00:00:38,065 DEBUG Corresponding type is already real float64.
2022-04-05 00:00:38,065 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:00:52,954 INFO Computing data fidelity for 114564 rotations and 2048 images at 89%
2022-04-05 00:00:53,773 DEBUG Corresponding type is already real float64.
2022-04-05 00:00:53,773 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:01:08,548 INFO Computing data fidelity for 114564 rotations and 2048 images at 90%
2022-04-05 00:01:09,355 DEBUG Corresponding type is already real float64.
2022-04-05 00:01:09,355 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:01:24,108 INFO Computing data fidelity for 114564 rotations and 2048 images at 91%
2022-04-05 00:01:24,907 DEBUG Corresponding type is already real float64.
2022-04-05 00:01:24,907 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:01:39,694 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2022-04-05 00:01:40,501 DEBUG Corresponding type is already real float64.
2022-04-05 00:01:40,501 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:01:55,312 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2022-04-05 00:01:56,114 DEBUG Corresponding type is already real float64.
2022-04-05 00:01:56,114 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:02:10,919 INFO Computing data fidelity for 114564 rotations and 2048 images at 93%
2022-04-05 00:02:11,727 DEBUG Corresponding type is already real float64.
2022-04-05 00:02:11,727 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:02:26,511 INFO Computing data fidelity for 114564 rotations and 2048 images at 94%
2022-04-05 00:02:27,318 DEBUG Corresponding type is already real float64.
2022-04-05 00:02:27,318 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:02:42,100 INFO Computing data fidelity for 114564 rotations and 2048 images at 95%
2022-04-05 00:02:42,911 DEBUG Corresponding type is already real float64.
2022-04-05 00:02:42,912 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:02:57,749 INFO Computing data fidelity for 114564 rotations and 2048 images at 96%
2022-04-05 00:02:58,557 DEBUG Corresponding type is already real float64.
2022-04-05 00:02:58,557 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:03:13,336 INFO Computing data fidelity for 114564 rotations and 2048 images at 97%
2022-04-05 00:03:14,134 DEBUG Corresponding type is already real float64.
2022-04-05 00:03:14,135 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:03:28,989 INFO Computing data fidelity for 114564 rotations and 2048 images at 98%
2022-04-05 00:03:29,792 DEBUG Corresponding type is already real float64.
2022-04-05 00:03:29,792 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:03:44,635 INFO Computing data fidelity for 114564 rotations and 2048 images at 99%
2022-04-05 00:03:45,135 DEBUG Corresponding type is already real float64.
2022-04-05 00:03:45,136 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:03:58,033 INFO Computing data fidelity for 114564 rotations and 2048 images at 100%
2022-04-05 00:04:02,346 INFO Do lambda update step
2022-04-05 00:04:28,175 INFO Do rots update step
2022-04-05 00:04:29,088 INFO Projecting 2048 vectors onto 114564-simplex at 2%
2022-04-05 00:04:29,775 INFO Projecting 2048 vectors onto 114564-simplex at 4%
2022-04-05 00:04:30,472 INFO Projecting 2048 vectors onto 114564-simplex at 7%
2022-04-05 00:04:31,151 INFO Projecting 2048 vectors onto 114564-simplex at 9%
2022-04-05 00:04:31,845 INFO Projecting 2048 vectors onto 114564-simplex at 12%
2022-04-05 00:04:32,526 INFO Projecting 2048 vectors onto 114564-simplex at 14%
2022-04-05 00:04:33,196 INFO Projecting 2048 vectors onto 114564-simplex at 17%
2022-04-05 00:04:33,879 INFO Projecting 2048 vectors onto 114564-simplex at 19%
2022-04-05 00:04:34,561 INFO Projecting 2048 vectors onto 114564-simplex at 21%
2022-04-05 00:04:35,245 INFO Projecting 2048 vectors onto 114564-simplex at 24%
2022-04-05 00:04:36,118 INFO Projecting 2048 vectors onto 114564-simplex at 26%
2022-04-05 00:04:36,799 INFO Projecting 2048 vectors onto 114564-simplex at 29%
2022-04-05 00:04:37,487 INFO Projecting 2048 vectors onto 114564-simplex at 31%
2022-04-05 00:04:38,169 INFO Projecting 2048 vectors onto 114564-simplex at 34%
2022-04-05 00:04:38,872 INFO Projecting 2048 vectors onto 114564-simplex at 36%
2022-04-05 00:04:39,565 INFO Projecting 2048 vectors onto 114564-simplex at 39%
2022-04-05 00:04:40,270 INFO Projecting 2048 vectors onto 114564-simplex at 41%
2022-04-05 00:04:40,957 INFO Projecting 2048 vectors onto 114564-simplex at 43%
2022-04-05 00:04:41,641 INFO Projecting 2048 vectors onto 114564-simplex at 46%
2022-04-05 00:04:42,322 INFO Projecting 2048 vectors onto 114564-simplex at 48%
2022-04-05 00:04:43,209 INFO Projecting 2048 vectors onto 114564-simplex at 51%
2022-04-05 00:04:43,902 INFO Projecting 2048 vectors onto 114564-simplex at 53%
2022-04-05 00:04:44,575 INFO Projecting 2048 vectors onto 114564-simplex at 56%
2022-04-05 00:04:45,252 INFO Projecting 2048 vectors onto 114564-simplex at 58%
2022-04-05 00:04:45,937 INFO Projecting 2048 vectors onto 114564-simplex at 61%
2022-04-05 00:04:46,621 INFO Projecting 2048 vectors onto 114564-simplex at 63%
2022-04-05 00:04:47,307 INFO Projecting 2048 vectors onto 114564-simplex at 65%
2022-04-05 00:04:47,994 INFO Projecting 2048 vectors onto 114564-simplex at 68%
2022-04-05 00:04:48,679 INFO Projecting 2048 vectors onto 114564-simplex at 70%
2022-04-05 00:04:49,360 INFO Projecting 2048 vectors onto 114564-simplex at 73%
2022-04-05 00:04:50,251 INFO Projecting 2048 vectors onto 114564-simplex at 75%
2022-04-05 00:04:50,930 INFO Projecting 2048 vectors onto 114564-simplex at 78%
2022-04-05 00:04:51,620 INFO Projecting 2048 vectors onto 114564-simplex at 80%
2022-04-05 00:04:52,297 INFO Projecting 2048 vectors onto 114564-simplex at 83%
2022-04-05 00:04:52,977 INFO Projecting 2048 vectors onto 114564-simplex at 85%
2022-04-05 00:04:53,652 INFO Projecting 2048 vectors onto 114564-simplex at 87%
2022-04-05 00:04:54,331 INFO Projecting 2048 vectors onto 114564-simplex at 90%
2022-04-05 00:04:55,010 INFO Projecting 2048 vectors onto 114564-simplex at 92%
2022-04-05 00:04:55,685 INFO Projecting 2048 vectors onto 114564-simplex at 95%
2022-04-05 00:04:56,368 INFO Projecting 2048 vectors onto 114564-simplex at 97%
2022-04-05 00:04:57,034 INFO Projecting 2048 vectors onto 114564-simplex at 100%
2022-04-05 00:04:58,474 INFO Computing 50 means of 585 points in at most 20 steps...
2022-04-05 00:04:58,562 INFO Computing 2048 means at 2%
2022-04-05 00:04:58,642 INFO Computing 50 means of 565 points in at most 20 steps...
2022-04-05 00:04:58,704 INFO Computing 2048 means at 4%
2022-04-05 00:04:58,784 INFO Computing 50 means of 595 points in at most 20 steps...
2022-04-05 00:04:58,854 INFO Computing 2048 means at 7%
2022-04-05 00:04:58,932 INFO Computing 50 means of 552 points in at most 20 steps...
2022-04-05 00:04:58,995 INFO Computing 2048 means at 9%
2022-04-05 00:04:59,075 INFO Computing 50 means of 577 points in at most 20 steps...
2022-04-05 00:04:59,138 INFO Computing 2048 means at 12%
2022-04-05 00:04:59,217 INFO Computing 50 means of 581 points in at most 20 steps...
2022-04-05 00:04:59,282 INFO Computing 2048 means at 14%
2022-04-05 00:04:59,363 INFO Computing 50 means of 594 points in at most 20 steps...
2022-04-05 00:04:59,429 INFO Computing 2048 means at 17%
2022-04-05 00:04:59,509 INFO Computing 50 means of 591 points in at most 20 steps...
2022-04-05 00:04:59,575 INFO Computing 2048 means at 19%
2022-04-05 00:04:59,655 INFO Computing 50 means of 598 points in at most 20 steps...
2022-04-05 00:04:59,726 INFO Computing 2048 means at 21%
2022-04-05 00:04:59,805 INFO Computing 50 means of 593 points in at most 20 steps...
2022-04-05 00:04:59,870 INFO Computing 2048 means at 24%
2022-04-05 00:04:59,955 INFO Computing 50 means of 569 points in at most 20 steps...
2022-04-05 00:05:00,022 INFO Computing 2048 means at 26%
2022-04-05 00:05:00,102 INFO Computing 50 means of 566 points in at most 20 steps...
2022-04-05 00:05:00,164 INFO Computing 2048 means at 29%
2022-04-05 00:05:00,252 INFO Computing 50 means of 588 points in at most 20 steps...
2022-04-05 00:05:00,319 INFO Computing 2048 means at 31%
2022-04-05 00:05:00,400 INFO Computing 50 means of 577 points in at most 20 steps...
2022-04-05 00:05:00,463 INFO Computing 2048 means at 34%
2022-04-05 00:05:00,545 INFO Computing 50 means of 578 points in at most 20 steps...
2022-04-05 00:05:00,609 INFO Computing 2048 means at 36%
2022-04-05 00:05:00,690 INFO Computing 50 means of 582 points in at most 20 steps...
2022-04-05 00:05:00,761 INFO Computing 2048 means at 39%
2022-04-05 00:05:00,841 INFO Computing 50 means of 579 points in at most 20 steps...
2022-04-05 00:05:00,908 INFO Computing 2048 means at 41%
2022-04-05 00:05:00,987 INFO Computing 50 means of 590 points in at most 20 steps...
2022-04-05 00:05:01,053 INFO Computing 2048 means at 43%
2022-04-05 00:05:01,138 INFO Computing 50 means of 588 points in at most 20 steps...
2022-04-05 00:05:01,203 INFO Computing 2048 means at 46%
2022-04-05 00:05:01,288 INFO Computing 50 means of 601 points in at most 20 steps...
2022-04-05 00:05:01,359 INFO Computing 2048 means at 48%
2022-04-05 00:05:01,447 INFO Computing 50 means of 597 points in at most 20 steps...
2022-04-05 00:05:01,513 INFO Computing 2048 means at 51%
2022-04-05 00:05:01,593 INFO Computing 50 means of 586 points in at most 20 steps...
2022-04-05 00:05:01,659 INFO Computing 2048 means at 53%
2022-04-05 00:05:01,739 INFO Computing 50 means of 590 points in at most 20 steps...
2022-04-05 00:05:01,803 INFO Computing 2048 means at 56%
2022-04-05 00:05:01,884 INFO Computing 50 means of 587 points in at most 20 steps...
2022-04-05 00:05:01,948 INFO Computing 2048 means at 58%
2022-04-05 00:05:02,029 INFO Computing 50 means of 590 points in at most 20 steps...
2022-04-05 00:05:02,099 INFO Computing 2048 means at 61%
2022-04-05 00:05:02,177 INFO Computing 50 means of 593 points in at most 20 steps...
2022-04-05 00:05:02,243 INFO Computing 2048 means at 63%
2022-04-05 00:05:02,322 INFO Computing 50 means of 567 points in at most 20 steps...
2022-04-05 00:05:02,385 INFO Computing 2048 means at 65%
2022-04-05 00:05:02,462 INFO Computing 50 means of 591 points in at most 20 steps...
2022-04-05 00:05:02,528 INFO Computing 2048 means at 68%
2022-04-05 00:05:02,609 INFO Computing 50 means of 590 points in at most 20 steps...
2022-04-05 00:05:02,674 INFO Computing 2048 means at 70%
2022-04-05 00:05:02,754 INFO Computing 50 means of 597 points in at most 20 steps...
2022-04-05 00:05:02,821 INFO Computing 2048 means at 73%
2022-04-05 00:05:02,911 INFO Computing 50 means of 597 points in at most 20 steps...
2022-04-05 00:05:02,977 INFO Computing 2048 means at 75%
2022-04-05 00:05:03,058 INFO Computing 50 means of 605 points in at most 20 steps...
2022-04-05 00:05:03,128 INFO Computing 2048 means at 78%
2022-04-05 00:05:03,208 INFO Computing 50 means of 572 points in at most 20 steps...
2022-04-05 00:05:03,273 INFO Computing 2048 means at 80%
2022-04-05 00:05:03,352 INFO Computing 50 means of 602 points in at most 20 steps...
2022-04-05 00:05:03,419 INFO Computing 2048 means at 83%
2022-04-05 00:05:03,501 INFO Computing 50 means of 588 points in at most 20 steps...
2022-04-05 00:05:03,570 INFO Computing 2048 means at 85%
2022-04-05 00:05:03,649 INFO Computing 50 means of 583 points in at most 20 steps...
2022-04-05 00:05:03,715 INFO Computing 2048 means at 87%
2022-04-05 00:05:03,795 INFO Computing 50 means of 595 points in at most 20 steps...
2022-04-05 00:05:03,861 INFO Computing 2048 means at 90%
2022-04-05 00:05:03,940 INFO Computing 50 means of 587 points in at most 20 steps...
2022-04-05 00:05:04,005 INFO Computing 2048 means at 92%
2022-04-05 00:05:04,086 INFO Computing 50 means of 567 points in at most 20 steps...
2022-04-05 00:05:04,150 INFO Computing 2048 means at 95%
2022-04-05 00:05:04,229 INFO Computing 50 means of 572 points in at most 20 steps...
2022-04-05 00:05:04,292 INFO Computing 2048 means at 97%
2022-04-05 00:05:04,372 INFO Computing 48 means of 566 points in at most 20 steps...
2022-04-05 00:05:04,431 INFO Computing 2048 means at 100%
2022-04-05 00:05:08,606 INFO Do vol update step
2022-04-05 00:05:08,607 INFO Compute adjoint forward mapping on the images
2022-04-05 00:05:10,388 DEBUG Corresponding type is already complex complex128.
2022-04-05 00:05:12,804 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2022-04-05 00:05:12,822 INFO Computing adjoint forward mappings from 2048 rotations at 50%
2022-04-05 00:05:14,427 DEBUG Corresponding type is already complex complex128.
2022-04-05 00:05:16,918 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2022-04-05 00:05:16,932 INFO Computing adjoint forward mappings from 2048 rotations at 100%
2022-04-05 00:05:17,865 DEBUG Corresponding type is already real float64.
2022-04-05 00:05:17,865 DEBUG anufft passed real_type for signal, converting
2022-04-05 00:05:24,051 INFO Computing kernel from 2048 rotations at 50%
2022-04-05 00:05:24,995 DEBUG Corresponding type is already real float64.
2022-04-05 00:05:24,995 DEBUG anufft passed real_type for signal, converting
2022-04-05 00:05:31,433 INFO Computing kernel from 2048 rotations at 100%
2022-04-05 00:05:31,435 INFO Computing non-centered Fourier Transform
2022-04-05 00:05:31,621 INFO Add ramp filter regularisation
2022-04-05 00:05:37,187 INFO Update data_discrepancies
2022-04-05 00:05:37,188 INFO Computing \|Ag.u - f_i\|^2
2022-04-05 00:05:38,070 DEBUG Corresponding type is already real float64.
2022-04-05 00:05:38,071 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:05:53,154 INFO Computing data fidelity for 114564 rotations and 2048 images at 0%
2022-04-05 00:05:53,965 DEBUG Corresponding type is already real float64.
2022-04-05 00:05:53,965 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:06:08,978 INFO Computing data fidelity for 114564 rotations and 2048 images at 1%
2022-04-05 00:06:09,811 DEBUG Corresponding type is already real float64.
2022-04-05 00:06:09,811 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:06:24,760 INFO Computing data fidelity for 114564 rotations and 2048 images at 2%
2022-04-05 00:06:25,565 DEBUG Corresponding type is already real float64.
2022-04-05 00:06:25,565 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:06:40,478 INFO Computing data fidelity for 114564 rotations and 2048 images at 3%
2022-04-05 00:06:41,308 DEBUG Corresponding type is already real float64.
2022-04-05 00:06:41,308 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:06:56,150 INFO Computing data fidelity for 114564 rotations and 2048 images at 4%
2022-04-05 00:06:56,994 DEBUG Corresponding type is already real float64.
2022-04-05 00:06:56,994 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:07:11,828 INFO Computing data fidelity for 114564 rotations and 2048 images at 5%
2022-04-05 00:07:12,628 DEBUG Corresponding type is already real float64.
2022-04-05 00:07:12,628 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:07:27,439 INFO Computing data fidelity for 114564 rotations and 2048 images at 6%
2022-04-05 00:07:28,233 DEBUG Corresponding type is already real float64.
2022-04-05 00:07:28,234 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:07:43,034 INFO Computing data fidelity for 114564 rotations and 2048 images at 7%
2022-04-05 00:07:43,835 DEBUG Corresponding type is already real float64.
2022-04-05 00:07:43,836 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:07:58,634 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2022-04-05 00:07:59,436 DEBUG Corresponding type is already real float64.
2022-04-05 00:07:59,437 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:08:14,280 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2022-04-05 00:08:15,092 DEBUG Corresponding type is already real float64.
2022-04-05 00:08:15,092 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:08:30,065 INFO Computing data fidelity for 114564 rotations and 2048 images at 9%
2022-04-05 00:08:30,889 DEBUG Corresponding type is already real float64.
2022-04-05 00:08:30,889 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:08:45,892 INFO Computing data fidelity for 114564 rotations and 2048 images at 10%
2022-04-05 00:08:46,696 DEBUG Corresponding type is already real float64.
2022-04-05 00:08:46,696 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:09:01,471 INFO Computing data fidelity for 114564 rotations and 2048 images at 11%
2022-04-05 00:09:02,314 DEBUG Corresponding type is already real float64.
2022-04-05 00:09:02,315 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:09:17,551 INFO Computing data fidelity for 114564 rotations and 2048 images at 12%
2022-04-05 00:09:18,368 DEBUG Corresponding type is already real float64.
2022-04-05 00:09:18,369 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:09:33,329 INFO Computing data fidelity for 114564 rotations and 2048 images at 13%
2022-04-05 00:09:34,139 DEBUG Corresponding type is already real float64.
2022-04-05 00:09:34,139 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:09:49,009 INFO Computing data fidelity for 114564 rotations and 2048 images at 14%
2022-04-05 00:09:49,820 DEBUG Corresponding type is already real float64.
2022-04-05 00:09:49,821 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:10:04,684 INFO Computing data fidelity for 114564 rotations and 2048 images at 15%
2022-04-05 00:10:05,491 DEBUG Corresponding type is already real float64.
2022-04-05 00:10:05,492 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:10:20,368 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2022-04-05 00:10:21,186 DEBUG Corresponding type is already real float64.
2022-04-05 00:10:21,187 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:10:35,870 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2022-04-05 00:10:36,680 DEBUG Corresponding type is already real float64.
2022-04-05 00:10:36,680 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:10:51,542 INFO Computing data fidelity for 114564 rotations and 2048 images at 17%
2022-04-05 00:10:52,357 DEBUG Corresponding type is already real float64.
2022-04-05 00:10:52,357 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:11:07,223 INFO Computing data fidelity for 114564 rotations and 2048 images at 18%
2022-04-05 00:11:08,048 DEBUG Corresponding type is already real float64.
2022-04-05 00:11:08,048 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:11:22,825 INFO Computing data fidelity for 114564 rotations and 2048 images at 19%
2022-04-05 00:11:23,646 DEBUG Corresponding type is already real float64.
2022-04-05 00:11:23,646 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:11:38,475 INFO Computing data fidelity for 114564 rotations and 2048 images at 20%
2022-04-05 00:11:39,306 DEBUG Corresponding type is already real float64.
2022-04-05 00:11:39,306 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:11:54,160 INFO Computing data fidelity for 114564 rotations and 2048 images at 21%
2022-04-05 00:11:54,974 DEBUG Corresponding type is already real float64.
2022-04-05 00:11:54,974 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:12:09,855 INFO Computing data fidelity for 114564 rotations and 2048 images at 22%
2022-04-05 00:12:10,677 DEBUG Corresponding type is already real float64.
2022-04-05 00:12:10,677 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:12:25,555 INFO Computing data fidelity for 114564 rotations and 2048 images at 23%
2022-04-05 00:12:26,372 DEBUG Corresponding type is already real float64.
2022-04-05 00:12:26,372 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:12:41,277 INFO Computing data fidelity for 114564 rotations and 2048 images at 24%
2022-04-05 00:12:42,089 DEBUG Corresponding type is already real float64.
2022-04-05 00:12:42,089 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:12:56,963 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2022-04-05 00:12:57,791 DEBUG Corresponding type is already real float64.
2022-04-05 00:12:57,791 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:13:12,622 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2022-04-05 00:13:13,435 DEBUG Corresponding type is already real float64.
2022-04-05 00:13:13,435 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:13:28,244 INFO Computing data fidelity for 114564 rotations and 2048 images at 26%
2022-04-05 00:13:29,051 DEBUG Corresponding type is already real float64.
2022-04-05 00:13:29,051 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:13:43,833 INFO Computing data fidelity for 114564 rotations and 2048 images at 27%
2022-04-05 00:13:44,650 DEBUG Corresponding type is already real float64.
2022-04-05 00:13:44,650 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:13:59,567 INFO Computing data fidelity for 114564 rotations and 2048 images at 28%
2022-04-05 00:14:00,374 DEBUG Corresponding type is already real float64.
2022-04-05 00:14:00,374 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:14:15,267 INFO Computing data fidelity for 114564 rotations and 2048 images at 29%
2022-04-05 00:14:16,079 DEBUG Corresponding type is already real float64.
2022-04-05 00:14:16,079 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:14:30,911 INFO Computing data fidelity for 114564 rotations and 2048 images at 30%
2022-04-05 00:14:31,713 DEBUG Corresponding type is already real float64.
2022-04-05 00:14:31,713 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:14:46,583 INFO Computing data fidelity for 114564 rotations and 2048 images at 31%
2022-04-05 00:14:47,398 DEBUG Corresponding type is already real float64.
2022-04-05 00:14:47,398 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:15:02,297 INFO Computing data fidelity for 114564 rotations and 2048 images at 32%
2022-04-05 00:15:03,104 DEBUG Corresponding type is already real float64.
2022-04-05 00:15:03,105 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:15:18,005 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2022-04-05 00:15:18,838 DEBUG Corresponding type is already real float64.
2022-04-05 00:15:18,839 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:15:33,770 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2022-04-05 00:15:34,567 DEBUG Corresponding type is already real float64.
2022-04-05 00:15:34,567 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:15:49,525 INFO Computing data fidelity for 114564 rotations and 2048 images at 34%
2022-04-05 00:15:50,347 DEBUG Corresponding type is already real float64.
2022-04-05 00:15:50,347 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:16:05,339 INFO Computing data fidelity for 114564 rotations and 2048 images at 35%
2022-04-05 00:16:06,171 DEBUG Corresponding type is already real float64.
2022-04-05 00:16:06,171 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:16:21,188 INFO Computing data fidelity for 114564 rotations and 2048 images at 36%
2022-04-05 00:16:22,011 DEBUG Corresponding type is already real float64.
2022-04-05 00:16:22,011 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:16:37,127 INFO Computing data fidelity for 114564 rotations and 2048 images at 37%
2022-04-05 00:16:37,952 DEBUG Corresponding type is already real float64.
2022-04-05 00:16:37,952 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:16:52,947 INFO Computing data fidelity for 114564 rotations and 2048 images at 38%
2022-04-05 00:16:53,768 DEBUG Corresponding type is already real float64.
2022-04-05 00:16:53,768 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:17:08,776 INFO Computing data fidelity for 114564 rotations and 2048 images at 39%
2022-04-05 00:17:09,600 DEBUG Corresponding type is already real float64.
2022-04-05 00:17:09,600 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:17:24,575 INFO Computing data fidelity for 114564 rotations and 2048 images at 40%
2022-04-05 00:17:25,401 DEBUG Corresponding type is already real float64.
2022-04-05 00:17:25,401 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:17:41,713 INFO Computing data fidelity for 114564 rotations and 2048 images at 41%
2022-04-05 00:17:42,566 DEBUG Corresponding type is already real float64.
2022-04-05 00:17:42,567 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:17:57,594 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2022-04-05 00:17:58,430 DEBUG Corresponding type is already real float64.
2022-04-05 00:17:58,430 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:18:13,352 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2022-04-05 00:18:14,185 DEBUG Corresponding type is already real float64.
2022-04-05 00:18:14,186 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:18:29,060 INFO Computing data fidelity for 114564 rotations and 2048 images at 43%
2022-04-05 00:18:29,885 DEBUG Corresponding type is already real float64.
2022-04-05 00:18:29,885 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:18:44,909 INFO Computing data fidelity for 114564 rotations and 2048 images at 44%
2022-04-05 00:18:45,710 DEBUG Corresponding type is already real float64.
2022-04-05 00:18:45,710 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:19:00,696 INFO Computing data fidelity for 114564 rotations and 2048 images at 45%
2022-04-05 00:19:01,499 DEBUG Corresponding type is already real float64.
2022-04-05 00:19:01,499 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:19:16,354 INFO Computing data fidelity for 114564 rotations and 2048 images at 46%
2022-04-05 00:19:17,167 DEBUG Corresponding type is already real float64.
2022-04-05 00:19:17,167 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:19:31,984 INFO Computing data fidelity for 114564 rotations and 2048 images at 47%
2022-04-05 00:19:32,738 DEBUG Corresponding type is already real float64.
2022-04-05 00:19:32,738 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:19:47,578 INFO Computing data fidelity for 114564 rotations and 2048 images at 48%
2022-04-05 00:19:48,412 DEBUG Corresponding type is already real float64.
2022-04-05 00:19:48,412 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:20:03,295 INFO Computing data fidelity for 114564 rotations and 2048 images at 49%
2022-04-05 00:20:04,119 DEBUG Corresponding type is already real float64.
2022-04-05 00:20:04,119 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:20:18,950 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2022-04-05 00:20:19,795 DEBUG Corresponding type is already real float64.
2022-04-05 00:20:19,795 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:20:34,670 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2022-04-05 00:20:35,509 DEBUG Corresponding type is already real float64.
2022-04-05 00:20:35,509 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:20:50,621 INFO Computing data fidelity for 114564 rotations and 2048 images at 51%
2022-04-05 00:20:51,444 DEBUG Corresponding type is already real float64.
2022-04-05 00:20:51,444 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:21:06,340 INFO Computing data fidelity for 114564 rotations and 2048 images at 52%
2022-04-05 00:21:07,163 DEBUG Corresponding type is already real float64.
2022-04-05 00:21:07,164 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:21:22,098 INFO Computing data fidelity for 114564 rotations and 2048 images at 53%
2022-04-05 00:21:22,927 DEBUG Corresponding type is already real float64.
2022-04-05 00:21:22,927 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:21:37,844 INFO Computing data fidelity for 114564 rotations and 2048 images at 54%
2022-04-05 00:21:38,668 DEBUG Corresponding type is already real float64.
2022-04-05 00:21:38,668 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:21:53,607 INFO Computing data fidelity for 114564 rotations and 2048 images at 55%
2022-04-05 00:21:54,433 DEBUG Corresponding type is already real float64.
2022-04-05 00:21:54,433 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:22:09,164 INFO Computing data fidelity for 114564 rotations and 2048 images at 56%
2022-04-05 00:22:09,994 DEBUG Corresponding type is already real float64.
2022-04-05 00:22:09,995 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:22:24,986 INFO Computing data fidelity for 114564 rotations and 2048 images at 57%
2022-04-05 00:22:25,831 DEBUG Corresponding type is already real float64.
2022-04-05 00:22:25,831 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:22:40,834 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2022-04-05 00:22:41,675 DEBUG Corresponding type is already real float64.
2022-04-05 00:22:41,676 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:22:56,652 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2022-04-05 00:22:57,499 DEBUG Corresponding type is already real float64.
2022-04-05 00:22:57,499 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:23:12,388 INFO Computing data fidelity for 114564 rotations and 2048 images at 59%
2022-04-05 00:23:13,217 DEBUG Corresponding type is already real float64.
2022-04-05 00:23:13,217 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:23:28,111 INFO Computing data fidelity for 114564 rotations and 2048 images at 60%
2022-04-05 00:23:28,940 DEBUG Corresponding type is already real float64.
2022-04-05 00:23:28,940 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:23:43,857 INFO Computing data fidelity for 114564 rotations and 2048 images at 61%
2022-04-05 00:23:44,691 DEBUG Corresponding type is already real float64.
2022-04-05 00:23:44,691 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:23:59,631 INFO Computing data fidelity for 114564 rotations and 2048 images at 62%
2022-04-05 00:24:00,474 DEBUG Corresponding type is already real float64.
2022-04-05 00:24:00,474 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:24:15,503 INFO Computing data fidelity for 114564 rotations and 2048 images at 63%
2022-04-05 00:24:16,348 DEBUG Corresponding type is already real float64.
2022-04-05 00:24:16,349 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:24:31,338 INFO Computing data fidelity for 114564 rotations and 2048 images at 64%
2022-04-05 00:24:32,175 DEBUG Corresponding type is already real float64.
2022-04-05 00:24:32,176 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:24:47,144 INFO Computing data fidelity for 114564 rotations and 2048 images at 65%
2022-04-05 00:24:47,979 DEBUG Corresponding type is already real float64.
2022-04-05 00:24:47,979 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:25:03,018 INFO Computing data fidelity for 114564 rotations and 2048 images at 66%
2022-04-05 00:25:03,844 DEBUG Corresponding type is already real float64.
2022-04-05 00:25:03,844 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:25:18,744 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2022-04-05 00:25:19,580 DEBUG Corresponding type is already real float64.
2022-04-05 00:25:19,580 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:25:34,510 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2022-04-05 00:25:35,357 DEBUG Corresponding type is already real float64.
2022-04-05 00:25:35,357 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:25:50,323 INFO Computing data fidelity for 114564 rotations and 2048 images at 68%
2022-04-05 00:25:51,157 DEBUG Corresponding type is already real float64.
2022-04-05 00:25:51,157 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:26:06,082 INFO Computing data fidelity for 114564 rotations and 2048 images at 69%
2022-04-05 00:26:06,923 DEBUG Corresponding type is already real float64.
2022-04-05 00:26:06,924 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:26:21,894 INFO Computing data fidelity for 114564 rotations and 2048 images at 70%
2022-04-05 00:26:22,726 DEBUG Corresponding type is already real float64.
2022-04-05 00:26:22,726 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:26:37,664 INFO Computing data fidelity for 114564 rotations and 2048 images at 71%
2022-04-05 00:26:38,510 DEBUG Corresponding type is already real float64.
2022-04-05 00:26:38,511 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:26:53,430 INFO Computing data fidelity for 114564 rotations and 2048 images at 72%
2022-04-05 00:26:54,257 DEBUG Corresponding type is already real float64.
2022-04-05 00:26:54,258 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:27:09,177 INFO Computing data fidelity for 114564 rotations and 2048 images at 73%
2022-04-05 00:27:10,006 DEBUG Corresponding type is already real float64.
2022-04-05 00:27:10,006 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:27:24,901 INFO Computing data fidelity for 114564 rotations and 2048 images at 74%
2022-04-05 00:27:25,737 DEBUG Corresponding type is already real float64.
2022-04-05 00:27:25,737 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:27:40,982 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2022-04-05 00:27:41,818 DEBUG Corresponding type is already real float64.
2022-04-05 00:27:41,818 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:27:56,950 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2022-04-05 00:27:57,787 DEBUG Corresponding type is already real float64.
2022-04-05 00:27:57,787 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:28:12,917 INFO Computing data fidelity for 114564 rotations and 2048 images at 76%
2022-04-05 00:28:13,758 DEBUG Corresponding type is already real float64.
2022-04-05 00:28:13,758 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:28:29,833 INFO Computing data fidelity for 114564 rotations and 2048 images at 77%
2022-04-05 00:28:31,096 DEBUG Corresponding type is already real float64.
2022-04-05 00:28:31,096 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:28:46,589 INFO Computing data fidelity for 114564 rotations and 2048 images at 78%
2022-04-05 00:28:47,437 DEBUG Corresponding type is already real float64.
2022-04-05 00:28:47,437 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:29:02,603 INFO Computing data fidelity for 114564 rotations and 2048 images at 79%
2022-04-05 00:29:03,441 DEBUG Corresponding type is already real float64.
2022-04-05 00:29:03,441 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:29:18,558 INFO Computing data fidelity for 114564 rotations and 2048 images at 80%
2022-04-05 00:29:19,393 DEBUG Corresponding type is already real float64.
2022-04-05 00:29:19,393 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:29:34,447 INFO Computing data fidelity for 114564 rotations and 2048 images at 81%
2022-04-05 00:29:35,281 DEBUG Corresponding type is already real float64.
2022-04-05 00:29:35,281 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:29:50,300 INFO Computing data fidelity for 114564 rotations and 2048 images at 82%
2022-04-05 00:29:51,105 DEBUG Corresponding type is already real float64.
2022-04-05 00:29:51,105 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:30:06,116 INFO Computing data fidelity for 114564 rotations and 2048 images at 83%
2022-04-05 00:30:06,931 DEBUG Corresponding type is already real float64.
2022-04-05 00:30:06,931 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:30:21,931 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2022-04-05 00:30:22,737 DEBUG Corresponding type is already real float64.
2022-04-05 00:30:22,737 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:30:37,795 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2022-04-05 00:30:38,594 DEBUG Corresponding type is already real float64.
2022-04-05 00:30:38,594 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:30:53,697 INFO Computing data fidelity for 114564 rotations and 2048 images at 85%
2022-04-05 00:30:54,490 DEBUG Corresponding type is already real float64.
2022-04-05 00:30:54,490 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:31:09,482 INFO Computing data fidelity for 114564 rotations and 2048 images at 86%
2022-04-05 00:31:10,270 DEBUG Corresponding type is already real float64.
2022-04-05 00:31:10,270 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:31:25,036 INFO Computing data fidelity for 114564 rotations and 2048 images at 87%
2022-04-05 00:31:25,856 DEBUG Corresponding type is already real float64.
2022-04-05 00:31:25,857 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:31:40,896 INFO Computing data fidelity for 114564 rotations and 2048 images at 88%
2022-04-05 00:31:41,805 DEBUG Corresponding type is already real float64.
2022-04-05 00:31:41,805 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:31:57,709 INFO Computing data fidelity for 114564 rotations and 2048 images at 89%
2022-04-05 00:31:58,500 DEBUG Corresponding type is already real float64.
2022-04-05 00:31:58,500 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:32:13,496 INFO Computing data fidelity for 114564 rotations and 2048 images at 90%
2022-04-05 00:32:14,302 DEBUG Corresponding type is already real float64.
2022-04-05 00:32:14,302 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:32:29,336 INFO Computing data fidelity for 114564 rotations and 2048 images at 91%
2022-04-05 00:32:30,145 DEBUG Corresponding type is already real float64.
2022-04-05 00:32:30,145 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:32:45,189 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2022-04-05 00:32:45,990 DEBUG Corresponding type is already real float64.
2022-04-05 00:32:45,990 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:33:00,996 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2022-04-05 00:33:01,793 DEBUG Corresponding type is already real float64.
2022-04-05 00:33:01,793 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:33:16,734 INFO Computing data fidelity for 114564 rotations and 2048 images at 93%
2022-04-05 00:33:17,538 DEBUG Corresponding type is already real float64.
2022-04-05 00:33:17,538 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:33:32,538 INFO Computing data fidelity for 114564 rotations and 2048 images at 94%
2022-04-05 00:33:33,354 DEBUG Corresponding type is already real float64.
2022-04-05 00:33:33,354 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:33:47,418 INFO Computing data fidelity for 114564 rotations and 2048 images at 95%
2022-04-05 00:33:48,189 DEBUG Corresponding type is already real float64.
2022-04-05 00:33:48,189 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:34:01,118 INFO Computing data fidelity for 114564 rotations and 2048 images at 96%
2022-04-05 00:34:01,840 DEBUG Corresponding type is already real float64.
2022-04-05 00:34:01,840 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:34:14,770 INFO Computing data fidelity for 114564 rotations and 2048 images at 97%
2022-04-05 00:34:15,503 DEBUG Corresponding type is already real float64.
2022-04-05 00:34:15,504 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:34:28,385 INFO Computing data fidelity for 114564 rotations and 2048 images at 98%
2022-04-05 00:34:29,113 DEBUG Corresponding type is already real float64.
2022-04-05 00:34:29,113 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:34:42,249 INFO Computing data fidelity for 114564 rotations and 2048 images at 99%
2022-04-05 00:34:42,721 DEBUG Corresponding type is already real float64.
2022-04-05 00:34:42,721 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:34:53,906 INFO Computing data fidelity for 114564 rotations and 2048 images at 100%
2022-04-05 00:34:55,804 INFO Do lambda update step
2022-04-05 00:35:18,711 INFO Do rots update step
2022-04-05 00:35:19,506 INFO Projecting 2048 vectors onto 114564-simplex at 2%
2022-04-05 00:35:20,134 INFO Projecting 2048 vectors onto 114564-simplex at 4%
2022-04-05 00:35:20,747 INFO Projecting 2048 vectors onto 114564-simplex at 7%
2022-04-05 00:35:21,352 INFO Projecting 2048 vectors onto 114564-simplex at 9%
2022-04-05 00:35:21,957 INFO Projecting 2048 vectors onto 114564-simplex at 12%
2022-04-05 00:35:22,565 INFO Projecting 2048 vectors onto 114564-simplex at 14%
2022-04-05 00:35:23,202 INFO Projecting 2048 vectors onto 114564-simplex at 17%
2022-04-05 00:35:23,853 INFO Projecting 2048 vectors onto 114564-simplex at 19%
2022-04-05 00:35:24,507 INFO Projecting 2048 vectors onto 114564-simplex at 21%
2022-04-05 00:35:25,147 INFO Projecting 2048 vectors onto 114564-simplex at 24%
2022-04-05 00:35:25,951 INFO Projecting 2048 vectors onto 114564-simplex at 26%
2022-04-05 00:35:26,567 INFO Projecting 2048 vectors onto 114564-simplex at 29%
2022-04-05 00:35:27,197 INFO Projecting 2048 vectors onto 114564-simplex at 31%
2022-04-05 00:35:27,836 INFO Projecting 2048 vectors onto 114564-simplex at 34%
2022-04-05 00:35:28,532 INFO Projecting 2048 vectors onto 114564-simplex at 36%
2022-04-05 00:35:29,242 INFO Projecting 2048 vectors onto 114564-simplex at 39%
2022-04-05 00:35:29,967 INFO Projecting 2048 vectors onto 114564-simplex at 41%
2022-04-05 00:35:30,649 INFO Projecting 2048 vectors onto 114564-simplex at 43%
2022-04-05 00:35:31,358 INFO Projecting 2048 vectors onto 114564-simplex at 46%
2022-04-05 00:35:32,082 INFO Projecting 2048 vectors onto 114564-simplex at 48%
2022-04-05 00:35:32,992 INFO Projecting 2048 vectors onto 114564-simplex at 51%
2022-04-05 00:35:33,691 INFO Projecting 2048 vectors onto 114564-simplex at 53%
2022-04-05 00:35:34,387 INFO Projecting 2048 vectors onto 114564-simplex at 56%
2022-04-05 00:35:35,077 INFO Projecting 2048 vectors onto 114564-simplex at 58%
2022-04-05 00:35:35,780 INFO Projecting 2048 vectors onto 114564-simplex at 61%
2022-04-05 00:35:36,476 INFO Projecting 2048 vectors onto 114564-simplex at 63%
2022-04-05 00:35:37,187 INFO Projecting 2048 vectors onto 114564-simplex at 65%
2022-04-05 00:35:37,889 INFO Projecting 2048 vectors onto 114564-simplex at 68%
2022-04-05 00:35:38,595 INFO Projecting 2048 vectors onto 114564-simplex at 70%
2022-04-05 00:35:39,289 INFO Projecting 2048 vectors onto 114564-simplex at 73%
2022-04-05 00:35:40,195 INFO Projecting 2048 vectors onto 114564-simplex at 75%
2022-04-05 00:35:40,898 INFO Projecting 2048 vectors onto 114564-simplex at 78%
2022-04-05 00:35:41,611 INFO Projecting 2048 vectors onto 114564-simplex at 80%
2022-04-05 00:35:42,341 INFO Projecting 2048 vectors onto 114564-simplex at 83%
2022-04-05 00:35:43,059 INFO Projecting 2048 vectors onto 114564-simplex at 85%
2022-04-05 00:35:43,765 INFO Projecting 2048 vectors onto 114564-simplex at 87%
2022-04-05 00:35:44,462 INFO Projecting 2048 vectors onto 114564-simplex at 90%
2022-04-05 00:35:45,167 INFO Projecting 2048 vectors onto 114564-simplex at 92%
2022-04-05 00:35:45,853 INFO Projecting 2048 vectors onto 114564-simplex at 95%
2022-04-05 00:35:46,535 INFO Projecting 2048 vectors onto 114564-simplex at 97%
2022-04-05 00:35:47,199 INFO Projecting 2048 vectors onto 114564-simplex at 100%
2022-04-05 00:35:48,710 INFO Computing 50 means of 585 points in at most 20 steps...
2022-04-05 00:35:48,809 INFO Computing 2048 means at 2%
2022-04-05 00:35:48,900 INFO Computing 50 means of 564 points in at most 20 steps...
2022-04-05 00:35:48,971 INFO Computing 2048 means at 4%
2022-04-05 00:35:49,060 INFO Computing 50 means of 594 points in at most 20 steps...
2022-04-05 00:35:49,136 INFO Computing 2048 means at 7%
2022-04-05 00:35:49,224 INFO Computing 50 means of 555 points in at most 20 steps...
2022-04-05 00:35:49,293 INFO Computing 2048 means at 9%
2022-04-05 00:35:49,383 INFO Computing 50 means of 577 points in at most 20 steps...
2022-04-05 00:35:49,453 INFO Computing 2048 means at 12%
2022-04-05 00:35:49,544 INFO Computing 50 means of 578 points in at most 20 steps...
2022-04-05 00:35:49,614 INFO Computing 2048 means at 14%
2022-04-05 00:35:49,701 INFO Computing 50 means of 594 points in at most 20 steps...
2022-04-05 00:35:49,773 INFO Computing 2048 means at 17%
2022-04-05 00:35:49,858 INFO Computing 50 means of 591 points in at most 20 steps...
2022-04-05 00:35:49,926 INFO Computing 2048 means at 19%
2022-04-05 00:35:50,009 INFO Computing 50 means of 599 points in at most 20 steps...
2022-04-05 00:35:50,084 INFO Computing 2048 means at 21%
2022-04-05 00:35:50,176 INFO Computing 50 means of 593 points in at most 20 steps...
2022-04-05 00:35:50,242 INFO Computing 2048 means at 24%
2022-04-05 00:35:50,347 INFO Computing 50 means of 573 points in at most 20 steps...
2022-04-05 00:35:50,418 INFO Computing 2048 means at 26%
2022-04-05 00:35:50,505 INFO Computing 50 means of 569 points in at most 20 steps...
2022-04-05 00:35:50,572 INFO Computing 2048 means at 29%
2022-04-05 00:35:50,659 INFO Computing 50 means of 584 points in at most 20 steps...
2022-04-05 00:35:50,728 INFO Computing 2048 means at 31%
2022-04-05 00:35:50,817 INFO Computing 50 means of 578 points in at most 20 steps...
2022-04-05 00:35:50,883 INFO Computing 2048 means at 34%
2022-04-05 00:35:50,967 INFO Computing 50 means of 577 points in at most 20 steps...
2022-04-05 00:35:51,033 INFO Computing 2048 means at 36%
2022-04-05 00:35:51,120 INFO Computing 50 means of 580 points in at most 20 steps...
2022-04-05 00:35:51,185 INFO Computing 2048 means at 39%
2022-04-05 00:35:51,272 INFO Computing 50 means of 580 points in at most 20 steps...
2022-04-05 00:35:51,339 INFO Computing 2048 means at 41%
2022-04-05 00:35:51,421 INFO Computing 50 means of 589 points in at most 20 steps...
2022-04-05 00:35:51,490 INFO Computing 2048 means at 43%
2022-04-05 00:35:51,573 INFO Computing 50 means of 586 points in at most 20 steps...
2022-04-05 00:35:51,641 INFO Computing 2048 means at 46%
2022-04-05 00:35:51,728 INFO Computing 50 means of 604 points in at most 20 steps...
2022-04-05 00:35:51,799 INFO Computing 2048 means at 48%
2022-04-05 00:35:51,904 INFO Computing 50 means of 594 points in at most 20 steps...
2022-04-05 00:35:51,970 INFO Computing 2048 means at 51%
2022-04-05 00:35:52,057 INFO Computing 50 means of 584 points in at most 20 steps...
2022-04-05 00:35:52,122 INFO Computing 2048 means at 53%
2022-04-05 00:35:52,204 INFO Computing 50 means of 588 points in at most 20 steps...
2022-04-05 00:35:52,272 INFO Computing 2048 means at 56%
2022-04-05 00:35:52,355 INFO Computing 50 means of 588 points in at most 20 steps...
2022-04-05 00:35:52,421 INFO Computing 2048 means at 58%
2022-04-05 00:35:52,507 INFO Computing 50 means of 590 points in at most 20 steps...
2022-04-05 00:35:52,571 INFO Computing 2048 means at 61%
2022-04-05 00:35:52,656 INFO Computing 50 means of 592 points in at most 20 steps...
2022-04-05 00:35:52,724 INFO Computing 2048 means at 63%
2022-04-05 00:35:52,810 INFO Computing 50 means of 567 points in at most 20 steps...
2022-04-05 00:35:52,878 INFO Computing 2048 means at 65%
2022-04-05 00:35:52,963 INFO Computing 50 means of 590 points in at most 20 steps...
2022-04-05 00:35:53,035 INFO Computing 2048 means at 68%
2022-04-05 00:35:53,121 INFO Computing 50 means of 588 points in at most 20 steps...
2022-04-05 00:35:53,191 INFO Computing 2048 means at 70%
2022-04-05 00:35:53,276 INFO Computing 50 means of 599 points in at most 20 steps...
2022-04-05 00:35:53,344 INFO Computing 2048 means at 73%
2022-04-05 00:35:53,443 INFO Computing 50 means of 598 points in at most 20 steps...
2022-04-05 00:35:53,513 INFO Computing 2048 means at 75%
2022-04-05 00:35:53,599 INFO Computing 50 means of 604 points in at most 20 steps...
2022-04-05 00:35:53,667 INFO Computing 2048 means at 78%
2022-04-05 00:35:53,757 INFO Computing 50 means of 570 points in at most 20 steps...
2022-04-05 00:35:53,822 INFO Computing 2048 means at 80%
2022-04-05 00:35:53,909 INFO Computing 50 means of 604 points in at most 20 steps...
2022-04-05 00:35:53,977 INFO Computing 2048 means at 83%
2022-04-05 00:35:54,063 INFO Computing 50 means of 584 points in at most 20 steps...
2022-04-05 00:35:54,131 INFO Computing 2048 means at 85%
2022-04-05 00:35:54,214 INFO Computing 50 means of 584 points in at most 20 steps...
2022-04-05 00:35:54,284 INFO Computing 2048 means at 87%
2022-04-05 00:35:54,369 INFO Computing 50 means of 596 points in at most 20 steps...
2022-04-05 00:35:54,438 INFO Computing 2048 means at 90%
2022-04-05 00:35:54,522 INFO Computing 50 means of 587 points in at most 20 steps...
2022-04-05 00:35:54,590 INFO Computing 2048 means at 92%
2022-04-05 00:35:54,679 INFO Computing 50 means of 565 points in at most 20 steps...
2022-04-05 00:35:54,744 INFO Computing 2048 means at 95%
2022-04-05 00:35:54,829 INFO Computing 50 means of 574 points in at most 20 steps...
2022-04-05 00:35:54,895 INFO Computing 2048 means at 97%
2022-04-05 00:35:54,979 INFO Computing 48 means of 570 points in at most 20 steps...
2022-04-05 00:35:55,043 INFO Computing 2048 means at 100%
2022-04-05 00:35:58,856 INFO Do vol update step
2022-04-05 00:35:58,858 INFO Compute adjoint forward mapping on the images
2022-04-05 00:36:00,549 DEBUG Corresponding type is already complex complex128.
2022-04-05 00:36:03,059 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2022-04-05 00:36:03,073 INFO Computing adjoint forward mappings from 2048 rotations at 50%
2022-04-05 00:36:04,663 DEBUG Corresponding type is already complex complex128.
2022-04-05 00:36:07,113 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2022-04-05 00:36:07,124 INFO Computing adjoint forward mappings from 2048 rotations at 100%
2022-04-05 00:36:08,043 DEBUG Corresponding type is already real float64.
2022-04-05 00:36:08,043 DEBUG anufft passed real_type for signal, converting
2022-04-05 00:36:14,238 INFO Computing kernel from 2048 rotations at 50%
2022-04-05 00:36:15,075 DEBUG Corresponding type is already real float64.
2022-04-05 00:36:15,075 DEBUG anufft passed real_type for signal, converting
2022-04-05 00:36:21,360 INFO Computing kernel from 2048 rotations at 100%
2022-04-05 00:36:21,361 INFO Computing non-centered Fourier Transform
2022-04-05 00:36:21,531 INFO Add ramp filter regularisation
2022-04-05 00:36:25,504 INFO Update data_discrepancies
2022-04-05 00:36:25,505 INFO Computing \|Ag.u - f_i\|^2
2022-04-05 00:36:26,365 DEBUG Corresponding type is already real float64.
2022-04-05 00:36:26,365 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:36:41,161 INFO Computing data fidelity for 114564 rotations and 2048 images at 0%
2022-04-05 00:36:41,910 DEBUG Corresponding type is already real float64.
2022-04-05 00:36:41,910 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:36:56,346 INFO Computing data fidelity for 114564 rotations and 2048 images at 1%
2022-04-05 00:36:57,086 DEBUG Corresponding type is already real float64.
2022-04-05 00:36:57,086 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:37:10,963 INFO Computing data fidelity for 114564 rotations and 2048 images at 2%
2022-04-05 00:37:11,659 DEBUG Corresponding type is already real float64.
2022-04-05 00:37:11,659 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:37:24,748 INFO Computing data fidelity for 114564 rotations and 2048 images at 3%
2022-04-05 00:37:25,447 DEBUG Corresponding type is already real float64.
2022-04-05 00:37:25,447 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:37:38,581 INFO Computing data fidelity for 114564 rotations and 2048 images at 4%
2022-04-05 00:37:39,300 DEBUG Corresponding type is already real float64.
2022-04-05 00:37:39,300 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:37:52,993 INFO Computing data fidelity for 114564 rotations and 2048 images at 5%
2022-04-05 00:37:53,724 DEBUG Corresponding type is already real float64.
2022-04-05 00:37:53,724 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:38:07,258 INFO Computing data fidelity for 114564 rotations and 2048 images at 6%
2022-04-05 00:38:07,969 DEBUG Corresponding type is already real float64.
2022-04-05 00:38:07,969 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:38:21,482 INFO Computing data fidelity for 114564 rotations and 2048 images at 7%
2022-04-05 00:38:22,197 DEBUG Corresponding type is already real float64.
2022-04-05 00:38:22,197 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:38:35,634 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2022-04-05 00:38:36,380 DEBUG Corresponding type is already real float64.
2022-04-05 00:38:36,380 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:38:49,541 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2022-04-05 00:38:50,234 DEBUG Corresponding type is already real float64.
2022-04-05 00:38:50,234 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:39:03,424 INFO Computing data fidelity for 114564 rotations and 2048 images at 9%
2022-04-05 00:39:04,131 DEBUG Corresponding type is already real float64.
2022-04-05 00:39:04,131 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:39:17,358 INFO Computing data fidelity for 114564 rotations and 2048 images at 10%
2022-04-05 00:39:18,065 DEBUG Corresponding type is already real float64.
2022-04-05 00:39:18,065 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:39:30,928 INFO Computing data fidelity for 114564 rotations and 2048 images at 11%
2022-04-05 00:39:31,621 DEBUG Corresponding type is already real float64.
2022-04-05 00:39:31,621 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:39:44,627 INFO Computing data fidelity for 114564 rotations and 2048 images at 12%
2022-04-05 00:39:45,323 DEBUG Corresponding type is already real float64.
2022-04-05 00:39:45,323 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:39:58,230 INFO Computing data fidelity for 114564 rotations and 2048 images at 13%
2022-04-05 00:39:58,932 DEBUG Corresponding type is already real float64.
2022-04-05 00:39:58,932 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:40:11,775 INFO Computing data fidelity for 114564 rotations and 2048 images at 14%
2022-04-05 00:40:12,490 DEBUG Corresponding type is already real float64.
2022-04-05 00:40:12,490 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:40:25,292 INFO Computing data fidelity for 114564 rotations and 2048 images at 15%
2022-04-05 00:40:25,997 DEBUG Corresponding type is already real float64.
2022-04-05 00:40:25,997 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:40:38,810 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2022-04-05 00:40:39,520 DEBUG Corresponding type is already real float64.
2022-04-05 00:40:39,520 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:40:52,445 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2022-04-05 00:40:53,142 DEBUG Corresponding type is already real float64.
2022-04-05 00:40:53,142 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:41:05,969 INFO Computing data fidelity for 114564 rotations and 2048 images at 17%
2022-04-05 00:41:06,678 DEBUG Corresponding type is already real float64.
2022-04-05 00:41:06,679 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:41:19,509 INFO Computing data fidelity for 114564 rotations and 2048 images at 18%
2022-04-05 00:41:20,209 DEBUG Corresponding type is already real float64.
2022-04-05 00:41:20,209 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:41:33,414 INFO Computing data fidelity for 114564 rotations and 2048 images at 19%
2022-04-05 00:41:34,135 DEBUG Corresponding type is already real float64.
2022-04-05 00:41:34,135 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:41:48,492 INFO Computing data fidelity for 114564 rotations and 2048 images at 20%
2022-04-05 00:41:49,214 DEBUG Corresponding type is already real float64.
2022-04-05 00:41:49,214 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:42:02,486 INFO Computing data fidelity for 114564 rotations and 2048 images at 21%
2022-04-05 00:42:03,189 DEBUG Corresponding type is already real float64.
2022-04-05 00:42:03,189 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:42:16,181 INFO Computing data fidelity for 114564 rotations and 2048 images at 22%
2022-04-05 00:42:16,894 DEBUG Corresponding type is already real float64.
2022-04-05 00:42:16,894 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:42:29,746 INFO Computing data fidelity for 114564 rotations and 2048 images at 23%
2022-04-05 00:42:30,471 DEBUG Corresponding type is already real float64.
2022-04-05 00:42:30,472 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:42:43,472 INFO Computing data fidelity for 114564 rotations and 2048 images at 24%
2022-04-05 00:42:44,184 DEBUG Corresponding type is already real float64.
2022-04-05 00:42:44,184 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:42:57,176 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2022-04-05 00:42:57,889 DEBUG Corresponding type is already real float64.
2022-04-05 00:42:57,889 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:43:10,824 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2022-04-05 00:43:11,549 DEBUG Corresponding type is already real float64.
2022-04-05 00:43:11,550 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:43:24,541 INFO Computing data fidelity for 114564 rotations and 2048 images at 26%
2022-04-05 00:43:25,254 DEBUG Corresponding type is already real float64.
2022-04-05 00:43:25,254 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:43:38,143 INFO Computing data fidelity for 114564 rotations and 2048 images at 27%
2022-04-05 00:43:38,852 DEBUG Corresponding type is already real float64.
2022-04-05 00:43:38,852 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:43:51,842 INFO Computing data fidelity for 114564 rotations and 2048 images at 28%
2022-04-05 00:43:52,551 DEBUG Corresponding type is already real float64.
2022-04-05 00:43:52,551 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:44:05,516 INFO Computing data fidelity for 114564 rotations and 2048 images at 29%
2022-04-05 00:44:06,243 DEBUG Corresponding type is already real float64.
2022-04-05 00:44:06,243 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:44:19,156 INFO Computing data fidelity for 114564 rotations and 2048 images at 30%
2022-04-05 00:44:19,870 DEBUG Corresponding type is already real float64.
2022-04-05 00:44:19,870 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:44:32,727 INFO Computing data fidelity for 114564 rotations and 2048 images at 31%
2022-04-05 00:44:33,464 DEBUG Corresponding type is already real float64.
2022-04-05 00:44:33,464 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:44:46,570 INFO Computing data fidelity for 114564 rotations and 2048 images at 32%
2022-04-05 00:44:47,287 DEBUG Corresponding type is already real float64.
2022-04-05 00:44:47,287 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:45:00,318 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2022-04-05 00:45:01,049 DEBUG Corresponding type is already real float64.
2022-04-05 00:45:01,049 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:45:14,137 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2022-04-05 00:45:14,880 DEBUG Corresponding type is already real float64.
2022-04-05 00:45:14,880 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:45:27,735 INFO Computing data fidelity for 114564 rotations and 2048 images at 34%
2022-04-05 00:45:28,454 DEBUG Corresponding type is already real float64.
2022-04-05 00:45:28,454 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:45:41,455 INFO Computing data fidelity for 114564 rotations and 2048 images at 35%
2022-04-05 00:45:42,176 DEBUG Corresponding type is already real float64.
2022-04-05 00:45:42,176 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:45:55,108 INFO Computing data fidelity for 114564 rotations and 2048 images at 36%
2022-04-05 00:45:55,828 DEBUG Corresponding type is already real float64.
2022-04-05 00:45:55,828 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:46:08,777 INFO Computing data fidelity for 114564 rotations and 2048 images at 37%
2022-04-05 00:46:09,505 DEBUG Corresponding type is already real float64.
2022-04-05 00:46:09,505 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:46:22,439 INFO Computing data fidelity for 114564 rotations and 2048 images at 38%
2022-04-05 00:46:23,159 DEBUG Corresponding type is already real float64.
2022-04-05 00:46:23,159 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:46:36,048 INFO Computing data fidelity for 114564 rotations and 2048 images at 39%
2022-04-05 00:46:36,768 DEBUG Corresponding type is already real float64.
2022-04-05 00:46:36,768 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:46:49,709 INFO Computing data fidelity for 114564 rotations and 2048 images at 40%
2022-04-05 00:46:50,423 DEBUG Corresponding type is already real float64.
2022-04-05 00:46:50,423 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:47:03,450 INFO Computing data fidelity for 114564 rotations and 2048 images at 41%
2022-04-05 00:47:04,174 DEBUG Corresponding type is already real float64.
2022-04-05 00:47:04,175 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:47:17,177 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2022-04-05 00:47:17,902 DEBUG Corresponding type is already real float64.
2022-04-05 00:47:17,902 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:47:30,788 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2022-04-05 00:47:31,525 DEBUG Corresponding type is already real float64.
2022-04-05 00:47:31,525 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:47:44,649 INFO Computing data fidelity for 114564 rotations and 2048 images at 43%
2022-04-05 00:47:45,369 DEBUG Corresponding type is already real float64.
2022-04-05 00:47:45,369 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:47:58,658 INFO Computing data fidelity for 114564 rotations and 2048 images at 44%
2022-04-05 00:47:59,375 DEBUG Corresponding type is already real float64.
2022-04-05 00:47:59,375 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:48:12,295 INFO Computing data fidelity for 114564 rotations and 2048 images at 45%
2022-04-05 00:48:13,030 DEBUG Corresponding type is already real float64.
2022-04-05 00:48:13,030 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:48:25,949 INFO Computing data fidelity for 114564 rotations and 2048 images at 46%
2022-04-05 00:48:26,666 DEBUG Corresponding type is already real float64.
2022-04-05 00:48:26,666 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:48:39,608 INFO Computing data fidelity for 114564 rotations and 2048 images at 47%
2022-04-05 00:48:40,332 DEBUG Corresponding type is already real float64.
2022-04-05 00:48:40,333 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:48:53,302 INFO Computing data fidelity for 114564 rotations and 2048 images at 48%
2022-04-05 00:48:54,033 DEBUG Corresponding type is already real float64.
2022-04-05 00:48:54,034 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:49:07,018 INFO Computing data fidelity for 114564 rotations and 2048 images at 49%
2022-04-05 00:49:07,743 DEBUG Corresponding type is already real float64.
2022-04-05 00:49:07,744 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:49:20,790 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2022-04-05 00:49:21,512 DEBUG Corresponding type is already real float64.
2022-04-05 00:49:21,512 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:49:35,035 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2022-04-05 00:49:35,754 DEBUG Corresponding type is already real float64.
2022-04-05 00:49:35,754 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:49:48,785 INFO Computing data fidelity for 114564 rotations and 2048 images at 51%
2022-04-05 00:49:49,509 DEBUG Corresponding type is already real float64.
2022-04-05 00:49:49,509 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:50:02,463 INFO Computing data fidelity for 114564 rotations and 2048 images at 52%
2022-04-05 00:50:03,207 DEBUG Corresponding type is already real float64.
2022-04-05 00:50:03,207 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:50:16,101 INFO Computing data fidelity for 114564 rotations and 2048 images at 53%
2022-04-05 00:50:16,824 DEBUG Corresponding type is already real float64.
2022-04-05 00:50:16,824 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:50:29,784 INFO Computing data fidelity for 114564 rotations and 2048 images at 54%
2022-04-05 00:50:30,521 DEBUG Corresponding type is already real float64.
2022-04-05 00:50:30,521 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:50:43,560 INFO Computing data fidelity for 114564 rotations and 2048 images at 55%
2022-04-05 00:50:44,283 DEBUG Corresponding type is already real float64.
2022-04-05 00:50:44,283 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:50:57,213 INFO Computing data fidelity for 114564 rotations and 2048 images at 56%
2022-04-05 00:50:57,942 DEBUG Corresponding type is already real float64.
2022-04-05 00:50:57,943 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:51:10,885 INFO Computing data fidelity for 114564 rotations and 2048 images at 57%
2022-04-05 00:51:11,608 DEBUG Corresponding type is already real float64.
2022-04-05 00:51:11,608 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:51:24,539 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2022-04-05 00:51:25,259 DEBUG Corresponding type is already real float64.
2022-04-05 00:51:25,259 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:51:38,250 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2022-04-05 00:51:38,970 DEBUG Corresponding type is already real float64.
2022-04-05 00:51:38,970 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:51:51,876 INFO Computing data fidelity for 114564 rotations and 2048 images at 59%
2022-04-05 00:51:52,594 DEBUG Corresponding type is already real float64.
2022-04-05 00:51:52,594 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:52:05,519 INFO Computing data fidelity for 114564 rotations and 2048 images at 60%
2022-04-05 00:52:06,239 DEBUG Corresponding type is already real float64.
2022-04-05 00:52:06,239 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:52:19,158 INFO Computing data fidelity for 114564 rotations and 2048 images at 61%
2022-04-05 00:52:19,878 DEBUG Corresponding type is already real float64.
2022-04-05 00:52:19,878 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:52:32,771 INFO Computing data fidelity for 114564 rotations and 2048 images at 62%
2022-04-05 00:52:33,498 DEBUG Corresponding type is already real float64.
2022-04-05 00:52:33,498 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:52:46,504 INFO Computing data fidelity for 114564 rotations and 2048 images at 63%
2022-04-05 00:52:47,225 DEBUG Corresponding type is already real float64.
2022-04-05 00:52:47,226 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:53:00,190 INFO Computing data fidelity for 114564 rotations and 2048 images at 64%
2022-04-05 00:53:00,913 DEBUG Corresponding type is already real float64.
2022-04-05 00:53:00,913 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:53:13,805 INFO Computing data fidelity for 114564 rotations and 2048 images at 65%
2022-04-05 00:53:14,540 DEBUG Corresponding type is already real float64.
2022-04-05 00:53:14,540 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:53:27,436 INFO Computing data fidelity for 114564 rotations and 2048 images at 66%
2022-04-05 00:53:28,170 DEBUG Corresponding type is already real float64.
2022-04-05 00:53:28,170 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:53:41,123 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2022-04-05 00:53:41,845 DEBUG Corresponding type is already real float64.
2022-04-05 00:53:41,845 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:53:54,894 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2022-04-05 00:53:55,626 DEBUG Corresponding type is already real float64.
2022-04-05 00:53:55,626 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:54:08,578 INFO Computing data fidelity for 114564 rotations and 2048 images at 68%
2022-04-05 00:54:09,325 DEBUG Corresponding type is already real float64.
2022-04-05 00:54:09,326 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:54:22,332 INFO Computing data fidelity for 114564 rotations and 2048 images at 69%
2022-04-05 00:54:23,048 DEBUG Corresponding type is already real float64.
2022-04-05 00:54:23,048 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:54:36,040 INFO Computing data fidelity for 114564 rotations and 2048 images at 70%
2022-04-05 00:54:36,757 DEBUG Corresponding type is already real float64.
2022-04-05 00:54:36,757 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:54:50,493 INFO Computing data fidelity for 114564 rotations and 2048 images at 71%
2022-04-05 00:54:51,237 DEBUG Corresponding type is already real float64.
2022-04-05 00:54:51,237 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:55:04,957 INFO Computing data fidelity for 114564 rotations and 2048 images at 72%
2022-04-05 00:55:05,683 DEBUG Corresponding type is already real float64.
2022-04-05 00:55:05,683 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:55:18,629 INFO Computing data fidelity for 114564 rotations and 2048 images at 73%
2022-04-05 00:55:19,349 DEBUG Corresponding type is already real float64.
2022-04-05 00:55:19,349 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:55:32,277 INFO Computing data fidelity for 114564 rotations and 2048 images at 74%
2022-04-05 00:55:33,020 DEBUG Corresponding type is already real float64.
2022-04-05 00:55:33,020 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:55:46,182 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2022-04-05 00:55:46,916 DEBUG Corresponding type is already real float64.
2022-04-05 00:55:46,917 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:55:59,876 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2022-04-05 00:56:00,604 DEBUG Corresponding type is already real float64.
2022-04-05 00:56:00,604 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:56:13,585 INFO Computing data fidelity for 114564 rotations and 2048 images at 76%
2022-04-05 00:56:14,308 DEBUG Corresponding type is already real float64.
2022-04-05 00:56:14,308 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:56:27,497 INFO Computing data fidelity for 114564 rotations and 2048 images at 77%
2022-04-05 00:56:28,229 DEBUG Corresponding type is already real float64.
2022-04-05 00:56:28,229 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:56:41,178 INFO Computing data fidelity for 114564 rotations and 2048 images at 78%
2022-04-05 00:56:41,940 DEBUG Corresponding type is already real float64.
2022-04-05 00:56:41,940 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:56:54,914 INFO Computing data fidelity for 114564 rotations and 2048 images at 79%
2022-04-05 00:56:55,646 DEBUG Corresponding type is already real float64.
2022-04-05 00:56:55,646 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:57:08,587 INFO Computing data fidelity for 114564 rotations and 2048 images at 80%
2022-04-05 00:57:09,319 DEBUG Corresponding type is already real float64.
2022-04-05 00:57:09,319 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:57:22,246 INFO Computing data fidelity for 114564 rotations and 2048 images at 81%
2022-04-05 00:57:22,974 DEBUG Corresponding type is already real float64.
2022-04-05 00:57:22,974 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:57:35,846 INFO Computing data fidelity for 114564 rotations and 2048 images at 82%
2022-04-05 00:57:36,561 DEBUG Corresponding type is already real float64.
2022-04-05 00:57:36,561 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:57:49,638 INFO Computing data fidelity for 114564 rotations and 2048 images at 83%
2022-04-05 00:57:50,363 DEBUG Corresponding type is already real float64.
2022-04-05 00:57:50,363 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:58:03,431 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2022-04-05 00:58:04,173 DEBUG Corresponding type is already real float64.
2022-04-05 00:58:04,173 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:58:17,113 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2022-04-05 00:58:17,830 DEBUG Corresponding type is already real float64.
2022-04-05 00:58:17,830 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:58:30,761 INFO Computing data fidelity for 114564 rotations and 2048 images at 85%
2022-04-05 00:58:31,481 DEBUG Corresponding type is already real float64.
2022-04-05 00:58:31,481 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:58:44,472 INFO Computing data fidelity for 114564 rotations and 2048 images at 86%
2022-04-05 00:58:45,208 DEBUG Corresponding type is already real float64.
2022-04-05 00:58:45,208 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:58:58,129 INFO Computing data fidelity for 114564 rotations and 2048 images at 87%
2022-04-05 00:58:58,856 DEBUG Corresponding type is already real float64.
2022-04-05 00:58:58,856 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:59:11,762 INFO Computing data fidelity for 114564 rotations and 2048 images at 88%
2022-04-05 00:59:12,482 DEBUG Corresponding type is already real float64.
2022-04-05 00:59:12,483 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:59:25,669 INFO Computing data fidelity for 114564 rotations and 2048 images at 89%
2022-04-05 00:59:26,399 DEBUG Corresponding type is already real float64.
2022-04-05 00:59:26,399 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:59:39,437 INFO Computing data fidelity for 114564 rotations and 2048 images at 90%
2022-04-05 00:59:40,162 DEBUG Corresponding type is already real float64.
2022-04-05 00:59:40,162 DEBUG nufft passed real_type for signal, converting
2022-04-05 00:59:53,130 INFO Computing data fidelity for 114564 rotations and 2048 images at 91%
2022-04-05 00:59:53,848 DEBUG Corresponding type is already real float64.
2022-04-05 00:59:53,848 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:00:06,784 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2022-04-05 01:00:07,517 DEBUG Corresponding type is already real float64.
2022-04-05 01:00:07,517 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:00:20,447 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2022-04-05 01:00:21,184 DEBUG Corresponding type is already real float64.
2022-04-05 01:00:21,184 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:00:34,107 INFO Computing data fidelity for 114564 rotations and 2048 images at 93%
2022-04-05 01:00:34,836 DEBUG Corresponding type is already real float64.
2022-04-05 01:00:34,837 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:00:47,862 INFO Computing data fidelity for 114564 rotations and 2048 images at 94%
2022-04-05 01:00:48,587 DEBUG Corresponding type is already real float64.
2022-04-05 01:00:48,587 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:01:01,630 INFO Computing data fidelity for 114564 rotations and 2048 images at 95%
2022-04-05 01:01:02,352 DEBUG Corresponding type is already real float64.
2022-04-05 01:01:02,352 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:01:15,236 INFO Computing data fidelity for 114564 rotations and 2048 images at 96%
2022-04-05 01:01:15,966 DEBUG Corresponding type is already real float64.
2022-04-05 01:01:15,966 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:01:28,848 INFO Computing data fidelity for 114564 rotations and 2048 images at 97%
2022-04-05 01:01:29,570 DEBUG Corresponding type is already real float64.
2022-04-05 01:01:29,570 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:01:42,469 INFO Computing data fidelity for 114564 rotations and 2048 images at 98%
2022-04-05 01:01:43,192 DEBUG Corresponding type is already real float64.
2022-04-05 01:01:43,192 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:01:56,358 INFO Computing data fidelity for 114564 rotations and 2048 images at 99%
2022-04-05 01:01:56,791 DEBUG Corresponding type is already real float64.
2022-04-05 01:01:56,792 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:02:07,956 INFO Computing data fidelity for 114564 rotations and 2048 images at 100%
2022-04-05 01:02:09,604 INFO Do lambda update step
2022-04-05 01:02:32,907 INFO Do rots update step
2022-04-05 01:02:33,747 INFO Projecting 2048 vectors onto 114564-simplex at 2%
2022-04-05 01:02:34,381 INFO Projecting 2048 vectors onto 114564-simplex at 4%
2022-04-05 01:02:34,993 INFO Projecting 2048 vectors onto 114564-simplex at 7%
2022-04-05 01:02:35,602 INFO Projecting 2048 vectors onto 114564-simplex at 9%
2022-04-05 01:02:36,211 INFO Projecting 2048 vectors onto 114564-simplex at 12%
2022-04-05 01:02:36,829 INFO Projecting 2048 vectors onto 114564-simplex at 14%
2022-04-05 01:02:37,436 INFO Projecting 2048 vectors onto 114564-simplex at 17%
2022-04-05 01:02:38,047 INFO Projecting 2048 vectors onto 114564-simplex at 19%
2022-04-05 01:02:38,663 INFO Projecting 2048 vectors onto 114564-simplex at 21%
2022-04-05 01:02:39,289 INFO Projecting 2048 vectors onto 114564-simplex at 24%
2022-04-05 01:02:40,075 INFO Projecting 2048 vectors onto 114564-simplex at 26%
2022-04-05 01:02:40,769 INFO Projecting 2048 vectors onto 114564-simplex at 29%
2022-04-05 01:02:41,473 INFO Projecting 2048 vectors onto 114564-simplex at 31%
2022-04-05 01:02:42,182 INFO Projecting 2048 vectors onto 114564-simplex at 34%
2022-04-05 01:02:42,895 INFO Projecting 2048 vectors onto 114564-simplex at 36%
2022-04-05 01:02:43,604 INFO Projecting 2048 vectors onto 114564-simplex at 39%
2022-04-05 01:02:44,319 INFO Projecting 2048 vectors onto 114564-simplex at 41%
2022-04-05 01:02:45,099 INFO Projecting 2048 vectors onto 114564-simplex at 43%
2022-04-05 01:02:45,826 INFO Projecting 2048 vectors onto 114564-simplex at 46%
2022-04-05 01:02:46,551 INFO Projecting 2048 vectors onto 114564-simplex at 48%
2022-04-05 01:02:47,507 INFO Projecting 2048 vectors onto 114564-simplex at 51%
2022-04-05 01:02:48,241 INFO Projecting 2048 vectors onto 114564-simplex at 53%
2022-04-05 01:02:49,019 INFO Projecting 2048 vectors onto 114564-simplex at 56%
2022-04-05 01:02:49,733 INFO Projecting 2048 vectors onto 114564-simplex at 58%
2022-04-05 01:02:50,470 INFO Projecting 2048 vectors onto 114564-simplex at 61%
2022-04-05 01:02:51,214 INFO Projecting 2048 vectors onto 114564-simplex at 63%
2022-04-05 01:02:51,898 INFO Projecting 2048 vectors onto 114564-simplex at 65%
2022-04-05 01:02:52,632 INFO Projecting 2048 vectors onto 114564-simplex at 68%
2022-04-05 01:02:53,407 INFO Projecting 2048 vectors onto 114564-simplex at 70%
2022-04-05 01:02:54,098 INFO Projecting 2048 vectors onto 114564-simplex at 73%
2022-04-05 01:02:54,985 INFO Projecting 2048 vectors onto 114564-simplex at 75%
2022-04-05 01:02:55,689 INFO Projecting 2048 vectors onto 114564-simplex at 78%
2022-04-05 01:02:56,385 INFO Projecting 2048 vectors onto 114564-simplex at 80%
2022-04-05 01:02:57,064 INFO Projecting 2048 vectors onto 114564-simplex at 83%
2022-04-05 01:02:57,742 INFO Projecting 2048 vectors onto 114564-simplex at 85%
2022-04-05 01:02:58,421 INFO Projecting 2048 vectors onto 114564-simplex at 87%
2022-04-05 01:02:59,115 INFO Projecting 2048 vectors onto 114564-simplex at 90%
2022-04-05 01:02:59,854 INFO Projecting 2048 vectors onto 114564-simplex at 92%
2022-04-05 01:03:00,549 INFO Projecting 2048 vectors onto 114564-simplex at 95%
2022-04-05 01:03:01,239 INFO Projecting 2048 vectors onto 114564-simplex at 97%
2022-04-05 01:03:01,895 INFO Projecting 2048 vectors onto 114564-simplex at 100%
2022-04-05 01:03:03,472 INFO Computing 50 means of 586 points in at most 20 steps...
2022-04-05 01:03:03,574 INFO Computing 2048 means at 2%
2022-04-05 01:03:03,666 INFO Computing 50 means of 565 points in at most 20 steps...
2022-04-05 01:03:03,729 INFO Computing 2048 means at 4%
2022-04-05 01:03:03,819 INFO Computing 50 means of 594 points in at most 20 steps...
2022-04-05 01:03:03,891 INFO Computing 2048 means at 7%
2022-04-05 01:03:03,979 INFO Computing 50 means of 555 points in at most 20 steps...
2022-04-05 01:03:04,047 INFO Computing 2048 means at 9%
2022-04-05 01:03:04,135 INFO Computing 50 means of 579 points in at most 20 steps...
2022-04-05 01:03:04,201 INFO Computing 2048 means at 12%
2022-04-05 01:03:04,288 INFO Computing 50 means of 580 points in at most 20 steps...
2022-04-05 01:03:04,357 INFO Computing 2048 means at 14%
2022-04-05 01:03:04,448 INFO Computing 50 means of 595 points in at most 20 steps...
2022-04-05 01:03:04,522 INFO Computing 2048 means at 17%
2022-04-05 01:03:04,607 INFO Computing 50 means of 592 points in at most 20 steps...
2022-04-05 01:03:04,677 INFO Computing 2048 means at 19%
2022-04-05 01:03:04,765 INFO Computing 50 means of 601 points in at most 20 steps...
2022-04-05 01:03:04,850 INFO Computing 2048 means at 21%
2022-04-05 01:03:04,935 INFO Computing 50 means of 593 points in at most 20 steps...
2022-04-05 01:03:05,001 INFO Computing 2048 means at 24%
2022-04-05 01:03:05,102 INFO Computing 50 means of 569 points in at most 20 steps...
2022-04-05 01:03:05,167 INFO Computing 2048 means at 26%
2022-04-05 01:03:05,250 INFO Computing 50 means of 567 points in at most 20 steps...
2022-04-05 01:03:05,321 INFO Computing 2048 means at 29%
2022-04-05 01:03:05,405 INFO Computing 50 means of 585 points in at most 20 steps...
2022-04-05 01:03:05,471 INFO Computing 2048 means at 31%
2022-04-05 01:03:05,555 INFO Computing 50 means of 578 points in at most 20 steps...
2022-04-05 01:03:05,622 INFO Computing 2048 means at 34%
2022-04-05 01:03:05,708 INFO Computing 50 means of 582 points in at most 20 steps...
2022-04-05 01:03:05,775 INFO Computing 2048 means at 36%
2022-04-05 01:03:05,857 INFO Computing 50 means of 579 points in at most 20 steps...
2022-04-05 01:03:05,927 INFO Computing 2048 means at 39%
2022-04-05 01:03:06,018 INFO Computing 50 means of 581 points in at most 20 steps...
2022-04-05 01:03:06,088 INFO Computing 2048 means at 41%
2022-04-05 01:03:06,174 INFO Computing 50 means of 587 points in at most 20 steps...
2022-04-05 01:03:06,244 INFO Computing 2048 means at 43%
2022-04-05 01:03:06,334 INFO Computing 50 means of 585 points in at most 20 steps...
2022-04-05 01:03:06,400 INFO Computing 2048 means at 46%
2022-04-05 01:03:06,486 INFO Computing 50 means of 605 points in at most 20 steps...
2022-04-05 01:03:06,560 INFO Computing 2048 means at 48%
2022-04-05 01:03:06,665 INFO Computing 50 means of 592 points in at most 20 steps...
2022-04-05 01:03:06,737 INFO Computing 2048 means at 51%
2022-04-05 01:03:06,827 INFO Computing 50 means of 583 points in at most 20 steps...
2022-04-05 01:03:06,897 INFO Computing 2048 means at 53%
2022-04-05 01:03:06,987 INFO Computing 50 means of 588 points in at most 20 steps...
2022-04-05 01:03:07,058 INFO Computing 2048 means at 56%
2022-04-05 01:03:07,141 INFO Computing 50 means of 588 points in at most 20 steps...
2022-04-05 01:03:07,213 INFO Computing 2048 means at 58%
2022-04-05 01:03:07,294 INFO Computing 50 means of 590 points in at most 20 steps...
2022-04-05 01:03:07,361 INFO Computing 2048 means at 61%
2022-04-05 01:03:07,448 INFO Computing 50 means of 592 points in at most 20 steps...
2022-04-05 01:03:07,516 INFO Computing 2048 means at 63%
2022-04-05 01:03:07,600 INFO Computing 50 means of 566 points in at most 20 steps...
2022-04-05 01:03:07,667 INFO Computing 2048 means at 65%
2022-04-05 01:03:07,752 INFO Computing 50 means of 590 points in at most 20 steps...
2022-04-05 01:03:07,819 INFO Computing 2048 means at 68%
2022-04-05 01:03:07,906 INFO Computing 50 means of 588 points in at most 20 steps...
2022-04-05 01:03:07,974 INFO Computing 2048 means at 70%
2022-04-05 01:03:08,055 INFO Computing 50 means of 597 points in at most 20 steps...
2022-04-05 01:03:08,132 INFO Computing 2048 means at 73%
2022-04-05 01:03:08,227 INFO Computing 50 means of 599 points in at most 20 steps...
2022-04-05 01:03:08,296 INFO Computing 2048 means at 75%
2022-04-05 01:03:08,382 INFO Computing 50 means of 603 points in at most 20 steps...
2022-04-05 01:03:08,451 INFO Computing 2048 means at 78%
2022-04-05 01:03:08,539 INFO Computing 50 means of 572 points in at most 20 steps...
2022-04-05 01:03:08,605 INFO Computing 2048 means at 80%
2022-04-05 01:03:08,687 INFO Computing 50 means of 606 points in at most 20 steps...
2022-04-05 01:03:08,756 INFO Computing 2048 means at 83%
2022-04-05 01:03:08,838 INFO Computing 50 means of 582 points in at most 20 steps...
2022-04-05 01:03:08,903 INFO Computing 2048 means at 85%
2022-04-05 01:03:08,986 INFO Computing 50 means of 585 points in at most 20 steps...
2022-04-05 01:03:09,052 INFO Computing 2048 means at 87%
2022-04-05 01:03:09,138 INFO Computing 50 means of 596 points in at most 20 steps...
2022-04-05 01:03:09,210 INFO Computing 2048 means at 90%
2022-04-05 01:03:09,295 INFO Computing 50 means of 585 points in at most 20 steps...
2022-04-05 01:03:09,361 INFO Computing 2048 means at 92%
2022-04-05 01:03:09,446 INFO Computing 50 means of 566 points in at most 20 steps...
2022-04-05 01:03:09,512 INFO Computing 2048 means at 95%
2022-04-05 01:03:09,596 INFO Computing 50 means of 576 points in at most 20 steps...
2022-04-05 01:03:09,663 INFO Computing 2048 means at 97%
2022-04-05 01:03:09,745 INFO Computing 48 means of 569 points in at most 20 steps...
2022-04-05 01:03:09,807 INFO Computing 2048 means at 100%
2022-04-05 01:03:14,476 INFO Do vol update step
2022-04-05 01:03:14,478 INFO Compute adjoint forward mapping on the images
2022-04-05 01:03:16,336 DEBUG Corresponding type is already complex complex128.
2022-04-05 01:03:18,899 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2022-04-05 01:03:18,913 INFO Computing adjoint forward mappings from 2048 rotations at 50%
2022-04-05 01:03:20,388 DEBUG Corresponding type is already complex complex128.
2022-04-05 01:03:22,859 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2022-04-05 01:03:22,870 INFO Computing adjoint forward mappings from 2048 rotations at 100%
2022-04-05 01:03:23,727 DEBUG Corresponding type is already real float64.
2022-04-05 01:03:23,727 DEBUG anufft passed real_type for signal, converting
2022-04-05 01:03:29,866 INFO Computing kernel from 2048 rotations at 50%
2022-04-05 01:03:30,751 DEBUG Corresponding type is already real float64.
2022-04-05 01:03:30,751 DEBUG anufft passed real_type for signal, converting
2022-04-05 01:03:37,100 INFO Computing kernel from 2048 rotations at 100%
2022-04-05 01:03:37,101 INFO Computing non-centered Fourier Transform
2022-04-05 01:03:37,274 INFO Add ramp filter regularisation
2022-04-05 01:03:42,094 INFO Update data_discrepancies
2022-04-05 01:03:42,095 INFO Computing \|Ag.u - f_i\|^2
2022-04-05 01:03:43,005 DEBUG Corresponding type is already real float64.
2022-04-05 01:03:43,005 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:03:57,841 INFO Computing data fidelity for 114564 rotations and 2048 images at 0%
2022-04-05 01:03:58,584 DEBUG Corresponding type is already real float64.
2022-04-05 01:03:58,584 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:04:12,970 INFO Computing data fidelity for 114564 rotations and 2048 images at 1%
2022-04-05 01:04:13,720 DEBUG Corresponding type is already real float64.
2022-04-05 01:04:13,721 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:04:27,335 INFO Computing data fidelity for 114564 rotations and 2048 images at 2%
2022-04-05 01:04:28,038 DEBUG Corresponding type is already real float64.
2022-04-05 01:04:28,038 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:04:41,069 INFO Computing data fidelity for 114564 rotations and 2048 images at 3%
2022-04-05 01:04:41,795 DEBUG Corresponding type is already real float64.
2022-04-05 01:04:41,795 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:04:54,887 INFO Computing data fidelity for 114564 rotations and 2048 images at 4%
2022-04-05 01:04:55,594 DEBUG Corresponding type is already real float64.
2022-04-05 01:04:55,595 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:05:08,402 INFO Computing data fidelity for 114564 rotations and 2048 images at 5%
2022-04-05 01:05:09,107 DEBUG Corresponding type is already real float64.
2022-04-05 01:05:09,107 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:05:21,924 INFO Computing data fidelity for 114564 rotations and 2048 images at 6%
2022-04-05 01:05:22,636 DEBUG Corresponding type is already real float64.
2022-04-05 01:05:22,637 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:05:35,531 INFO Computing data fidelity for 114564 rotations and 2048 images at 7%
2022-04-05 01:05:36,248 DEBUG Corresponding type is already real float64.
2022-04-05 01:05:36,248 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:05:49,253 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2022-04-05 01:05:49,954 DEBUG Corresponding type is already real float64.
2022-04-05 01:05:49,954 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:06:02,861 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2022-04-05 01:06:03,574 DEBUG Corresponding type is already real float64.
2022-04-05 01:06:03,574 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:06:16,507 INFO Computing data fidelity for 114564 rotations and 2048 images at 9%
2022-04-05 01:06:17,211 DEBUG Corresponding type is already real float64.
2022-04-05 01:06:17,211 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:06:30,111 INFO Computing data fidelity for 114564 rotations and 2048 images at 10%
2022-04-05 01:06:30,809 DEBUG Corresponding type is already real float64.
2022-04-05 01:06:30,809 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:06:43,666 INFO Computing data fidelity for 114564 rotations and 2048 images at 11%
2022-04-05 01:06:44,384 DEBUG Corresponding type is already real float64.
2022-04-05 01:06:44,384 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:06:57,276 INFO Computing data fidelity for 114564 rotations and 2048 images at 12%
2022-04-05 01:06:57,979 DEBUG Corresponding type is already real float64.
2022-04-05 01:06:57,979 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:07:10,908 INFO Computing data fidelity for 114564 rotations and 2048 images at 13%
2022-04-05 01:07:11,612 DEBUG Corresponding type is already real float64.
2022-04-05 01:07:11,612 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:07:24,516 INFO Computing data fidelity for 114564 rotations and 2048 images at 14%
2022-04-05 01:07:25,211 DEBUG Corresponding type is already real float64.
2022-04-05 01:07:25,211 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:07:38,022 INFO Computing data fidelity for 114564 rotations and 2048 images at 15%
2022-04-05 01:07:38,732 DEBUG Corresponding type is already real float64.
2022-04-05 01:07:38,732 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:07:51,815 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2022-04-05 01:07:52,532 DEBUG Corresponding type is already real float64.
2022-04-05 01:07:52,533 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:08:05,500 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2022-04-05 01:08:06,199 DEBUG Corresponding type is already real float64.
2022-04-05 01:08:06,199 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:08:19,160 INFO Computing data fidelity for 114564 rotations and 2048 images at 17%
2022-04-05 01:08:19,865 DEBUG Corresponding type is already real float64.
2022-04-05 01:08:19,866 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:08:32,681 INFO Computing data fidelity for 114564 rotations and 2048 images at 18%
2022-04-05 01:08:33,412 DEBUG Corresponding type is already real float64.
2022-04-05 01:08:33,412 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:08:46,741 INFO Computing data fidelity for 114564 rotations and 2048 images at 19%
2022-04-05 01:08:47,483 DEBUG Corresponding type is already real float64.
2022-04-05 01:08:47,483 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:09:00,970 INFO Computing data fidelity for 114564 rotations and 2048 images at 20%
2022-04-05 01:09:01,700 DEBUG Corresponding type is already real float64.
2022-04-05 01:09:01,700 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:09:15,142 INFO Computing data fidelity for 114564 rotations and 2048 images at 21%
2022-04-05 01:09:15,882 DEBUG Corresponding type is already real float64.
2022-04-05 01:09:15,882 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:09:29,334 INFO Computing data fidelity for 114564 rotations and 2048 images at 22%
2022-04-05 01:09:30,062 DEBUG Corresponding type is already real float64.
2022-04-05 01:09:30,062 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:09:43,453 INFO Computing data fidelity for 114564 rotations and 2048 images at 23%
2022-04-05 01:09:44,184 DEBUG Corresponding type is already real float64.
2022-04-05 01:09:44,184 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:09:57,609 INFO Computing data fidelity for 114564 rotations and 2048 images at 24%
2022-04-05 01:09:58,339 DEBUG Corresponding type is already real float64.
2022-04-05 01:09:58,339 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:10:11,693 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2022-04-05 01:10:12,429 DEBUG Corresponding type is already real float64.
2022-04-05 01:10:12,429 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:10:25,749 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2022-04-05 01:10:26,477 DEBUG Corresponding type is already real float64.
2022-04-05 01:10:26,477 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:10:39,858 INFO Computing data fidelity for 114564 rotations and 2048 images at 26%
2022-04-05 01:10:40,633 DEBUG Corresponding type is already real float64.
2022-04-05 01:10:40,633 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:10:53,804 INFO Computing data fidelity for 114564 rotations and 2048 images at 27%
2022-04-05 01:10:54,521 DEBUG Corresponding type is already real float64.
2022-04-05 01:10:54,521 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:11:07,467 INFO Computing data fidelity for 114564 rotations and 2048 images at 28%
2022-04-05 01:11:08,189 DEBUG Corresponding type is already real float64.
2022-04-05 01:11:08,189 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:11:21,154 INFO Computing data fidelity for 114564 rotations and 2048 images at 29%
2022-04-05 01:11:21,878 DEBUG Corresponding type is already real float64.
2022-04-05 01:11:21,878 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:11:34,901 INFO Computing data fidelity for 114564 rotations and 2048 images at 30%
2022-04-05 01:11:35,619 DEBUG Corresponding type is already real float64.
2022-04-05 01:11:35,619 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:11:48,624 INFO Computing data fidelity for 114564 rotations and 2048 images at 31%
2022-04-05 01:11:49,341 DEBUG Corresponding type is already real float64.
2022-04-05 01:11:49,341 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:12:02,255 INFO Computing data fidelity for 114564 rotations and 2048 images at 32%
2022-04-05 01:12:02,977 DEBUG Corresponding type is already real float64.
2022-04-05 01:12:02,977 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:12:15,888 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2022-04-05 01:12:16,612 DEBUG Corresponding type is already real float64.
2022-04-05 01:12:16,612 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:12:29,628 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2022-04-05 01:12:30,351 DEBUG Corresponding type is already real float64.
2022-04-05 01:12:30,351 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:12:43,246 INFO Computing data fidelity for 114564 rotations and 2048 images at 34%
2022-04-05 01:12:43,990 DEBUG Corresponding type is already real float64.
2022-04-05 01:12:43,990 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:12:57,848 INFO Computing data fidelity for 114564 rotations and 2048 images at 35%
2022-04-05 01:12:58,590 DEBUG Corresponding type is already real float64.
2022-04-05 01:12:58,590 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:13:12,378 INFO Computing data fidelity for 114564 rotations and 2048 images at 36%
2022-04-05 01:13:13,105 DEBUG Corresponding type is already real float64.
2022-04-05 01:13:13,105 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:13:26,074 INFO Computing data fidelity for 114564 rotations and 2048 images at 37%
2022-04-05 01:13:26,793 DEBUG Corresponding type is already real float64.
2022-04-05 01:13:26,793 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:13:39,701 INFO Computing data fidelity for 114564 rotations and 2048 images at 38%
2022-04-05 01:13:40,429 DEBUG Corresponding type is already real float64.
2022-04-05 01:13:40,429 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:13:53,399 INFO Computing data fidelity for 114564 rotations and 2048 images at 39%
2022-04-05 01:13:54,116 DEBUG Corresponding type is already real float64.
2022-04-05 01:13:54,117 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:14:07,038 INFO Computing data fidelity for 114564 rotations and 2048 images at 40%
2022-04-05 01:14:07,753 DEBUG Corresponding type is already real float64.
2022-04-05 01:14:07,753 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:14:20,638 INFO Computing data fidelity for 114564 rotations and 2048 images at 41%
2022-04-05 01:14:21,363 DEBUG Corresponding type is already real float64.
2022-04-05 01:14:21,363 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:14:34,460 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2022-04-05 01:14:35,192 DEBUG Corresponding type is already real float64.
2022-04-05 01:14:35,192 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:14:48,149 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2022-04-05 01:14:48,868 DEBUG Corresponding type is already real float64.
2022-04-05 01:14:48,868 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:15:01,747 INFO Computing data fidelity for 114564 rotations and 2048 images at 43%
2022-04-05 01:15:02,497 DEBUG Corresponding type is already real float64.
2022-04-05 01:15:02,497 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:15:15,469 INFO Computing data fidelity for 114564 rotations and 2048 images at 44%
2022-04-05 01:15:16,195 DEBUG Corresponding type is already real float64.
2022-04-05 01:15:16,195 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:15:29,104 INFO Computing data fidelity for 114564 rotations and 2048 images at 45%
2022-04-05 01:15:29,823 DEBUG Corresponding type is already real float64.
2022-04-05 01:15:29,823 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:15:42,757 INFO Computing data fidelity for 114564 rotations and 2048 images at 46%
2022-04-05 01:15:43,474 DEBUG Corresponding type is already real float64.
2022-04-05 01:15:43,474 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:15:56,444 INFO Computing data fidelity for 114564 rotations and 2048 images at 47%
2022-04-05 01:15:57,175 DEBUG Corresponding type is already real float64.
2022-04-05 01:15:57,175 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:16:10,056 INFO Computing data fidelity for 114564 rotations and 2048 images at 48%
2022-04-05 01:16:10,773 DEBUG Corresponding type is already real float64.
2022-04-05 01:16:10,773 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:16:23,688 INFO Computing data fidelity for 114564 rotations and 2048 images at 49%
2022-04-05 01:16:24,405 DEBUG Corresponding type is already real float64.
2022-04-05 01:16:24,405 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:16:37,354 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2022-04-05 01:16:38,069 DEBUG Corresponding type is already real float64.
2022-04-05 01:16:38,069 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:16:51,024 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2022-04-05 01:16:51,745 DEBUG Corresponding type is already real float64.
2022-04-05 01:16:51,745 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:17:04,693 INFO Computing data fidelity for 114564 rotations and 2048 images at 51%
2022-04-05 01:17:05,413 DEBUG Corresponding type is already real float64.
2022-04-05 01:17:05,413 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:17:18,339 INFO Computing data fidelity for 114564 rotations and 2048 images at 52%
2022-04-05 01:17:19,070 DEBUG Corresponding type is already real float64.
2022-04-05 01:17:19,070 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:17:32,013 INFO Computing data fidelity for 114564 rotations and 2048 images at 53%
2022-04-05 01:17:32,797 DEBUG Corresponding type is already real float64.
2022-04-05 01:17:32,797 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:17:45,818 INFO Computing data fidelity for 114564 rotations and 2048 images at 54%
2022-04-05 01:17:46,535 DEBUG Corresponding type is already real float64.
2022-04-05 01:17:46,535 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:17:59,774 INFO Computing data fidelity for 114564 rotations and 2048 images at 55%
2022-04-05 01:18:00,503 DEBUG Corresponding type is already real float64.
2022-04-05 01:18:00,503 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:18:13,419 INFO Computing data fidelity for 114564 rotations and 2048 images at 56%
2022-04-05 01:18:14,164 DEBUG Corresponding type is already real float64.
2022-04-05 01:18:14,164 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:18:27,041 INFO Computing data fidelity for 114564 rotations and 2048 images at 57%
2022-04-05 01:18:27,765 DEBUG Corresponding type is already real float64.
2022-04-05 01:18:27,765 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:18:40,746 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2022-04-05 01:18:41,460 DEBUG Corresponding type is already real float64.
2022-04-05 01:18:41,460 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:18:54,455 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2022-04-05 01:18:55,169 DEBUG Corresponding type is already real float64.
2022-04-05 01:18:55,169 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:19:08,078 INFO Computing data fidelity for 114564 rotations and 2048 images at 59%
2022-04-05 01:19:08,813 DEBUG Corresponding type is already real float64.
2022-04-05 01:19:08,813 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:19:21,743 INFO Computing data fidelity for 114564 rotations and 2048 images at 60%
2022-04-05 01:19:22,475 DEBUG Corresponding type is already real float64.
2022-04-05 01:19:22,475 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:19:35,354 INFO Computing data fidelity for 114564 rotations and 2048 images at 61%
2022-04-05 01:19:36,079 DEBUG Corresponding type is already real float64.
2022-04-05 01:19:36,079 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:19:48,969 INFO Computing data fidelity for 114564 rotations and 2048 images at 62%
2022-04-05 01:19:49,722 DEBUG Corresponding type is already real float64.
2022-04-05 01:19:49,722 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:20:02,672 INFO Computing data fidelity for 114564 rotations and 2048 images at 63%
2022-04-05 01:20:03,404 DEBUG Corresponding type is already real float64.
2022-04-05 01:20:03,404 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:20:16,402 INFO Computing data fidelity for 114564 rotations and 2048 images at 64%
2022-04-05 01:20:17,129 DEBUG Corresponding type is already real float64.
2022-04-05 01:20:17,129 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:20:30,129 INFO Computing data fidelity for 114564 rotations and 2048 images at 65%
2022-04-05 01:20:30,846 DEBUG Corresponding type is already real float64.
2022-04-05 01:20:30,846 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:20:43,798 INFO Computing data fidelity for 114564 rotations and 2048 images at 66%
2022-04-05 01:20:44,515 DEBUG Corresponding type is already real float64.
2022-04-05 01:20:44,515 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:20:57,485 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2022-04-05 01:20:58,211 DEBUG Corresponding type is already real float64.
2022-04-05 01:20:58,211 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:21:11,148 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2022-04-05 01:21:11,864 DEBUG Corresponding type is already real float64.
2022-04-05 01:21:11,864 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:21:24,755 INFO Computing data fidelity for 114564 rotations and 2048 images at 68%
2022-04-05 01:21:25,466 DEBUG Corresponding type is already real float64.
2022-04-05 01:21:25,466 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:21:38,344 INFO Computing data fidelity for 114564 rotations and 2048 images at 69%
2022-04-05 01:21:39,073 DEBUG Corresponding type is already real float64.
2022-04-05 01:21:39,074 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:21:52,142 INFO Computing data fidelity for 114564 rotations and 2048 images at 70%
2022-04-05 01:21:52,864 DEBUG Corresponding type is already real float64.
2022-04-05 01:21:52,864 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:22:05,779 INFO Computing data fidelity for 114564 rotations and 2048 images at 71%
2022-04-05 01:22:06,496 DEBUG Corresponding type is already real float64.
2022-04-05 01:22:06,496 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:22:19,417 INFO Computing data fidelity for 114564 rotations and 2048 images at 72%
2022-04-05 01:22:20,152 DEBUG Corresponding type is already real float64.
2022-04-05 01:22:20,152 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:22:33,062 INFO Computing data fidelity for 114564 rotations and 2048 images at 73%
2022-04-05 01:22:33,785 DEBUG Corresponding type is already real float64.
2022-04-05 01:22:33,785 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:22:46,910 INFO Computing data fidelity for 114564 rotations and 2048 images at 74%
2022-04-05 01:22:47,652 DEBUG Corresponding type is already real float64.
2022-04-05 01:22:47,652 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:23:00,684 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2022-04-05 01:23:01,413 DEBUG Corresponding type is already real float64.
2022-04-05 01:23:01,414 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:23:14,386 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2022-04-05 01:23:15,134 DEBUG Corresponding type is already real float64.
2022-04-05 01:23:15,134 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:23:28,037 INFO Computing data fidelity for 114564 rotations and 2048 images at 76%
2022-04-05 01:23:28,771 DEBUG Corresponding type is already real float64.
2022-04-05 01:23:28,771 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:23:41,731 INFO Computing data fidelity for 114564 rotations and 2048 images at 77%
2022-04-05 01:23:42,459 DEBUG Corresponding type is already real float64.
2022-04-05 01:23:42,459 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:23:55,486 INFO Computing data fidelity for 114564 rotations and 2048 images at 78%
2022-04-05 01:23:56,204 DEBUG Corresponding type is already real float64.
2022-04-05 01:23:56,204 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:24:09,168 INFO Computing data fidelity for 114564 rotations and 2048 images at 79%
2022-04-05 01:24:09,898 DEBUG Corresponding type is already real float64.
2022-04-05 01:24:09,898 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:24:22,812 INFO Computing data fidelity for 114564 rotations and 2048 images at 80%
2022-04-05 01:24:23,531 DEBUG Corresponding type is already real float64.
2022-04-05 01:24:23,531 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:24:36,553 INFO Computing data fidelity for 114564 rotations and 2048 images at 81%
2022-04-05 01:24:37,287 DEBUG Corresponding type is already real float64.
2022-04-05 01:24:37,288 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:24:50,273 INFO Computing data fidelity for 114564 rotations and 2048 images at 82%
2022-04-05 01:24:51,006 DEBUG Corresponding type is already real float64.
2022-04-05 01:24:51,006 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:25:03,942 INFO Computing data fidelity for 114564 rotations and 2048 images at 83%
2022-04-05 01:25:04,665 DEBUG Corresponding type is already real float64.
2022-04-05 01:25:04,665 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:25:17,685 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2022-04-05 01:25:18,403 DEBUG Corresponding type is already real float64.
2022-04-05 01:25:18,403 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:25:31,343 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2022-04-05 01:25:32,060 DEBUG Corresponding type is already real float64.
2022-04-05 01:25:32,061 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:25:45,109 INFO Computing data fidelity for 114564 rotations and 2048 images at 85%
2022-04-05 01:25:45,854 DEBUG Corresponding type is already real float64.
2022-04-05 01:25:45,854 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:25:58,803 INFO Computing data fidelity for 114564 rotations and 2048 images at 86%
2022-04-05 01:25:59,522 DEBUG Corresponding type is already real float64.
2022-04-05 01:25:59,522 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:26:12,495 INFO Computing data fidelity for 114564 rotations and 2048 images at 87%
2022-04-05 01:26:13,218 DEBUG Corresponding type is already real float64.
2022-04-05 01:26:13,218 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:26:26,137 INFO Computing data fidelity for 114564 rotations and 2048 images at 88%
2022-04-05 01:26:26,867 DEBUG Corresponding type is already real float64.
2022-04-05 01:26:26,867 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:26:40,079 INFO Computing data fidelity for 114564 rotations and 2048 images at 89%
2022-04-05 01:26:40,814 DEBUG Corresponding type is already real float64.
2022-04-05 01:26:40,814 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:26:53,842 INFO Computing data fidelity for 114564 rotations and 2048 images at 90%
2022-04-05 01:26:54,565 DEBUG Corresponding type is already real float64.
2022-04-05 01:26:54,566 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:27:07,487 INFO Computing data fidelity for 114564 rotations and 2048 images at 91%
2022-04-05 01:27:08,207 DEBUG Corresponding type is already real float64.
2022-04-05 01:27:08,207 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:27:21,134 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2022-04-05 01:27:21,856 DEBUG Corresponding type is already real float64.
2022-04-05 01:27:21,856 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:27:34,799 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2022-04-05 01:27:35,537 DEBUG Corresponding type is already real float64.
2022-04-05 01:27:35,537 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:27:48,508 INFO Computing data fidelity for 114564 rotations and 2048 images at 93%
2022-04-05 01:27:49,228 DEBUG Corresponding type is already real float64.
2022-04-05 01:27:49,228 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:28:02,397 INFO Computing data fidelity for 114564 rotations and 2048 images at 94%
2022-04-05 01:28:03,124 DEBUG Corresponding type is already real float64.
2022-04-05 01:28:03,125 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:28:16,081 INFO Computing data fidelity for 114564 rotations and 2048 images at 95%
2022-04-05 01:28:16,811 DEBUG Corresponding type is already real float64.
2022-04-05 01:28:16,811 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:28:29,711 INFO Computing data fidelity for 114564 rotations and 2048 images at 96%
2022-04-05 01:28:30,448 DEBUG Corresponding type is already real float64.
2022-04-05 01:28:30,449 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:28:43,858 INFO Computing data fidelity for 114564 rotations and 2048 images at 97%
2022-04-05 01:28:44,615 DEBUG Corresponding type is already real float64.
2022-04-05 01:28:44,615 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:28:58,379 INFO Computing data fidelity for 114564 rotations and 2048 images at 98%
2022-04-05 01:28:59,107 DEBUG Corresponding type is already real float64.
2022-04-05 01:28:59,108 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:29:12,075 INFO Computing data fidelity for 114564 rotations and 2048 images at 99%
2022-04-05 01:29:12,511 DEBUG Corresponding type is already real float64.
2022-04-05 01:29:12,511 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:29:23,786 INFO Computing data fidelity for 114564 rotations and 2048 images at 100%
2022-04-05 01:29:25,090 INFO Do lambda update step
2022-04-05 01:29:48,862 INFO Do rots update step
2022-04-05 01:29:49,776 INFO Projecting 2048 vectors onto 114564-simplex at 2%
2022-04-05 01:29:50,460 INFO Projecting 2048 vectors onto 114564-simplex at 4%
2022-04-05 01:29:51,158 INFO Projecting 2048 vectors onto 114564-simplex at 7%
2022-04-05 01:29:51,857 INFO Projecting 2048 vectors onto 114564-simplex at 9%
2022-04-05 01:29:52,549 INFO Projecting 2048 vectors onto 114564-simplex at 12%
2022-04-05 01:29:53,248 INFO Projecting 2048 vectors onto 114564-simplex at 14%
2022-04-05 01:29:53,956 INFO Projecting 2048 vectors onto 114564-simplex at 17%
2022-04-05 01:29:54,643 INFO Projecting 2048 vectors onto 114564-simplex at 19%
2022-04-05 01:29:55,338 INFO Projecting 2048 vectors onto 114564-simplex at 21%
2022-04-05 01:29:56,037 INFO Projecting 2048 vectors onto 114564-simplex at 24%
2022-04-05 01:29:56,920 INFO Projecting 2048 vectors onto 114564-simplex at 26%
2022-04-05 01:29:57,610 INFO Projecting 2048 vectors onto 114564-simplex at 29%
2022-04-05 01:29:58,306 INFO Projecting 2048 vectors onto 114564-simplex at 31%
2022-04-05 01:29:58,993 INFO Projecting 2048 vectors onto 114564-simplex at 34%
2022-04-05 01:29:59,681 INFO Projecting 2048 vectors onto 114564-simplex at 36%
2022-04-05 01:30:00,358 INFO Projecting 2048 vectors onto 114564-simplex at 39%
2022-04-05 01:30:01,027 INFO Projecting 2048 vectors onto 114564-simplex at 41%
2022-04-05 01:30:01,679 INFO Projecting 2048 vectors onto 114564-simplex at 43%
2022-04-05 01:30:02,330 INFO Projecting 2048 vectors onto 114564-simplex at 46%
2022-04-05 01:30:02,978 INFO Projecting 2048 vectors onto 114564-simplex at 48%
2022-04-05 01:30:03,817 INFO Projecting 2048 vectors onto 114564-simplex at 51%
2022-04-05 01:30:04,453 INFO Projecting 2048 vectors onto 114564-simplex at 53%
2022-04-05 01:30:05,099 INFO Projecting 2048 vectors onto 114564-simplex at 56%
2022-04-05 01:30:05,776 INFO Projecting 2048 vectors onto 114564-simplex at 58%
2022-04-05 01:30:06,445 INFO Projecting 2048 vectors onto 114564-simplex at 61%
2022-04-05 01:30:07,082 INFO Projecting 2048 vectors onto 114564-simplex at 63%
2022-04-05 01:30:07,721 INFO Projecting 2048 vectors onto 114564-simplex at 65%
2022-04-05 01:30:08,367 INFO Projecting 2048 vectors onto 114564-simplex at 68%
2022-04-05 01:30:09,023 INFO Projecting 2048 vectors onto 114564-simplex at 70%
2022-04-05 01:30:09,668 INFO Projecting 2048 vectors onto 114564-simplex at 73%
2022-04-05 01:30:10,533 INFO Projecting 2048 vectors onto 114564-simplex at 75%
2022-04-05 01:30:11,202 INFO Projecting 2048 vectors onto 114564-simplex at 78%
2022-04-05 01:30:11,863 INFO Projecting 2048 vectors onto 114564-simplex at 80%
2022-04-05 01:30:12,510 INFO Projecting 2048 vectors onto 114564-simplex at 83%
2022-04-05 01:30:13,155 INFO Projecting 2048 vectors onto 114564-simplex at 85%
2022-04-05 01:30:13,803 INFO Projecting 2048 vectors onto 114564-simplex at 87%
2022-04-05 01:30:14,461 INFO Projecting 2048 vectors onto 114564-simplex at 90%
2022-04-05 01:30:15,102 INFO Projecting 2048 vectors onto 114564-simplex at 92%
2022-04-05 01:30:15,769 INFO Projecting 2048 vectors onto 114564-simplex at 95%
2022-04-05 01:30:16,461 INFO Projecting 2048 vectors onto 114564-simplex at 97%
2022-04-05 01:30:17,199 INFO Projecting 2048 vectors onto 114564-simplex at 100%
2022-04-05 01:30:18,764 INFO Computing 50 means of 587 points in at most 20 steps...
2022-04-05 01:30:18,852 INFO Computing 2048 means at 2%
2022-04-05 01:30:18,937 INFO Computing 50 means of 563 points in at most 20 steps...
2022-04-05 01:30:19,001 INFO Computing 2048 means at 4%
2022-04-05 01:30:19,084 INFO Computing 50 means of 598 points in at most 20 steps...
2022-04-05 01:30:19,158 INFO Computing 2048 means at 7%
2022-04-05 01:30:19,236 INFO Computing 50 means of 555 points in at most 20 steps...
2022-04-05 01:30:19,300 INFO Computing 2048 means at 9%
2022-04-05 01:30:19,385 INFO Computing 50 means of 578 points in at most 20 steps...
2022-04-05 01:30:19,451 INFO Computing 2048 means at 12%
2022-04-05 01:30:19,535 INFO Computing 50 means of 579 points in at most 20 steps...
2022-04-05 01:30:19,600 INFO Computing 2048 means at 14%
2022-04-05 01:30:19,687 INFO Computing 50 means of 593 points in at most 20 steps...
2022-04-05 01:30:19,754 INFO Computing 2048 means at 17%
2022-04-05 01:30:19,840 INFO Computing 50 means of 593 points in at most 20 steps...
2022-04-05 01:30:19,908 INFO Computing 2048 means at 19%
2022-04-05 01:30:19,994 INFO Computing 50 means of 599 points in at most 20 steps...
2022-04-05 01:30:20,064 INFO Computing 2048 means at 21%
2022-04-05 01:30:20,151 INFO Computing 50 means of 595 points in at most 20 steps...
2022-04-05 01:30:20,218 INFO Computing 2048 means at 24%
2022-04-05 01:30:20,316 INFO Computing 50 means of 571 points in at most 20 steps...
2022-04-05 01:30:20,382 INFO Computing 2048 means at 26%
2022-04-05 01:30:20,467 INFO Computing 50 means of 567 points in at most 20 steps...
2022-04-05 01:30:20,535 INFO Computing 2048 means at 29%
2022-04-05 01:30:20,623 INFO Computing 50 means of 587 points in at most 20 steps...
2022-04-05 01:30:20,690 INFO Computing 2048 means at 31%
2022-04-05 01:30:20,778 INFO Computing 50 means of 577 points in at most 20 steps...
2022-04-05 01:30:20,849 INFO Computing 2048 means at 34%
2022-04-05 01:30:20,932 INFO Computing 50 means of 585 points in at most 20 steps...
2022-04-05 01:30:20,995 INFO Computing 2048 means at 36%
2022-04-05 01:30:21,077 INFO Computing 50 means of 578 points in at most 20 steps...
2022-04-05 01:30:21,141 INFO Computing 2048 means at 39%
2022-04-05 01:30:21,227 INFO Computing 50 means of 583 points in at most 20 steps...
2022-04-05 01:30:21,298 INFO Computing 2048 means at 41%
2022-04-05 01:30:21,388 INFO Computing 50 means of 588 points in at most 20 steps...
2022-04-05 01:30:21,454 INFO Computing 2048 means at 43%
2022-04-05 01:30:21,548 INFO Computing 50 means of 586 points in at most 20 steps...
2022-04-05 01:30:21,613 INFO Computing 2048 means at 46%
2022-04-05 01:30:21,702 INFO Computing 50 means of 603 points in at most 20 steps...
2022-04-05 01:30:21,774 INFO Computing 2048 means at 48%
2022-04-05 01:30:21,881 INFO Computing 50 means of 592 points in at most 20 steps...
2022-04-05 01:30:21,944 INFO Computing 2048 means at 51%
2022-04-05 01:30:22,033 INFO Computing 50 means of 583 points in at most 20 steps...
2022-04-05 01:30:22,102 INFO Computing 2048 means at 53%
2022-04-05 01:30:22,192 INFO Computing 50 means of 589 points in at most 20 steps...
2022-04-05 01:30:22,265 INFO Computing 2048 means at 56%
2022-04-05 01:30:22,356 INFO Computing 50 means of 588 points in at most 20 steps...
2022-04-05 01:30:22,423 INFO Computing 2048 means at 58%
2022-04-05 01:30:22,517 INFO Computing 50 means of 593 points in at most 20 steps...
2022-04-05 01:30:22,584 INFO Computing 2048 means at 61%
2022-04-05 01:30:22,678 INFO Computing 50 means of 592 points in at most 20 steps...
2022-04-05 01:30:22,747 INFO Computing 2048 means at 63%
2022-04-05 01:30:22,844 INFO Computing 50 means of 564 points in at most 20 steps...
2022-04-05 01:30:22,913 INFO Computing 2048 means at 65%
2022-04-05 01:30:23,000 INFO Computing 50 means of 590 points in at most 20 steps...
2022-04-05 01:30:23,065 INFO Computing 2048 means at 68%
2022-04-05 01:30:23,145 INFO Computing 50 means of 589 points in at most 20 steps...
2022-04-05 01:30:23,210 INFO Computing 2048 means at 70%
2022-04-05 01:30:23,288 INFO Computing 50 means of 597 points in at most 20 steps...
2022-04-05 01:30:23,361 INFO Computing 2048 means at 73%
2022-04-05 01:30:23,447 INFO Computing 50 means of 596 points in at most 20 steps...
2022-04-05 01:30:23,511 INFO Computing 2048 means at 75%
2022-04-05 01:30:23,590 INFO Computing 50 means of 602 points in at most 20 steps...
2022-04-05 01:30:23,655 INFO Computing 2048 means at 78%
2022-04-05 01:30:23,737 INFO Computing 50 means of 570 points in at most 20 steps...
2022-04-05 01:30:23,799 INFO Computing 2048 means at 80%
2022-04-05 01:30:23,878 INFO Computing 50 means of 603 points in at most 20 steps...
2022-04-05 01:30:23,943 INFO Computing 2048 means at 83%
2022-04-05 01:30:24,021 INFO Computing 50 means of 581 points in at most 20 steps...
2022-04-05 01:30:24,085 INFO Computing 2048 means at 85%
2022-04-05 01:30:24,161 INFO Computing 50 means of 584 points in at most 20 steps...
2022-04-05 01:30:24,226 INFO Computing 2048 means at 87%
2022-04-05 01:30:24,314 INFO Computing 50 means of 593 points in at most 20 steps...
2022-04-05 01:30:24,383 INFO Computing 2048 means at 90%
2022-04-05 01:30:24,469 INFO Computing 50 means of 585 points in at most 20 steps...
2022-04-05 01:30:24,537 INFO Computing 2048 means at 92%
2022-04-05 01:30:24,624 INFO Computing 50 means of 564 points in at most 20 steps...
2022-04-05 01:30:24,690 INFO Computing 2048 means at 95%
2022-04-05 01:30:24,768 INFO Computing 50 means of 576 points in at most 20 steps...
2022-04-05 01:30:24,831 INFO Computing 2048 means at 97%
2022-04-05 01:30:24,909 INFO Computing 48 means of 565 points in at most 20 steps...
2022-04-05 01:30:24,967 INFO Computing 2048 means at 100%
2022-04-05 01:30:29,099 INFO Do vol update step
2022-04-05 01:30:29,100 INFO Compute adjoint forward mapping on the images
2022-04-05 01:30:30,791 DEBUG Corresponding type is already complex complex128.
2022-04-05 01:30:33,461 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2022-04-05 01:30:33,478 INFO Computing adjoint forward mappings from 2048 rotations at 50%
2022-04-05 01:30:35,012 DEBUG Corresponding type is already complex complex128.
2022-04-05 01:30:37,506 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2022-04-05 01:30:37,518 INFO Computing adjoint forward mappings from 2048 rotations at 100%
2022-04-05 01:30:38,425 DEBUG Corresponding type is already real float64.
2022-04-05 01:30:38,425 DEBUG anufft passed real_type for signal, converting
2022-04-05 01:30:44,407 INFO Computing kernel from 2048 rotations at 50%
2022-04-05 01:30:45,291 DEBUG Corresponding type is already real float64.
2022-04-05 01:30:45,291 DEBUG anufft passed real_type for signal, converting
2022-04-05 01:30:51,435 INFO Computing kernel from 2048 rotations at 100%
2022-04-05 01:30:51,437 INFO Computing non-centered Fourier Transform
2022-04-05 01:30:51,617 INFO Add ramp filter regularisation
2022-04-05 01:30:56,025 INFO Update data_discrepancies
2022-04-05 01:30:56,026 INFO Computing \|Ag.u - f_i\|^2
2022-04-05 01:30:56,863 DEBUG Corresponding type is already real float64.
2022-04-05 01:30:56,863 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:31:11,642 INFO Computing data fidelity for 114564 rotations and 2048 images at 0%
2022-04-05 01:31:12,377 DEBUG Corresponding type is already real float64.
2022-04-05 01:31:12,377 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:31:25,513 INFO Computing data fidelity for 114564 rotations and 2048 images at 1%
2022-04-05 01:31:26,212 DEBUG Corresponding type is already real float64.
2022-04-05 01:31:26,213 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:31:39,345 INFO Computing data fidelity for 114564 rotations and 2048 images at 2%
2022-04-05 01:31:40,048 DEBUG Corresponding type is already real float64.
2022-04-05 01:31:40,049 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:31:53,133 INFO Computing data fidelity for 114564 rotations and 2048 images at 3%
2022-04-05 01:31:53,832 DEBUG Corresponding type is already real float64.
2022-04-05 01:31:53,832 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:32:06,936 INFO Computing data fidelity for 114564 rotations and 2048 images at 4%
2022-04-05 01:32:07,643 DEBUG Corresponding type is already real float64.
2022-04-05 01:32:07,643 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:32:20,694 INFO Computing data fidelity for 114564 rotations and 2048 images at 5%
2022-04-05 01:32:21,401 DEBUG Corresponding type is already real float64.
2022-04-05 01:32:21,401 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:32:34,429 INFO Computing data fidelity for 114564 rotations and 2048 images at 6%
2022-04-05 01:32:35,131 DEBUG Corresponding type is already real float64.
2022-04-05 01:32:35,132 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:32:48,018 INFO Computing data fidelity for 114564 rotations and 2048 images at 7%
2022-04-05 01:32:48,732 DEBUG Corresponding type is already real float64.
2022-04-05 01:32:48,732 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:33:01,691 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2022-04-05 01:33:02,391 DEBUG Corresponding type is already real float64.
2022-04-05 01:33:02,391 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:33:15,267 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2022-04-05 01:33:15,963 DEBUG Corresponding type is already real float64.
2022-04-05 01:33:15,964 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:33:28,829 INFO Computing data fidelity for 114564 rotations and 2048 images at 9%
2022-04-05 01:33:29,525 DEBUG Corresponding type is already real float64.
2022-04-05 01:33:29,526 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:33:42,373 INFO Computing data fidelity for 114564 rotations and 2048 images at 10%
2022-04-05 01:33:43,074 DEBUG Corresponding type is already real float64.
2022-04-05 01:33:43,074 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:33:55,933 INFO Computing data fidelity for 114564 rotations and 2048 images at 11%
2022-04-05 01:33:56,664 DEBUG Corresponding type is already real float64.
2022-04-05 01:33:56,664 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:34:09,581 INFO Computing data fidelity for 114564 rotations and 2048 images at 12%
2022-04-05 01:34:10,283 DEBUG Corresponding type is already real float64.
2022-04-05 01:34:10,283 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:34:23,141 INFO Computing data fidelity for 114564 rotations and 2048 images at 13%
2022-04-05 01:34:23,838 DEBUG Corresponding type is already real float64.
2022-04-05 01:34:23,838 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:34:36,676 INFO Computing data fidelity for 114564 rotations and 2048 images at 14%
2022-04-05 01:34:37,376 DEBUG Corresponding type is already real float64.
2022-04-05 01:34:37,376 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:34:50,388 INFO Computing data fidelity for 114564 rotations and 2048 images at 15%
2022-04-05 01:34:51,096 DEBUG Corresponding type is already real float64.
2022-04-05 01:34:51,097 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:35:03,988 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2022-04-05 01:35:04,693 DEBUG Corresponding type is already real float64.
2022-04-05 01:35:04,693 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:35:17,536 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2022-04-05 01:35:18,248 DEBUG Corresponding type is already real float64.
2022-04-05 01:35:18,248 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:35:31,164 INFO Computing data fidelity for 114564 rotations and 2048 images at 17%
2022-04-05 01:35:31,860 DEBUG Corresponding type is already real float64.
2022-04-05 01:35:31,860 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:35:44,743 INFO Computing data fidelity for 114564 rotations and 2048 images at 18%
2022-04-05 01:35:45,448 DEBUG Corresponding type is already real float64.
2022-04-05 01:35:45,449 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:35:58,345 INFO Computing data fidelity for 114564 rotations and 2048 images at 19%
2022-04-05 01:35:59,052 DEBUG Corresponding type is already real float64.
2022-04-05 01:35:59,052 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:36:11,903 INFO Computing data fidelity for 114564 rotations and 2048 images at 20%
2022-04-05 01:36:12,599 DEBUG Corresponding type is already real float64.
2022-04-05 01:36:12,599 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:36:25,464 INFO Computing data fidelity for 114564 rotations and 2048 images at 21%
2022-04-05 01:36:26,164 DEBUG Corresponding type is already real float64.
2022-04-05 01:36:26,164 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:36:38,968 INFO Computing data fidelity for 114564 rotations and 2048 images at 22%
2022-04-05 01:36:39,679 DEBUG Corresponding type is already real float64.
2022-04-05 01:36:39,679 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:36:52,573 INFO Computing data fidelity for 114564 rotations and 2048 images at 23%
2022-04-05 01:36:53,267 DEBUG Corresponding type is already real float64.
2022-04-05 01:36:53,267 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:37:06,153 INFO Computing data fidelity for 114564 rotations and 2048 images at 24%
2022-04-05 01:37:06,854 DEBUG Corresponding type is already real float64.
2022-04-05 01:37:06,854 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:37:19,706 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2022-04-05 01:37:20,423 DEBUG Corresponding type is already real float64.
2022-04-05 01:37:20,423 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:37:33,205 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2022-04-05 01:37:33,918 DEBUG Corresponding type is already real float64.
2022-04-05 01:37:33,918 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:37:46,776 INFO Computing data fidelity for 114564 rotations and 2048 images at 26%
2022-04-05 01:37:47,500 DEBUG Corresponding type is already real float64.
2022-04-05 01:37:47,500 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:38:00,707 INFO Computing data fidelity for 114564 rotations and 2048 images at 27%
2022-04-05 01:38:01,410 DEBUG Corresponding type is already real float64.
2022-04-05 01:38:01,410 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:38:14,302 INFO Computing data fidelity for 114564 rotations and 2048 images at 28%
2022-04-05 01:38:15,012 DEBUG Corresponding type is already real float64.
2022-04-05 01:38:15,012 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:38:27,994 INFO Computing data fidelity for 114564 rotations and 2048 images at 29%
2022-04-05 01:38:28,700 DEBUG Corresponding type is already real float64.
2022-04-05 01:38:28,700 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:38:41,631 INFO Computing data fidelity for 114564 rotations and 2048 images at 30%
2022-04-05 01:38:42,342 DEBUG Corresponding type is already real float64.
2022-04-05 01:38:42,343 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:38:55,295 INFO Computing data fidelity for 114564 rotations and 2048 images at 31%
2022-04-05 01:38:56,009 DEBUG Corresponding type is already real float64.
2022-04-05 01:38:56,009 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:39:08,924 INFO Computing data fidelity for 114564 rotations and 2048 images at 32%
2022-04-05 01:39:09,665 DEBUG Corresponding type is already real float64.
2022-04-05 01:39:09,665 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:39:22,571 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2022-04-05 01:39:23,283 DEBUG Corresponding type is already real float64.
2022-04-05 01:39:23,283 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:39:36,204 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2022-04-05 01:39:36,927 DEBUG Corresponding type is already real float64.
2022-04-05 01:39:36,927 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:39:49,801 INFO Computing data fidelity for 114564 rotations and 2048 images at 34%
2022-04-05 01:39:50,513 DEBUG Corresponding type is already real float64.
2022-04-05 01:39:50,513 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:40:03,419 INFO Computing data fidelity for 114564 rotations and 2048 images at 35%
2022-04-05 01:40:04,136 DEBUG Corresponding type is already real float64.
2022-04-05 01:40:04,137 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:40:17,069 INFO Computing data fidelity for 114564 rotations and 2048 images at 36%
2022-04-05 01:40:17,788 DEBUG Corresponding type is already real float64.
2022-04-05 01:40:17,789 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:40:30,701 INFO Computing data fidelity for 114564 rotations and 2048 images at 37%
2022-04-05 01:40:31,412 DEBUG Corresponding type is already real float64.
2022-04-05 01:40:31,412 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:40:44,278 INFO Computing data fidelity for 114564 rotations and 2048 images at 38%
2022-04-05 01:40:45,011 DEBUG Corresponding type is already real float64.
2022-04-05 01:40:45,011 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:40:57,888 INFO Computing data fidelity for 114564 rotations and 2048 images at 39%
2022-04-05 01:40:58,601 DEBUG Corresponding type is already real float64.
2022-04-05 01:40:58,601 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:41:11,512 INFO Computing data fidelity for 114564 rotations and 2048 images at 40%
2022-04-05 01:41:12,230 DEBUG Corresponding type is already real float64.
2022-04-05 01:41:12,230 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:41:25,259 INFO Computing data fidelity for 114564 rotations and 2048 images at 41%
2022-04-05 01:41:26,000 DEBUG Corresponding type is already real float64.
2022-04-05 01:41:26,000 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:41:38,912 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2022-04-05 01:41:39,636 DEBUG Corresponding type is already real float64.
2022-04-05 01:41:39,636 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:41:52,675 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2022-04-05 01:41:53,398 DEBUG Corresponding type is already real float64.
2022-04-05 01:41:53,398 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:42:06,338 INFO Computing data fidelity for 114564 rotations and 2048 images at 43%
2022-04-05 01:42:07,048 DEBUG Corresponding type is already real float64.
2022-04-05 01:42:07,048 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:42:19,907 INFO Computing data fidelity for 114564 rotations and 2048 images at 44%
2022-04-05 01:42:20,631 DEBUG Corresponding type is already real float64.
2022-04-05 01:42:20,631 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:42:33,525 INFO Computing data fidelity for 114564 rotations and 2048 images at 45%
2022-04-05 01:42:34,244 DEBUG Corresponding type is already real float64.
2022-04-05 01:42:34,244 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:42:47,198 INFO Computing data fidelity for 114564 rotations and 2048 images at 46%
2022-04-05 01:42:47,928 DEBUG Corresponding type is already real float64.
2022-04-05 01:42:47,928 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:43:01,071 INFO Computing data fidelity for 114564 rotations and 2048 images at 47%
2022-04-05 01:43:01,835 DEBUG Corresponding type is already real float64.
2022-04-05 01:43:01,835 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:43:15,806 INFO Computing data fidelity for 114564 rotations and 2048 images at 48%
2022-04-05 01:43:16,548 DEBUG Corresponding type is already real float64.
2022-04-05 01:43:16,548 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:43:30,277 INFO Computing data fidelity for 114564 rotations and 2048 images at 49%
2022-04-05 01:43:30,996 DEBUG Corresponding type is already real float64.
2022-04-05 01:43:30,996 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:43:44,226 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2022-04-05 01:43:44,961 DEBUG Corresponding type is already real float64.
2022-04-05 01:43:44,961 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:43:57,871 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2022-04-05 01:43:58,603 DEBUG Corresponding type is already real float64.
2022-04-05 01:43:58,603 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:44:11,646 INFO Computing data fidelity for 114564 rotations and 2048 images at 51%
2022-04-05 01:44:12,366 DEBUG Corresponding type is already real float64.
2022-04-05 01:44:12,367 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:44:25,399 INFO Computing data fidelity for 114564 rotations and 2048 images at 52%
2022-04-05 01:44:26,115 DEBUG Corresponding type is already real float64.
2022-04-05 01:44:26,115 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:44:39,135 INFO Computing data fidelity for 114564 rotations and 2048 images at 53%
2022-04-05 01:44:39,863 DEBUG Corresponding type is already real float64.
2022-04-05 01:44:39,864 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:44:52,850 INFO Computing data fidelity for 114564 rotations and 2048 images at 54%
2022-04-05 01:44:53,571 DEBUG Corresponding type is already real float64.
2022-04-05 01:44:53,571 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:45:06,464 INFO Computing data fidelity for 114564 rotations and 2048 images at 55%
2022-04-05 01:45:07,190 DEBUG Corresponding type is already real float64.
2022-04-05 01:45:07,190 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:45:20,105 INFO Computing data fidelity for 114564 rotations and 2048 images at 56%
2022-04-05 01:45:20,821 DEBUG Corresponding type is already real float64.
2022-04-05 01:45:20,821 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:45:33,778 INFO Computing data fidelity for 114564 rotations and 2048 images at 57%
2022-04-05 01:45:34,495 DEBUG Corresponding type is already real float64.
2022-04-05 01:45:34,495 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:45:47,441 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2022-04-05 01:45:48,174 DEBUG Corresponding type is already real float64.
2022-04-05 01:45:48,175 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:46:01,069 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2022-04-05 01:46:01,786 DEBUG Corresponding type is already real float64.
2022-04-05 01:46:01,786 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:46:14,830 INFO Computing data fidelity for 114564 rotations and 2048 images at 59%
2022-04-05 01:46:15,568 DEBUG Corresponding type is already real float64.
2022-04-05 01:46:15,569 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:46:29,375 INFO Computing data fidelity for 114564 rotations and 2048 images at 60%
2022-04-05 01:46:30,112 DEBUG Corresponding type is already real float64.
2022-04-05 01:46:30,112 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:46:43,143 INFO Computing data fidelity for 114564 rotations and 2048 images at 61%
2022-04-05 01:46:43,874 DEBUG Corresponding type is already real float64.
2022-04-05 01:46:43,874 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:46:56,776 INFO Computing data fidelity for 114564 rotations and 2048 images at 62%
2022-04-05 01:46:57,508 DEBUG Corresponding type is already real float64.
2022-04-05 01:46:57,508 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:47:10,383 INFO Computing data fidelity for 114564 rotations and 2048 images at 63%
2022-04-05 01:47:11,090 DEBUG Corresponding type is already real float64.
2022-04-05 01:47:11,090 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:47:24,039 INFO Computing data fidelity for 114564 rotations and 2048 images at 64%
2022-04-05 01:47:24,773 DEBUG Corresponding type is already real float64.
2022-04-05 01:47:24,774 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:47:37,710 INFO Computing data fidelity for 114564 rotations and 2048 images at 65%
2022-04-05 01:47:38,425 DEBUG Corresponding type is already real float64.
2022-04-05 01:47:38,425 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:47:51,493 INFO Computing data fidelity for 114564 rotations and 2048 images at 66%
2022-04-05 01:47:52,229 DEBUG Corresponding type is already real float64.
2022-04-05 01:47:52,229 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:48:05,261 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2022-04-05 01:48:05,977 DEBUG Corresponding type is already real float64.
2022-04-05 01:48:05,977 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:48:18,917 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2022-04-05 01:48:19,627 DEBUG Corresponding type is already real float64.
2022-04-05 01:48:19,627 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:48:32,560 INFO Computing data fidelity for 114564 rotations and 2048 images at 68%
2022-04-05 01:48:33,288 DEBUG Corresponding type is already real float64.
2022-04-05 01:48:33,288 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:48:46,226 INFO Computing data fidelity for 114564 rotations and 2048 images at 69%
2022-04-05 01:48:46,937 DEBUG Corresponding type is already real float64.
2022-04-05 01:48:46,937 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:48:59,872 INFO Computing data fidelity for 114564 rotations and 2048 images at 70%
2022-04-05 01:49:00,598 DEBUG Corresponding type is already real float64.
2022-04-05 01:49:00,598 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:49:13,518 INFO Computing data fidelity for 114564 rotations and 2048 images at 71%
2022-04-05 01:49:14,243 DEBUG Corresponding type is already real float64.
2022-04-05 01:49:14,243 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:49:27,208 INFO Computing data fidelity for 114564 rotations and 2048 images at 72%
2022-04-05 01:49:27,928 DEBUG Corresponding type is already real float64.
2022-04-05 01:49:27,928 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:49:40,950 INFO Computing data fidelity for 114564 rotations and 2048 images at 73%
2022-04-05 01:49:41,665 DEBUG Corresponding type is already real float64.
2022-04-05 01:49:41,665 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:49:54,616 INFO Computing data fidelity for 114564 rotations and 2048 images at 74%
2022-04-05 01:49:55,355 DEBUG Corresponding type is already real float64.
2022-04-05 01:49:55,355 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:50:08,289 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2022-04-05 01:50:09,006 DEBUG Corresponding type is already real float64.
2022-04-05 01:50:09,007 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:50:21,965 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2022-04-05 01:50:22,683 DEBUG Corresponding type is already real float64.
2022-04-05 01:50:22,683 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:50:35,678 INFO Computing data fidelity for 114564 rotations and 2048 images at 76%
2022-04-05 01:50:36,402 DEBUG Corresponding type is already real float64.
2022-04-05 01:50:36,403 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:50:49,310 INFO Computing data fidelity for 114564 rotations and 2048 images at 77%
2022-04-05 01:50:50,036 DEBUG Corresponding type is already real float64.
2022-04-05 01:50:50,036 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:51:03,009 INFO Computing data fidelity for 114564 rotations and 2048 images at 78%
2022-04-05 01:51:03,728 DEBUG Corresponding type is already real float64.
2022-04-05 01:51:03,728 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:51:16,692 INFO Computing data fidelity for 114564 rotations and 2048 images at 79%
2022-04-05 01:51:17,414 DEBUG Corresponding type is already real float64.
2022-04-05 01:51:17,414 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:51:30,304 INFO Computing data fidelity for 114564 rotations and 2048 images at 80%
2022-04-05 01:51:31,017 DEBUG Corresponding type is already real float64.
2022-04-05 01:51:31,017 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:51:43,950 INFO Computing data fidelity for 114564 rotations and 2048 images at 81%
2022-04-05 01:51:44,684 DEBUG Corresponding type is already real float64.
2022-04-05 01:51:44,684 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:51:57,638 INFO Computing data fidelity for 114564 rotations and 2048 images at 82%
2022-04-05 01:51:58,356 DEBUG Corresponding type is already real float64.
2022-04-05 01:51:58,356 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:52:11,311 INFO Computing data fidelity for 114564 rotations and 2048 images at 83%
2022-04-05 01:52:12,030 DEBUG Corresponding type is already real float64.
2022-04-05 01:52:12,030 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:52:24,940 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2022-04-05 01:52:25,659 DEBUG Corresponding type is already real float64.
2022-04-05 01:52:25,659 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:52:38,584 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2022-04-05 01:52:39,313 DEBUG Corresponding type is already real float64.
2022-04-05 01:52:39,313 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:52:52,252 INFO Computing data fidelity for 114564 rotations and 2048 images at 85%
2022-04-05 01:52:52,964 DEBUG Corresponding type is already real float64.
2022-04-05 01:52:52,964 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:53:05,879 INFO Computing data fidelity for 114564 rotations and 2048 images at 86%
2022-04-05 01:53:06,597 DEBUG Corresponding type is already real float64.
2022-04-05 01:53:06,597 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:53:19,489 INFO Computing data fidelity for 114564 rotations and 2048 images at 87%
2022-04-05 01:53:20,221 DEBUG Corresponding type is already real float64.
2022-04-05 01:53:20,221 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:53:33,196 INFO Computing data fidelity for 114564 rotations and 2048 images at 88%
2022-04-05 01:53:33,923 DEBUG Corresponding type is already real float64.
2022-04-05 01:53:33,923 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:53:46,927 INFO Computing data fidelity for 114564 rotations and 2048 images at 89%
2022-04-05 01:53:47,652 DEBUG Corresponding type is already real float64.
2022-04-05 01:53:47,652 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:54:00,609 INFO Computing data fidelity for 114564 rotations and 2048 images at 90%
2022-04-05 01:54:01,331 DEBUG Corresponding type is already real float64.
2022-04-05 01:54:01,331 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:54:14,216 INFO Computing data fidelity for 114564 rotations and 2048 images at 91%
2022-04-05 01:54:14,953 DEBUG Corresponding type is already real float64.
2022-04-05 01:54:14,953 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:54:27,789 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2022-04-05 01:54:28,500 DEBUG Corresponding type is already real float64.
2022-04-05 01:54:28,501 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:54:41,438 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2022-04-05 01:54:42,155 DEBUG Corresponding type is already real float64.
2022-04-05 01:54:42,155 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:54:55,140 INFO Computing data fidelity for 114564 rotations and 2048 images at 93%
2022-04-05 01:54:55,858 DEBUG Corresponding type is already real float64.
2022-04-05 01:54:55,859 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:55:08,783 INFO Computing data fidelity for 114564 rotations and 2048 images at 94%
2022-04-05 01:55:09,522 DEBUG Corresponding type is already real float64.
2022-04-05 01:55:09,522 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:55:22,425 INFO Computing data fidelity for 114564 rotations and 2048 images at 95%
2022-04-05 01:55:23,147 DEBUG Corresponding type is already real float64.
2022-04-05 01:55:23,147 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:55:36,027 INFO Computing data fidelity for 114564 rotations and 2048 images at 96%
2022-04-05 01:55:36,747 DEBUG Corresponding type is already real float64.
2022-04-05 01:55:36,747 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:55:49,697 INFO Computing data fidelity for 114564 rotations and 2048 images at 97%
2022-04-05 01:55:50,439 DEBUG Corresponding type is already real float64.
2022-04-05 01:55:50,439 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:56:03,384 INFO Computing data fidelity for 114564 rotations and 2048 images at 98%
2022-04-05 01:56:04,095 DEBUG Corresponding type is already real float64.
2022-04-05 01:56:04,095 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:56:17,080 INFO Computing data fidelity for 114564 rotations and 2048 images at 99%
2022-04-05 01:56:17,515 DEBUG Corresponding type is already real float64.
2022-04-05 01:56:17,515 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:56:28,690 INFO Computing data fidelity for 114564 rotations and 2048 images at 100%
2022-04-05 01:56:29,856 INFO Do lambda update step
2022-04-05 01:56:53,222 INFO Do rots update step
2022-04-05 01:56:54,171 INFO Projecting 2048 vectors onto 114564-simplex at 2%
2022-04-05 01:56:54,883 INFO Projecting 2048 vectors onto 114564-simplex at 4%
2022-04-05 01:56:55,603 INFO Projecting 2048 vectors onto 114564-simplex at 7%
2022-04-05 01:56:56,322 INFO Projecting 2048 vectors onto 114564-simplex at 9%
2022-04-05 01:56:57,028 INFO Projecting 2048 vectors onto 114564-simplex at 12%
2022-04-05 01:56:57,747 INFO Projecting 2048 vectors onto 114564-simplex at 14%
2022-04-05 01:56:58,448 INFO Projecting 2048 vectors onto 114564-simplex at 17%
2022-04-05 01:56:59,136 INFO Projecting 2048 vectors onto 114564-simplex at 19%
2022-04-05 01:56:59,830 INFO Projecting 2048 vectors onto 114564-simplex at 21%
2022-04-05 01:57:00,529 INFO Projecting 2048 vectors onto 114564-simplex at 24%
2022-04-05 01:57:01,430 INFO Projecting 2048 vectors onto 114564-simplex at 26%
2022-04-05 01:57:02,133 INFO Projecting 2048 vectors onto 114564-simplex at 29%
2022-04-05 01:57:02,818 INFO Projecting 2048 vectors onto 114564-simplex at 31%
2022-04-05 01:57:03,513 INFO Projecting 2048 vectors onto 114564-simplex at 34%
2022-04-05 01:57:04,204 INFO Projecting 2048 vectors onto 114564-simplex at 36%
2022-04-05 01:57:04,903 INFO Projecting 2048 vectors onto 114564-simplex at 39%
2022-04-05 01:57:05,602 INFO Projecting 2048 vectors onto 114564-simplex at 41%
2022-04-05 01:57:06,287 INFO Projecting 2048 vectors onto 114564-simplex at 43%
2022-04-05 01:57:06,991 INFO Projecting 2048 vectors onto 114564-simplex at 46%
2022-04-05 01:57:07,689 INFO Projecting 2048 vectors onto 114564-simplex at 48%
2022-04-05 01:57:08,549 INFO Projecting 2048 vectors onto 114564-simplex at 51%
2022-04-05 01:57:09,190 INFO Projecting 2048 vectors onto 114564-simplex at 53%
2022-04-05 01:57:09,826 INFO Projecting 2048 vectors onto 114564-simplex at 56%
2022-04-05 01:57:10,471 INFO Projecting 2048 vectors onto 114564-simplex at 58%
2022-04-05 01:57:11,127 INFO Projecting 2048 vectors onto 114564-simplex at 61%
2022-04-05 01:57:11,803 INFO Projecting 2048 vectors onto 114564-simplex at 63%
2022-04-05 01:57:12,440 INFO Projecting 2048 vectors onto 114564-simplex at 65%
2022-04-05 01:57:13,085 INFO Projecting 2048 vectors onto 114564-simplex at 68%
2022-04-05 01:57:13,770 INFO Projecting 2048 vectors onto 114564-simplex at 70%
2022-04-05 01:57:14,431 INFO Projecting 2048 vectors onto 114564-simplex at 73%
2022-04-05 01:57:15,251 INFO Projecting 2048 vectors onto 114564-simplex at 75%
2022-04-05 01:57:15,889 INFO Projecting 2048 vectors onto 114564-simplex at 78%
2022-04-05 01:57:16,547 INFO Projecting 2048 vectors onto 114564-simplex at 80%
2022-04-05 01:57:17,196 INFO Projecting 2048 vectors onto 114564-simplex at 83%
2022-04-05 01:57:17,872 INFO Projecting 2048 vectors onto 114564-simplex at 85%
2022-04-05 01:57:18,540 INFO Projecting 2048 vectors onto 114564-simplex at 87%
2022-04-05 01:57:19,186 INFO Projecting 2048 vectors onto 114564-simplex at 90%
2022-04-05 01:57:19,828 INFO Projecting 2048 vectors onto 114564-simplex at 92%
2022-04-05 01:57:20,479 INFO Projecting 2048 vectors onto 114564-simplex at 95%
2022-04-05 01:57:21,119 INFO Projecting 2048 vectors onto 114564-simplex at 97%
2022-04-05 01:57:21,762 INFO Projecting 2048 vectors onto 114564-simplex at 100%
2022-04-05 01:57:23,233 INFO Computing 50 means of 588 points in at most 20 steps...
2022-04-05 01:57:23,330 INFO Computing 2048 means at 2%
2022-04-05 01:57:23,420 INFO Computing 50 means of 565 points in at most 20 steps...
2022-04-05 01:57:23,488 INFO Computing 2048 means at 4%
2022-04-05 01:57:23,579 INFO Computing 50 means of 597 points in at most 20 steps...
2022-04-05 01:57:23,655 INFO Computing 2048 means at 7%
2022-04-05 01:57:23,743 INFO Computing 50 means of 555 points in at most 20 steps...
2022-04-05 01:57:23,808 INFO Computing 2048 means at 9%
2022-04-05 01:57:23,887 INFO Computing 50 means of 577 points in at most 20 steps...
2022-04-05 01:57:23,950 INFO Computing 2048 means at 12%
2022-04-05 01:57:24,027 INFO Computing 50 means of 578 points in at most 20 steps...
2022-04-05 01:57:24,088 INFO Computing 2048 means at 14%
2022-04-05 01:57:24,165 INFO Computing 50 means of 593 points in at most 20 steps...
2022-04-05 01:57:24,230 INFO Computing 2048 means at 17%
2022-04-05 01:57:24,306 INFO Computing 50 means of 593 points in at most 20 steps...
2022-04-05 01:57:24,369 INFO Computing 2048 means at 19%
2022-04-05 01:57:24,446 INFO Computing 50 means of 599 points in at most 20 steps...
2022-04-05 01:57:24,510 INFO Computing 2048 means at 21%
2022-04-05 01:57:24,586 INFO Computing 50 means of 595 points in at most 20 steps...
2022-04-05 01:57:24,651 INFO Computing 2048 means at 24%
2022-04-05 01:57:24,737 INFO Computing 50 means of 572 points in at most 20 steps...
2022-04-05 01:57:24,802 INFO Computing 2048 means at 26%
2022-04-05 01:57:24,879 INFO Computing 50 means of 567 points in at most 20 steps...
2022-04-05 01:57:24,939 INFO Computing 2048 means at 29%
2022-04-05 01:57:25,017 INFO Computing 50 means of 587 points in at most 20 steps...
2022-04-05 01:57:25,078 INFO Computing 2048 means at 31%
2022-04-05 01:57:25,157 INFO Computing 50 means of 577 points in at most 20 steps...
2022-04-05 01:57:25,218 INFO Computing 2048 means at 34%
2022-04-05 01:57:25,295 INFO Computing 50 means of 585 points in at most 20 steps...
2022-04-05 01:57:25,357 INFO Computing 2048 means at 36%
2022-04-05 01:57:25,432 INFO Computing 50 means of 576 points in at most 20 steps...
2022-04-05 01:57:25,494 INFO Computing 2048 means at 39%
2022-04-05 01:57:25,571 INFO Computing 50 means of 583 points in at most 20 steps...
2022-04-05 01:57:25,633 INFO Computing 2048 means at 41%
2022-04-05 01:57:25,709 INFO Computing 50 means of 587 points in at most 20 steps...
2022-04-05 01:57:25,771 INFO Computing 2048 means at 43%
2022-04-05 01:57:25,849 INFO Computing 50 means of 588 points in at most 20 steps...
2022-04-05 01:57:25,913 INFO Computing 2048 means at 46%
2022-04-05 01:57:25,988 INFO Computing 50 means of 604 points in at most 20 steps...
2022-04-05 01:57:26,055 INFO Computing 2048 means at 48%
2022-04-05 01:57:26,145 INFO Computing 50 means of 591 points in at most 20 steps...
2022-04-05 01:57:26,208 INFO Computing 2048 means at 51%
2022-04-05 01:57:26,287 INFO Computing 50 means of 583 points in at most 20 steps...
2022-04-05 01:57:26,351 INFO Computing 2048 means at 53%
2022-04-05 01:57:26,428 INFO Computing 50 means of 588 points in at most 20 steps...
2022-04-05 01:57:26,493 INFO Computing 2048 means at 56%
2022-04-05 01:57:26,571 INFO Computing 50 means of 587 points in at most 20 steps...
2022-04-05 01:57:26,635 INFO Computing 2048 means at 58%
2022-04-05 01:57:26,713 INFO Computing 50 means of 592 points in at most 20 steps...
2022-04-05 01:57:26,776 INFO Computing 2048 means at 61%
2022-04-05 01:57:26,853 INFO Computing 50 means of 593 points in at most 20 steps...
2022-04-05 01:57:26,916 INFO Computing 2048 means at 63%
2022-04-05 01:57:26,994 INFO Computing 50 means of 564 points in at most 20 steps...
2022-04-05 01:57:27,055 INFO Computing 2048 means at 65%
2022-04-05 01:57:27,131 INFO Computing 50 means of 588 points in at most 20 steps...
2022-04-05 01:57:27,194 INFO Computing 2048 means at 68%
2022-04-05 01:57:27,277 INFO Computing 50 means of 587 points in at most 20 steps...
2022-04-05 01:57:27,342 INFO Computing 2048 means at 70%
2022-04-05 01:57:27,421 INFO Computing 50 means of 596 points in at most 20 steps...
2022-04-05 01:57:27,487 INFO Computing 2048 means at 73%
2022-04-05 01:57:27,574 INFO Computing 50 means of 596 points in at most 20 steps...
2022-04-05 01:57:27,642 INFO Computing 2048 means at 75%
2022-04-05 01:57:27,722 INFO Computing 50 means of 600 points in at most 20 steps...
2022-04-05 01:57:27,789 INFO Computing 2048 means at 78%
2022-04-05 01:57:27,867 INFO Computing 50 means of 570 points in at most 20 steps...
2022-04-05 01:57:27,928 INFO Computing 2048 means at 80%
2022-04-05 01:57:28,005 INFO Computing 50 means of 604 points in at most 20 steps...
2022-04-05 01:57:28,069 INFO Computing 2048 means at 83%
2022-04-05 01:57:28,146 INFO Computing 50 means of 580 points in at most 20 steps...
2022-04-05 01:57:28,210 INFO Computing 2048 means at 85%
2022-04-05 01:57:28,287 INFO Computing 50 means of 586 points in at most 20 steps...
2022-04-05 01:57:28,351 INFO Computing 2048 means at 87%
2022-04-05 01:57:28,429 INFO Computing 50 means of 594 points in at most 20 steps...
2022-04-05 01:57:28,494 INFO Computing 2048 means at 90%
2022-04-05 01:57:28,572 INFO Computing 50 means of 585 points in at most 20 steps...
2022-04-05 01:57:28,635 INFO Computing 2048 means at 92%
2022-04-05 01:57:28,712 INFO Computing 50 means of 566 points in at most 20 steps...
2022-04-05 01:57:28,774 INFO Computing 2048 means at 95%
2022-04-05 01:57:28,851 INFO Computing 50 means of 577 points in at most 20 steps...
2022-04-05 01:57:28,913 INFO Computing 2048 means at 97%
2022-04-05 01:57:28,993 INFO Computing 48 means of 566 points in at most 20 steps...
2022-04-05 01:57:29,053 INFO Computing 2048 means at 100%
2022-04-05 01:57:32,953 INFO Do vol update step
2022-04-05 01:57:32,955 INFO Compute adjoint forward mapping on the images
2022-04-05 01:57:34,559 DEBUG Corresponding type is already complex complex128.
2022-04-05 01:57:36,972 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2022-04-05 01:57:36,987 INFO Computing adjoint forward mappings from 2048 rotations at 50%
2022-04-05 01:57:38,418 DEBUG Corresponding type is already complex complex128.
2022-04-05 01:57:40,812 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2022-04-05 01:57:40,824 INFO Computing adjoint forward mappings from 2048 rotations at 100%
2022-04-05 01:57:41,687 DEBUG Corresponding type is already real float64.
2022-04-05 01:57:41,687 DEBUG anufft passed real_type for signal, converting
2022-04-05 01:57:47,592 INFO Computing kernel from 2048 rotations at 50%
2022-04-05 01:57:48,486 DEBUG Corresponding type is already real float64.
2022-04-05 01:57:48,486 DEBUG anufft passed real_type for signal, converting
2022-04-05 01:57:54,638 INFO Computing kernel from 2048 rotations at 100%
2022-04-05 01:57:54,640 INFO Computing non-centered Fourier Transform
2022-04-05 01:57:54,824 INFO Add ramp filter regularisation
2022-04-05 01:57:59,199 INFO Update data_discrepancies
2022-04-05 01:57:59,200 INFO Computing \|Ag.u - f_i\|^2
2022-04-05 01:58:00,049 DEBUG Corresponding type is already real float64.
2022-04-05 01:58:00,049 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:58:14,830 INFO Computing data fidelity for 114564 rotations and 2048 images at 0%
2022-04-05 01:58:15,574 DEBUG Corresponding type is already real float64.
2022-04-05 01:58:15,574 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:58:28,706 INFO Computing data fidelity for 114564 rotations and 2048 images at 1%
2022-04-05 01:58:29,419 DEBUG Corresponding type is already real float64.
2022-04-05 01:58:29,419 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:58:42,525 INFO Computing data fidelity for 114564 rotations and 2048 images at 2%
2022-04-05 01:58:43,251 DEBUG Corresponding type is already real float64.
2022-04-05 01:58:43,251 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:58:56,425 INFO Computing data fidelity for 114564 rotations and 2048 images at 3%
2022-04-05 01:58:57,128 DEBUG Corresponding type is already real float64.
2022-04-05 01:58:57,128 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:59:10,214 INFO Computing data fidelity for 114564 rotations and 2048 images at 4%
2022-04-05 01:59:10,924 DEBUG Corresponding type is already real float64.
2022-04-05 01:59:10,925 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:59:24,054 INFO Computing data fidelity for 114564 rotations and 2048 images at 5%
2022-04-05 01:59:24,771 DEBUG Corresponding type is already real float64.
2022-04-05 01:59:24,771 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:59:37,938 INFO Computing data fidelity for 114564 rotations and 2048 images at 6%
2022-04-05 01:59:38,643 DEBUG Corresponding type is already real float64.
2022-04-05 01:59:38,644 DEBUG nufft passed real_type for signal, converting
2022-04-05 01:59:51,762 INFO Computing data fidelity for 114564 rotations and 2048 images at 7%
2022-04-05 01:59:52,471 DEBUG Corresponding type is already real float64.
2022-04-05 01:59:52,472 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:00:05,587 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2022-04-05 02:00:06,295 DEBUG Corresponding type is already real float64.
2022-04-05 02:00:06,295 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:00:19,426 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2022-04-05 02:00:20,140 DEBUG Corresponding type is already real float64.
2022-04-05 02:00:20,140 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:00:33,167 INFO Computing data fidelity for 114564 rotations and 2048 images at 9%
2022-04-05 02:00:33,857 DEBUG Corresponding type is already real float64.
2022-04-05 02:00:33,857 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:00:46,946 INFO Computing data fidelity for 114564 rotations and 2048 images at 10%
2022-04-05 02:00:47,648 DEBUG Corresponding type is already real float64.
2022-04-05 02:00:47,648 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:01:00,730 INFO Computing data fidelity for 114564 rotations and 2048 images at 11%
2022-04-05 02:01:01,427 DEBUG Corresponding type is already real float64.
2022-04-05 02:01:01,427 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:01:14,474 INFO Computing data fidelity for 114564 rotations and 2048 images at 12%
2022-04-05 02:01:15,172 DEBUG Corresponding type is already real float64.
2022-04-05 02:01:15,172 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:01:28,292 INFO Computing data fidelity for 114564 rotations and 2048 images at 13%
2022-04-05 02:01:28,990 DEBUG Corresponding type is already real float64.
2022-04-05 02:01:28,991 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:01:42,031 INFO Computing data fidelity for 114564 rotations and 2048 images at 14%
2022-04-05 02:01:42,727 DEBUG Corresponding type is already real float64.
2022-04-05 02:01:42,727 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:01:55,836 INFO Computing data fidelity for 114564 rotations and 2048 images at 15%
2022-04-05 02:01:56,551 DEBUG Corresponding type is already real float64.
2022-04-05 02:01:56,551 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:02:09,606 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2022-04-05 02:02:10,310 DEBUG Corresponding type is already real float64.
2022-04-05 02:02:10,310 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:02:23,413 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2022-04-05 02:02:24,119 DEBUG Corresponding type is already real float64.
2022-04-05 02:02:24,119 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:02:37,240 INFO Computing data fidelity for 114564 rotations and 2048 images at 17%
2022-04-05 02:02:37,941 DEBUG Corresponding type is already real float64.
2022-04-05 02:02:37,942 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:02:51,072 INFO Computing data fidelity for 114564 rotations and 2048 images at 18%
2022-04-05 02:02:51,781 DEBUG Corresponding type is already real float64.
2022-04-05 02:02:51,781 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:03:04,847 INFO Computing data fidelity for 114564 rotations and 2048 images at 19%
2022-04-05 02:03:05,561 DEBUG Corresponding type is already real float64.
2022-04-05 02:03:05,561 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:03:18,565 INFO Computing data fidelity for 114564 rotations and 2048 images at 20%
2022-04-05 02:03:19,262 DEBUG Corresponding type is already real float64.
2022-04-05 02:03:19,262 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:03:32,449 INFO Computing data fidelity for 114564 rotations and 2048 images at 21%
2022-04-05 02:03:33,138 DEBUG Corresponding type is already real float64.
2022-04-05 02:03:33,138 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:03:46,265 INFO Computing data fidelity for 114564 rotations and 2048 images at 22%
2022-04-05 02:03:46,967 DEBUG Corresponding type is already real float64.
2022-04-05 02:03:46,967 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:04:00,050 INFO Computing data fidelity for 114564 rotations and 2048 images at 23%
2022-04-05 02:04:00,758 DEBUG Corresponding type is already real float64.
2022-04-05 02:04:00,758 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:04:13,706 INFO Computing data fidelity for 114564 rotations and 2048 images at 24%
2022-04-05 02:04:14,406 DEBUG Corresponding type is already real float64.
2022-04-05 02:04:14,406 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:04:27,354 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2022-04-05 02:04:28,052 DEBUG Corresponding type is already real float64.
2022-04-05 02:04:28,053 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:04:41,215 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2022-04-05 02:04:41,929 DEBUG Corresponding type is already real float64.
2022-04-05 02:04:41,929 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:04:54,994 INFO Computing data fidelity for 114564 rotations and 2048 images at 26%
2022-04-05 02:04:55,698 DEBUG Corresponding type is already real float64.
2022-04-05 02:04:55,698 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:05:08,699 INFO Computing data fidelity for 114564 rotations and 2048 images at 27%
2022-04-05 02:05:09,397 DEBUG Corresponding type is already real float64.
2022-04-05 02:05:09,397 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:05:22,506 INFO Computing data fidelity for 114564 rotations and 2048 images at 28%
2022-04-05 02:05:23,199 DEBUG Corresponding type is already real float64.
2022-04-05 02:05:23,199 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:05:36,183 INFO Computing data fidelity for 114564 rotations and 2048 images at 29%
2022-04-05 02:05:36,883 DEBUG Corresponding type is already real float64.
2022-04-05 02:05:36,883 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:05:49,831 INFO Computing data fidelity for 114564 rotations and 2048 images at 30%
2022-04-05 02:05:50,531 DEBUG Corresponding type is already real float64.
2022-04-05 02:05:50,531 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:06:03,474 INFO Computing data fidelity for 114564 rotations and 2048 images at 31%
2022-04-05 02:06:04,178 DEBUG Corresponding type is already real float64.
2022-04-05 02:06:04,178 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:06:17,036 INFO Computing data fidelity for 114564 rotations and 2048 images at 32%
2022-04-05 02:06:17,731 DEBUG Corresponding type is already real float64.
2022-04-05 02:06:17,731 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:06:30,602 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2022-04-05 02:06:31,298 DEBUG Corresponding type is already real float64.
2022-04-05 02:06:31,298 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:06:44,251 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2022-04-05 02:06:44,974 DEBUG Corresponding type is already real float64.
2022-04-05 02:06:44,974 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:06:58,789 INFO Computing data fidelity for 114564 rotations and 2048 images at 34%
2022-04-05 02:06:59,510 DEBUG Corresponding type is already real float64.
2022-04-05 02:06:59,510 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:07:12,342 INFO Computing data fidelity for 114564 rotations and 2048 images at 35%
2022-04-05 02:07:13,040 DEBUG Corresponding type is already real float64.
2022-04-05 02:07:13,040 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:07:25,843 INFO Computing data fidelity for 114564 rotations and 2048 images at 36%
2022-04-05 02:07:26,534 DEBUG Corresponding type is already real float64.
2022-04-05 02:07:26,534 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:07:39,371 INFO Computing data fidelity for 114564 rotations and 2048 images at 37%
2022-04-05 02:07:40,106 DEBUG Corresponding type is already real float64.
2022-04-05 02:07:40,106 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:07:53,288 INFO Computing data fidelity for 114564 rotations and 2048 images at 38%
2022-04-05 02:07:53,995 DEBUG Corresponding type is already real float64.
2022-04-05 02:07:53,995 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:08:06,869 INFO Computing data fidelity for 114564 rotations and 2048 images at 39%
2022-04-05 02:08:07,565 DEBUG Corresponding type is already real float64.
2022-04-05 02:08:07,565 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:08:20,452 INFO Computing data fidelity for 114564 rotations and 2048 images at 40%
2022-04-05 02:08:21,173 DEBUG Corresponding type is already real float64.
2022-04-05 02:08:21,173 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:08:34,049 INFO Computing data fidelity for 114564 rotations and 2048 images at 41%
2022-04-05 02:08:34,768 DEBUG Corresponding type is already real float64.
2022-04-05 02:08:34,768 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:08:47,743 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2022-04-05 02:08:48,446 DEBUG Corresponding type is already real float64.
2022-04-05 02:08:48,446 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:09:01,383 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2022-04-05 02:09:02,089 DEBUG Corresponding type is already real float64.
2022-04-05 02:09:02,089 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:09:15,033 INFO Computing data fidelity for 114564 rotations and 2048 images at 43%
2022-04-05 02:09:15,749 DEBUG Corresponding type is already real float64.
2022-04-05 02:09:15,750 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:09:28,536 INFO Computing data fidelity for 114564 rotations and 2048 images at 44%
2022-04-05 02:09:29,234 DEBUG Corresponding type is already real float64.
2022-04-05 02:09:29,235 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:09:42,165 INFO Computing data fidelity for 114564 rotations and 2048 images at 45%
2022-04-05 02:09:42,865 DEBUG Corresponding type is already real float64.
2022-04-05 02:09:42,865 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:09:55,745 INFO Computing data fidelity for 114564 rotations and 2048 images at 46%
2022-04-05 02:09:56,447 DEBUG Corresponding type is already real float64.
2022-04-05 02:09:56,447 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:10:09,318 INFO Computing data fidelity for 114564 rotations and 2048 images at 47%
2022-04-05 02:10:10,021 DEBUG Corresponding type is already real float64.
2022-04-05 02:10:10,021 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:10:22,879 INFO Computing data fidelity for 114564 rotations and 2048 images at 48%
2022-04-05 02:10:23,573 DEBUG Corresponding type is already real float64.
2022-04-05 02:10:23,573 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:10:36,398 INFO Computing data fidelity for 114564 rotations and 2048 images at 49%
2022-04-05 02:10:37,103 DEBUG Corresponding type is already real float64.
2022-04-05 02:10:37,103 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:10:49,959 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2022-04-05 02:10:50,671 DEBUG Corresponding type is already real float64.
2022-04-05 02:10:50,671 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:11:03,591 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2022-04-05 02:11:04,300 DEBUG Corresponding type is already real float64.
2022-04-05 02:11:04,300 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:11:17,142 INFO Computing data fidelity for 114564 rotations and 2048 images at 51%
2022-04-05 02:11:17,865 DEBUG Corresponding type is already real float64.
2022-04-05 02:11:17,865 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:11:30,719 INFO Computing data fidelity for 114564 rotations and 2048 images at 52%
2022-04-05 02:11:31,427 DEBUG Corresponding type is already real float64.
2022-04-05 02:11:31,427 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:11:44,357 INFO Computing data fidelity for 114564 rotations and 2048 images at 53%
2022-04-05 02:11:45,066 DEBUG Corresponding type is already real float64.
2022-04-05 02:11:45,066 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:11:58,018 INFO Computing data fidelity for 114564 rotations and 2048 images at 54%
2022-04-05 02:11:58,729 DEBUG Corresponding type is already real float64.
2022-04-05 02:11:58,729 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:12:11,609 INFO Computing data fidelity for 114564 rotations and 2048 images at 55%
2022-04-05 02:12:12,320 DEBUG Corresponding type is already real float64.
2022-04-05 02:12:12,320 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:12:25,258 INFO Computing data fidelity for 114564 rotations and 2048 images at 56%
2022-04-05 02:12:25,968 DEBUG Corresponding type is already real float64.
2022-04-05 02:12:25,968 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:12:38,854 INFO Computing data fidelity for 114564 rotations and 2048 images at 57%
2022-04-05 02:12:39,558 DEBUG Corresponding type is already real float64.
2022-04-05 02:12:39,558 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:12:52,608 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2022-04-05 02:12:53,334 DEBUG Corresponding type is already real float64.
2022-04-05 02:12:53,334 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:13:06,215 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2022-04-05 02:13:06,936 DEBUG Corresponding type is already real float64.
2022-04-05 02:13:06,936 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:13:19,829 INFO Computing data fidelity for 114564 rotations and 2048 images at 59%
2022-04-05 02:13:20,545 DEBUG Corresponding type is already real float64.
2022-04-05 02:13:20,546 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:13:33,383 INFO Computing data fidelity for 114564 rotations and 2048 images at 60%
2022-04-05 02:13:34,100 DEBUG Corresponding type is already real float64.
2022-04-05 02:13:34,100 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:13:47,005 INFO Computing data fidelity for 114564 rotations and 2048 images at 61%
2022-04-05 02:13:47,751 DEBUG Corresponding type is already real float64.
2022-04-05 02:13:47,751 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:14:00,625 INFO Computing data fidelity for 114564 rotations and 2048 images at 62%
2022-04-05 02:14:01,334 DEBUG Corresponding type is already real float64.
2022-04-05 02:14:01,334 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:14:14,198 INFO Computing data fidelity for 114564 rotations and 2048 images at 63%
2022-04-05 02:14:14,914 DEBUG Corresponding type is already real float64.
2022-04-05 02:14:14,914 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:14:27,871 INFO Computing data fidelity for 114564 rotations and 2048 images at 64%
2022-04-05 02:14:28,604 DEBUG Corresponding type is already real float64.
2022-04-05 02:14:28,604 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:14:41,548 INFO Computing data fidelity for 114564 rotations and 2048 images at 65%
2022-04-05 02:14:42,262 DEBUG Corresponding type is already real float64.
2022-04-05 02:14:42,263 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:14:55,186 INFO Computing data fidelity for 114564 rotations and 2048 images at 66%
2022-04-05 02:14:55,904 DEBUG Corresponding type is already real float64.
2022-04-05 02:14:55,904 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:15:08,832 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2022-04-05 02:15:09,546 DEBUG Corresponding type is already real float64.
2022-04-05 02:15:09,546 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:15:22,531 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2022-04-05 02:15:23,257 DEBUG Corresponding type is already real float64.
2022-04-05 02:15:23,257 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:15:36,230 INFO Computing data fidelity for 114564 rotations and 2048 images at 68%
2022-04-05 02:15:36,945 DEBUG Corresponding type is already real float64.
2022-04-05 02:15:36,945 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:15:49,835 INFO Computing data fidelity for 114564 rotations and 2048 images at 69%
2022-04-05 02:15:50,553 DEBUG Corresponding type is already real float64.
2022-04-05 02:15:50,553 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:16:03,436 INFO Computing data fidelity for 114564 rotations and 2048 images at 70%
2022-04-05 02:16:04,164 DEBUG Corresponding type is already real float64.
2022-04-05 02:16:04,164 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:16:17,095 INFO Computing data fidelity for 114564 rotations and 2048 images at 71%
2022-04-05 02:16:17,814 DEBUG Corresponding type is already real float64.
2022-04-05 02:16:17,814 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:16:30,692 INFO Computing data fidelity for 114564 rotations and 2048 images at 72%
2022-04-05 02:16:31,408 DEBUG Corresponding type is already real float64.
2022-04-05 02:16:31,408 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:16:44,593 INFO Computing data fidelity for 114564 rotations and 2048 images at 73%
2022-04-05 02:16:45,325 DEBUG Corresponding type is already real float64.
2022-04-05 02:16:45,325 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:16:58,271 INFO Computing data fidelity for 114564 rotations and 2048 images at 74%
2022-04-05 02:16:58,996 DEBUG Corresponding type is already real float64.
2022-04-05 02:16:58,997 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:17:11,941 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2022-04-05 02:17:12,656 DEBUG Corresponding type is already real float64.
2022-04-05 02:17:12,656 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:17:25,691 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2022-04-05 02:17:26,421 DEBUG Corresponding type is already real float64.
2022-04-05 02:17:26,421 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:17:40,001 INFO Computing data fidelity for 114564 rotations and 2048 images at 76%
2022-04-05 02:17:40,736 DEBUG Corresponding type is already real float64.
2022-04-05 02:17:40,736 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:17:54,885 INFO Computing data fidelity for 114564 rotations and 2048 images at 77%
2022-04-05 02:17:55,606 DEBUG Corresponding type is already real float64.
2022-04-05 02:17:55,606 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:18:08,477 INFO Computing data fidelity for 114564 rotations and 2048 images at 78%
2022-04-05 02:18:09,206 DEBUG Corresponding type is already real float64.
2022-04-05 02:18:09,206 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:18:22,204 INFO Computing data fidelity for 114564 rotations and 2048 images at 79%
2022-04-05 02:18:22,914 DEBUG Corresponding type is already real float64.
2022-04-05 02:18:22,914 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:18:35,802 INFO Computing data fidelity for 114564 rotations and 2048 images at 80%
2022-04-05 02:18:36,519 DEBUG Corresponding type is already real float64.
2022-04-05 02:18:36,519 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:18:49,471 INFO Computing data fidelity for 114564 rotations and 2048 images at 81%
2022-04-05 02:18:50,199 DEBUG Corresponding type is already real float64.
2022-04-05 02:18:50,199 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:19:03,133 INFO Computing data fidelity for 114564 rotations and 2048 images at 82%
2022-04-05 02:19:03,848 DEBUG Corresponding type is already real float64.
2022-04-05 02:19:03,848 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:19:16,817 INFO Computing data fidelity for 114564 rotations and 2048 images at 83%
2022-04-05 02:19:17,529 DEBUG Corresponding type is already real float64.
2022-04-05 02:19:17,529 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:19:30,422 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2022-04-05 02:19:31,136 DEBUG Corresponding type is already real float64.
2022-04-05 02:19:31,136 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:19:44,119 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2022-04-05 02:19:44,869 DEBUG Corresponding type is already real float64.
2022-04-05 02:19:44,869 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:19:57,750 INFO Computing data fidelity for 114564 rotations and 2048 images at 85%
2022-04-05 02:19:58,477 DEBUG Corresponding type is already real float64.
2022-04-05 02:19:58,477 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:20:11,442 INFO Computing data fidelity for 114564 rotations and 2048 images at 86%
2022-04-05 02:20:12,159 DEBUG Corresponding type is already real float64.
2022-04-05 02:20:12,159 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:20:25,138 INFO Computing data fidelity for 114564 rotations and 2048 images at 87%
2022-04-05 02:20:25,864 DEBUG Corresponding type is already real float64.
2022-04-05 02:20:25,865 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:20:38,732 INFO Computing data fidelity for 114564 rotations and 2048 images at 88%
2022-04-05 02:20:39,463 DEBUG Corresponding type is already real float64.
2022-04-05 02:20:39,463 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:20:52,451 INFO Computing data fidelity for 114564 rotations and 2048 images at 89%
2022-04-05 02:20:53,185 DEBUG Corresponding type is already real float64.
2022-04-05 02:20:53,185 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:21:06,112 INFO Computing data fidelity for 114564 rotations and 2048 images at 90%
2022-04-05 02:21:06,826 DEBUG Corresponding type is already real float64.
2022-04-05 02:21:06,827 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:21:19,731 INFO Computing data fidelity for 114564 rotations and 2048 images at 91%
2022-04-05 02:21:20,453 DEBUG Corresponding type is already real float64.
2022-04-05 02:21:20,453 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:21:33,361 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2022-04-05 02:21:34,084 DEBUG Corresponding type is already real float64.
2022-04-05 02:21:34,084 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:21:46,971 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2022-04-05 02:21:47,691 DEBUG Corresponding type is already real float64.
2022-04-05 02:21:47,692 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:22:00,594 INFO Computing data fidelity for 114564 rotations and 2048 images at 93%
2022-04-05 02:22:01,310 DEBUG Corresponding type is already real float64.
2022-04-05 02:22:01,310 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:22:14,247 INFO Computing data fidelity for 114564 rotations and 2048 images at 94%
2022-04-05 02:22:14,990 DEBUG Corresponding type is already real float64.
2022-04-05 02:22:14,990 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:22:27,882 INFO Computing data fidelity for 114564 rotations and 2048 images at 95%
2022-04-05 02:22:28,599 DEBUG Corresponding type is already real float64.
2022-04-05 02:22:28,600 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:22:41,795 INFO Computing data fidelity for 114564 rotations and 2048 images at 96%
2022-04-05 02:22:42,517 DEBUG Corresponding type is already real float64.
2022-04-05 02:22:42,517 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:22:56,661 INFO Computing data fidelity for 114564 rotations and 2048 images at 97%
2022-04-05 02:22:57,400 DEBUG Corresponding type is already real float64.
2022-04-05 02:22:57,401 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:23:10,332 INFO Computing data fidelity for 114564 rotations and 2048 images at 98%
2022-04-05 02:23:11,046 DEBUG Corresponding type is already real float64.
2022-04-05 02:23:11,046 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:23:24,092 INFO Computing data fidelity for 114564 rotations and 2048 images at 99%
2022-04-05 02:23:24,546 DEBUG Corresponding type is already real float64.
2022-04-05 02:23:24,546 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:23:35,707 INFO Computing data fidelity for 114564 rotations and 2048 images at 100%
2022-04-05 02:23:36,873 INFO Do lambda update step
2022-04-05 02:24:00,239 INFO Do rots update step
2022-04-05 02:24:01,183 INFO Projecting 2048 vectors onto 114564-simplex at 2%
2022-04-05 02:24:01,905 INFO Projecting 2048 vectors onto 114564-simplex at 4%
2022-04-05 02:24:02,622 INFO Projecting 2048 vectors onto 114564-simplex at 7%
2022-04-05 02:24:03,314 INFO Projecting 2048 vectors onto 114564-simplex at 9%
2022-04-05 02:24:04,012 INFO Projecting 2048 vectors onto 114564-simplex at 12%
2022-04-05 02:24:04,704 INFO Projecting 2048 vectors onto 114564-simplex at 14%
2022-04-05 02:24:05,393 INFO Projecting 2048 vectors onto 114564-simplex at 17%
2022-04-05 02:24:06,089 INFO Projecting 2048 vectors onto 114564-simplex at 19%
2022-04-05 02:24:06,775 INFO Projecting 2048 vectors onto 114564-simplex at 21%
2022-04-05 02:24:07,480 INFO Projecting 2048 vectors onto 114564-simplex at 24%
2022-04-05 02:24:08,373 INFO Projecting 2048 vectors onto 114564-simplex at 26%
2022-04-05 02:24:09,068 INFO Projecting 2048 vectors onto 114564-simplex at 29%
2022-04-05 02:24:09,756 INFO Projecting 2048 vectors onto 114564-simplex at 31%
2022-04-05 02:24:10,448 INFO Projecting 2048 vectors onto 114564-simplex at 34%
2022-04-05 02:24:11,143 INFO Projecting 2048 vectors onto 114564-simplex at 36%
2022-04-05 02:24:11,830 INFO Projecting 2048 vectors onto 114564-simplex at 39%
2022-04-05 02:24:12,519 INFO Projecting 2048 vectors onto 114564-simplex at 41%
2022-04-05 02:24:13,221 INFO Projecting 2048 vectors onto 114564-simplex at 43%
2022-04-05 02:24:13,930 INFO Projecting 2048 vectors onto 114564-simplex at 46%
2022-04-05 02:24:14,594 INFO Projecting 2048 vectors onto 114564-simplex at 48%
2022-04-05 02:24:15,429 INFO Projecting 2048 vectors onto 114564-simplex at 51%
2022-04-05 02:24:16,067 INFO Projecting 2048 vectors onto 114564-simplex at 53%
2022-04-05 02:24:16,704 INFO Projecting 2048 vectors onto 114564-simplex at 56%
2022-04-05 02:24:17,344 INFO Projecting 2048 vectors onto 114564-simplex at 58%
2022-04-05 02:24:17,992 INFO Projecting 2048 vectors onto 114564-simplex at 61%
2022-04-05 02:24:18,629 INFO Projecting 2048 vectors onto 114564-simplex at 63%
2022-04-05 02:24:19,287 INFO Projecting 2048 vectors onto 114564-simplex at 65%
2022-04-05 02:24:19,950 INFO Projecting 2048 vectors onto 114564-simplex at 68%
2022-04-05 02:24:20,613 INFO Projecting 2048 vectors onto 114564-simplex at 70%
2022-04-05 02:24:21,255 INFO Projecting 2048 vectors onto 114564-simplex at 73%
2022-04-05 02:24:22,070 INFO Projecting 2048 vectors onto 114564-simplex at 75%
2022-04-05 02:24:22,701 INFO Projecting 2048 vectors onto 114564-simplex at 78%
2022-04-05 02:24:23,346 INFO Projecting 2048 vectors onto 114564-simplex at 80%
2022-04-05 02:24:23,991 INFO Projecting 2048 vectors onto 114564-simplex at 83%
2022-04-05 02:24:24,649 INFO Projecting 2048 vectors onto 114564-simplex at 85%
2022-04-05 02:24:25,325 INFO Projecting 2048 vectors onto 114564-simplex at 87%
2022-04-05 02:24:25,970 INFO Projecting 2048 vectors onto 114564-simplex at 90%
2022-04-05 02:24:26,597 INFO Projecting 2048 vectors onto 114564-simplex at 92%
2022-04-05 02:24:27,235 INFO Projecting 2048 vectors onto 114564-simplex at 95%
2022-04-05 02:24:27,882 INFO Projecting 2048 vectors onto 114564-simplex at 97%
2022-04-05 02:24:28,505 INFO Projecting 2048 vectors onto 114564-simplex at 100%
2022-04-05 02:24:29,941 INFO Computing 50 means of 587 points in at most 20 steps...
2022-04-05 02:24:30,040 INFO Computing 2048 means at 2%
2022-04-05 02:24:30,138 INFO Computing 50 means of 562 points in at most 20 steps...
2022-04-05 02:24:30,206 INFO Computing 2048 means at 4%
2022-04-05 02:24:30,296 INFO Computing 50 means of 598 points in at most 20 steps...
2022-04-05 02:24:30,372 INFO Computing 2048 means at 7%
2022-04-05 02:24:30,459 INFO Computing 50 means of 555 points in at most 20 steps...
2022-04-05 02:24:30,521 INFO Computing 2048 means at 9%
2022-04-05 02:24:30,596 INFO Computing 50 means of 578 points in at most 20 steps...
2022-04-05 02:24:30,658 INFO Computing 2048 means at 12%
2022-04-05 02:24:30,734 INFO Computing 50 means of 579 points in at most 20 steps...
2022-04-05 02:24:30,795 INFO Computing 2048 means at 14%
2022-04-05 02:24:30,873 INFO Computing 50 means of 593 points in at most 20 steps...
2022-04-05 02:24:30,936 INFO Computing 2048 means at 17%
2022-04-05 02:24:31,012 INFO Computing 50 means of 592 points in at most 20 steps...
2022-04-05 02:24:31,073 INFO Computing 2048 means at 19%
2022-04-05 02:24:31,151 INFO Computing 50 means of 600 points in at most 20 steps...
2022-04-05 02:24:31,218 INFO Computing 2048 means at 21%
2022-04-05 02:24:31,294 INFO Computing 50 means of 595 points in at most 20 steps...
2022-04-05 02:24:31,361 INFO Computing 2048 means at 24%
2022-04-05 02:24:31,455 INFO Computing 50 means of 572 points in at most 20 steps...
2022-04-05 02:24:31,542 INFO Computing 2048 means at 26%
2022-04-05 02:24:31,619 INFO Computing 50 means of 567 points in at most 20 steps...
2022-04-05 02:24:31,679 INFO Computing 2048 means at 29%
2022-04-05 02:24:31,756 INFO Computing 50 means of 587 points in at most 20 steps...
2022-04-05 02:24:31,817 INFO Computing 2048 means at 31%
2022-04-05 02:24:31,892 INFO Computing 50 means of 575 points in at most 20 steps...
2022-04-05 02:24:31,953 INFO Computing 2048 means at 34%
2022-04-05 02:24:32,029 INFO Computing 50 means of 583 points in at most 20 steps...
2022-04-05 02:24:32,090 INFO Computing 2048 means at 36%
2022-04-05 02:24:32,164 INFO Computing 50 means of 577 points in at most 20 steps...
2022-04-05 02:24:32,227 INFO Computing 2048 means at 39%
2022-04-05 02:24:32,303 INFO Computing 50 means of 582 points in at most 20 steps...
2022-04-05 02:24:32,363 INFO Computing 2048 means at 41%
2022-04-05 02:24:32,439 INFO Computing 50 means of 586 points in at most 20 steps...
2022-04-05 02:24:32,501 INFO Computing 2048 means at 43%
2022-04-05 02:24:32,577 INFO Computing 50 means of 591 points in at most 20 steps...
2022-04-05 02:24:32,639 INFO Computing 2048 means at 46%
2022-04-05 02:24:32,718 INFO Computing 50 means of 604 points in at most 20 steps...
2022-04-05 02:24:32,787 INFO Computing 2048 means at 48%
2022-04-05 02:24:32,882 INFO Computing 50 means of 590 points in at most 20 steps...
2022-04-05 02:24:32,945 INFO Computing 2048 means at 51%
2022-04-05 02:24:33,022 INFO Computing 50 means of 582 points in at most 20 steps...
2022-04-05 02:24:33,084 INFO Computing 2048 means at 53%
2022-04-05 02:24:33,167 INFO Computing 50 means of 588 points in at most 20 steps...
2022-04-05 02:24:33,231 INFO Computing 2048 means at 56%
2022-04-05 02:24:33,308 INFO Computing 50 means of 588 points in at most 20 steps...
2022-04-05 02:24:33,370 INFO Computing 2048 means at 58%
2022-04-05 02:24:33,453 INFO Computing 50 means of 590 points in at most 20 steps...
2022-04-05 02:24:33,516 INFO Computing 2048 means at 61%
2022-04-05 02:24:33,592 INFO Computing 50 means of 589 points in at most 20 steps...
2022-04-05 02:24:33,655 INFO Computing 2048 means at 63%
2022-04-05 02:24:33,733 INFO Computing 50 means of 564 points in at most 20 steps...
2022-04-05 02:24:33,797 INFO Computing 2048 means at 65%
2022-04-05 02:24:33,878 INFO Computing 50 means of 588 points in at most 20 steps...
2022-04-05 02:24:33,946 INFO Computing 2048 means at 68%
2022-04-05 02:24:34,027 INFO Computing 50 means of 585 points in at most 20 steps...
2022-04-05 02:24:34,089 INFO Computing 2048 means at 70%
2022-04-05 02:24:34,173 INFO Computing 50 means of 596 points in at most 20 steps...
2022-04-05 02:24:34,240 INFO Computing 2048 means at 73%
2022-04-05 02:24:34,333 INFO Computing 50 means of 596 points in at most 20 steps...
2022-04-05 02:24:34,398 INFO Computing 2048 means at 75%
2022-04-05 02:24:34,476 INFO Computing 50 means of 598 points in at most 20 steps...
2022-04-05 02:24:34,540 INFO Computing 2048 means at 78%
2022-04-05 02:24:34,619 INFO Computing 50 means of 570 points in at most 20 steps...
2022-04-05 02:24:34,679 INFO Computing 2048 means at 80%
2022-04-05 02:24:34,757 INFO Computing 50 means of 603 points in at most 20 steps...
2022-04-05 02:24:34,825 INFO Computing 2048 means at 83%
2022-04-05 02:24:34,906 INFO Computing 50 means of 581 points in at most 20 steps...
2022-04-05 02:24:34,968 INFO Computing 2048 means at 85%
2022-04-05 02:24:35,045 INFO Computing 50 means of 586 points in at most 20 steps...
2022-04-05 02:24:35,109 INFO Computing 2048 means at 87%
2022-04-05 02:24:35,187 INFO Computing 50 means of 592 points in at most 20 steps...
2022-04-05 02:24:35,251 INFO Computing 2048 means at 90%
2022-04-05 02:24:35,328 INFO Computing 50 means of 587 points in at most 20 steps...
2022-04-05 02:24:35,392 INFO Computing 2048 means at 92%
2022-04-05 02:24:35,471 INFO Computing 50 means of 565 points in at most 20 steps...
2022-04-05 02:24:35,534 INFO Computing 2048 means at 95%
2022-04-05 02:24:35,618 INFO Computing 50 means of 580 points in at most 20 steps...
2022-04-05 02:24:35,682 INFO Computing 2048 means at 97%
2022-04-05 02:24:35,761 INFO Computing 48 means of 566 points in at most 20 steps...
2022-04-05 02:24:35,820 INFO Computing 2048 means at 100%
2022-04-05 02:24:40,329 INFO Do vol update step
2022-04-05 02:24:40,331 INFO Compute adjoint forward mapping on the images
2022-04-05 02:24:41,940 DEBUG Corresponding type is already complex complex128.
2022-04-05 02:24:44,361 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2022-04-05 02:24:44,376 INFO Computing adjoint forward mappings from 2048 rotations at 50%
2022-04-05 02:24:45,810 DEBUG Corresponding type is already complex complex128.
2022-04-05 02:24:48,223 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2022-04-05 02:24:48,235 INFO Computing adjoint forward mappings from 2048 rotations at 100%
2022-04-05 02:24:49,076 DEBUG Corresponding type is already real float64.
2022-04-05 02:24:49,076 DEBUG anufft passed real_type for signal, converting
2022-04-05 02:24:55,047 INFO Computing kernel from 2048 rotations at 50%
2022-04-05 02:24:55,874 DEBUG Corresponding type is already real float64.
2022-04-05 02:24:55,875 DEBUG anufft passed real_type for signal, converting
2022-04-05 02:25:01,981 INFO Computing kernel from 2048 rotations at 100%
2022-04-05 02:25:01,983 INFO Computing non-centered Fourier Transform
2022-04-05 02:25:02,167 INFO Add ramp filter regularisation
2022-04-05 02:25:06,984 INFO Update data_discrepancies
2022-04-05 02:25:06,985 INFO Computing \|Ag.u - f_i\|^2
2022-04-05 02:25:07,845 DEBUG Corresponding type is already real float64.
2022-04-05 02:25:07,846 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:25:22,613 INFO Computing data fidelity for 114564 rotations and 2048 images at 0%
2022-04-05 02:25:23,351 DEBUG Corresponding type is already real float64.
2022-04-05 02:25:23,351 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:25:37,667 INFO Computing data fidelity for 114564 rotations and 2048 images at 1%
2022-04-05 02:25:38,397 DEBUG Corresponding type is already real float64.
2022-04-05 02:25:38,397 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:25:52,280 INFO Computing data fidelity for 114564 rotations and 2048 images at 2%
2022-04-05 02:25:52,980 DEBUG Corresponding type is already real float64.
2022-04-05 02:25:52,980 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:26:05,969 INFO Computing data fidelity for 114564 rotations and 2048 images at 3%
2022-04-05 02:26:06,677 DEBUG Corresponding type is already real float64.
2022-04-05 02:26:06,678 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:26:19,650 INFO Computing data fidelity for 114564 rotations and 2048 images at 4%
2022-04-05 02:26:20,346 DEBUG Corresponding type is already real float64.
2022-04-05 02:26:20,346 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:26:33,382 INFO Computing data fidelity for 114564 rotations and 2048 images at 5%
2022-04-05 02:26:34,089 DEBUG Corresponding type is already real float64.
2022-04-05 02:26:34,089 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:26:47,146 INFO Computing data fidelity for 114564 rotations and 2048 images at 6%
2022-04-05 02:26:47,841 DEBUG Corresponding type is already real float64.
2022-04-05 02:26:47,841 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:27:00,940 INFO Computing data fidelity for 114564 rotations and 2048 images at 7%
2022-04-05 02:27:01,645 DEBUG Corresponding type is already real float64.
2022-04-05 02:27:01,645 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:27:14,716 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2022-04-05 02:27:15,416 DEBUG Corresponding type is already real float64.
2022-04-05 02:27:15,416 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:27:28,526 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2022-04-05 02:27:29,279 DEBUG Corresponding type is already real float64.
2022-04-05 02:27:29,280 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:27:42,509 INFO Computing data fidelity for 114564 rotations and 2048 images at 9%
2022-04-05 02:27:43,208 DEBUG Corresponding type is already real float64.
2022-04-05 02:27:43,208 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:27:56,582 INFO Computing data fidelity for 114564 rotations and 2048 images at 10%
2022-04-05 02:27:57,282 DEBUG Corresponding type is already real float64.
2022-04-05 02:27:57,282 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:28:10,345 INFO Computing data fidelity for 114564 rotations and 2048 images at 11%
2022-04-05 02:28:11,043 DEBUG Corresponding type is already real float64.
2022-04-05 02:28:11,043 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:28:24,019 INFO Computing data fidelity for 114564 rotations and 2048 images at 12%
2022-04-05 02:28:24,716 DEBUG Corresponding type is already real float64.
2022-04-05 02:28:24,716 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:28:37,759 INFO Computing data fidelity for 114564 rotations and 2048 images at 13%
2022-04-05 02:28:38,452 DEBUG Corresponding type is already real float64.
2022-04-05 02:28:38,452 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:28:51,528 INFO Computing data fidelity for 114564 rotations and 2048 images at 14%
2022-04-05 02:28:52,226 DEBUG Corresponding type is already real float64.
2022-04-05 02:28:52,226 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:29:05,188 INFO Computing data fidelity for 114564 rotations and 2048 images at 15%
2022-04-05 02:29:05,892 DEBUG Corresponding type is already real float64.
2022-04-05 02:29:05,892 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:29:18,945 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2022-04-05 02:29:19,657 DEBUG Corresponding type is already real float64.
2022-04-05 02:29:19,657 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:29:32,728 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2022-04-05 02:29:33,443 DEBUG Corresponding type is already real float64.
2022-04-05 02:29:33,443 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:29:46,484 INFO Computing data fidelity for 114564 rotations and 2048 images at 17%
2022-04-05 02:29:47,194 DEBUG Corresponding type is already real float64.
2022-04-05 02:29:47,194 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:30:00,146 INFO Computing data fidelity for 114564 rotations and 2048 images at 18%
2022-04-05 02:30:00,861 DEBUG Corresponding type is already real float64.
2022-04-05 02:30:00,862 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:30:13,674 INFO Computing data fidelity for 114564 rotations and 2048 images at 19%
2022-04-05 02:30:14,373 DEBUG Corresponding type is already real float64.
2022-04-05 02:30:14,373 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:30:27,192 INFO Computing data fidelity for 114564 rotations and 2048 images at 20%
2022-04-05 02:30:27,893 DEBUG Corresponding type is already real float64.
2022-04-05 02:30:27,893 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:30:40,667 INFO Computing data fidelity for 114564 rotations and 2048 images at 21%
2022-04-05 02:30:41,379 DEBUG Corresponding type is already real float64.
2022-04-05 02:30:41,379 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:30:54,183 INFO Computing data fidelity for 114564 rotations and 2048 images at 22%
2022-04-05 02:30:54,877 DEBUG Corresponding type is already real float64.
2022-04-05 02:30:54,877 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:31:07,680 INFO Computing data fidelity for 114564 rotations and 2048 images at 23%
2022-04-05 02:31:08,380 DEBUG Corresponding type is already real float64.
2022-04-05 02:31:08,381 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:31:21,188 INFO Computing data fidelity for 114564 rotations and 2048 images at 24%
2022-04-05 02:31:21,898 DEBUG Corresponding type is already real float64.
2022-04-05 02:31:21,898 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:31:34,677 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2022-04-05 02:31:35,370 DEBUG Corresponding type is already real float64.
2022-04-05 02:31:35,371 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:31:48,248 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2022-04-05 02:31:48,948 DEBUG Corresponding type is already real float64.
2022-04-05 02:31:48,948 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:32:01,818 INFO Computing data fidelity for 114564 rotations and 2048 images at 26%
2022-04-05 02:32:02,527 DEBUG Corresponding type is already real float64.
2022-04-05 02:32:02,528 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:32:15,308 INFO Computing data fidelity for 114564 rotations and 2048 images at 27%
2022-04-05 02:32:16,016 DEBUG Corresponding type is already real float64.
2022-04-05 02:32:16,016 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:32:28,874 INFO Computing data fidelity for 114564 rotations and 2048 images at 28%
2022-04-05 02:32:29,586 DEBUG Corresponding type is already real float64.
2022-04-05 02:32:29,586 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:32:42,424 INFO Computing data fidelity for 114564 rotations and 2048 images at 29%
2022-04-05 02:32:43,143 DEBUG Corresponding type is already real float64.
2022-04-05 02:32:43,143 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:32:56,049 INFO Computing data fidelity for 114564 rotations and 2048 images at 30%
2022-04-05 02:32:56,745 DEBUG Corresponding type is already real float64.
2022-04-05 02:32:56,745 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:33:09,555 INFO Computing data fidelity for 114564 rotations and 2048 images at 31%
2022-04-05 02:33:10,256 DEBUG Corresponding type is already real float64.
2022-04-05 02:33:10,257 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:33:23,120 INFO Computing data fidelity for 114564 rotations and 2048 images at 32%
2022-04-05 02:33:23,835 DEBUG Corresponding type is already real float64.
2022-04-05 02:33:23,835 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:33:36,717 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2022-04-05 02:33:37,416 DEBUG Corresponding type is already real float64.
2022-04-05 02:33:37,416 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:33:50,389 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2022-04-05 02:33:51,086 DEBUG Corresponding type is already real float64.
2022-04-05 02:33:51,086 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:34:03,931 INFO Computing data fidelity for 114564 rotations and 2048 images at 34%
2022-04-05 02:34:04,633 DEBUG Corresponding type is already real float64.
2022-04-05 02:34:04,633 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:34:17,511 INFO Computing data fidelity for 114564 rotations and 2048 images at 35%
2022-04-05 02:34:18,219 DEBUG Corresponding type is already real float64.
2022-04-05 02:34:18,219 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:34:30,994 INFO Computing data fidelity for 114564 rotations and 2048 images at 36%
2022-04-05 02:34:31,691 DEBUG Corresponding type is already real float64.
2022-04-05 02:34:31,691 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:34:44,638 INFO Computing data fidelity for 114564 rotations and 2048 images at 37%
2022-04-05 02:34:45,365 DEBUG Corresponding type is already real float64.
2022-04-05 02:34:45,365 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:34:58,234 INFO Computing data fidelity for 114564 rotations and 2048 images at 38%
2022-04-05 02:34:58,946 DEBUG Corresponding type is already real float64.
2022-04-05 02:34:58,946 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:35:11,810 INFO Computing data fidelity for 114564 rotations and 2048 images at 39%
2022-04-05 02:35:12,509 DEBUG Corresponding type is already real float64.
2022-04-05 02:35:12,509 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:35:25,438 INFO Computing data fidelity for 114564 rotations and 2048 images at 40%
2022-04-05 02:35:26,148 DEBUG Corresponding type is already real float64.
2022-04-05 02:35:26,148 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:35:39,010 INFO Computing data fidelity for 114564 rotations and 2048 images at 41%
2022-04-05 02:35:39,724 DEBUG Corresponding type is already real float64.
2022-04-05 02:35:39,724 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:35:52,631 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2022-04-05 02:35:53,336 DEBUG Corresponding type is already real float64.
2022-04-05 02:35:53,336 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:36:06,175 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2022-04-05 02:36:06,875 DEBUG Corresponding type is already real float64.
2022-04-05 02:36:06,875 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:36:19,734 INFO Computing data fidelity for 114564 rotations and 2048 images at 43%
2022-04-05 02:36:20,466 DEBUG Corresponding type is already real float64.
2022-04-05 02:36:20,466 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:36:33,318 INFO Computing data fidelity for 114564 rotations and 2048 images at 44%
2022-04-05 02:36:34,022 DEBUG Corresponding type is already real float64.
2022-04-05 02:36:34,022 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:36:46,969 INFO Computing data fidelity for 114564 rotations and 2048 images at 45%
2022-04-05 02:36:47,690 DEBUG Corresponding type is already real float64.
2022-04-05 02:36:47,690 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:37:00,578 INFO Computing data fidelity for 114564 rotations and 2048 images at 46%
2022-04-05 02:37:01,281 DEBUG Corresponding type is already real float64.
2022-04-05 02:37:01,282 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:37:14,154 INFO Computing data fidelity for 114564 rotations and 2048 images at 47%
2022-04-05 02:37:14,874 DEBUG Corresponding type is already real float64.
2022-04-05 02:37:14,874 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:37:27,746 INFO Computing data fidelity for 114564 rotations and 2048 images at 48%
2022-04-05 02:37:28,488 DEBUG Corresponding type is already real float64.
2022-04-05 02:37:28,489 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:37:41,365 INFO Computing data fidelity for 114564 rotations and 2048 images at 49%
2022-04-05 02:37:42,090 DEBUG Corresponding type is already real float64.
2022-04-05 02:37:42,090 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:37:55,475 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2022-04-05 02:37:56,224 DEBUG Corresponding type is already real float64.
2022-04-05 02:37:56,224 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:38:09,388 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2022-04-05 02:38:10,124 DEBUG Corresponding type is already real float64.
2022-04-05 02:38:10,124 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:38:23,180 INFO Computing data fidelity for 114564 rotations and 2048 images at 51%
2022-04-05 02:38:23,912 DEBUG Corresponding type is already real float64.
2022-04-05 02:38:23,912 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:38:36,829 INFO Computing data fidelity for 114564 rotations and 2048 images at 52%
2022-04-05 02:38:37,545 DEBUG Corresponding type is already real float64.
2022-04-05 02:38:37,545 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:38:50,524 INFO Computing data fidelity for 114564 rotations and 2048 images at 53%
2022-04-05 02:38:51,261 DEBUG Corresponding type is already real float64.
2022-04-05 02:38:51,261 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:39:04,206 INFO Computing data fidelity for 114564 rotations and 2048 images at 54%
2022-04-05 02:39:04,941 DEBUG Corresponding type is already real float64.
2022-04-05 02:39:04,941 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:39:17,949 INFO Computing data fidelity for 114564 rotations and 2048 images at 55%
2022-04-05 02:39:18,665 DEBUG Corresponding type is already real float64.
2022-04-05 02:39:18,665 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:39:31,534 INFO Computing data fidelity for 114564 rotations and 2048 images at 56%
2022-04-05 02:39:32,258 DEBUG Corresponding type is already real float64.
2022-04-05 02:39:32,258 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:39:45,239 INFO Computing data fidelity for 114564 rotations and 2048 images at 57%
2022-04-05 02:39:45,965 DEBUG Corresponding type is already real float64.
2022-04-05 02:39:45,965 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:39:58,878 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2022-04-05 02:39:59,595 DEBUG Corresponding type is already real float64.
2022-04-05 02:39:59,595 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:40:12,498 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2022-04-05 02:40:13,214 DEBUG Corresponding type is already real float64.
2022-04-05 02:40:13,214 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:40:26,119 INFO Computing data fidelity for 114564 rotations and 2048 images at 59%
2022-04-05 02:40:26,839 DEBUG Corresponding type is already real float64.
2022-04-05 02:40:26,839 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:40:39,693 INFO Computing data fidelity for 114564 rotations and 2048 images at 60%
2022-04-05 02:40:40,427 DEBUG Corresponding type is already real float64.
2022-04-05 02:40:40,427 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:40:53,425 INFO Computing data fidelity for 114564 rotations and 2048 images at 61%
2022-04-05 02:40:54,153 DEBUG Corresponding type is already real float64.
2022-04-05 02:40:54,154 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:41:07,069 INFO Computing data fidelity for 114564 rotations and 2048 images at 62%
2022-04-05 02:41:07,782 DEBUG Corresponding type is already real float64.
2022-04-05 02:41:07,782 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:41:20,607 INFO Computing data fidelity for 114564 rotations and 2048 images at 63%
2022-04-05 02:41:21,325 DEBUG Corresponding type is already real float64.
2022-04-05 02:41:21,326 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:41:34,183 INFO Computing data fidelity for 114564 rotations and 2048 images at 64%
2022-04-05 02:41:34,929 DEBUG Corresponding type is already real float64.
2022-04-05 02:41:34,929 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:41:47,927 INFO Computing data fidelity for 114564 rotations and 2048 images at 65%
2022-04-05 02:41:48,641 DEBUG Corresponding type is already real float64.
2022-04-05 02:41:48,641 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:42:01,638 INFO Computing data fidelity for 114564 rotations and 2048 images at 66%
2022-04-05 02:42:02,353 DEBUG Corresponding type is already real float64.
2022-04-05 02:42:02,353 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:42:15,269 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2022-04-05 02:42:15,980 DEBUG Corresponding type is already real float64.
2022-04-05 02:42:15,980 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:42:28,879 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2022-04-05 02:42:29,591 DEBUG Corresponding type is already real float64.
2022-04-05 02:42:29,591 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:42:42,588 INFO Computing data fidelity for 114564 rotations and 2048 images at 68%
2022-04-05 02:42:43,313 DEBUG Corresponding type is already real float64.
2022-04-05 02:42:43,313 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:42:56,307 INFO Computing data fidelity for 114564 rotations and 2048 images at 69%
2022-04-05 02:42:57,052 DEBUG Corresponding type is already real float64.
2022-04-05 02:42:57,052 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:43:09,910 INFO Computing data fidelity for 114564 rotations and 2048 images at 70%
2022-04-05 02:43:10,632 DEBUG Corresponding type is already real float64.
2022-04-05 02:43:10,632 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:43:23,587 INFO Computing data fidelity for 114564 rotations and 2048 images at 71%
2022-04-05 02:43:24,314 DEBUG Corresponding type is already real float64.
2022-04-05 02:43:24,314 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:43:37,261 INFO Computing data fidelity for 114564 rotations and 2048 images at 72%
2022-04-05 02:43:37,969 DEBUG Corresponding type is already real float64.
2022-04-05 02:43:37,969 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:43:50,895 INFO Computing data fidelity for 114564 rotations and 2048 images at 73%
2022-04-05 02:43:51,631 DEBUG Corresponding type is already real float64.
2022-04-05 02:43:51,631 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:44:05,361 INFO Computing data fidelity for 114564 rotations and 2048 images at 74%
2022-04-05 02:44:06,110 DEBUG Corresponding type is already real float64.
2022-04-05 02:44:06,110 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:44:19,450 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2022-04-05 02:44:20,172 DEBUG Corresponding type is already real float64.
2022-04-05 02:44:20,173 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:44:33,050 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2022-04-05 02:44:33,785 DEBUG Corresponding type is already real float64.
2022-04-05 02:44:33,785 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:44:46,761 INFO Computing data fidelity for 114564 rotations and 2048 images at 76%
2022-04-05 02:44:47,493 DEBUG Corresponding type is already real float64.
2022-04-05 02:44:47,493 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:45:00,445 INFO Computing data fidelity for 114564 rotations and 2048 images at 77%
2022-04-05 02:45:01,179 DEBUG Corresponding type is already real float64.
2022-04-05 02:45:01,179 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:45:14,138 INFO Computing data fidelity for 114564 rotations and 2048 images at 78%
2022-04-05 02:45:14,859 DEBUG Corresponding type is already real float64.
2022-04-05 02:45:14,859 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:45:27,776 INFO Computing data fidelity for 114564 rotations and 2048 images at 79%
2022-04-05 02:45:28,491 DEBUG Corresponding type is already real float64.
2022-04-05 02:45:28,491 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:45:41,415 INFO Computing data fidelity for 114564 rotations and 2048 images at 80%
2022-04-05 02:45:42,129 DEBUG Corresponding type is already real float64.
2022-04-05 02:45:42,130 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:45:55,036 INFO Computing data fidelity for 114564 rotations and 2048 images at 81%
2022-04-05 02:45:55,778 DEBUG Corresponding type is already real float64.
2022-04-05 02:45:55,778 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:46:08,641 INFO Computing data fidelity for 114564 rotations and 2048 images at 82%
2022-04-05 02:46:09,359 DEBUG Corresponding type is already real float64.
2022-04-05 02:46:09,359 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:46:22,326 INFO Computing data fidelity for 114564 rotations and 2048 images at 83%
2022-04-05 02:46:23,042 DEBUG Corresponding type is already real float64.
2022-04-05 02:46:23,042 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:46:35,987 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2022-04-05 02:46:36,711 DEBUG Corresponding type is already real float64.
2022-04-05 02:46:36,711 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:46:49,682 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2022-04-05 02:46:50,410 DEBUG Corresponding type is already real float64.
2022-04-05 02:46:50,410 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:47:03,343 INFO Computing data fidelity for 114564 rotations and 2048 images at 85%
2022-04-05 02:47:04,057 DEBUG Corresponding type is already real float64.
2022-04-05 02:47:04,057 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:47:17,003 INFO Computing data fidelity for 114564 rotations and 2048 images at 86%
2022-04-05 02:47:17,731 DEBUG Corresponding type is already real float64.
2022-04-05 02:47:17,731 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:47:30,591 INFO Computing data fidelity for 114564 rotations and 2048 images at 87%
2022-04-05 02:47:31,314 DEBUG Corresponding type is already real float64.
2022-04-05 02:47:31,315 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:47:44,320 INFO Computing data fidelity for 114564 rotations and 2048 images at 88%
2022-04-05 02:47:45,043 DEBUG Corresponding type is already real float64.
2022-04-05 02:47:45,043 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:47:58,162 INFO Computing data fidelity for 114564 rotations and 2048 images at 89%
2022-04-05 02:47:58,878 DEBUG Corresponding type is already real float64.
2022-04-05 02:47:58,878 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:48:11,830 INFO Computing data fidelity for 114564 rotations and 2048 images at 90%
2022-04-05 02:48:12,565 DEBUG Corresponding type is already real float64.
2022-04-05 02:48:12,565 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:48:25,436 INFO Computing data fidelity for 114564 rotations and 2048 images at 91%
2022-04-05 02:48:26,151 DEBUG Corresponding type is already real float64.
2022-04-05 02:48:26,151 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:48:39,104 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2022-04-05 02:48:39,827 DEBUG Corresponding type is already real float64.
2022-04-05 02:48:39,827 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:48:52,833 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2022-04-05 02:48:53,545 DEBUG Corresponding type is already real float64.
2022-04-05 02:48:53,545 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:49:06,426 INFO Computing data fidelity for 114564 rotations and 2048 images at 93%
2022-04-05 02:49:07,162 DEBUG Corresponding type is already real float64.
2022-04-05 02:49:07,162 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:49:20,090 INFO Computing data fidelity for 114564 rotations and 2048 images at 94%
2022-04-05 02:49:20,825 DEBUG Corresponding type is already real float64.
2022-04-05 02:49:20,825 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:49:33,741 INFO Computing data fidelity for 114564 rotations and 2048 images at 95%
2022-04-05 02:49:34,466 DEBUG Corresponding type is already real float64.
2022-04-05 02:49:34,466 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:49:47,766 INFO Computing data fidelity for 114564 rotations and 2048 images at 96%
2022-04-05 02:49:48,501 DEBUG Corresponding type is already real float64.
2022-04-05 02:49:48,501 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:50:01,405 INFO Computing data fidelity for 114564 rotations and 2048 images at 97%
2022-04-05 02:50:02,138 DEBUG Corresponding type is already real float64.
2022-04-05 02:50:02,138 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:50:15,072 INFO Computing data fidelity for 114564 rotations and 2048 images at 98%
2022-04-05 02:50:15,798 DEBUG Corresponding type is already real float64.
2022-04-05 02:50:15,798 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:50:28,741 INFO Computing data fidelity for 114564 rotations and 2048 images at 99%
2022-04-05 02:50:29,197 DEBUG Corresponding type is already real float64.
2022-04-05 02:50:29,197 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:50:40,382 INFO Computing data fidelity for 114564 rotations and 2048 images at 100%
2022-04-05 02:50:41,542 INFO Do lambda update step
2022-04-05 02:51:04,281 INFO Do rots update step
2022-04-05 02:51:05,079 INFO Projecting 2048 vectors onto 114564-simplex at 2%
2022-04-05 02:51:05,684 INFO Projecting 2048 vectors onto 114564-simplex at 4%
2022-04-05 02:51:06,307 INFO Projecting 2048 vectors onto 114564-simplex at 7%
2022-04-05 02:51:06,909 INFO Projecting 2048 vectors onto 114564-simplex at 9%
2022-04-05 02:51:07,514 INFO Projecting 2048 vectors onto 114564-simplex at 12%
2022-04-05 02:51:08,118 INFO Projecting 2048 vectors onto 114564-simplex at 14%
2022-04-05 02:51:08,720 INFO Projecting 2048 vectors onto 114564-simplex at 17%
2022-04-05 02:51:09,329 INFO Projecting 2048 vectors onto 114564-simplex at 19%
2022-04-05 02:51:09,956 INFO Projecting 2048 vectors onto 114564-simplex at 21%
2022-04-05 02:51:10,564 INFO Projecting 2048 vectors onto 114564-simplex at 24%
2022-04-05 02:51:11,383 INFO Projecting 2048 vectors onto 114564-simplex at 26%
2022-04-05 02:51:12,082 INFO Projecting 2048 vectors onto 114564-simplex at 29%
2022-04-05 02:51:12,788 INFO Projecting 2048 vectors onto 114564-simplex at 31%
2022-04-05 02:51:13,499 INFO Projecting 2048 vectors onto 114564-simplex at 34%
2022-04-05 02:51:14,207 INFO Projecting 2048 vectors onto 114564-simplex at 36%
2022-04-05 02:51:14,926 INFO Projecting 2048 vectors onto 114564-simplex at 39%
2022-04-05 02:51:15,645 INFO Projecting 2048 vectors onto 114564-simplex at 41%
2022-04-05 02:51:16,361 INFO Projecting 2048 vectors onto 114564-simplex at 43%
2022-04-05 02:51:17,064 INFO Projecting 2048 vectors onto 114564-simplex at 46%
2022-04-05 02:51:17,758 INFO Projecting 2048 vectors onto 114564-simplex at 48%
2022-04-05 02:51:18,635 INFO Projecting 2048 vectors onto 114564-simplex at 51%
2022-04-05 02:51:19,328 INFO Projecting 2048 vectors onto 114564-simplex at 53%
2022-04-05 02:51:20,025 INFO Projecting 2048 vectors onto 114564-simplex at 56%
2022-04-05 02:51:20,722 INFO Projecting 2048 vectors onto 114564-simplex at 58%
2022-04-05 02:51:21,422 INFO Projecting 2048 vectors onto 114564-simplex at 61%
2022-04-05 02:51:22,111 INFO Projecting 2048 vectors onto 114564-simplex at 63%
2022-04-05 02:51:22,805 INFO Projecting 2048 vectors onto 114564-simplex at 65%
2022-04-05 02:51:23,503 INFO Projecting 2048 vectors onto 114564-simplex at 68%
2022-04-05 02:51:24,199 INFO Projecting 2048 vectors onto 114564-simplex at 70%
2022-04-05 02:51:24,894 INFO Projecting 2048 vectors onto 114564-simplex at 73%
2022-04-05 02:51:25,776 INFO Projecting 2048 vectors onto 114564-simplex at 75%
2022-04-05 02:51:26,466 INFO Projecting 2048 vectors onto 114564-simplex at 78%
2022-04-05 02:51:27,153 INFO Projecting 2048 vectors onto 114564-simplex at 80%
2022-04-05 02:51:27,827 INFO Projecting 2048 vectors onto 114564-simplex at 83%
2022-04-05 02:51:28,491 INFO Projecting 2048 vectors onto 114564-simplex at 85%
2022-04-05 02:51:29,135 INFO Projecting 2048 vectors onto 114564-simplex at 87%
2022-04-05 02:51:29,774 INFO Projecting 2048 vectors onto 114564-simplex at 90%
2022-04-05 02:51:30,423 INFO Projecting 2048 vectors onto 114564-simplex at 92%
2022-04-05 02:51:31,062 INFO Projecting 2048 vectors onto 114564-simplex at 95%
2022-04-05 02:51:31,704 INFO Projecting 2048 vectors onto 114564-simplex at 97%
2022-04-05 02:51:32,327 INFO Projecting 2048 vectors onto 114564-simplex at 100%
2022-04-05 02:51:33,778 INFO Computing 50 means of 587 points in at most 20 steps...
2022-04-05 02:51:33,866 INFO Computing 2048 means at 2%
2022-04-05 02:51:33,950 INFO Computing 50 means of 563 points in at most 20 steps...
2022-04-05 02:51:34,013 INFO Computing 2048 means at 4%
2022-04-05 02:51:34,095 INFO Computing 50 means of 599 points in at most 20 steps...
2022-04-05 02:51:34,166 INFO Computing 2048 means at 7%
2022-04-05 02:51:34,249 INFO Computing 50 means of 554 points in at most 20 steps...
2022-04-05 02:51:34,313 INFO Computing 2048 means at 9%
2022-04-05 02:51:34,390 INFO Computing 50 means of 579 points in at most 20 steps...
2022-04-05 02:51:34,452 INFO Computing 2048 means at 12%
2022-04-05 02:51:34,526 INFO Computing 50 means of 575 points in at most 20 steps...
2022-04-05 02:51:34,595 INFO Computing 2048 means at 14%
2022-04-05 02:51:34,673 INFO Computing 50 means of 593 points in at most 20 steps...
2022-04-05 02:51:34,750 INFO Computing 2048 means at 17%
2022-04-05 02:51:34,828 INFO Computing 50 means of 592 points in at most 20 steps...
2022-04-05 02:51:34,901 INFO Computing 2048 means at 19%
2022-04-05 02:51:34,992 INFO Computing 50 means of 598 points in at most 20 steps...
2022-04-05 02:51:35,063 INFO Computing 2048 means at 21%
2022-04-05 02:51:35,149 INFO Computing 50 means of 595 points in at most 20 steps...
2022-04-05 02:51:35,219 INFO Computing 2048 means at 24%
2022-04-05 02:51:35,316 INFO Computing 50 means of 574 points in at most 20 steps...
2022-04-05 02:51:35,384 INFO Computing 2048 means at 26%
2022-04-05 02:51:35,473 INFO Computing 50 means of 567 points in at most 20 steps...
2022-04-05 02:51:35,542 INFO Computing 2048 means at 29%
2022-04-05 02:51:35,634 INFO Computing 50 means of 587 points in at most 20 steps...
2022-04-05 02:51:35,705 INFO Computing 2048 means at 31%
2022-04-05 02:51:35,793 INFO Computing 50 means of 575 points in at most 20 steps...
2022-04-05 02:51:35,860 INFO Computing 2048 means at 34%
2022-04-05 02:51:35,948 INFO Computing 50 means of 581 points in at most 20 steps...
2022-04-05 02:51:36,014 INFO Computing 2048 means at 36%
2022-04-05 02:51:36,092 INFO Computing 50 means of 577 points in at most 20 steps...
2022-04-05 02:51:36,154 INFO Computing 2048 means at 39%
2022-04-05 02:51:36,231 INFO Computing 50 means of 579 points in at most 20 steps...
2022-04-05 02:51:36,292 INFO Computing 2048 means at 41%
2022-04-05 02:51:36,368 INFO Computing 50 means of 587 points in at most 20 steps...
2022-04-05 02:51:36,437 INFO Computing 2048 means at 43%
2022-04-05 02:51:36,513 INFO Computing 50 means of 592 points in at most 20 steps...
2022-04-05 02:51:36,577 INFO Computing 2048 means at 46%
2022-04-05 02:51:36,653 INFO Computing 50 means of 604 points in at most 20 steps...
2022-04-05 02:51:36,722 INFO Computing 2048 means at 48%
2022-04-05 02:51:36,807 INFO Computing 50 means of 591 points in at most 20 steps...
2022-04-05 02:51:36,870 INFO Computing 2048 means at 51%
2022-04-05 02:51:36,947 INFO Computing 50 means of 582 points in at most 20 steps...
2022-04-05 02:51:37,007 INFO Computing 2048 means at 53%
2022-04-05 02:51:37,084 INFO Computing 50 means of 585 points in at most 20 steps...
2022-04-05 02:51:37,146 INFO Computing 2048 means at 56%
2022-04-05 02:51:37,221 INFO Computing 50 means of 586 points in at most 20 steps...
2022-04-05 02:51:37,281 INFO Computing 2048 means at 58%
2022-04-05 02:51:37,359 INFO Computing 50 means of 588 points in at most 20 steps...
2022-04-05 02:51:37,423 INFO Computing 2048 means at 61%
2022-04-05 02:51:37,498 INFO Computing 50 means of 588 points in at most 20 steps...
2022-04-05 02:51:37,561 INFO Computing 2048 means at 63%
2022-04-05 02:51:37,642 INFO Computing 50 means of 563 points in at most 20 steps...
2022-04-05 02:51:37,702 INFO Computing 2048 means at 65%
2022-04-05 02:51:37,777 INFO Computing 50 means of 585 points in at most 20 steps...
2022-04-05 02:51:37,839 INFO Computing 2048 means at 68%
2022-04-05 02:51:37,916 INFO Computing 50 means of 586 points in at most 20 steps...
2022-04-05 02:51:37,977 INFO Computing 2048 means at 70%
2022-04-05 02:51:38,053 INFO Computing 50 means of 596 points in at most 20 steps...
2022-04-05 02:51:38,116 INFO Computing 2048 means at 73%
2022-04-05 02:51:38,199 INFO Computing 50 means of 596 points in at most 20 steps...
2022-04-05 02:51:38,262 INFO Computing 2048 means at 75%
2022-04-05 02:51:38,340 INFO Computing 50 means of 600 points in at most 20 steps...
2022-04-05 02:51:38,404 INFO Computing 2048 means at 78%
2022-04-05 02:51:38,482 INFO Computing 50 means of 570 points in at most 20 steps...
2022-04-05 02:51:38,544 INFO Computing 2048 means at 80%
2022-04-05 02:51:38,620 INFO Computing 50 means of 603 points in at most 20 steps...
2022-04-05 02:51:38,683 INFO Computing 2048 means at 83%
2022-04-05 02:51:38,762 INFO Computing 50 means of 583 points in at most 20 steps...
2022-04-05 02:51:38,825 INFO Computing 2048 means at 85%
2022-04-05 02:51:38,900 INFO Computing 50 means of 584 points in at most 20 steps...
2022-04-05 02:51:38,963 INFO Computing 2048 means at 87%
2022-04-05 02:51:39,041 INFO Computing 50 means of 594 points in at most 20 steps...
2022-04-05 02:51:39,105 INFO Computing 2048 means at 90%
2022-04-05 02:51:39,180 INFO Computing 50 means of 588 points in at most 20 steps...
2022-04-05 02:51:39,243 INFO Computing 2048 means at 92%
2022-04-05 02:51:39,322 INFO Computing 50 means of 565 points in at most 20 steps...
2022-04-05 02:51:39,382 INFO Computing 2048 means at 95%
2022-04-05 02:51:39,458 INFO Computing 50 means of 583 points in at most 20 steps...
2022-04-05 02:51:39,520 INFO Computing 2048 means at 97%
2022-04-05 02:51:39,597 INFO Computing 48 means of 566 points in at most 20 steps...
2022-04-05 02:51:39,656 INFO Computing 2048 means at 100%
2022-04-05 02:51:43,580 INFO Do vol update step
2022-04-05 02:51:43,582 INFO Compute adjoint forward mapping on the images
2022-04-05 02:51:45,179 DEBUG Corresponding type is already complex complex128.
2022-04-05 02:51:47,602 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2022-04-05 02:51:47,618 INFO Computing adjoint forward mappings from 2048 rotations at 50%
2022-04-05 02:51:49,097 DEBUG Corresponding type is already complex complex128.
2022-04-05 02:51:51,500 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2022-04-05 02:51:51,512 INFO Computing adjoint forward mappings from 2048 rotations at 100%
2022-04-05 02:51:52,368 DEBUG Corresponding type is already real float64.
2022-04-05 02:51:52,368 DEBUG anufft passed real_type for signal, converting
2022-04-05 02:51:58,314 INFO Computing kernel from 2048 rotations at 50%
2022-04-05 02:51:59,130 DEBUG Corresponding type is already real float64.
2022-04-05 02:51:59,130 DEBUG anufft passed real_type for signal, converting
2022-04-05 02:52:05,246 INFO Computing kernel from 2048 rotations at 100%
2022-04-05 02:52:05,248 INFO Computing non-centered Fourier Transform
2022-04-05 02:52:05,423 INFO Add ramp filter regularisation
2022-04-05 02:52:09,501 INFO Update data_discrepancies
2022-04-05 02:52:09,503 INFO Computing \|Ag.u - f_i\|^2
2022-04-05 02:52:10,380 DEBUG Corresponding type is already real float64.
2022-04-05 02:52:10,380 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:52:25,148 INFO Computing data fidelity for 114564 rotations and 2048 images at 0%
2022-04-05 02:52:25,881 DEBUG Corresponding type is already real float64.
2022-04-05 02:52:25,881 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:52:40,240 INFO Computing data fidelity for 114564 rotations and 2048 images at 1%
2022-04-05 02:52:40,988 DEBUG Corresponding type is already real float64.
2022-04-05 02:52:40,989 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:52:54,888 INFO Computing data fidelity for 114564 rotations and 2048 images at 2%
2022-04-05 02:52:55,585 DEBUG Corresponding type is already real float64.
2022-04-05 02:52:55,585 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:53:08,597 INFO Computing data fidelity for 114564 rotations and 2048 images at 3%
2022-04-05 02:53:09,293 DEBUG Corresponding type is already real float64.
2022-04-05 02:53:09,294 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:53:22,370 INFO Computing data fidelity for 114564 rotations and 2048 images at 4%
2022-04-05 02:53:23,088 DEBUG Corresponding type is already real float64.
2022-04-05 02:53:23,088 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:53:36,165 INFO Computing data fidelity for 114564 rotations and 2048 images at 5%
2022-04-05 02:53:36,864 DEBUG Corresponding type is already real float64.
2022-04-05 02:53:36,864 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:53:49,927 INFO Computing data fidelity for 114564 rotations and 2048 images at 6%
2022-04-05 02:53:50,620 DEBUG Corresponding type is already real float64.
2022-04-05 02:53:50,620 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:54:03,725 INFO Computing data fidelity for 114564 rotations and 2048 images at 7%
2022-04-05 02:54:04,424 DEBUG Corresponding type is already real float64.
2022-04-05 02:54:04,424 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:54:17,451 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2022-04-05 02:54:18,143 DEBUG Corresponding type is already real float64.
2022-04-05 02:54:18,143 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:54:31,168 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2022-04-05 02:54:31,860 DEBUG Corresponding type is already real float64.
2022-04-05 02:54:31,860 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:54:45,040 INFO Computing data fidelity for 114564 rotations and 2048 images at 9%
2022-04-05 02:54:45,734 DEBUG Corresponding type is already real float64.
2022-04-05 02:54:45,734 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:54:58,763 INFO Computing data fidelity for 114564 rotations and 2048 images at 10%
2022-04-05 02:54:59,461 DEBUG Corresponding type is already real float64.
2022-04-05 02:54:59,462 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:55:12,564 INFO Computing data fidelity for 114564 rotations and 2048 images at 11%
2022-04-05 02:55:13,259 DEBUG Corresponding type is already real float64.
2022-04-05 02:55:13,259 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:55:26,331 INFO Computing data fidelity for 114564 rotations and 2048 images at 12%
2022-04-05 02:55:27,029 DEBUG Corresponding type is already real float64.
2022-04-05 02:55:27,029 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:55:40,076 INFO Computing data fidelity for 114564 rotations and 2048 images at 13%
2022-04-05 02:55:40,782 DEBUG Corresponding type is already real float64.
2022-04-05 02:55:40,782 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:55:53,862 INFO Computing data fidelity for 114564 rotations and 2048 images at 14%
2022-04-05 02:55:54,578 DEBUG Corresponding type is already real float64.
2022-04-05 02:55:54,578 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:56:07,594 INFO Computing data fidelity for 114564 rotations and 2048 images at 15%
2022-04-05 02:56:08,294 DEBUG Corresponding type is already real float64.
2022-04-05 02:56:08,294 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:56:21,231 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2022-04-05 02:56:21,930 DEBUG Corresponding type is already real float64.
2022-04-05 02:56:21,930 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:56:34,985 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2022-04-05 02:56:35,689 DEBUG Corresponding type is already real float64.
2022-04-05 02:56:35,689 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:56:48,692 INFO Computing data fidelity for 114564 rotations and 2048 images at 17%
2022-04-05 02:56:49,394 DEBUG Corresponding type is already real float64.
2022-04-05 02:56:49,395 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:57:02,421 INFO Computing data fidelity for 114564 rotations and 2048 images at 18%
2022-04-05 02:57:03,120 DEBUG Corresponding type is already real float64.
2022-04-05 02:57:03,120 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:57:16,130 INFO Computing data fidelity for 114564 rotations and 2048 images at 19%
2022-04-05 02:57:16,828 DEBUG Corresponding type is already real float64.
2022-04-05 02:57:16,828 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:57:29,860 INFO Computing data fidelity for 114564 rotations and 2048 images at 20%
2022-04-05 02:57:30,558 DEBUG Corresponding type is already real float64.
2022-04-05 02:57:30,558 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:57:43,659 INFO Computing data fidelity for 114564 rotations and 2048 images at 21%
2022-04-05 02:57:44,366 DEBUG Corresponding type is already real float64.
2022-04-05 02:57:44,366 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:57:57,670 INFO Computing data fidelity for 114564 rotations and 2048 images at 22%
2022-04-05 02:57:58,393 DEBUG Corresponding type is already real float64.
2022-04-05 02:57:58,393 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:58:11,434 INFO Computing data fidelity for 114564 rotations and 2048 images at 23%
2022-04-05 02:58:12,131 DEBUG Corresponding type is already real float64.
2022-04-05 02:58:12,132 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:58:25,139 INFO Computing data fidelity for 114564 rotations and 2048 images at 24%
2022-04-05 02:58:25,827 DEBUG Corresponding type is already real float64.
2022-04-05 02:58:25,827 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:58:38,794 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2022-04-05 02:58:39,496 DEBUG Corresponding type is already real float64.
2022-04-05 02:58:39,496 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:58:52,452 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2022-04-05 02:58:53,169 DEBUG Corresponding type is already real float64.
2022-04-05 02:58:53,169 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:59:05,950 INFO Computing data fidelity for 114564 rotations and 2048 images at 26%
2022-04-05 02:59:06,651 DEBUG Corresponding type is already real float64.
2022-04-05 02:59:06,652 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:59:19,495 INFO Computing data fidelity for 114564 rotations and 2048 images at 27%
2022-04-05 02:59:20,188 DEBUG Corresponding type is already real float64.
2022-04-05 02:59:20,188 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:59:32,922 INFO Computing data fidelity for 114564 rotations and 2048 images at 28%
2022-04-05 02:59:33,639 DEBUG Corresponding type is already real float64.
2022-04-05 02:59:33,639 DEBUG nufft passed real_type for signal, converting
2022-04-05 02:59:46,498 INFO Computing data fidelity for 114564 rotations and 2048 images at 29%
2022-04-05 02:59:47,207 DEBUG Corresponding type is already real float64.
2022-04-05 02:59:47,207 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:00:00,071 INFO Computing data fidelity for 114564 rotations and 2048 images at 30%
2022-04-05 03:00:00,768 DEBUG Corresponding type is already real float64.
2022-04-05 03:00:00,768 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:00:14,509 INFO Computing data fidelity for 114564 rotations and 2048 images at 31%
2022-04-05 03:00:15,227 DEBUG Corresponding type is already real float64.
2022-04-05 03:00:15,227 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:00:28,530 INFO Computing data fidelity for 114564 rotations and 2048 images at 32%
2022-04-05 03:00:29,235 DEBUG Corresponding type is already real float64.
2022-04-05 03:00:29,235 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:00:42,016 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2022-04-05 03:00:42,713 DEBUG Corresponding type is already real float64.
2022-04-05 03:00:42,713 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:00:55,572 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2022-04-05 03:00:56,286 DEBUG Corresponding type is already real float64.
2022-04-05 03:00:56,286 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:01:09,066 INFO Computing data fidelity for 114564 rotations and 2048 images at 34%
2022-04-05 03:01:09,764 DEBUG Corresponding type is already real float64.
2022-04-05 03:01:09,764 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:01:22,606 INFO Computing data fidelity for 114564 rotations and 2048 images at 35%
2022-04-05 03:01:23,302 DEBUG Corresponding type is already real float64.
2022-04-05 03:01:23,302 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:01:36,072 INFO Computing data fidelity for 114564 rotations and 2048 images at 36%
2022-04-05 03:01:36,786 DEBUG Corresponding type is already real float64.
2022-04-05 03:01:36,786 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:01:49,613 INFO Computing data fidelity for 114564 rotations and 2048 images at 37%
2022-04-05 03:01:50,313 DEBUG Corresponding type is already real float64.
2022-04-05 03:01:50,313 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:02:03,130 INFO Computing data fidelity for 114564 rotations and 2048 images at 38%
2022-04-05 03:02:03,832 DEBUG Corresponding type is already real float64.
2022-04-05 03:02:03,832 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:02:16,671 INFO Computing data fidelity for 114564 rotations and 2048 images at 39%
2022-04-05 03:02:17,367 DEBUG Corresponding type is already real float64.
2022-04-05 03:02:17,367 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:02:30,123 INFO Computing data fidelity for 114564 rotations and 2048 images at 40%
2022-04-05 03:02:30,830 DEBUG Corresponding type is already real float64.
2022-04-05 03:02:30,830 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:02:43,705 INFO Computing data fidelity for 114564 rotations and 2048 images at 41%
2022-04-05 03:02:44,408 DEBUG Corresponding type is already real float64.
2022-04-05 03:02:44,408 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:02:57,199 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2022-04-05 03:02:57,913 DEBUG Corresponding type is already real float64.
2022-04-05 03:02:57,913 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:03:10,745 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2022-04-05 03:03:11,444 DEBUG Corresponding type is already real float64.
2022-04-05 03:03:11,444 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:03:24,285 INFO Computing data fidelity for 114564 rotations and 2048 images at 43%
2022-04-05 03:03:24,986 DEBUG Corresponding type is already real float64.
2022-04-05 03:03:24,986 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:03:37,831 INFO Computing data fidelity for 114564 rotations and 2048 images at 44%
2022-04-05 03:03:38,533 DEBUG Corresponding type is already real float64.
2022-04-05 03:03:38,534 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:03:51,393 INFO Computing data fidelity for 114564 rotations and 2048 images at 45%
2022-04-05 03:03:52,097 DEBUG Corresponding type is already real float64.
2022-04-05 03:03:52,097 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:04:04,969 INFO Computing data fidelity for 114564 rotations and 2048 images at 46%
2022-04-05 03:04:05,679 DEBUG Corresponding type is already real float64.
2022-04-05 03:04:05,679 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:04:18,490 INFO Computing data fidelity for 114564 rotations and 2048 images at 47%
2022-04-05 03:04:19,206 DEBUG Corresponding type is already real float64.
2022-04-05 03:04:19,206 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:04:31,980 INFO Computing data fidelity for 114564 rotations and 2048 images at 48%
2022-04-05 03:04:32,675 DEBUG Corresponding type is already real float64.
2022-04-05 03:04:32,675 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:04:45,607 INFO Computing data fidelity for 114564 rotations and 2048 images at 49%
2022-04-05 03:04:46,329 DEBUG Corresponding type is already real float64.
2022-04-05 03:04:46,329 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:04:59,248 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2022-04-05 03:04:59,982 DEBUG Corresponding type is already real float64.
2022-04-05 03:04:59,982 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:05:12,863 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2022-04-05 03:05:13,570 DEBUG Corresponding type is already real float64.
2022-04-05 03:05:13,570 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:05:26,411 INFO Computing data fidelity for 114564 rotations and 2048 images at 51%
2022-04-05 03:05:27,135 DEBUG Corresponding type is already real float64.
2022-04-05 03:05:27,135 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:05:40,037 INFO Computing data fidelity for 114564 rotations and 2048 images at 52%
2022-04-05 03:05:40,750 DEBUG Corresponding type is already real float64.
2022-04-05 03:05:40,750 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:05:53,619 INFO Computing data fidelity for 114564 rotations and 2048 images at 53%
2022-04-05 03:05:54,328 DEBUG Corresponding type is already real float64.
2022-04-05 03:05:54,328 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:06:07,247 INFO Computing data fidelity for 114564 rotations and 2048 images at 54%
2022-04-05 03:06:07,959 DEBUG Corresponding type is already real float64.
2022-04-05 03:06:07,959 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:06:20,837 INFO Computing data fidelity for 114564 rotations and 2048 images at 55%
2022-04-05 03:06:21,549 DEBUG Corresponding type is already real float64.
2022-04-05 03:06:21,549 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:06:34,436 INFO Computing data fidelity for 114564 rotations and 2048 images at 56%
2022-04-05 03:06:35,150 DEBUG Corresponding type is already real float64.
2022-04-05 03:06:35,150 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:06:48,055 INFO Computing data fidelity for 114564 rotations and 2048 images at 57%
2022-04-05 03:06:48,768 DEBUG Corresponding type is already real float64.
2022-04-05 03:06:48,768 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:07:01,717 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2022-04-05 03:07:02,428 DEBUG Corresponding type is already real float64.
2022-04-05 03:07:02,428 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:07:15,255 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2022-04-05 03:07:15,984 DEBUG Corresponding type is already real float64.
2022-04-05 03:07:15,984 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:07:28,842 INFO Computing data fidelity for 114564 rotations and 2048 images at 59%
2022-04-05 03:07:29,556 DEBUG Corresponding type is already real float64.
2022-04-05 03:07:29,556 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:07:42,476 INFO Computing data fidelity for 114564 rotations and 2048 images at 60%
2022-04-05 03:07:43,196 DEBUG Corresponding type is already real float64.
2022-04-05 03:07:43,196 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:07:56,424 INFO Computing data fidelity for 114564 rotations and 2048 images at 61%
2022-04-05 03:07:57,146 DEBUG Corresponding type is already real float64.
2022-04-05 03:07:57,146 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:08:10,062 INFO Computing data fidelity for 114564 rotations and 2048 images at 62%
2022-04-05 03:08:10,780 DEBUG Corresponding type is already real float64.
2022-04-05 03:08:10,781 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:08:23,857 INFO Computing data fidelity for 114564 rotations and 2048 images at 63%
2022-04-05 03:08:24,582 DEBUG Corresponding type is already real float64.
2022-04-05 03:08:24,582 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:08:37,651 INFO Computing data fidelity for 114564 rotations and 2048 images at 64%
2022-04-05 03:08:38,364 DEBUG Corresponding type is already real float64.
2022-04-05 03:08:38,364 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:08:51,296 INFO Computing data fidelity for 114564 rotations and 2048 images at 65%
2022-04-05 03:08:52,009 DEBUG Corresponding type is already real float64.
2022-04-05 03:08:52,009 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:09:04,947 INFO Computing data fidelity for 114564 rotations and 2048 images at 66%
2022-04-05 03:09:05,667 DEBUG Corresponding type is already real float64.
2022-04-05 03:09:05,667 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:09:18,651 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2022-04-05 03:09:19,363 DEBUG Corresponding type is already real float64.
2022-04-05 03:09:19,363 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:09:32,292 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2022-04-05 03:09:33,010 DEBUG Corresponding type is already real float64.
2022-04-05 03:09:33,010 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:09:45,940 INFO Computing data fidelity for 114564 rotations and 2048 images at 68%
2022-04-05 03:09:46,666 DEBUG Corresponding type is already real float64.
2022-04-05 03:09:46,666 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:09:59,562 INFO Computing data fidelity for 114564 rotations and 2048 images at 69%
2022-04-05 03:10:00,281 DEBUG Corresponding type is already real float64.
2022-04-05 03:10:00,281 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:10:13,204 INFO Computing data fidelity for 114564 rotations and 2048 images at 70%
2022-04-05 03:10:13,931 DEBUG Corresponding type is already real float64.
2022-04-05 03:10:13,931 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:10:26,809 INFO Computing data fidelity for 114564 rotations and 2048 images at 71%
2022-04-05 03:10:27,529 DEBUG Corresponding type is already real float64.
2022-04-05 03:10:27,529 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:10:40,419 INFO Computing data fidelity for 114564 rotations and 2048 images at 72%
2022-04-05 03:10:41,138 DEBUG Corresponding type is already real float64.
2022-04-05 03:10:41,138 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:10:53,987 INFO Computing data fidelity for 114564 rotations and 2048 images at 73%
2022-04-05 03:10:54,701 DEBUG Corresponding type is already real float64.
2022-04-05 03:10:54,702 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:11:07,584 INFO Computing data fidelity for 114564 rotations and 2048 images at 74%
2022-04-05 03:11:08,296 DEBUG Corresponding type is already real float64.
2022-04-05 03:11:08,296 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:11:21,157 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2022-04-05 03:11:21,886 DEBUG Corresponding type is already real float64.
2022-04-05 03:11:21,886 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:11:34,870 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2022-04-05 03:11:35,591 DEBUG Corresponding type is already real float64.
2022-04-05 03:11:35,592 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:11:48,503 INFO Computing data fidelity for 114564 rotations and 2048 images at 76%
2022-04-05 03:11:49,213 DEBUG Corresponding type is already real float64.
2022-04-05 03:11:49,213 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:12:02,124 INFO Computing data fidelity for 114564 rotations and 2048 images at 77%
2022-04-05 03:12:02,835 DEBUG Corresponding type is already real float64.
2022-04-05 03:12:02,835 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:12:15,731 INFO Computing data fidelity for 114564 rotations and 2048 images at 78%
2022-04-05 03:12:16,446 DEBUG Corresponding type is already real float64.
2022-04-05 03:12:16,446 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:12:29,315 INFO Computing data fidelity for 114564 rotations and 2048 images at 79%
2022-04-05 03:12:30,031 DEBUG Corresponding type is already real float64.
2022-04-05 03:12:30,031 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:12:42,940 INFO Computing data fidelity for 114564 rotations and 2048 images at 80%
2022-04-05 03:12:43,664 DEBUG Corresponding type is already real float64.
2022-04-05 03:12:43,664 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:12:56,582 INFO Computing data fidelity for 114564 rotations and 2048 images at 81%
2022-04-05 03:12:57,301 DEBUG Corresponding type is already real float64.
2022-04-05 03:12:57,301 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:13:10,178 INFO Computing data fidelity for 114564 rotations and 2048 images at 82%
2022-04-05 03:13:10,888 DEBUG Corresponding type is already real float64.
2022-04-05 03:13:10,888 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:13:23,755 INFO Computing data fidelity for 114564 rotations and 2048 images at 83%
2022-04-05 03:13:24,481 DEBUG Corresponding type is already real float64.
2022-04-05 03:13:24,481 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:13:37,403 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2022-04-05 03:13:38,119 DEBUG Corresponding type is already real float64.
2022-04-05 03:13:38,119 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:13:51,132 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2022-04-05 03:13:51,846 DEBUG Corresponding type is already real float64.
2022-04-05 03:13:51,847 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:14:04,781 INFO Computing data fidelity for 114564 rotations and 2048 images at 85%
2022-04-05 03:14:05,520 DEBUG Corresponding type is already real float64.
2022-04-05 03:14:05,520 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:14:18,415 INFO Computing data fidelity for 114564 rotations and 2048 images at 86%
2022-04-05 03:14:19,135 DEBUG Corresponding type is already real float64.
2022-04-05 03:14:19,135 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:14:32,132 INFO Computing data fidelity for 114564 rotations and 2048 images at 87%
2022-04-05 03:14:32,846 DEBUG Corresponding type is already real float64.
2022-04-05 03:14:32,846 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:14:45,842 INFO Computing data fidelity for 114564 rotations and 2048 images at 88%
2022-04-05 03:14:46,562 DEBUG Corresponding type is already real float64.
2022-04-05 03:14:46,563 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:14:59,463 INFO Computing data fidelity for 114564 rotations and 2048 images at 89%
2022-04-05 03:15:00,198 DEBUG Corresponding type is already real float64.
2022-04-05 03:15:00,198 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:15:13,086 INFO Computing data fidelity for 114564 rotations and 2048 images at 90%
2022-04-05 03:15:13,812 DEBUG Corresponding type is already real float64.
2022-04-05 03:15:13,812 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:15:26,753 INFO Computing data fidelity for 114564 rotations and 2048 images at 91%
2022-04-05 03:15:27,464 DEBUG Corresponding type is already real float64.
2022-04-05 03:15:27,464 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:15:40,350 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2022-04-05 03:15:41,086 DEBUG Corresponding type is already real float64.
2022-04-05 03:15:41,086 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:15:54,002 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2022-04-05 03:15:54,724 DEBUG Corresponding type is already real float64.
2022-04-05 03:15:54,725 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:16:07,624 INFO Computing data fidelity for 114564 rotations and 2048 images at 93%
2022-04-05 03:16:08,339 DEBUG Corresponding type is already real float64.
2022-04-05 03:16:08,339 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:16:21,262 INFO Computing data fidelity for 114564 rotations and 2048 images at 94%
2022-04-05 03:16:21,977 DEBUG Corresponding type is already real float64.
2022-04-05 03:16:21,977 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:16:34,868 INFO Computing data fidelity for 114564 rotations and 2048 images at 95%
2022-04-05 03:16:35,602 DEBUG Corresponding type is already real float64.
2022-04-05 03:16:35,602 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:16:49,240 INFO Computing data fidelity for 114564 rotations and 2048 images at 96%
2022-04-05 03:16:49,986 DEBUG Corresponding type is already real float64.
2022-04-05 03:16:49,986 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:17:03,485 INFO Computing data fidelity for 114564 rotations and 2048 images at 97%
2022-04-05 03:17:04,209 DEBUG Corresponding type is already real float64.
2022-04-05 03:17:04,210 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:17:17,117 INFO Computing data fidelity for 114564 rotations and 2048 images at 98%
2022-04-05 03:17:17,843 DEBUG Corresponding type is already real float64.
2022-04-05 03:17:17,843 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:17:30,749 INFO Computing data fidelity for 114564 rotations and 2048 images at 99%
2022-04-05 03:17:31,178 DEBUG Corresponding type is already real float64.
2022-04-05 03:17:31,178 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:17:42,341 INFO Computing data fidelity for 114564 rotations and 2048 images at 100%
2022-04-05 03:17:43,507 INFO Do lambda update step
2022-04-05 03:18:06,615 INFO Do rots update step
2022-04-05 03:18:07,424 INFO Projecting 2048 vectors onto 114564-simplex at 2%
2022-04-05 03:18:08,038 INFO Projecting 2048 vectors onto 114564-simplex at 4%
2022-04-05 03:18:08,642 INFO Projecting 2048 vectors onto 114564-simplex at 7%
2022-04-05 03:18:09,252 INFO Projecting 2048 vectors onto 114564-simplex at 9%
2022-04-05 03:18:09,879 INFO Projecting 2048 vectors onto 114564-simplex at 12%
2022-04-05 03:18:10,498 INFO Projecting 2048 vectors onto 114564-simplex at 14%
2022-04-05 03:18:11,122 INFO Projecting 2048 vectors onto 114564-simplex at 17%
2022-04-05 03:18:11,802 INFO Projecting 2048 vectors onto 114564-simplex at 19%
2022-04-05 03:18:12,499 INFO Projecting 2048 vectors onto 114564-simplex at 21%
2022-04-05 03:18:13,204 INFO Projecting 2048 vectors onto 114564-simplex at 24%
2022-04-05 03:18:14,119 INFO Projecting 2048 vectors onto 114564-simplex at 26%
2022-04-05 03:18:14,829 INFO Projecting 2048 vectors onto 114564-simplex at 29%
2022-04-05 03:18:15,538 INFO Projecting 2048 vectors onto 114564-simplex at 31%
2022-04-05 03:18:16,256 INFO Projecting 2048 vectors onto 114564-simplex at 34%
2022-04-05 03:18:16,972 INFO Projecting 2048 vectors onto 114564-simplex at 36%
2022-04-05 03:18:17,669 INFO Projecting 2048 vectors onto 114564-simplex at 39%
2022-04-05 03:18:18,360 INFO Projecting 2048 vectors onto 114564-simplex at 41%
2022-04-05 03:18:19,056 INFO Projecting 2048 vectors onto 114564-simplex at 43%
2022-04-05 03:18:19,755 INFO Projecting 2048 vectors onto 114564-simplex at 46%
2022-04-05 03:18:20,445 INFO Projecting 2048 vectors onto 114564-simplex at 48%
2022-04-05 03:18:21,350 INFO Projecting 2048 vectors onto 114564-simplex at 51%
2022-04-05 03:18:22,049 INFO Projecting 2048 vectors onto 114564-simplex at 53%
2022-04-05 03:18:22,747 INFO Projecting 2048 vectors onto 114564-simplex at 56%
2022-04-05 03:18:23,434 INFO Projecting 2048 vectors onto 114564-simplex at 58%
2022-04-05 03:18:24,124 INFO Projecting 2048 vectors onto 114564-simplex at 61%
2022-04-05 03:18:24,819 INFO Projecting 2048 vectors onto 114564-simplex at 63%
2022-04-05 03:18:25,508 INFO Projecting 2048 vectors onto 114564-simplex at 65%
2022-04-05 03:18:26,196 INFO Projecting 2048 vectors onto 114564-simplex at 68%
2022-04-05 03:18:26,889 INFO Projecting 2048 vectors onto 114564-simplex at 70%
2022-04-05 03:18:27,583 INFO Projecting 2048 vectors onto 114564-simplex at 73%
2022-04-05 03:18:28,489 INFO Projecting 2048 vectors onto 114564-simplex at 75%
2022-04-05 03:18:29,156 INFO Projecting 2048 vectors onto 114564-simplex at 78%
2022-04-05 03:18:29,797 INFO Projecting 2048 vectors onto 114564-simplex at 80%
2022-04-05 03:18:30,458 INFO Projecting 2048 vectors onto 114564-simplex at 83%
2022-04-05 03:18:31,105 INFO Projecting 2048 vectors onto 114564-simplex at 85%
2022-04-05 03:18:31,746 INFO Projecting 2048 vectors onto 114564-simplex at 87%
2022-04-05 03:18:32,387 INFO Projecting 2048 vectors onto 114564-simplex at 90%
2022-04-05 03:18:33,018 INFO Projecting 2048 vectors onto 114564-simplex at 92%
2022-04-05 03:18:33,674 INFO Projecting 2048 vectors onto 114564-simplex at 95%
2022-04-05 03:18:34,345 INFO Projecting 2048 vectors onto 114564-simplex at 97%
2022-04-05 03:18:34,988 INFO Projecting 2048 vectors onto 114564-simplex at 100%
2022-04-05 03:18:36,437 INFO Computing 50 means of 585 points in at most 20 steps...
2022-04-05 03:18:36,537 INFO Computing 2048 means at 2%
2022-04-05 03:18:36,632 INFO Computing 50 means of 562 points in at most 20 steps...
2022-04-05 03:18:36,701 INFO Computing 2048 means at 4%
2022-04-05 03:18:36,791 INFO Computing 50 means of 600 points in at most 20 steps...
2022-04-05 03:18:36,868 INFO Computing 2048 means at 7%
2022-04-05 03:18:36,956 INFO Computing 50 means of 552 points in at most 20 steps...
2022-04-05 03:18:37,022 INFO Computing 2048 means at 9%
2022-04-05 03:18:37,098 INFO Computing 50 means of 580 points in at most 20 steps...
2022-04-05 03:18:37,159 INFO Computing 2048 means at 12%
2022-04-05 03:18:37,234 INFO Computing 50 means of 576 points in at most 20 steps...
2022-04-05 03:18:37,295 INFO Computing 2048 means at 14%
2022-04-05 03:18:37,372 INFO Computing 50 means of 592 points in at most 20 steps...
2022-04-05 03:18:37,433 INFO Computing 2048 means at 17%
2022-04-05 03:18:37,511 INFO Computing 50 means of 592 points in at most 20 steps...
2022-04-05 03:18:37,572 INFO Computing 2048 means at 19%
2022-04-05 03:18:37,648 INFO Computing 50 means of 598 points in at most 20 steps...
2022-04-05 03:18:37,717 INFO Computing 2048 means at 21%
2022-04-05 03:18:37,791 INFO Computing 50 means of 598 points in at most 20 steps...
2022-04-05 03:18:37,853 INFO Computing 2048 means at 24%
2022-04-05 03:18:37,943 INFO Computing 50 means of 574 points in at most 20 steps...
2022-04-05 03:18:38,004 INFO Computing 2048 means at 26%
2022-04-05 03:18:38,080 INFO Computing 50 means of 567 points in at most 20 steps...
2022-04-05 03:18:38,141 INFO Computing 2048 means at 29%
2022-04-05 03:18:38,219 INFO Computing 50 means of 588 points in at most 20 steps...
2022-04-05 03:18:38,282 INFO Computing 2048 means at 31%
2022-04-05 03:18:38,357 INFO Computing 50 means of 575 points in at most 20 steps...
2022-04-05 03:18:38,418 INFO Computing 2048 means at 34%
2022-04-05 03:18:38,496 INFO Computing 50 means of 582 points in at most 20 steps...
2022-04-05 03:18:38,558 INFO Computing 2048 means at 36%
2022-04-05 03:18:38,634 INFO Computing 50 means of 577 points in at most 20 steps...
2022-04-05 03:18:38,696 INFO Computing 2048 means at 39%
2022-04-05 03:18:38,773 INFO Computing 50 means of 580 points in at most 20 steps...
2022-04-05 03:18:38,845 INFO Computing 2048 means at 41%
2022-04-05 03:18:38,922 INFO Computing 50 means of 589 points in at most 20 steps...
2022-04-05 03:18:38,986 INFO Computing 2048 means at 43%
2022-04-05 03:18:39,063 INFO Computing 50 means of 595 points in at most 20 steps...
2022-04-05 03:18:39,126 INFO Computing 2048 means at 46%
2022-04-05 03:18:39,201 INFO Computing 50 means of 604 points in at most 20 steps...
2022-04-05 03:18:39,269 INFO Computing 2048 means at 48%
2022-04-05 03:18:39,360 INFO Computing 50 means of 592 points in at most 20 steps...
2022-04-05 03:18:39,422 INFO Computing 2048 means at 51%
2022-04-05 03:18:39,501 INFO Computing 50 means of 581 points in at most 20 steps...
2022-04-05 03:18:39,561 INFO Computing 2048 means at 53%
2022-04-05 03:18:39,638 INFO Computing 50 means of 583 points in at most 20 steps...
2022-04-05 03:18:39,699 INFO Computing 2048 means at 56%
2022-04-05 03:18:39,776 INFO Computing 50 means of 586 points in at most 20 steps...
2022-04-05 03:18:39,839 INFO Computing 2048 means at 58%
2022-04-05 03:18:39,925 INFO Computing 50 means of 587 points in at most 20 steps...
2022-04-05 03:18:39,990 INFO Computing 2048 means at 61%
2022-04-05 03:18:40,069 INFO Computing 50 means of 588 points in at most 20 steps...
2022-04-05 03:18:40,135 INFO Computing 2048 means at 63%
2022-04-05 03:18:40,215 INFO Computing 50 means of 564 points in at most 20 steps...
2022-04-05 03:18:40,276 INFO Computing 2048 means at 65%
2022-04-05 03:18:40,353 INFO Computing 50 means of 584 points in at most 20 steps...
2022-04-05 03:18:40,416 INFO Computing 2048 means at 68%
2022-04-05 03:18:40,495 INFO Computing 50 means of 585 points in at most 20 steps...
2022-04-05 03:18:40,558 INFO Computing 2048 means at 70%
2022-04-05 03:18:40,635 INFO Computing 50 means of 596 points in at most 20 steps...
2022-04-05 03:18:40,700 INFO Computing 2048 means at 73%
2022-04-05 03:18:40,791 INFO Computing 50 means of 594 points in at most 20 steps...
2022-04-05 03:18:40,854 INFO Computing 2048 means at 75%
2022-04-05 03:18:40,932 INFO Computing 50 means of 600 points in at most 20 steps...
2022-04-05 03:18:40,997 INFO Computing 2048 means at 78%
2022-04-05 03:18:41,076 INFO Computing 50 means of 570 points in at most 20 steps...
2022-04-05 03:18:41,138 INFO Computing 2048 means at 80%
2022-04-05 03:18:41,214 INFO Computing 50 means of 603 points in at most 20 steps...
2022-04-05 03:18:41,278 INFO Computing 2048 means at 83%
2022-04-05 03:18:41,355 INFO Computing 50 means of 582 points in at most 20 steps...
2022-04-05 03:18:41,417 INFO Computing 2048 means at 85%
2022-04-05 03:18:41,493 INFO Computing 50 means of 585 points in at most 20 steps...
2022-04-05 03:18:41,554 INFO Computing 2048 means at 87%
2022-04-05 03:18:41,631 INFO Computing 50 means of 596 points in at most 20 steps...
2022-04-05 03:18:41,695 INFO Computing 2048 means at 90%
2022-04-05 03:18:41,771 INFO Computing 50 means of 588 points in at most 20 steps...
2022-04-05 03:18:41,842 INFO Computing 2048 means at 92%
2022-04-05 03:18:41,920 INFO Computing 50 means of 563 points in at most 20 steps...
2022-04-05 03:18:41,981 INFO Computing 2048 means at 95%
2022-04-05 03:18:42,056 INFO Computing 50 means of 585 points in at most 20 steps...
2022-04-05 03:18:42,121 INFO Computing 2048 means at 97%
2022-04-05 03:18:42,198 INFO Computing 48 means of 567 points in at most 20 steps...
2022-04-05 03:18:42,256 INFO Computing 2048 means at 100%
2022-04-05 03:18:46,481 INFO Do vol update step
2022-04-05 03:18:46,483 INFO Compute adjoint forward mapping on the images
2022-04-05 03:18:48,078 DEBUG Corresponding type is already complex complex128.
2022-04-05 03:18:50,451 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2022-04-05 03:18:50,465 INFO Computing adjoint forward mappings from 2048 rotations at 50%
2022-04-05 03:18:51,937 DEBUG Corresponding type is already complex complex128.
2022-04-05 03:18:54,361 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2022-04-05 03:18:54,372 INFO Computing adjoint forward mappings from 2048 rotations at 100%
2022-04-05 03:18:55,229 DEBUG Corresponding type is already real float64.
2022-04-05 03:18:55,230 DEBUG anufft passed real_type for signal, converting
2022-04-05 03:19:01,163 INFO Computing kernel from 2048 rotations at 50%
2022-04-05 03:19:01,979 DEBUG Corresponding type is already real float64.
2022-04-05 03:19:01,979 DEBUG anufft passed real_type for signal, converting
2022-04-05 03:19:08,108 INFO Computing kernel from 2048 rotations at 100%
2022-04-05 03:19:08,110 INFO Computing non-centered Fourier Transform
2022-04-05 03:19:08,277 INFO Add ramp filter regularisation
2022-04-05 03:19:12,753 INFO Update data_discrepancies
2022-04-05 03:19:12,754 INFO Computing \|Ag.u - f_i\|^2
2022-04-05 03:19:13,626 DEBUG Corresponding type is already real float64.
2022-04-05 03:19:13,626 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:19:28,396 INFO Computing data fidelity for 114564 rotations and 2048 images at 0%
2022-04-05 03:19:29,137 DEBUG Corresponding type is already real float64.
2022-04-05 03:19:29,138 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:19:43,542 INFO Computing data fidelity for 114564 rotations and 2048 images at 1%
2022-04-05 03:19:44,282 DEBUG Corresponding type is already real float64.
2022-04-05 03:19:44,282 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:19:58,164 INFO Computing data fidelity for 114564 rotations and 2048 images at 2%
2022-04-05 03:19:58,870 DEBUG Corresponding type is already real float64.
2022-04-05 03:19:58,871 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:20:11,988 INFO Computing data fidelity for 114564 rotations and 2048 images at 3%
2022-04-05 03:20:12,693 DEBUG Corresponding type is already real float64.
2022-04-05 03:20:12,694 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:20:25,804 INFO Computing data fidelity for 114564 rotations and 2048 images at 4%
2022-04-05 03:20:26,507 DEBUG Corresponding type is already real float64.
2022-04-05 03:20:26,507 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:20:39,529 INFO Computing data fidelity for 114564 rotations and 2048 images at 5%
2022-04-05 03:20:40,236 DEBUG Corresponding type is already real float64.
2022-04-05 03:20:40,236 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:20:53,340 INFO Computing data fidelity for 114564 rotations and 2048 images at 6%
2022-04-05 03:20:54,044 DEBUG Corresponding type is already real float64.
2022-04-05 03:20:54,044 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:21:07,043 INFO Computing data fidelity for 114564 rotations and 2048 images at 7%
2022-04-05 03:21:07,743 DEBUG Corresponding type is already real float64.
2022-04-05 03:21:07,743 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:21:20,757 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2022-04-05 03:21:21,464 DEBUG Corresponding type is already real float64.
2022-04-05 03:21:21,464 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:21:34,507 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2022-04-05 03:21:35,210 DEBUG Corresponding type is already real float64.
2022-04-05 03:21:35,211 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:21:48,297 INFO Computing data fidelity for 114564 rotations and 2048 images at 9%
2022-04-05 03:21:49,000 DEBUG Corresponding type is already real float64.
2022-04-05 03:21:49,000 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:22:02,073 INFO Computing data fidelity for 114564 rotations and 2048 images at 10%
2022-04-05 03:22:02,770 DEBUG Corresponding type is already real float64.
2022-04-05 03:22:02,770 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:22:15,818 INFO Computing data fidelity for 114564 rotations and 2048 images at 11%
2022-04-05 03:22:16,535 DEBUG Corresponding type is already real float64.
2022-04-05 03:22:16,535 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:22:29,507 INFO Computing data fidelity for 114564 rotations and 2048 images at 12%
2022-04-05 03:22:30,209 DEBUG Corresponding type is already real float64.
2022-04-05 03:22:30,209 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:22:43,269 INFO Computing data fidelity for 114564 rotations and 2048 images at 13%
2022-04-05 03:22:44,016 DEBUG Corresponding type is already real float64.
2022-04-05 03:22:44,016 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:22:57,254 INFO Computing data fidelity for 114564 rotations and 2048 images at 14%
2022-04-05 03:22:57,947 DEBUG Corresponding type is already real float64.
2022-04-05 03:22:57,947 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:23:10,964 INFO Computing data fidelity for 114564 rotations and 2048 images at 15%
2022-04-05 03:23:11,664 DEBUG Corresponding type is already real float64.
2022-04-05 03:23:11,664 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:23:24,820 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2022-04-05 03:23:25,532 DEBUG Corresponding type is already real float64.
2022-04-05 03:23:25,532 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:23:38,524 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2022-04-05 03:23:39,225 DEBUG Corresponding type is already real float64.
2022-04-05 03:23:39,226 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:23:52,359 INFO Computing data fidelity for 114564 rotations and 2048 images at 17%
2022-04-05 03:23:53,056 DEBUG Corresponding type is already real float64.
2022-04-05 03:23:53,056 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:24:06,132 INFO Computing data fidelity for 114564 rotations and 2048 images at 18%
2022-04-05 03:24:06,824 DEBUG Corresponding type is already real float64.
2022-04-05 03:24:06,824 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:24:19,869 INFO Computing data fidelity for 114564 rotations and 2048 images at 19%
2022-04-05 03:24:20,593 DEBUG Corresponding type is already real float64.
2022-04-05 03:24:20,593 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:24:33,644 INFO Computing data fidelity for 114564 rotations and 2048 images at 20%
2022-04-05 03:24:34,353 DEBUG Corresponding type is already real float64.
2022-04-05 03:24:34,353 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:24:47,469 INFO Computing data fidelity for 114564 rotations and 2048 images at 21%
2022-04-05 03:24:48,158 DEBUG Corresponding type is already real float64.
2022-04-05 03:24:48,158 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:25:01,277 INFO Computing data fidelity for 114564 rotations and 2048 images at 22%
2022-04-05 03:25:01,976 DEBUG Corresponding type is already real float64.
2022-04-05 03:25:01,977 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:25:14,939 INFO Computing data fidelity for 114564 rotations and 2048 images at 23%
2022-04-05 03:25:15,647 DEBUG Corresponding type is already real float64.
2022-04-05 03:25:15,647 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:25:28,809 INFO Computing data fidelity for 114564 rotations and 2048 images at 24%
2022-04-05 03:25:29,505 DEBUG Corresponding type is already real float64.
2022-04-05 03:25:29,505 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:25:42,590 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2022-04-05 03:25:43,297 DEBUG Corresponding type is already real float64.
2022-04-05 03:25:43,297 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:25:56,318 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2022-04-05 03:25:57,007 DEBUG Corresponding type is already real float64.
2022-04-05 03:25:57,007 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:26:10,072 INFO Computing data fidelity for 114564 rotations and 2048 images at 26%
2022-04-05 03:26:10,779 DEBUG Corresponding type is already real float64.
2022-04-05 03:26:10,779 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:26:23,799 INFO Computing data fidelity for 114564 rotations and 2048 images at 27%
2022-04-05 03:26:24,525 DEBUG Corresponding type is already real float64.
2022-04-05 03:26:24,525 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:26:37,613 INFO Computing data fidelity for 114564 rotations and 2048 images at 28%
2022-04-05 03:26:38,309 DEBUG Corresponding type is already real float64.
2022-04-05 03:26:38,309 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:26:51,382 INFO Computing data fidelity for 114564 rotations and 2048 images at 29%
2022-04-05 03:26:52,079 DEBUG Corresponding type is already real float64.
2022-04-05 03:26:52,080 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:27:05,068 INFO Computing data fidelity for 114564 rotations and 2048 images at 30%
2022-04-05 03:27:05,785 DEBUG Corresponding type is already real float64.
2022-04-05 03:27:05,785 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:27:18,850 INFO Computing data fidelity for 114564 rotations and 2048 images at 31%
2022-04-05 03:27:19,547 DEBUG Corresponding type is already real float64.
2022-04-05 03:27:19,547 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:27:32,592 INFO Computing data fidelity for 114564 rotations and 2048 images at 32%
2022-04-05 03:27:33,286 DEBUG Corresponding type is already real float64.
2022-04-05 03:27:33,286 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:27:46,306 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2022-04-05 03:27:47,013 DEBUG Corresponding type is already real float64.
2022-04-05 03:27:47,013 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:28:00,459 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2022-04-05 03:28:01,157 DEBUG Corresponding type is already real float64.
2022-04-05 03:28:01,157 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:28:13,966 INFO Computing data fidelity for 114564 rotations and 2048 images at 34%
2022-04-05 03:28:14,667 DEBUG Corresponding type is already real float64.
2022-04-05 03:28:14,667 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:28:27,491 INFO Computing data fidelity for 114564 rotations and 2048 images at 35%
2022-04-05 03:28:28,186 DEBUG Corresponding type is already real float64.
2022-04-05 03:28:28,187 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:28:40,962 INFO Computing data fidelity for 114564 rotations and 2048 images at 36%
2022-04-05 03:28:41,661 DEBUG Corresponding type is already real float64.
2022-04-05 03:28:41,661 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:28:54,502 INFO Computing data fidelity for 114564 rotations and 2048 images at 37%
2022-04-05 03:28:55,222 DEBUG Corresponding type is already real float64.
2022-04-05 03:28:55,222 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:29:08,033 INFO Computing data fidelity for 114564 rotations and 2048 images at 38%
2022-04-05 03:29:08,729 DEBUG Corresponding type is already real float64.
2022-04-05 03:29:08,729 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:29:21,596 INFO Computing data fidelity for 114564 rotations and 2048 images at 39%
2022-04-05 03:29:22,294 DEBUG Corresponding type is already real float64.
2022-04-05 03:29:22,294 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:29:35,174 INFO Computing data fidelity for 114564 rotations and 2048 images at 40%
2022-04-05 03:29:35,888 DEBUG Corresponding type is already real float64.
2022-04-05 03:29:35,888 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:29:48,814 INFO Computing data fidelity for 114564 rotations and 2048 images at 41%
2022-04-05 03:29:49,511 DEBUG Corresponding type is already real float64.
2022-04-05 03:29:49,512 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:30:02,589 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2022-04-05 03:30:03,285 DEBUG Corresponding type is already real float64.
2022-04-05 03:30:03,286 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:30:16,130 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2022-04-05 03:30:16,857 DEBUG Corresponding type is already real float64.
2022-04-05 03:30:16,857 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:30:29,677 INFO Computing data fidelity for 114564 rotations and 2048 images at 43%
2022-04-05 03:30:30,370 DEBUG Corresponding type is already real float64.
2022-04-05 03:30:30,370 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:30:43,213 INFO Computing data fidelity for 114564 rotations and 2048 images at 44%
2022-04-05 03:30:43,909 DEBUG Corresponding type is already real float64.
2022-04-05 03:30:43,910 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:30:56,759 INFO Computing data fidelity for 114564 rotations and 2048 images at 45%
2022-04-05 03:30:57,464 DEBUG Corresponding type is already real float64.
2022-04-05 03:30:57,464 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:31:10,300 INFO Computing data fidelity for 114564 rotations and 2048 images at 46%
2022-04-05 03:31:10,999 DEBUG Corresponding type is already real float64.
2022-04-05 03:31:11,000 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:31:23,780 INFO Computing data fidelity for 114564 rotations and 2048 images at 47%
2022-04-05 03:31:24,486 DEBUG Corresponding type is already real float64.
2022-04-05 03:31:24,486 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:31:37,310 INFO Computing data fidelity for 114564 rotations and 2048 images at 48%
2022-04-05 03:31:38,014 DEBUG Corresponding type is already real float64.
2022-04-05 03:31:38,014 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:31:50,928 INFO Computing data fidelity for 114564 rotations and 2048 images at 49%
2022-04-05 03:31:51,636 DEBUG Corresponding type is already real float64.
2022-04-05 03:31:51,636 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:32:04,537 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2022-04-05 03:32:05,242 DEBUG Corresponding type is already real float64.
2022-04-05 03:32:05,242 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:32:18,068 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2022-04-05 03:32:18,773 DEBUG Corresponding type is already real float64.
2022-04-05 03:32:18,773 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:32:31,725 INFO Computing data fidelity for 114564 rotations and 2048 images at 51%
2022-04-05 03:32:32,432 DEBUG Corresponding type is already real float64.
2022-04-05 03:32:32,432 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:32:45,223 INFO Computing data fidelity for 114564 rotations and 2048 images at 52%
2022-04-05 03:32:45,920 DEBUG Corresponding type is already real float64.
2022-04-05 03:32:45,920 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:32:58,820 INFO Computing data fidelity for 114564 rotations and 2048 images at 53%
2022-04-05 03:32:59,519 DEBUG Corresponding type is already real float64.
2022-04-05 03:32:59,519 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:33:12,386 INFO Computing data fidelity for 114564 rotations and 2048 images at 54%
2022-04-05 03:33:13,082 DEBUG Corresponding type is already real float64.
2022-04-05 03:33:13,082 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:33:25,943 INFO Computing data fidelity for 114564 rotations and 2048 images at 55%
2022-04-05 03:33:26,640 DEBUG Corresponding type is already real float64.
2022-04-05 03:33:26,640 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:33:39,542 INFO Computing data fidelity for 114564 rotations and 2048 images at 56%
2022-04-05 03:33:40,263 DEBUG Corresponding type is already real float64.
2022-04-05 03:33:40,263 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:33:53,174 INFO Computing data fidelity for 114564 rotations and 2048 images at 57%
2022-04-05 03:33:53,891 DEBUG Corresponding type is already real float64.
2022-04-05 03:33:53,891 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:34:06,750 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2022-04-05 03:34:07,452 DEBUG Corresponding type is already real float64.
2022-04-05 03:34:07,452 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:34:20,298 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2022-04-05 03:34:21,028 DEBUG Corresponding type is already real float64.
2022-04-05 03:34:21,029 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:34:33,903 INFO Computing data fidelity for 114564 rotations and 2048 images at 59%
2022-04-05 03:34:34,610 DEBUG Corresponding type is already real float64.
2022-04-05 03:34:34,610 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:34:47,616 INFO Computing data fidelity for 114564 rotations and 2048 images at 60%
2022-04-05 03:34:48,341 DEBUG Corresponding type is already real float64.
2022-04-05 03:34:48,342 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:35:01,484 INFO Computing data fidelity for 114564 rotations and 2048 images at 61%
2022-04-05 03:35:02,193 DEBUG Corresponding type is already real float64.
2022-04-05 03:35:02,193 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:35:15,034 INFO Computing data fidelity for 114564 rotations and 2048 images at 62%
2022-04-05 03:35:15,757 DEBUG Corresponding type is already real float64.
2022-04-05 03:35:15,757 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:35:28,708 INFO Computing data fidelity for 114564 rotations and 2048 images at 63%
2022-04-05 03:35:29,424 DEBUG Corresponding type is already real float64.
2022-04-05 03:35:29,424 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:35:42,365 INFO Computing data fidelity for 114564 rotations and 2048 images at 64%
2022-04-05 03:35:43,077 DEBUG Corresponding type is already real float64.
2022-04-05 03:35:43,077 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:35:56,001 INFO Computing data fidelity for 114564 rotations and 2048 images at 65%
2022-04-05 03:35:56,712 DEBUG Corresponding type is already real float64.
2022-04-05 03:35:56,712 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:36:09,638 INFO Computing data fidelity for 114564 rotations and 2048 images at 66%
2022-04-05 03:36:10,372 DEBUG Corresponding type is already real float64.
2022-04-05 03:36:10,372 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:36:23,269 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2022-04-05 03:36:23,991 DEBUG Corresponding type is already real float64.
2022-04-05 03:36:23,991 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:36:36,843 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2022-04-05 03:36:37,562 DEBUG Corresponding type is already real float64.
2022-04-05 03:36:37,562 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:36:50,592 INFO Computing data fidelity for 114564 rotations and 2048 images at 68%
2022-04-05 03:36:51,327 DEBUG Corresponding type is already real float64.
2022-04-05 03:36:51,328 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:37:04,176 INFO Computing data fidelity for 114564 rotations and 2048 images at 69%
2022-04-05 03:37:04,898 DEBUG Corresponding type is already real float64.
2022-04-05 03:37:04,898 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:37:17,755 INFO Computing data fidelity for 114564 rotations and 2048 images at 70%
2022-04-05 03:37:18,472 DEBUG Corresponding type is already real float64.
2022-04-05 03:37:18,472 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:37:31,332 INFO Computing data fidelity for 114564 rotations and 2048 images at 71%
2022-04-05 03:37:32,065 DEBUG Corresponding type is already real float64.
2022-04-05 03:37:32,066 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:37:46,189 INFO Computing data fidelity for 114564 rotations and 2048 images at 72%
2022-04-05 03:37:47,043 DEBUG Corresponding type is already real float64.
2022-04-05 03:37:47,043 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:38:00,853 INFO Computing data fidelity for 114564 rotations and 2048 images at 73%
2022-04-05 03:38:01,569 DEBUG Corresponding type is already real float64.
2022-04-05 03:38:01,570 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:38:15,336 INFO Computing data fidelity for 114564 rotations and 2048 images at 74%
2022-04-05 03:38:16,069 DEBUG Corresponding type is already real float64.
2022-04-05 03:38:16,069 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:38:29,374 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2022-04-05 03:38:30,109 DEBUG Corresponding type is already real float64.
2022-04-05 03:38:30,109 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:38:43,028 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2022-04-05 03:38:43,746 DEBUG Corresponding type is already real float64.
2022-04-05 03:38:43,746 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:38:56,769 INFO Computing data fidelity for 114564 rotations and 2048 images at 76%
2022-04-05 03:38:57,492 DEBUG Corresponding type is already real float64.
2022-04-05 03:38:57,492 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:39:10,440 INFO Computing data fidelity for 114564 rotations and 2048 images at 77%
2022-04-05 03:39:11,162 DEBUG Corresponding type is already real float64.
2022-04-05 03:39:11,162 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:39:24,127 INFO Computing data fidelity for 114564 rotations and 2048 images at 78%
2022-04-05 03:39:24,864 DEBUG Corresponding type is already real float64.
2022-04-05 03:39:24,864 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:39:37,744 INFO Computing data fidelity for 114564 rotations and 2048 images at 79%
2022-04-05 03:39:38,457 DEBUG Corresponding type is already real float64.
2022-04-05 03:39:38,457 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:39:51,537 INFO Computing data fidelity for 114564 rotations and 2048 images at 80%
2022-04-05 03:39:52,268 DEBUG Corresponding type is already real float64.
2022-04-05 03:39:52,269 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:40:05,247 INFO Computing data fidelity for 114564 rotations and 2048 images at 81%
2022-04-05 03:40:05,967 DEBUG Corresponding type is already real float64.
2022-04-05 03:40:05,967 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:40:18,865 INFO Computing data fidelity for 114564 rotations and 2048 images at 82%
2022-04-05 03:40:19,591 DEBUG Corresponding type is already real float64.
2022-04-05 03:40:19,591 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:40:32,509 INFO Computing data fidelity for 114564 rotations and 2048 images at 83%
2022-04-05 03:40:33,223 DEBUG Corresponding type is already real float64.
2022-04-05 03:40:33,223 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:40:46,230 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2022-04-05 03:40:46,953 DEBUG Corresponding type is already real float64.
2022-04-05 03:40:46,954 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:40:59,866 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2022-04-05 03:41:00,587 DEBUG Corresponding type is already real float64.
2022-04-05 03:41:00,587 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:41:13,447 INFO Computing data fidelity for 114564 rotations and 2048 images at 85%
2022-04-05 03:41:14,171 DEBUG Corresponding type is already real float64.
2022-04-05 03:41:14,171 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:41:27,148 INFO Computing data fidelity for 114564 rotations and 2048 images at 86%
2022-04-05 03:41:27,878 DEBUG Corresponding type is already real float64.
2022-04-05 03:41:27,878 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:41:40,770 INFO Computing data fidelity for 114564 rotations and 2048 images at 87%
2022-04-05 03:41:41,494 DEBUG Corresponding type is already real float64.
2022-04-05 03:41:41,494 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:41:54,489 INFO Computing data fidelity for 114564 rotations and 2048 images at 88%
2022-04-05 03:41:55,215 DEBUG Corresponding type is already real float64.
2022-04-05 03:41:55,215 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:42:08,251 INFO Computing data fidelity for 114564 rotations and 2048 images at 89%
2022-04-05 03:42:09,042 DEBUG Corresponding type is already real float64.
2022-04-05 03:42:09,042 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:42:22,041 INFO Computing data fidelity for 114564 rotations and 2048 images at 90%
2022-04-05 03:42:22,775 DEBUG Corresponding type is already real float64.
2022-04-05 03:42:22,775 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:42:35,608 INFO Computing data fidelity for 114564 rotations and 2048 images at 91%
2022-04-05 03:42:36,319 DEBUG Corresponding type is already real float64.
2022-04-05 03:42:36,319 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:42:49,262 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2022-04-05 03:42:49,973 DEBUG Corresponding type is already real float64.
2022-04-05 03:42:49,973 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:43:02,826 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2022-04-05 03:43:03,546 DEBUG Corresponding type is already real float64.
2022-04-05 03:43:03,546 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:43:16,442 INFO Computing data fidelity for 114564 rotations and 2048 images at 93%
2022-04-05 03:43:17,172 DEBUG Corresponding type is already real float64.
2022-04-05 03:43:17,173 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:43:30,075 INFO Computing data fidelity for 114564 rotations and 2048 images at 94%
2022-04-05 03:43:30,794 DEBUG Corresponding type is already real float64.
2022-04-05 03:43:30,794 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:43:43,694 INFO Computing data fidelity for 114564 rotations and 2048 images at 95%
2022-04-05 03:43:44,429 DEBUG Corresponding type is already real float64.
2022-04-05 03:43:44,429 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:43:57,337 INFO Computing data fidelity for 114564 rotations and 2048 images at 96%
2022-04-05 03:43:58,051 DEBUG Corresponding type is already real float64.
2022-04-05 03:43:58,051 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:44:10,935 INFO Computing data fidelity for 114564 rotations and 2048 images at 97%
2022-04-05 03:44:11,652 DEBUG Corresponding type is already real float64.
2022-04-05 03:44:11,652 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:44:24,538 INFO Computing data fidelity for 114564 rotations and 2048 images at 98%
2022-04-05 03:44:25,274 DEBUG Corresponding type is already real float64.
2022-04-05 03:44:25,274 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:44:38,157 INFO Computing data fidelity for 114564 rotations and 2048 images at 99%
2022-04-05 03:44:38,606 DEBUG Corresponding type is already real float64.
2022-04-05 03:44:38,606 DEBUG nufft passed real_type for signal, converting
2022-04-05 03:44:49,872 INFO Computing data fidelity for 114564 rotations and 2048 images at 100%
2022-04-05 03:44:50,990 INFO Do lambda update step
2022-04-05 03:45:13,850 INFO Do rots update step
2022-04-05 03:45:14,658 INFO Projecting 2048 vectors onto 114564-simplex at 2%
2022-04-05 03:45:15,262 INFO Projecting 2048 vectors onto 114564-simplex at 4%
2022-04-05 03:45:15,873 INFO Projecting 2048 vectors onto 114564-simplex at 7%
2022-04-05 03:45:16,493 INFO Projecting 2048 vectors onto 114564-simplex at 9%
2022-04-05 03:45:17,132 INFO Projecting 2048 vectors onto 114564-simplex at 12%
2022-04-05 03:45:17,736 INFO Projecting 2048 vectors onto 114564-simplex at 14%
2022-04-05 03:45:18,343 INFO Projecting 2048 vectors onto 114564-simplex at 17%
2022-04-05 03:45:18,952 INFO Projecting 2048 vectors onto 114564-simplex at 19%
2022-04-05 03:45:19,643 INFO Projecting 2048 vectors onto 114564-simplex at 21%
2022-04-05 03:45:20,340 INFO Projecting 2048 vectors onto 114564-simplex at 24%
2022-04-05 03:45:21,237 INFO Projecting 2048 vectors onto 114564-simplex at 26%
2022-04-05 03:45:21,944 INFO Projecting 2048 vectors onto 114564-simplex at 29%
2022-04-05 03:45:22,654 INFO Projecting 2048 vectors onto 114564-simplex at 31%
2022-04-05 03:45:23,368 INFO Projecting 2048 vectors onto 114564-simplex at 34%
2022-04-05 03:45:24,084 INFO Projecting 2048 vectors onto 114564-simplex at 36%
2022-04-05 03:45:24,794 INFO Projecting 2048 vectors onto 114564-simplex at 39%
2022-04-05 03:45:25,482 INFO Projecting 2048 vectors onto 114564-simplex at 41%
2022-04-05 03:45:26,171 INFO Projecting 2048 vectors onto 114564-simplex at 43%
2022-04-05 03:45:26,859 INFO Projecting 2048 vectors onto 114564-simplex at 46%
2022-04-05 03:45:27,550 INFO Projecting 2048 vectors onto 114564-simplex at 48%
2022-04-05 03:45:28,442 INFO Projecting 2048 vectors onto 114564-simplex at 51%
2022-04-05 03:45:29,143 INFO Projecting 2048 vectors onto 114564-simplex at 53%
2022-04-05 03:45:29,843 INFO Projecting 2048 vectors onto 114564-simplex at 56%
2022-04-05 03:45:30,532 INFO Projecting 2048 vectors onto 114564-simplex at 58%
2022-04-05 03:45:31,234 INFO Projecting 2048 vectors onto 114564-simplex at 61%
2022-04-05 03:45:31,918 INFO Projecting 2048 vectors onto 114564-simplex at 63%
2022-04-05 03:45:32,614 INFO Projecting 2048 vectors onto 114564-simplex at 65%
2022-04-05 03:45:33,300 INFO Projecting 2048 vectors onto 114564-simplex at 68%
2022-04-05 03:45:33,986 INFO Projecting 2048 vectors onto 114564-simplex at 70%
2022-04-05 03:45:34,697 INFO Projecting 2048 vectors onto 114564-simplex at 73%
2022-04-05 03:45:35,632 INFO Projecting 2048 vectors onto 114564-simplex at 75%
2022-04-05 03:45:36,328 INFO Projecting 2048 vectors onto 114564-simplex at 78%
2022-04-05 03:45:37,028 INFO Projecting 2048 vectors onto 114564-simplex at 80%
2022-04-05 03:45:37,713 INFO Projecting 2048 vectors onto 114564-simplex at 83%
2022-04-05 03:45:38,387 INFO Projecting 2048 vectors onto 114564-simplex at 85%
2022-04-05 03:45:39,060 INFO Projecting 2048 vectors onto 114564-simplex at 87%
2022-04-05 03:45:39,744 INFO Projecting 2048 vectors onto 114564-simplex at 90%
2022-04-05 03:45:40,426 INFO Projecting 2048 vectors onto 114564-simplex at 92%
2022-04-05 03:45:41,103 INFO Projecting 2048 vectors onto 114564-simplex at 95%
2022-04-05 03:45:41,793 INFO Projecting 2048 vectors onto 114564-simplex at 97%
2022-04-05 03:45:42,452 INFO Projecting 2048 vectors onto 114564-simplex at 100%
2022-04-05 03:45:43,960 INFO Computing 50 means of 587 points in at most 20 steps...
2022-04-05 03:45:44,059 INFO Computing 2048 means at 2%
2022-04-05 03:45:44,148 INFO Computing 50 means of 563 points in at most 20 steps...
2022-04-05 03:45:44,215 INFO Computing 2048 means at 4%
2022-04-05 03:45:44,308 INFO Computing 50 means of 601 points in at most 20 steps...
2022-04-05 03:45:44,383 INFO Computing 2048 means at 7%
2022-04-05 03:45:44,465 INFO Computing 50 means of 551 points in at most 20 steps...
2022-04-05 03:45:44,528 INFO Computing 2048 means at 9%
2022-04-05 03:45:44,609 INFO Computing 50 means of 579 points in at most 20 steps...
2022-04-05 03:45:44,674 INFO Computing 2048 means at 12%
2022-04-05 03:45:44,753 INFO Computing 50 means of 578 points in at most 20 steps...
2022-04-05 03:45:44,818 INFO Computing 2048 means at 14%
2022-04-05 03:45:44,899 INFO Computing 50 means of 591 points in at most 20 steps...
2022-04-05 03:45:44,965 INFO Computing 2048 means at 17%
2022-04-05 03:45:45,044 INFO Computing 50 means of 592 points in at most 20 steps...
2022-04-05 03:45:45,109 INFO Computing 2048 means at 19%
2022-04-05 03:45:45,189 INFO Computing 50 means of 597 points in at most 20 steps...
2022-04-05 03:45:45,254 INFO Computing 2048 means at 21%
2022-04-05 03:45:45,334 INFO Computing 50 means of 598 points in at most 20 steps...
2022-04-05 03:45:45,401 INFO Computing 2048 means at 24%
2022-04-05 03:45:45,491 INFO Computing 50 means of 574 points in at most 20 steps...
2022-04-05 03:45:45,554 INFO Computing 2048 means at 26%
2022-04-05 03:45:45,634 INFO Computing 50 means of 566 points in at most 20 steps...
2022-04-05 03:45:45,696 INFO Computing 2048 means at 29%
2022-04-05 03:45:45,777 INFO Computing 50 means of 588 points in at most 20 steps...
2022-04-05 03:45:45,841 INFO Computing 2048 means at 31%
2022-04-05 03:45:45,933 INFO Computing 50 means of 576 points in at most 20 steps...
2022-04-05 03:45:45,997 INFO Computing 2048 means at 34%
2022-04-05 03:45:46,082 INFO Computing 50 means of 583 points in at most 20 steps...
2022-04-05 03:45:46,146 INFO Computing 2048 means at 36%
2022-04-05 03:45:46,226 INFO Computing 50 means of 576 points in at most 20 steps...
2022-04-05 03:45:46,290 INFO Computing 2048 means at 39%
2022-04-05 03:45:46,370 INFO Computing 50 means of 580 points in at most 20 steps...
2022-04-05 03:45:46,435 INFO Computing 2048 means at 41%
2022-04-05 03:45:46,514 INFO Computing 50 means of 590 points in at most 20 steps...
2022-04-05 03:45:46,579 INFO Computing 2048 means at 43%
2022-04-05 03:45:46,659 INFO Computing 50 means of 596 points in at most 20 steps...
2022-04-05 03:45:46,724 INFO Computing 2048 means at 46%
2022-04-05 03:45:46,804 INFO Computing 50 means of 605 points in at most 20 steps...
2022-04-05 03:45:46,874 INFO Computing 2048 means at 48%
2022-04-05 03:45:46,964 INFO Computing 50 means of 595 points in at most 20 steps...
2022-04-05 03:45:47,029 INFO Computing 2048 means at 51%
2022-04-05 03:45:47,108 INFO Computing 50 means of 580 points in at most 20 steps...
2022-04-05 03:45:47,172 INFO Computing 2048 means at 53%
2022-04-05 03:45:47,251 INFO Computing 50 means of 582 points in at most 20 steps...
2022-04-05 03:45:47,314 INFO Computing 2048 means at 56%
2022-04-05 03:45:47,394 INFO Computing 50 means of 586 points in at most 20 steps...
2022-04-05 03:45:47,457 INFO Computing 2048 means at 58%
2022-04-05 03:45:47,538 INFO Computing 50 means of 585 points in at most 20 steps...
2022-04-05 03:45:47,601 INFO Computing 2048 means at 61%
2022-04-05 03:45:47,679 INFO Computing 50 means of 585 points in at most 20 steps...
2022-04-05 03:45:47,743 INFO Computing 2048 means at 63%
2022-04-05 03:45:47,824 INFO Computing 50 means of 561 points in at most 20 steps...
2022-04-05 03:45:47,886 INFO Computing 2048 means at 65%
2022-04-05 03:45:47,968 INFO Computing 50 means of 585 points in at most 20 steps...
2022-04-05 03:45:48,033 INFO Computing 2048 means at 68%
2022-04-05 03:45:48,114 INFO Computing 50 means of 584 points in at most 20 steps...
2022-04-05 03:45:48,179 INFO Computing 2048 means at 70%
2022-04-05 03:45:48,259 INFO Computing 50 means of 596 points in at most 20 steps...
2022-04-05 03:45:48,324 INFO Computing 2048 means at 73%
2022-04-05 03:45:48,414 INFO Computing 50 means of 594 points in at most 20 steps...
2022-04-05 03:45:48,482 INFO Computing 2048 means at 75%
2022-04-05 03:45:48,564 INFO Computing 50 means of 598 points in at most 20 steps...
2022-04-05 03:45:48,638 INFO Computing 2048 means at 78%
2022-04-05 03:45:48,717 INFO Computing 50 means of 571 points in at most 20 steps...
2022-04-05 03:45:48,781 INFO Computing 2048 means at 80%
2022-04-05 03:45:48,859 INFO Computing 50 means of 602 points in at most 20 steps...
2022-04-05 03:45:48,935 INFO Computing 2048 means at 83%
2022-04-05 03:45:49,018 INFO Computing 50 means of 582 points in at most 20 steps...
2022-04-05 03:45:49,081 INFO Computing 2048 means at 85%
2022-04-05 03:45:49,160 INFO Computing 50 means of 586 points in at most 20 steps...
2022-04-05 03:45:49,231 INFO Computing 2048 means at 87%
2022-04-05 03:45:49,315 INFO Computing 50 means of 597 points in at most 20 steps...
2022-04-05 03:45:49,381 INFO Computing 2048 means at 90%
2022-04-05 03:45:49,462 INFO Computing 50 means of 588 points in at most 20 steps...
2022-04-05 03:45:49,526 INFO Computing 2048 means at 92%
2022-04-05 03:45:49,607 INFO Computing 50 means of 562 points in at most 20 steps...
2022-04-05 03:45:49,670 INFO Computing 2048 means at 95%
2022-04-05 03:45:49,748 INFO Computing 50 means of 586 points in at most 20 steps...
2022-04-05 03:45:49,811 INFO Computing 2048 means at 97%
2022-04-05 03:45:49,890 INFO Computing 48 means of 566 points in at most 20 steps...
2022-04-05 03:45:49,948 INFO Computing 2048 means at 100%
2022-04-05 03:45:54,084 INFO Do vol update step
2022-04-05 03:45:54,085 INFO Compute adjoint forward mapping on the images
2022-04-05 03:45:55,907 DEBUG Corresponding type is already complex complex128.
2022-04-05 03:45:58,418 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2022-04-05 03:45:58,432 INFO Computing adjoint forward mappings from 2048 rotations at 50%
2022-04-05 03:45:59,935 DEBUG Corresponding type is already complex complex128.
2022-04-05 03:46:02,491 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2022-04-05 03:46:02,502 INFO Computing adjoint forward mappings from 2048 rotations at 100%
2022-04-05 03:46:03,352 DEBUG Corresponding type is already real float64.
2022-04-05 03:46:03,352 DEBUG anufft passed real_type for signal, converting
2022-04-05 03:46:09,552 INFO Computing kernel from 2048 rotations at 50%
2022-04-05 03:46:10,384 DEBUG Corresponding type is already real float64.
2022-04-05 03:46:10,384 DEBUG anufft passed real_type for signal, converting
2022-04-05 03:46:16,664 INFO Computing kernel from 2048 rotations at 100%
2022-04-05 03:46:16,666 INFO Computing non-centered Fourier Transform
2022-04-05 03:46:16,838 INFO Add ramp filter regularisation
