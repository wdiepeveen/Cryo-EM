2023-01-06 09:41:37,460 DEBUG (private) matplotlib data path: /Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data
2023-01-06 09:41:37,461 DEBUG matplotlib data path: /Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data
2023-01-06 09:41:37,464 DEBUG CONFIGDIR=/Users/wdiepeveen/.matplotlib
2023-01-06 09:41:37,466 DEBUG matplotlib version 3.3.4
2023-01-06 09:41:37,466 DEBUG interactive is False
2023-01-06 09:41:37,467 DEBUG platform is darwin
2023-01-06 09:41:37,467 DEBUG loaded modules: ['builtins', 'sys', '_frozen_importlib', '_imp', '_warnings', '_thread', '_weakref', '_frozen_importlib_external', '_io', 'marshal', 'posix', 'zipimport', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_weakrefset', '_bootlocale', '_locale', 'site', 'os', 'errno', 'stat', '_stat', 'posixpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', 'types', 'functools', '_functools', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'weakref', 'collections.abc', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'mpl_toolkits', 'sphinxcontrib', 'sysconfig', '_sysconfigdata_m_darwin_darwin', '_osx_support', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'runpy', 'pkgutil', 'ipykernel', 'ipykernel._version', 'ipykernel.connect', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'subprocess', 'time', 'signal', '_posixsubprocess', 'select', 'selectors', 'math', 'threading', 'traceback', 'linecache', 'tokenize', 'token', 'IPython', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'IPython.core.application', 'atexit', 'copy', 'glob', 'fnmatch', 'logging', 'string', '_string', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'pwd', 'grp', 'traitlets', 'traitlets.traitlets', 'inspect', 'ast', '_ast', 'dis', 'opcode', '_opcode', 'six', '__future__', 'struct', '_struct', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'ipython_genutils', 'ipython_genutils._version', 'ipython_genutils.py3compat', 'ipython_genutils.encoding', 'locale', 'platform', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets._version', 'traitlets.config', 'traitlets.config.application', 'decorator', 'traitlets.config.configurable', 'traitlets.config.loader', 'argparse', 'textwrap', 'gettext', 'ipython_genutils.path', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'ipython_genutils.text', 'ipython_genutils.importstring', 'IPython.core.crashhandler', 'pprint', 'IPython.core.ultratb', 'pydoc', 'urllib', 'urllib.parse', 'IPython.core.debugger', 'bdb', 'IPython.utils', 'IPython.utils.PyColorize', 'IPython.utils.coloransi', 'IPython.utils.ipstruct', 'IPython.utils.colorable', 'pygments', 'IPython.utils.py3compat', 'IPython.utils.encoding', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'pdb', 'cmd', 'code', 'codeop', 'IPython.core.display_trap', 'IPython.utils.path', 'IPython.utils.process', 'IPython.utils._process_posix', 'pexpect', 'pexpect.exceptions', 'pexpect.utils', 'pexpect.expect', 'pexpect.pty_spawn', 'pty', 'tty', 'termios', 'ptyprocess', 'ptyprocess.ptyprocess', 'fcntl', 'resource', 'ptyprocess.util', 'pexpect.spawnbase', 'pexpect.run', 'IPython.utils._process_common', 'shlex', 'IPython.utils.decorators', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.utils.sysinfo', 'IPython.utils._sysinfo', 'IPython.core.profiledir', 'IPython.paths', 'tempfile', 'IPython.utils.importstring', 'IPython.terminal', 'IPython.terminal.embed', 'IPython.core.compilerop', 'IPython.core.magic_arguments', 'IPython.core.error', 'IPython.utils.text', 'pathlib', 'ntpath', 'IPython.core.magic', 'getopt', 'IPython.core.oinspect', 'typing', 'typing.io', 'typing.re', 'IPython.core.page', 'IPython.core.display', 'binascii', 'mimetypes', 'IPython.lib', 'IPython.lib.security', 'getpass', 'IPython.lib.pretty', 'datetime', '_datetime', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.python', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.unistring', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'IPython.core.inputtransformer2', 'IPython.core.interactiveshell', 'pickleshare', 'pickle', '_compat_pickle', '_pickle', 'IPython.core.prefilter', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.alias', 'IPython.core.builtin_trap', 'IPython.core.events', 'backcall', 'backcall.backcall', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.core.formatters', 'IPython.utils.sentinel', 'IPython.core.history', 'sqlite3', 'sqlite3.dbapi2', '_sqlite3', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.display', 'IPython.lib.display', 'html', 'html.entities', 'IPython.utils.io', 'IPython.utils.capture', 'IPython.utils.strdispatch', 'IPython.core.hooks', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.terminal.interactiveshell', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'concurrent.futures.process', 'queue', 'multiprocessing', 'multiprocessing.context', 'multiprocessing.process', 'multiprocessing.reduction', 'socket', '_socket', 'array', '__mp_main__', 'multiprocessing.connection', '_multiprocessing', 'multiprocessing.util', 'concurrent.futures.thread', 'asyncio.compat', 'asyncio.coroutines', 'asyncio.constants', 'asyncio.events', 'asyncio.base_futures', 'asyncio.log', 'asyncio.futures', 'asyncio.base_tasks', '_asyncio', 'asyncio.tasks', 'asyncio.locks', 'asyncio.protocols', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.transports', 'asyncio.unix_events', 'asyncio.base_subprocess', 'asyncio.selector_events', 'ssl', 'ipaddress', '_ssl', 'base64', 'asyncio.sslproto', 'prompt_toolkit', 'prompt_toolkit.application', 'prompt_toolkit.application.application', 'prompt_toolkit.buffer', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop', 'prompt_toolkit.eventloop.async_generator', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.dummy_contextvars', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.utils', 'wcwidth', 'wcwidth.wcwidth', 'wcwidth.table_wide', 'wcwidth.table_zero', 'wcwidth.unicode_versions', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.eventloop.async_context_manager', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.document', 'prompt_toolkit.clipboard', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.filters', 'prompt_toolkit.filters.app', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.completion', 'prompt_toolkit.completion.base', 'prompt_toolkit.formatted_text', 'prompt_toolkit.formatted_text.ansi', 'prompt_toolkit.output', 'prompt_toolkit.output.base', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.pygments', 'prompt_toolkit.styles.style_transformation', 'colorsys', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output.vt100', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.html', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.history', 'prompt_toolkit.search', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.validation', 'prompt_toolkit.input', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.layout', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.controls', 'prompt_toolkit.lexers', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.dummy', 'prompt_toolkit.shortcuts', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.patch_stdout', 'pygments.style', 'IPython.terminal.debugger', 'IPython.core.completer', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'jedi', 'jedi.api', 'parso', 'parso.parser', 'parso.tree', 'parso.utils', 'parso.pgen2', 'parso.pgen2.generator', 'parso.pgen2.grammar_parser', 'parso.python', 'parso.python.tokenize', 'parso.python.token', 'parso.grammar', 'parso._compatibility', 'parso.python.diff', 'difflib', 'parso.python.parser', 'parso.python.tree', 'parso.python.prefix', 'parso.cache', 'gc', 'parso.python.errors', 'parso.normalizer', 'parso.python.pep8', 'parso.file_io', 'jedi._compatibility', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.file_io', 'jedi.api.classes', 'jedi.inference', 'jedi.inference.imports', 'jedi.inference.sys_path', 'jedi.inference.cache', 'jedi.inference.base_value', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.inference.compiled', 'jedi.inference.compiled.value', 'jedi.inference.filters', 'jedi.inference.flow_analysis', 'jedi.inference.recursion', 'jedi.inference.names', 'jedi.inference.docstrings', 'jedi.common', 'jedi.inference.lazy_value', 'jedi.plugins', 'jedi.inference.compiled.access', 'jedi.inference.compiled.getattr_static', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.gradual.typeshed', 'jedi.inference.gradual.stub_value', 'jedi.inference.value', 'jedi.inference.value.module', 'jedi.inference.value.klass', 'jedi.inference.arguments', 'jedi.inference.value.iterable', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.function', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.instance', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.compiled.subprocess', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.inference.syntax_tree', 'jedi.inference.gradual.annotation', 'jedi.inference.param', 'jedi.inference.value.decorator', 'jedi.inference.compiled.mixed', 'jedi.inference.gradual.conversion', 'jedi.api.keywords', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.interpreter', 'jedi.api.completion', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.api.environment', 'filecmp', 'jedi.api.project', 'jedi.inference.references', 'jedi.api.errors', 'jedi.api.refactoring', 'jedi.api.refactoring.extract', 'jedi.inference.gradual.utils', 'jedi.plugins.registry', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'jedi.plugins.django', 'IPython.terminal.ptutils', 'IPython.terminal.shortcuts', 'IPython.terminal.magics', 'IPython.lib.clipboard', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.ipapp', 'IPython.core.magics', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'IPython.core.magics.code', 'urllib.request', 'email', 'http', 'http.client', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'urllib.error', 'urllib.response', '_scproxy', 'IPython.core.magics.config', 'IPython.core.magics.display', 'IPython.core.magics.execution', 'timeit', 'cProfile', '_lsprof', 'profile', 'optparse', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.magics.pylab', 'IPython.core.pylabtools', 'IPython.core.magics.script', 'IPython.lib.backgroundjobs', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.utils.frame', 'jupyter_client', 'jupyter_client._version', 'jupyter_client.connect', 'zmq', 'ctypes', '_ctypes', 'ctypes._endian', 'zmq.backend', 'zmq.backend.select', 'zmq.backend.cython', 'zmq.backend.cython.constants', 'cython_runtime', 'zmq.backend.cython.error', '_cython_0_29_21', 'zmq.backend.cython.message', 'zmq.error', 'zmq.backend.cython.context', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.sugar', 'zmq.sugar.constants', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.context', 'zmq.sugar.attrsettr', 'zmq.sugar.socket', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'jupyter_client.localinterfaces', 'jupyter_core', 'jupyter_core.version', 'jupyter_core.paths', 'jupyter_client.launcher', 'traitlets.log', 'jupyter_client.client', 'jupyter_client.channels', 'jupyter_client.channelsabc', 'jupyter_client.clientabc', 'jupyter_client.manager', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.blocking', 'jupyter_client.blocking.client', 'jupyter_client.blocking.channels', 'jupyter_client.asynchronous', 'jupyter_client.asynchronous.client', 'zmq.asyncio', 'zmq._future', 'jupyter_client.asynchronous.channels', 'jupyter_client.multikernelmanager', 'uuid', 'ctypes.util', 'ctypes.macholib', 'ctypes.macholib.dyld', 'ctypes.macholib.framework', 'ctypes.macholib.dylib', 'ipykernel.kernelapp', 'tornado', 'tornado.ioloop', 'numbers', 'tornado.concurrent', 'tornado.log', 'logging.handlers', 'tornado.escape', 'tornado.util', 'tornado.speedups', 'curses', '_curses', 'zmq.eventloop', 'zmq.eventloop.ioloop', 'tornado.platform', 'tornado.platform.asyncio', 'tornado.gen', 'zmq.eventloop.zmqstream', 'ipykernel.iostream', 'imp', 'jupyter_client.session', 'hmac', 'jupyter_client.jsonutil', 'dateutil', 'dateutil._version', 'dateutil.parser', 'dateutil.parser._parser', 'decimal', '_decimal', 'dateutil.relativedelta', 'dateutil._common', 'dateutil.tz', 'dateutil.tz.tz', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.parser.isoparser', '_strptime', 'jupyter_client.adapter', 'ipykernel.heartbeat', 'ipykernel.ipkernel', 'IPython.utils.tokenutil', 'ipykernel.comm', 'ipykernel.comm.manager', 'ipykernel.comm.comm', 'ipykernel.kernelbase', 'tornado.queues', 'tornado.locks', 'ipykernel.jsonutil', 'ipykernel.zmqshell', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.datapub', 'ipykernel.serialize', 'ipykernel.pickleutil', 'ipykernel.codeutil', 'ipykernel.eventloops', 'distutils', 'distutils.version', 'ipykernel.parentpoller', 'faulthandler', 'IPython.core.completerlib', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'appnope', 'appnope._nope', 'storemagic', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'numpy.core', 'numpy.core.info', 'numpy.core.multiarray', 'numpy.core.overrides', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core._internal', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.shape_base', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.info', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.info', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.utils', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.mixins', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.scimath', 'numpy.lib.polynomial', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft.info', 'numpy.fft.fftpack', 'numpy.fft.fftpack_lite', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random.mtrand', 'mtrand', 'numpy.ctypeslib', 'numpy.core._dtype_ctypes', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.testing', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'numpy.testing._private', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'projects', 'projects.lifting_v2', 'projects.lifting_v2.experiments', 'projects.lifting_v2.experiments.experimentC3', 'projects.lifting_v2.experiments.experimentC3.E1_run', 'mrcfile', 'mrcfile.load_functions', 'mrcfile.bzip2mrcfile', 'mrcfile.mrcfile', 'mrcfile.mrcinterpreter', 'mrcfile.utils', 'mrcfile.constants', 'mrcfile.dtypes', 'mrcfile.mrcobject', 'mrcfile.future_mrcfile', 'mrcfile.gzipmrcfile', 'gzip', 'mrcfile.mrcmemmap', 'mrcfile.validator', 'mrcfile.version', 'scipy', 'scipy._lib', 'scipy._lib._testutils', 'scipy._lib.deprecation', 'scipy._distributor_init', 'scipy.__config__', 'scipy.version', 'scipy._lib._version', 'scipy._lib.six', 'scipy._lib._ccallback', 'scipy._lib._ccallback_c', 'scipy.fft', 'scipy.fft._basic', 'scipy._lib.uarray', 'scipy._lib._uarray', 'scipy._lib._uarray._backend', 'scipy._lib._uarray._uarray', 'scipy.fft._realtransforms', 'scipy.fft._helper', 'scipy.fft._pocketfft', 'scipy.fft._pocketfft.basic', 'scipy.fft._pocketfft.pypocketfft', 'scipy.fft._pocketfft.helper', 'scipy.fft._pocketfft.realtransforms', 'scipy.fft._backend', 'numpy.dual', 'scipy.ndimage', 'scipy.ndimage.filters', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy.ndimage._ni_docstrings', 'scipy._lib.doccer', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', 'scipy.ndimage.measurements', 'scipy.ndimage._ni_label', '_cython_0_29_13', '_ni_label', 'scipy.ndimage.morphology', 'aspire', 'logging.config', 'socketserver', 'importlib_resources', 'importlib_resources._common', 'importlib_resources.abc', 'importlib_resources._compat', 'zipfile', 'zipp', 'importlib_resources._py3', 'aspire.config', 'configparser', 'aspire.exceptions', 'aspire.operators', 'aspire.operators.blk_diag_matrix', 'scipy.linalg', 'scipy.linalg.linalg_version', 'scipy.linalg.misc', 'scipy.linalg.blas', 'scipy.linalg._fblas', 'scipy.linalg.lapack', 'scipy.linalg._flapack', 'scipy._lib._util', 'scipy.linalg.basic', 'scipy.linalg.flinalg', 'scipy.linalg._flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.matfuncs', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg._decomp_update', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._sketches', 'scipy.sparse', 'scipy.sparse.base', 'scipy._lib._numpy_compat', 'scipy.sparse.sputils', 'scipy.sparse.csr', 'scipy.sparse._sparsetools', 'scipy.sparse.compressed', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.csc', 'scipy.sparse.lil', 'scipy.sparse._csparsetools', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'aspire.utils', 'aspire.utils.misc', 'aspire.utils.matrix', 'aspire.utils.matlab_compat', 'aspire.utils.rotation', 'scipy.spatial', 'scipy.spatial.kdtree', 'scipy.spatial.ckdtree', 'scipy.spatial.qhull', 'scipy._lib.messagestream', 'scipy.spatial._spherical_voronoi', 'scipy.spatial._voronoi', 'scipy.spatial._plotutils', 'scipy._lib.decorator', 'scipy.spatial._procrustes', 'scipy.spatial.distance', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.special', 'scipy.special.sf_error', 'scipy.special._ufuncs', 'scipy.special._ufuncs_cxx', 'scipy.special._basic', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm', 'scipy.special._ellip_harm_2', 'scipy.special.lambertw', 'scipy.special._spherical_bessel', 'scipy.spatial.transform', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_groups', 'scipy.constants', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.spatial.transform._rotation_spline', 'aspire.utils.random', 'aspire.utils.types', 'aspire.utils.cell', 'aspire.operators.filters', 'scipy.interpolate', 'scipy.interpolate.interpolate', 'scipy.interpolate.fitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._bsplines', 'scipy.interpolate._bspl', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.rbf', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'aspire.utils.coor_trans', 'aspire.utils.filter_to_fb_mat', 'aspire.basis', 'aspire.basis.basis', 'scipy.sparse.linalg', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.matfuncs', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'aspire.basis.basis_utils', 'aspire.basis.dirac', 'aspire.basis.fb_2d', 'aspire.basis.fb_3d', 'aspire.basis.ffb_2d', 'aspire.image', 'aspire.image.image', 'aspire.volume', 'aspire.nufft', 'aspire.numeric', 'aspire.numeric.numpy', 'aspire.numeric.pyfftw_fft', 'pyfftw', 'pyfftw.pyfftw', 'pyfftw.config', 'pyfftw.builders', 'pyfftw.builders.builders', 'pyfftw.builders._utils', 'pyfftw.interfaces', 'pyfftw.interfaces.numpy_fft', 'pyfftw.interfaces._utils', 'pyfftw.interfaces.cache', 'scipy.fftpack', 'scipy.fftpack.basic', 'scipy.fftpack.helper', 'scipy.fftpack.pseudo_diffs', 'scipy.fftpack.convolve', 'scipy.fftpack.realtransforms', 'pyfftw.interfaces.scipy_fftpack', 'pyfftw.interfaces.scipy_fft', 'pyfftw._version', 'aspire.numeric.base_fft', 'aspire.image.preprocess', 'aspire.basis.ffb_3d', 'aspire.basis.fpswf_2d', 'scipy.optimize', 'scipy.optimize.optimize', 'scipy.optimize.linesearch', 'scipy.optimize.minpack2', 'scipy.optimize._minimize', 'scipy.optimize._trustregion_dogleg', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trlib', 'scipy.optimize._trlib._trlib', 'scipy.optimize._trustregion_exact', 'scipy.optimize._trustregion_constr', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.optimize._differentiable_functions', 'scipy.optimize._numdiff', 'scipy.optimize._group_columns', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._constraints', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize.lbfgsb', 'scipy.optimize._lbfgsb', 'scipy.optimize.tnc', 'scipy.optimize.moduleTNC', 'scipy.optimize.cobyla', 'scipy.optimize._cobyla', 'scipy.optimize.slsqp', 'scipy.optimize._slsqp', 'scipy.optimize._root', 'scipy.optimize.minpack', 'scipy.optimize._minpack', 'scipy.optimize._lsq', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.bvls', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root_scalar', 'scipy.optimize.zeros', 'scipy.optimize._zeros', 'scipy.optimize.nnls', 'scipy.optimize._nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._linprog', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_util', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_simplex', 'scipy.optimize._linprog_rs', 'scipy.optimize._bglu_dense', 'scipy.optimize._lsap', 'scipy.optimize._lsap_module', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.sobol_seq', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._dual_annealing', 'aspire.basis.pswf_2d', 'aspire.basis.pswf_utils', 'aspire.basis.fpswf_3d', 'aspire.basis.pswf_3d', 'aspire.basis.polar_2d', 'aspire.source', 'pandas', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pandas.compat', 'pandas.compat.numpy', 'pandas._libs', 'pandas._libs.tslibs', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.c_timestamp', 'pandas._libs.tslibs.nattype', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.tzconversion', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.ccalendar', 'pandas._config', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.frequencies', 'pandas._libs.tslibs.timestamps', 'pandas._libs.tslibs.resolution', 'pandas._libs.hashtable', 'pandas._libs.missing', 'pandas._libs.lib', 'fractions', 'pandas._libs.tslib', 'pandas.core', 'pandas.core.config_init', 'pandas.core.api', 'pandas.core.arrays', 'pandas.core.arrays.array_', 'pandas.core.dtypes', 'pandas.core.dtypes.common', 'pandas._libs.algos', 'pandas.core.dtypes.dtypes', 'pandas._libs.interval', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.errors', 'pandas.core.dtypes.inference', 'pandas._typing', 'pandas.core.arrays.base', 'pandas.compat.numpy.function', 'pandas.util', 'pandas.util._decorators', 'pandas._libs.properties', 'pandas.core.util', 'pandas.core.util.hashing', 'pandas._libs.hashing', 'pandas.core.dtypes.cast', 'pandas.core.dtypes.missing', 'pandas.util._validators', 'pandas.core.ops', 'pandas._libs.ops', 'pandas.core.common', 'pandas.core.ops.missing', 'pandas.core.ops.roperator', 'pandas.core.ops.docstrings', 'pandas.core.sorting', 'pandas.core.algorithms', 'pandas.core.indexers', 'pandas.core.arrays.categorical', 'pandas.core.accessor', 'pandas.core.base', 'pandas.core.nanops', 'pandas.compat._optional', 'pandas.core.missing', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.datetimelike', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.tseries.offsets', 'dateutil.easter', 'pandas.core.tools', 'pandas.core.tools.datetimes', 'pandas.core.arrays._ranges', 'pandas.core.arrays.integer', 'pandas.core.tools.numeric', 'pandas.core.arrays.interval', 'pandas.core.indexes', 'pandas.core.indexes.base', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.dtypes.concat', 'pandas.core.indexes.frozen', 'pandas.io.formats.printing', 'pandas.core.strings', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.sparse', 'pandas._libs.sparse', 'pandas.core.arrays.timedeltas', 'pandas.core.groupby', 'pandas.core.groupby.generic', 'pandas.core.frame', 'pandas.core.generic', 'pandas.core.index', 'pandas.core.indexes.api', 'pandas.core.indexes.category', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.numeric', 'pandas.core.indexes.interval', 'pandas.util._exceptions', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexing', 'pandas._libs.indexing', 'pandas.core.internals', 'pandas.core.internals.blocks', 'pandas._libs.internals', 'pandas.core.internals.arrays', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.io.formats.format', 'pandas.io.common', 'csv', '_csv', 'mmap', 'pandas.core.internals.construction', 'pandas.core.series', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.plotting', 'pandas.plotting._core', 'pandas.plotting._matplotlib', 'pandas.plotting._matplotlib.boxplot', 'matplotlib', 'matplotlib.cbook', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.animation', 'matplotlib._animation_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'matplotlib._version', 'matplotlib.ft2font', 'kiwisolver']
2023-01-06 09:41:37,534 DEBUG CACHEDIR=/Users/wdiepeveen/.matplotlib
2023-01-06 09:41:37,537 DEBUG Using fontManager instance from /Users/wdiepeveen/.matplotlib/fontlist-v330.json
2023-01-06 09:41:38,160 DEBUG Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2023-01-06 09:41:38,164 DEBUG Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2023-01-06 09:41:39,297 INFO Results folder is /Users/wdiepeveen/Documents/PhD/Projects/2 - Cryo-EM/src/src/Cryo-EM/tools/../results/expC3_23-01-06_09-41-39_SNR16_N2048_J15_r2_s10_i10
2023-01-06 09:41:39,321 INFO Start Experiment
2023-01-06 09:41:39,323 INFO Running Experiment for SNR = 0.0625 and 2048 images
2023-01-06 09:41:39,325 INFO This experiment illustrates orientation refinement using a lifting approach
2023-01-06 09:41:39,337 INFO Load 3D map and downsample 3D map to desired grids of 91 x 91 x 91.
2023-01-06 09:41:39,339 INFO Initialize simulation object and CTF filters.
2023-01-06 09:41:39,446 INFO Use downsampled map to creat simulation object.
2023-01-06 09:41:39,471 INFO Get true rotation angles generated randomly by the simulation object.
2023-01-06 09:41:40,980 DEBUG Corresponding type is already real float64.
2023-01-06 09:41:40,980 DEBUG nufft passed real_type for signal, converting
2023-01-06 09:41:40,985 INFO Trying NFFT backend finufft
2023-01-06 09:41:40,995 INFO NFFT backend finufft usable.
2023-01-06 09:41:40,997 INFO Trying NFFT backend cufinufft
2023-01-06 09:41:41,000 INFO NFFT backend cufinufft not usable:
	No module named 'pycuda'
2023-01-06 09:41:41,001 INFO Trying NFFT backend pynfft
2023-01-06 09:41:41,003 INFO NFFT backend pynfft not usable:
	No module named 'pynfft'
2023-01-06 09:41:41,004 INFO Selected NFFT backend = finufft.
2023-01-06 09:41:55,307 INFO Applying forward transformations in pipeline
2023-01-06 09:41:55,308 INFO All forward transformations applied
2023-01-06 09:41:55,309 INFO Loaded 2048 images
2023-01-06 09:41:57,007 DEBUG Corresponding type is already real float64.
2023-01-06 09:41:57,007 DEBUG nufft passed real_type for signal, converting
2023-01-06 09:42:11,141 INFO Applying forward transformations in pipeline
2023-01-06 09:42:11,142 INFO All forward transformations applied
2023-01-06 09:42:11,142 INFO Loaded 2048 images
2023-01-06 09:42:11,143 INFO Initializing density
2023-01-06 09:42:12,329 INFO Initialising Solver
2023-01-06 09:42:12,330 INFO Update data_discrepancies
2023-01-06 09:42:12,330 INFO Computing \|Ag.u - f_i\|^2
2023-01-06 09:42:13,138 DEBUG Corresponding type is already real float64.
2023-01-06 09:42:13,139 DEBUG nufft passed real_type for signal, converting
2023-01-06 09:42:28,512 INFO Computing data fidelity for 114564 rotations and 2048 images at 0%
2023-01-06 09:42:29,558 DEBUG Corresponding type is already real float64.
2023-01-06 09:42:29,558 DEBUG nufft passed real_type for signal, converting
2023-01-06 09:42:44,910 INFO Computing data fidelity for 114564 rotations and 2048 images at 1%
2023-01-06 09:42:45,694 DEBUG Corresponding type is already real float64.
2023-01-06 09:42:45,694 DEBUG nufft passed real_type for signal, converting
2023-01-06 09:42:58,963 INFO Computing data fidelity for 114564 rotations and 2048 images at 2%
2023-01-06 09:42:59,681 DEBUG Corresponding type is already real float64.
2023-01-06 09:42:59,681 DEBUG nufft passed real_type for signal, converting
2023-01-06 09:43:13,167 INFO Computing data fidelity for 114564 rotations and 2048 images at 3%
2023-01-06 09:43:13,978 DEBUG Corresponding type is already real float64.
2023-01-06 09:43:13,978 DEBUG nufft passed real_type for signal, converting
2023-01-06 09:43:27,851 INFO Computing data fidelity for 114564 rotations and 2048 images at 4%
2023-01-06 09:43:28,583 DEBUG Corresponding type is already real float64.
2023-01-06 09:43:28,583 DEBUG nufft passed real_type for signal, converting
2023-01-06 09:43:41,764 INFO Computing data fidelity for 114564 rotations and 2048 images at 5%
2023-01-06 09:43:42,483 DEBUG Corresponding type is already real float64.
2023-01-06 09:43:42,483 DEBUG nufft passed real_type for signal, converting
2023-01-06 09:43:55,584 INFO Computing data fidelity for 114564 rotations and 2048 images at 6%
2023-01-06 09:43:56,303 DEBUG Corresponding type is already real float64.
2023-01-06 09:43:56,303 DEBUG nufft passed real_type for signal, converting
2023-01-06 09:44:09,868 INFO Computing data fidelity for 114564 rotations and 2048 images at 7%
2023-01-06 09:44:10,588 DEBUG Corresponding type is already real float64.
2023-01-06 09:44:10,588 DEBUG nufft passed real_type for signal, converting
2023-01-06 09:44:23,949 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2023-01-06 09:44:24,727 DEBUG Corresponding type is already real float64.
2023-01-06 09:44:24,727 DEBUG nufft passed real_type for signal, converting
2023-01-06 09:44:39,922 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2023-01-06 09:44:40,685 DEBUG Corresponding type is already real float64.
2023-01-06 09:44:40,685 DEBUG nufft passed real_type for signal, converting
2023-01-06 09:44:54,247 INFO Computing data fidelity for 114564 rotations and 2048 images at 9%
2023-01-06 09:44:54,967 DEBUG Corresponding type is already real float64.
2023-01-06 09:44:54,967 DEBUG nufft passed real_type for signal, converting
2023-01-06 09:45:08,274 INFO Computing data fidelity for 114564 rotations and 2048 images at 10%
2023-01-06 09:45:09,127 DEBUG Corresponding type is already real float64.
2023-01-06 09:45:09,127 DEBUG nufft passed real_type for signal, converting
2023-01-06 09:45:24,727 INFO Computing data fidelity for 114564 rotations and 2048 images at 11%
2023-01-06 09:45:25,636 DEBUG Corresponding type is already real float64.
2023-01-06 09:45:25,636 DEBUG nufft passed real_type for signal, converting
2023-01-06 09:45:40,984 INFO Computing data fidelity for 114564 rotations and 2048 images at 12%
2023-01-06 09:45:41,812 DEBUG Corresponding type is already real float64.
2023-01-06 09:45:41,812 DEBUG nufft passed real_type for signal, converting
2023-01-06 09:45:55,927 INFO Computing data fidelity for 114564 rotations and 2048 images at 13%
2023-01-06 09:45:56,757 DEBUG Corresponding type is already real float64.
2023-01-06 09:45:56,757 DEBUG nufft passed real_type for signal, converting
2023-01-06 09:46:10,968 INFO Computing data fidelity for 114564 rotations and 2048 images at 14%
2023-01-06 09:46:11,684 DEBUG Corresponding type is already real float64.
2023-01-06 09:46:11,684 DEBUG nufft passed real_type for signal, converting
2023-01-06 09:46:25,739 INFO Computing data fidelity for 114564 rotations and 2048 images at 15%
2023-01-06 09:46:26,470 DEBUG Corresponding type is already real float64.
2023-01-06 09:46:26,470 DEBUG nufft passed real_type for signal, converting
2023-01-06 09:46:40,150 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2023-01-06 09:46:40,958 DEBUG Corresponding type is already real float64.
2023-01-06 09:46:40,958 DEBUG nufft passed real_type for signal, converting
2023-01-06 09:46:55,690 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2023-01-06 09:46:56,477 DEBUG Corresponding type is already real float64.
2023-01-06 09:46:56,478 DEBUG nufft passed real_type for signal, converting
2023-01-06 09:47:11,281 INFO Computing data fidelity for 114564 rotations and 2048 images at 17%
2023-01-06 09:47:12,061 DEBUG Corresponding type is already real float64.
2023-01-06 09:47:12,061 DEBUG nufft passed real_type for signal, converting
2023-01-06 09:47:26,299 INFO Computing data fidelity for 114564 rotations and 2048 images at 18%
2023-01-06 09:47:27,068 DEBUG Corresponding type is already real float64.
2023-01-06 09:47:27,068 DEBUG nufft passed real_type for signal, converting
2023-01-06 09:47:40,840 INFO Computing data fidelity for 114564 rotations and 2048 images at 19%
2023-01-06 09:47:41,574 DEBUG Corresponding type is already real float64.
2023-01-06 09:47:41,575 DEBUG nufft passed real_type for signal, converting
2023-01-06 09:47:56,053 INFO Computing data fidelity for 114564 rotations and 2048 images at 20%
2023-01-06 09:47:56,796 DEBUG Corresponding type is already real float64.
2023-01-06 09:47:56,796 DEBUG nufft passed real_type for signal, converting
2023-01-06 09:48:10,791 INFO Computing data fidelity for 114564 rotations and 2048 images at 21%
2023-01-06 09:48:11,631 DEBUG Corresponding type is already real float64.
2023-01-06 09:48:11,631 DEBUG nufft passed real_type for signal, converting
2023-01-06 09:48:26,359 INFO Computing data fidelity for 114564 rotations and 2048 images at 22%
2023-01-06 09:48:27,097 DEBUG Corresponding type is already real float64.
2023-01-06 09:48:27,097 DEBUG nufft passed real_type for signal, converting
2023-01-06 09:48:41,935 INFO Computing data fidelity for 114564 rotations and 2048 images at 23%
2023-01-06 09:48:42,688 DEBUG Corresponding type is already real float64.
2023-01-06 09:48:42,688 DEBUG nufft passed real_type for signal, converting
2023-01-06 09:48:56,210 INFO Computing data fidelity for 114564 rotations and 2048 images at 24%
2023-01-06 09:48:56,944 DEBUG Corresponding type is already real float64.
2023-01-06 09:48:56,944 DEBUG nufft passed real_type for signal, converting
2023-01-06 09:49:10,304 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2023-01-06 09:49:11,029 DEBUG Corresponding type is already real float64.
2023-01-06 09:49:11,029 DEBUG nufft passed real_type for signal, converting
2023-01-06 09:49:25,152 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2023-01-06 09:49:25,967 DEBUG Corresponding type is already real float64.
2023-01-06 09:49:25,967 DEBUG nufft passed real_type for signal, converting
2023-01-06 09:49:39,670 INFO Computing data fidelity for 114564 rotations and 2048 images at 26%
2023-01-06 09:49:40,418 DEBUG Corresponding type is already real float64.
2023-01-06 09:49:40,418 DEBUG nufft passed real_type for signal, converting
2023-01-06 09:49:55,175 INFO Computing data fidelity for 114564 rotations and 2048 images at 27%
2023-01-06 09:49:55,986 DEBUG Corresponding type is already real float64.
2023-01-06 09:49:55,987 DEBUG nufft passed real_type for signal, converting
2023-01-06 09:50:10,132 INFO Computing data fidelity for 114564 rotations and 2048 images at 28%
2023-01-06 09:50:10,938 DEBUG Corresponding type is already real float64.
2023-01-06 09:50:10,938 DEBUG nufft passed real_type for signal, converting
2023-01-06 09:50:25,471 INFO Computing data fidelity for 114564 rotations and 2048 images at 29%
2023-01-06 09:50:26,247 DEBUG Corresponding type is already real float64.
2023-01-06 09:50:26,247 DEBUG nufft passed real_type for signal, converting
2023-01-06 09:50:40,847 INFO Computing data fidelity for 114564 rotations and 2048 images at 30%
2023-01-06 09:50:41,626 DEBUG Corresponding type is already real float64.
2023-01-06 09:50:41,626 DEBUG nufft passed real_type for signal, converting
2023-01-06 09:50:55,607 INFO Computing data fidelity for 114564 rotations and 2048 images at 31%
2023-01-06 09:50:56,389 DEBUG Corresponding type is already real float64.
2023-01-06 09:50:56,389 DEBUG nufft passed real_type for signal, converting
2023-01-06 09:51:10,314 INFO Computing data fidelity for 114564 rotations and 2048 images at 32%
2023-01-06 09:51:11,066 DEBUG Corresponding type is already real float64.
2023-01-06 09:51:11,066 DEBUG nufft passed real_type for signal, converting
2023-01-06 09:51:25,484 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2023-01-06 09:51:26,216 DEBUG Corresponding type is already real float64.
2023-01-06 09:51:26,216 DEBUG nufft passed real_type for signal, converting
2023-01-06 09:51:39,762 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2023-01-06 09:51:40,508 DEBUG Corresponding type is already real float64.
2023-01-06 09:51:40,508 DEBUG nufft passed real_type for signal, converting
2023-01-06 09:51:53,729 INFO Computing data fidelity for 114564 rotations and 2048 images at 34%
2023-01-06 09:51:54,466 DEBUG Corresponding type is already real float64.
2023-01-06 09:51:54,466 DEBUG nufft passed real_type for signal, converting
2023-01-06 09:52:07,635 INFO Computing data fidelity for 114564 rotations and 2048 images at 35%
2023-01-06 09:52:08,389 DEBUG Corresponding type is already real float64.
2023-01-06 09:52:08,389 DEBUG nufft passed real_type for signal, converting
2023-01-06 09:52:22,686 INFO Computing data fidelity for 114564 rotations and 2048 images at 36%
2023-01-06 09:52:23,415 DEBUG Corresponding type is already real float64.
2023-01-06 09:52:23,415 DEBUG nufft passed real_type for signal, converting
2023-01-06 09:52:36,636 INFO Computing data fidelity for 114564 rotations and 2048 images at 37%
2023-01-06 09:52:37,364 DEBUG Corresponding type is already real float64.
2023-01-06 09:52:37,364 DEBUG nufft passed real_type for signal, converting
2023-01-06 09:52:50,863 INFO Computing data fidelity for 114564 rotations and 2048 images at 38%
2023-01-06 09:52:51,636 DEBUG Corresponding type is already real float64.
2023-01-06 09:52:51,636 DEBUG nufft passed real_type for signal, converting
2023-01-06 09:53:04,717 INFO Computing data fidelity for 114564 rotations and 2048 images at 39%
2023-01-06 09:53:05,451 DEBUG Corresponding type is already real float64.
2023-01-06 09:53:05,451 DEBUG nufft passed real_type for signal, converting
2023-01-06 09:53:18,542 INFO Computing data fidelity for 114564 rotations and 2048 images at 40%
2023-01-06 09:53:19,268 DEBUG Corresponding type is already real float64.
2023-01-06 09:53:19,268 DEBUG nufft passed real_type for signal, converting
2023-01-06 09:53:32,313 INFO Computing data fidelity for 114564 rotations and 2048 images at 41%
2023-01-06 09:53:33,053 DEBUG Corresponding type is already real float64.
2023-01-06 09:53:33,053 DEBUG nufft passed real_type for signal, converting
2023-01-06 09:53:46,230 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2023-01-06 09:53:46,960 DEBUG Corresponding type is already real float64.
2023-01-06 09:53:46,960 DEBUG nufft passed real_type for signal, converting
2023-01-06 09:54:00,037 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2023-01-06 09:54:00,772 DEBUG Corresponding type is already real float64.
2023-01-06 09:54:00,772 DEBUG nufft passed real_type for signal, converting
2023-01-06 09:54:13,946 INFO Computing data fidelity for 114564 rotations and 2048 images at 43%
2023-01-06 09:54:14,683 DEBUG Corresponding type is already real float64.
2023-01-06 09:54:14,684 DEBUG nufft passed real_type for signal, converting
2023-01-06 09:54:27,746 INFO Computing data fidelity for 114564 rotations and 2048 images at 44%
2023-01-06 09:54:28,477 DEBUG Corresponding type is already real float64.
2023-01-06 09:54:28,477 DEBUG nufft passed real_type for signal, converting
2023-01-06 09:54:42,487 INFO Computing data fidelity for 114564 rotations and 2048 images at 45%
2023-01-06 09:54:43,344 DEBUG Corresponding type is already real float64.
2023-01-06 09:54:43,344 DEBUG nufft passed real_type for signal, converting
2023-01-06 09:54:57,289 INFO Computing data fidelity for 114564 rotations and 2048 images at 46%
2023-01-06 09:54:58,084 DEBUG Corresponding type is already real float64.
2023-01-06 09:54:58,084 DEBUG nufft passed real_type for signal, converting
2023-01-06 09:55:12,792 INFO Computing data fidelity for 114564 rotations and 2048 images at 47%
2023-01-06 09:55:13,559 DEBUG Corresponding type is already real float64.
2023-01-06 09:55:13,559 DEBUG nufft passed real_type for signal, converting
2023-01-06 09:55:28,649 INFO Computing data fidelity for 114564 rotations and 2048 images at 48%
2023-01-06 09:55:29,462 DEBUG Corresponding type is already real float64.
2023-01-06 09:55:29,462 DEBUG nufft passed real_type for signal, converting
2023-01-06 09:55:44,039 INFO Computing data fidelity for 114564 rotations and 2048 images at 49%
2023-01-06 09:55:44,800 DEBUG Corresponding type is already real float64.
2023-01-06 09:55:44,800 DEBUG nufft passed real_type for signal, converting
2023-01-06 09:55:58,423 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2023-01-06 09:55:59,208 DEBUG Corresponding type is already real float64.
2023-01-06 09:55:59,208 DEBUG nufft passed real_type for signal, converting
2023-01-06 09:56:13,495 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2023-01-06 09:56:14,339 DEBUG Corresponding type is already real float64.
2023-01-06 09:56:14,339 DEBUG nufft passed real_type for signal, converting
2023-01-06 09:56:28,120 INFO Computing data fidelity for 114564 rotations and 2048 images at 51%
2023-01-06 09:56:28,856 DEBUG Corresponding type is already real float64.
2023-01-06 09:56:28,856 DEBUG nufft passed real_type for signal, converting
2023-01-06 09:56:42,277 INFO Computing data fidelity for 114564 rotations and 2048 images at 52%
2023-01-06 09:56:43,013 DEBUG Corresponding type is already real float64.
2023-01-06 09:56:43,013 DEBUG nufft passed real_type for signal, converting
2023-01-06 09:56:57,490 INFO Computing data fidelity for 114564 rotations and 2048 images at 53%
2023-01-06 09:56:58,352 DEBUG Corresponding type is already real float64.
2023-01-06 09:56:58,353 DEBUG nufft passed real_type for signal, converting
2023-01-06 09:57:13,076 INFO Computing data fidelity for 114564 rotations and 2048 images at 54%
2023-01-06 09:57:13,810 DEBUG Corresponding type is already real float64.
2023-01-06 09:57:13,810 DEBUG nufft passed real_type for signal, converting
2023-01-06 09:57:27,989 INFO Computing data fidelity for 114564 rotations and 2048 images at 55%
2023-01-06 09:57:28,828 DEBUG Corresponding type is already real float64.
2023-01-06 09:57:28,828 DEBUG nufft passed real_type for signal, converting
2023-01-06 09:57:43,231 INFO Computing data fidelity for 114564 rotations and 2048 images at 56%
2023-01-06 09:57:43,984 DEBUG Corresponding type is already real float64.
2023-01-06 09:57:43,984 DEBUG nufft passed real_type for signal, converting
2023-01-06 09:57:58,589 INFO Computing data fidelity for 114564 rotations and 2048 images at 57%
2023-01-06 09:57:59,424 DEBUG Corresponding type is already real float64.
2023-01-06 09:57:59,424 DEBUG nufft passed real_type for signal, converting
2023-01-06 09:58:13,959 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2023-01-06 09:58:14,765 DEBUG Corresponding type is already real float64.
2023-01-06 09:58:14,765 DEBUG nufft passed real_type for signal, converting
2023-01-06 09:58:29,460 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2023-01-06 09:58:30,204 DEBUG Corresponding type is already real float64.
2023-01-06 09:58:30,204 DEBUG nufft passed real_type for signal, converting
2023-01-06 09:58:44,659 INFO Computing data fidelity for 114564 rotations and 2048 images at 59%
2023-01-06 09:58:45,419 DEBUG Corresponding type is already real float64.
2023-01-06 09:58:45,419 DEBUG nufft passed real_type for signal, converting
2023-01-06 09:58:58,830 INFO Computing data fidelity for 114564 rotations and 2048 images at 60%
2023-01-06 09:58:59,573 DEBUG Corresponding type is already real float64.
2023-01-06 09:58:59,573 DEBUG nufft passed real_type for signal, converting
2023-01-06 09:59:13,501 INFO Computing data fidelity for 114564 rotations and 2048 images at 61%
2023-01-06 09:59:14,328 DEBUG Corresponding type is already real float64.
2023-01-06 09:59:14,328 DEBUG nufft passed real_type for signal, converting
2023-01-06 09:59:28,573 INFO Computing data fidelity for 114564 rotations and 2048 images at 62%
2023-01-06 09:59:29,368 DEBUG Corresponding type is already real float64.
2023-01-06 09:59:29,368 DEBUG nufft passed real_type for signal, converting
2023-01-06 09:59:43,692 INFO Computing data fidelity for 114564 rotations and 2048 images at 63%
2023-01-06 09:59:44,433 DEBUG Corresponding type is already real float64.
2023-01-06 09:59:44,433 DEBUG nufft passed real_type for signal, converting
2023-01-06 09:59:58,955 INFO Computing data fidelity for 114564 rotations and 2048 images at 64%
2023-01-06 09:59:59,706 DEBUG Corresponding type is already real float64.
2023-01-06 09:59:59,706 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:00:14,836 INFO Computing data fidelity for 114564 rotations and 2048 images at 65%
2023-01-06 10:00:15,586 DEBUG Corresponding type is already real float64.
2023-01-06 10:00:15,586 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:00:29,114 INFO Computing data fidelity for 114564 rotations and 2048 images at 66%
2023-01-06 10:00:29,870 DEBUG Corresponding type is already real float64.
2023-01-06 10:00:29,871 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:00:43,435 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2023-01-06 10:00:44,170 DEBUG Corresponding type is already real float64.
2023-01-06 10:00:44,170 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:00:57,918 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2023-01-06 10:00:58,750 DEBUG Corresponding type is already real float64.
2023-01-06 10:00:58,750 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:01:12,588 INFO Computing data fidelity for 114564 rotations and 2048 images at 68%
2023-01-06 10:01:13,333 DEBUG Corresponding type is already real float64.
2023-01-06 10:01:13,333 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:01:27,630 INFO Computing data fidelity for 114564 rotations and 2048 images at 69%
2023-01-06 10:01:28,365 DEBUG Corresponding type is already real float64.
2023-01-06 10:01:28,365 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:01:42,434 INFO Computing data fidelity for 114564 rotations and 2048 images at 70%
2023-01-06 10:01:43,177 DEBUG Corresponding type is already real float64.
2023-01-06 10:01:43,177 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:01:57,080 INFO Computing data fidelity for 114564 rotations and 2048 images at 71%
2023-01-06 10:01:57,832 DEBUG Corresponding type is already real float64.
2023-01-06 10:01:57,832 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:02:11,403 INFO Computing data fidelity for 114564 rotations and 2048 images at 72%
2023-01-06 10:02:12,155 DEBUG Corresponding type is already real float64.
2023-01-06 10:02:12,155 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:02:26,186 INFO Computing data fidelity for 114564 rotations and 2048 images at 73%
2023-01-06 10:02:27,022 DEBUG Corresponding type is already real float64.
2023-01-06 10:02:27,022 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:02:41,111 INFO Computing data fidelity for 114564 rotations and 2048 images at 74%
2023-01-06 10:02:41,863 DEBUG Corresponding type is already real float64.
2023-01-06 10:02:41,863 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:02:55,696 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2023-01-06 10:02:56,500 DEBUG Corresponding type is already real float64.
2023-01-06 10:02:56,500 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:03:10,636 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2023-01-06 10:03:11,454 DEBUG Corresponding type is already real float64.
2023-01-06 10:03:11,455 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:03:25,696 INFO Computing data fidelity for 114564 rotations and 2048 images at 76%
2023-01-06 10:03:26,442 DEBUG Corresponding type is already real float64.
2023-01-06 10:03:26,442 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:03:41,136 INFO Computing data fidelity for 114564 rotations and 2048 images at 77%
2023-01-06 10:03:41,966 DEBUG Corresponding type is already real float64.
2023-01-06 10:03:41,967 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:03:56,522 INFO Computing data fidelity for 114564 rotations and 2048 images at 78%
2023-01-06 10:03:57,362 DEBUG Corresponding type is already real float64.
2023-01-06 10:03:57,362 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:04:11,757 INFO Computing data fidelity for 114564 rotations and 2048 images at 79%
2023-01-06 10:04:12,592 DEBUG Corresponding type is already real float64.
2023-01-06 10:04:12,592 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:04:26,666 INFO Computing data fidelity for 114564 rotations and 2048 images at 80%
2023-01-06 10:04:27,455 DEBUG Corresponding type is already real float64.
2023-01-06 10:04:27,455 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:04:41,741 INFO Computing data fidelity for 114564 rotations and 2048 images at 81%
2023-01-06 10:04:42,512 DEBUG Corresponding type is already real float64.
2023-01-06 10:04:42,512 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:04:56,336 INFO Computing data fidelity for 114564 rotations and 2048 images at 82%
2023-01-06 10:04:57,079 DEBUG Corresponding type is already real float64.
2023-01-06 10:04:57,079 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:05:12,115 INFO Computing data fidelity for 114564 rotations and 2048 images at 83%
2023-01-06 10:05:12,899 DEBUG Corresponding type is already real float64.
2023-01-06 10:05:12,900 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:05:28,249 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2023-01-06 10:05:29,002 DEBUG Corresponding type is already real float64.
2023-01-06 10:05:29,002 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:05:43,138 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2023-01-06 10:05:43,897 DEBUG Corresponding type is already real float64.
2023-01-06 10:05:43,898 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:05:57,449 INFO Computing data fidelity for 114564 rotations and 2048 images at 85%
2023-01-06 10:05:58,188 DEBUG Corresponding type is already real float64.
2023-01-06 10:05:58,188 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:06:11,770 INFO Computing data fidelity for 114564 rotations and 2048 images at 86%
2023-01-06 10:06:12,553 DEBUG Corresponding type is already real float64.
2023-01-06 10:06:12,553 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:06:26,747 INFO Computing data fidelity for 114564 rotations and 2048 images at 87%
2023-01-06 10:06:27,509 DEBUG Corresponding type is already real float64.
2023-01-06 10:06:27,509 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:06:42,058 INFO Computing data fidelity for 114564 rotations and 2048 images at 88%
2023-01-06 10:06:42,901 DEBUG Corresponding type is already real float64.
2023-01-06 10:06:42,901 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:06:56,055 INFO Computing data fidelity for 114564 rotations and 2048 images at 89%
2023-01-06 10:06:56,784 DEBUG Corresponding type is already real float64.
2023-01-06 10:06:56,784 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:07:10,183 INFO Computing data fidelity for 114564 rotations and 2048 images at 90%
2023-01-06 10:07:10,960 DEBUG Corresponding type is already real float64.
2023-01-06 10:07:10,960 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:07:24,272 INFO Computing data fidelity for 114564 rotations and 2048 images at 91%
2023-01-06 10:07:24,987 DEBUG Corresponding type is already real float64.
2023-01-06 10:07:24,988 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:07:39,001 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2023-01-06 10:07:39,869 DEBUG Corresponding type is already real float64.
2023-01-06 10:07:39,869 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:07:54,296 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2023-01-06 10:07:55,048 DEBUG Corresponding type is already real float64.
2023-01-06 10:07:55,049 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:08:09,429 INFO Computing data fidelity for 114564 rotations and 2048 images at 93%
2023-01-06 10:08:10,165 DEBUG Corresponding type is already real float64.
2023-01-06 10:08:10,165 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:08:23,611 INFO Computing data fidelity for 114564 rotations and 2048 images at 94%
2023-01-06 10:08:24,345 DEBUG Corresponding type is already real float64.
2023-01-06 10:08:24,345 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:08:38,474 INFO Computing data fidelity for 114564 rotations and 2048 images at 95%
2023-01-06 10:08:39,277 DEBUG Corresponding type is already real float64.
2023-01-06 10:08:39,277 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:08:52,899 INFO Computing data fidelity for 114564 rotations and 2048 images at 96%
2023-01-06 10:08:53,666 DEBUG Corresponding type is already real float64.
2023-01-06 10:08:53,666 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:09:08,109 INFO Computing data fidelity for 114564 rotations and 2048 images at 97%
2023-01-06 10:09:08,911 DEBUG Corresponding type is already real float64.
2023-01-06 10:09:08,911 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:09:22,796 INFO Computing data fidelity for 114564 rotations and 2048 images at 98%
2023-01-06 10:09:23,650 DEBUG Corresponding type is already real float64.
2023-01-06 10:09:23,650 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:09:37,950 INFO Computing data fidelity for 114564 rotations and 2048 images at 99%
2023-01-06 10:09:38,408 DEBUG Corresponding type is already real float64.
2023-01-06 10:09:38,408 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:09:50,920 INFO Computing data fidelity for 114564 rotations and 2048 images at 100%
2023-01-06 10:09:53,430 INFO Do lambda update step
2023-01-06 10:10:20,883 INFO Do rots update step
2023-01-06 10:10:23,256 INFO Projecting 2048 vectors onto 114564-simplex at 2%
2023-01-06 10:10:23,853 INFO Projecting 2048 vectors onto 114564-simplex at 4%
2023-01-06 10:10:24,450 INFO Projecting 2048 vectors onto 114564-simplex at 7%
2023-01-06 10:10:25,043 INFO Projecting 2048 vectors onto 114564-simplex at 9%
2023-01-06 10:10:25,626 INFO Projecting 2048 vectors onto 114564-simplex at 12%
2023-01-06 10:10:26,222 INFO Projecting 2048 vectors onto 114564-simplex at 14%
2023-01-06 10:10:26,812 INFO Projecting 2048 vectors onto 114564-simplex at 17%
2023-01-06 10:10:27,400 INFO Projecting 2048 vectors onto 114564-simplex at 19%
2023-01-06 10:10:27,992 INFO Projecting 2048 vectors onto 114564-simplex at 21%
2023-01-06 10:10:28,591 INFO Projecting 2048 vectors onto 114564-simplex at 24%
2023-01-06 10:10:29,476 INFO Projecting 2048 vectors onto 114564-simplex at 26%
2023-01-06 10:10:30,075 INFO Projecting 2048 vectors onto 114564-simplex at 29%
2023-01-06 10:10:30,753 INFO Projecting 2048 vectors onto 114564-simplex at 31%
2023-01-06 10:10:31,384 INFO Projecting 2048 vectors onto 114564-simplex at 34%
2023-01-06 10:10:32,015 INFO Projecting 2048 vectors onto 114564-simplex at 36%
2023-01-06 10:10:32,642 INFO Projecting 2048 vectors onto 114564-simplex at 39%
2023-01-06 10:10:33,305 INFO Projecting 2048 vectors onto 114564-simplex at 41%
2023-01-06 10:10:33,979 INFO Projecting 2048 vectors onto 114564-simplex at 43%
2023-01-06 10:10:34,626 INFO Projecting 2048 vectors onto 114564-simplex at 46%
2023-01-06 10:10:35,264 INFO Projecting 2048 vectors onto 114564-simplex at 48%
2023-01-06 10:10:36,302 INFO Projecting 2048 vectors onto 114564-simplex at 51%
2023-01-06 10:10:36,982 INFO Projecting 2048 vectors onto 114564-simplex at 53%
2023-01-06 10:10:37,599 INFO Projecting 2048 vectors onto 114564-simplex at 56%
2023-01-06 10:10:38,231 INFO Projecting 2048 vectors onto 114564-simplex at 58%
2023-01-06 10:10:38,864 INFO Projecting 2048 vectors onto 114564-simplex at 61%
2023-01-06 10:10:39,482 INFO Projecting 2048 vectors onto 114564-simplex at 63%
2023-01-06 10:10:40,085 INFO Projecting 2048 vectors onto 114564-simplex at 65%
2023-01-06 10:10:40,726 INFO Projecting 2048 vectors onto 114564-simplex at 68%
2023-01-06 10:10:41,400 INFO Projecting 2048 vectors onto 114564-simplex at 70%
2023-01-06 10:10:42,036 INFO Projecting 2048 vectors onto 114564-simplex at 73%
2023-01-06 10:10:43,080 INFO Projecting 2048 vectors onto 114564-simplex at 75%
2023-01-06 10:10:43,702 INFO Projecting 2048 vectors onto 114564-simplex at 78%
2023-01-06 10:10:44,331 INFO Projecting 2048 vectors onto 114564-simplex at 80%
2023-01-06 10:10:45,003 INFO Projecting 2048 vectors onto 114564-simplex at 83%
2023-01-06 10:10:45,625 INFO Projecting 2048 vectors onto 114564-simplex at 85%
2023-01-06 10:10:46,271 INFO Projecting 2048 vectors onto 114564-simplex at 87%
2023-01-06 10:10:46,956 INFO Projecting 2048 vectors onto 114564-simplex at 90%
2023-01-06 10:10:47,622 INFO Projecting 2048 vectors onto 114564-simplex at 92%
2023-01-06 10:10:48,233 INFO Projecting 2048 vectors onto 114564-simplex at 95%
2023-01-06 10:10:48,902 INFO Projecting 2048 vectors onto 114564-simplex at 97%
2023-01-06 10:10:49,560 INFO Projecting 2048 vectors onto 114564-simplex at 100%
2023-01-06 10:10:51,002 INFO Computing 50 means of 15457 points in at most 20 steps...
2023-01-06 10:10:52,994 INFO Computing 2048 means at 2%
2023-01-06 10:10:53,073 INFO Computing 50 means of 15242 points in at most 20 steps...
2023-01-06 10:10:54,750 INFO Computing 2048 means at 4%
2023-01-06 10:10:54,831 INFO Computing 50 means of 15187 points in at most 20 steps...
2023-01-06 10:10:56,558 INFO Computing 2048 means at 7%
2023-01-06 10:10:56,638 INFO Computing 50 means of 13720 points in at most 20 steps...
2023-01-06 10:10:58,240 INFO Computing 2048 means at 9%
2023-01-06 10:10:58,341 INFO Computing 50 means of 14038 points in at most 20 steps...
2023-01-06 10:10:59,875 INFO Computing 2048 means at 12%
2023-01-06 10:10:59,952 INFO Computing 50 means of 15370 points in at most 20 steps...
2023-01-06 10:11:01,637 INFO Computing 2048 means at 14%
2023-01-06 10:11:01,715 INFO Computing 50 means of 15450 points in at most 20 steps...
2023-01-06 10:11:03,420 INFO Computing 2048 means at 17%
2023-01-06 10:11:03,498 INFO Computing 50 means of 15112 points in at most 20 steps...
2023-01-06 10:11:05,149 INFO Computing 2048 means at 19%
2023-01-06 10:11:05,227 INFO Computing 50 means of 14631 points in at most 20 steps...
2023-01-06 10:11:06,862 INFO Computing 2048 means at 21%
2023-01-06 10:11:06,942 INFO Computing 50 means of 15284 points in at most 20 steps...
2023-01-06 10:11:08,607 INFO Computing 2048 means at 24%
2023-01-06 10:11:08,692 INFO Computing 50 means of 14298 points in at most 20 steps...
2023-01-06 10:11:10,232 INFO Computing 2048 means at 26%
2023-01-06 10:11:10,317 INFO Computing 50 means of 16017 points in at most 20 steps...
2023-01-06 10:11:12,296 INFO Computing 2048 means at 29%
2023-01-06 10:11:12,375 INFO Computing 50 means of 15378 points in at most 20 steps...
2023-01-06 10:11:14,257 INFO Computing 2048 means at 31%
2023-01-06 10:11:14,341 INFO Computing 50 means of 14548 points in at most 20 steps...
2023-01-06 10:11:16,041 INFO Computing 2048 means at 34%
2023-01-06 10:11:16,129 INFO Computing 50 means of 15485 points in at most 20 steps...
2023-01-06 10:11:17,930 INFO Computing 2048 means at 36%
2023-01-06 10:11:18,013 INFO Computing 50 means of 13231 points in at most 20 steps...
2023-01-06 10:11:19,665 INFO Computing 2048 means at 39%
2023-01-06 10:11:19,750 INFO Computing 50 means of 15212 points in at most 20 steps...
2023-01-06 10:11:21,451 INFO Computing 2048 means at 41%
2023-01-06 10:11:21,529 INFO Computing 50 means of 14635 points in at most 20 steps...
2023-01-06 10:11:23,132 INFO Computing 2048 means at 43%
2023-01-06 10:11:23,216 INFO Computing 50 means of 15435 points in at most 20 steps...
2023-01-06 10:11:25,088 INFO Computing 2048 means at 46%
2023-01-06 10:11:25,172 INFO Computing 50 means of 14535 points in at most 20 steps...
2023-01-06 10:11:26,819 INFO Computing 2048 means at 48%
2023-01-06 10:11:26,906 INFO Computing 50 means of 15265 points in at most 20 steps...
2023-01-06 10:11:28,787 INFO Computing 2048 means at 51%
2023-01-06 10:11:28,873 INFO Computing 50 means of 15055 points in at most 20 steps...
2023-01-06 10:11:30,691 INFO Computing 2048 means at 53%
2023-01-06 10:11:30,773 INFO Computing 50 means of 14886 points in at most 20 steps...
2023-01-06 10:11:32,626 INFO Computing 2048 means at 56%
2023-01-06 10:11:32,712 INFO Computing 50 means of 14248 points in at most 20 steps...
2023-01-06 10:11:34,399 INFO Computing 2048 means at 58%
2023-01-06 10:11:34,477 INFO Computing 50 means of 14661 points in at most 20 steps...
2023-01-06 10:11:36,140 INFO Computing 2048 means at 61%
2023-01-06 10:11:36,221 INFO Computing 50 means of 13985 points in at most 20 steps...
2023-01-06 10:11:37,805 INFO Computing 2048 means at 63%
2023-01-06 10:11:37,889 INFO Computing 50 means of 16614 points in at most 20 steps...
2023-01-06 10:11:39,744 INFO Computing 2048 means at 65%
2023-01-06 10:11:39,824 INFO Computing 50 means of 15997 points in at most 20 steps...
2023-01-06 10:11:41,586 INFO Computing 2048 means at 68%
2023-01-06 10:11:41,667 INFO Computing 50 means of 15125 points in at most 20 steps...
2023-01-06 10:11:43,330 INFO Computing 2048 means at 70%
2023-01-06 10:11:43,415 INFO Computing 50 means of 15066 points in at most 20 steps...
2023-01-06 10:11:45,275 INFO Computing 2048 means at 73%
2023-01-06 10:11:45,376 INFO Computing 50 means of 15467 points in at most 20 steps...
2023-01-06 10:11:47,204 INFO Computing 2048 means at 75%
2023-01-06 10:11:47,287 INFO Computing 50 means of 15061 points in at most 20 steps...
2023-01-06 10:11:48,967 INFO Computing 2048 means at 78%
2023-01-06 10:11:49,050 INFO Computing 50 means of 14315 points in at most 20 steps...
2023-01-06 10:11:50,646 INFO Computing 2048 means at 80%
2023-01-06 10:11:50,724 INFO Computing 50 means of 15825 points in at most 20 steps...
2023-01-06 10:11:52,502 INFO Computing 2048 means at 83%
2023-01-06 10:11:52,580 INFO Computing 50 means of 14417 points in at most 20 steps...
2023-01-06 10:11:54,404 INFO Computing 2048 means at 85%
2023-01-06 10:11:54,490 INFO Computing 50 means of 14597 points in at most 20 steps...
2023-01-06 10:11:56,307 INFO Computing 2048 means at 87%
2023-01-06 10:11:56,393 INFO Computing 50 means of 15260 points in at most 20 steps...
2023-01-06 10:11:58,337 INFO Computing 2048 means at 90%
2023-01-06 10:11:58,420 INFO Computing 50 means of 14004 points in at most 20 steps...
2023-01-06 10:12:00,215 INFO Computing 2048 means at 92%
2023-01-06 10:12:00,302 INFO Computing 50 means of 14735 points in at most 20 steps...
2023-01-06 10:12:02,049 INFO Computing 2048 means at 95%
2023-01-06 10:12:02,128 INFO Computing 50 means of 15767 points in at most 20 steps...
2023-01-06 10:12:03,857 INFO Computing 2048 means at 97%
2023-01-06 10:12:03,940 INFO Computing 48 means of 15335 points in at most 20 steps...
2023-01-06 10:12:05,528 INFO Computing 2048 means at 100%
2023-01-06 10:12:09,477 INFO Do vol update step
2023-01-06 10:12:09,479 INFO Compute adjoint forward mapping on the images
2023-01-06 10:12:11,028 DEBUG Corresponding type is already complex complex128.
2023-01-06 10:12:13,345 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2023-01-06 10:12:13,357 INFO Computing adjoint forward mappings from 2048 rotations at 50%
2023-01-06 10:12:14,924 DEBUG Corresponding type is already complex complex128.
2023-01-06 10:12:17,399 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2023-01-06 10:12:17,409 INFO Computing adjoint forward mappings from 2048 rotations at 100%
2023-01-06 10:12:18,261 DEBUG Corresponding type is already real float64.
2023-01-06 10:12:18,261 DEBUG anufft passed real_type for signal, converting
2023-01-06 10:12:24,362 INFO Computing kernel from 2048 rotations at 50%
2023-01-06 10:12:25,189 DEBUG Corresponding type is already real float64.
2023-01-06 10:12:25,190 DEBUG anufft passed real_type for signal, converting
2023-01-06 10:12:31,428 INFO Computing kernel from 2048 rotations at 100%
2023-01-06 10:12:31,430 INFO Computing non-centered Fourier Transform
2023-01-06 10:12:31,614 INFO Add ramp filter regularisation
2023-01-06 10:12:35,846 INFO Update data_discrepancies
2023-01-06 10:12:35,847 INFO Computing \|Ag.u - f_i\|^2
2023-01-06 10:12:36,678 DEBUG Corresponding type is already real float64.
2023-01-06 10:12:36,678 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:12:51,500 INFO Computing data fidelity for 114564 rotations and 2048 images at 0%
2023-01-06 10:12:52,342 DEBUG Corresponding type is already real float64.
2023-01-06 10:12:52,342 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:13:07,523 INFO Computing data fidelity for 114564 rotations and 2048 images at 1%
2023-01-06 10:13:08,323 DEBUG Corresponding type is already real float64.
2023-01-06 10:13:08,324 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:13:22,835 INFO Computing data fidelity for 114564 rotations and 2048 images at 2%
2023-01-06 10:13:23,607 DEBUG Corresponding type is already real float64.
2023-01-06 10:13:23,607 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:13:38,120 INFO Computing data fidelity for 114564 rotations and 2048 images at 3%
2023-01-06 10:13:38,835 DEBUG Corresponding type is already real float64.
2023-01-06 10:13:38,836 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:13:52,730 INFO Computing data fidelity for 114564 rotations and 2048 images at 4%
2023-01-06 10:13:53,450 DEBUG Corresponding type is already real float64.
2023-01-06 10:13:53,450 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:14:07,227 INFO Computing data fidelity for 114564 rotations and 2048 images at 5%
2023-01-06 10:14:07,945 DEBUG Corresponding type is already real float64.
2023-01-06 10:14:07,945 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:14:21,680 INFO Computing data fidelity for 114564 rotations and 2048 images at 6%
2023-01-06 10:14:22,390 DEBUG Corresponding type is already real float64.
2023-01-06 10:14:22,391 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:14:36,136 INFO Computing data fidelity for 114564 rotations and 2048 images at 7%
2023-01-06 10:14:36,875 DEBUG Corresponding type is already real float64.
2023-01-06 10:14:36,875 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:14:51,516 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2023-01-06 10:14:52,303 DEBUG Corresponding type is already real float64.
2023-01-06 10:14:52,303 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:15:06,310 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2023-01-06 10:15:07,114 DEBUG Corresponding type is already real float64.
2023-01-06 10:15:07,114 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:15:21,111 INFO Computing data fidelity for 114564 rotations and 2048 images at 9%
2023-01-06 10:15:21,889 DEBUG Corresponding type is already real float64.
2023-01-06 10:15:21,889 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:15:35,822 INFO Computing data fidelity for 114564 rotations and 2048 images at 10%
2023-01-06 10:15:36,561 DEBUG Corresponding type is already real float64.
2023-01-06 10:15:36,561 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:15:50,856 INFO Computing data fidelity for 114564 rotations and 2048 images at 11%
2023-01-06 10:15:51,610 DEBUG Corresponding type is already real float64.
2023-01-06 10:15:51,610 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:16:06,426 INFO Computing data fidelity for 114564 rotations and 2048 images at 12%
2023-01-06 10:16:07,238 DEBUG Corresponding type is already real float64.
2023-01-06 10:16:07,239 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:16:21,264 INFO Computing data fidelity for 114564 rotations and 2048 images at 13%
2023-01-06 10:16:22,056 DEBUG Corresponding type is already real float64.
2023-01-06 10:16:22,056 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:16:36,644 INFO Computing data fidelity for 114564 rotations and 2048 images at 14%
2023-01-06 10:16:37,385 DEBUG Corresponding type is already real float64.
2023-01-06 10:16:37,386 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:16:51,408 INFO Computing data fidelity for 114564 rotations and 2048 images at 15%
2023-01-06 10:16:52,149 DEBUG Corresponding type is already real float64.
2023-01-06 10:16:52,150 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:17:06,539 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2023-01-06 10:17:07,266 DEBUG Corresponding type is already real float64.
2023-01-06 10:17:07,266 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:17:20,523 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2023-01-06 10:17:21,323 DEBUG Corresponding type is already real float64.
2023-01-06 10:17:21,323 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:17:35,947 INFO Computing data fidelity for 114564 rotations and 2048 images at 17%
2023-01-06 10:17:36,684 DEBUG Corresponding type is already real float64.
2023-01-06 10:17:36,685 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:17:51,532 INFO Computing data fidelity for 114564 rotations and 2048 images at 18%
2023-01-06 10:17:52,275 DEBUG Corresponding type is already real float64.
2023-01-06 10:17:52,275 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:18:05,553 INFO Computing data fidelity for 114564 rotations and 2048 images at 19%
2023-01-06 10:18:06,321 DEBUG Corresponding type is already real float64.
2023-01-06 10:18:06,321 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:18:21,276 INFO Computing data fidelity for 114564 rotations and 2048 images at 20%
2023-01-06 10:18:22,082 DEBUG Corresponding type is already real float64.
2023-01-06 10:18:22,082 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:18:36,536 INFO Computing data fidelity for 114564 rotations and 2048 images at 21%
2023-01-06 10:18:37,276 DEBUG Corresponding type is already real float64.
2023-01-06 10:18:37,276 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:18:51,598 INFO Computing data fidelity for 114564 rotations and 2048 images at 22%
2023-01-06 10:18:52,393 DEBUG Corresponding type is already real float64.
2023-01-06 10:18:52,393 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:19:06,082 INFO Computing data fidelity for 114564 rotations and 2048 images at 23%
2023-01-06 10:19:06,831 DEBUG Corresponding type is already real float64.
2023-01-06 10:19:06,831 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:19:21,166 INFO Computing data fidelity for 114564 rotations and 2048 images at 24%
2023-01-06 10:19:21,943 DEBUG Corresponding type is already real float64.
2023-01-06 10:19:21,943 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:19:36,071 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2023-01-06 10:19:36,924 DEBUG Corresponding type is already real float64.
2023-01-06 10:19:36,924 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:19:51,114 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2023-01-06 10:19:51,861 DEBUG Corresponding type is already real float64.
2023-01-06 10:19:51,861 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:20:06,803 INFO Computing data fidelity for 114564 rotations and 2048 images at 26%
2023-01-06 10:20:07,643 DEBUG Corresponding type is already real float64.
2023-01-06 10:20:07,644 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:20:22,559 INFO Computing data fidelity for 114564 rotations and 2048 images at 27%
2023-01-06 10:20:23,335 DEBUG Corresponding type is already real float64.
2023-01-06 10:20:23,335 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:20:37,654 INFO Computing data fidelity for 114564 rotations and 2048 images at 28%
2023-01-06 10:20:38,405 DEBUG Corresponding type is already real float64.
2023-01-06 10:20:38,405 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:20:52,949 INFO Computing data fidelity for 114564 rotations and 2048 images at 29%
2023-01-06 10:20:53,734 DEBUG Corresponding type is already real float64.
2023-01-06 10:20:53,734 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:21:07,826 INFO Computing data fidelity for 114564 rotations and 2048 images at 30%
2023-01-06 10:21:08,577 DEBUG Corresponding type is already real float64.
2023-01-06 10:21:08,577 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:21:22,614 INFO Computing data fidelity for 114564 rotations and 2048 images at 31%
2023-01-06 10:21:23,393 DEBUG Corresponding type is already real float64.
2023-01-06 10:21:23,393 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:21:37,938 INFO Computing data fidelity for 114564 rotations and 2048 images at 32%
2023-01-06 10:21:38,748 DEBUG Corresponding type is already real float64.
2023-01-06 10:21:38,748 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:21:53,048 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2023-01-06 10:21:53,839 DEBUG Corresponding type is already real float64.
2023-01-06 10:21:53,839 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:22:07,665 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2023-01-06 10:22:08,424 DEBUG Corresponding type is already real float64.
2023-01-06 10:22:08,424 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:22:21,980 INFO Computing data fidelity for 114564 rotations and 2048 images at 34%
2023-01-06 10:22:22,760 DEBUG Corresponding type is already real float64.
2023-01-06 10:22:22,760 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:22:36,162 INFO Computing data fidelity for 114564 rotations and 2048 images at 35%
2023-01-06 10:22:36,899 DEBUG Corresponding type is already real float64.
2023-01-06 10:22:36,899 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:22:51,016 INFO Computing data fidelity for 114564 rotations and 2048 images at 36%
2023-01-06 10:22:51,752 DEBUG Corresponding type is already real float64.
2023-01-06 10:22:51,753 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:23:06,324 INFO Computing data fidelity for 114564 rotations and 2048 images at 37%
2023-01-06 10:23:07,121 DEBUG Corresponding type is already real float64.
2023-01-06 10:23:07,121 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:23:21,484 INFO Computing data fidelity for 114564 rotations and 2048 images at 38%
2023-01-06 10:23:22,217 DEBUG Corresponding type is already real float64.
2023-01-06 10:23:22,218 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:23:35,488 INFO Computing data fidelity for 114564 rotations and 2048 images at 39%
2023-01-06 10:23:36,273 DEBUG Corresponding type is already real float64.
2023-01-06 10:23:36,273 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:23:49,972 INFO Computing data fidelity for 114564 rotations and 2048 images at 40%
2023-01-06 10:23:50,723 DEBUG Corresponding type is already real float64.
2023-01-06 10:23:50,723 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:24:04,860 INFO Computing data fidelity for 114564 rotations and 2048 images at 41%
2023-01-06 10:24:05,635 DEBUG Corresponding type is already real float64.
2023-01-06 10:24:05,635 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:24:19,124 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2023-01-06 10:24:19,867 DEBUG Corresponding type is already real float64.
2023-01-06 10:24:19,867 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:24:34,547 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2023-01-06 10:24:35,301 DEBUG Corresponding type is already real float64.
2023-01-06 10:24:35,301 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:24:49,497 INFO Computing data fidelity for 114564 rotations and 2048 images at 43%
2023-01-06 10:24:50,236 DEBUG Corresponding type is already real float64.
2023-01-06 10:24:50,236 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:25:03,419 INFO Computing data fidelity for 114564 rotations and 2048 images at 44%
2023-01-06 10:25:04,161 DEBUG Corresponding type is already real float64.
2023-01-06 10:25:04,161 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:25:17,715 INFO Computing data fidelity for 114564 rotations and 2048 images at 45%
2023-01-06 10:25:18,464 DEBUG Corresponding type is already real float64.
2023-01-06 10:25:18,464 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:25:32,406 INFO Computing data fidelity for 114564 rotations and 2048 images at 46%
2023-01-06 10:25:33,244 DEBUG Corresponding type is already real float64.
2023-01-06 10:25:33,244 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:25:48,195 INFO Computing data fidelity for 114564 rotations and 2048 images at 47%
2023-01-06 10:25:49,016 DEBUG Corresponding type is already real float64.
2023-01-06 10:25:49,016 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:26:03,371 INFO Computing data fidelity for 114564 rotations and 2048 images at 48%
2023-01-06 10:26:04,143 DEBUG Corresponding type is already real float64.
2023-01-06 10:26:04,143 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:26:17,998 INFO Computing data fidelity for 114564 rotations and 2048 images at 49%
2023-01-06 10:26:18,746 DEBUG Corresponding type is already real float64.
2023-01-06 10:26:18,746 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:26:31,850 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2023-01-06 10:26:32,596 DEBUG Corresponding type is already real float64.
2023-01-06 10:26:32,596 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:26:46,017 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2023-01-06 10:26:46,764 DEBUG Corresponding type is already real float64.
2023-01-06 10:26:46,764 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:27:01,261 INFO Computing data fidelity for 114564 rotations and 2048 images at 51%
2023-01-06 10:27:02,072 DEBUG Corresponding type is already real float64.
2023-01-06 10:27:02,072 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:27:16,853 INFO Computing data fidelity for 114564 rotations and 2048 images at 52%
2023-01-06 10:27:17,691 DEBUG Corresponding type is already real float64.
2023-01-06 10:27:17,691 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:27:32,158 INFO Computing data fidelity for 114564 rotations and 2048 images at 53%
2023-01-06 10:27:32,966 DEBUG Corresponding type is already real float64.
2023-01-06 10:27:32,966 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:27:47,516 INFO Computing data fidelity for 114564 rotations and 2048 images at 54%
2023-01-06 10:27:48,290 DEBUG Corresponding type is already real float64.
2023-01-06 10:27:48,290 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:28:02,316 INFO Computing data fidelity for 114564 rotations and 2048 images at 55%
2023-01-06 10:28:03,069 DEBUG Corresponding type is already real float64.
2023-01-06 10:28:03,069 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:28:16,602 INFO Computing data fidelity for 114564 rotations and 2048 images at 56%
2023-01-06 10:28:17,364 DEBUG Corresponding type is already real float64.
2023-01-06 10:28:17,364 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:28:30,788 INFO Computing data fidelity for 114564 rotations and 2048 images at 57%
2023-01-06 10:28:31,534 DEBUG Corresponding type is already real float64.
2023-01-06 10:28:31,534 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:28:45,299 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2023-01-06 10:28:46,053 DEBUG Corresponding type is already real float64.
2023-01-06 10:28:46,053 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:29:00,177 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2023-01-06 10:29:01,022 DEBUG Corresponding type is already real float64.
2023-01-06 10:29:01,022 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:29:15,594 INFO Computing data fidelity for 114564 rotations and 2048 images at 59%
2023-01-06 10:29:16,350 DEBUG Corresponding type is already real float64.
2023-01-06 10:29:16,350 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:29:30,479 INFO Computing data fidelity for 114564 rotations and 2048 images at 60%
2023-01-06 10:29:31,312 DEBUG Corresponding type is already real float64.
2023-01-06 10:29:31,313 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:29:44,975 INFO Computing data fidelity for 114564 rotations and 2048 images at 61%
2023-01-06 10:29:45,717 DEBUG Corresponding type is already real float64.
2023-01-06 10:29:45,718 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:29:58,948 INFO Computing data fidelity for 114564 rotations and 2048 images at 62%
2023-01-06 10:29:59,689 DEBUG Corresponding type is already real float64.
2023-01-06 10:29:59,689 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:30:14,180 INFO Computing data fidelity for 114564 rotations and 2048 images at 63%
2023-01-06 10:30:14,949 DEBUG Corresponding type is already real float64.
2023-01-06 10:30:14,949 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:30:28,386 INFO Computing data fidelity for 114564 rotations and 2048 images at 64%
2023-01-06 10:30:29,127 DEBUG Corresponding type is already real float64.
2023-01-06 10:30:29,127 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:30:42,506 INFO Computing data fidelity for 114564 rotations and 2048 images at 65%
2023-01-06 10:30:43,248 DEBUG Corresponding type is already real float64.
2023-01-06 10:30:43,248 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:30:56,414 INFO Computing data fidelity for 114564 rotations and 2048 images at 66%
2023-01-06 10:30:57,157 DEBUG Corresponding type is already real float64.
2023-01-06 10:30:57,157 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:31:10,282 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2023-01-06 10:31:11,034 DEBUG Corresponding type is already real float64.
2023-01-06 10:31:11,034 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:31:24,110 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2023-01-06 10:31:24,848 DEBUG Corresponding type is already real float64.
2023-01-06 10:31:24,848 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:31:37,962 INFO Computing data fidelity for 114564 rotations and 2048 images at 68%
2023-01-06 10:31:38,700 DEBUG Corresponding type is already real float64.
2023-01-06 10:31:38,700 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:31:52,183 INFO Computing data fidelity for 114564 rotations and 2048 images at 69%
2023-01-06 10:31:52,922 DEBUG Corresponding type is already real float64.
2023-01-06 10:31:52,922 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:32:06,040 INFO Computing data fidelity for 114564 rotations and 2048 images at 70%
2023-01-06 10:37:53,003 DEBUG Corresponding type is already real float64.
2023-01-06 10:37:53,004 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:38:09,930 INFO Computing data fidelity for 114564 rotations and 2048 images at 71%
2023-01-06 10:38:10,784 DEBUG Corresponding type is already real float64.
2023-01-06 10:38:10,784 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:38:25,226 INFO Computing data fidelity for 114564 rotations and 2048 images at 72%
2023-01-06 10:38:25,998 DEBUG Corresponding type is already real float64.
2023-01-06 10:38:25,998 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:38:40,038 INFO Computing data fidelity for 114564 rotations and 2048 images at 73%
2023-01-06 10:38:40,764 DEBUG Corresponding type is already real float64.
2023-01-06 10:38:40,764 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:38:54,004 INFO Computing data fidelity for 114564 rotations and 2048 images at 74%
2023-01-06 10:38:54,783 DEBUG Corresponding type is already real float64.
2023-01-06 10:38:54,783 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:39:08,242 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2023-01-06 10:39:08,970 DEBUG Corresponding type is already real float64.
2023-01-06 10:39:08,971 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:39:23,371 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2023-01-06 10:39:24,228 DEBUG Corresponding type is already real float64.
2023-01-06 10:39:24,228 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:39:39,348 INFO Computing data fidelity for 114564 rotations and 2048 images at 76%
2023-01-06 10:39:40,130 DEBUG Corresponding type is already real float64.
2023-01-06 10:39:40,130 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:39:54,683 INFO Computing data fidelity for 114564 rotations and 2048 images at 77%
2023-01-06 10:39:55,497 DEBUG Corresponding type is already real float64.
2023-01-06 10:39:55,497 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:40:09,886 INFO Computing data fidelity for 114564 rotations and 2048 images at 78%
2023-01-06 10:40:10,787 DEBUG Corresponding type is already real float64.
2023-01-06 10:40:10,787 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:40:24,249 INFO Computing data fidelity for 114564 rotations and 2048 images at 79%
2023-01-06 10:40:24,990 DEBUG Corresponding type is already real float64.
2023-01-06 10:40:24,990 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:40:39,027 INFO Computing data fidelity for 114564 rotations and 2048 images at 80%
2023-01-06 10:40:39,791 DEBUG Corresponding type is already real float64.
2023-01-06 10:40:39,791 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:40:53,569 INFO Computing data fidelity for 114564 rotations and 2048 images at 81%
2023-01-06 10:40:54,300 DEBUG Corresponding type is already real float64.
2023-01-06 10:40:54,300 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:41:07,394 INFO Computing data fidelity for 114564 rotations and 2048 images at 82%
2023-01-06 10:41:08,135 DEBUG Corresponding type is already real float64.
2023-01-06 10:41:08,135 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:41:23,112 INFO Computing data fidelity for 114564 rotations and 2048 images at 83%
2023-01-06 10:41:23,847 DEBUG Corresponding type is already real float64.
2023-01-06 10:41:23,847 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:41:37,069 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2023-01-06 10:41:37,809 DEBUG Corresponding type is already real float64.
2023-01-06 10:41:37,809 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:41:51,824 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2023-01-06 10:41:52,576 DEBUG Corresponding type is already real float64.
2023-01-06 10:41:52,576 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:42:07,188 INFO Computing data fidelity for 114564 rotations and 2048 images at 85%
2023-01-06 10:42:08,005 DEBUG Corresponding type is already real float64.
2023-01-06 10:42:08,005 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:42:21,857 INFO Computing data fidelity for 114564 rotations and 2048 images at 86%
2023-01-06 10:42:22,599 DEBUG Corresponding type is already real float64.
2023-01-06 10:42:22,599 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:42:37,183 INFO Computing data fidelity for 114564 rotations and 2048 images at 87%
2023-01-06 10:42:37,990 DEBUG Corresponding type is already real float64.
2023-01-06 10:42:37,990 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:42:51,488 INFO Computing data fidelity for 114564 rotations and 2048 images at 88%
2023-01-06 10:42:52,230 DEBUG Corresponding type is already real float64.
2023-01-06 10:42:52,230 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:43:07,233 INFO Computing data fidelity for 114564 rotations and 2048 images at 89%
2023-01-06 10:43:08,042 DEBUG Corresponding type is already real float64.
2023-01-06 10:43:08,042 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:43:22,909 INFO Computing data fidelity for 114564 rotations and 2048 images at 90%
2023-01-06 10:43:23,671 DEBUG Corresponding type is already real float64.
2023-01-06 10:43:23,671 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:43:38,337 INFO Computing data fidelity for 114564 rotations and 2048 images at 91%
2023-01-06 10:43:39,252 DEBUG Corresponding type is already real float64.
2023-01-06 10:43:39,252 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:43:55,197 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2023-01-06 10:43:56,047 DEBUG Corresponding type is already real float64.
2023-01-06 10:43:56,047 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:44:11,952 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2023-01-06 10:44:12,974 DEBUG Corresponding type is already real float64.
2023-01-06 10:44:12,974 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:44:28,209 INFO Computing data fidelity for 114564 rotations and 2048 images at 93%
2023-01-06 10:44:29,043 DEBUG Corresponding type is already real float64.
2023-01-06 10:44:29,043 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:44:43,419 INFO Computing data fidelity for 114564 rotations and 2048 images at 94%
2023-01-06 10:44:44,185 DEBUG Corresponding type is already real float64.
2023-01-06 10:44:44,185 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:44:57,775 INFO Computing data fidelity for 114564 rotations and 2048 images at 95%
2023-01-06 10:44:58,556 DEBUG Corresponding type is already real float64.
2023-01-06 10:44:58,556 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:45:12,448 INFO Computing data fidelity for 114564 rotations and 2048 images at 96%
2023-01-06 10:45:13,189 DEBUG Corresponding type is already real float64.
2023-01-06 10:45:13,189 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:45:26,866 INFO Computing data fidelity for 114564 rotations and 2048 images at 97%
2023-01-06 10:45:27,642 DEBUG Corresponding type is already real float64.
2023-01-06 10:45:27,642 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:45:41,750 INFO Computing data fidelity for 114564 rotations and 2048 images at 98%
2023-01-06 10:45:42,535 DEBUG Corresponding type is already real float64.
2023-01-06 10:45:42,535 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:45:56,978 INFO Computing data fidelity for 114564 rotations and 2048 images at 99%
2023-01-06 10:45:57,477 DEBUG Corresponding type is already real float64.
2023-01-06 10:45:57,477 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:46:09,371 INFO Computing data fidelity for 114564 rotations and 2048 images at 100%
2023-01-06 10:46:12,123 INFO Do lambda update step
2023-01-06 10:46:36,353 INFO Do rots update step
2023-01-06 10:46:37,223 INFO Projecting 2048 vectors onto 114564-simplex at 2%
2023-01-06 10:46:37,868 INFO Projecting 2048 vectors onto 114564-simplex at 4%
2023-01-06 10:46:38,518 INFO Projecting 2048 vectors onto 114564-simplex at 7%
2023-01-06 10:46:39,129 INFO Projecting 2048 vectors onto 114564-simplex at 9%
2023-01-06 10:46:39,744 INFO Projecting 2048 vectors onto 114564-simplex at 12%
2023-01-06 10:46:40,353 INFO Projecting 2048 vectors onto 114564-simplex at 14%
2023-01-06 10:46:40,975 INFO Projecting 2048 vectors onto 114564-simplex at 17%
2023-01-06 10:46:41,575 INFO Projecting 2048 vectors onto 114564-simplex at 19%
2023-01-06 10:46:42,273 INFO Projecting 2048 vectors onto 114564-simplex at 21%
2023-01-06 10:46:42,960 INFO Projecting 2048 vectors onto 114564-simplex at 24%
2023-01-06 10:46:43,805 INFO Projecting 2048 vectors onto 114564-simplex at 26%
2023-01-06 10:46:44,470 INFO Projecting 2048 vectors onto 114564-simplex at 29%
2023-01-06 10:46:45,133 INFO Projecting 2048 vectors onto 114564-simplex at 31%
2023-01-06 10:46:45,756 INFO Projecting 2048 vectors onto 114564-simplex at 34%
2023-01-06 10:46:46,387 INFO Projecting 2048 vectors onto 114564-simplex at 36%
2023-01-06 10:46:46,988 INFO Projecting 2048 vectors onto 114564-simplex at 39%
2023-01-06 10:46:47,591 INFO Projecting 2048 vectors onto 114564-simplex at 41%
2023-01-06 10:46:48,203 INFO Projecting 2048 vectors onto 114564-simplex at 43%
2023-01-06 10:46:48,880 INFO Projecting 2048 vectors onto 114564-simplex at 46%
2023-01-06 10:46:49,544 INFO Projecting 2048 vectors onto 114564-simplex at 48%
2023-01-06 10:46:50,330 INFO Projecting 2048 vectors onto 114564-simplex at 51%
2023-01-06 10:46:50,985 INFO Projecting 2048 vectors onto 114564-simplex at 53%
2023-01-06 10:46:51,638 INFO Projecting 2048 vectors onto 114564-simplex at 56%
2023-01-06 10:46:52,246 INFO Projecting 2048 vectors onto 114564-simplex at 58%
2023-01-06 10:46:52,891 INFO Projecting 2048 vectors onto 114564-simplex at 61%
2023-01-06 10:46:53,552 INFO Projecting 2048 vectors onto 114564-simplex at 63%
2023-01-06 10:46:54,160 INFO Projecting 2048 vectors onto 114564-simplex at 65%
2023-01-06 10:46:54,781 INFO Projecting 2048 vectors onto 114564-simplex at 68%
2023-01-06 10:46:55,386 INFO Projecting 2048 vectors onto 114564-simplex at 70%
2023-01-06 10:46:55,987 INFO Projecting 2048 vectors onto 114564-simplex at 73%
2023-01-06 10:46:56,773 INFO Projecting 2048 vectors onto 114564-simplex at 75%
2023-01-06 10:46:57,373 INFO Projecting 2048 vectors onto 114564-simplex at 78%
2023-01-06 10:46:58,041 INFO Projecting 2048 vectors onto 114564-simplex at 80%
2023-01-06 10:46:58,660 INFO Projecting 2048 vectors onto 114564-simplex at 83%
2023-01-06 10:46:59,268 INFO Projecting 2048 vectors onto 114564-simplex at 85%
2023-01-06 10:46:59,877 INFO Projecting 2048 vectors onto 114564-simplex at 87%
2023-01-06 10:47:00,486 INFO Projecting 2048 vectors onto 114564-simplex at 90%
2023-01-06 10:47:01,093 INFO Projecting 2048 vectors onto 114564-simplex at 92%
2023-01-06 10:47:01,703 INFO Projecting 2048 vectors onto 114564-simplex at 95%
2023-01-06 10:47:02,343 INFO Projecting 2048 vectors onto 114564-simplex at 97%
2023-01-06 10:47:03,008 INFO Projecting 2048 vectors onto 114564-simplex at 100%
2023-01-06 10:47:04,472 INFO Computing 50 means of 26182 points in at most 20 steps...
2023-01-06 10:47:07,503 INFO Computing 2048 means at 2%
2023-01-06 10:47:07,587 INFO Computing 50 means of 29686 points in at most 20 steps...
2023-01-06 10:47:11,123 INFO Computing 2048 means at 4%
2023-01-06 10:47:11,204 INFO Computing 50 means of 26952 points in at most 20 steps...
2023-01-06 10:47:14,509 INFO Computing 2048 means at 7%
2023-01-06 10:47:14,591 INFO Computing 50 means of 30535 points in at most 20 steps...
2023-01-06 10:47:18,159 INFO Computing 2048 means at 9%
2023-01-06 10:47:18,239 INFO Computing 50 means of 30555 points in at most 20 steps...
2023-01-06 10:47:21,805 INFO Computing 2048 means at 12%
2023-01-06 10:47:21,885 INFO Computing 50 means of 28264 points in at most 20 steps...
2023-01-06 10:47:25,438 INFO Computing 2048 means at 14%
2023-01-06 10:47:25,517 INFO Computing 50 means of 27321 points in at most 20 steps...
2023-01-06 10:47:28,843 INFO Computing 2048 means at 17%
2023-01-06 10:47:28,926 INFO Computing 50 means of 30412 points in at most 20 steps...
2023-01-06 10:47:32,715 INFO Computing 2048 means at 19%
2023-01-06 10:47:32,799 INFO Computing 50 means of 35065 points in at most 20 steps...
2023-01-06 10:47:36,907 INFO Computing 2048 means at 21%
2023-01-06 10:47:36,990 INFO Computing 50 means of 28670 points in at most 20 steps...
2023-01-06 10:47:40,721 INFO Computing 2048 means at 24%
2023-01-06 10:47:40,809 INFO Computing 50 means of 28900 points in at most 20 steps...
2023-01-06 10:47:44,492 INFO Computing 2048 means at 26%
2023-01-06 10:47:44,579 INFO Computing 50 means of 26063 points in at most 20 steps...
2023-01-06 10:47:48,014 INFO Computing 2048 means at 29%
2023-01-06 10:47:48,098 INFO Computing 50 means of 27972 points in at most 20 steps...
2023-01-06 10:47:51,454 INFO Computing 2048 means at 31%
2023-01-06 10:47:51,536 INFO Computing 50 means of 29964 points in at most 20 steps...
2023-01-06 10:47:55,058 INFO Computing 2048 means at 34%
2023-01-06 10:47:55,140 INFO Computing 50 means of 27839 points in at most 20 steps...
2023-01-06 10:47:59,103 INFO Computing 2048 means at 36%
2023-01-06 10:47:59,201 INFO Computing 50 means of 31935 points in at most 20 steps...
2023-01-06 10:48:03,415 INFO Computing 2048 means at 39%
2023-01-06 10:48:03,502 INFO Computing 50 means of 28753 points in at most 20 steps...
2023-01-06 10:48:06,875 INFO Computing 2048 means at 41%
2023-01-06 10:48:06,961 INFO Computing 50 means of 29446 points in at most 20 steps...
2023-01-06 10:48:10,700 INFO Computing 2048 means at 43%
2023-01-06 10:48:10,787 INFO Computing 50 means of 26012 points in at most 20 steps...
2023-01-06 10:48:14,170 INFO Computing 2048 means at 46%
2023-01-06 10:48:14,252 INFO Computing 50 means of 29439 points in at most 20 steps...
2023-01-06 10:48:18,017 INFO Computing 2048 means at 48%
2023-01-06 10:48:18,120 INFO Computing 50 means of 28133 points in at most 20 steps...
2023-01-06 10:48:21,748 INFO Computing 2048 means at 51%
2023-01-06 10:48:21,835 INFO Computing 50 means of 27724 points in at most 20 steps...
2023-01-06 10:48:25,447 INFO Computing 2048 means at 53%
2023-01-06 10:48:25,532 INFO Computing 50 means of 28135 points in at most 20 steps...
2023-01-06 10:48:29,066 INFO Computing 2048 means at 56%
2023-01-06 10:48:29,149 INFO Computing 50 means of 28282 points in at most 20 steps...
2023-01-06 10:48:32,845 INFO Computing 2048 means at 58%
2023-01-06 10:48:32,926 INFO Computing 50 means of 26459 points in at most 20 steps...
2023-01-06 10:48:36,303 INFO Computing 2048 means at 61%
2023-01-06 10:48:36,383 INFO Computing 50 means of 25818 points in at most 20 steps...
2023-01-06 10:48:39,501 INFO Computing 2048 means at 63%
2023-01-06 10:48:39,581 INFO Computing 50 means of 27648 points in at most 20 steps...
2023-01-06 10:48:43,021 INFO Computing 2048 means at 65%
2023-01-06 10:48:43,101 INFO Computing 50 means of 27535 points in at most 20 steps...
2023-01-06 10:48:46,270 INFO Computing 2048 means at 68%
2023-01-06 10:48:46,350 INFO Computing 50 means of 28061 points in at most 20 steps...
2023-01-06 10:48:49,617 INFO Computing 2048 means at 70%
2023-01-06 10:48:49,697 INFO Computing 50 means of 30151 points in at most 20 steps...
2023-01-06 10:48:53,188 INFO Computing 2048 means at 73%
2023-01-06 10:48:53,291 INFO Computing 50 means of 28264 points in at most 20 steps...
2023-01-06 10:48:56,657 INFO Computing 2048 means at 75%
2023-01-06 10:48:56,746 INFO Computing 50 means of 28393 points in at most 20 steps...
2023-01-06 10:49:00,464 INFO Computing 2048 means at 78%
2023-01-06 10:49:00,552 INFO Computing 50 means of 29616 points in at most 20 steps...
2023-01-06 10:49:04,262 INFO Computing 2048 means at 80%
2023-01-06 10:49:04,344 INFO Computing 50 means of 25967 points in at most 20 steps...
2023-01-06 10:49:07,669 INFO Computing 2048 means at 83%
2023-01-06 10:49:07,753 INFO Computing 50 means of 32515 points in at most 20 steps...
2023-01-06 10:49:11,681 INFO Computing 2048 means at 85%
2023-01-06 10:49:11,761 INFO Computing 50 means of 26557 points in at most 20 steps...
2023-01-06 10:49:15,187 INFO Computing 2048 means at 87%
2023-01-06 10:49:15,269 INFO Computing 50 means of 29915 points in at most 20 steps...
2023-01-06 10:49:18,871 INFO Computing 2048 means at 90%
2023-01-06 10:49:18,953 INFO Computing 50 means of 29695 points in at most 20 steps...
2023-01-06 10:49:22,514 INFO Computing 2048 means at 92%
2023-01-06 10:49:22,611 INFO Computing 50 means of 29652 points in at most 20 steps...
2023-01-06 10:49:26,455 INFO Computing 2048 means at 95%
2023-01-06 10:49:26,539 INFO Computing 50 means of 29418 points in at most 20 steps...
2023-01-06 10:49:30,317 INFO Computing 2048 means at 97%
2023-01-06 10:49:30,400 INFO Computing 48 means of 27768 points in at most 20 steps...
2023-01-06 10:49:33,840 INFO Computing 2048 means at 100%
2023-01-06 10:49:38,248 INFO Do vol update step
2023-01-06 10:49:38,250 INFO Compute adjoint forward mapping on the images
2023-01-06 10:49:39,911 DEBUG Corresponding type is already complex complex128.
2023-01-06 10:49:42,265 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2023-01-06 10:49:42,277 INFO Computing adjoint forward mappings from 2048 rotations at 50%
2023-01-06 10:49:43,705 DEBUG Corresponding type is already complex complex128.
2023-01-06 10:49:46,080 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2023-01-06 10:49:46,090 INFO Computing adjoint forward mappings from 2048 rotations at 100%
2023-01-06 10:49:46,914 DEBUG Corresponding type is already real float64.
2023-01-06 10:49:46,914 DEBUG anufft passed real_type for signal, converting
2023-01-06 10:49:53,197 INFO Computing kernel from 2048 rotations at 50%
2023-01-06 10:49:54,126 DEBUG Corresponding type is already real float64.
2023-01-06 10:49:54,126 DEBUG anufft passed real_type for signal, converting
2023-01-06 10:50:00,680 INFO Computing kernel from 2048 rotations at 100%
2023-01-06 10:50:00,682 INFO Computing non-centered Fourier Transform
2023-01-06 10:50:00,855 INFO Add ramp filter regularisation
2023-01-06 10:50:05,189 INFO Update data_discrepancies
2023-01-06 10:50:05,191 INFO Computing \|Ag.u - f_i\|^2
2023-01-06 10:50:06,031 DEBUG Corresponding type is already real float64.
2023-01-06 10:50:06,032 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:50:20,459 INFO Computing data fidelity for 114564 rotations and 2048 images at 0%
2023-01-06 10:50:21,238 DEBUG Corresponding type is already real float64.
2023-01-06 10:50:21,238 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:50:35,796 INFO Computing data fidelity for 114564 rotations and 2048 images at 1%
2023-01-06 10:50:36,622 DEBUG Corresponding type is already real float64.
2023-01-06 10:50:36,623 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:50:50,722 INFO Computing data fidelity for 114564 rotations and 2048 images at 2%
2023-01-06 10:50:51,505 DEBUG Corresponding type is already real float64.
2023-01-06 10:50:51,505 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:51:05,396 INFO Computing data fidelity for 114564 rotations and 2048 images at 3%
2023-01-06 10:51:06,146 DEBUG Corresponding type is already real float64.
2023-01-06 10:51:06,146 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:51:19,379 INFO Computing data fidelity for 114564 rotations and 2048 images at 4%
2023-01-06 10:51:20,092 DEBUG Corresponding type is already real float64.
2023-01-06 10:51:20,093 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:51:34,480 INFO Computing data fidelity for 114564 rotations and 2048 images at 5%
2023-01-06 10:51:35,191 DEBUG Corresponding type is already real float64.
2023-01-06 10:51:35,192 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:51:49,083 INFO Computing data fidelity for 114564 rotations and 2048 images at 6%
2023-01-06 10:51:49,825 DEBUG Corresponding type is already real float64.
2023-01-06 10:51:49,826 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:52:04,090 INFO Computing data fidelity for 114564 rotations and 2048 images at 7%
2023-01-06 10:52:04,864 DEBUG Corresponding type is already real float64.
2023-01-06 10:52:04,864 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:52:19,045 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2023-01-06 10:52:19,859 DEBUG Corresponding type is already real float64.
2023-01-06 10:52:19,859 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:52:34,628 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2023-01-06 10:52:35,387 DEBUG Corresponding type is already real float64.
2023-01-06 10:52:35,387 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:52:50,190 INFO Computing data fidelity for 114564 rotations and 2048 images at 9%
2023-01-06 10:52:50,959 DEBUG Corresponding type is already real float64.
2023-01-06 10:52:50,959 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:53:05,705 INFO Computing data fidelity for 114564 rotations and 2048 images at 10%
2023-01-06 10:53:06,482 DEBUG Corresponding type is already real float64.
2023-01-06 10:53:06,482 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:53:20,784 INFO Computing data fidelity for 114564 rotations and 2048 images at 11%
2023-01-06 10:53:21,601 DEBUG Corresponding type is already real float64.
2023-01-06 10:53:21,601 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:53:35,916 INFO Computing data fidelity for 114564 rotations and 2048 images at 12%
2023-01-06 10:53:36,739 DEBUG Corresponding type is already real float64.
2023-01-06 10:53:36,739 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:53:50,920 INFO Computing data fidelity for 114564 rotations and 2048 images at 13%
2023-01-06 10:53:51,671 DEBUG Corresponding type is already real float64.
2023-01-06 10:53:51,671 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:54:06,061 INFO Computing data fidelity for 114564 rotations and 2048 images at 14%
2023-01-06 10:54:06,850 DEBUG Corresponding type is already real float64.
2023-01-06 10:54:06,850 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:54:20,917 INFO Computing data fidelity for 114564 rotations and 2048 images at 15%
2023-01-06 10:54:21,731 DEBUG Corresponding type is already real float64.
2023-01-06 10:54:21,732 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:54:35,569 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2023-01-06 10:54:36,312 DEBUG Corresponding type is already real float64.
2023-01-06 10:54:36,312 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:54:50,056 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2023-01-06 10:54:50,800 DEBUG Corresponding type is already real float64.
2023-01-06 10:54:50,800 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:55:04,895 INFO Computing data fidelity for 114564 rotations and 2048 images at 17%
2023-01-06 10:55:05,700 DEBUG Corresponding type is already real float64.
2023-01-06 10:55:05,700 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:55:20,418 INFO Computing data fidelity for 114564 rotations and 2048 images at 18%
2023-01-06 10:55:21,226 DEBUG Corresponding type is already real float64.
2023-01-06 10:55:21,226 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:55:35,949 INFO Computing data fidelity for 114564 rotations and 2048 images at 19%
2023-01-06 10:55:36,746 DEBUG Corresponding type is already real float64.
2023-01-06 10:55:36,746 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:55:51,874 INFO Computing data fidelity for 114564 rotations and 2048 images at 20%
2023-01-06 10:55:52,687 DEBUG Corresponding type is already real float64.
2023-01-06 10:55:52,687 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:56:07,001 INFO Computing data fidelity for 114564 rotations and 2048 images at 21%
2023-01-06 10:56:07,763 DEBUG Corresponding type is already real float64.
2023-01-06 10:56:07,763 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:56:22,248 INFO Computing data fidelity for 114564 rotations and 2048 images at 22%
2023-01-06 10:56:23,023 DEBUG Corresponding type is already real float64.
2023-01-06 10:56:23,023 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:56:37,523 INFO Computing data fidelity for 114564 rotations and 2048 images at 23%
2023-01-06 10:56:38,351 DEBUG Corresponding type is already real float64.
2023-01-06 10:56:38,351 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:56:52,444 INFO Computing data fidelity for 114564 rotations and 2048 images at 24%
2023-01-06 10:56:53,301 DEBUG Corresponding type is already real float64.
2023-01-06 10:56:53,301 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:57:08,237 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2023-01-06 10:57:09,033 DEBUG Corresponding type is already real float64.
2023-01-06 10:57:09,034 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:57:23,583 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2023-01-06 10:57:24,401 DEBUG Corresponding type is already real float64.
2023-01-06 10:57:24,401 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:57:38,585 INFO Computing data fidelity for 114564 rotations and 2048 images at 26%
2023-01-06 10:57:39,365 DEBUG Corresponding type is already real float64.
2023-01-06 10:57:39,366 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:57:53,509 INFO Computing data fidelity for 114564 rotations and 2048 images at 27%
2023-01-06 10:57:54,299 DEBUG Corresponding type is already real float64.
2023-01-06 10:57:54,299 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:58:09,152 INFO Computing data fidelity for 114564 rotations and 2048 images at 28%
2023-01-06 10:58:09,973 DEBUG Corresponding type is already real float64.
2023-01-06 10:58:09,973 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:58:24,796 INFO Computing data fidelity for 114564 rotations and 2048 images at 29%
2023-01-06 10:58:25,574 DEBUG Corresponding type is already real float64.
2023-01-06 10:58:25,574 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:58:39,486 INFO Computing data fidelity for 114564 rotations and 2048 images at 30%
2023-01-06 10:58:40,279 DEBUG Corresponding type is already real float64.
2023-01-06 10:58:40,279 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:58:55,084 INFO Computing data fidelity for 114564 rotations and 2048 images at 31%
2023-01-06 10:58:55,938 DEBUG Corresponding type is already real float64.
2023-01-06 10:58:55,938 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:59:10,565 INFO Computing data fidelity for 114564 rotations and 2048 images at 32%
2023-01-06 10:59:11,425 DEBUG Corresponding type is already real float64.
2023-01-06 10:59:11,426 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:59:26,031 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2023-01-06 10:59:26,868 DEBUG Corresponding type is already real float64.
2023-01-06 10:59:26,868 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:59:41,343 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2023-01-06 10:59:42,149 DEBUG Corresponding type is already real float64.
2023-01-06 10:59:42,150 DEBUG nufft passed real_type for signal, converting
2023-01-06 10:59:56,618 INFO Computing data fidelity for 114564 rotations and 2048 images at 34%
2023-01-06 10:59:57,459 DEBUG Corresponding type is already real float64.
2023-01-06 10:59:57,459 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:00:12,429 INFO Computing data fidelity for 114564 rotations and 2048 images at 35%
2023-01-06 11:00:13,259 DEBUG Corresponding type is already real float64.
2023-01-06 11:00:13,259 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:00:27,616 INFO Computing data fidelity for 114564 rotations and 2048 images at 36%
2023-01-06 11:00:28,390 DEBUG Corresponding type is already real float64.
2023-01-06 11:00:28,391 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:00:42,909 INFO Computing data fidelity for 114564 rotations and 2048 images at 37%
2023-01-06 11:00:43,757 DEBUG Corresponding type is already real float64.
2023-01-06 11:00:43,757 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:00:57,856 INFO Computing data fidelity for 114564 rotations and 2048 images at 38%
2023-01-06 11:00:58,689 DEBUG Corresponding type is already real float64.
2023-01-06 11:00:58,689 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:01:13,382 INFO Computing data fidelity for 114564 rotations and 2048 images at 39%
2023-01-06 11:01:14,187 DEBUG Corresponding type is already real float64.
2023-01-06 11:01:14,187 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:01:28,285 INFO Computing data fidelity for 114564 rotations and 2048 images at 40%
2023-01-06 11:01:29,072 DEBUG Corresponding type is already real float64.
2023-01-06 11:01:29,072 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:01:43,155 INFO Computing data fidelity for 114564 rotations and 2048 images at 41%
2023-01-06 11:01:43,956 DEBUG Corresponding type is already real float64.
2023-01-06 11:01:43,956 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:01:58,685 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2023-01-06 11:01:59,510 DEBUG Corresponding type is already real float64.
2023-01-06 11:01:59,510 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:02:14,361 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2023-01-06 11:02:15,279 DEBUG Corresponding type is already real float64.
2023-01-06 11:02:15,279 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:02:30,849 INFO Computing data fidelity for 114564 rotations and 2048 images at 43%
2023-01-06 11:02:31,706 DEBUG Corresponding type is already real float64.
2023-01-06 11:02:31,706 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:02:46,308 INFO Computing data fidelity for 114564 rotations and 2048 images at 44%
2023-01-06 11:02:47,103 DEBUG Corresponding type is already real float64.
2023-01-06 11:02:47,103 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:03:02,382 INFO Computing data fidelity for 114564 rotations and 2048 images at 45%
2023-01-06 11:03:03,246 DEBUG Corresponding type is already real float64.
2023-01-06 11:03:03,246 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:03:18,260 INFO Computing data fidelity for 114564 rotations and 2048 images at 46%
2023-01-06 11:03:19,129 DEBUG Corresponding type is already real float64.
2023-01-06 11:03:19,129 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:03:33,629 INFO Computing data fidelity for 114564 rotations and 2048 images at 47%
2023-01-06 11:03:34,429 DEBUG Corresponding type is already real float64.
2023-01-06 11:03:34,429 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:03:49,563 INFO Computing data fidelity for 114564 rotations and 2048 images at 48%
2023-01-06 11:03:50,510 DEBUG Corresponding type is already real float64.
2023-01-06 11:03:50,510 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:04:05,193 INFO Computing data fidelity for 114564 rotations and 2048 images at 49%
2023-01-06 11:04:06,072 DEBUG Corresponding type is already real float64.
2023-01-06 11:04:06,072 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:04:20,828 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2023-01-06 11:04:21,675 DEBUG Corresponding type is already real float64.
2023-01-06 11:04:21,676 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:04:36,580 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2023-01-06 11:04:37,367 DEBUG Corresponding type is already real float64.
2023-01-06 11:04:37,367 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:04:52,069 INFO Computing data fidelity for 114564 rotations and 2048 images at 51%
2023-01-06 11:04:52,873 DEBUG Corresponding type is already real float64.
2023-01-06 11:04:52,873 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:05:06,645 INFO Computing data fidelity for 114564 rotations and 2048 images at 52%
2023-01-06 11:05:07,595 DEBUG Corresponding type is already real float64.
2023-01-06 11:05:07,596 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:05:22,157 INFO Computing data fidelity for 114564 rotations and 2048 images at 53%
2023-01-06 11:05:22,928 DEBUG Corresponding type is already real float64.
2023-01-06 11:05:22,929 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:05:37,058 INFO Computing data fidelity for 114564 rotations and 2048 images at 54%
2023-01-06 11:05:37,833 DEBUG Corresponding type is already real float64.
2023-01-06 11:05:37,833 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:05:52,052 INFO Computing data fidelity for 114564 rotations and 2048 images at 55%
2023-01-06 11:05:52,921 DEBUG Corresponding type is already real float64.
2023-01-06 11:05:52,921 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:06:06,945 INFO Computing data fidelity for 114564 rotations and 2048 images at 56%
2023-01-06 11:06:07,711 DEBUG Corresponding type is already real float64.
2023-01-06 11:06:07,711 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:06:21,310 INFO Computing data fidelity for 114564 rotations and 2048 images at 57%
2023-01-06 11:06:22,072 DEBUG Corresponding type is already real float64.
2023-01-06 11:06:22,072 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:06:35,539 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2023-01-06 11:06:36,302 DEBUG Corresponding type is already real float64.
2023-01-06 11:06:36,302 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:06:49,815 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2023-01-06 11:06:50,569 DEBUG Corresponding type is already real float64.
2023-01-06 11:06:50,569 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:07:04,016 INFO Computing data fidelity for 114564 rotations and 2048 images at 59%
2023-01-06 11:07:04,769 DEBUG Corresponding type is already real float64.
2023-01-06 11:07:04,769 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:07:18,208 INFO Computing data fidelity for 114564 rotations and 2048 images at 60%
2023-01-06 11:07:18,962 DEBUG Corresponding type is already real float64.
2023-01-06 11:07:18,962 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:07:33,266 INFO Computing data fidelity for 114564 rotations and 2048 images at 61%
2023-01-06 11:07:34,019 DEBUG Corresponding type is already real float64.
2023-01-06 11:07:34,019 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:07:48,781 INFO Computing data fidelity for 114564 rotations and 2048 images at 62%
2023-01-06 11:07:49,618 DEBUG Corresponding type is already real float64.
2023-01-06 11:07:49,619 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:08:04,221 INFO Computing data fidelity for 114564 rotations and 2048 images at 63%
2023-01-06 11:08:04,997 DEBUG Corresponding type is already real float64.
2023-01-06 11:08:04,998 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:08:20,049 INFO Computing data fidelity for 114564 rotations and 2048 images at 64%
2023-01-06 11:08:20,962 DEBUG Corresponding type is already real float64.
2023-01-06 11:08:20,963 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:08:36,926 INFO Computing data fidelity for 114564 rotations and 2048 images at 65%
2023-01-06 11:08:37,797 DEBUG Corresponding type is already real float64.
2023-01-06 11:08:37,797 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:08:52,003 INFO Computing data fidelity for 114564 rotations and 2048 images at 66%
2023-01-06 11:08:52,797 DEBUG Corresponding type is already real float64.
2023-01-06 11:08:52,797 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:09:06,906 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2023-01-06 11:09:07,685 DEBUG Corresponding type is already real float64.
2023-01-06 11:09:07,685 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:09:21,779 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2023-01-06 11:09:22,551 DEBUG Corresponding type is already real float64.
2023-01-06 11:09:22,551 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:09:36,846 INFO Computing data fidelity for 114564 rotations and 2048 images at 68%
2023-01-06 11:09:37,622 DEBUG Corresponding type is already real float64.
2023-01-06 11:09:37,622 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:09:51,858 INFO Computing data fidelity for 114564 rotations and 2048 images at 69%
2023-01-06 11:09:52,621 DEBUG Corresponding type is already real float64.
2023-01-06 11:09:52,621 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:10:07,399 INFO Computing data fidelity for 114564 rotations and 2048 images at 70%
2023-01-06 11:10:08,277 DEBUG Corresponding type is already real float64.
2023-01-06 11:10:08,277 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:10:21,649 INFO Computing data fidelity for 114564 rotations and 2048 images at 71%
2023-01-06 11:10:22,431 DEBUG Corresponding type is already real float64.
2023-01-06 11:10:22,431 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:10:36,847 INFO Computing data fidelity for 114564 rotations and 2048 images at 72%
2023-01-06 11:10:37,657 DEBUG Corresponding type is already real float64.
2023-01-06 11:10:37,657 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:10:51,885 INFO Computing data fidelity for 114564 rotations and 2048 images at 73%
2023-01-06 11:10:52,739 DEBUG Corresponding type is already real float64.
2023-01-06 11:10:52,739 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:11:07,202 INFO Computing data fidelity for 114564 rotations and 2048 images at 74%
2023-01-06 11:11:07,980 DEBUG Corresponding type is already real float64.
2023-01-06 11:11:07,980 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:11:21,826 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2023-01-06 11:11:22,648 DEBUG Corresponding type is already real float64.
2023-01-06 11:11:22,648 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:11:36,556 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2023-01-06 11:11:37,326 DEBUG Corresponding type is already real float64.
2023-01-06 11:11:37,326 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:11:50,983 INFO Computing data fidelity for 114564 rotations and 2048 images at 76%
2023-01-06 11:11:51,763 DEBUG Corresponding type is already real float64.
2023-01-06 11:11:51,763 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:12:05,436 INFO Computing data fidelity for 114564 rotations and 2048 images at 77%
2023-01-06 11:12:06,198 DEBUG Corresponding type is already real float64.
2023-01-06 11:12:06,198 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:12:19,693 INFO Computing data fidelity for 114564 rotations and 2048 images at 78%
2023-01-06 11:12:20,448 DEBUG Corresponding type is already real float64.
2023-01-06 11:12:20,448 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:12:33,990 INFO Computing data fidelity for 114564 rotations and 2048 images at 79%
2023-01-06 11:12:34,745 DEBUG Corresponding type is already real float64.
2023-01-06 11:12:34,745 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:12:48,113 INFO Computing data fidelity for 114564 rotations and 2048 images at 80%
2023-01-06 11:12:48,869 DEBUG Corresponding type is already real float64.
2023-01-06 11:12:48,869 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:13:02,906 INFO Computing data fidelity for 114564 rotations and 2048 images at 81%
2023-01-06 11:13:03,660 DEBUG Corresponding type is already real float64.
2023-01-06 11:13:03,660 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:13:16,939 INFO Computing data fidelity for 114564 rotations and 2048 images at 82%
2023-01-06 11:13:17,690 DEBUG Corresponding type is already real float64.
2023-01-06 11:13:17,690 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:13:32,093 INFO Computing data fidelity for 114564 rotations and 2048 images at 83%
2023-01-06 11:13:32,979 DEBUG Corresponding type is already real float64.
2023-01-06 11:13:32,979 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:13:46,568 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2023-01-06 11:13:47,324 DEBUG Corresponding type is already real float64.
2023-01-06 11:13:47,324 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:14:00,810 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2023-01-06 11:14:01,567 DEBUG Corresponding type is already real float64.
2023-01-06 11:14:01,567 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:14:15,044 INFO Computing data fidelity for 114564 rotations and 2048 images at 85%
2023-01-06 11:14:15,805 DEBUG Corresponding type is already real float64.
2023-01-06 11:14:15,805 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:14:29,753 INFO Computing data fidelity for 114564 rotations and 2048 images at 86%
2023-01-06 11:14:30,562 DEBUG Corresponding type is already real float64.
2023-01-06 11:14:30,562 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:14:44,820 INFO Computing data fidelity for 114564 rotations and 2048 images at 87%
2023-01-06 11:14:45,645 DEBUG Corresponding type is already real float64.
2023-01-06 11:14:45,645 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:14:59,183 INFO Computing data fidelity for 114564 rotations and 2048 images at 88%
2023-01-06 11:14:59,938 DEBUG Corresponding type is already real float64.
2023-01-06 11:14:59,939 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:15:13,986 INFO Computing data fidelity for 114564 rotations and 2048 images at 89%
2023-01-06 11:15:14,800 DEBUG Corresponding type is already real float64.
2023-01-06 11:15:14,800 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:15:29,463 INFO Computing data fidelity for 114564 rotations and 2048 images at 90%
2023-01-06 11:15:30,272 DEBUG Corresponding type is already real float64.
2023-01-06 11:15:30,272 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:15:45,198 INFO Computing data fidelity for 114564 rotations and 2048 images at 91%
2023-01-06 11:15:46,027 DEBUG Corresponding type is already real float64.
2023-01-06 11:15:46,027 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:16:00,879 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2023-01-06 11:16:01,665 DEBUG Corresponding type is already real float64.
2023-01-06 11:16:01,665 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:16:15,134 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2023-01-06 11:16:15,905 DEBUG Corresponding type is already real float64.
2023-01-06 11:16:15,905 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:16:30,364 INFO Computing data fidelity for 114564 rotations and 2048 images at 93%
2023-01-06 11:16:31,126 DEBUG Corresponding type is already real float64.
2023-01-06 11:16:31,126 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:16:45,967 INFO Computing data fidelity for 114564 rotations and 2048 images at 94%
2023-01-06 11:16:46,737 DEBUG Corresponding type is already real float64.
2023-01-06 11:16:46,737 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:17:00,707 INFO Computing data fidelity for 114564 rotations and 2048 images at 95%
2023-01-06 11:17:01,530 DEBUG Corresponding type is already real float64.
2023-01-06 11:17:01,530 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:17:15,715 INFO Computing data fidelity for 114564 rotations and 2048 images at 96%
2023-01-06 11:17:16,496 DEBUG Corresponding type is already real float64.
2023-01-06 11:17:16,496 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:17:31,277 INFO Computing data fidelity for 114564 rotations and 2048 images at 97%
2023-01-06 11:17:32,116 DEBUG Corresponding type is already real float64.
2023-01-06 11:17:32,116 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:17:47,508 INFO Computing data fidelity for 114564 rotations and 2048 images at 98%
2023-01-06 11:17:48,360 DEBUG Corresponding type is already real float64.
2023-01-06 11:17:48,360 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:18:03,015 INFO Computing data fidelity for 114564 rotations and 2048 images at 99%
2023-01-06 11:18:03,590 DEBUG Corresponding type is already real float64.
2023-01-06 11:18:03,590 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:18:16,583 INFO Computing data fidelity for 114564 rotations and 2048 images at 100%
2023-01-06 11:18:19,677 INFO Do lambda update step
2023-01-06 11:18:44,785 INFO Do rots update step
2023-01-06 11:18:45,945 INFO Projecting 2048 vectors onto 114564-simplex at 2%
2023-01-06 11:18:46,708 INFO Projecting 2048 vectors onto 114564-simplex at 4%
2023-01-06 11:18:47,457 INFO Projecting 2048 vectors onto 114564-simplex at 7%
2023-01-06 11:18:48,162 INFO Projecting 2048 vectors onto 114564-simplex at 9%
2023-01-06 11:18:48,875 INFO Projecting 2048 vectors onto 114564-simplex at 12%
2023-01-06 11:18:49,567 INFO Projecting 2048 vectors onto 114564-simplex at 14%
2023-01-06 11:18:50,264 INFO Projecting 2048 vectors onto 114564-simplex at 17%
2023-01-06 11:18:50,993 INFO Projecting 2048 vectors onto 114564-simplex at 19%
2023-01-06 11:18:51,698 INFO Projecting 2048 vectors onto 114564-simplex at 21%
2023-01-06 11:18:52,391 INFO Projecting 2048 vectors onto 114564-simplex at 24%
2023-01-06 11:18:53,309 INFO Projecting 2048 vectors onto 114564-simplex at 26%
2023-01-06 11:18:54,068 INFO Projecting 2048 vectors onto 114564-simplex at 29%
2023-01-06 11:18:54,797 INFO Projecting 2048 vectors onto 114564-simplex at 31%
2023-01-06 11:18:55,497 INFO Projecting 2048 vectors onto 114564-simplex at 34%
2023-01-06 11:18:56,174 INFO Projecting 2048 vectors onto 114564-simplex at 36%
2023-01-06 11:18:56,858 INFO Projecting 2048 vectors onto 114564-simplex at 39%
2023-01-06 11:18:57,534 INFO Projecting 2048 vectors onto 114564-simplex at 41%
2023-01-06 11:18:58,221 INFO Projecting 2048 vectors onto 114564-simplex at 43%
2023-01-06 11:18:58,909 INFO Projecting 2048 vectors onto 114564-simplex at 46%
2023-01-06 11:18:59,594 INFO Projecting 2048 vectors onto 114564-simplex at 48%
2023-01-06 11:19:00,479 INFO Projecting 2048 vectors onto 114564-simplex at 51%
2023-01-06 11:19:01,178 INFO Projecting 2048 vectors onto 114564-simplex at 53%
2023-01-06 11:19:01,863 INFO Projecting 2048 vectors onto 114564-simplex at 56%
2023-01-06 11:19:02,582 INFO Projecting 2048 vectors onto 114564-simplex at 58%
2023-01-06 11:19:03,302 INFO Projecting 2048 vectors onto 114564-simplex at 61%
2023-01-06 11:19:03,999 INFO Projecting 2048 vectors onto 114564-simplex at 63%
2023-01-06 11:19:04,677 INFO Projecting 2048 vectors onto 114564-simplex at 65%
2023-01-06 11:19:05,348 INFO Projecting 2048 vectors onto 114564-simplex at 68%
2023-01-06 11:19:06,044 INFO Projecting 2048 vectors onto 114564-simplex at 70%
2023-01-06 11:19:06,751 INFO Projecting 2048 vectors onto 114564-simplex at 73%
2023-01-06 11:19:07,640 INFO Projecting 2048 vectors onto 114564-simplex at 75%
2023-01-06 11:19:08,341 INFO Projecting 2048 vectors onto 114564-simplex at 78%
2023-01-06 11:19:09,044 INFO Projecting 2048 vectors onto 114564-simplex at 80%
2023-01-06 11:19:09,721 INFO Projecting 2048 vectors onto 114564-simplex at 83%
2023-01-06 11:19:10,458 INFO Projecting 2048 vectors onto 114564-simplex at 85%
2023-01-06 11:19:11,166 INFO Projecting 2048 vectors onto 114564-simplex at 87%
2023-01-06 11:19:11,861 INFO Projecting 2048 vectors onto 114564-simplex at 90%
2023-01-06 11:19:12,553 INFO Projecting 2048 vectors onto 114564-simplex at 92%
2023-01-06 11:19:13,269 INFO Projecting 2048 vectors onto 114564-simplex at 95%
2023-01-06 11:19:13,980 INFO Projecting 2048 vectors onto 114564-simplex at 97%
2023-01-06 11:19:14,649 INFO Projecting 2048 vectors onto 114564-simplex at 100%
2023-01-06 11:19:16,708 INFO Computing 50 means of 29658 points in at most 20 steps...
2023-01-06 11:19:20,600 INFO Computing 2048 means at 2%
2023-01-06 11:19:20,695 INFO Computing 50 means of 29994 points in at most 20 steps...
2023-01-06 11:19:24,693 INFO Computing 2048 means at 4%
2023-01-06 11:19:24,785 INFO Computing 50 means of 27886 points in at most 20 steps...
2023-01-06 11:19:28,706 INFO Computing 2048 means at 7%
2023-01-06 11:19:28,793 INFO Computing 50 means of 28890 points in at most 20 steps...
2023-01-06 11:19:32,717 INFO Computing 2048 means at 9%
2023-01-06 11:19:32,804 INFO Computing 50 means of 30246 points in at most 20 steps...
2023-01-06 11:19:36,874 INFO Computing 2048 means at 12%
2023-01-06 11:19:36,964 INFO Computing 50 means of 28834 points in at most 20 steps...
2023-01-06 11:19:40,886 INFO Computing 2048 means at 14%
2023-01-06 11:19:40,975 INFO Computing 50 means of 29660 points in at most 20 steps...
2023-01-06 11:19:45,198 INFO Computing 2048 means at 17%
2023-01-06 11:19:45,295 INFO Computing 50 means of 30938 points in at most 20 steps...
2023-01-06 11:19:49,770 INFO Computing 2048 means at 19%
2023-01-06 11:19:49,863 INFO Computing 50 means of 30254 points in at most 20 steps...
2023-01-06 11:19:54,168 INFO Computing 2048 means at 21%
2023-01-06 11:19:54,268 INFO Computing 50 means of 27885 points in at most 20 steps...
2023-01-06 11:19:58,056 INFO Computing 2048 means at 24%
2023-01-06 11:19:58,149 INFO Computing 50 means of 28339 points in at most 20 steps...
2023-01-06 11:20:01,971 INFO Computing 2048 means at 26%
2023-01-06 11:20:02,059 INFO Computing 50 means of 28121 points in at most 20 steps...
2023-01-06 11:20:05,847 INFO Computing 2048 means at 29%
2023-01-06 11:20:05,935 INFO Computing 50 means of 30994 points in at most 20 steps...
2023-01-06 11:20:10,209 INFO Computing 2048 means at 31%
2023-01-06 11:20:10,303 INFO Computing 50 means of 31031 points in at most 20 steps...
2023-01-06 11:20:14,683 INFO Computing 2048 means at 34%
2023-01-06 11:20:14,781 INFO Computing 50 means of 28316 points in at most 20 steps...
2023-01-06 11:20:18,771 INFO Computing 2048 means at 36%
2023-01-06 11:20:18,861 INFO Computing 50 means of 31544 points in at most 20 steps...
2023-01-06 11:20:23,286 INFO Computing 2048 means at 39%
2023-01-06 11:20:23,386 INFO Computing 50 means of 27805 points in at most 20 steps...
2023-01-06 11:20:27,244 INFO Computing 2048 means at 41%
2023-01-06 11:20:27,339 INFO Computing 50 means of 26150 points in at most 20 steps...
2023-01-06 11:20:30,845 INFO Computing 2048 means at 43%
2023-01-06 11:20:30,933 INFO Computing 50 means of 28444 points in at most 20 steps...
2023-01-06 11:20:34,882 INFO Computing 2048 means at 46%
2023-01-06 11:20:34,974 INFO Computing 50 means of 30619 points in at most 20 steps...
2023-01-06 11:20:39,024 INFO Computing 2048 means at 48%
2023-01-06 11:20:39,117 INFO Computing 50 means of 28085 points in at most 20 steps...
2023-01-06 11:20:42,643 INFO Computing 2048 means at 51%
2023-01-06 11:20:42,731 INFO Computing 50 means of 30514 points in at most 20 steps...
2023-01-06 11:20:46,661 INFO Computing 2048 means at 53%
2023-01-06 11:20:46,756 INFO Computing 50 means of 30642 points in at most 20 steps...
2023-01-06 11:20:50,824 INFO Computing 2048 means at 56%
2023-01-06 11:20:50,918 INFO Computing 50 means of 29190 points in at most 20 steps...
2023-01-06 11:20:54,491 INFO Computing 2048 means at 58%
2023-01-06 11:20:54,573 INFO Computing 50 means of 29548 points in at most 20 steps...
2023-01-06 11:20:58,202 INFO Computing 2048 means at 61%
2023-01-06 11:20:58,287 INFO Computing 50 means of 30316 points in at most 20 steps...
2023-01-06 11:21:02,461 INFO Computing 2048 means at 63%
2023-01-06 11:21:02,551 INFO Computing 50 means of 28050 points in at most 20 steps...
2023-01-06 11:21:06,259 INFO Computing 2048 means at 65%
2023-01-06 11:21:06,346 INFO Computing 50 means of 31873 points in at most 20 steps...
2023-01-06 11:21:10,280 INFO Computing 2048 means at 68%
2023-01-06 11:21:10,369 INFO Computing 50 means of 27050 points in at most 20 steps...
2023-01-06 11:21:13,931 INFO Computing 2048 means at 70%
2023-01-06 11:21:14,013 INFO Computing 50 means of 31028 points in at most 20 steps...
2023-01-06 11:21:18,169 INFO Computing 2048 means at 73%
2023-01-06 11:21:18,274 INFO Computing 50 means of 29263 points in at most 20 steps...
2023-01-06 11:21:22,071 INFO Computing 2048 means at 75%
2023-01-06 11:21:22,165 INFO Computing 50 means of 30640 points in at most 20 steps...
2023-01-06 11:21:26,376 INFO Computing 2048 means at 78%
2023-01-06 11:21:26,461 INFO Computing 50 means of 31686 points in at most 20 steps...
2023-01-06 11:21:30,756 INFO Computing 2048 means at 80%
2023-01-06 11:21:30,851 INFO Computing 50 means of 27183 points in at most 20 steps...
2023-01-06 11:21:34,464 INFO Computing 2048 means at 83%
2023-01-06 11:21:34,552 INFO Computing 50 means of 29634 points in at most 20 steps...
2023-01-06 11:21:38,308 INFO Computing 2048 means at 85%
2023-01-06 11:21:38,393 INFO Computing 50 means of 29672 points in at most 20 steps...
2023-01-06 11:21:42,275 INFO Computing 2048 means at 87%
2023-01-06 11:21:42,365 INFO Computing 50 means of 29359 points in at most 20 steps...
2023-01-06 11:21:46,291 INFO Computing 2048 means at 90%
2023-01-06 11:21:46,378 INFO Computing 50 means of 32076 points in at most 20 steps...
2023-01-06 11:21:50,796 INFO Computing 2048 means at 92%
2023-01-06 11:21:50,888 INFO Computing 50 means of 29680 points in at most 20 steps...
2023-01-06 11:21:54,794 INFO Computing 2048 means at 95%
2023-01-06 11:21:54,881 INFO Computing 50 means of 29468 points in at most 20 steps...
2023-01-06 11:21:58,583 INFO Computing 2048 means at 97%
2023-01-06 11:21:58,675 INFO Computing 48 means of 26111 points in at most 20 steps...
2023-01-06 11:22:01,795 INFO Computing 2048 means at 100%
2023-01-06 11:22:06,902 INFO Do vol update step
2023-01-06 11:22:06,904 INFO Compute adjoint forward mapping on the images
2023-01-06 11:22:08,557 DEBUG Corresponding type is already complex complex128.
2023-01-06 11:22:11,025 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2023-01-06 11:22:11,041 INFO Computing adjoint forward mappings from 2048 rotations at 50%
2023-01-06 11:22:12,573 DEBUG Corresponding type is already complex complex128.
2023-01-06 11:22:15,040 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2023-01-06 11:22:15,051 INFO Computing adjoint forward mappings from 2048 rotations at 100%
2023-01-06 11:22:15,926 DEBUG Corresponding type is already real float64.
2023-01-06 11:22:15,927 DEBUG anufft passed real_type for signal, converting
2023-01-06 11:22:22,791 INFO Computing kernel from 2048 rotations at 50%
2023-01-06 11:22:23,844 DEBUG Corresponding type is already real float64.
2023-01-06 11:22:23,844 DEBUG anufft passed real_type for signal, converting
2023-01-06 11:22:30,824 INFO Computing kernel from 2048 rotations at 100%
2023-01-06 11:22:30,826 INFO Computing non-centered Fourier Transform
2023-01-06 11:22:31,004 INFO Add ramp filter regularisation
2023-01-06 11:22:35,088 INFO Update data_discrepancies
2023-01-06 11:22:35,089 INFO Computing \|Ag.u - f_i\|^2
2023-01-06 11:22:35,945 DEBUG Corresponding type is already real float64.
2023-01-06 11:22:35,945 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:22:49,652 INFO Computing data fidelity for 114564 rotations and 2048 images at 0%
2023-01-06 11:22:50,422 DEBUG Corresponding type is already real float64.
2023-01-06 11:22:50,422 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:23:05,043 INFO Computing data fidelity for 114564 rotations and 2048 images at 1%
2023-01-06 11:23:05,817 DEBUG Corresponding type is already real float64.
2023-01-06 11:23:05,817 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:23:19,746 INFO Computing data fidelity for 114564 rotations and 2048 images at 2%
2023-01-06 11:23:20,507 DEBUG Corresponding type is already real float64.
2023-01-06 11:23:20,507 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:23:34,619 INFO Computing data fidelity for 114564 rotations and 2048 images at 3%
2023-01-06 11:23:35,387 DEBUG Corresponding type is already real float64.
2023-01-06 11:23:35,388 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:23:48,938 INFO Computing data fidelity for 114564 rotations and 2048 images at 4%
2023-01-06 11:23:49,708 DEBUG Corresponding type is already real float64.
2023-01-06 11:23:49,708 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:24:02,863 INFO Computing data fidelity for 114564 rotations and 2048 images at 5%
2023-01-06 11:24:03,609 DEBUG Corresponding type is already real float64.
2023-01-06 11:24:03,609 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:24:16,664 INFO Computing data fidelity for 114564 rotations and 2048 images at 6%
2023-01-06 11:24:17,396 DEBUG Corresponding type is already real float64.
2023-01-06 11:24:17,396 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:24:30,360 INFO Computing data fidelity for 114564 rotations and 2048 images at 7%
2023-01-06 11:24:31,086 DEBUG Corresponding type is already real float64.
2023-01-06 11:24:31,087 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:24:44,260 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2023-01-06 11:24:44,980 DEBUG Corresponding type is already real float64.
2023-01-06 11:24:44,980 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:24:57,911 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2023-01-06 11:24:58,625 DEBUG Corresponding type is already real float64.
2023-01-06 11:24:58,626 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:25:11,611 INFO Computing data fidelity for 114564 rotations and 2048 images at 9%
2023-01-06 11:25:12,324 DEBUG Corresponding type is already real float64.
2023-01-06 11:25:12,325 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:25:25,221 INFO Computing data fidelity for 114564 rotations and 2048 images at 10%
2023-01-06 11:25:25,936 DEBUG Corresponding type is already real float64.
2023-01-06 11:25:25,936 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:25:39,242 INFO Computing data fidelity for 114564 rotations and 2048 images at 11%
2023-01-06 11:25:39,968 DEBUG Corresponding type is already real float64.
2023-01-06 11:25:39,968 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:25:52,961 INFO Computing data fidelity for 114564 rotations and 2048 images at 12%
2023-01-06 11:25:53,688 DEBUG Corresponding type is already real float64.
2023-01-06 11:25:53,688 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:26:06,875 INFO Computing data fidelity for 114564 rotations and 2048 images at 13%
2023-01-06 11:26:07,607 DEBUG Corresponding type is already real float64.
2023-01-06 11:26:07,607 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:26:20,634 INFO Computing data fidelity for 114564 rotations and 2048 images at 14%
2023-01-06 11:26:21,372 DEBUG Corresponding type is already real float64.
2023-01-06 11:26:21,372 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:26:34,488 INFO Computing data fidelity for 114564 rotations and 2048 images at 15%
2023-01-06 11:26:35,257 DEBUG Corresponding type is already real float64.
2023-01-06 11:26:35,257 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:26:48,284 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2023-01-06 11:26:49,025 DEBUG Corresponding type is already real float64.
2023-01-06 11:26:49,025 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:27:02,045 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2023-01-06 11:27:02,783 DEBUG Corresponding type is already real float64.
2023-01-06 11:27:02,783 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:27:15,740 INFO Computing data fidelity for 114564 rotations and 2048 images at 17%
2023-01-06 11:27:16,489 DEBUG Corresponding type is already real float64.
2023-01-06 11:27:16,489 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:27:29,519 INFO Computing data fidelity for 114564 rotations and 2048 images at 18%
2023-01-06 11:27:30,264 DEBUG Corresponding type is already real float64.
2023-01-06 11:27:30,264 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:27:45,084 INFO Computing data fidelity for 114564 rotations and 2048 images at 19%
2023-01-06 11:27:45,828 DEBUG Corresponding type is already real float64.
2023-01-06 11:27:45,828 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:27:59,576 INFO Computing data fidelity for 114564 rotations and 2048 images at 20%
2023-01-06 11:28:00,321 DEBUG Corresponding type is already real float64.
2023-01-06 11:28:00,321 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:28:14,022 INFO Computing data fidelity for 114564 rotations and 2048 images at 21%
2023-01-06 11:28:14,770 DEBUG Corresponding type is already real float64.
2023-01-06 11:28:14,770 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:28:28,125 INFO Computing data fidelity for 114564 rotations and 2048 images at 22%
2023-01-06 11:28:28,878 DEBUG Corresponding type is already real float64.
2023-01-06 11:28:28,878 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:28:42,362 INFO Computing data fidelity for 114564 rotations and 2048 images at 23%
2023-01-06 11:28:43,114 DEBUG Corresponding type is already real float64.
2023-01-06 11:28:43,114 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:28:56,473 INFO Computing data fidelity for 114564 rotations and 2048 images at 24%
2023-01-06 11:28:57,219 DEBUG Corresponding type is already real float64.
2023-01-06 11:28:57,219 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:29:10,525 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2023-01-06 11:29:11,268 DEBUG Corresponding type is already real float64.
2023-01-06 11:29:11,268 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:29:24,487 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2023-01-06 11:29:25,247 DEBUG Corresponding type is already real float64.
2023-01-06 11:29:25,247 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:29:39,280 INFO Computing data fidelity for 114564 rotations and 2048 images at 26%
2023-01-06 11:29:40,031 DEBUG Corresponding type is already real float64.
2023-01-06 11:29:40,031 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:29:54,041 INFO Computing data fidelity for 114564 rotations and 2048 images at 27%
2023-01-06 11:29:54,807 DEBUG Corresponding type is already real float64.
2023-01-06 11:29:54,808 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:30:08,728 INFO Computing data fidelity for 114564 rotations and 2048 images at 28%
2023-01-06 11:30:09,485 DEBUG Corresponding type is already real float64.
2023-01-06 11:30:09,485 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:30:23,781 INFO Computing data fidelity for 114564 rotations and 2048 images at 29%
2023-01-06 11:30:24,534 DEBUG Corresponding type is already real float64.
2023-01-06 11:30:24,535 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:30:38,629 INFO Computing data fidelity for 114564 rotations and 2048 images at 30%
2023-01-06 11:30:39,391 DEBUG Corresponding type is already real float64.
2023-01-06 11:30:39,391 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:30:53,290 INFO Computing data fidelity for 114564 rotations and 2048 images at 31%
2023-01-06 11:30:54,035 DEBUG Corresponding type is already real float64.
2023-01-06 11:30:54,035 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:31:07,891 INFO Computing data fidelity for 114564 rotations and 2048 images at 32%
2023-01-06 11:31:08,649 DEBUG Corresponding type is already real float64.
2023-01-06 11:31:08,650 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:31:22,218 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2023-01-06 11:31:22,969 DEBUG Corresponding type is already real float64.
2023-01-06 11:31:22,969 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:31:36,443 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2023-01-06 11:31:37,195 DEBUG Corresponding type is already real float64.
2023-01-06 11:31:37,195 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:31:50,769 INFO Computing data fidelity for 114564 rotations and 2048 images at 34%
2023-01-06 11:31:51,539 DEBUG Corresponding type is already real float64.
2023-01-06 11:31:51,539 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:32:05,477 INFO Computing data fidelity for 114564 rotations and 2048 images at 35%
2023-01-06 11:32:06,368 DEBUG Corresponding type is already real float64.
2023-01-06 11:32:06,369 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:32:21,942 INFO Computing data fidelity for 114564 rotations and 2048 images at 36%
2023-01-06 11:32:22,741 DEBUG Corresponding type is already real float64.
2023-01-06 11:32:22,741 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:32:37,486 INFO Computing data fidelity for 114564 rotations and 2048 images at 37%
2023-01-06 11:32:38,266 DEBUG Corresponding type is already real float64.
2023-01-06 11:32:38,266 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:32:52,803 INFO Computing data fidelity for 114564 rotations and 2048 images at 38%
2023-01-06 11:32:53,576 DEBUG Corresponding type is already real float64.
2023-01-06 11:32:53,577 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:33:08,677 INFO Computing data fidelity for 114564 rotations and 2048 images at 39%
2023-01-06 11:33:09,470 DEBUG Corresponding type is already real float64.
2023-01-06 11:33:09,470 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:33:24,327 INFO Computing data fidelity for 114564 rotations and 2048 images at 40%
2023-01-06 11:33:25,144 DEBUG Corresponding type is already real float64.
2023-01-06 11:33:25,144 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:33:40,116 INFO Computing data fidelity for 114564 rotations and 2048 images at 41%
2023-01-06 11:33:40,892 DEBUG Corresponding type is already real float64.
2023-01-06 11:33:40,892 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:33:55,333 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2023-01-06 11:33:56,113 DEBUG Corresponding type is already real float64.
2023-01-06 11:33:56,114 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:34:11,071 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2023-01-06 11:34:11,911 DEBUG Corresponding type is already real float64.
2023-01-06 11:34:11,911 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:34:26,966 INFO Computing data fidelity for 114564 rotations and 2048 images at 43%
2023-01-06 11:34:27,855 DEBUG Corresponding type is already real float64.
2023-01-06 11:34:27,856 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:34:42,953 INFO Computing data fidelity for 114564 rotations and 2048 images at 44%
2023-01-06 11:34:43,810 DEBUG Corresponding type is already real float64.
2023-01-06 11:34:43,810 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:34:59,113 INFO Computing data fidelity for 114564 rotations and 2048 images at 45%
2023-01-06 11:34:59,932 DEBUG Corresponding type is already real float64.
2023-01-06 11:34:59,932 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:35:15,063 INFO Computing data fidelity for 114564 rotations and 2048 images at 46%
2023-01-06 11:35:15,870 DEBUG Corresponding type is already real float64.
2023-01-06 11:35:15,870 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:35:30,961 INFO Computing data fidelity for 114564 rotations and 2048 images at 47%
2023-01-06 11:35:31,799 DEBUG Corresponding type is already real float64.
2023-01-06 11:35:31,799 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:35:46,612 INFO Computing data fidelity for 114564 rotations and 2048 images at 48%
2023-01-06 11:35:47,392 DEBUG Corresponding type is already real float64.
2023-01-06 11:35:47,392 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:36:02,240 INFO Computing data fidelity for 114564 rotations and 2048 images at 49%
2023-01-06 11:36:03,063 DEBUG Corresponding type is already real float64.
2023-01-06 11:36:03,063 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:36:18,271 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2023-01-06 11:36:19,113 DEBUG Corresponding type is already real float64.
2023-01-06 11:36:19,113 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:36:34,593 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2023-01-06 11:36:35,457 DEBUG Corresponding type is already real float64.
2023-01-06 11:36:35,457 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:36:50,268 INFO Computing data fidelity for 114564 rotations and 2048 images at 51%
2023-01-06 11:36:51,085 DEBUG Corresponding type is already real float64.
2023-01-06 11:36:51,086 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:37:05,703 INFO Computing data fidelity for 114564 rotations and 2048 images at 52%
2023-01-06 11:37:06,553 DEBUG Corresponding type is already real float64.
2023-01-06 11:37:06,553 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:37:21,429 INFO Computing data fidelity for 114564 rotations and 2048 images at 53%
2023-01-06 11:37:22,218 DEBUG Corresponding type is already real float64.
2023-01-06 11:37:22,220 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:37:36,535 INFO Computing data fidelity for 114564 rotations and 2048 images at 54%
2023-01-06 11:37:37,401 DEBUG Corresponding type is already real float64.
2023-01-06 11:37:37,401 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:37:52,064 INFO Computing data fidelity for 114564 rotations and 2048 images at 55%
2023-01-06 11:37:52,855 DEBUG Corresponding type is already real float64.
2023-01-06 11:37:52,855 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:38:07,471 INFO Computing data fidelity for 114564 rotations and 2048 images at 56%
2023-01-06 11:38:08,294 DEBUG Corresponding type is already real float64.
2023-01-06 11:38:08,294 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:38:22,456 INFO Computing data fidelity for 114564 rotations and 2048 images at 57%
2023-01-06 11:38:23,246 DEBUG Corresponding type is already real float64.
2023-01-06 11:38:23,247 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:38:37,500 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2023-01-06 11:38:38,299 DEBUG Corresponding type is already real float64.
2023-01-06 11:38:38,299 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:38:53,207 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2023-01-06 11:38:54,032 DEBUG Corresponding type is already real float64.
2023-01-06 11:38:54,033 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:39:08,957 INFO Computing data fidelity for 114564 rotations and 2048 images at 59%
2023-01-06 11:39:09,774 DEBUG Corresponding type is already real float64.
2023-01-06 11:39:09,774 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:39:24,564 INFO Computing data fidelity for 114564 rotations and 2048 images at 60%
2023-01-06 11:39:25,435 DEBUG Corresponding type is already real float64.
2023-01-06 11:39:25,435 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:39:40,228 INFO Computing data fidelity for 114564 rotations and 2048 images at 61%
2023-01-06 11:39:41,019 DEBUG Corresponding type is already real float64.
2023-01-06 11:39:41,019 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:39:55,952 INFO Computing data fidelity for 114564 rotations and 2048 images at 62%
2023-01-06 11:39:56,782 DEBUG Corresponding type is already real float64.
2023-01-06 11:39:56,782 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:40:11,367 INFO Computing data fidelity for 114564 rotations and 2048 images at 63%
2023-01-06 11:40:12,278 DEBUG Corresponding type is already real float64.
2023-01-06 11:40:12,278 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:40:27,411 INFO Computing data fidelity for 114564 rotations and 2048 images at 64%
2023-01-06 11:40:28,225 DEBUG Corresponding type is already real float64.
2023-01-06 11:40:28,225 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:40:43,473 INFO Computing data fidelity for 114564 rotations and 2048 images at 65%
2023-01-06 11:40:44,280 DEBUG Corresponding type is already real float64.
2023-01-06 11:40:44,280 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:40:58,998 INFO Computing data fidelity for 114564 rotations and 2048 images at 66%
2023-01-06 11:40:59,787 DEBUG Corresponding type is already real float64.
2023-01-06 11:40:59,787 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:41:13,974 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2023-01-06 11:41:14,776 DEBUG Corresponding type is already real float64.
2023-01-06 11:41:14,776 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:41:28,517 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2023-01-06 11:41:29,364 DEBUG Corresponding type is already real float64.
2023-01-06 11:41:29,364 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:41:43,861 INFO Computing data fidelity for 114564 rotations and 2048 images at 68%
2023-01-06 11:41:44,771 DEBUG Corresponding type is already real float64.
2023-01-06 11:41:44,772 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:41:58,841 INFO Computing data fidelity for 114564 rotations and 2048 images at 69%
2023-01-06 11:41:59,620 DEBUG Corresponding type is already real float64.
2023-01-06 11:41:59,621 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:42:13,673 INFO Computing data fidelity for 114564 rotations and 2048 images at 70%
2023-01-06 11:42:14,443 DEBUG Corresponding type is already real float64.
2023-01-06 11:42:14,444 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:42:28,089 INFO Computing data fidelity for 114564 rotations and 2048 images at 71%
2023-01-06 11:42:28,907 DEBUG Corresponding type is already real float64.
2023-01-06 11:42:28,907 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:42:43,093 INFO Computing data fidelity for 114564 rotations and 2048 images at 72%
2023-01-06 11:42:43,942 DEBUG Corresponding type is already real float64.
2023-01-06 11:42:43,942 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:42:58,700 INFO Computing data fidelity for 114564 rotations and 2048 images at 73%
2023-01-06 11:42:59,600 DEBUG Corresponding type is already real float64.
2023-01-06 11:42:59,601 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:43:13,965 INFO Computing data fidelity for 114564 rotations and 2048 images at 74%
2023-01-06 11:43:14,838 DEBUG Corresponding type is already real float64.
2023-01-06 11:43:14,839 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:43:29,566 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2023-01-06 11:43:30,366 DEBUG Corresponding type is already real float64.
2023-01-06 11:43:30,367 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:43:44,469 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2023-01-06 11:43:45,240 DEBUG Corresponding type is already real float64.
2023-01-06 11:43:45,240 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:43:59,286 INFO Computing data fidelity for 114564 rotations and 2048 images at 76%
2023-01-06 11:44:00,065 DEBUG Corresponding type is already real float64.
2023-01-06 11:44:00,066 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:44:14,762 INFO Computing data fidelity for 114564 rotations and 2048 images at 77%
2023-01-06 11:44:15,620 DEBUG Corresponding type is already real float64.
2023-01-06 11:44:15,620 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:44:30,308 INFO Computing data fidelity for 114564 rotations and 2048 images at 78%
2023-01-06 11:44:31,112 DEBUG Corresponding type is already real float64.
2023-01-06 11:44:31,112 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:44:46,198 INFO Computing data fidelity for 114564 rotations and 2048 images at 79%
2023-01-06 11:44:46,977 DEBUG Corresponding type is already real float64.
2023-01-06 11:44:46,977 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:45:00,714 INFO Computing data fidelity for 114564 rotations and 2048 images at 80%
2023-01-06 11:45:01,496 DEBUG Corresponding type is already real float64.
2023-01-06 11:45:01,496 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:45:15,669 INFO Computing data fidelity for 114564 rotations and 2048 images at 81%
2023-01-06 11:45:16,482 DEBUG Corresponding type is already real float64.
2023-01-06 11:45:16,482 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:45:30,598 INFO Computing data fidelity for 114564 rotations and 2048 images at 82%
2023-01-06 11:45:31,372 DEBUG Corresponding type is already real float64.
2023-01-06 11:45:31,372 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:45:45,319 INFO Computing data fidelity for 114564 rotations and 2048 images at 83%
2023-01-06 11:45:46,153 DEBUG Corresponding type is already real float64.
2023-01-06 11:45:46,153 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:46:00,526 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2023-01-06 11:46:01,346 DEBUG Corresponding type is already real float64.
2023-01-06 11:46:01,346 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:46:15,368 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2023-01-06 11:46:16,169 DEBUG Corresponding type is already real float64.
2023-01-06 11:46:16,170 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:46:30,119 INFO Computing data fidelity for 114564 rotations and 2048 images at 85%
2023-01-06 11:46:30,967 DEBUG Corresponding type is already real float64.
2023-01-06 11:46:30,967 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:46:45,301 INFO Computing data fidelity for 114564 rotations and 2048 images at 86%
2023-01-06 11:46:46,077 DEBUG Corresponding type is already real float64.
2023-01-06 11:46:46,077 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:46:59,952 INFO Computing data fidelity for 114564 rotations and 2048 images at 87%
2023-01-06 11:47:00,731 DEBUG Corresponding type is already real float64.
2023-01-06 11:47:00,731 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:47:14,274 INFO Computing data fidelity for 114564 rotations and 2048 images at 88%
2023-01-06 11:47:15,071 DEBUG Corresponding type is already real float64.
2023-01-06 11:47:15,071 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:47:29,930 INFO Computing data fidelity for 114564 rotations and 2048 images at 89%
2023-01-06 11:47:30,769 DEBUG Corresponding type is already real float64.
2023-01-06 11:47:30,769 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:47:45,304 INFO Computing data fidelity for 114564 rotations and 2048 images at 90%
2023-01-06 11:47:46,119 DEBUG Corresponding type is already real float64.
2023-01-06 11:47:46,119 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:48:01,141 INFO Computing data fidelity for 114564 rotations and 2048 images at 91%
2023-01-06 11:48:01,992 DEBUG Corresponding type is already real float64.
2023-01-06 11:48:01,992 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:48:17,067 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2023-01-06 11:48:17,847 DEBUG Corresponding type is already real float64.
2023-01-06 11:48:17,847 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:48:31,970 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2023-01-06 11:48:32,746 DEBUG Corresponding type is already real float64.
2023-01-06 11:48:32,746 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:48:46,595 INFO Computing data fidelity for 114564 rotations and 2048 images at 93%
2023-01-06 11:48:47,368 DEBUG Corresponding type is already real float64.
2023-01-06 11:48:47,368 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:49:01,329 INFO Computing data fidelity for 114564 rotations and 2048 images at 94%
2023-01-06 11:49:02,141 DEBUG Corresponding type is already real float64.
2023-01-06 11:49:02,141 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:49:16,799 INFO Computing data fidelity for 114564 rotations and 2048 images at 95%
2023-01-06 11:49:17,570 DEBUG Corresponding type is already real float64.
2023-01-06 11:49:17,570 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:49:31,125 INFO Computing data fidelity for 114564 rotations and 2048 images at 96%
2023-01-06 11:49:31,905 DEBUG Corresponding type is already real float64.
2023-01-06 11:49:31,906 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:49:45,723 INFO Computing data fidelity for 114564 rotations and 2048 images at 97%
2023-01-06 11:49:46,512 DEBUG Corresponding type is already real float64.
2023-01-06 11:49:46,512 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:50:00,201 INFO Computing data fidelity for 114564 rotations and 2048 images at 98%
2023-01-06 11:50:00,977 DEBUG Corresponding type is already real float64.
2023-01-06 11:50:00,977 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:50:14,790 INFO Computing data fidelity for 114564 rotations and 2048 images at 99%
2023-01-06 11:50:15,270 DEBUG Corresponding type is already real float64.
2023-01-06 11:50:15,270 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:50:27,835 INFO Computing data fidelity for 114564 rotations and 2048 images at 100%
2023-01-06 11:50:30,779 INFO Do lambda update step
2023-01-06 11:50:56,251 INFO Do rots update step
2023-01-06 11:50:57,142 INFO Projecting 2048 vectors onto 114564-simplex at 2%
2023-01-06 11:50:57,809 INFO Projecting 2048 vectors onto 114564-simplex at 4%
2023-01-06 11:50:58,432 INFO Projecting 2048 vectors onto 114564-simplex at 7%
2023-01-06 11:50:59,051 INFO Projecting 2048 vectors onto 114564-simplex at 9%
2023-01-06 11:50:59,668 INFO Projecting 2048 vectors onto 114564-simplex at 12%
2023-01-06 11:51:00,294 INFO Projecting 2048 vectors onto 114564-simplex at 14%
2023-01-06 11:51:00,917 INFO Projecting 2048 vectors onto 114564-simplex at 17%
2023-01-06 11:51:01,599 INFO Projecting 2048 vectors onto 114564-simplex at 19%
2023-01-06 11:51:02,271 INFO Projecting 2048 vectors onto 114564-simplex at 21%
2023-01-06 11:51:02,969 INFO Projecting 2048 vectors onto 114564-simplex at 24%
2023-01-06 11:51:03,867 INFO Projecting 2048 vectors onto 114564-simplex at 26%
2023-01-06 11:51:04,563 INFO Projecting 2048 vectors onto 114564-simplex at 29%
2023-01-06 11:51:05,276 INFO Projecting 2048 vectors onto 114564-simplex at 31%
2023-01-06 11:51:05,959 INFO Projecting 2048 vectors onto 114564-simplex at 34%
2023-01-06 11:51:06,595 INFO Projecting 2048 vectors onto 114564-simplex at 36%
2023-01-06 11:51:07,228 INFO Projecting 2048 vectors onto 114564-simplex at 39%
2023-01-06 11:51:07,849 INFO Projecting 2048 vectors onto 114564-simplex at 41%
2023-01-06 11:51:08,478 INFO Projecting 2048 vectors onto 114564-simplex at 43%
2023-01-06 11:51:09,101 INFO Projecting 2048 vectors onto 114564-simplex at 46%
2023-01-06 11:51:09,803 INFO Projecting 2048 vectors onto 114564-simplex at 48%
2023-01-06 11:51:10,702 INFO Projecting 2048 vectors onto 114564-simplex at 51%
2023-01-06 11:51:11,398 INFO Projecting 2048 vectors onto 114564-simplex at 53%
2023-01-06 11:51:12,085 INFO Projecting 2048 vectors onto 114564-simplex at 56%
2023-01-06 11:51:12,761 INFO Projecting 2048 vectors onto 114564-simplex at 58%
2023-01-06 11:51:13,453 INFO Projecting 2048 vectors onto 114564-simplex at 61%
2023-01-06 11:51:14,141 INFO Projecting 2048 vectors onto 114564-simplex at 63%
2023-01-06 11:51:14,764 INFO Projecting 2048 vectors onto 114564-simplex at 65%
2023-01-06 11:51:15,413 INFO Projecting 2048 vectors onto 114564-simplex at 68%
2023-01-06 11:51:16,076 INFO Projecting 2048 vectors onto 114564-simplex at 70%
2023-01-06 11:51:16,800 INFO Projecting 2048 vectors onto 114564-simplex at 73%
2023-01-06 11:51:17,706 INFO Projecting 2048 vectors onto 114564-simplex at 75%
2023-01-06 11:51:18,422 INFO Projecting 2048 vectors onto 114564-simplex at 78%
2023-01-06 11:51:19,144 INFO Projecting 2048 vectors onto 114564-simplex at 80%
2023-01-06 11:51:19,828 INFO Projecting 2048 vectors onto 114564-simplex at 83%
2023-01-06 11:51:20,537 INFO Projecting 2048 vectors onto 114564-simplex at 85%
2023-01-06 11:51:21,222 INFO Projecting 2048 vectors onto 114564-simplex at 87%
2023-01-06 11:51:21,891 INFO Projecting 2048 vectors onto 114564-simplex at 90%
2023-01-06 11:51:22,566 INFO Projecting 2048 vectors onto 114564-simplex at 92%
2023-01-06 11:51:23,179 INFO Projecting 2048 vectors onto 114564-simplex at 95%
2023-01-06 11:51:23,794 INFO Projecting 2048 vectors onto 114564-simplex at 97%
2023-01-06 11:51:24,444 INFO Projecting 2048 vectors onto 114564-simplex at 100%
2023-01-06 11:51:25,853 INFO Computing 50 means of 30563 points in at most 20 steps...
2023-01-06 11:51:29,505 INFO Computing 2048 means at 2%
2023-01-06 11:51:29,590 INFO Computing 50 means of 28636 points in at most 20 steps...
2023-01-06 11:51:33,071 INFO Computing 2048 means at 4%
2023-01-06 11:51:33,152 INFO Computing 50 means of 28847 points in at most 20 steps...
2023-01-06 11:51:36,637 INFO Computing 2048 means at 7%
2023-01-06 11:51:36,717 INFO Computing 50 means of 29396 points in at most 20 steps...
2023-01-06 11:51:40,613 INFO Computing 2048 means at 9%
2023-01-06 11:51:40,705 INFO Computing 50 means of 31226 points in at most 20 steps...
2023-01-06 11:51:44,919 INFO Computing 2048 means at 12%
2023-01-06 11:51:45,014 INFO Computing 50 means of 30322 points in at most 20 steps...
2023-01-06 11:51:49,229 INFO Computing 2048 means at 14%
2023-01-06 11:51:49,322 INFO Computing 50 means of 30540 points in at most 20 steps...
2023-01-06 11:51:53,425 INFO Computing 2048 means at 17%
2023-01-06 11:51:53,512 INFO Computing 50 means of 30921 points in at most 20 steps...
2023-01-06 11:51:57,535 INFO Computing 2048 means at 19%
2023-01-06 11:51:57,618 INFO Computing 50 means of 28951 points in at most 20 steps...
2023-01-06 11:52:01,506 INFO Computing 2048 means at 21%
2023-01-06 11:52:01,602 INFO Computing 50 means of 28285 points in at most 20 steps...
2023-01-06 11:52:05,473 INFO Computing 2048 means at 24%
2023-01-06 11:52:05,573 INFO Computing 50 means of 29223 points in at most 20 steps...
2023-01-06 11:52:09,423 INFO Computing 2048 means at 26%
2023-01-06 11:52:09,510 INFO Computing 50 means of 29611 points in at most 20 steps...
2023-01-06 11:52:13,627 INFO Computing 2048 means at 29%
2023-01-06 11:52:13,719 INFO Computing 50 means of 33987 points in at most 20 steps...
2023-01-06 11:52:18,525 INFO Computing 2048 means at 31%
2023-01-06 11:52:18,626 INFO Computing 50 means of 29381 points in at most 20 steps...
2023-01-06 11:52:22,871 INFO Computing 2048 means at 34%
2023-01-06 11:52:22,958 INFO Computing 50 means of 28510 points in at most 20 steps...
2023-01-06 11:52:26,837 INFO Computing 2048 means at 36%
2023-01-06 11:52:26,931 INFO Computing 50 means of 30425 points in at most 20 steps...
2023-01-06 11:52:31,138 INFO Computing 2048 means at 39%
2023-01-06 11:52:31,223 INFO Computing 50 means of 27989 points in at most 20 steps...
2023-01-06 11:52:35,395 INFO Computing 2048 means at 41%
2023-01-06 11:52:35,491 INFO Computing 50 means of 28041 points in at most 20 steps...
2023-01-06 11:52:39,867 INFO Computing 2048 means at 43%
2023-01-06 11:52:39,962 INFO Computing 50 means of 29135 points in at most 20 steps...
2023-01-06 11:52:44,200 INFO Computing 2048 means at 46%
2023-01-06 11:52:44,296 INFO Computing 50 means of 32005 points in at most 20 steps...
2023-01-06 11:52:49,138 INFO Computing 2048 means at 48%
2023-01-06 11:52:49,262 INFO Computing 50 means of 28220 points in at most 20 steps...
2023-01-06 11:52:53,584 INFO Computing 2048 means at 51%
2023-01-06 11:52:53,684 INFO Computing 50 means of 30202 points in at most 20 steps...
2023-01-06 11:52:58,393 INFO Computing 2048 means at 53%
2023-01-06 11:52:58,496 INFO Computing 50 means of 29560 points in at most 20 steps...
2023-01-06 11:53:02,630 INFO Computing 2048 means at 56%
2023-01-06 11:53:02,726 INFO Computing 50 means of 29244 points in at most 20 steps...
2023-01-06 11:53:06,807 INFO Computing 2048 means at 58%
2023-01-06 11:53:06,903 INFO Computing 50 means of 28688 points in at most 20 steps...
2023-01-06 11:53:10,945 INFO Computing 2048 means at 61%
2023-01-06 11:53:11,036 INFO Computing 50 means of 30407 points in at most 20 steps...
2023-01-06 11:53:15,046 INFO Computing 2048 means at 63%
2023-01-06 11:53:15,135 INFO Computing 50 means of 28591 points in at most 20 steps...
2023-01-06 11:53:18,958 INFO Computing 2048 means at 65%
2023-01-06 11:53:19,045 INFO Computing 50 means of 30336 points in at most 20 steps...
2023-01-06 11:53:23,213 INFO Computing 2048 means at 68%
2023-01-06 11:53:23,308 INFO Computing 50 means of 29041 points in at most 20 steps...
2023-01-06 11:53:27,430 INFO Computing 2048 means at 70%
2023-01-06 11:53:27,531 INFO Computing 50 means of 29704 points in at most 20 steps...
2023-01-06 11:53:31,662 INFO Computing 2048 means at 73%
2023-01-06 11:53:31,773 INFO Computing 50 means of 30034 points in at most 20 steps...
2023-01-06 11:53:36,033 INFO Computing 2048 means at 75%
2023-01-06 11:53:36,135 INFO Computing 50 means of 30137 points in at most 20 steps...
2023-01-06 11:53:40,268 INFO Computing 2048 means at 78%
2023-01-06 11:53:40,362 INFO Computing 50 means of 29500 points in at most 20 steps...
2023-01-06 11:53:44,519 INFO Computing 2048 means at 80%
2023-01-06 11:53:44,626 INFO Computing 50 means of 26176 points in at most 20 steps...
2023-01-06 11:53:48,528 INFO Computing 2048 means at 83%
2023-01-06 11:53:48,621 INFO Computing 50 means of 29421 points in at most 20 steps...
2023-01-06 11:53:52,922 INFO Computing 2048 means at 85%
2023-01-06 11:53:53,016 INFO Computing 50 means of 30956 points in at most 20 steps...
2023-01-06 11:53:57,431 INFO Computing 2048 means at 87%
2023-01-06 11:53:57,519 INFO Computing 50 means of 31091 points in at most 20 steps...
2023-01-06 11:54:01,745 INFO Computing 2048 means at 90%
2023-01-06 11:54:01,834 INFO Computing 50 means of 31800 points in at most 20 steps...
2023-01-06 11:54:06,223 INFO Computing 2048 means at 92%
2023-01-06 11:54:06,314 INFO Computing 50 means of 30401 points in at most 20 steps...
2023-01-06 11:54:10,364 INFO Computing 2048 means at 95%
2023-01-06 11:54:10,451 INFO Computing 50 means of 29741 points in at most 20 steps...
2023-01-06 11:54:14,367 INFO Computing 2048 means at 97%
2023-01-06 11:54:14,456 INFO Computing 48 means of 28612 points in at most 20 steps...
2023-01-06 11:54:18,210 INFO Computing 2048 means at 100%
2023-01-06 11:54:23,991 INFO Do vol update step
2023-01-06 11:54:23,995 INFO Compute adjoint forward mapping on the images
2023-01-06 11:54:26,112 DEBUG Corresponding type is already complex complex128.
2023-01-06 11:54:28,912 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2023-01-06 11:54:28,931 INFO Computing adjoint forward mappings from 2048 rotations at 50%
2023-01-06 11:54:30,737 DEBUG Corresponding type is already complex complex128.
2023-01-06 11:54:33,460 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2023-01-06 11:54:33,477 INFO Computing adjoint forward mappings from 2048 rotations at 100%
2023-01-06 11:54:34,424 DEBUG Corresponding type is already real float64.
2023-01-06 11:54:34,424 DEBUG anufft passed real_type for signal, converting
2023-01-06 11:54:41,334 INFO Computing kernel from 2048 rotations at 50%
2023-01-06 11:54:42,283 DEBUG Corresponding type is already real float64.
2023-01-06 11:54:42,283 DEBUG anufft passed real_type for signal, converting
2023-01-06 11:54:49,963 INFO Computing kernel from 2048 rotations at 100%
2023-01-06 11:54:49,965 INFO Computing non-centered Fourier Transform
2023-01-06 11:54:50,140 INFO Add ramp filter regularisation
2023-01-06 11:54:54,578 INFO Update data_discrepancies
2023-01-06 11:54:54,579 INFO Computing \|Ag.u - f_i\|^2
2023-01-06 11:54:55,513 DEBUG Corresponding type is already real float64.
2023-01-06 11:54:55,514 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:55:09,394 INFO Computing data fidelity for 114564 rotations and 2048 images at 0%
2023-01-06 11:55:10,153 DEBUG Corresponding type is already real float64.
2023-01-06 11:55:10,153 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:55:23,621 INFO Computing data fidelity for 114564 rotations and 2048 images at 1%
2023-01-06 11:55:24,376 DEBUG Corresponding type is already real float64.
2023-01-06 11:55:24,377 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:55:37,911 INFO Computing data fidelity for 114564 rotations and 2048 images at 2%
2023-01-06 11:55:38,676 DEBUG Corresponding type is already real float64.
2023-01-06 11:55:38,676 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:55:53,284 INFO Computing data fidelity for 114564 rotations and 2048 images at 3%
2023-01-06 11:55:54,045 DEBUG Corresponding type is already real float64.
2023-01-06 11:55:54,045 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:56:08,465 INFO Computing data fidelity for 114564 rotations and 2048 images at 4%
2023-01-06 11:56:09,288 DEBUG Corresponding type is already real float64.
2023-01-06 11:56:09,288 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:56:23,499 INFO Computing data fidelity for 114564 rotations and 2048 images at 5%
2023-01-06 11:56:24,255 DEBUG Corresponding type is already real float64.
2023-01-06 11:56:24,255 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:56:37,460 INFO Computing data fidelity for 114564 rotations and 2048 images at 6%
2023-01-06 11:56:38,196 DEBUG Corresponding type is already real float64.
2023-01-06 11:56:38,197 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:56:51,690 INFO Computing data fidelity for 114564 rotations and 2048 images at 7%
2023-01-06 11:56:52,535 DEBUG Corresponding type is already real float64.
2023-01-06 11:56:52,535 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:57:07,082 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2023-01-06 11:57:07,824 DEBUG Corresponding type is already real float64.
2023-01-06 11:57:07,825 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:57:21,100 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2023-01-06 11:57:21,859 DEBUG Corresponding type is already real float64.
2023-01-06 11:57:21,860 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:57:35,678 INFO Computing data fidelity for 114564 rotations and 2048 images at 9%
2023-01-06 11:57:36,455 DEBUG Corresponding type is already real float64.
2023-01-06 11:57:36,455 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:57:50,854 INFO Computing data fidelity for 114564 rotations and 2048 images at 10%
2023-01-06 11:57:51,644 DEBUG Corresponding type is already real float64.
2023-01-06 11:57:51,645 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:58:05,808 INFO Computing data fidelity for 114564 rotations and 2048 images at 11%
2023-01-06 11:58:06,574 DEBUG Corresponding type is already real float64.
2023-01-06 11:58:06,574 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:58:22,175 INFO Computing data fidelity for 114564 rotations and 2048 images at 12%
2023-01-06 11:58:23,025 DEBUG Corresponding type is already real float64.
2023-01-06 11:58:23,026 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:58:38,089 INFO Computing data fidelity for 114564 rotations and 2048 images at 13%
2023-01-06 11:58:38,877 DEBUG Corresponding type is already real float64.
2023-01-06 11:58:38,877 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:58:53,335 INFO Computing data fidelity for 114564 rotations and 2048 images at 14%
2023-01-06 11:58:54,115 DEBUG Corresponding type is already real float64.
2023-01-06 11:58:54,115 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:59:07,878 INFO Computing data fidelity for 114564 rotations and 2048 images at 15%
2023-01-06 11:59:08,661 DEBUG Corresponding type is already real float64.
2023-01-06 11:59:08,661 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:59:22,486 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2023-01-06 11:59:23,303 DEBUG Corresponding type is already real float64.
2023-01-06 11:59:23,303 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:59:38,180 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2023-01-06 11:59:39,022 DEBUG Corresponding type is already real float64.
2023-01-06 11:59:39,022 DEBUG nufft passed real_type for signal, converting
2023-01-06 11:59:53,830 INFO Computing data fidelity for 114564 rotations and 2048 images at 17%
2023-01-06 11:59:54,610 DEBUG Corresponding type is already real float64.
2023-01-06 11:59:54,610 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:00:08,178 INFO Computing data fidelity for 114564 rotations and 2048 images at 18%
2023-01-06 12:00:08,950 DEBUG Corresponding type is already real float64.
2023-01-06 12:00:08,950 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:00:23,171 INFO Computing data fidelity for 114564 rotations and 2048 images at 19%
2023-01-06 12:00:24,059 DEBUG Corresponding type is already real float64.
2023-01-06 12:00:24,059 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:00:38,296 INFO Computing data fidelity for 114564 rotations and 2048 images at 20%
2023-01-06 12:00:39,073 DEBUG Corresponding type is already real float64.
2023-01-06 12:00:39,073 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:00:53,248 INFO Computing data fidelity for 114564 rotations and 2048 images at 21%
2023-01-06 12:00:54,111 DEBUG Corresponding type is already real float64.
2023-01-06 12:00:54,112 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:01:09,318 INFO Computing data fidelity for 114564 rotations and 2048 images at 22%
2023-01-06 12:01:10,104 DEBUG Corresponding type is already real float64.
2023-01-06 12:01:10,104 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:01:23,664 INFO Computing data fidelity for 114564 rotations and 2048 images at 23%
2023-01-06 12:01:24,445 DEBUG Corresponding type is already real float64.
2023-01-06 12:01:24,445 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:01:38,042 INFO Computing data fidelity for 114564 rotations and 2048 images at 24%
2023-01-06 12:01:38,830 DEBUG Corresponding type is already real float64.
2023-01-06 12:01:38,830 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:01:52,670 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2023-01-06 12:01:53,515 DEBUG Corresponding type is already real float64.
2023-01-06 12:01:53,516 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:02:07,232 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2023-01-06 12:02:08,003 DEBUG Corresponding type is already real float64.
2023-01-06 12:02:08,003 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:02:21,448 INFO Computing data fidelity for 114564 rotations and 2048 images at 26%
2023-01-06 12:02:22,252 DEBUG Corresponding type is already real float64.
2023-01-06 12:02:22,253 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:02:35,684 INFO Computing data fidelity for 114564 rotations and 2048 images at 27%
2023-01-06 12:02:36,470 DEBUG Corresponding type is already real float64.
2023-01-06 12:02:36,470 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:02:49,928 INFO Computing data fidelity for 114564 rotations and 2048 images at 28%
2023-01-06 12:02:50,704 DEBUG Corresponding type is already real float64.
2023-01-06 12:02:50,704 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:03:04,657 INFO Computing data fidelity for 114564 rotations and 2048 images at 29%
2023-01-06 12:03:05,441 DEBUG Corresponding type is already real float64.
2023-01-06 12:03:05,441 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:03:18,962 INFO Computing data fidelity for 114564 rotations and 2048 images at 30%
2023-01-06 12:03:19,728 DEBUG Corresponding type is already real float64.
2023-01-06 12:03:19,728 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:03:33,196 INFO Computing data fidelity for 114564 rotations and 2048 images at 31%
2023-01-06 12:03:33,969 DEBUG Corresponding type is already real float64.
2023-01-06 12:03:33,969 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:03:47,479 INFO Computing data fidelity for 114564 rotations and 2048 images at 32%
2023-01-06 12:03:48,242 DEBUG Corresponding type is already real float64.
2023-01-06 12:03:48,243 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:04:01,677 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2023-01-06 12:04:02,440 DEBUG Corresponding type is already real float64.
2023-01-06 12:04:02,440 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:04:15,867 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2023-01-06 12:04:16,629 DEBUG Corresponding type is already real float64.
2023-01-06 12:04:16,629 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:04:30,058 INFO Computing data fidelity for 114564 rotations and 2048 images at 34%
2023-01-06 12:04:30,816 DEBUG Corresponding type is already real float64.
2023-01-06 12:04:30,816 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:04:44,288 INFO Computing data fidelity for 114564 rotations and 2048 images at 35%
2023-01-06 12:04:45,048 DEBUG Corresponding type is already real float64.
2023-01-06 12:04:45,048 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:04:58,557 INFO Computing data fidelity for 114564 rotations and 2048 images at 36%
2023-01-06 12:04:59,335 DEBUG Corresponding type is already real float64.
2023-01-06 12:04:59,335 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:05:12,752 INFO Computing data fidelity for 114564 rotations and 2048 images at 37%
2023-01-06 12:05:13,511 DEBUG Corresponding type is already real float64.
2023-01-06 12:05:13,511 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:05:26,933 INFO Computing data fidelity for 114564 rotations and 2048 images at 38%
2023-01-06 12:05:27,679 DEBUG Corresponding type is already real float64.
2023-01-06 12:05:27,679 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:05:41,263 INFO Computing data fidelity for 114564 rotations and 2048 images at 39%
2023-01-06 12:05:42,030 DEBUG Corresponding type is already real float64.
2023-01-06 12:05:42,030 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:05:55,479 INFO Computing data fidelity for 114564 rotations and 2048 images at 40%
2023-01-06 12:05:56,241 DEBUG Corresponding type is already real float64.
2023-01-06 12:05:56,241 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:06:09,792 INFO Computing data fidelity for 114564 rotations and 2048 images at 41%
2023-01-06 12:06:10,551 DEBUG Corresponding type is already real float64.
2023-01-06 12:06:10,552 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:06:24,606 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2023-01-06 12:06:25,377 DEBUG Corresponding type is already real float64.
2023-01-06 12:06:25,377 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:06:39,388 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2023-01-06 12:06:40,279 DEBUG Corresponding type is already real float64.
2023-01-06 12:06:40,280 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:06:54,317 INFO Computing data fidelity for 114564 rotations and 2048 images at 43%
2023-01-06 12:06:55,077 DEBUG Corresponding type is already real float64.
2023-01-06 12:06:55,077 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:07:08,987 INFO Computing data fidelity for 114564 rotations and 2048 images at 44%
2023-01-06 12:07:09,751 DEBUG Corresponding type is already real float64.
2023-01-06 12:07:09,751 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:07:23,829 INFO Computing data fidelity for 114564 rotations and 2048 images at 45%
2023-01-06 12:07:24,616 DEBUG Corresponding type is already real float64.
2023-01-06 12:07:24,616 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:07:39,079 INFO Computing data fidelity for 114564 rotations and 2048 images at 46%
2023-01-06 12:07:39,857 DEBUG Corresponding type is already real float64.
2023-01-06 12:07:39,857 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:07:54,122 INFO Computing data fidelity for 114564 rotations and 2048 images at 47%
2023-01-06 12:07:54,928 DEBUG Corresponding type is already real float64.
2023-01-06 12:07:54,928 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:08:08,963 INFO Computing data fidelity for 114564 rotations and 2048 images at 48%
2023-01-06 12:08:09,716 DEBUG Corresponding type is already real float64.
2023-01-06 12:08:09,716 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:08:23,440 INFO Computing data fidelity for 114564 rotations and 2048 images at 49%
2023-01-06 12:08:24,197 DEBUG Corresponding type is already real float64.
2023-01-06 12:08:24,198 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:08:37,910 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2023-01-06 12:08:38,666 DEBUG Corresponding type is already real float64.
2023-01-06 12:08:38,666 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:08:52,487 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2023-01-06 12:08:53,248 DEBUG Corresponding type is already real float64.
2023-01-06 12:08:53,248 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:09:07,238 INFO Computing data fidelity for 114564 rotations and 2048 images at 51%
2023-01-06 12:09:08,006 DEBUG Corresponding type is already real float64.
2023-01-06 12:09:08,006 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:09:21,855 INFO Computing data fidelity for 114564 rotations and 2048 images at 52%
2023-01-06 12:09:22,616 DEBUG Corresponding type is already real float64.
2023-01-06 12:09:22,616 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:09:36,381 INFO Computing data fidelity for 114564 rotations and 2048 images at 53%
2023-01-06 12:09:37,148 DEBUG Corresponding type is already real float64.
2023-01-06 12:09:37,148 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:09:51,037 INFO Computing data fidelity for 114564 rotations and 2048 images at 54%
2023-01-06 12:09:51,806 DEBUG Corresponding type is already real float64.
2023-01-06 12:09:51,806 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:10:05,676 INFO Computing data fidelity for 114564 rotations and 2048 images at 55%
2023-01-06 12:10:06,434 DEBUG Corresponding type is already real float64.
2023-01-06 12:10:06,435 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:10:20,223 INFO Computing data fidelity for 114564 rotations and 2048 images at 56%
2023-01-06 12:10:20,993 DEBUG Corresponding type is already real float64.
2023-01-06 12:10:20,993 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:10:34,983 INFO Computing data fidelity for 114564 rotations and 2048 images at 57%
2023-01-06 12:10:35,736 DEBUG Corresponding type is already real float64.
2023-01-06 12:10:35,736 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:10:49,047 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2023-01-06 12:10:49,797 DEBUG Corresponding type is already real float64.
2023-01-06 12:10:49,797 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:11:03,192 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2023-01-06 12:11:03,939 DEBUG Corresponding type is already real float64.
2023-01-06 12:11:03,940 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:11:17,369 INFO Computing data fidelity for 114564 rotations and 2048 images at 59%
2023-01-06 12:11:18,135 DEBUG Corresponding type is already real float64.
2023-01-06 12:11:18,135 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:11:32,446 INFO Computing data fidelity for 114564 rotations and 2048 images at 60%
2023-01-06 12:11:33,238 DEBUG Corresponding type is already real float64.
2023-01-06 12:11:33,238 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:11:46,492 INFO Computing data fidelity for 114564 rotations and 2048 images at 61%
2023-01-06 12:11:47,238 DEBUG Corresponding type is already real float64.
2023-01-06 12:11:47,238 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:12:00,314 INFO Computing data fidelity for 114564 rotations and 2048 images at 62%
2023-01-06 12:12:01,060 DEBUG Corresponding type is already real float64.
2023-01-06 12:12:01,060 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:12:14,119 INFO Computing data fidelity for 114564 rotations and 2048 images at 63%
2023-01-06 12:12:14,864 DEBUG Corresponding type is already real float64.
2023-01-06 12:12:14,865 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:12:28,008 INFO Computing data fidelity for 114564 rotations and 2048 images at 64%
2023-01-06 12:12:28,751 DEBUG Corresponding type is already real float64.
2023-01-06 12:12:28,751 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:12:41,886 INFO Computing data fidelity for 114564 rotations and 2048 images at 65%
2023-01-06 12:12:42,635 DEBUG Corresponding type is already real float64.
2023-01-06 12:12:42,635 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:12:55,973 INFO Computing data fidelity for 114564 rotations and 2048 images at 66%
2023-01-06 12:12:56,751 DEBUG Corresponding type is already real float64.
2023-01-06 12:12:56,751 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:13:09,930 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2023-01-06 12:13:10,683 DEBUG Corresponding type is already real float64.
2023-01-06 12:13:10,684 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:13:23,779 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2023-01-06 12:13:24,534 DEBUG Corresponding type is already real float64.
2023-01-06 12:13:24,534 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:13:37,709 INFO Computing data fidelity for 114564 rotations and 2048 images at 68%
2023-01-06 12:13:38,449 DEBUG Corresponding type is already real float64.
2023-01-06 12:13:38,450 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:13:51,638 INFO Computing data fidelity for 114564 rotations and 2048 images at 69%
2023-01-06 12:13:52,383 DEBUG Corresponding type is already real float64.
2023-01-06 12:13:52,384 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:14:05,491 INFO Computing data fidelity for 114564 rotations and 2048 images at 70%
2023-01-06 12:14:06,246 DEBUG Corresponding type is already real float64.
2023-01-06 12:14:06,246 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:14:19,568 INFO Computing data fidelity for 114564 rotations and 2048 images at 71%
2023-01-06 12:14:20,320 DEBUG Corresponding type is already real float64.
2023-01-06 12:14:20,320 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:14:33,448 INFO Computing data fidelity for 114564 rotations and 2048 images at 72%
2023-01-06 12:14:34,185 DEBUG Corresponding type is already real float64.
2023-01-06 12:14:34,185 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:14:47,272 INFO Computing data fidelity for 114564 rotations and 2048 images at 73%
2023-01-06 12:14:48,013 DEBUG Corresponding type is already real float64.
2023-01-06 12:14:48,013 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:15:01,042 INFO Computing data fidelity for 114564 rotations and 2048 images at 74%
2023-01-06 12:15:01,784 DEBUG Corresponding type is already real float64.
2023-01-06 12:15:01,785 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:15:14,836 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2023-01-06 12:15:15,572 DEBUG Corresponding type is already real float64.
2023-01-06 12:15:15,572 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:15:28,697 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2023-01-06 12:15:29,434 DEBUG Corresponding type is already real float64.
2023-01-06 12:15:29,434 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:15:42,603 INFO Computing data fidelity for 114564 rotations and 2048 images at 76%
2023-01-06 12:15:43,351 DEBUG Corresponding type is already real float64.
2023-01-06 12:15:43,351 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:15:56,401 INFO Computing data fidelity for 114564 rotations and 2048 images at 77%
2023-01-06 12:15:57,131 DEBUG Corresponding type is already real float64.
2023-01-06 12:15:57,131 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:16:10,148 INFO Computing data fidelity for 114564 rotations and 2048 images at 78%
2023-01-06 12:16:10,894 DEBUG Corresponding type is already real float64.
2023-01-06 12:16:10,894 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:16:23,986 INFO Computing data fidelity for 114564 rotations and 2048 images at 79%
2023-01-06 12:16:24,733 DEBUG Corresponding type is already real float64.
2023-01-06 12:16:24,733 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:16:37,826 INFO Computing data fidelity for 114564 rotations and 2048 images at 80%
2023-01-06 12:16:38,564 DEBUG Corresponding type is already real float64.
2023-01-06 12:16:38,565 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:16:51,664 INFO Computing data fidelity for 114564 rotations and 2048 images at 81%
2023-01-06 12:16:52,409 DEBUG Corresponding type is already real float64.
2023-01-06 12:16:52,409 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:17:05,472 INFO Computing data fidelity for 114564 rotations and 2048 images at 82%
2023-01-06 12:17:06,207 DEBUG Corresponding type is already real float64.
2023-01-06 12:17:06,207 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:17:19,243 INFO Computing data fidelity for 114564 rotations and 2048 images at 83%
2023-01-06 12:17:19,978 DEBUG Corresponding type is already real float64.
2023-01-06 12:17:19,978 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:17:33,093 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2023-01-06 12:17:33,835 DEBUG Corresponding type is already real float64.
2023-01-06 12:17:33,836 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:17:46,915 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2023-01-06 12:17:47,646 DEBUG Corresponding type is already real float64.
2023-01-06 12:17:47,646 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:18:00,679 INFO Computing data fidelity for 114564 rotations and 2048 images at 85%
2023-01-06 12:18:01,432 DEBUG Corresponding type is already real float64.
2023-01-06 12:18:01,432 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:18:14,861 INFO Computing data fidelity for 114564 rotations and 2048 images at 86%
2023-01-06 12:18:15,603 DEBUG Corresponding type is already real float64.
2023-01-06 12:18:15,604 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:18:28,645 INFO Computing data fidelity for 114564 rotations and 2048 images at 87%
2023-01-06 12:18:29,379 DEBUG Corresponding type is already real float64.
2023-01-06 12:18:29,379 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:18:42,451 INFO Computing data fidelity for 114564 rotations and 2048 images at 88%
2023-01-06 12:18:43,193 DEBUG Corresponding type is already real float64.
2023-01-06 12:18:43,193 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:18:56,477 INFO Computing data fidelity for 114564 rotations and 2048 images at 89%
2023-01-06 12:18:57,222 DEBUG Corresponding type is already real float64.
2023-01-06 12:18:57,222 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:19:10,362 INFO Computing data fidelity for 114564 rotations and 2048 images at 90%
2023-01-06 12:19:11,112 DEBUG Corresponding type is already real float64.
2023-01-06 12:19:11,113 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:19:24,194 INFO Computing data fidelity for 114564 rotations and 2048 images at 91%
2023-01-06 12:19:24,950 DEBUG Corresponding type is already real float64.
2023-01-06 12:19:24,950 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:19:38,101 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2023-01-06 12:19:38,871 DEBUG Corresponding type is already real float64.
2023-01-06 12:19:38,871 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:19:52,031 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2023-01-06 12:19:52,786 DEBUG Corresponding type is already real float64.
2023-01-06 12:19:52,786 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:20:05,872 INFO Computing data fidelity for 114564 rotations and 2048 images at 93%
2023-01-06 12:20:06,613 DEBUG Corresponding type is already real float64.
2023-01-06 12:20:06,614 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:20:19,668 INFO Computing data fidelity for 114564 rotations and 2048 images at 94%
2023-01-06 12:20:20,411 DEBUG Corresponding type is already real float64.
2023-01-06 12:20:20,411 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:20:33,549 INFO Computing data fidelity for 114564 rotations and 2048 images at 95%
2023-01-06 12:20:34,292 DEBUG Corresponding type is already real float64.
2023-01-06 12:20:34,292 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:20:47,581 INFO Computing data fidelity for 114564 rotations and 2048 images at 96%
2023-01-06 12:20:48,354 DEBUG Corresponding type is already real float64.
2023-01-06 12:20:48,354 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:21:02,392 INFO Computing data fidelity for 114564 rotations and 2048 images at 97%
2023-01-06 12:21:03,144 DEBUG Corresponding type is already real float64.
2023-01-06 12:21:03,144 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:21:16,238 INFO Computing data fidelity for 114564 rotations and 2048 images at 98%
2023-01-06 12:21:16,977 DEBUG Corresponding type is already real float64.
2023-01-06 12:21:16,977 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:21:30,044 INFO Computing data fidelity for 114564 rotations and 2048 images at 99%
2023-01-06 12:21:30,499 DEBUG Corresponding type is already real float64.
2023-01-06 12:21:30,499 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:21:41,999 INFO Computing data fidelity for 114564 rotations and 2048 images at 100%
2023-01-06 12:21:43,852 INFO Do lambda update step
2023-01-06 12:22:06,519 INFO Do rots update step
2023-01-06 12:22:07,334 INFO Projecting 2048 vectors onto 114564-simplex at 2%
2023-01-06 12:22:07,938 INFO Projecting 2048 vectors onto 114564-simplex at 4%
2023-01-06 12:22:08,551 INFO Projecting 2048 vectors onto 114564-simplex at 7%
2023-01-06 12:22:09,159 INFO Projecting 2048 vectors onto 114564-simplex at 9%
2023-01-06 12:22:09,765 INFO Projecting 2048 vectors onto 114564-simplex at 12%
2023-01-06 12:22:10,372 INFO Projecting 2048 vectors onto 114564-simplex at 14%
2023-01-06 12:22:10,989 INFO Projecting 2048 vectors onto 114564-simplex at 17%
2023-01-06 12:22:11,591 INFO Projecting 2048 vectors onto 114564-simplex at 19%
2023-01-06 12:22:12,194 INFO Projecting 2048 vectors onto 114564-simplex at 21%
2023-01-06 12:22:12,802 INFO Projecting 2048 vectors onto 114564-simplex at 24%
2023-01-06 12:22:13,573 INFO Projecting 2048 vectors onto 114564-simplex at 26%
2023-01-06 12:22:14,190 INFO Projecting 2048 vectors onto 114564-simplex at 29%
2023-01-06 12:22:14,807 INFO Projecting 2048 vectors onto 114564-simplex at 31%
2023-01-06 12:22:15,411 INFO Projecting 2048 vectors onto 114564-simplex at 34%
2023-01-06 12:22:16,020 INFO Projecting 2048 vectors onto 114564-simplex at 36%
2023-01-06 12:22:16,635 INFO Projecting 2048 vectors onto 114564-simplex at 39%
2023-01-06 12:22:17,236 INFO Projecting 2048 vectors onto 114564-simplex at 41%
2023-01-06 12:22:17,840 INFO Projecting 2048 vectors onto 114564-simplex at 43%
2023-01-06 12:22:18,458 INFO Projecting 2048 vectors onto 114564-simplex at 46%
2023-01-06 12:22:19,065 INFO Projecting 2048 vectors onto 114564-simplex at 48%
2023-01-06 12:22:19,833 INFO Projecting 2048 vectors onto 114564-simplex at 51%
2023-01-06 12:22:20,440 INFO Projecting 2048 vectors onto 114564-simplex at 53%
2023-01-06 12:22:21,052 INFO Projecting 2048 vectors onto 114564-simplex at 56%
2023-01-06 12:22:21,660 INFO Projecting 2048 vectors onto 114564-simplex at 58%
2023-01-06 12:22:22,269 INFO Projecting 2048 vectors onto 114564-simplex at 61%
2023-01-06 12:22:22,864 INFO Projecting 2048 vectors onto 114564-simplex at 63%
2023-01-06 12:22:23,465 INFO Projecting 2048 vectors onto 114564-simplex at 65%
2023-01-06 12:22:24,070 INFO Projecting 2048 vectors onto 114564-simplex at 68%
2023-01-06 12:22:24,687 INFO Projecting 2048 vectors onto 114564-simplex at 70%
2023-01-06 12:22:25,292 INFO Projecting 2048 vectors onto 114564-simplex at 73%
2023-01-06 12:22:26,062 INFO Projecting 2048 vectors onto 114564-simplex at 75%
2023-01-06 12:22:26,669 INFO Projecting 2048 vectors onto 114564-simplex at 78%
2023-01-06 12:22:27,275 INFO Projecting 2048 vectors onto 114564-simplex at 80%
2023-01-06 12:22:27,873 INFO Projecting 2048 vectors onto 114564-simplex at 83%
2023-01-06 12:22:28,465 INFO Projecting 2048 vectors onto 114564-simplex at 85%
2023-01-06 12:22:29,072 INFO Projecting 2048 vectors onto 114564-simplex at 87%
2023-01-06 12:22:29,680 INFO Projecting 2048 vectors onto 114564-simplex at 90%
2023-01-06 12:22:30,281 INFO Projecting 2048 vectors onto 114564-simplex at 92%
2023-01-06 12:22:30,892 INFO Projecting 2048 vectors onto 114564-simplex at 95%
2023-01-06 12:22:31,491 INFO Projecting 2048 vectors onto 114564-simplex at 97%
2023-01-06 12:22:32,092 INFO Projecting 2048 vectors onto 114564-simplex at 100%
2023-01-06 12:22:33,457 INFO Computing 50 means of 28616 points in at most 20 steps...
2023-01-06 12:22:37,279 INFO Computing 2048 means at 2%
2023-01-06 12:22:37,368 INFO Computing 50 means of 30090 points in at most 20 steps...
2023-01-06 12:22:41,262 INFO Computing 2048 means at 4%
2023-01-06 12:22:41,347 INFO Computing 50 means of 26384 points in at most 20 steps...
2023-01-06 12:22:44,798 INFO Computing 2048 means at 7%
2023-01-06 12:22:44,880 INFO Computing 50 means of 29673 points in at most 20 steps...
2023-01-06 12:22:48,678 INFO Computing 2048 means at 9%
2023-01-06 12:22:48,766 INFO Computing 50 means of 31467 points in at most 20 steps...
2023-01-06 12:22:53,154 INFO Computing 2048 means at 12%
2023-01-06 12:22:53,255 INFO Computing 50 means of 30220 points in at most 20 steps...
2023-01-06 12:22:57,480 INFO Computing 2048 means at 14%
2023-01-06 12:22:57,573 INFO Computing 50 means of 29653 points in at most 20 steps...
2023-01-06 12:23:01,501 INFO Computing 2048 means at 17%
2023-01-06 12:23:01,596 INFO Computing 50 means of 30412 points in at most 20 steps...
2023-01-06 12:23:05,766 INFO Computing 2048 means at 19%
2023-01-06 12:23:05,858 INFO Computing 50 means of 28845 points in at most 20 steps...
2023-01-06 12:23:09,588 INFO Computing 2048 means at 21%
2023-01-06 12:23:09,680 INFO Computing 50 means of 27545 points in at most 20 steps...
2023-01-06 12:23:13,600 INFO Computing 2048 means at 24%
2023-01-06 12:23:13,730 INFO Computing 50 means of 29054 points in at most 20 steps...
2023-01-06 12:23:17,739 INFO Computing 2048 means at 26%
2023-01-06 12:23:17,830 INFO Computing 50 means of 28574 points in at most 20 steps...
2023-01-06 12:23:21,776 INFO Computing 2048 means at 29%
2023-01-06 12:23:21,870 INFO Computing 50 means of 33893 points in at most 20 steps...
2023-01-06 12:23:26,557 INFO Computing 2048 means at 31%
2023-01-06 12:23:26,659 INFO Computing 50 means of 29026 points in at most 20 steps...
2023-01-06 12:23:30,587 INFO Computing 2048 means at 34%
2023-01-06 12:23:30,686 INFO Computing 50 means of 28917 points in at most 20 steps...
2023-01-06 12:23:34,527 INFO Computing 2048 means at 36%
2023-01-06 12:23:34,622 INFO Computing 50 means of 30441 points in at most 20 steps...
2023-01-06 12:23:38,861 INFO Computing 2048 means at 39%
2023-01-06 12:23:38,956 INFO Computing 50 means of 26569 points in at most 20 steps...
2023-01-06 12:23:42,594 INFO Computing 2048 means at 41%
2023-01-06 12:23:42,685 INFO Computing 50 means of 27966 points in at most 20 steps...
2023-01-06 12:23:46,552 INFO Computing 2048 means at 43%
2023-01-06 12:23:46,645 INFO Computing 50 means of 27787 points in at most 20 steps...
2023-01-06 12:23:50,281 INFO Computing 2048 means at 46%
2023-01-06 12:23:50,368 INFO Computing 50 means of 30309 points in at most 20 steps...
2023-01-06 12:23:54,222 INFO Computing 2048 means at 48%
2023-01-06 12:23:54,421 INFO Computing 50 means of 27511 points in at most 20 steps...
2023-01-06 12:23:58,184 INFO Computing 2048 means at 51%
2023-01-06 12:23:58,282 INFO Computing 50 means of 31498 points in at most 20 steps...
2023-01-06 12:24:02,662 INFO Computing 2048 means at 53%
2023-01-06 12:24:02,754 INFO Computing 50 means of 29012 points in at most 20 steps...
2023-01-06 12:24:06,805 INFO Computing 2048 means at 56%
2023-01-06 12:24:06,903 INFO Computing 50 means of 28559 points in at most 20 steps...
2023-01-06 12:24:10,947 INFO Computing 2048 means at 58%
2023-01-06 12:24:11,039 INFO Computing 50 means of 27031 points in at most 20 steps...
2023-01-06 12:24:14,885 INFO Computing 2048 means at 61%
2023-01-06 12:24:14,991 INFO Computing 50 means of 30403 points in at most 20 steps...
2023-01-06 12:24:19,413 INFO Computing 2048 means at 63%
2023-01-06 12:24:19,510 INFO Computing 50 means of 28470 points in at most 20 steps...
2023-01-06 12:24:23,488 INFO Computing 2048 means at 65%
2023-01-06 12:24:23,578 INFO Computing 50 means of 30275 points in at most 20 steps...
2023-01-06 12:24:27,581 INFO Computing 2048 means at 68%
2023-01-06 12:24:27,687 INFO Computing 50 means of 27482 points in at most 20 steps...
2023-01-06 12:24:31,318 INFO Computing 2048 means at 70%
2023-01-06 12:24:31,406 INFO Computing 50 means of 28874 points in at most 20 steps...
2023-01-06 12:24:35,187 INFO Computing 2048 means at 73%
2023-01-06 12:24:35,377 INFO Computing 50 means of 29428 points in at most 20 steps...
2023-01-06 12:24:39,269 INFO Computing 2048 means at 75%
2023-01-06 12:24:39,358 INFO Computing 50 means of 29942 points in at most 20 steps...
2023-01-06 12:24:43,313 INFO Computing 2048 means at 78%
2023-01-06 12:24:43,403 INFO Computing 50 means of 29735 points in at most 20 steps...
2023-01-06 12:24:47,316 INFO Computing 2048 means at 80%
2023-01-06 12:24:47,413 INFO Computing 50 means of 25991 points in at most 20 steps...
2023-01-06 12:24:50,864 INFO Computing 2048 means at 83%
2023-01-06 12:24:50,957 INFO Computing 50 means of 29121 points in at most 20 steps...
2023-01-06 12:24:54,809 INFO Computing 2048 means at 85%
2023-01-06 12:24:54,895 INFO Computing 50 means of 29981 points in at most 20 steps...
2023-01-06 12:24:58,817 INFO Computing 2048 means at 87%
2023-01-06 12:24:58,913 INFO Computing 50 means of 31069 points in at most 20 steps...
2023-01-06 12:25:02,957 INFO Computing 2048 means at 90%
2023-01-06 12:25:03,044 INFO Computing 50 means of 29777 points in at most 20 steps...
2023-01-06 12:25:06,925 INFO Computing 2048 means at 92%
2023-01-06 12:25:07,015 INFO Computing 50 means of 31099 points in at most 20 steps...
2023-01-06 12:25:11,069 INFO Computing 2048 means at 95%
2023-01-06 12:25:11,162 INFO Computing 50 means of 30260 points in at most 20 steps...
2023-01-06 12:25:15,094 INFO Computing 2048 means at 97%
2023-01-06 12:25:15,181 INFO Computing 48 means of 27974 points in at most 20 steps...
2023-01-06 12:25:18,734 INFO Computing 2048 means at 100%
2023-01-06 12:25:24,047 INFO Do vol update step
2023-01-06 12:25:24,049 INFO Compute adjoint forward mapping on the images
2023-01-06 12:25:25,813 DEBUG Corresponding type is already complex complex128.
2023-01-06 12:25:28,595 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2023-01-06 12:25:28,611 INFO Computing adjoint forward mappings from 2048 rotations at 50%
2023-01-06 12:25:30,195 DEBUG Corresponding type is already complex complex128.
2023-01-06 12:25:32,805 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2023-01-06 12:25:32,819 INFO Computing adjoint forward mappings from 2048 rotations at 100%
2023-01-06 12:25:33,743 DEBUG Corresponding type is already real float64.
2023-01-06 12:25:33,743 DEBUG anufft passed real_type for signal, converting
2023-01-06 12:25:40,400 INFO Computing kernel from 2048 rotations at 50%
2023-01-06 12:25:41,304 DEBUG Corresponding type is already real float64.
2023-01-06 12:25:41,304 DEBUG anufft passed real_type for signal, converting
2023-01-06 12:25:48,038 INFO Computing kernel from 2048 rotations at 100%
2023-01-06 12:25:48,039 INFO Computing non-centered Fourier Transform
2023-01-06 12:25:48,219 INFO Add ramp filter regularisation
2023-01-06 12:25:52,629 INFO Update data_discrepancies
2023-01-06 12:25:52,630 INFO Computing \|Ag.u - f_i\|^2
2023-01-06 12:25:53,525 DEBUG Corresponding type is already real float64.
2023-01-06 12:25:53,525 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:26:08,394 INFO Computing data fidelity for 114564 rotations and 2048 images at 0%
2023-01-06 12:26:09,170 DEBUG Corresponding type is already real float64.
2023-01-06 12:26:09,170 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:26:23,401 INFO Computing data fidelity for 114564 rotations and 2048 images at 1%
2023-01-06 12:26:24,189 DEBUG Corresponding type is already real float64.
2023-01-06 12:26:24,189 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:26:38,025 INFO Computing data fidelity for 114564 rotations and 2048 images at 2%
2023-01-06 12:26:38,765 DEBUG Corresponding type is already real float64.
2023-01-06 12:26:38,765 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:26:51,677 INFO Computing data fidelity for 114564 rotations and 2048 images at 3%
2023-01-06 12:26:52,414 DEBUG Corresponding type is already real float64.
2023-01-06 12:26:52,414 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:27:05,250 INFO Computing data fidelity for 114564 rotations and 2048 images at 4%
2023-01-06 12:27:05,965 DEBUG Corresponding type is already real float64.
2023-01-06 12:27:05,965 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:27:18,682 INFO Computing data fidelity for 114564 rotations and 2048 images at 5%
2023-01-06 12:27:19,393 DEBUG Corresponding type is already real float64.
2023-01-06 12:27:19,394 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:27:32,234 INFO Computing data fidelity for 114564 rotations and 2048 images at 6%
2023-01-06 12:27:32,928 DEBUG Corresponding type is already real float64.
2023-01-06 12:27:32,928 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:27:45,725 INFO Computing data fidelity for 114564 rotations and 2048 images at 7%
2023-01-06 12:27:46,417 DEBUG Corresponding type is already real float64.
2023-01-06 12:27:46,417 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:27:59,253 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2023-01-06 12:27:59,965 DEBUG Corresponding type is already real float64.
2023-01-06 12:27:59,965 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:28:13,517 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2023-01-06 12:28:14,229 DEBUG Corresponding type is already real float64.
2023-01-06 12:28:14,229 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:28:27,179 INFO Computing data fidelity for 114564 rotations and 2048 images at 9%
2023-01-06 12:28:27,882 DEBUG Corresponding type is already real float64.
2023-01-06 12:28:27,882 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:28:40,828 INFO Computing data fidelity for 114564 rotations and 2048 images at 10%
2023-01-06 12:28:41,539 DEBUG Corresponding type is already real float64.
2023-01-06 12:28:41,540 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:28:54,540 INFO Computing data fidelity for 114564 rotations and 2048 images at 11%
2023-01-06 12:28:55,265 DEBUG Corresponding type is already real float64.
2023-01-06 12:28:55,265 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:29:08,190 INFO Computing data fidelity for 114564 rotations and 2048 images at 12%
2023-01-06 12:29:08,901 DEBUG Corresponding type is already real float64.
2023-01-06 12:29:08,901 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:29:21,862 INFO Computing data fidelity for 114564 rotations and 2048 images at 13%
2023-01-06 12:29:22,582 DEBUG Corresponding type is already real float64.
2023-01-06 12:29:22,582 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:29:35,525 INFO Computing data fidelity for 114564 rotations and 2048 images at 14%
2023-01-06 12:29:36,240 DEBUG Corresponding type is already real float64.
2023-01-06 12:29:36,241 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:29:49,436 INFO Computing data fidelity for 114564 rotations and 2048 images at 15%
2023-01-06 12:29:50,154 DEBUG Corresponding type is already real float64.
2023-01-06 12:29:50,154 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:30:03,206 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2023-01-06 12:30:03,921 DEBUG Corresponding type is already real float64.
2023-01-06 12:30:03,921 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:30:16,866 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2023-01-06 12:30:17,588 DEBUG Corresponding type is already real float64.
2023-01-06 12:30:17,588 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:30:30,577 INFO Computing data fidelity for 114564 rotations and 2048 images at 17%
2023-01-06 12:30:31,289 DEBUG Corresponding type is already real float64.
2023-01-06 12:30:31,289 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:30:44,560 INFO Computing data fidelity for 114564 rotations and 2048 images at 18%
2023-01-06 12:30:45,332 DEBUG Corresponding type is already real float64.
2023-01-06 12:30:45,332 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:30:58,924 INFO Computing data fidelity for 114564 rotations and 2048 images at 19%
2023-01-06 12:30:59,673 DEBUG Corresponding type is already real float64.
2023-01-06 12:30:59,673 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:31:12,723 INFO Computing data fidelity for 114564 rotations and 2048 images at 20%
2023-01-06 12:31:13,468 DEBUG Corresponding type is already real float64.
2023-01-06 12:31:13,468 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:31:26,592 INFO Computing data fidelity for 114564 rotations and 2048 images at 21%
2023-01-06 12:31:27,323 DEBUG Corresponding type is already real float64.
2023-01-06 12:31:27,323 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:31:40,368 INFO Computing data fidelity for 114564 rotations and 2048 images at 22%
2023-01-06 12:31:41,111 DEBUG Corresponding type is already real float64.
2023-01-06 12:31:41,111 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:31:54,081 INFO Computing data fidelity for 114564 rotations and 2048 images at 23%
2023-01-06 12:31:54,824 DEBUG Corresponding type is already real float64.
2023-01-06 12:31:54,824 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:32:07,888 INFO Computing data fidelity for 114564 rotations and 2048 images at 24%
2023-01-06 12:32:08,641 DEBUG Corresponding type is already real float64.
2023-01-06 12:32:08,641 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:32:21,629 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2023-01-06 12:32:22,363 DEBUG Corresponding type is already real float64.
2023-01-06 12:32:22,364 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:32:35,374 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2023-01-06 12:32:36,117 DEBUG Corresponding type is already real float64.
2023-01-06 12:32:36,117 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:32:49,246 INFO Computing data fidelity for 114564 rotations and 2048 images at 26%
2023-01-06 12:32:49,977 DEBUG Corresponding type is already real float64.
2023-01-06 12:32:49,977 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:33:03,278 INFO Computing data fidelity for 114564 rotations and 2048 images at 27%
2023-01-06 12:33:04,040 DEBUG Corresponding type is already real float64.
2023-01-06 12:33:04,041 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:33:17,155 INFO Computing data fidelity for 114564 rotations and 2048 images at 28%
2023-01-06 12:33:17,892 DEBUG Corresponding type is already real float64.
2023-01-06 12:33:17,892 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:33:30,863 INFO Computing data fidelity for 114564 rotations and 2048 images at 29%
2023-01-06 12:33:31,593 DEBUG Corresponding type is already real float64.
2023-01-06 12:33:31,593 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:33:44,628 INFO Computing data fidelity for 114564 rotations and 2048 images at 30%
2023-01-06 12:33:45,360 DEBUG Corresponding type is already real float64.
2023-01-06 12:33:45,360 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:33:58,365 INFO Computing data fidelity for 114564 rotations and 2048 images at 31%
2023-01-06 12:33:59,090 DEBUG Corresponding type is already real float64.
2023-01-06 12:33:59,090 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:34:12,031 INFO Computing data fidelity for 114564 rotations and 2048 images at 32%
2023-01-06 12:34:12,785 DEBUG Corresponding type is already real float64.
2023-01-06 12:34:12,785 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:34:25,822 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2023-01-06 12:34:26,548 DEBUG Corresponding type is already real float64.
2023-01-06 12:34:26,549 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:34:39,530 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2023-01-06 12:34:40,270 DEBUG Corresponding type is already real float64.
2023-01-06 12:34:40,270 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:34:53,300 INFO Computing data fidelity for 114564 rotations and 2048 images at 34%
2023-01-06 12:34:54,032 DEBUG Corresponding type is already real float64.
2023-01-06 12:34:54,032 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:35:07,007 INFO Computing data fidelity for 114564 rotations and 2048 images at 35%
2023-01-06 12:35:07,739 DEBUG Corresponding type is already real float64.
2023-01-06 12:35:07,739 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:35:20,743 INFO Computing data fidelity for 114564 rotations and 2048 images at 36%
2023-01-06 12:35:21,479 DEBUG Corresponding type is already real float64.
2023-01-06 12:35:21,479 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:35:34,473 INFO Computing data fidelity for 114564 rotations and 2048 images at 37%
2023-01-06 12:35:35,212 DEBUG Corresponding type is already real float64.
2023-01-06 12:35:35,212 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:35:48,341 INFO Computing data fidelity for 114564 rotations and 2048 images at 38%
2023-01-06 12:35:49,073 DEBUG Corresponding type is already real float64.
2023-01-06 12:35:49,073 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:36:02,857 INFO Computing data fidelity for 114564 rotations and 2048 images at 39%
2023-01-06 12:36:03,603 DEBUG Corresponding type is already real float64.
2023-01-06 12:36:03,603 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:36:17,052 INFO Computing data fidelity for 114564 rotations and 2048 images at 40%
2023-01-06 12:36:17,806 DEBUG Corresponding type is already real float64.
2023-01-06 12:36:17,806 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:36:30,873 INFO Computing data fidelity for 114564 rotations and 2048 images at 41%
2023-01-06 12:36:31,598 DEBUG Corresponding type is already real float64.
2023-01-06 12:36:31,598 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:36:44,696 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2023-01-06 12:36:45,424 DEBUG Corresponding type is already real float64.
2023-01-06 12:36:45,424 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:36:58,499 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2023-01-06 12:36:59,226 DEBUG Corresponding type is already real float64.
2023-01-06 12:36:59,226 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:37:12,216 INFO Computing data fidelity for 114564 rotations and 2048 images at 43%
2023-01-06 12:37:12,954 DEBUG Corresponding type is already real float64.
2023-01-06 12:37:12,954 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:37:25,974 INFO Computing data fidelity for 114564 rotations and 2048 images at 44%
2023-01-06 12:37:26,704 DEBUG Corresponding type is already real float64.
2023-01-06 12:37:26,704 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:37:39,843 INFO Computing data fidelity for 114564 rotations and 2048 images at 45%
2023-01-06 12:37:40,604 DEBUG Corresponding type is already real float64.
2023-01-06 12:37:40,604 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:37:53,691 INFO Computing data fidelity for 114564 rotations and 2048 images at 46%
2023-01-06 12:37:54,425 DEBUG Corresponding type is already real float64.
2023-01-06 12:37:54,426 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:38:08,042 INFO Computing data fidelity for 114564 rotations and 2048 images at 47%
2023-01-06 12:38:08,783 DEBUG Corresponding type is already real float64.
2023-01-06 12:38:08,784 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:38:21,767 INFO Computing data fidelity for 114564 rotations and 2048 images at 48%
2023-01-06 12:38:22,529 DEBUG Corresponding type is already real float64.
2023-01-06 12:38:22,529 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:38:35,542 INFO Computing data fidelity for 114564 rotations and 2048 images at 49%
2023-01-06 12:38:36,285 DEBUG Corresponding type is already real float64.
2023-01-06 12:38:36,285 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:38:49,382 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2023-01-06 12:38:50,128 DEBUG Corresponding type is already real float64.
2023-01-06 12:38:50,129 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:39:03,143 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2023-01-06 12:39:03,883 DEBUG Corresponding type is already real float64.
2023-01-06 12:39:03,883 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:39:16,921 INFO Computing data fidelity for 114564 rotations and 2048 images at 51%
2023-01-06 12:39:17,675 DEBUG Corresponding type is already real float64.
2023-01-06 12:39:17,675 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:39:30,696 INFO Computing data fidelity for 114564 rotations and 2048 images at 52%
2023-01-06 12:39:31,433 DEBUG Corresponding type is already real float64.
2023-01-06 12:39:31,433 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:39:44,485 INFO Computing data fidelity for 114564 rotations and 2048 images at 53%
2023-01-06 12:39:45,216 DEBUG Corresponding type is already real float64.
2023-01-06 12:39:45,217 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:39:58,271 INFO Computing data fidelity for 114564 rotations and 2048 images at 54%
2023-01-06 12:39:58,996 DEBUG Corresponding type is already real float64.
2023-01-06 12:39:58,996 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:40:11,962 INFO Computing data fidelity for 114564 rotations and 2048 images at 55%
2023-01-06 12:40:12,693 DEBUG Corresponding type is already real float64.
2023-01-06 12:40:12,693 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:40:25,704 INFO Computing data fidelity for 114564 rotations and 2048 images at 56%
2023-01-06 12:40:26,444 DEBUG Corresponding type is already real float64.
2023-01-06 12:40:26,444 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:40:39,546 INFO Computing data fidelity for 114564 rotations and 2048 images at 57%
2023-01-06 12:40:40,283 DEBUG Corresponding type is already real float64.
2023-01-06 12:40:40,283 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:40:53,312 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2023-01-06 12:40:54,037 DEBUG Corresponding type is already real float64.
2023-01-06 12:40:54,037 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:41:07,029 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2023-01-06 12:41:07,755 DEBUG Corresponding type is already real float64.
2023-01-06 12:41:07,755 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:41:20,779 INFO Computing data fidelity for 114564 rotations and 2048 images at 59%
2023-01-06 12:41:21,504 DEBUG Corresponding type is already real float64.
2023-01-06 12:41:21,504 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:41:34,478 INFO Computing data fidelity for 114564 rotations and 2048 images at 60%
2023-01-06 12:41:35,204 DEBUG Corresponding type is already real float64.
2023-01-06 12:41:35,204 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:41:48,278 INFO Computing data fidelity for 114564 rotations and 2048 images at 61%
2023-01-06 12:41:49,007 DEBUG Corresponding type is already real float64.
2023-01-06 12:41:49,007 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:42:01,998 INFO Computing data fidelity for 114564 rotations and 2048 images at 62%
2023-01-06 12:42:02,722 DEBUG Corresponding type is already real float64.
2023-01-06 12:42:02,722 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:42:15,699 INFO Computing data fidelity for 114564 rotations and 2048 images at 63%
2023-01-06 12:42:16,430 DEBUG Corresponding type is already real float64.
2023-01-06 12:42:16,430 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:42:29,561 INFO Computing data fidelity for 114564 rotations and 2048 images at 64%
2023-01-06 12:42:30,311 DEBUG Corresponding type is already real float64.
2023-01-06 12:42:30,311 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:42:43,348 INFO Computing data fidelity for 114564 rotations and 2048 images at 65%
2023-01-06 12:42:44,077 DEBUG Corresponding type is already real float64.
2023-01-06 12:42:44,077 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:42:57,122 INFO Computing data fidelity for 114564 rotations and 2048 images at 66%
2023-01-06 12:42:57,846 DEBUG Corresponding type is already real float64.
2023-01-06 12:42:57,846 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:43:11,477 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2023-01-06 12:43:12,205 DEBUG Corresponding type is already real float64.
2023-01-06 12:43:12,205 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:43:25,219 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2023-01-06 12:43:25,942 DEBUG Corresponding type is already real float64.
2023-01-06 12:43:25,942 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:43:38,965 INFO Computing data fidelity for 114564 rotations and 2048 images at 68%
2023-01-06 12:43:39,691 DEBUG Corresponding type is already real float64.
2023-01-06 12:43:39,692 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:43:52,794 INFO Computing data fidelity for 114564 rotations and 2048 images at 69%
2023-01-06 12:43:53,527 DEBUG Corresponding type is already real float64.
2023-01-06 12:43:53,527 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:44:06,569 INFO Computing data fidelity for 114564 rotations and 2048 images at 70%
2023-01-06 12:44:07,299 DEBUG Corresponding type is already real float64.
2023-01-06 12:44:07,299 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:44:20,362 INFO Computing data fidelity for 114564 rotations and 2048 images at 71%
2023-01-06 12:44:21,090 DEBUG Corresponding type is already real float64.
2023-01-06 12:44:21,091 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:44:34,188 INFO Computing data fidelity for 114564 rotations and 2048 images at 72%
2023-01-06 12:44:34,922 DEBUG Corresponding type is already real float64.
2023-01-06 12:44:34,922 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:44:48,007 INFO Computing data fidelity for 114564 rotations and 2048 images at 73%
2023-01-06 12:44:48,739 DEBUG Corresponding type is already real float64.
2023-01-06 12:44:48,739 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:45:01,755 INFO Computing data fidelity for 114564 rotations and 2048 images at 74%
2023-01-06 12:45:02,479 DEBUG Corresponding type is already real float64.
2023-01-06 12:45:02,479 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:45:15,471 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2023-01-06 12:45:16,201 DEBUG Corresponding type is already real float64.
2023-01-06 12:45:16,201 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:45:29,172 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2023-01-06 12:45:29,896 DEBUG Corresponding type is already real float64.
2023-01-06 12:45:29,896 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:45:43,002 INFO Computing data fidelity for 114564 rotations and 2048 images at 76%
2023-01-06 12:45:43,744 DEBUG Corresponding type is already real float64.
2023-01-06 12:45:43,744 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:45:56,750 INFO Computing data fidelity for 114564 rotations and 2048 images at 77%
2023-01-06 12:45:57,470 DEBUG Corresponding type is already real float64.
2023-01-06 12:45:57,471 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:46:10,432 INFO Computing data fidelity for 114564 rotations and 2048 images at 78%
2023-01-06 12:46:11,156 DEBUG Corresponding type is already real float64.
2023-01-06 12:46:11,156 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:46:24,138 INFO Computing data fidelity for 114564 rotations and 2048 images at 79%
2023-01-06 12:46:24,866 DEBUG Corresponding type is already real float64.
2023-01-06 12:46:24,866 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:46:37,960 INFO Computing data fidelity for 114564 rotations and 2048 images at 80%
2023-01-06 12:46:38,688 DEBUG Corresponding type is already real float64.
2023-01-06 12:46:38,689 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:46:51,762 INFO Computing data fidelity for 114564 rotations and 2048 images at 81%
2023-01-06 12:46:52,491 DEBUG Corresponding type is already real float64.
2023-01-06 12:46:52,491 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:47:05,487 INFO Computing data fidelity for 114564 rotations and 2048 images at 82%
2023-01-06 12:47:06,205 DEBUG Corresponding type is already real float64.
2023-01-06 12:47:06,205 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:47:19,201 INFO Computing data fidelity for 114564 rotations and 2048 images at 83%
2023-01-06 12:47:19,921 DEBUG Corresponding type is already real float64.
2023-01-06 12:47:19,921 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:47:32,898 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2023-01-06 12:47:33,629 DEBUG Corresponding type is already real float64.
2023-01-06 12:47:33,629 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:47:46,729 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2023-01-06 12:47:47,453 DEBUG Corresponding type is already real float64.
2023-01-06 12:47:47,454 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:48:00,448 INFO Computing data fidelity for 114564 rotations and 2048 images at 85%
2023-01-06 12:48:01,184 DEBUG Corresponding type is already real float64.
2023-01-06 12:48:01,184 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:48:14,757 INFO Computing data fidelity for 114564 rotations and 2048 images at 86%
2023-01-06 12:48:15,484 DEBUG Corresponding type is already real float64.
2023-01-06 12:48:15,484 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:48:28,458 INFO Computing data fidelity for 114564 rotations and 2048 images at 87%
2023-01-06 12:48:29,185 DEBUG Corresponding type is already real float64.
2023-01-06 12:48:29,185 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:48:42,312 INFO Computing data fidelity for 114564 rotations and 2048 images at 88%
2023-01-06 12:48:43,038 DEBUG Corresponding type is already real float64.
2023-01-06 12:48:43,038 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:48:56,081 INFO Computing data fidelity for 114564 rotations and 2048 images at 89%
2023-01-06 12:48:56,814 DEBUG Corresponding type is already real float64.
2023-01-06 12:48:56,814 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:49:09,834 INFO Computing data fidelity for 114564 rotations and 2048 images at 90%
2023-01-06 12:49:10,560 DEBUG Corresponding type is already real float64.
2023-01-06 12:49:10,560 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:49:23,512 INFO Computing data fidelity for 114564 rotations and 2048 images at 91%
2023-01-06 12:49:24,242 DEBUG Corresponding type is already real float64.
2023-01-06 12:49:24,242 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:49:37,230 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2023-01-06 12:49:37,948 DEBUG Corresponding type is already real float64.
2023-01-06 12:49:37,948 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:49:50,994 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2023-01-06 12:49:51,722 DEBUG Corresponding type is already real float64.
2023-01-06 12:49:51,722 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:50:04,739 INFO Computing data fidelity for 114564 rotations and 2048 images at 93%
2023-01-06 12:50:05,472 DEBUG Corresponding type is already real float64.
2023-01-06 12:50:05,472 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:50:18,475 INFO Computing data fidelity for 114564 rotations and 2048 images at 94%
2023-01-06 12:50:19,208 DEBUG Corresponding type is already real float64.
2023-01-06 12:50:19,208 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:50:32,229 INFO Computing data fidelity for 114564 rotations and 2048 images at 95%
2023-01-06 12:50:32,956 DEBUG Corresponding type is already real float64.
2023-01-06 12:50:32,956 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:50:46,131 INFO Computing data fidelity for 114564 rotations and 2048 images at 96%
2023-01-06 12:50:46,862 DEBUG Corresponding type is already real float64.
2023-01-06 12:50:46,862 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:50:59,856 INFO Computing data fidelity for 114564 rotations and 2048 images at 97%
2023-01-06 12:51:00,586 DEBUG Corresponding type is already real float64.
2023-01-06 12:51:00,586 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:51:13,570 INFO Computing data fidelity for 114564 rotations and 2048 images at 98%
2023-01-06 12:51:14,292 DEBUG Corresponding type is already real float64.
2023-01-06 12:51:14,292 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:51:27,308 INFO Computing data fidelity for 114564 rotations and 2048 images at 99%
2023-01-06 12:51:27,774 DEBUG Corresponding type is already real float64.
2023-01-06 12:51:27,774 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:51:39,225 INFO Computing data fidelity for 114564 rotations and 2048 images at 100%
2023-01-06 12:51:41,169 INFO Do lambda update step
2023-01-06 12:52:05,974 INFO Do rots update step
2023-01-06 12:52:06,905 INFO Projecting 2048 vectors onto 114564-simplex at 2%
2023-01-06 12:52:07,605 INFO Projecting 2048 vectors onto 114564-simplex at 4%
2023-01-06 12:52:08,294 INFO Projecting 2048 vectors onto 114564-simplex at 7%
2023-01-06 12:52:09,004 INFO Projecting 2048 vectors onto 114564-simplex at 9%
2023-01-06 12:52:09,694 INFO Projecting 2048 vectors onto 114564-simplex at 12%
2023-01-06 12:52:10,361 INFO Projecting 2048 vectors onto 114564-simplex at 14%
2023-01-06 12:52:11,038 INFO Projecting 2048 vectors onto 114564-simplex at 17%
2023-01-06 12:52:11,713 INFO Projecting 2048 vectors onto 114564-simplex at 19%
2023-01-06 12:52:12,380 INFO Projecting 2048 vectors onto 114564-simplex at 21%
2023-01-06 12:52:13,047 INFO Projecting 2048 vectors onto 114564-simplex at 24%
2023-01-06 12:52:13,904 INFO Projecting 2048 vectors onto 114564-simplex at 26%
2023-01-06 12:52:14,577 INFO Projecting 2048 vectors onto 114564-simplex at 29%
2023-01-06 12:52:15,245 INFO Projecting 2048 vectors onto 114564-simplex at 31%
2023-01-06 12:52:15,916 INFO Projecting 2048 vectors onto 114564-simplex at 34%
2023-01-06 12:52:16,573 INFO Projecting 2048 vectors onto 114564-simplex at 36%
2023-01-06 12:52:17,235 INFO Projecting 2048 vectors onto 114564-simplex at 39%
2023-01-06 12:52:17,904 INFO Projecting 2048 vectors onto 114564-simplex at 41%
2023-01-06 12:52:18,576 INFO Projecting 2048 vectors onto 114564-simplex at 43%
2023-01-06 12:52:19,246 INFO Projecting 2048 vectors onto 114564-simplex at 46%
2023-01-06 12:52:19,917 INFO Projecting 2048 vectors onto 114564-simplex at 48%
2023-01-06 12:52:20,777 INFO Projecting 2048 vectors onto 114564-simplex at 51%
2023-01-06 12:52:21,471 INFO Projecting 2048 vectors onto 114564-simplex at 53%
2023-01-06 12:52:22,161 INFO Projecting 2048 vectors onto 114564-simplex at 56%
2023-01-06 12:52:22,863 INFO Projecting 2048 vectors onto 114564-simplex at 58%
2023-01-06 12:52:23,563 INFO Projecting 2048 vectors onto 114564-simplex at 61%
2023-01-06 12:52:24,264 INFO Projecting 2048 vectors onto 114564-simplex at 63%
2023-01-06 12:52:24,937 INFO Projecting 2048 vectors onto 114564-simplex at 65%
2023-01-06 12:52:25,612 INFO Projecting 2048 vectors onto 114564-simplex at 68%
2023-01-06 12:52:26,278 INFO Projecting 2048 vectors onto 114564-simplex at 70%
2023-01-06 12:52:26,938 INFO Projecting 2048 vectors onto 114564-simplex at 73%
2023-01-06 12:52:27,818 INFO Projecting 2048 vectors onto 114564-simplex at 75%
2023-01-06 12:52:28,510 INFO Projecting 2048 vectors onto 114564-simplex at 78%
2023-01-06 12:52:29,198 INFO Projecting 2048 vectors onto 114564-simplex at 80%
2023-01-06 12:52:29,888 INFO Projecting 2048 vectors onto 114564-simplex at 83%
2023-01-06 12:52:30,550 INFO Projecting 2048 vectors onto 114564-simplex at 85%
2023-01-06 12:52:31,215 INFO Projecting 2048 vectors onto 114564-simplex at 87%
2023-01-06 12:52:31,876 INFO Projecting 2048 vectors onto 114564-simplex at 90%
2023-01-06 12:52:32,539 INFO Projecting 2048 vectors onto 114564-simplex at 92%
2023-01-06 12:52:33,231 INFO Projecting 2048 vectors onto 114564-simplex at 95%
2023-01-06 12:52:33,901 INFO Projecting 2048 vectors onto 114564-simplex at 97%
2023-01-06 12:52:34,552 INFO Projecting 2048 vectors onto 114564-simplex at 100%
2023-01-06 12:52:36,237 INFO Computing 50 means of 28401 points in at most 20 steps...
2023-01-06 12:52:40,123 INFO Computing 2048 means at 2%
2023-01-06 12:52:40,221 INFO Computing 50 means of 31246 points in at most 20 steps...
2023-01-06 12:52:44,356 INFO Computing 2048 means at 4%
2023-01-06 12:52:44,445 INFO Computing 50 means of 27675 points in at most 20 steps...
2023-01-06 12:52:48,139 INFO Computing 2048 means at 7%
2023-01-06 12:52:48,227 INFO Computing 50 means of 30488 points in at most 20 steps...
2023-01-06 12:52:52,193 INFO Computing 2048 means at 9%
2023-01-06 12:52:52,286 INFO Computing 50 means of 32450 points in at most 20 steps...
2023-01-06 12:52:56,509 INFO Computing 2048 means at 12%
2023-01-06 12:52:56,593 INFO Computing 50 means of 30675 points in at most 20 steps...
2023-01-06 12:53:00,466 INFO Computing 2048 means at 14%
2023-01-06 12:53:00,550 INFO Computing 50 means of 28672 points in at most 20 steps...
2023-01-06 12:53:04,310 INFO Computing 2048 means at 17%
2023-01-06 12:53:04,396 INFO Computing 50 means of 30858 points in at most 20 steps...
2023-01-06 12:53:08,363 INFO Computing 2048 means at 19%
2023-01-06 12:53:08,449 INFO Computing 50 means of 28816 points in at most 20 steps...
2023-01-06 12:53:12,097 INFO Computing 2048 means at 21%
2023-01-06 12:53:12,181 INFO Computing 50 means of 28462 points in at most 20 steps...
2023-01-06 12:53:15,557 INFO Computing 2048 means at 24%
2023-01-06 12:53:15,651 INFO Computing 50 means of 27813 points in at most 20 steps...
2023-01-06 12:53:19,228 INFO Computing 2048 means at 26%
2023-01-06 12:53:19,311 INFO Computing 50 means of 28706 points in at most 20 steps...
2023-01-06 12:53:22,983 INFO Computing 2048 means at 29%
2023-01-06 12:53:23,073 INFO Computing 50 means of 33959 points in at most 20 steps...
2023-01-06 12:53:27,379 INFO Computing 2048 means at 31%
2023-01-06 12:53:27,465 INFO Computing 50 means of 28700 points in at most 20 steps...
2023-01-06 12:53:31,094 INFO Computing 2048 means at 34%
2023-01-06 12:53:31,178 INFO Computing 50 means of 29293 points in at most 20 steps...
2023-01-06 12:53:34,852 INFO Computing 2048 means at 36%
2023-01-06 12:53:34,944 INFO Computing 50 means of 31676 points in at most 20 steps...
2023-01-06 12:53:39,167 INFO Computing 2048 means at 39%
2023-01-06 12:53:39,254 INFO Computing 50 means of 26535 points in at most 20 steps...
2023-01-06 12:53:42,672 INFO Computing 2048 means at 41%
2023-01-06 12:53:42,757 INFO Computing 50 means of 26814 points in at most 20 steps...
2023-01-06 12:53:46,165 INFO Computing 2048 means at 43%
2023-01-06 12:53:46,247 INFO Computing 50 means of 29754 points in at most 20 steps...
2023-01-06 12:53:49,962 INFO Computing 2048 means at 46%
2023-01-06 12:53:50,047 INFO Computing 50 means of 30534 points in at most 20 steps...
2023-01-06 12:53:53,939 INFO Computing 2048 means at 48%
2023-01-06 12:53:54,037 INFO Computing 50 means of 29283 points in at most 20 steps...
2023-01-06 12:53:57,715 INFO Computing 2048 means at 51%
2023-01-06 12:53:57,800 INFO Computing 50 means of 30203 points in at most 20 steps...
2023-01-06 12:54:01,571 INFO Computing 2048 means at 53%
2023-01-06 12:54:01,655 INFO Computing 50 means of 29254 points in at most 20 steps...
2023-01-06 12:54:05,325 INFO Computing 2048 means at 56%
2023-01-06 12:54:05,410 INFO Computing 50 means of 30356 points in at most 20 steps...
2023-01-06 12:54:09,186 INFO Computing 2048 means at 58%
2023-01-06 12:54:09,273 INFO Computing 50 means of 26763 points in at most 20 steps...
2023-01-06 12:54:12,638 INFO Computing 2048 means at 61%
2023-01-06 12:54:12,724 INFO Computing 50 means of 29854 points in at most 20 steps...
2023-01-06 12:54:16,502 INFO Computing 2048 means at 63%
2023-01-06 12:54:16,589 INFO Computing 50 means of 28057 points in at most 20 steps...
2023-01-06 12:54:20,165 INFO Computing 2048 means at 65%
2023-01-06 12:54:20,248 INFO Computing 50 means of 30080 points in at most 20 steps...
2023-01-06 12:54:24,113 INFO Computing 2048 means at 68%
2023-01-06 12:54:24,200 INFO Computing 50 means of 28321 points in at most 20 steps...
2023-01-06 12:54:27,757 INFO Computing 2048 means at 70%
2023-01-06 12:54:27,842 INFO Computing 50 means of 29143 points in at most 20 steps...
2023-01-06 12:54:31,650 INFO Computing 2048 means at 73%
2023-01-06 12:54:31,762 INFO Computing 50 means of 30397 points in at most 20 steps...
2023-01-06 12:54:35,782 INFO Computing 2048 means at 75%
2023-01-06 12:54:35,874 INFO Computing 50 means of 29122 points in at most 20 steps...
2023-01-06 12:54:39,694 INFO Computing 2048 means at 78%
2023-01-06 12:54:39,796 INFO Computing 50 means of 31335 points in at most 20 steps...
2023-01-06 12:54:43,933 INFO Computing 2048 means at 80%
2023-01-06 12:54:44,024 INFO Computing 50 means of 27671 points in at most 20 steps...
2023-01-06 12:54:47,761 INFO Computing 2048 means at 83%
2023-01-06 12:54:47,851 INFO Computing 50 means of 29240 points in at most 20 steps...
2023-01-06 12:54:51,692 INFO Computing 2048 means at 85%
2023-01-06 12:54:51,780 INFO Computing 50 means of 31827 points in at most 20 steps...
2023-01-06 12:54:56,013 INFO Computing 2048 means at 87%
2023-01-06 12:54:56,106 INFO Computing 50 means of 31671 points in at most 20 steps...
2023-01-06 12:55:00,286 INFO Computing 2048 means at 90%
2023-01-06 12:55:00,381 INFO Computing 50 means of 32268 points in at most 20 steps...
2023-01-06 12:55:04,658 INFO Computing 2048 means at 92%
2023-01-06 12:55:04,746 INFO Computing 50 means of 30162 points in at most 20 steps...
2023-01-06 12:55:08,547 INFO Computing 2048 means at 95%
2023-01-06 12:55:08,634 INFO Computing 50 means of 31048 points in at most 20 steps...
2023-01-06 12:55:12,551 INFO Computing 2048 means at 97%
2023-01-06 12:55:12,635 INFO Computing 48 means of 28437 points in at most 20 steps...
2023-01-06 12:55:16,919 INFO Computing 2048 means at 100%
2023-01-06 12:55:21,832 INFO Do vol update step
2023-01-06 12:55:21,833 INFO Compute adjoint forward mapping on the images
2023-01-06 12:55:23,898 DEBUG Corresponding type is already complex complex128.
2023-01-06 12:55:26,801 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2023-01-06 12:55:26,816 INFO Computing adjoint forward mappings from 2048 rotations at 50%
2023-01-06 12:55:28,628 DEBUG Corresponding type is already complex complex128.
2023-01-06 12:55:31,204 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2023-01-06 12:55:31,217 INFO Computing adjoint forward mappings from 2048 rotations at 100%
2023-01-06 12:55:32,124 DEBUG Corresponding type is already real float64.
2023-01-06 12:55:32,124 DEBUG anufft passed real_type for signal, converting
2023-01-06 12:55:38,594 INFO Computing kernel from 2048 rotations at 50%
2023-01-06 12:55:39,496 DEBUG Corresponding type is already real float64.
2023-01-06 12:55:39,496 DEBUG anufft passed real_type for signal, converting
2023-01-06 12:55:45,971 INFO Computing kernel from 2048 rotations at 100%
2023-01-06 12:55:45,973 INFO Computing non-centered Fourier Transform
2023-01-06 12:55:46,155 INFO Add ramp filter regularisation
2023-01-06 12:55:50,389 INFO Update data_discrepancies
2023-01-06 12:55:50,391 INFO Computing \|Ag.u - f_i\|^2
2023-01-06 12:55:51,218 DEBUG Corresponding type is already real float64.
2023-01-06 12:55:51,218 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:56:04,575 INFO Computing data fidelity for 114564 rotations and 2048 images at 0%
2023-01-06 12:56:05,323 DEBUG Corresponding type is already real float64.
2023-01-06 12:56:05,323 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:56:18,540 INFO Computing data fidelity for 114564 rotations and 2048 images at 1%
2023-01-06 12:56:19,290 DEBUG Corresponding type is already real float64.
2023-01-06 12:56:19,290 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:56:32,600 INFO Computing data fidelity for 114564 rotations and 2048 images at 2%
2023-01-06 12:56:33,350 DEBUG Corresponding type is already real float64.
2023-01-06 12:56:33,350 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:56:46,779 INFO Computing data fidelity for 114564 rotations and 2048 images at 3%
2023-01-06 12:56:47,525 DEBUG Corresponding type is already real float64.
2023-01-06 12:56:47,525 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:57:00,646 INFO Computing data fidelity for 114564 rotations and 2048 images at 4%
2023-01-06 12:57:01,369 DEBUG Corresponding type is already real float64.
2023-01-06 12:57:01,370 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:57:14,366 INFO Computing data fidelity for 114564 rotations and 2048 images at 5%
2023-01-06 12:57:15,113 DEBUG Corresponding type is already real float64.
2023-01-06 12:57:15,114 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:57:28,028 INFO Computing data fidelity for 114564 rotations and 2048 images at 6%
2023-01-06 12:57:28,738 DEBUG Corresponding type is already real float64.
2023-01-06 12:57:28,738 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:57:41,760 INFO Computing data fidelity for 114564 rotations and 2048 images at 7%
2023-01-06 12:57:42,466 DEBUG Corresponding type is already real float64.
2023-01-06 12:57:42,466 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:57:55,702 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2023-01-06 12:57:56,423 DEBUG Corresponding type is already real float64.
2023-01-06 12:57:56,423 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:58:10,134 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2023-01-06 12:58:10,842 DEBUG Corresponding type is already real float64.
2023-01-06 12:58:10,842 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:58:23,700 INFO Computing data fidelity for 114564 rotations and 2048 images at 9%
2023-01-06 12:58:24,411 DEBUG Corresponding type is already real float64.
2023-01-06 12:58:24,411 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:58:37,255 INFO Computing data fidelity for 114564 rotations and 2048 images at 10%
2023-01-06 12:58:37,969 DEBUG Corresponding type is already real float64.
2023-01-06 12:58:37,969 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:58:51,073 INFO Computing data fidelity for 114564 rotations and 2048 images at 11%
2023-01-06 12:58:51,801 DEBUG Corresponding type is already real float64.
2023-01-06 12:58:51,801 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:59:04,790 INFO Computing data fidelity for 114564 rotations and 2048 images at 12%
2023-01-06 12:59:05,512 DEBUG Corresponding type is already real float64.
2023-01-06 12:59:05,512 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:59:18,458 INFO Computing data fidelity for 114564 rotations and 2048 images at 13%
2023-01-06 12:59:19,189 DEBUG Corresponding type is already real float64.
2023-01-06 12:59:19,189 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:59:32,095 INFO Computing data fidelity for 114564 rotations and 2048 images at 14%
2023-01-06 12:59:32,817 DEBUG Corresponding type is already real float64.
2023-01-06 12:59:32,817 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:59:45,717 INFO Computing data fidelity for 114564 rotations and 2048 images at 15%
2023-01-06 12:59:46,441 DEBUG Corresponding type is already real float64.
2023-01-06 12:59:46,442 DEBUG nufft passed real_type for signal, converting
2023-01-06 12:59:59,374 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2023-01-06 13:00:00,101 DEBUG Corresponding type is already real float64.
2023-01-06 13:00:00,101 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:00:13,027 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2023-01-06 13:00:13,747 DEBUG Corresponding type is already real float64.
2023-01-06 13:00:13,747 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:00:26,702 INFO Computing data fidelity for 114564 rotations and 2048 images at 17%
2023-01-06 13:00:27,427 DEBUG Corresponding type is already real float64.
2023-01-06 13:00:27,428 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:00:40,537 INFO Computing data fidelity for 114564 rotations and 2048 images at 18%
2023-01-06 13:00:41,257 DEBUG Corresponding type is already real float64.
2023-01-06 13:00:41,257 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:00:54,470 INFO Computing data fidelity for 114564 rotations and 2048 images at 19%
2023-01-06 13:00:55,197 DEBUG Corresponding type is already real float64.
2023-01-06 13:00:55,197 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:01:08,237 INFO Computing data fidelity for 114564 rotations and 2048 images at 20%
2023-01-06 13:01:08,962 DEBUG Corresponding type is already real float64.
2023-01-06 13:01:08,962 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:01:21,859 INFO Computing data fidelity for 114564 rotations and 2048 images at 21%
2023-01-06 13:01:22,580 DEBUG Corresponding type is already real float64.
2023-01-06 13:01:22,580 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:01:35,483 INFO Computing data fidelity for 114564 rotations and 2048 images at 22%
2023-01-06 13:01:36,208 DEBUG Corresponding type is already real float64.
2023-01-06 13:01:36,208 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:01:49,134 INFO Computing data fidelity for 114564 rotations and 2048 images at 23%
2023-01-06 13:01:49,860 DEBUG Corresponding type is already real float64.
2023-01-06 13:01:49,861 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:02:02,845 INFO Computing data fidelity for 114564 rotations and 2048 images at 24%
2023-01-06 13:02:03,562 DEBUG Corresponding type is already real float64.
2023-01-06 13:02:03,563 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:02:16,429 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2023-01-06 13:02:17,146 DEBUG Corresponding type is already real float64.
2023-01-06 13:02:17,146 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:02:30,044 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2023-01-06 13:02:30,765 DEBUG Corresponding type is already real float64.
2023-01-06 13:02:30,765 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:02:43,726 INFO Computing data fidelity for 114564 rotations and 2048 images at 26%
2023-01-06 13:02:44,469 DEBUG Corresponding type is already real float64.
2023-01-06 13:02:44,469 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:02:57,444 INFO Computing data fidelity for 114564 rotations and 2048 images at 27%
2023-01-06 13:02:58,162 DEBUG Corresponding type is already real float64.
2023-01-06 13:02:58,163 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:03:11,755 INFO Computing data fidelity for 114564 rotations and 2048 images at 28%
2023-01-06 13:03:12,482 DEBUG Corresponding type is already real float64.
2023-01-06 13:03:12,482 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:03:25,410 INFO Computing data fidelity for 114564 rotations and 2048 images at 29%
2023-01-06 13:03:26,125 DEBUG Corresponding type is already real float64.
2023-01-06 13:03:26,125 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:03:39,038 INFO Computing data fidelity for 114564 rotations and 2048 images at 30%
2023-01-06 13:03:39,758 DEBUG Corresponding type is already real float64.
2023-01-06 13:03:39,758 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:03:52,693 INFO Computing data fidelity for 114564 rotations and 2048 images at 31%
2023-01-06 13:03:53,412 DEBUG Corresponding type is already real float64.
2023-01-06 13:03:53,412 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:04:06,754 INFO Computing data fidelity for 114564 rotations and 2048 images at 32%
2023-01-06 13:04:07,529 DEBUG Corresponding type is already real float64.
2023-01-06 13:04:07,529 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:04:21,162 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2023-01-06 13:04:21,900 DEBUG Corresponding type is already real float64.
2023-01-06 13:04:21,900 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:04:35,214 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2023-01-06 13:04:35,958 DEBUG Corresponding type is already real float64.
2023-01-06 13:04:35,958 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:04:49,352 INFO Computing data fidelity for 114564 rotations and 2048 images at 34%
2023-01-06 13:04:50,089 DEBUG Corresponding type is already real float64.
2023-01-06 13:04:50,089 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:05:03,381 INFO Computing data fidelity for 114564 rotations and 2048 images at 35%
2023-01-06 13:05:04,120 DEBUG Corresponding type is already real float64.
2023-01-06 13:05:04,120 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:05:17,386 INFO Computing data fidelity for 114564 rotations and 2048 images at 36%
2023-01-06 13:05:18,119 DEBUG Corresponding type is already real float64.
2023-01-06 13:05:18,119 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:05:31,463 INFO Computing data fidelity for 114564 rotations and 2048 images at 37%
2023-01-06 13:05:32,192 DEBUG Corresponding type is already real float64.
2023-01-06 13:05:32,192 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:05:45,607 INFO Computing data fidelity for 114564 rotations and 2048 images at 38%
2023-01-06 13:05:46,344 DEBUG Corresponding type is already real float64.
2023-01-06 13:05:46,344 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:05:59,705 INFO Computing data fidelity for 114564 rotations and 2048 images at 39%
2023-01-06 13:06:00,437 DEBUG Corresponding type is already real float64.
2023-01-06 13:06:00,437 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:06:13,740 INFO Computing data fidelity for 114564 rotations and 2048 images at 40%
2023-01-06 13:06:14,473 DEBUG Corresponding type is already real float64.
2023-01-06 13:06:14,473 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:06:27,810 INFO Computing data fidelity for 114564 rotations and 2048 images at 41%
2023-01-06 13:06:28,560 DEBUG Corresponding type is already real float64.
2023-01-06 13:06:28,560 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:06:41,911 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2023-01-06 13:06:42,654 DEBUG Corresponding type is already real float64.
2023-01-06 13:06:42,654 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:06:56,053 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2023-01-06 13:06:56,822 DEBUG Corresponding type is already real float64.
2023-01-06 13:06:56,822 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:07:10,291 INFO Computing data fidelity for 114564 rotations and 2048 images at 43%
2023-01-06 13:07:11,046 DEBUG Corresponding type is already real float64.
2023-01-06 13:07:11,046 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:07:24,382 INFO Computing data fidelity for 114564 rotations and 2048 images at 44%
2023-01-06 13:07:25,147 DEBUG Corresponding type is already real float64.
2023-01-06 13:07:25,147 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:07:38,504 INFO Computing data fidelity for 114564 rotations and 2048 images at 45%
2023-01-06 13:07:39,250 DEBUG Corresponding type is already real float64.
2023-01-06 13:07:39,250 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:07:52,569 INFO Computing data fidelity for 114564 rotations and 2048 images at 46%
2023-01-06 13:07:53,317 DEBUG Corresponding type is already real float64.
2023-01-06 13:07:53,317 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:08:07,112 INFO Computing data fidelity for 114564 rotations and 2048 images at 47%
2023-01-06 13:08:07,883 DEBUG Corresponding type is already real float64.
2023-01-06 13:08:07,883 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:08:21,217 INFO Computing data fidelity for 114564 rotations and 2048 images at 48%
2023-01-06 13:08:21,968 DEBUG Corresponding type is already real float64.
2023-01-06 13:08:21,968 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:08:35,270 INFO Computing data fidelity for 114564 rotations and 2048 images at 49%
2023-01-06 13:08:36,018 DEBUG Corresponding type is already real float64.
2023-01-06 13:08:36,018 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:08:49,363 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2023-01-06 13:08:50,107 DEBUG Corresponding type is already real float64.
2023-01-06 13:08:50,107 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:09:03,459 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2023-01-06 13:09:04,209 DEBUG Corresponding type is already real float64.
2023-01-06 13:09:04,209 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:09:17,605 INFO Computing data fidelity for 114564 rotations and 2048 images at 51%
2023-01-06 13:09:18,348 DEBUG Corresponding type is already real float64.
2023-01-06 13:09:18,348 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:09:31,631 INFO Computing data fidelity for 114564 rotations and 2048 images at 52%
2023-01-06 13:09:32,368 DEBUG Corresponding type is already real float64.
2023-01-06 13:09:32,368 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:09:45,674 INFO Computing data fidelity for 114564 rotations and 2048 images at 53%
2023-01-06 13:09:46,422 DEBUG Corresponding type is already real float64.
2023-01-06 13:09:46,422 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:10:00,107 INFO Computing data fidelity for 114564 rotations and 2048 images at 54%
2023-01-06 13:10:00,862 DEBUG Corresponding type is already real float64.
2023-01-06 13:10:00,862 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:10:15,177 INFO Computing data fidelity for 114564 rotations and 2048 images at 55%
2023-01-06 13:10:15,919 DEBUG Corresponding type is already real float64.
2023-01-06 13:10:15,919 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:10:29,298 INFO Computing data fidelity for 114564 rotations and 2048 images at 56%
2023-01-06 13:10:30,042 DEBUG Corresponding type is already real float64.
2023-01-06 13:10:30,042 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:10:43,506 INFO Computing data fidelity for 114564 rotations and 2048 images at 57%
2023-01-06 13:10:44,259 DEBUG Corresponding type is already real float64.
2023-01-06 13:10:44,260 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:10:57,672 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2023-01-06 13:10:58,422 DEBUG Corresponding type is already real float64.
2023-01-06 13:10:58,422 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:11:11,793 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2023-01-06 13:11:12,546 DEBUG Corresponding type is already real float64.
2023-01-06 13:11:12,546 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:11:25,979 INFO Computing data fidelity for 114564 rotations and 2048 images at 59%
2023-01-06 13:11:26,726 DEBUG Corresponding type is already real float64.
2023-01-06 13:11:26,726 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:11:40,047 INFO Computing data fidelity for 114564 rotations and 2048 images at 60%
2023-01-06 13:11:40,805 DEBUG Corresponding type is already real float64.
2023-01-06 13:11:40,805 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:11:54,184 INFO Computing data fidelity for 114564 rotations and 2048 images at 61%
2023-01-06 13:11:54,943 DEBUG Corresponding type is already real float64.
2023-01-06 13:11:54,943 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:12:08,325 INFO Computing data fidelity for 114564 rotations and 2048 images at 62%
2023-01-06 13:12:09,072 DEBUG Corresponding type is already real float64.
2023-01-06 13:12:09,072 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:12:22,386 INFO Computing data fidelity for 114564 rotations and 2048 images at 63%
2023-01-06 13:12:23,134 DEBUG Corresponding type is already real float64.
2023-01-06 13:12:23,134 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:12:36,483 INFO Computing data fidelity for 114564 rotations and 2048 images at 64%
2023-01-06 13:12:37,213 DEBUG Corresponding type is already real float64.
2023-01-06 13:12:37,213 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:12:50,527 INFO Computing data fidelity for 114564 rotations and 2048 images at 65%
2023-01-06 13:12:51,266 DEBUG Corresponding type is already real float64.
2023-01-06 13:12:51,266 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:13:06,742 INFO Computing data fidelity for 114564 rotations and 2048 images at 66%
2023-01-06 13:13:08,095 DEBUG Corresponding type is already real float64.
2023-01-06 13:13:08,095 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:13:24,276 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2023-01-06 13:13:25,153 DEBUG Corresponding type is already real float64.
2023-01-06 13:13:25,155 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:13:40,441 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2023-01-06 13:13:41,253 DEBUG Corresponding type is already real float64.
2023-01-06 13:13:41,253 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:13:57,228 INFO Computing data fidelity for 114564 rotations and 2048 images at 68%
2023-01-06 13:13:58,248 DEBUG Corresponding type is already real float64.
2023-01-06 13:13:58,248 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:14:13,515 INFO Computing data fidelity for 114564 rotations and 2048 images at 69%
2023-01-06 13:14:14,377 DEBUG Corresponding type is already real float64.
2023-01-06 13:14:14,378 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:14:28,463 INFO Computing data fidelity for 114564 rotations and 2048 images at 70%
2023-01-06 13:14:29,265 DEBUG Corresponding type is already real float64.
2023-01-06 13:14:29,266 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:14:45,031 INFO Computing data fidelity for 114564 rotations and 2048 images at 71%
2023-01-06 13:14:45,910 DEBUG Corresponding type is already real float64.
2023-01-06 13:14:45,911 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:15:01,675 INFO Computing data fidelity for 114564 rotations and 2048 images at 72%
2023-01-06 13:15:02,576 DEBUG Corresponding type is already real float64.
2023-01-06 13:15:02,576 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:15:18,015 INFO Computing data fidelity for 114564 rotations and 2048 images at 73%
2023-01-06 13:15:18,863 DEBUG Corresponding type is already real float64.
2023-01-06 13:15:18,863 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:15:34,088 INFO Computing data fidelity for 114564 rotations and 2048 images at 74%
2023-01-06 13:15:34,877 DEBUG Corresponding type is already real float64.
2023-01-06 13:15:34,877 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:15:49,801 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2023-01-06 13:15:50,724 DEBUG Corresponding type is already real float64.
2023-01-06 13:15:50,724 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:16:06,054 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2023-01-06 13:16:06,975 DEBUG Corresponding type is already real float64.
2023-01-06 13:16:06,975 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:16:22,424 INFO Computing data fidelity for 114564 rotations and 2048 images at 76%
2023-01-06 13:16:23,218 DEBUG Corresponding type is already real float64.
2023-01-06 13:16:23,218 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:16:36,768 INFO Computing data fidelity for 114564 rotations and 2048 images at 77%
2023-01-06 13:16:37,516 DEBUG Corresponding type is already real float64.
2023-01-06 13:16:37,516 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:16:51,036 INFO Computing data fidelity for 114564 rotations and 2048 images at 78%
2023-01-06 13:16:51,795 DEBUG Corresponding type is already real float64.
2023-01-06 13:16:51,795 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:17:05,968 INFO Computing data fidelity for 114564 rotations and 2048 images at 79%
2023-01-06 13:17:06,774 DEBUG Corresponding type is already real float64.
2023-01-06 13:17:06,774 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:17:20,677 INFO Computing data fidelity for 114564 rotations and 2048 images at 80%
2023-01-06 13:17:21,488 DEBUG Corresponding type is already real float64.
2023-01-06 13:17:21,488 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:17:36,371 INFO Computing data fidelity for 114564 rotations and 2048 images at 81%
2023-01-06 13:17:37,220 DEBUG Corresponding type is already real float64.
2023-01-06 13:17:37,220 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:17:51,696 INFO Computing data fidelity for 114564 rotations and 2048 images at 82%
2023-01-06 13:17:52,547 DEBUG Corresponding type is already real float64.
2023-01-06 13:17:52,548 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:18:06,304 INFO Computing data fidelity for 114564 rotations and 2048 images at 83%
2023-01-06 13:18:07,061 DEBUG Corresponding type is already real float64.
2023-01-06 13:18:07,061 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:18:21,372 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2023-01-06 13:18:22,151 DEBUG Corresponding type is already real float64.
2023-01-06 13:18:22,152 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:18:35,960 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2023-01-06 13:18:36,795 DEBUG Corresponding type is already real float64.
2023-01-06 13:18:36,795 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:18:51,448 INFO Computing data fidelity for 114564 rotations and 2048 images at 85%
2023-01-06 13:18:52,294 DEBUG Corresponding type is already real float64.
2023-01-06 13:18:52,294 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:19:07,432 INFO Computing data fidelity for 114564 rotations and 2048 images at 86%
2023-01-06 13:19:08,262 DEBUG Corresponding type is already real float64.
2023-01-06 13:19:08,262 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:19:22,283 INFO Computing data fidelity for 114564 rotations and 2048 images at 87%
2023-01-06 13:19:23,088 DEBUG Corresponding type is already real float64.
2023-01-06 13:19:23,088 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:19:38,108 INFO Computing data fidelity for 114564 rotations and 2048 images at 88%
2023-01-06 13:19:38,951 DEBUG Corresponding type is already real float64.
2023-01-06 13:19:38,951 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:19:53,033 INFO Computing data fidelity for 114564 rotations and 2048 images at 89%
2023-01-06 13:19:53,800 DEBUG Corresponding type is already real float64.
2023-01-06 13:19:53,800 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:20:08,635 INFO Computing data fidelity for 114564 rotations and 2048 images at 90%
2023-01-06 13:20:09,467 DEBUG Corresponding type is already real float64.
2023-01-06 13:20:09,467 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:20:24,222 INFO Computing data fidelity for 114564 rotations and 2048 images at 91%
2023-01-06 13:20:25,002 DEBUG Corresponding type is already real float64.
2023-01-06 13:20:25,002 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:20:40,145 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2023-01-06 13:20:41,100 DEBUG Corresponding type is already real float64.
2023-01-06 13:20:41,100 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:20:56,938 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2023-01-06 13:20:57,893 DEBUG Corresponding type is already real float64.
2023-01-06 13:20:57,893 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:21:13,774 INFO Computing data fidelity for 114564 rotations and 2048 images at 93%
2023-01-06 13:21:14,603 DEBUG Corresponding type is already real float64.
2023-01-06 13:21:14,603 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:21:29,806 INFO Computing data fidelity for 114564 rotations and 2048 images at 94%
2023-01-06 13:21:30,629 DEBUG Corresponding type is already real float64.
2023-01-06 13:21:30,629 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:21:44,895 INFO Computing data fidelity for 114564 rotations and 2048 images at 95%
2023-01-06 13:21:45,722 DEBUG Corresponding type is already real float64.
2023-01-06 13:21:45,722 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:22:01,255 INFO Computing data fidelity for 114564 rotations and 2048 images at 96%
2023-01-06 13:22:02,149 DEBUG Corresponding type is already real float64.
2023-01-06 13:22:02,149 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:22:17,610 INFO Computing data fidelity for 114564 rotations and 2048 images at 97%
2023-01-06 13:22:18,507 DEBUG Corresponding type is already real float64.
2023-01-06 13:22:18,508 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:22:32,766 INFO Computing data fidelity for 114564 rotations and 2048 images at 98%
2023-01-06 13:22:33,592 DEBUG Corresponding type is already real float64.
2023-01-06 13:22:33,592 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:22:48,885 INFO Computing data fidelity for 114564 rotations and 2048 images at 99%
2023-01-06 13:22:49,433 DEBUG Corresponding type is already real float64.
2023-01-06 13:22:49,434 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:23:02,815 INFO Computing data fidelity for 114564 rotations and 2048 images at 100%
2023-01-06 13:23:05,907 INFO Do lambda update step
2023-01-06 13:23:32,073 INFO Do rots update step
2023-01-06 13:23:33,043 INFO Projecting 2048 vectors onto 114564-simplex at 2%
2023-01-06 13:23:33,727 INFO Projecting 2048 vectors onto 114564-simplex at 4%
2023-01-06 13:23:34,499 INFO Projecting 2048 vectors onto 114564-simplex at 7%
2023-01-06 13:23:35,232 INFO Projecting 2048 vectors onto 114564-simplex at 9%
2023-01-06 13:23:35,952 INFO Projecting 2048 vectors onto 114564-simplex at 12%
2023-01-06 13:23:36,704 INFO Projecting 2048 vectors onto 114564-simplex at 14%
2023-01-06 13:23:37,425 INFO Projecting 2048 vectors onto 114564-simplex at 17%
2023-01-06 13:23:38,152 INFO Projecting 2048 vectors onto 114564-simplex at 19%
2023-01-06 13:23:38,875 INFO Projecting 2048 vectors onto 114564-simplex at 21%
2023-01-06 13:23:39,615 INFO Projecting 2048 vectors onto 114564-simplex at 24%
2023-01-06 13:23:40,552 INFO Projecting 2048 vectors onto 114564-simplex at 26%
2023-01-06 13:23:41,270 INFO Projecting 2048 vectors onto 114564-simplex at 29%
2023-01-06 13:23:41,970 INFO Projecting 2048 vectors onto 114564-simplex at 31%
2023-01-06 13:23:42,652 INFO Projecting 2048 vectors onto 114564-simplex at 34%
2023-01-06 13:23:43,340 INFO Projecting 2048 vectors onto 114564-simplex at 36%
2023-01-06 13:23:44,064 INFO Projecting 2048 vectors onto 114564-simplex at 39%
2023-01-06 13:23:44,774 INFO Projecting 2048 vectors onto 114564-simplex at 41%
2023-01-06 13:23:45,468 INFO Projecting 2048 vectors onto 114564-simplex at 43%
2023-01-06 13:23:46,161 INFO Projecting 2048 vectors onto 114564-simplex at 46%
2023-01-06 13:23:46,845 INFO Projecting 2048 vectors onto 114564-simplex at 48%
2023-01-06 13:23:47,739 INFO Projecting 2048 vectors onto 114564-simplex at 51%
2023-01-06 13:23:48,455 INFO Projecting 2048 vectors onto 114564-simplex at 53%
2023-01-06 13:23:49,163 INFO Projecting 2048 vectors onto 114564-simplex at 56%
2023-01-06 13:23:49,827 INFO Projecting 2048 vectors onto 114564-simplex at 58%
2023-01-06 13:23:50,502 INFO Projecting 2048 vectors onto 114564-simplex at 61%
2023-01-06 13:23:51,175 INFO Projecting 2048 vectors onto 114564-simplex at 63%
2023-01-06 13:23:51,848 INFO Projecting 2048 vectors onto 114564-simplex at 65%
2023-01-06 13:23:52,548 INFO Projecting 2048 vectors onto 114564-simplex at 68%
2023-01-06 13:23:53,254 INFO Projecting 2048 vectors onto 114564-simplex at 70%
2023-01-06 13:23:53,932 INFO Projecting 2048 vectors onto 114564-simplex at 73%
2023-01-06 13:23:54,825 INFO Projecting 2048 vectors onto 114564-simplex at 75%
2023-01-06 13:23:55,513 INFO Projecting 2048 vectors onto 114564-simplex at 78%
2023-01-06 13:23:56,197 INFO Projecting 2048 vectors onto 114564-simplex at 80%
2023-01-06 13:23:56,868 INFO Projecting 2048 vectors onto 114564-simplex at 83%
2023-01-06 13:23:57,543 INFO Projecting 2048 vectors onto 114564-simplex at 85%
2023-01-06 13:23:58,223 INFO Projecting 2048 vectors onto 114564-simplex at 87%
2023-01-06 13:23:58,901 INFO Projecting 2048 vectors onto 114564-simplex at 90%
2023-01-06 13:23:59,585 INFO Projecting 2048 vectors onto 114564-simplex at 92%
2023-01-06 13:24:00,261 INFO Projecting 2048 vectors onto 114564-simplex at 95%
2023-01-06 13:24:00,929 INFO Projecting 2048 vectors onto 114564-simplex at 97%
2023-01-06 13:24:01,584 INFO Projecting 2048 vectors onto 114564-simplex at 100%
2023-01-06 13:24:03,175 INFO Computing 50 means of 28865 points in at most 20 steps...
2023-01-06 13:24:07,025 INFO Computing 2048 means at 2%
2023-01-06 13:24:07,119 INFO Computing 50 means of 30490 points in at most 20 steps...
2023-01-06 13:24:11,291 INFO Computing 2048 means at 4%
2023-01-06 13:24:11,375 INFO Computing 50 means of 26259 points in at most 20 steps...
2023-01-06 13:24:14,983 INFO Computing 2048 means at 7%
2023-01-06 13:24:15,070 INFO Computing 50 means of 28948 points in at most 20 steps...
2023-01-06 13:24:18,932 INFO Computing 2048 means at 9%
2023-01-06 13:24:19,016 INFO Computing 50 means of 31312 points in at most 20 steps...
2023-01-06 13:24:23,186 INFO Computing 2048 means at 12%
2023-01-06 13:24:23,276 INFO Computing 50 means of 29709 points in at most 20 steps...
2023-01-06 13:24:27,222 INFO Computing 2048 means at 14%
2023-01-06 13:24:27,318 INFO Computing 50 means of 29011 points in at most 20 steps...
2023-01-06 13:24:31,338 INFO Computing 2048 means at 17%
2023-01-06 13:24:31,428 INFO Computing 50 means of 30807 points in at most 20 steps...
2023-01-06 13:24:35,748 INFO Computing 2048 means at 19%
2023-01-06 13:24:35,837 INFO Computing 50 means of 29377 points in at most 20 steps...
2023-01-06 13:24:39,787 INFO Computing 2048 means at 21%
2023-01-06 13:24:39,879 INFO Computing 50 means of 28590 points in at most 20 steps...
2023-01-06 13:24:43,687 INFO Computing 2048 means at 24%
2023-01-06 13:24:43,788 INFO Computing 50 means of 29268 points in at most 20 steps...
2023-01-06 13:24:47,811 INFO Computing 2048 means at 26%
2023-01-06 13:24:47,901 INFO Computing 50 means of 28968 points in at most 20 steps...
2023-01-06 13:24:51,750 INFO Computing 2048 means at 29%
2023-01-06 13:24:51,836 INFO Computing 50 means of 32894 points in at most 20 steps...
2023-01-06 13:24:56,050 INFO Computing 2048 means at 31%
2023-01-06 13:24:56,135 INFO Computing 50 means of 28810 points in at most 20 steps...
2023-01-06 13:24:59,990 INFO Computing 2048 means at 34%
2023-01-06 13:25:00,077 INFO Computing 50 means of 30112 points in at most 20 steps...
2023-01-06 13:25:04,293 INFO Computing 2048 means at 36%
2023-01-06 13:25:04,384 INFO Computing 50 means of 30434 points in at most 20 steps...
2023-01-06 13:25:08,451 INFO Computing 2048 means at 39%
2023-01-06 13:25:08,553 INFO Computing 50 means of 26160 points in at most 20 steps...
2023-01-06 13:25:12,072 INFO Computing 2048 means at 41%
2023-01-06 13:25:12,162 INFO Computing 50 means of 27261 points in at most 20 steps...
2023-01-06 13:25:15,892 INFO Computing 2048 means at 43%
2023-01-06 13:25:15,984 INFO Computing 50 means of 30498 points in at most 20 steps...
2023-01-06 13:25:20,192 INFO Computing 2048 means at 46%
2023-01-06 13:25:20,280 INFO Computing 50 means of 30973 points in at most 20 steps...
2023-01-06 13:25:24,540 INFO Computing 2048 means at 48%
2023-01-06 13:25:24,651 INFO Computing 50 means of 29403 points in at most 20 steps...
2023-01-06 13:25:28,611 INFO Computing 2048 means at 51%
2023-01-06 13:25:28,697 INFO Computing 50 means of 31407 points in at most 20 steps...
2023-01-06 13:25:32,936 INFO Computing 2048 means at 53%
2023-01-06 13:25:33,032 INFO Computing 50 means of 28662 points in at most 20 steps...
2023-01-06 13:25:36,814 INFO Computing 2048 means at 56%
2023-01-06 13:25:36,912 INFO Computing 50 means of 29051 points in at most 20 steps...
2023-01-06 13:25:41,072 INFO Computing 2048 means at 58%
2023-01-06 13:25:41,172 INFO Computing 50 means of 27358 points in at most 20 steps...
2023-01-06 13:25:45,175 INFO Computing 2048 means at 61%
2023-01-06 13:25:45,263 INFO Computing 50 means of 29766 points in at most 20 steps...
2023-01-06 13:25:49,301 INFO Computing 2048 means at 63%
2023-01-06 13:25:49,393 INFO Computing 50 means of 29791 points in at most 20 steps...
2023-01-06 13:25:53,403 INFO Computing 2048 means at 65%
2023-01-06 13:25:53,489 INFO Computing 50 means of 30556 points in at most 20 steps...
2023-01-06 13:25:57,702 INFO Computing 2048 means at 68%
2023-01-06 13:25:57,789 INFO Computing 50 means of 28569 points in at most 20 steps...
2023-01-06 13:26:01,604 INFO Computing 2048 means at 70%
2023-01-06 13:26:01,697 INFO Computing 50 means of 30146 points in at most 20 steps...
2023-01-06 13:26:05,643 INFO Computing 2048 means at 73%
2023-01-06 13:26:05,748 INFO Computing 50 means of 30095 points in at most 20 steps...
2023-01-06 13:26:09,595 INFO Computing 2048 means at 75%
2023-01-06 13:26:09,680 INFO Computing 50 means of 29205 points in at most 20 steps...
2023-01-06 13:26:13,601 INFO Computing 2048 means at 78%
2023-01-06 13:26:13,689 INFO Computing 50 means of 29615 points in at most 20 steps...
2023-01-06 13:26:17,769 INFO Computing 2048 means at 80%
2023-01-06 13:26:17,855 INFO Computing 50 means of 29067 points in at most 20 steps...
2023-01-06 13:26:21,944 INFO Computing 2048 means at 83%
2023-01-06 13:26:22,034 INFO Computing 50 means of 28061 points in at most 20 steps...
2023-01-06 13:26:25,756 INFO Computing 2048 means at 85%
2023-01-06 13:26:25,842 INFO Computing 50 means of 29437 points in at most 20 steps...
2023-01-06 13:26:29,648 INFO Computing 2048 means at 87%
2023-01-06 13:26:29,734 INFO Computing 50 means of 31336 points in at most 20 steps...
2023-01-06 13:26:33,818 INFO Computing 2048 means at 90%
2023-01-06 13:26:33,905 INFO Computing 50 means of 31627 points in at most 20 steps...
2023-01-06 13:26:38,051 INFO Computing 2048 means at 92%
2023-01-06 13:26:38,137 INFO Computing 50 means of 29736 points in at most 20 steps...
2023-01-06 13:26:42,114 INFO Computing 2048 means at 95%
2023-01-06 13:26:42,201 INFO Computing 50 means of 31211 points in at most 20 steps...
2023-01-06 13:26:46,367 INFO Computing 2048 means at 97%
2023-01-06 13:26:46,454 INFO Computing 48 means of 27399 points in at most 20 steps...
2023-01-06 13:26:50,042 INFO Computing 2048 means at 100%
2023-01-06 13:26:54,633 INFO Do vol update step
2023-01-06 13:26:54,635 INFO Compute adjoint forward mapping on the images
2023-01-06 13:26:56,380 DEBUG Corresponding type is already complex complex128.
2023-01-06 13:26:58,914 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2023-01-06 13:26:58,928 INFO Computing adjoint forward mappings from 2048 rotations at 50%
2023-01-06 13:27:00,494 DEBUG Corresponding type is already complex complex128.
2023-01-06 13:27:03,046 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2023-01-06 13:27:03,058 INFO Computing adjoint forward mappings from 2048 rotations at 100%
2023-01-06 13:27:03,974 DEBUG Corresponding type is already real float64.
2023-01-06 13:27:03,975 DEBUG anufft passed real_type for signal, converting
2023-01-06 13:27:10,464 INFO Computing kernel from 2048 rotations at 50%
2023-01-06 13:27:11,355 DEBUG Corresponding type is already real float64.
2023-01-06 13:27:11,355 DEBUG anufft passed real_type for signal, converting
2023-01-06 13:27:18,080 INFO Computing kernel from 2048 rotations at 100%
2023-01-06 13:27:18,081 INFO Computing non-centered Fourier Transform
2023-01-06 13:27:18,268 INFO Add ramp filter regularisation
2023-01-06 13:27:22,957 INFO Update data_discrepancies
2023-01-06 13:27:22,958 INFO Computing \|Ag.u - f_i\|^2
2023-01-06 13:27:23,898 DEBUG Corresponding type is already real float64.
2023-01-06 13:27:23,898 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:27:38,734 INFO Computing data fidelity for 114564 rotations and 2048 images at 0%
2023-01-06 13:27:39,489 DEBUG Corresponding type is already real float64.
2023-01-06 13:27:39,489 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:27:54,408 INFO Computing data fidelity for 114564 rotations and 2048 images at 1%
2023-01-06 13:27:55,225 DEBUG Corresponding type is already real float64.
2023-01-06 13:27:55,225 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:28:09,992 INFO Computing data fidelity for 114564 rotations and 2048 images at 2%
2023-01-06 13:28:10,845 DEBUG Corresponding type is already real float64.
2023-01-06 13:28:10,845 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:28:24,230 INFO Computing data fidelity for 114564 rotations and 2048 images at 3%
2023-01-06 13:28:25,002 DEBUG Corresponding type is already real float64.
2023-01-06 13:28:25,003 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:28:39,285 INFO Computing data fidelity for 114564 rotations and 2048 images at 4%
2023-01-06 13:28:40,074 DEBUG Corresponding type is already real float64.
2023-01-06 13:28:40,074 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:28:53,312 INFO Computing data fidelity for 114564 rotations and 2048 images at 5%
2023-01-06 13:28:54,043 DEBUG Corresponding type is already real float64.
2023-01-06 13:28:54,043 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:29:07,783 INFO Computing data fidelity for 114564 rotations and 2048 images at 6%
2023-01-06 13:29:08,510 DEBUG Corresponding type is already real float64.
2023-01-06 13:29:08,511 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:29:22,175 INFO Computing data fidelity for 114564 rotations and 2048 images at 7%
2023-01-06 13:29:22,895 DEBUG Corresponding type is already real float64.
2023-01-06 13:29:22,895 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:29:36,266 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2023-01-06 13:29:37,078 DEBUG Corresponding type is already real float64.
2023-01-06 13:29:37,078 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:29:50,552 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2023-01-06 13:29:51,268 DEBUG Corresponding type is already real float64.
2023-01-06 13:29:51,268 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:30:05,577 INFO Computing data fidelity for 114564 rotations and 2048 images at 9%
2023-01-06 13:30:06,313 DEBUG Corresponding type is already real float64.
2023-01-06 13:30:06,313 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:30:20,066 INFO Computing data fidelity for 114564 rotations and 2048 images at 10%
2023-01-06 13:30:20,821 DEBUG Corresponding type is already real float64.
2023-01-06 13:30:20,822 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:30:35,767 INFO Computing data fidelity for 114564 rotations and 2048 images at 11%
2023-01-06 13:30:36,601 DEBUG Corresponding type is already real float64.
2023-01-06 13:30:36,601 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:30:51,982 INFO Computing data fidelity for 114564 rotations and 2048 images at 12%
2023-01-06 13:30:52,771 DEBUG Corresponding type is already real float64.
2023-01-06 13:30:52,771 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:31:06,813 INFO Computing data fidelity for 114564 rotations and 2048 images at 13%
2023-01-06 13:31:07,588 DEBUG Corresponding type is already real float64.
2023-01-06 13:31:07,588 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:31:21,505 INFO Computing data fidelity for 114564 rotations and 2048 images at 14%
2023-01-06 13:31:22,343 DEBUG Corresponding type is already real float64.
2023-01-06 13:31:22,343 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:31:37,046 INFO Computing data fidelity for 114564 rotations and 2048 images at 15%
2023-01-06 13:31:37,798 DEBUG Corresponding type is already real float64.
2023-01-06 13:31:37,798 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:31:51,078 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2023-01-06 13:31:51,829 DEBUG Corresponding type is already real float64.
2023-01-06 13:31:51,829 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:32:06,355 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2023-01-06 13:32:07,230 DEBUG Corresponding type is already real float64.
2023-01-06 13:32:07,230 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:32:21,421 INFO Computing data fidelity for 114564 rotations and 2048 images at 17%
2023-01-06 13:32:22,177 DEBUG Corresponding type is already real float64.
2023-01-06 13:32:22,177 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:32:36,472 INFO Computing data fidelity for 114564 rotations and 2048 images at 18%
2023-01-06 13:32:37,219 DEBUG Corresponding type is already real float64.
2023-01-06 13:32:37,219 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:32:52,118 INFO Computing data fidelity for 114564 rotations and 2048 images at 19%
2023-01-06 13:32:52,961 DEBUG Corresponding type is already real float64.
2023-01-06 13:32:52,961 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:33:07,775 INFO Computing data fidelity for 114564 rotations and 2048 images at 20%
2023-01-06 13:33:08,593 DEBUG Corresponding type is already real float64.
2023-01-06 13:33:08,593 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:33:22,549 INFO Computing data fidelity for 114564 rotations and 2048 images at 21%
2023-01-06 13:33:23,309 DEBUG Corresponding type is already real float64.
2023-01-06 13:33:23,309 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:33:37,270 INFO Computing data fidelity for 114564 rotations and 2048 images at 22%
2023-01-06 13:33:38,032 DEBUG Corresponding type is already real float64.
2023-01-06 13:33:38,032 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:33:52,437 INFO Computing data fidelity for 114564 rotations and 2048 images at 23%
2023-01-06 13:33:53,244 DEBUG Corresponding type is already real float64.
2023-01-06 13:33:53,244 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:34:06,816 INFO Computing data fidelity for 114564 rotations and 2048 images at 24%
2023-01-06 13:34:07,571 DEBUG Corresponding type is already real float64.
2023-01-06 13:34:07,571 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:34:22,753 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2023-01-06 13:34:23,533 DEBUG Corresponding type is already real float64.
2023-01-06 13:34:23,533 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:34:38,366 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2023-01-06 13:34:39,179 DEBUG Corresponding type is already real float64.
2023-01-06 13:34:39,179 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:34:53,243 INFO Computing data fidelity for 114564 rotations and 2048 images at 26%
2023-01-06 13:34:54,137 DEBUG Corresponding type is already real float64.
2023-01-06 13:34:54,138 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:35:07,870 INFO Computing data fidelity for 114564 rotations and 2048 images at 27%
2023-01-06 13:35:08,627 DEBUG Corresponding type is already real float64.
2023-01-06 13:35:08,628 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:35:22,081 INFO Computing data fidelity for 114564 rotations and 2048 images at 28%
2023-01-06 13:35:22,836 DEBUG Corresponding type is already real float64.
2023-01-06 13:35:22,836 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:35:37,318 INFO Computing data fidelity for 114564 rotations and 2048 images at 29%
2023-01-06 13:35:38,099 DEBUG Corresponding type is already real float64.
2023-01-06 13:35:38,100 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:35:53,037 INFO Computing data fidelity for 114564 rotations and 2048 images at 30%
2023-01-06 13:35:53,858 DEBUG Corresponding type is already real float64.
2023-01-06 13:35:53,858 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:36:08,269 INFO Computing data fidelity for 114564 rotations and 2048 images at 31%
2023-01-06 13:36:09,085 DEBUG Corresponding type is already real float64.
2023-01-06 13:36:09,086 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:36:23,187 INFO Computing data fidelity for 114564 rotations and 2048 images at 32%
2023-01-06 13:36:24,011 DEBUG Corresponding type is already real float64.
2023-01-06 13:36:24,011 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:36:38,579 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2023-01-06 13:36:39,470 DEBUG Corresponding type is already real float64.
2023-01-06 13:36:39,470 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:36:53,695 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2023-01-06 13:36:54,546 DEBUG Corresponding type is already real float64.
2023-01-06 13:36:54,546 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:37:08,337 INFO Computing data fidelity for 114564 rotations and 2048 images at 34%
2023-01-06 13:37:09,096 DEBUG Corresponding type is already real float64.
2023-01-06 13:37:09,096 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:37:23,695 INFO Computing data fidelity for 114564 rotations and 2048 images at 35%
2023-01-06 13:37:24,503 DEBUG Corresponding type is already real float64.
2023-01-06 13:37:24,503 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:37:39,328 INFO Computing data fidelity for 114564 rotations and 2048 images at 36%
2023-01-06 13:37:40,139 DEBUG Corresponding type is already real float64.
2023-01-06 13:37:40,139 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:37:53,972 INFO Computing data fidelity for 114564 rotations and 2048 images at 37%
2023-01-06 13:37:54,731 DEBUG Corresponding type is already real float64.
2023-01-06 13:37:54,732 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:38:08,217 INFO Computing data fidelity for 114564 rotations and 2048 images at 38%
2023-01-06 13:38:08,988 DEBUG Corresponding type is already real float64.
2023-01-06 13:38:08,989 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:38:23,261 INFO Computing data fidelity for 114564 rotations and 2048 images at 39%
2023-01-06 13:38:24,082 DEBUG Corresponding type is already real float64.
2023-01-06 13:38:24,082 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:38:39,135 INFO Computing data fidelity for 114564 rotations and 2048 images at 40%
2023-01-06 13:38:39,938 DEBUG Corresponding type is already real float64.
2023-01-06 13:38:39,938 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:38:54,448 INFO Computing data fidelity for 114564 rotations and 2048 images at 41%
2023-01-06 13:38:55,294 DEBUG Corresponding type is already real float64.
2023-01-06 13:38:55,294 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:39:09,705 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2023-01-06 13:39:10,600 DEBUG Corresponding type is already real float64.
2023-01-06 13:39:10,600 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:39:25,890 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2023-01-06 13:39:26,763 DEBUG Corresponding type is already real float64.
2023-01-06 13:39:26,763 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:39:41,098 INFO Computing data fidelity for 114564 rotations and 2048 images at 43%
2023-01-06 13:39:41,864 DEBUG Corresponding type is already real float64.
2023-01-06 13:39:41,865 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:39:55,965 INFO Computing data fidelity for 114564 rotations and 2048 images at 44%
2023-01-06 13:39:56,742 DEBUG Corresponding type is already real float64.
2023-01-06 13:39:56,742 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:40:11,504 INFO Computing data fidelity for 114564 rotations and 2048 images at 45%
2023-01-06 13:40:12,286 DEBUG Corresponding type is already real float64.
2023-01-06 13:40:12,286 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:40:26,948 INFO Computing data fidelity for 114564 rotations and 2048 images at 46%
2023-01-06 13:40:27,791 DEBUG Corresponding type is already real float64.
2023-01-06 13:40:27,791 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:40:42,118 INFO Computing data fidelity for 114564 rotations and 2048 images at 47%
2023-01-06 13:40:42,995 DEBUG Corresponding type is already real float64.
2023-01-06 13:40:42,996 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:40:57,701 INFO Computing data fidelity for 114564 rotations and 2048 images at 48%
2023-01-06 13:40:58,466 DEBUG Corresponding type is already real float64.
2023-01-06 13:40:58,466 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:41:12,939 INFO Computing data fidelity for 114564 rotations and 2048 images at 49%
2023-01-06 13:41:13,742 DEBUG Corresponding type is already real float64.
2023-01-06 13:41:13,742 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:41:27,562 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2023-01-06 13:41:28,361 DEBUG Corresponding type is already real float64.
2023-01-06 13:41:28,361 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:41:42,889 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2023-01-06 13:41:43,731 DEBUG Corresponding type is already real float64.
2023-01-06 13:41:43,732 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:41:58,033 INFO Computing data fidelity for 114564 rotations and 2048 images at 51%
2023-01-06 13:41:58,795 DEBUG Corresponding type is already real float64.
2023-01-06 13:41:58,795 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:42:12,544 INFO Computing data fidelity for 114564 rotations and 2048 images at 52%
2023-01-06 13:42:13,304 DEBUG Corresponding type is already real float64.
2023-01-06 13:42:13,305 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:42:27,304 INFO Computing data fidelity for 114564 rotations and 2048 images at 53%
2023-01-06 13:42:28,066 DEBUG Corresponding type is already real float64.
2023-01-06 13:42:28,066 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:42:42,482 INFO Computing data fidelity for 114564 rotations and 2048 images at 54%
2023-01-06 13:42:43,283 DEBUG Corresponding type is already real float64.
2023-01-06 13:42:43,283 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:42:58,094 INFO Computing data fidelity for 114564 rotations and 2048 images at 55%
2023-01-06 13:42:58,916 DEBUG Corresponding type is already real float64.
2023-01-06 13:42:58,916 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:43:12,725 INFO Computing data fidelity for 114564 rotations and 2048 images at 56%
2023-01-06 13:43:13,589 DEBUG Corresponding type is already real float64.
2023-01-06 13:43:13,589 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:43:28,647 INFO Computing data fidelity for 114564 rotations and 2048 images at 57%
2023-01-06 13:43:29,487 DEBUG Corresponding type is already real float64.
2023-01-06 13:43:29,487 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:43:43,812 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2023-01-06 13:43:44,608 DEBUG Corresponding type is already real float64.
2023-01-06 13:43:44,608 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:43:59,074 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2023-01-06 13:43:59,914 DEBUG Corresponding type is already real float64.
2023-01-06 13:43:59,914 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:44:14,175 INFO Computing data fidelity for 114564 rotations and 2048 images at 59%
2023-01-06 13:44:14,948 DEBUG Corresponding type is already real float64.
2023-01-06 13:44:14,948 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:44:28,462 INFO Computing data fidelity for 114564 rotations and 2048 images at 60%
2023-01-06 13:44:29,230 DEBUG Corresponding type is already real float64.
2023-01-06 13:44:29,230 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:44:43,397 INFO Computing data fidelity for 114564 rotations and 2048 images at 61%
2023-01-06 13:44:44,243 DEBUG Corresponding type is already real float64.
2023-01-06 13:44:44,244 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:44:59,387 INFO Computing data fidelity for 114564 rotations and 2048 images at 62%
2023-01-06 13:45:00,174 DEBUG Corresponding type is already real float64.
2023-01-06 13:45:00,174 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:45:15,184 INFO Computing data fidelity for 114564 rotations and 2048 images at 63%
2023-01-06 13:45:16,037 DEBUG Corresponding type is already real float64.
2023-01-06 13:45:16,037 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:45:31,385 INFO Computing data fidelity for 114564 rotations and 2048 images at 64%
2023-01-06 13:45:32,173 DEBUG Corresponding type is already real float64.
2023-01-06 13:45:32,174 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:45:47,030 INFO Computing data fidelity for 114564 rotations and 2048 images at 65%
2023-01-06 13:45:47,878 DEBUG Corresponding type is already real float64.
2023-01-06 13:45:47,878 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:46:02,469 INFO Computing data fidelity for 114564 rotations and 2048 images at 66%
2023-01-06 13:46:03,235 DEBUG Corresponding type is already real float64.
2023-01-06 13:46:03,235 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:46:16,665 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2023-01-06 13:46:17,456 DEBUG Corresponding type is already real float64.
2023-01-06 13:46:17,457 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:46:32,174 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2023-01-06 13:46:32,959 DEBUG Corresponding type is already real float64.
2023-01-06 13:46:32,959 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:46:47,381 INFO Computing data fidelity for 114564 rotations and 2048 images at 68%
2023-01-06 13:46:48,143 DEBUG Corresponding type is already real float64.
2023-01-06 13:46:48,144 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:47:01,816 INFO Computing data fidelity for 114564 rotations and 2048 images at 69%
2023-01-06 13:47:02,625 DEBUG Corresponding type is already real float64.
2023-01-06 13:47:02,626 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:47:16,568 INFO Computing data fidelity for 114564 rotations and 2048 images at 70%
2023-01-06 13:47:17,353 DEBUG Corresponding type is already real float64.
2023-01-06 13:47:17,353 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:47:32,185 INFO Computing data fidelity for 114564 rotations and 2048 images at 71%
2023-01-06 13:47:33,036 DEBUG Corresponding type is already real float64.
2023-01-06 13:47:33,037 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:47:47,300 INFO Computing data fidelity for 114564 rotations and 2048 images at 72%
2023-01-06 13:47:48,062 DEBUG Corresponding type is already real float64.
2023-01-06 13:47:48,062 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:48:01,569 INFO Computing data fidelity for 114564 rotations and 2048 images at 73%
2023-01-06 13:48:02,331 DEBUG Corresponding type is already real float64.
2023-01-06 13:48:02,332 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:48:15,764 INFO Computing data fidelity for 114564 rotations and 2048 images at 74%
2023-01-06 13:48:16,525 DEBUG Corresponding type is already real float64.
2023-01-06 13:48:16,526 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:48:30,984 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2023-01-06 13:48:31,841 DEBUG Corresponding type is already real float64.
2023-01-06 13:48:31,841 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:48:46,094 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2023-01-06 13:48:46,856 DEBUG Corresponding type is already real float64.
2023-01-06 13:48:46,856 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:49:00,669 INFO Computing data fidelity for 114564 rotations and 2048 images at 76%
2023-01-06 13:49:01,486 DEBUG Corresponding type is already real float64.
2023-01-06 13:49:01,486 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:49:15,529 INFO Computing data fidelity for 114564 rotations and 2048 images at 77%
2023-01-06 13:49:16,293 DEBUG Corresponding type is already real float64.
2023-01-06 13:49:16,293 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:49:30,712 INFO Computing data fidelity for 114564 rotations and 2048 images at 78%
2023-01-06 13:49:31,473 DEBUG Corresponding type is already real float64.
2023-01-06 13:49:31,473 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:49:45,665 INFO Computing data fidelity for 114564 rotations and 2048 images at 79%
2023-01-06 13:49:46,418 DEBUG Corresponding type is already real float64.
2023-01-06 13:49:46,418 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:50:00,977 INFO Computing data fidelity for 114564 rotations and 2048 images at 80%
2023-01-06 13:50:01,761 DEBUG Corresponding type is already real float64.
2023-01-06 13:50:01,761 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:50:15,432 INFO Computing data fidelity for 114564 rotations and 2048 images at 81%
2023-01-06 13:50:16,302 DEBUG Corresponding type is already real float64.
2023-01-06 13:50:16,302 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:50:30,472 INFO Computing data fidelity for 114564 rotations and 2048 images at 82%
2023-01-06 13:50:31,234 DEBUG Corresponding type is already real float64.
2023-01-06 13:50:31,234 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:50:45,153 INFO Computing data fidelity for 114564 rotations and 2048 images at 83%
2023-01-06 13:50:46,025 DEBUG Corresponding type is already real float64.
2023-01-06 13:50:46,026 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:51:00,950 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2023-01-06 13:51:01,817 DEBUG Corresponding type is already real float64.
2023-01-06 13:51:01,817 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:51:16,267 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2023-01-06 13:51:17,039 DEBUG Corresponding type is already real float64.
2023-01-06 13:51:17,039 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:51:31,123 INFO Computing data fidelity for 114564 rotations and 2048 images at 85%
2023-01-06 13:51:31,990 DEBUG Corresponding type is already real float64.
2023-01-06 13:51:31,990 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:51:46,395 INFO Computing data fidelity for 114564 rotations and 2048 images at 86%
2023-01-06 13:51:47,221 DEBUG Corresponding type is already real float64.
2023-01-06 13:51:47,222 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:52:02,310 INFO Computing data fidelity for 114564 rotations and 2048 images at 87%
2023-01-06 13:52:03,163 DEBUG Corresponding type is already real float64.
2023-01-06 13:52:03,163 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:52:17,413 INFO Computing data fidelity for 114564 rotations and 2048 images at 88%
2023-01-06 13:52:18,217 DEBUG Corresponding type is already real float64.
2023-01-06 13:52:18,217 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:52:32,828 INFO Computing data fidelity for 114564 rotations and 2048 images at 89%
2023-01-06 13:52:33,595 DEBUG Corresponding type is already real float64.
2023-01-06 13:52:33,595 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:52:47,171 INFO Computing data fidelity for 114564 rotations and 2048 images at 90%
2023-01-06 13:52:47,938 DEBUG Corresponding type is already real float64.
2023-01-06 13:52:47,938 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:53:02,483 INFO Computing data fidelity for 114564 rotations and 2048 images at 91%
2023-01-06 13:53:03,343 DEBUG Corresponding type is already real float64.
2023-01-06 13:53:03,344 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:53:18,560 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2023-01-06 13:53:19,411 DEBUG Corresponding type is already real float64.
2023-01-06 13:53:19,411 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:53:34,562 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2023-01-06 13:53:35,404 DEBUG Corresponding type is already real float64.
2023-01-06 13:53:35,405 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:53:50,195 INFO Computing data fidelity for 114564 rotations and 2048 images at 93%
2023-01-06 13:53:50,976 DEBUG Corresponding type is already real float64.
2023-01-06 13:53:50,976 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:54:04,606 INFO Computing data fidelity for 114564 rotations and 2048 images at 94%
2023-01-06 13:54:05,374 DEBUG Corresponding type is already real float64.
2023-01-06 13:54:05,374 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:54:18,867 INFO Computing data fidelity for 114564 rotations and 2048 images at 95%
2023-01-06 13:54:19,649 DEBUG Corresponding type is already real float64.
2023-01-06 13:54:19,650 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:54:33,135 INFO Computing data fidelity for 114564 rotations and 2048 images at 96%
2023-01-06 13:54:33,898 DEBUG Corresponding type is already real float64.
2023-01-06 13:54:33,898 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:54:47,390 INFO Computing data fidelity for 114564 rotations and 2048 images at 97%
2023-01-06 13:54:48,150 DEBUG Corresponding type is already real float64.
2023-01-06 13:54:48,150 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:55:01,707 INFO Computing data fidelity for 114564 rotations and 2048 images at 98%
2023-01-06 13:55:02,465 DEBUG Corresponding type is already real float64.
2023-01-06 13:55:02,465 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:55:15,983 INFO Computing data fidelity for 114564 rotations and 2048 images at 99%
2023-01-06 13:55:16,475 DEBUG Corresponding type is already real float64.
2023-01-06 13:55:16,475 DEBUG nufft passed real_type for signal, converting
2023-01-06 13:55:28,106 INFO Computing data fidelity for 114564 rotations and 2048 images at 100%
2023-01-06 13:55:30,739 INFO Do lambda update step
2023-01-06 13:55:54,610 INFO Do rots update step
2023-01-06 13:55:55,622 INFO Projecting 2048 vectors onto 114564-simplex at 2%
2023-01-06 13:55:56,349 INFO Projecting 2048 vectors onto 114564-simplex at 4%
2023-01-06 13:55:57,073 INFO Projecting 2048 vectors onto 114564-simplex at 7%
2023-01-06 13:55:57,780 INFO Projecting 2048 vectors onto 114564-simplex at 9%
2023-01-06 13:55:58,475 INFO Projecting 2048 vectors onto 114564-simplex at 12%
2023-01-06 13:55:59,163 INFO Projecting 2048 vectors onto 114564-simplex at 14%
2023-01-06 13:55:59,849 INFO Projecting 2048 vectors onto 114564-simplex at 17%
2023-01-06 13:56:00,545 INFO Projecting 2048 vectors onto 114564-simplex at 19%
2023-01-06 13:56:01,238 INFO Projecting 2048 vectors onto 114564-simplex at 21%
2023-01-06 13:56:01,953 INFO Projecting 2048 vectors onto 114564-simplex at 24%
2023-01-06 13:56:02,827 INFO Projecting 2048 vectors onto 114564-simplex at 26%
2023-01-06 13:56:03,512 INFO Projecting 2048 vectors onto 114564-simplex at 29%
2023-01-06 13:56:04,196 INFO Projecting 2048 vectors onto 114564-simplex at 31%
2023-01-06 13:56:04,877 INFO Projecting 2048 vectors onto 114564-simplex at 34%
2023-01-06 13:56:05,578 INFO Projecting 2048 vectors onto 114564-simplex at 36%
2023-01-06 13:56:06,266 INFO Projecting 2048 vectors onto 114564-simplex at 39%
2023-01-06 13:56:06,942 INFO Projecting 2048 vectors onto 114564-simplex at 41%
2023-01-06 13:56:07,617 INFO Projecting 2048 vectors onto 114564-simplex at 43%
2023-01-06 13:56:08,289 INFO Projecting 2048 vectors onto 114564-simplex at 46%
2023-01-06 13:56:08,974 INFO Projecting 2048 vectors onto 114564-simplex at 48%
2023-01-06 13:56:09,858 INFO Projecting 2048 vectors onto 114564-simplex at 51%
2023-01-06 13:56:10,533 INFO Projecting 2048 vectors onto 114564-simplex at 53%
2023-01-06 13:56:11,212 INFO Projecting 2048 vectors onto 114564-simplex at 56%
2023-01-06 13:56:11,887 INFO Projecting 2048 vectors onto 114564-simplex at 58%
2023-01-06 13:56:12,569 INFO Projecting 2048 vectors onto 114564-simplex at 61%
2023-01-06 13:56:13,245 INFO Projecting 2048 vectors onto 114564-simplex at 63%
2023-01-06 13:56:13,925 INFO Projecting 2048 vectors onto 114564-simplex at 65%
2023-01-06 13:56:14,602 INFO Projecting 2048 vectors onto 114564-simplex at 68%
2023-01-06 13:56:15,276 INFO Projecting 2048 vectors onto 114564-simplex at 70%
2023-01-06 13:56:15,954 INFO Projecting 2048 vectors onto 114564-simplex at 73%
2023-01-06 13:56:16,869 INFO Projecting 2048 vectors onto 114564-simplex at 75%
2023-01-06 13:56:17,582 INFO Projecting 2048 vectors onto 114564-simplex at 78%
2023-01-06 13:56:18,289 INFO Projecting 2048 vectors onto 114564-simplex at 80%
2023-01-06 13:56:18,999 INFO Projecting 2048 vectors onto 114564-simplex at 83%
2023-01-06 13:56:19,712 INFO Projecting 2048 vectors onto 114564-simplex at 85%
2023-01-06 13:56:20,402 INFO Projecting 2048 vectors onto 114564-simplex at 87%
2023-01-06 13:56:21,122 INFO Projecting 2048 vectors onto 114564-simplex at 90%
2023-01-06 13:56:21,811 INFO Projecting 2048 vectors onto 114564-simplex at 92%
2023-01-06 13:56:22,477 INFO Projecting 2048 vectors onto 114564-simplex at 95%
2023-01-06 13:56:23,162 INFO Projecting 2048 vectors onto 114564-simplex at 97%
2023-01-06 13:56:23,830 INFO Projecting 2048 vectors onto 114564-simplex at 100%
2023-01-06 13:56:25,449 INFO Computing 50 means of 28427 points in at most 20 steps...
2023-01-06 13:56:29,200 INFO Computing 2048 means at 2%
2023-01-06 13:56:29,288 INFO Computing 50 means of 31496 points in at most 20 steps...
2023-01-06 13:56:33,952 INFO Computing 2048 means at 4%
2023-01-06 13:56:34,047 INFO Computing 50 means of 26629 points in at most 20 steps...
2023-01-06 13:56:37,779 INFO Computing 2048 means at 7%
2023-01-06 13:56:37,869 INFO Computing 50 means of 28347 points in at most 20 steps...
2023-01-06 13:56:41,819 INFO Computing 2048 means at 9%
2023-01-06 13:56:41,916 INFO Computing 50 means of 32809 points in at most 20 steps...
2023-01-06 13:56:46,457 INFO Computing 2048 means at 12%
2023-01-06 13:56:46,550 INFO Computing 50 means of 30163 points in at most 20 steps...
2023-01-06 13:56:50,509 INFO Computing 2048 means at 14%
2023-01-06 13:56:50,596 INFO Computing 50 means of 30491 points in at most 20 steps...
2023-01-06 13:56:54,578 INFO Computing 2048 means at 17%
2023-01-06 13:56:54,674 INFO Computing 50 means of 31115 points in at most 20 steps...
2023-01-06 13:56:58,990 INFO Computing 2048 means at 19%
2023-01-06 13:56:59,091 INFO Computing 50 means of 28598 points in at most 20 steps...
2023-01-06 13:57:03,118 INFO Computing 2048 means at 21%
2023-01-06 13:57:03,212 INFO Computing 50 means of 29045 points in at most 20 steps...
2023-01-06 13:57:07,256 INFO Computing 2048 means at 24%
2023-01-06 13:57:07,370 INFO Computing 50 means of 29535 points in at most 20 steps...
2023-01-06 13:57:11,223 INFO Computing 2048 means at 26%
2023-01-06 13:57:11,312 INFO Computing 50 means of 28644 points in at most 20 steps...
2023-01-06 13:57:14,871 INFO Computing 2048 means at 29%
2023-01-06 13:57:14,958 INFO Computing 50 means of 32746 points in at most 20 steps...
2023-01-06 13:57:19,319 INFO Computing 2048 means at 31%
2023-01-06 13:57:19,412 INFO Computing 50 means of 29336 points in at most 20 steps...
2023-01-06 13:57:23,188 INFO Computing 2048 means at 34%
2023-01-06 13:57:23,275 INFO Computing 50 means of 29075 points in at most 20 steps...
2023-01-06 13:57:27,015 INFO Computing 2048 means at 36%
2023-01-06 13:57:27,101 INFO Computing 50 means of 32131 points in at most 20 steps...
2023-01-06 13:57:31,368 INFO Computing 2048 means at 39%
2023-01-06 13:57:31,456 INFO Computing 50 means of 26765 points in at most 20 steps...
2023-01-06 13:57:34,990 INFO Computing 2048 means at 41%
2023-01-06 13:57:35,076 INFO Computing 50 means of 27833 points in at most 20 steps...
2023-01-06 13:57:38,737 INFO Computing 2048 means at 43%
2023-01-06 13:57:38,822 INFO Computing 50 means of 31061 points in at most 20 steps...
2023-01-06 13:57:42,851 INFO Computing 2048 means at 46%
2023-01-06 13:57:42,965 INFO Computing 50 means of 32289 points in at most 20 steps...
2023-01-06 13:57:47,306 INFO Computing 2048 means at 48%
2023-01-06 13:57:47,465 INFO Computing 50 means of 29314 points in at most 20 steps...
2023-01-06 13:57:51,253 INFO Computing 2048 means at 51%
2023-01-06 13:57:51,342 INFO Computing 50 means of 30954 points in at most 20 steps...
2023-01-06 13:57:55,403 INFO Computing 2048 means at 53%
2023-01-06 13:57:55,491 INFO Computing 50 means of 28662 points in at most 20 steps...
2023-01-06 13:57:59,275 INFO Computing 2048 means at 56%
2023-01-06 13:57:59,360 INFO Computing 50 means of 29251 points in at most 20 steps...
2023-01-06 13:58:03,218 INFO Computing 2048 means at 58%
2023-01-06 13:58:03,303 INFO Computing 50 means of 28220 points in at most 20 steps...
2023-01-06 13:58:07,081 INFO Computing 2048 means at 61%
2023-01-06 13:58:07,168 INFO Computing 50 means of 31993 points in at most 20 steps...
2023-01-06 13:58:11,245 INFO Computing 2048 means at 63%
2023-01-06 13:58:11,329 INFO Computing 50 means of 29550 points in at most 20 steps...
2023-01-06 13:58:14,995 INFO Computing 2048 means at 65%
2023-01-06 13:58:15,079 INFO Computing 50 means of 32171 points in at most 20 steps...
2023-01-06 13:58:19,030 INFO Computing 2048 means at 68%
2023-01-06 13:58:19,116 INFO Computing 50 means of 29438 points in at most 20 steps...
2023-01-06 13:58:22,725 INFO Computing 2048 means at 70%
2023-01-06 13:58:22,809 INFO Computing 50 means of 30689 points in at most 20 steps...
2023-01-06 13:58:26,563 INFO Computing 2048 means at 73%
2023-01-06 13:58:26,726 INFO Computing 50 means of 30681 points in at most 20 steps...
2023-01-06 13:58:30,730 INFO Computing 2048 means at 75%
2023-01-06 13:58:30,820 INFO Computing 50 means of 30945 points in at most 20 steps...
2023-01-06 13:58:34,822 INFO Computing 2048 means at 78%
2023-01-06 13:58:34,908 INFO Computing 50 means of 29468 points in at most 20 steps...
2023-01-06 13:58:38,688 INFO Computing 2048 means at 80%
2023-01-06 13:58:38,775 INFO Computing 50 means of 27301 points in at most 20 steps...
2023-01-06 13:58:42,277 INFO Computing 2048 means at 83%
2023-01-06 13:58:42,361 INFO Computing 50 means of 30004 points in at most 20 steps...
2023-01-06 13:58:46,157 INFO Computing 2048 means at 85%
2023-01-06 13:58:46,244 INFO Computing 50 means of 30218 points in at most 20 steps...
2023-01-06 13:58:50,109 INFO Computing 2048 means at 87%
2023-01-06 13:58:50,199 INFO Computing 50 means of 30062 points in at most 20 steps...
2023-01-06 13:58:53,991 INFO Computing 2048 means at 90%
2023-01-06 13:58:54,076 INFO Computing 50 means of 31823 points in at most 20 steps...
2023-01-06 13:58:58,169 INFO Computing 2048 means at 92%
2023-01-06 13:58:58,254 INFO Computing 50 means of 31719 points in at most 20 steps...
2023-01-06 13:59:02,356 INFO Computing 2048 means at 95%
2023-01-06 13:59:02,442 INFO Computing 50 means of 31889 points in at most 20 steps...
2023-01-06 13:59:06,666 INFO Computing 2048 means at 97%
2023-01-06 13:59:06,765 INFO Computing 48 means of 27836 points in at most 20 steps...
2023-01-06 13:59:10,576 INFO Computing 2048 means at 100%
2023-01-06 13:59:15,884 INFO Do vol update step
2023-01-06 13:59:15,886 INFO Compute adjoint forward mapping on the images
2023-01-06 13:59:17,730 DEBUG Corresponding type is already complex complex128.
2023-01-06 13:59:20,390 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2023-01-06 13:59:20,405 INFO Computing adjoint forward mappings from 2048 rotations at 50%
2023-01-06 13:59:22,030 DEBUG Corresponding type is already complex complex128.
2023-01-06 13:59:24,708 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2023-01-06 13:59:24,720 INFO Computing adjoint forward mappings from 2048 rotations at 100%
2023-01-06 13:59:25,710 DEBUG Corresponding type is already real float64.
2023-01-06 13:59:25,710 DEBUG anufft passed real_type for signal, converting
2023-01-06 13:59:32,213 INFO Computing kernel from 2048 rotations at 50%
2023-01-06 13:59:33,158 DEBUG Corresponding type is already real float64.
2023-01-06 13:59:33,158 DEBUG anufft passed real_type for signal, converting
2023-01-06 13:59:39,987 INFO Computing kernel from 2048 rotations at 100%
2023-01-06 13:59:39,989 INFO Computing non-centered Fourier Transform
2023-01-06 13:59:40,166 INFO Add ramp filter regularisation
2023-01-06 13:59:44,724 INFO Update data_discrepancies
2023-01-06 13:59:44,726 INFO Computing \|Ag.u - f_i\|^2
2023-01-06 13:59:45,670 DEBUG Corresponding type is already real float64.
2023-01-06 13:59:45,670 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:00:00,557 INFO Computing data fidelity for 114564 rotations and 2048 images at 0%
2023-01-06 14:00:01,351 DEBUG Corresponding type is already real float64.
2023-01-06 14:00:01,352 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:00:16,649 INFO Computing data fidelity for 114564 rotations and 2048 images at 1%
2023-01-06 14:00:17,507 DEBUG Corresponding type is already real float64.
2023-01-06 14:00:17,507 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:00:32,112 INFO Computing data fidelity for 114564 rotations and 2048 images at 2%
2023-01-06 14:00:32,950 DEBUG Corresponding type is already real float64.
2023-01-06 14:00:32,951 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:00:47,475 INFO Computing data fidelity for 114564 rotations and 2048 images at 3%
2023-01-06 14:00:48,351 DEBUG Corresponding type is already real float64.
2023-01-06 14:00:48,351 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:01:01,532 INFO Computing data fidelity for 114564 rotations and 2048 images at 4%
2023-01-06 14:01:02,269 DEBUG Corresponding type is already real float64.
2023-01-06 14:01:02,269 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:01:15,392 INFO Computing data fidelity for 114564 rotations and 2048 images at 5%
2023-01-06 14:01:16,149 DEBUG Corresponding type is already real float64.
2023-01-06 14:01:16,149 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:01:30,065 INFO Computing data fidelity for 114564 rotations and 2048 images at 6%
2023-01-06 14:01:30,793 DEBUG Corresponding type is already real float64.
2023-01-06 14:01:30,793 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:01:44,421 INFO Computing data fidelity for 114564 rotations and 2048 images at 7%
2023-01-06 14:01:45,161 DEBUG Corresponding type is already real float64.
2023-01-06 14:01:45,161 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:01:58,266 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2023-01-06 14:01:58,993 DEBUG Corresponding type is already real float64.
2023-01-06 14:01:58,993 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:02:12,905 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2023-01-06 14:02:13,708 DEBUG Corresponding type is already real float64.
2023-01-06 14:02:13,708 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:02:27,053 INFO Computing data fidelity for 114564 rotations and 2048 images at 9%
2023-01-06 14:02:27,786 DEBUG Corresponding type is already real float64.
2023-01-06 14:02:27,786 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:02:41,795 INFO Computing data fidelity for 114564 rotations and 2048 images at 10%
2023-01-06 14:02:42,608 DEBUG Corresponding type is already real float64.
2023-01-06 14:02:42,608 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:02:57,174 INFO Computing data fidelity for 114564 rotations and 2048 images at 11%
2023-01-06 14:02:57,937 DEBUG Corresponding type is already real float64.
2023-01-06 14:02:57,937 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:03:12,613 INFO Computing data fidelity for 114564 rotations and 2048 images at 12%
2023-01-06 14:03:13,412 DEBUG Corresponding type is already real float64.
2023-01-06 14:03:13,412 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:03:27,215 INFO Computing data fidelity for 114564 rotations and 2048 images at 13%
2023-01-06 14:03:28,053 DEBUG Corresponding type is already real float64.
2023-01-06 14:03:28,053 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:03:41,647 INFO Computing data fidelity for 114564 rotations and 2048 images at 14%
2023-01-06 14:03:42,389 DEBUG Corresponding type is already real float64.
2023-01-06 14:03:42,389 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:03:55,582 INFO Computing data fidelity for 114564 rotations and 2048 images at 15%
2023-01-06 14:03:56,339 DEBUG Corresponding type is already real float64.
2023-01-06 14:03:56,339 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:04:10,221 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2023-01-06 14:04:10,968 DEBUG Corresponding type is already real float64.
2023-01-06 14:04:10,968 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:04:24,086 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2023-01-06 14:04:24,842 DEBUG Corresponding type is already real float64.
2023-01-06 14:04:24,843 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:04:37,970 INFO Computing data fidelity for 114564 rotations and 2048 images at 17%
2023-01-06 14:04:38,713 DEBUG Corresponding type is already real float64.
2023-01-06 14:04:38,713 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:04:51,832 INFO Computing data fidelity for 114564 rotations and 2048 images at 18%
2023-01-06 14:04:52,575 DEBUG Corresponding type is already real float64.
2023-01-06 14:04:52,575 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:05:05,770 INFO Computing data fidelity for 114564 rotations and 2048 images at 19%
2023-01-06 14:05:06,511 DEBUG Corresponding type is already real float64.
2023-01-06 14:05:06,511 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:05:19,528 INFO Computing data fidelity for 114564 rotations and 2048 images at 20%
2023-01-06 14:05:20,284 DEBUG Corresponding type is already real float64.
2023-01-06 14:05:20,284 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:05:33,595 INFO Computing data fidelity for 114564 rotations and 2048 images at 21%
2023-01-06 14:05:34,345 DEBUG Corresponding type is already real float64.
2023-01-06 14:05:34,345 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:05:48,415 INFO Computing data fidelity for 114564 rotations and 2048 images at 22%
2023-01-06 14:05:49,170 DEBUG Corresponding type is already real float64.
2023-01-06 14:05:49,170 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:06:02,730 INFO Computing data fidelity for 114564 rotations and 2048 images at 23%
2023-01-06 14:06:03,509 DEBUG Corresponding type is already real float64.
2023-01-06 14:06:03,509 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:06:17,689 INFO Computing data fidelity for 114564 rotations and 2048 images at 24%
2023-01-06 14:06:18,457 DEBUG Corresponding type is already real float64.
2023-01-06 14:06:18,457 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:06:31,894 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2023-01-06 14:06:32,645 DEBUG Corresponding type is already real float64.
2023-01-06 14:06:32,646 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:06:46,302 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2023-01-06 14:06:47,132 DEBUG Corresponding type is already real float64.
2023-01-06 14:06:47,132 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:07:00,788 INFO Computing data fidelity for 114564 rotations and 2048 images at 26%
2023-01-06 14:07:01,595 DEBUG Corresponding type is already real float64.
2023-01-06 14:07:01,595 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:07:15,365 INFO Computing data fidelity for 114564 rotations and 2048 images at 27%
2023-01-06 14:07:16,216 DEBUG Corresponding type is already real float64.
2023-01-06 14:07:16,216 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:07:30,425 INFO Computing data fidelity for 114564 rotations and 2048 images at 28%
2023-01-06 14:07:31,205 DEBUG Corresponding type is already real float64.
2023-01-06 14:07:31,206 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:07:45,233 INFO Computing data fidelity for 114564 rotations and 2048 images at 29%
2023-01-06 14:07:46,084 DEBUG Corresponding type is already real float64.
2023-01-06 14:07:46,084 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:08:00,627 INFO Computing data fidelity for 114564 rotations and 2048 images at 30%
2023-01-06 14:08:01,421 DEBUG Corresponding type is already real float64.
2023-01-06 14:08:01,421 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:08:16,042 INFO Computing data fidelity for 114564 rotations and 2048 images at 31%
2023-01-06 14:08:16,821 DEBUG Corresponding type is already real float64.
2023-01-06 14:08:16,821 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:08:31,076 INFO Computing data fidelity for 114564 rotations and 2048 images at 32%
2023-01-06 14:08:31,850 DEBUG Corresponding type is already real float64.
2023-01-06 14:08:31,850 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:08:45,524 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2023-01-06 14:08:46,299 DEBUG Corresponding type is already real float64.
2023-01-06 14:08:46,299 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:08:59,840 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2023-01-06 14:09:00,617 DEBUG Corresponding type is already real float64.
2023-01-06 14:09:00,618 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:09:14,120 INFO Computing data fidelity for 114564 rotations and 2048 images at 34%
2023-01-06 14:09:14,877 DEBUG Corresponding type is already real float64.
2023-01-06 14:09:14,877 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:09:28,339 INFO Computing data fidelity for 114564 rotations and 2048 images at 35%
2023-01-06 14:09:29,098 DEBUG Corresponding type is already real float64.
2023-01-06 14:09:29,098 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:09:43,220 INFO Computing data fidelity for 114564 rotations and 2048 images at 36%
2023-01-06 14:09:43,973 DEBUG Corresponding type is already real float64.
2023-01-06 14:09:43,973 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:09:58,509 INFO Computing data fidelity for 114564 rotations and 2048 images at 37%
2023-01-06 14:09:59,305 DEBUG Corresponding type is already real float64.
2023-01-06 14:09:59,305 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:10:13,123 INFO Computing data fidelity for 114564 rotations and 2048 images at 38%
2023-01-06 14:10:13,877 DEBUG Corresponding type is already real float64.
2023-01-06 14:10:13,877 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:10:27,240 INFO Computing data fidelity for 114564 rotations and 2048 images at 39%
2023-01-06 14:10:27,984 DEBUG Corresponding type is already real float64.
2023-01-06 14:10:27,984 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:10:41,416 INFO Computing data fidelity for 114564 rotations and 2048 images at 40%
2023-01-06 14:10:42,173 DEBUG Corresponding type is already real float64.
2023-01-06 14:10:42,173 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:10:56,106 INFO Computing data fidelity for 114564 rotations and 2048 images at 41%
2023-01-06 14:10:56,919 DEBUG Corresponding type is already real float64.
2023-01-06 14:10:56,919 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:11:11,385 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2023-01-06 14:11:12,180 DEBUG Corresponding type is already real float64.
2023-01-06 14:11:12,181 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:11:27,122 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2023-01-06 14:11:27,982 DEBUG Corresponding type is already real float64.
2023-01-06 14:11:27,982 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:11:42,191 INFO Computing data fidelity for 114564 rotations and 2048 images at 43%
2023-01-06 14:11:42,978 DEBUG Corresponding type is already real float64.
2023-01-06 14:11:42,978 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:11:56,653 INFO Computing data fidelity for 114564 rotations and 2048 images at 44%
2023-01-06 14:11:57,440 DEBUG Corresponding type is already real float64.
2023-01-06 14:11:57,441 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:12:11,171 INFO Computing data fidelity for 114564 rotations and 2048 images at 45%
2023-01-06 14:12:11,932 DEBUG Corresponding type is already real float64.
2023-01-06 14:12:11,932 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:12:25,417 INFO Computing data fidelity for 114564 rotations and 2048 images at 46%
2023-01-06 14:12:26,180 DEBUG Corresponding type is already real float64.
2023-01-06 14:12:26,180 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:12:39,621 INFO Computing data fidelity for 114564 rotations and 2048 images at 47%
2023-01-06 14:12:40,371 DEBUG Corresponding type is already real float64.
2023-01-06 14:12:40,371 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:12:54,466 INFO Computing data fidelity for 114564 rotations and 2048 images at 48%
2023-01-06 14:12:55,224 DEBUG Corresponding type is already real float64.
2023-01-06 14:12:55,224 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:13:09,045 INFO Computing data fidelity for 114564 rotations and 2048 images at 49%
2023-01-06 14:13:09,829 DEBUG Corresponding type is already real float64.
2023-01-06 14:13:09,830 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:13:23,519 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2023-01-06 14:13:24,313 DEBUG Corresponding type is already real float64.
2023-01-06 14:13:24,313 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:13:38,484 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2023-01-06 14:13:39,249 DEBUG Corresponding type is already real float64.
2023-01-06 14:13:39,249 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:13:53,640 INFO Computing data fidelity for 114564 rotations and 2048 images at 51%
2023-01-06 14:13:54,400 DEBUG Corresponding type is already real float64.
2023-01-06 14:13:54,400 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:14:08,309 INFO Computing data fidelity for 114564 rotations and 2048 images at 52%
2023-01-06 14:14:09,065 DEBUG Corresponding type is already real float64.
2023-01-06 14:14:09,065 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:14:23,291 INFO Computing data fidelity for 114564 rotations and 2048 images at 53%
2023-01-06 14:14:24,137 DEBUG Corresponding type is already real float64.
2023-01-06 14:14:24,137 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:14:37,833 INFO Computing data fidelity for 114564 rotations and 2048 images at 54%
2023-01-06 14:14:38,593 DEBUG Corresponding type is already real float64.
2023-01-06 14:14:38,593 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:14:52,057 INFO Computing data fidelity for 114564 rotations and 2048 images at 55%
2023-01-06 14:14:52,812 DEBUG Corresponding type is already real float64.
2023-01-06 14:14:52,812 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:15:06,414 INFO Computing data fidelity for 114564 rotations and 2048 images at 56%
2023-01-06 14:15:07,175 DEBUG Corresponding type is already real float64.
2023-01-06 14:15:07,176 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:15:22,142 INFO Computing data fidelity for 114564 rotations and 2048 images at 57%
2023-01-06 14:15:22,984 DEBUG Corresponding type is already real float64.
2023-01-06 14:15:22,984 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:15:37,869 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2023-01-06 14:15:38,703 DEBUG Corresponding type is already real float64.
2023-01-06 14:15:38,703 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:15:53,598 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2023-01-06 14:15:54,350 DEBUG Corresponding type is already real float64.
2023-01-06 14:15:54,350 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:16:08,668 INFO Computing data fidelity for 114564 rotations and 2048 images at 59%
2023-01-06 14:16:09,530 DEBUG Corresponding type is already real float64.
2023-01-06 14:16:09,530 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:16:23,893 INFO Computing data fidelity for 114564 rotations and 2048 images at 60%
2023-01-06 14:16:24,686 DEBUG Corresponding type is already real float64.
2023-01-06 14:16:24,686 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:16:39,126 INFO Computing data fidelity for 114564 rotations and 2048 images at 61%
2023-01-06 14:16:39,960 DEBUG Corresponding type is already real float64.
2023-01-06 14:16:39,961 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:16:54,269 INFO Computing data fidelity for 114564 rotations and 2048 images at 62%
2023-01-06 14:16:55,037 DEBUG Corresponding type is already real float64.
2023-01-06 14:16:55,037 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:17:09,067 INFO Computing data fidelity for 114564 rotations and 2048 images at 63%
2023-01-06 14:17:09,896 DEBUG Corresponding type is already real float64.
2023-01-06 14:17:09,896 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:17:23,751 INFO Computing data fidelity for 114564 rotations and 2048 images at 64%
2023-01-06 14:17:24,562 DEBUG Corresponding type is already real float64.
2023-01-06 14:17:24,562 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:17:39,499 INFO Computing data fidelity for 114564 rotations and 2048 images at 65%
2023-01-06 14:17:40,290 DEBUG Corresponding type is already real float64.
2023-01-06 14:17:40,290 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:17:54,765 INFO Computing data fidelity for 114564 rotations and 2048 images at 66%
2023-01-06 14:17:55,622 DEBUG Corresponding type is already real float64.
2023-01-06 14:17:55,622 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:18:10,188 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2023-01-06 14:18:10,949 DEBUG Corresponding type is already real float64.
2023-01-06 14:18:10,949 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:18:25,465 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2023-01-06 14:18:26,282 DEBUG Corresponding type is already real float64.
2023-01-06 14:18:26,282 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:18:40,495 INFO Computing data fidelity for 114564 rotations and 2048 images at 68%
2023-01-06 14:18:41,256 DEBUG Corresponding type is already real float64.
2023-01-06 14:18:41,256 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:18:55,194 INFO Computing data fidelity for 114564 rotations and 2048 images at 69%
2023-01-06 14:18:55,958 DEBUG Corresponding type is already real float64.
2023-01-06 14:18:55,959 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:19:09,484 INFO Computing data fidelity for 114564 rotations and 2048 images at 70%
2023-01-06 14:19:10,295 DEBUG Corresponding type is already real float64.
2023-01-06 14:19:10,295 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:19:25,053 INFO Computing data fidelity for 114564 rotations and 2048 images at 71%
2023-01-06 14:19:25,849 DEBUG Corresponding type is already real float64.
2023-01-06 14:19:25,850 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:19:40,636 INFO Computing data fidelity for 114564 rotations and 2048 images at 72%
2023-01-06 14:19:41,394 DEBUG Corresponding type is already real float64.
2023-01-06 14:19:41,394 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:19:56,076 INFO Computing data fidelity for 114564 rotations and 2048 images at 73%
2023-01-06 14:19:56,921 DEBUG Corresponding type is already real float64.
2023-01-06 14:19:56,921 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:20:10,977 INFO Computing data fidelity for 114564 rotations and 2048 images at 74%
2023-01-06 14:20:11,741 DEBUG Corresponding type is already real float64.
2023-01-06 14:20:11,741 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:20:25,831 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2023-01-06 14:20:26,637 DEBUG Corresponding type is already real float64.
2023-01-06 14:20:26,637 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:20:40,695 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2023-01-06 14:20:41,458 DEBUG Corresponding type is already real float64.
2023-01-06 14:20:41,458 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:20:55,249 INFO Computing data fidelity for 114564 rotations and 2048 images at 76%
2023-01-06 14:20:56,031 DEBUG Corresponding type is already real float64.
2023-01-06 14:20:56,031 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:21:10,775 INFO Computing data fidelity for 114564 rotations and 2048 images at 77%
2023-01-06 14:21:11,587 DEBUG Corresponding type is already real float64.
2023-01-06 14:21:11,587 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:21:26,220 INFO Computing data fidelity for 114564 rotations and 2048 images at 78%
2023-01-06 14:21:27,066 DEBUG Corresponding type is already real float64.
2023-01-06 14:21:27,066 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:21:41,407 INFO Computing data fidelity for 114564 rotations and 2048 images at 79%
2023-01-06 14:21:42,226 DEBUG Corresponding type is already real float64.
2023-01-06 14:21:42,226 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:21:56,729 INFO Computing data fidelity for 114564 rotations and 2048 images at 80%
2023-01-06 14:21:57,570 DEBUG Corresponding type is already real float64.
2023-01-06 14:21:57,570 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:22:12,171 INFO Computing data fidelity for 114564 rotations and 2048 images at 81%
2023-01-06 14:22:13,021 DEBUG Corresponding type is already real float64.
2023-01-06 14:22:13,021 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:22:28,169 INFO Computing data fidelity for 114564 rotations and 2048 images at 82%
2023-01-06 14:22:29,032 DEBUG Corresponding type is already real float64.
2023-01-06 14:22:29,032 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:22:43,138 INFO Computing data fidelity for 114564 rotations and 2048 images at 83%
2023-01-06 14:22:43,907 DEBUG Corresponding type is already real float64.
2023-01-06 14:22:43,907 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:22:58,017 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2023-01-06 14:22:58,832 DEBUG Corresponding type is already real float64.
2023-01-06 14:22:58,832 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:23:13,573 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2023-01-06 14:23:14,331 DEBUG Corresponding type is already real float64.
2023-01-06 14:23:14,331 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:23:28,818 INFO Computing data fidelity for 114564 rotations and 2048 images at 85%
2023-01-06 14:23:29,701 DEBUG Corresponding type is already real float64.
2023-01-06 14:23:29,701 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:23:44,918 INFO Computing data fidelity for 114564 rotations and 2048 images at 86%
2023-01-06 14:23:45,722 DEBUG Corresponding type is already real float64.
2023-01-06 14:23:45,722 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:23:59,575 INFO Computing data fidelity for 114564 rotations and 2048 images at 87%
2023-01-06 14:24:00,341 DEBUG Corresponding type is already real float64.
2023-01-06 14:24:00,341 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:24:14,631 INFO Computing data fidelity for 114564 rotations and 2048 images at 88%
2023-01-06 14:24:15,429 DEBUG Corresponding type is already real float64.
2023-01-06 14:24:15,429 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:24:30,096 INFO Computing data fidelity for 114564 rotations and 2048 images at 89%
2023-01-06 14:24:30,871 DEBUG Corresponding type is already real float64.
2023-01-06 14:24:30,872 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:24:44,756 INFO Computing data fidelity for 114564 rotations and 2048 images at 90%
2023-01-06 14:24:45,616 DEBUG Corresponding type is already real float64.
2023-01-06 14:24:45,616 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:24:59,713 INFO Computing data fidelity for 114564 rotations and 2048 images at 91%
2023-01-06 14:25:00,478 DEBUG Corresponding type is already real float64.
2023-01-06 14:25:00,478 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:25:14,896 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2023-01-06 14:25:15,663 DEBUG Corresponding type is already real float64.
2023-01-06 14:25:15,663 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:25:30,620 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2023-01-06 14:25:31,400 DEBUG Corresponding type is already real float64.
2023-01-06 14:25:31,400 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:25:46,251 INFO Computing data fidelity for 114564 rotations and 2048 images at 93%
2023-01-06 14:25:47,306 DEBUG Corresponding type is already real float64.
2023-01-06 14:25:47,306 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:26:02,485 INFO Computing data fidelity for 114564 rotations and 2048 images at 94%
2023-01-06 14:26:03,290 DEBUG Corresponding type is already real float64.
2023-01-06 14:26:03,290 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:26:17,382 INFO Computing data fidelity for 114564 rotations and 2048 images at 95%
2023-01-06 14:26:18,163 DEBUG Corresponding type is already real float64.
2023-01-06 14:26:18,164 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:26:31,974 INFO Computing data fidelity for 114564 rotations and 2048 images at 96%
2023-01-06 14:26:32,757 DEBUG Corresponding type is already real float64.
2023-01-06 14:26:32,757 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:26:47,874 INFO Computing data fidelity for 114564 rotations and 2048 images at 97%
2023-01-06 14:26:48,762 DEBUG Corresponding type is already real float64.
2023-01-06 14:26:48,762 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:27:04,198 INFO Computing data fidelity for 114564 rotations and 2048 images at 98%
2023-01-06 14:27:04,980 DEBUG Corresponding type is already real float64.
2023-01-06 14:27:04,980 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:27:19,903 INFO Computing data fidelity for 114564 rotations and 2048 images at 99%
2023-01-06 14:27:20,381 DEBUG Corresponding type is already real float64.
2023-01-06 14:27:20,381 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:27:32,921 INFO Computing data fidelity for 114564 rotations and 2048 images at 100%
2023-01-06 14:27:34,855 INFO Do lambda update step
2023-01-06 14:27:58,638 INFO Do rots update step
2023-01-06 14:27:59,549 INFO Projecting 2048 vectors onto 114564-simplex at 2%
2023-01-06 14:28:00,175 INFO Projecting 2048 vectors onto 114564-simplex at 4%
2023-01-06 14:28:00,848 INFO Projecting 2048 vectors onto 114564-simplex at 7%
2023-01-06 14:28:01,489 INFO Projecting 2048 vectors onto 114564-simplex at 9%
2023-01-06 14:28:02,102 INFO Projecting 2048 vectors onto 114564-simplex at 12%
2023-01-06 14:28:02,722 INFO Projecting 2048 vectors onto 114564-simplex at 14%
2023-01-06 14:28:03,354 INFO Projecting 2048 vectors onto 114564-simplex at 17%
2023-01-06 14:28:03,981 INFO Projecting 2048 vectors onto 114564-simplex at 19%
2023-01-06 14:28:04,599 INFO Projecting 2048 vectors onto 114564-simplex at 21%
2023-01-06 14:28:05,224 INFO Projecting 2048 vectors onto 114564-simplex at 24%
2023-01-06 14:28:06,018 INFO Projecting 2048 vectors onto 114564-simplex at 26%
2023-01-06 14:28:06,636 INFO Projecting 2048 vectors onto 114564-simplex at 29%
2023-01-06 14:28:07,255 INFO Projecting 2048 vectors onto 114564-simplex at 31%
2023-01-06 14:28:07,876 INFO Projecting 2048 vectors onto 114564-simplex at 34%
2023-01-06 14:28:08,478 INFO Projecting 2048 vectors onto 114564-simplex at 36%
2023-01-06 14:28:09,096 INFO Projecting 2048 vectors onto 114564-simplex at 39%
2023-01-06 14:28:09,719 INFO Projecting 2048 vectors onto 114564-simplex at 41%
2023-01-06 14:28:10,339 INFO Projecting 2048 vectors onto 114564-simplex at 43%
2023-01-06 14:28:10,966 INFO Projecting 2048 vectors onto 114564-simplex at 46%
2023-01-06 14:28:11,575 INFO Projecting 2048 vectors onto 114564-simplex at 48%
2023-01-06 14:28:12,363 INFO Projecting 2048 vectors onto 114564-simplex at 51%
2023-01-06 14:28:12,982 INFO Projecting 2048 vectors onto 114564-simplex at 53%
2023-01-06 14:28:13,608 INFO Projecting 2048 vectors onto 114564-simplex at 56%
2023-01-06 14:28:14,225 INFO Projecting 2048 vectors onto 114564-simplex at 58%
2023-01-06 14:28:14,827 INFO Projecting 2048 vectors onto 114564-simplex at 61%
2023-01-06 14:28:15,441 INFO Projecting 2048 vectors onto 114564-simplex at 63%
2023-01-06 14:28:16,063 INFO Projecting 2048 vectors onto 114564-simplex at 65%
2023-01-06 14:28:16,686 INFO Projecting 2048 vectors onto 114564-simplex at 68%
2023-01-06 14:28:17,312 INFO Projecting 2048 vectors onto 114564-simplex at 70%
2023-01-06 14:28:17,937 INFO Projecting 2048 vectors onto 114564-simplex at 73%
2023-01-06 14:28:18,719 INFO Projecting 2048 vectors onto 114564-simplex at 75%
2023-01-06 14:28:19,341 INFO Projecting 2048 vectors onto 114564-simplex at 78%
2023-01-06 14:28:19,957 INFO Projecting 2048 vectors onto 114564-simplex at 80%
2023-01-06 14:28:20,570 INFO Projecting 2048 vectors onto 114564-simplex at 83%
2023-01-06 14:28:21,180 INFO Projecting 2048 vectors onto 114564-simplex at 85%
2023-01-06 14:28:21,794 INFO Projecting 2048 vectors onto 114564-simplex at 87%
2023-01-06 14:28:22,418 INFO Projecting 2048 vectors onto 114564-simplex at 90%
2023-01-06 14:28:23,042 INFO Projecting 2048 vectors onto 114564-simplex at 92%
2023-01-06 14:28:23,661 INFO Projecting 2048 vectors onto 114564-simplex at 95%
2023-01-06 14:28:24,284 INFO Projecting 2048 vectors onto 114564-simplex at 97%
2023-01-06 14:28:24,900 INFO Projecting 2048 vectors onto 114564-simplex at 100%
2023-01-06 14:28:26,181 INFO Computing 50 means of 28130 points in at most 20 steps...
2023-01-06 14:28:29,856 INFO Computing 2048 means at 2%
2023-01-06 14:28:29,956 INFO Computing 50 means of 29501 points in at most 20 steps...
2023-01-06 14:28:33,736 INFO Computing 2048 means at 4%
2023-01-06 14:28:33,814 INFO Computing 50 means of 26941 points in at most 20 steps...
2023-01-06 14:28:37,229 INFO Computing 2048 means at 7%
2023-01-06 14:28:37,315 INFO Computing 50 means of 29160 points in at most 20 steps...
2023-01-06 14:28:41,211 INFO Computing 2048 means at 9%
2023-01-06 14:28:41,293 INFO Computing 50 means of 32060 points in at most 20 steps...
2023-01-06 14:28:45,424 INFO Computing 2048 means at 12%
2023-01-06 14:28:45,506 INFO Computing 50 means of 30020 points in at most 20 steps...
2023-01-06 14:28:49,163 INFO Computing 2048 means at 14%
2023-01-06 14:28:49,243 INFO Computing 50 means of 28696 points in at most 20 steps...
2023-01-06 14:28:52,884 INFO Computing 2048 means at 17%
2023-01-06 14:28:52,970 INFO Computing 50 means of 31007 points in at most 20 steps...
2023-01-06 14:28:56,914 INFO Computing 2048 means at 19%
2023-01-06 14:28:57,007 INFO Computing 50 means of 30228 points in at most 20 steps...
2023-01-06 14:29:00,880 INFO Computing 2048 means at 21%
2023-01-06 14:29:00,964 INFO Computing 50 means of 28762 points in at most 20 steps...
2023-01-06 14:29:04,741 INFO Computing 2048 means at 24%
2023-01-06 14:29:04,851 INFO Computing 50 means of 28659 points in at most 20 steps...
2023-01-06 14:29:08,498 INFO Computing 2048 means at 26%
2023-01-06 14:29:08,582 INFO Computing 50 means of 30457 points in at most 20 steps...
2023-01-06 14:29:12,404 INFO Computing 2048 means at 29%
2023-01-06 14:29:12,486 INFO Computing 50 means of 32026 points in at most 20 steps...
2023-01-06 14:29:16,311 INFO Computing 2048 means at 31%
2023-01-06 14:29:16,404 INFO Computing 50 means of 30229 points in at most 20 steps...
2023-01-06 14:29:20,149 INFO Computing 2048 means at 34%
2023-01-06 14:29:20,230 INFO Computing 50 means of 30437 points in at most 20 steps...
2023-01-06 14:29:24,025 INFO Computing 2048 means at 36%
2023-01-06 14:29:24,120 INFO Computing 50 means of 31257 points in at most 20 steps...
2023-01-06 14:29:27,896 INFO Computing 2048 means at 39%
2023-01-06 14:29:27,979 INFO Computing 50 means of 27127 points in at most 20 steps...
2023-01-06 14:29:31,529 INFO Computing 2048 means at 41%
2023-01-06 14:29:31,619 INFO Computing 50 means of 27871 points in at most 20 steps...
2023-01-06 14:29:35,375 INFO Computing 2048 means at 43%
2023-01-06 14:29:35,457 INFO Computing 50 means of 29741 points in at most 20 steps...
2023-01-06 14:29:39,487 INFO Computing 2048 means at 46%
2023-01-06 14:29:39,581 INFO Computing 50 means of 31424 points in at most 20 steps...
2023-01-06 14:29:43,837 INFO Computing 2048 means at 48%
2023-01-06 14:29:43,967 INFO Computing 50 means of 28843 points in at most 20 steps...
2023-01-06 14:29:47,661 INFO Computing 2048 means at 51%
2023-01-06 14:29:47,763 INFO Computing 50 means of 30788 points in at most 20 steps...
2023-01-06 14:29:51,745 INFO Computing 2048 means at 53%
2023-01-06 14:29:51,829 INFO Computing 50 means of 29272 points in at most 20 steps...
2023-01-06 14:29:55,489 INFO Computing 2048 means at 56%
2023-01-06 14:29:55,574 INFO Computing 50 means of 29483 points in at most 20 steps...
2023-01-06 14:29:59,390 INFO Computing 2048 means at 58%
2023-01-06 14:29:59,478 INFO Computing 50 means of 28829 points in at most 20 steps...
2023-01-06 14:30:03,307 INFO Computing 2048 means at 61%
2023-01-06 14:30:03,394 INFO Computing 50 means of 30053 points in at most 20 steps...
2023-01-06 14:30:07,183 INFO Computing 2048 means at 63%
2023-01-06 14:30:07,266 INFO Computing 50 means of 29987 points in at most 20 steps...
2023-01-06 14:30:11,121 INFO Computing 2048 means at 65%
2023-01-06 14:30:11,204 INFO Computing 50 means of 31449 points in at most 20 steps...
2023-01-06 14:30:15,239 INFO Computing 2048 means at 68%
2023-01-06 14:30:15,326 INFO Computing 50 means of 29494 points in at most 20 steps...
2023-01-06 14:30:19,228 INFO Computing 2048 means at 70%
2023-01-06 14:30:19,327 INFO Computing 50 means of 30089 points in at most 20 steps...
2023-01-06 14:30:23,488 INFO Computing 2048 means at 73%
2023-01-06 14:30:23,622 INFO Computing 50 means of 29790 points in at most 20 steps...
2023-01-06 14:30:27,723 INFO Computing 2048 means at 75%
2023-01-06 14:30:27,815 INFO Computing 50 means of 29362 points in at most 20 steps...
2023-01-06 14:30:31,913 INFO Computing 2048 means at 78%
2023-01-06 14:30:32,002 INFO Computing 50 means of 29147 points in at most 20 steps...
2023-01-06 14:30:35,947 INFO Computing 2048 means at 80%
2023-01-06 14:30:36,031 INFO Computing 50 means of 27902 points in at most 20 steps...
2023-01-06 14:30:39,891 INFO Computing 2048 means at 83%
2023-01-06 14:30:39,982 INFO Computing 50 means of 29418 points in at most 20 steps...
2023-01-06 14:30:44,092 INFO Computing 2048 means at 85%
2023-01-06 14:30:44,181 INFO Computing 50 means of 30064 points in at most 20 steps...
2023-01-06 14:30:48,200 INFO Computing 2048 means at 87%
2023-01-06 14:30:48,284 INFO Computing 50 means of 30882 points in at most 20 steps...
2023-01-06 14:30:52,711 INFO Computing 2048 means at 90%
2023-01-06 14:30:52,806 INFO Computing 50 means of 29497 points in at most 20 steps...
2023-01-06 14:30:57,013 INFO Computing 2048 means at 92%
2023-01-06 14:30:57,104 INFO Computing 50 means of 30964 points in at most 20 steps...
2023-01-06 14:31:01,436 INFO Computing 2048 means at 95%
2023-01-06 14:31:01,528 INFO Computing 50 means of 32566 points in at most 20 steps...
2023-01-06 14:31:06,208 INFO Computing 2048 means at 97%
2023-01-06 14:31:06,303 INFO Computing 48 means of 28294 points in at most 20 steps...
2023-01-06 14:31:10,162 INFO Computing 2048 means at 100%
2023-01-06 14:31:15,372 INFO Do vol update step
2023-01-06 14:31:15,374 INFO Compute adjoint forward mapping on the images
2023-01-06 14:31:17,324 DEBUG Corresponding type is already complex complex128.
2023-01-06 14:31:20,285 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2023-01-06 14:31:20,300 INFO Computing adjoint forward mappings from 2048 rotations at 50%
2023-01-06 14:31:22,068 DEBUG Corresponding type is already complex complex128.
2023-01-06 14:31:24,824 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2023-01-06 14:31:24,838 INFO Computing adjoint forward mappings from 2048 rotations at 100%
2023-01-06 14:31:25,842 DEBUG Corresponding type is already real float64.
2023-01-06 14:31:25,842 DEBUG anufft passed real_type for signal, converting
2023-01-06 14:31:32,699 INFO Computing kernel from 2048 rotations at 50%
2023-01-06 14:31:33,636 DEBUG Corresponding type is already real float64.
2023-01-06 14:31:33,637 DEBUG anufft passed real_type for signal, converting
2023-01-06 14:31:40,802 INFO Computing kernel from 2048 rotations at 100%
2023-01-06 14:31:40,804 INFO Computing non-centered Fourier Transform
2023-01-06 14:31:40,987 INFO Add ramp filter regularisation
2023-01-06 14:31:45,958 INFO Update data_discrepancies
2023-01-06 14:31:45,959 INFO Computing \|Ag.u - f_i\|^2
2023-01-06 14:31:46,933 DEBUG Corresponding type is already real float64.
2023-01-06 14:31:46,933 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:32:02,258 INFO Computing data fidelity for 114564 rotations and 2048 images at 0%
2023-01-06 14:32:03,022 DEBUG Corresponding type is already real float64.
2023-01-06 14:32:03,022 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:32:17,018 INFO Computing data fidelity for 114564 rotations and 2048 images at 1%
2023-01-06 14:32:17,786 DEBUG Corresponding type is already real float64.
2023-01-06 14:32:17,786 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:32:32,376 INFO Computing data fidelity for 114564 rotations and 2048 images at 2%
2023-01-06 14:32:33,206 DEBUG Corresponding type is already real float64.
2023-01-06 14:32:33,206 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:32:47,890 INFO Computing data fidelity for 114564 rotations and 2048 images at 3%
2023-01-06 14:32:48,718 DEBUG Corresponding type is already real float64.
2023-01-06 14:32:48,719 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:33:03,615 INFO Computing data fidelity for 114564 rotations and 2048 images at 4%
2023-01-06 14:33:04,449 DEBUG Corresponding type is already real float64.
2023-01-06 14:33:04,449 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:33:19,224 INFO Computing data fidelity for 114564 rotations and 2048 images at 5%
2023-01-06 14:33:19,996 DEBUG Corresponding type is already real float64.
2023-01-06 14:33:19,996 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:33:34,561 INFO Computing data fidelity for 114564 rotations and 2048 images at 6%
2023-01-06 14:33:35,365 DEBUG Corresponding type is already real float64.
2023-01-06 14:33:35,365 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:33:49,460 INFO Computing data fidelity for 114564 rotations and 2048 images at 7%
2023-01-06 14:33:50,262 DEBUG Corresponding type is already real float64.
2023-01-06 14:33:50,263 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:34:04,196 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2023-01-06 14:34:04,909 DEBUG Corresponding type is already real float64.
2023-01-06 14:34:04,909 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:34:18,907 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2023-01-06 14:34:19,692 DEBUG Corresponding type is already real float64.
2023-01-06 14:34:19,692 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:34:33,792 INFO Computing data fidelity for 114564 rotations and 2048 images at 9%
2023-01-06 14:34:34,572 DEBUG Corresponding type is already real float64.
2023-01-06 14:34:34,572 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:34:48,665 INFO Computing data fidelity for 114564 rotations and 2048 images at 10%
2023-01-06 14:34:49,417 DEBUG Corresponding type is already real float64.
2023-01-06 14:34:49,417 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:35:04,026 INFO Computing data fidelity for 114564 rotations and 2048 images at 11%
2023-01-06 14:35:04,763 DEBUG Corresponding type is already real float64.
2023-01-06 14:35:04,763 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:35:18,818 INFO Computing data fidelity for 114564 rotations and 2048 images at 12%
2023-01-06 14:35:19,561 DEBUG Corresponding type is already real float64.
2023-01-06 14:35:19,561 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:35:33,508 INFO Computing data fidelity for 114564 rotations and 2048 images at 13%
2023-01-06 14:35:34,259 DEBUG Corresponding type is already real float64.
2023-01-06 14:35:34,260 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:35:49,060 INFO Computing data fidelity for 114564 rotations and 2048 images at 14%
2023-01-06 14:35:49,852 DEBUG Corresponding type is already real float64.
2023-01-06 14:35:49,852 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:36:03,840 INFO Computing data fidelity for 114564 rotations and 2048 images at 15%
2023-01-06 14:36:04,596 DEBUG Corresponding type is already real float64.
2023-01-06 14:36:04,596 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:36:19,292 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2023-01-06 14:36:20,052 DEBUG Corresponding type is already real float64.
2023-01-06 14:36:20,052 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:36:33,938 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2023-01-06 14:36:34,710 DEBUG Corresponding type is already real float64.
2023-01-06 14:36:34,710 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:36:48,863 INFO Computing data fidelity for 114564 rotations and 2048 images at 17%
2023-01-06 14:36:49,633 DEBUG Corresponding type is already real float64.
2023-01-06 14:36:49,633 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:37:03,756 INFO Computing data fidelity for 114564 rotations and 2048 images at 18%
2023-01-06 14:37:04,509 DEBUG Corresponding type is already real float64.
2023-01-06 14:37:04,509 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:37:17,853 INFO Computing data fidelity for 114564 rotations and 2048 images at 19%
2023-01-06 14:37:18,611 DEBUG Corresponding type is already real float64.
2023-01-06 14:37:18,611 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:37:32,482 INFO Computing data fidelity for 114564 rotations and 2048 images at 20%
2023-01-06 14:37:33,300 DEBUG Corresponding type is already real float64.
2023-01-06 14:37:33,300 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:37:47,856 INFO Computing data fidelity for 114564 rotations and 2048 images at 21%
2023-01-06 14:37:48,630 DEBUG Corresponding type is already real float64.
2023-01-06 14:37:48,630 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:38:02,773 INFO Computing data fidelity for 114564 rotations and 2048 images at 22%
2023-01-06 14:38:03,601 DEBUG Corresponding type is already real float64.
2023-01-06 14:38:03,601 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:38:18,352 INFO Computing data fidelity for 114564 rotations and 2048 images at 23%
2023-01-06 14:38:19,103 DEBUG Corresponding type is already real float64.
2023-01-06 14:38:19,103 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:38:32,901 INFO Computing data fidelity for 114564 rotations and 2048 images at 24%
2023-01-06 14:38:33,692 DEBUG Corresponding type is already real float64.
2023-01-06 14:38:33,692 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:38:47,017 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2023-01-06 14:38:47,797 DEBUG Corresponding type is already real float64.
2023-01-06 14:38:47,798 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:39:01,798 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2023-01-06 14:39:02,623 DEBUG Corresponding type is already real float64.
2023-01-06 14:39:02,623 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:39:18,018 INFO Computing data fidelity for 114564 rotations and 2048 images at 26%
2023-01-06 14:39:18,865 DEBUG Corresponding type is already real float64.
2023-01-06 14:39:18,865 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:39:32,136 INFO Computing data fidelity for 114564 rotations and 2048 images at 27%
2023-01-06 14:39:32,873 DEBUG Corresponding type is already real float64.
2023-01-06 14:39:32,873 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:39:47,319 INFO Computing data fidelity for 114564 rotations and 2048 images at 28%
2023-01-06 14:39:48,199 DEBUG Corresponding type is already real float64.
2023-01-06 14:39:48,199 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:40:03,420 INFO Computing data fidelity for 114564 rotations and 2048 images at 29%
2023-01-06 14:40:04,176 DEBUG Corresponding type is already real float64.
2023-01-06 14:40:04,176 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:40:18,980 INFO Computing data fidelity for 114564 rotations and 2048 images at 30%
2023-01-06 14:40:19,760 DEBUG Corresponding type is already real float64.
2023-01-06 14:40:19,762 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:40:34,467 INFO Computing data fidelity for 114564 rotations and 2048 images at 31%
2023-01-06 14:40:35,234 DEBUG Corresponding type is already real float64.
2023-01-06 14:40:35,234 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:40:48,876 INFO Computing data fidelity for 114564 rotations and 2048 images at 32%
2023-01-06 14:40:49,650 DEBUG Corresponding type is already real float64.
2023-01-06 14:40:49,650 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:41:05,182 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2023-01-06 14:41:06,045 DEBUG Corresponding type is already real float64.
2023-01-06 14:41:06,045 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:41:20,421 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2023-01-06 14:41:21,193 DEBUG Corresponding type is already real float64.
2023-01-06 14:41:21,193 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:41:35,628 INFO Computing data fidelity for 114564 rotations and 2048 images at 34%
2023-01-06 14:41:36,526 DEBUG Corresponding type is already real float64.
2023-01-06 14:41:36,526 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:41:51,739 INFO Computing data fidelity for 114564 rotations and 2048 images at 35%
2023-01-06 14:41:52,608 DEBUG Corresponding type is already real float64.
2023-01-06 14:41:52,608 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:42:06,589 INFO Computing data fidelity for 114564 rotations and 2048 images at 36%
2023-01-06 14:42:07,396 DEBUG Corresponding type is already real float64.
2023-01-06 14:42:07,396 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:42:22,323 INFO Computing data fidelity for 114564 rotations and 2048 images at 37%
2023-01-06 14:42:23,148 DEBUG Corresponding type is already real float64.
2023-01-06 14:42:23,148 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:42:36,688 INFO Computing data fidelity for 114564 rotations and 2048 images at 38%
2023-01-06 14:42:37,522 DEBUG Corresponding type is already real float64.
2023-01-06 14:42:37,522 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:42:52,287 INFO Computing data fidelity for 114564 rotations and 2048 images at 39%
2023-01-06 14:42:53,108 DEBUG Corresponding type is already real float64.
2023-01-06 14:42:53,109 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:43:07,248 INFO Computing data fidelity for 114564 rotations and 2048 images at 40%
2023-01-06 14:43:08,104 DEBUG Corresponding type is already real float64.
2023-01-06 14:43:08,105 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:43:23,024 INFO Computing data fidelity for 114564 rotations and 2048 images at 41%
2023-01-06 14:43:23,798 DEBUG Corresponding type is already real float64.
2023-01-06 14:43:23,798 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:43:38,195 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2023-01-06 14:43:39,019 DEBUG Corresponding type is already real float64.
2023-01-06 14:43:39,019 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:43:54,001 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2023-01-06 14:43:54,825 DEBUG Corresponding type is already real float64.
2023-01-06 14:43:54,825 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:44:09,620 INFO Computing data fidelity for 114564 rotations and 2048 images at 43%
2023-01-06 14:44:10,470 DEBUG Corresponding type is already real float64.
2023-01-06 14:44:10,470 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:44:25,401 INFO Computing data fidelity for 114564 rotations and 2048 images at 44%
2023-01-06 14:44:26,318 DEBUG Corresponding type is already real float64.
2023-01-06 14:44:26,318 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:44:41,241 INFO Computing data fidelity for 114564 rotations and 2048 images at 45%
2023-01-06 14:44:42,061 DEBUG Corresponding type is already real float64.
2023-01-06 14:44:42,061 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:44:57,043 INFO Computing data fidelity for 114564 rotations and 2048 images at 46%
2023-01-06 14:44:57,865 DEBUG Corresponding type is already real float64.
2023-01-06 14:44:57,865 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:45:13,205 INFO Computing data fidelity for 114564 rotations and 2048 images at 47%
2023-01-06 14:45:14,113 DEBUG Corresponding type is already real float64.
2023-01-06 14:45:14,113 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:45:28,547 INFO Computing data fidelity for 114564 rotations and 2048 images at 48%
2023-01-06 14:45:29,319 DEBUG Corresponding type is already real float64.
2023-01-06 14:45:29,319 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:45:42,821 INFO Computing data fidelity for 114564 rotations and 2048 images at 49%
2023-01-06 14:45:43,593 DEBUG Corresponding type is already real float64.
2023-01-06 14:45:43,593 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:45:56,783 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2023-01-06 14:45:57,556 DEBUG Corresponding type is already real float64.
2023-01-06 14:45:57,556 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:46:10,663 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2023-01-06 14:46:11,433 DEBUG Corresponding type is already real float64.
2023-01-06 14:46:11,433 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:46:26,663 INFO Computing data fidelity for 114564 rotations and 2048 images at 51%
2023-01-06 14:46:27,508 DEBUG Corresponding type is already real float64.
2023-01-06 14:46:27,508 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:46:42,539 INFO Computing data fidelity for 114564 rotations and 2048 images at 52%
2023-01-06 14:46:43,336 DEBUG Corresponding type is already real float64.
2023-01-06 14:46:43,337 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:46:57,956 INFO Computing data fidelity for 114564 rotations and 2048 images at 53%
2023-01-06 14:46:58,730 DEBUG Corresponding type is already real float64.
2023-01-06 14:46:58,730 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:47:13,213 INFO Computing data fidelity for 114564 rotations and 2048 images at 54%
2023-01-06 14:47:14,022 DEBUG Corresponding type is already real float64.
2023-01-06 14:47:14,022 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:47:28,415 INFO Computing data fidelity for 114564 rotations and 2048 images at 55%
2023-01-06 14:47:29,243 DEBUG Corresponding type is already real float64.
2023-01-06 14:47:29,243 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:47:43,657 INFO Computing data fidelity for 114564 rotations and 2048 images at 56%
2023-01-06 14:47:44,519 DEBUG Corresponding type is already real float64.
2023-01-06 14:47:44,520 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:47:59,604 INFO Computing data fidelity for 114564 rotations and 2048 images at 57%
2023-01-06 14:48:00,475 DEBUG Corresponding type is already real float64.
2023-01-06 14:48:00,475 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:48:14,147 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2023-01-06 14:48:14,915 DEBUG Corresponding type is already real float64.
2023-01-06 14:48:14,915 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:48:28,421 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2023-01-06 14:48:29,209 DEBUG Corresponding type is already real float64.
2023-01-06 14:48:29,210 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:48:42,747 INFO Computing data fidelity for 114564 rotations and 2048 images at 59%
2023-01-06 14:48:43,527 DEBUG Corresponding type is already real float64.
2023-01-06 14:48:43,527 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:48:57,563 INFO Computing data fidelity for 114564 rotations and 2048 images at 60%
2023-01-06 14:48:58,335 DEBUG Corresponding type is already real float64.
2023-01-06 14:48:58,335 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:49:11,854 INFO Computing data fidelity for 114564 rotations and 2048 images at 61%
2023-01-06 14:49:12,605 DEBUG Corresponding type is already real float64.
2023-01-06 14:49:12,605 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:49:26,137 INFO Computing data fidelity for 114564 rotations and 2048 images at 62%
2023-01-06 14:49:26,897 DEBUG Corresponding type is already real float64.
2023-01-06 14:49:26,897 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:49:40,312 INFO Computing data fidelity for 114564 rotations and 2048 images at 63%
2023-01-06 14:49:41,069 DEBUG Corresponding type is already real float64.
2023-01-06 14:49:41,069 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:49:54,539 INFO Computing data fidelity for 114564 rotations and 2048 images at 64%
2023-01-06 14:49:55,293 DEBUG Corresponding type is already real float64.
2023-01-06 14:49:55,294 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:50:08,767 INFO Computing data fidelity for 114564 rotations and 2048 images at 65%
2023-01-06 14:50:09,534 DEBUG Corresponding type is already real float64.
2023-01-06 14:50:09,534 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:50:22,967 INFO Computing data fidelity for 114564 rotations and 2048 images at 66%
2023-01-06 14:50:23,727 DEBUG Corresponding type is already real float64.
2023-01-06 14:50:23,727 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:50:37,150 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2023-01-06 14:50:37,906 DEBUG Corresponding type is already real float64.
2023-01-06 14:50:37,906 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:50:51,854 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2023-01-06 14:50:52,616 DEBUG Corresponding type is already real float64.
2023-01-06 14:50:52,616 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:51:06,297 INFO Computing data fidelity for 114564 rotations and 2048 images at 68%
2023-01-06 14:51:07,045 DEBUG Corresponding type is already real float64.
2023-01-06 14:51:07,045 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:51:20,417 INFO Computing data fidelity for 114564 rotations and 2048 images at 69%
2023-01-06 14:51:21,171 DEBUG Corresponding type is already real float64.
2023-01-06 14:51:21,172 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:51:34,551 INFO Computing data fidelity for 114564 rotations and 2048 images at 70%
2023-01-06 14:51:35,307 DEBUG Corresponding type is already real float64.
2023-01-06 14:51:35,307 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:51:48,745 INFO Computing data fidelity for 114564 rotations and 2048 images at 71%
2023-01-06 14:51:49,511 DEBUG Corresponding type is already real float64.
2023-01-06 14:51:49,511 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:52:02,964 INFO Computing data fidelity for 114564 rotations and 2048 images at 72%
2023-01-06 14:52:03,717 DEBUG Corresponding type is already real float64.
2023-01-06 14:52:03,718 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:52:17,094 INFO Computing data fidelity for 114564 rotations and 2048 images at 73%
2023-01-06 14:52:17,843 DEBUG Corresponding type is already real float64.
2023-01-06 14:52:17,843 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:52:31,242 INFO Computing data fidelity for 114564 rotations and 2048 images at 74%
2023-01-06 14:52:31,992 DEBUG Corresponding type is already real float64.
2023-01-06 14:52:31,992 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:52:45,412 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2023-01-06 14:52:46,166 DEBUG Corresponding type is already real float64.
2023-01-06 14:52:46,166 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:52:59,628 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2023-01-06 14:53:00,385 DEBUG Corresponding type is already real float64.
2023-01-06 14:53:00,385 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:53:14,894 INFO Computing data fidelity for 114564 rotations and 2048 images at 76%
2023-01-06 14:53:15,680 DEBUG Corresponding type is already real float64.
2023-01-06 14:53:15,681 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:53:29,941 INFO Computing data fidelity for 114564 rotations and 2048 images at 77%
2023-01-06 14:53:30,699 DEBUG Corresponding type is already real float64.
2023-01-06 14:53:30,699 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:53:44,669 INFO Computing data fidelity for 114564 rotations and 2048 images at 78%
2023-01-06 14:53:45,417 DEBUG Corresponding type is already real float64.
2023-01-06 14:53:45,417 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:53:58,838 INFO Computing data fidelity for 114564 rotations and 2048 images at 79%
2023-01-06 14:53:59,604 DEBUG Corresponding type is already real float64.
2023-01-06 14:53:59,604 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:54:13,169 INFO Computing data fidelity for 114564 rotations and 2048 images at 80%
2023-01-06 14:54:13,926 DEBUG Corresponding type is already real float64.
2023-01-06 14:54:13,926 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:54:27,412 INFO Computing data fidelity for 114564 rotations and 2048 images at 81%
2023-01-06 14:54:28,163 DEBUG Corresponding type is already real float64.
2023-01-06 14:54:28,163 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:54:41,644 INFO Computing data fidelity for 114564 rotations and 2048 images at 82%
2023-01-06 14:54:42,404 DEBUG Corresponding type is already real float64.
2023-01-06 14:54:42,404 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:54:55,890 INFO Computing data fidelity for 114564 rotations and 2048 images at 83%
2023-01-06 14:54:56,677 DEBUG Corresponding type is already real float64.
2023-01-06 14:54:56,677 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:55:10,135 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2023-01-06 14:55:10,889 DEBUG Corresponding type is already real float64.
2023-01-06 14:55:10,889 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:55:24,325 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2023-01-06 14:55:25,088 DEBUG Corresponding type is already real float64.
2023-01-06 14:55:25,088 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:55:38,564 INFO Computing data fidelity for 114564 rotations and 2048 images at 85%
2023-01-06 14:55:39,324 DEBUG Corresponding type is already real float64.
2023-01-06 14:55:39,324 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:55:53,317 INFO Computing data fidelity for 114564 rotations and 2048 images at 86%
2023-01-06 14:55:54,074 DEBUG Corresponding type is already real float64.
2023-01-06 14:55:54,074 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:56:07,441 INFO Computing data fidelity for 114564 rotations and 2048 images at 87%
2023-01-06 14:56:08,197 DEBUG Corresponding type is already real float64.
2023-01-06 14:56:08,197 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:56:21,659 INFO Computing data fidelity for 114564 rotations and 2048 images at 88%
2023-01-06 14:56:22,419 DEBUG Corresponding type is already real float64.
2023-01-06 14:56:22,419 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:56:35,906 INFO Computing data fidelity for 114564 rotations and 2048 images at 89%
2023-01-06 14:56:36,657 DEBUG Corresponding type is already real float64.
2023-01-06 14:56:36,657 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:56:50,033 INFO Computing data fidelity for 114564 rotations and 2048 images at 90%
2023-01-06 14:56:50,787 DEBUG Corresponding type is already real float64.
2023-01-06 14:56:50,787 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:57:04,249 INFO Computing data fidelity for 114564 rotations and 2048 images at 91%
2023-01-06 14:57:05,007 DEBUG Corresponding type is already real float64.
2023-01-06 14:57:05,007 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:57:18,381 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2023-01-06 14:57:19,146 DEBUG Corresponding type is already real float64.
2023-01-06 14:57:19,146 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:57:32,876 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2023-01-06 14:57:33,643 DEBUG Corresponding type is already real float64.
2023-01-06 14:57:33,643 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:57:47,160 INFO Computing data fidelity for 114564 rotations and 2048 images at 93%
2023-01-06 14:57:47,912 DEBUG Corresponding type is already real float64.
2023-01-06 14:57:47,913 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:58:01,438 INFO Computing data fidelity for 114564 rotations and 2048 images at 94%
2023-01-06 14:58:02,206 DEBUG Corresponding type is already real float64.
2023-01-06 14:58:02,206 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:58:15,690 INFO Computing data fidelity for 114564 rotations and 2048 images at 95%
2023-01-06 14:58:16,450 DEBUG Corresponding type is already real float64.
2023-01-06 14:58:16,450 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:58:29,830 INFO Computing data fidelity for 114564 rotations and 2048 images at 96%
2023-01-06 14:58:30,576 DEBUG Corresponding type is already real float64.
2023-01-06 14:58:30,576 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:58:43,595 INFO Computing data fidelity for 114564 rotations and 2048 images at 97%
2023-01-06 14:58:44,340 DEBUG Corresponding type is already real float64.
2023-01-06 14:58:44,341 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:58:57,497 INFO Computing data fidelity for 114564 rotations and 2048 images at 98%
2023-01-06 14:58:58,240 DEBUG Corresponding type is already real float64.
2023-01-06 14:58:58,240 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:59:11,340 INFO Computing data fidelity for 114564 rotations and 2048 images at 99%
2023-01-06 14:59:11,815 DEBUG Corresponding type is already real float64.
2023-01-06 14:59:11,815 DEBUG nufft passed real_type for signal, converting
2023-01-06 14:59:23,132 INFO Computing data fidelity for 114564 rotations and 2048 images at 100%
2023-01-06 14:59:25,666 INFO Do lambda update step
2023-01-06 14:59:48,175 INFO Do rots update step
2023-01-06 14:59:48,981 INFO Projecting 2048 vectors onto 114564-simplex at 2%
2023-01-06 14:59:49,596 INFO Projecting 2048 vectors onto 114564-simplex at 4%
2023-01-06 14:59:50,211 INFO Projecting 2048 vectors onto 114564-simplex at 7%
2023-01-06 14:59:50,820 INFO Projecting 2048 vectors onto 114564-simplex at 9%
2023-01-06 14:59:51,430 INFO Projecting 2048 vectors onto 114564-simplex at 12%
2023-01-06 14:59:52,034 INFO Projecting 2048 vectors onto 114564-simplex at 14%
2023-01-06 14:59:52,641 INFO Projecting 2048 vectors onto 114564-simplex at 17%
2023-01-06 14:59:53,247 INFO Projecting 2048 vectors onto 114564-simplex at 19%
2023-01-06 14:59:53,860 INFO Projecting 2048 vectors onto 114564-simplex at 21%
2023-01-06 14:59:54,503 INFO Projecting 2048 vectors onto 114564-simplex at 24%
2023-01-06 14:59:55,292 INFO Projecting 2048 vectors onto 114564-simplex at 26%
2023-01-06 14:59:55,904 INFO Projecting 2048 vectors onto 114564-simplex at 29%
2023-01-06 14:59:56,526 INFO Projecting 2048 vectors onto 114564-simplex at 31%
2023-01-06 14:59:57,140 INFO Projecting 2048 vectors onto 114564-simplex at 34%
2023-01-06 14:59:57,756 INFO Projecting 2048 vectors onto 114564-simplex at 36%
2023-01-06 14:59:58,355 INFO Projecting 2048 vectors onto 114564-simplex at 39%
2023-01-06 14:59:58,970 INFO Projecting 2048 vectors onto 114564-simplex at 41%
2023-01-06 14:59:59,583 INFO Projecting 2048 vectors onto 114564-simplex at 43%
2023-01-06 15:00:00,240 INFO Projecting 2048 vectors onto 114564-simplex at 46%
2023-01-06 15:00:00,871 INFO Projecting 2048 vectors onto 114564-simplex at 48%
2023-01-06 15:00:01,686 INFO Projecting 2048 vectors onto 114564-simplex at 51%
2023-01-06 15:00:02,311 INFO Projecting 2048 vectors onto 114564-simplex at 53%
2023-01-06 15:00:02,934 INFO Projecting 2048 vectors onto 114564-simplex at 56%
2023-01-06 15:00:03,579 INFO Projecting 2048 vectors onto 114564-simplex at 58%
2023-01-06 15:00:04,272 INFO Projecting 2048 vectors onto 114564-simplex at 61%
2023-01-06 15:00:04,956 INFO Projecting 2048 vectors onto 114564-simplex at 63%
2023-01-06 15:00:05,636 INFO Projecting 2048 vectors onto 114564-simplex at 65%
2023-01-06 15:00:06,302 INFO Projecting 2048 vectors onto 114564-simplex at 68%
2023-01-06 15:00:06,973 INFO Projecting 2048 vectors onto 114564-simplex at 70%
2023-01-06 15:00:07,646 INFO Projecting 2048 vectors onto 114564-simplex at 73%
2023-01-06 15:00:08,508 INFO Projecting 2048 vectors onto 114564-simplex at 75%
2023-01-06 15:00:09,169 INFO Projecting 2048 vectors onto 114564-simplex at 78%
2023-01-06 15:00:09,782 INFO Projecting 2048 vectors onto 114564-simplex at 80%
2023-01-06 15:00:10,380 INFO Projecting 2048 vectors onto 114564-simplex at 83%
2023-01-06 15:00:10,982 INFO Projecting 2048 vectors onto 114564-simplex at 85%
2023-01-06 15:00:11,588 INFO Projecting 2048 vectors onto 114564-simplex at 87%
2023-01-06 15:00:12,197 INFO Projecting 2048 vectors onto 114564-simplex at 90%
2023-01-06 15:00:12,815 INFO Projecting 2048 vectors onto 114564-simplex at 92%
2023-01-06 15:00:13,428 INFO Projecting 2048 vectors onto 114564-simplex at 95%
2023-01-06 15:00:14,033 INFO Projecting 2048 vectors onto 114564-simplex at 97%
2023-01-06 15:00:14,623 INFO Projecting 2048 vectors onto 114564-simplex at 100%
2023-01-06 15:00:15,992 INFO Computing 50 means of 28457 points in at most 20 steps...
2023-01-06 15:00:19,888 INFO Computing 2048 means at 2%
2023-01-06 15:00:19,986 INFO Computing 50 means of 29473 points in at most 20 steps...
2023-01-06 15:00:23,959 INFO Computing 2048 means at 4%
2023-01-06 15:00:24,045 INFO Computing 50 means of 28053 points in at most 20 steps...
2023-01-06 15:00:27,864 INFO Computing 2048 means at 7%
2023-01-06 15:00:27,943 INFO Computing 50 means of 28111 points in at most 20 steps...
2023-01-06 15:00:31,728 INFO Computing 2048 means at 9%
2023-01-06 15:00:31,815 INFO Computing 50 means of 31365 points in at most 20 steps...
2023-01-06 15:00:36,008 INFO Computing 2048 means at 12%
2023-01-06 15:00:36,096 INFO Computing 50 means of 30391 points in at most 20 steps...
2023-01-06 15:00:40,138 INFO Computing 2048 means at 14%
2023-01-06 15:00:40,219 INFO Computing 50 means of 29703 points in at most 20 steps...
2023-01-06 15:00:44,226 INFO Computing 2048 means at 17%
2023-01-06 15:00:44,307 INFO Computing 50 means of 31389 points in at most 20 steps...
2023-01-06 15:00:48,669 INFO Computing 2048 means at 19%
2023-01-06 15:00:48,766 INFO Computing 50 means of 28244 points in at most 20 steps...
2023-01-06 15:00:52,773 INFO Computing 2048 means at 21%
2023-01-06 15:00:52,868 INFO Computing 50 means of 30248 points in at most 20 steps...
2023-01-06 15:00:57,102 INFO Computing 2048 means at 24%
2023-01-06 15:00:57,210 INFO Computing 50 means of 28388 points in at most 20 steps...
2023-01-06 15:01:01,284 INFO Computing 2048 means at 26%
2023-01-06 15:01:01,371 INFO Computing 50 means of 28342 points in at most 20 steps...
2023-01-06 15:01:05,303 INFO Computing 2048 means at 29%
2023-01-06 15:01:05,392 INFO Computing 50 means of 32222 points in at most 20 steps...
2023-01-06 15:01:09,812 INFO Computing 2048 means at 31%
2023-01-06 15:01:09,899 INFO Computing 50 means of 29898 points in at most 20 steps...
2023-01-06 15:01:13,994 INFO Computing 2048 means at 34%
2023-01-06 15:01:14,080 INFO Computing 50 means of 29252 points in at most 20 steps...
2023-01-06 15:01:18,081 INFO Computing 2048 means at 36%
2023-01-06 15:01:18,169 INFO Computing 50 means of 31100 points in at most 20 steps...
2023-01-06 15:01:22,384 INFO Computing 2048 means at 39%
2023-01-06 15:01:22,472 INFO Computing 50 means of 26812 points in at most 20 steps...
2023-01-06 15:01:26,174 INFO Computing 2048 means at 41%
2023-01-06 15:01:26,256 INFO Computing 50 means of 28151 points in at most 20 steps...
2023-01-06 15:01:30,065 INFO Computing 2048 means at 43%
2023-01-06 15:01:30,147 INFO Computing 50 means of 30812 points in at most 20 steps...
2023-01-06 15:01:34,043 INFO Computing 2048 means at 46%
2023-01-06 15:01:34,138 INFO Computing 50 means of 32191 points in at most 20 steps...
2023-01-06 15:01:38,527 INFO Computing 2048 means at 48%
2023-01-06 15:01:38,631 INFO Computing 50 means of 28381 points in at most 20 steps...
2023-01-06 15:01:42,454 INFO Computing 2048 means at 51%
2023-01-06 15:01:42,538 INFO Computing 50 means of 29658 points in at most 20 steps...
2023-01-06 15:01:46,508 INFO Computing 2048 means at 53%
2023-01-06 15:01:46,593 INFO Computing 50 means of 28703 points in at most 20 steps...
2023-01-06 15:01:50,593 INFO Computing 2048 means at 56%
2023-01-06 15:01:50,677 INFO Computing 50 means of 29048 points in at most 20 steps...
2023-01-06 15:01:54,580 INFO Computing 2048 means at 58%
2023-01-06 15:01:54,664 INFO Computing 50 means of 27995 points in at most 20 steps...
2023-01-06 15:01:58,348 INFO Computing 2048 means at 61%
2023-01-06 15:01:58,429 INFO Computing 50 means of 31855 points in at most 20 steps...
2023-01-06 15:02:02,401 INFO Computing 2048 means at 63%
2023-01-06 15:02:02,485 INFO Computing 50 means of 28753 points in at most 20 steps...
2023-01-06 15:02:06,207 INFO Computing 2048 means at 65%
2023-01-06 15:02:06,293 INFO Computing 50 means of 31310 points in at most 20 steps...
2023-01-06 15:02:10,356 INFO Computing 2048 means at 68%
2023-01-06 15:02:10,438 INFO Computing 50 means of 29090 points in at most 20 steps...
2023-01-06 15:02:14,052 INFO Computing 2048 means at 70%
2023-01-06 15:02:14,134 INFO Computing 50 means of 31388 points in at most 20 steps...
2023-01-06 15:02:18,080 INFO Computing 2048 means at 73%
2023-01-06 15:02:18,177 INFO Computing 50 means of 29356 points in at most 20 steps...
2023-01-06 15:02:21,853 INFO Computing 2048 means at 75%
2023-01-06 15:02:21,937 INFO Computing 50 means of 31238 points in at most 20 steps...
2023-01-06 15:02:25,824 INFO Computing 2048 means at 78%
2023-01-06 15:02:25,908 INFO Computing 50 means of 29545 points in at most 20 steps...
2023-01-06 15:02:29,620 INFO Computing 2048 means at 80%
2023-01-06 15:02:29,702 INFO Computing 50 means of 28049 points in at most 20 steps...
2023-01-06 15:02:33,272 INFO Computing 2048 means at 83%
2023-01-06 15:02:33,353 INFO Computing 50 means of 29149 points in at most 20 steps...
2023-01-06 15:02:37,080 INFO Computing 2048 means at 85%
2023-01-06 15:02:37,161 INFO Computing 50 means of 29728 points in at most 20 steps...
2023-01-06 15:02:40,891 INFO Computing 2048 means at 87%
2023-01-06 15:02:40,973 INFO Computing 50 means of 29951 points in at most 20 steps...
2023-01-06 15:02:44,723 INFO Computing 2048 means at 90%
2023-01-06 15:02:44,807 INFO Computing 50 means of 31729 points in at most 20 steps...
2023-01-06 15:02:48,754 INFO Computing 2048 means at 92%
2023-01-06 15:02:48,837 INFO Computing 50 means of 31341 points in at most 20 steps...
2023-01-06 15:02:52,848 INFO Computing 2048 means at 95%
2023-01-06 15:02:52,932 INFO Computing 50 means of 30862 points in at most 20 steps...
2023-01-06 15:02:57,074 INFO Computing 2048 means at 97%
2023-01-06 15:02:57,163 INFO Computing 48 means of 28660 points in at most 20 steps...
2023-01-06 15:03:00,932 INFO Computing 2048 means at 100%
2023-01-06 15:03:05,854 INFO Do vol update step
2023-01-06 15:03:05,856 INFO Compute adjoint forward mapping on the images
2023-01-06 15:03:07,680 DEBUG Corresponding type is already complex complex128.
2023-01-06 15:03:10,149 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2023-01-06 15:03:10,164 INFO Computing adjoint forward mappings from 2048 rotations at 50%
2023-01-06 15:03:11,759 DEBUG Corresponding type is already complex complex128.
2023-01-06 15:03:14,281 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2023-01-06 15:03:14,293 INFO Computing adjoint forward mappings from 2048 rotations at 100%
2023-01-06 15:03:15,242 DEBUG Corresponding type is already real float64.
2023-01-06 15:03:15,243 DEBUG anufft passed real_type for signal, converting
2023-01-06 15:03:21,668 INFO Computing kernel from 2048 rotations at 50%
2023-01-06 15:03:22,572 DEBUG Corresponding type is already real float64.
2023-01-06 15:03:22,573 DEBUG anufft passed real_type for signal, converting
2023-01-06 15:03:29,132 INFO Computing kernel from 2048 rotations at 100%
2023-01-06 15:03:29,134 INFO Computing non-centered Fourier Transform
2023-01-06 15:03:29,309 INFO Add ramp filter regularisation
2023-01-06 15:05:29,858 INFO Start Postprocessing
2023-01-06 15:05:29,864 INFO Postprocessing started
2023-01-06 15:06:01,730 DEBUG locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7c922874a8>
2023-01-06 15:06:01,731 DEBUG Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7c922874a8> on colorbar
2023-01-06 15:06:01,731 DEBUG Setting pcolormesh
2023-01-06 15:06:01,778 DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0.
2023-01-06 15:06:01,779 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,779 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,779 DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,779 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:01,780 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,780 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2023-01-06 15:06:01,780 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,780 DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,780 DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,780 DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,780 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2023-01-06 15:06:01,780 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,780 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,780 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,780 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:01,780 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-06 15:06:01,780 DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,780 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,780 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,780 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,780 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,780 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,781 DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,781 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-06 15:06:01,781 DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,781 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,781 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,781 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,781 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,781 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,781 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,781 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2023-01-06 15:06:01,781 DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,781 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2023-01-06 15:06:01,781 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:01,781 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,781 DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,781 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,781 DEBUG findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,781 DEBUG findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,782 DEBUG findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,782 DEBUG findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,782 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,782 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,782 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,782 DEBUG findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,782 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2023-01-06 15:06:01,782 DEBUG findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,782 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:01,782 DEBUG findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:01,782 DEBUG findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,782 DEBUG findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2023-01-06 15:06:01,782 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,782 DEBUG findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,782 DEBUG findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,782 DEBUG findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,782 DEBUG findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,782 DEBUG findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2023-01-06 15:06:01,783 DEBUG findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,783 DEBUG findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,783 DEBUG findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,783 DEBUG findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,783 DEBUG findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,783 DEBUG findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,783 DEBUG findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,783 DEBUG findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,783 DEBUG findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,783 DEBUG findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,783 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2023-01-06 15:06:01,783 DEBUG findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,783 DEBUG findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,783 DEBUG findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,783 DEBUG findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,783 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,783 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,783 DEBUG findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,784 DEBUG findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,784 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,784 DEBUG findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,784 DEBUG findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,784 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,784 DEBUG findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,784 DEBUG findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,784 DEBUG findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,784 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,784 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,784 DEBUG findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,784 DEBUG findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,784 DEBUG findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,784 DEBUG findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,784 DEBUG findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,784 DEBUG findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2023-01-06 15:06:01,785 DEBUG findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,785 DEBUG findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2023-01-06 15:06:01,785 DEBUG findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,785 DEBUG findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,785 DEBUG findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,785 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2023-01-06 15:06:01,785 DEBUG findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,785 DEBUG findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,785 DEBUG findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,785 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,785 DEBUG findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:01,785 DEBUG findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,785 DEBUG findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,785 DEBUG findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,786 DEBUG findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
2023-01-06 15:06:01,786 DEBUG findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,786 DEBUG findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,786 DEBUG findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:01,786 DEBUG findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,786 DEBUG findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,786 DEBUG findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:01,786 DEBUG findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,786 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,786 DEBUG findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,786 DEBUG findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,786 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,786 DEBUG findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,786 DEBUG findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:01,787 DEBUG findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,787 DEBUG findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,787 DEBUG findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,787 DEBUG findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,787 DEBUG findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,787 DEBUG findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,787 DEBUG findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,787 DEBUG findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,787 DEBUG findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,787 DEBUG findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,787 DEBUG findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,787 DEBUG findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,787 DEBUG findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2023-01-06 15:06:01,787 DEBUG findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,787 DEBUG findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,787 DEBUG findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,788 DEBUG findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,788 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:01,788 DEBUG findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,788 DEBUG findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,788 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:01,788 DEBUG findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,788 DEBUG findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,788 DEBUG findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,788 DEBUG findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,788 DEBUG findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,788 DEBUG findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,788 DEBUG findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,788 DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,788 DEBUG findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,788 DEBUG findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,788 DEBUG findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,789 DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,789 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2023-01-06 15:06:01,789 DEBUG findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,789 DEBUG findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,789 DEBUG findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,789 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,789 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,789 DEBUG findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,789 DEBUG findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,789 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,789 DEBUG findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,789 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:01,789 DEBUG findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,789 DEBUG findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,789 DEBUG findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,789 DEBUG findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,790 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,790 DEBUG findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,790 DEBUG findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,790 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,790 DEBUG findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,790 DEBUG findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2023-01-06 15:06:01,790 DEBUG findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,790 DEBUG findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,790 DEBUG findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,790 DEBUG findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,790 DEBUG findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,790 DEBUG findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,790 DEBUG findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,790 DEBUG findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,790 DEBUG findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:01,791 DEBUG findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,791 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2023-01-06 15:06:01,791 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2023-01-06 15:06:01,791 DEBUG findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,791 DEBUG findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,791 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:01,791 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,791 DEBUG findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,791 DEBUG findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,791 DEBUG findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2023-01-06 15:06:01,791 DEBUG findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2023-01-06 15:06:01,791 DEBUG findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,791 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,791 DEBUG findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,791 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,791 DEBUG findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2023-01-06 15:06:01,792 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,792 DEBUG findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,792 DEBUG findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,792 DEBUG findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,792 DEBUG findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,792 DEBUG findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,792 DEBUG findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,792 DEBUG findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,792 DEBUG findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2023-01-06 15:06:01,792 DEBUG findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,792 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2023-01-06 15:06:01,792 DEBUG findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2023-01-06 15:06:01,792 DEBUG findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,792 DEBUG findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,792 DEBUG findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,793 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,793 DEBUG findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2023-01-06 15:06:01,793 DEBUG findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,793 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,793 DEBUG findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,793 DEBUG findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,793 DEBUG findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,793 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,793 DEBUG findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,793 DEBUG findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,793 DEBUG findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:01,793 DEBUG findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,793 DEBUG findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,793 DEBUG findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,793 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,794 DEBUG findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,794 DEBUG findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,794 DEBUG findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,794 DEBUG findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,794 DEBUG findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2023-01-06 15:06:01,794 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2023-01-06 15:06:01,794 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,794 DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:01,794 DEBUG findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,794 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2023-01-06 15:06:01,794 DEBUG findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,794 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,794 DEBUG findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,795 DEBUG findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,795 DEBUG findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,795 DEBUG findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,795 DEBUG findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,795 DEBUG findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,795 DEBUG findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,795 DEBUG findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,795 DEBUG findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,795 DEBUG findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,795 DEBUG findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,795 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2023-01-06 15:06:01,795 DEBUG findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,795 DEBUG findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,795 DEBUG findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,795 DEBUG findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,795 DEBUG findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,795 DEBUG findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,796 DEBUG findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,796 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2023-01-06 15:06:01,796 DEBUG findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,796 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2023-01-06 15:06:01,796 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,796 DEBUG findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,796 DEBUG findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,796 DEBUG findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,796 DEBUG findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,796 DEBUG findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,796 DEBUG findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,796 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,796 DEBUG findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,796 DEBUG findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2023-01-06 15:06:01,796 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,796 DEBUG findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,797 DEBUG findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,797 DEBUG findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,797 DEBUG findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,797 DEBUG findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,797 DEBUG findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,797 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,797 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,797 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,797 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2023-01-06 15:06:01,797 DEBUG findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,798 DEBUG findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,798 DEBUG findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,798 DEBUG findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,798 DEBUG findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,798 DEBUG findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,798 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:01,798 DEBUG findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,798 DEBUG findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,798 DEBUG findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:01,798 DEBUG findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,798 DEBUG findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,798 DEBUG findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,798 DEBUG findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,798 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:01,799 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,799 DEBUG findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,799 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,799 DEBUG findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,799 DEBUG findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,799 DEBUG findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,799 DEBUG findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,799 DEBUG findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,799 DEBUG findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,799 DEBUG findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,799 DEBUG findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,799 DEBUG findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,799 DEBUG findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,799 DEBUG findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,799 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,799 DEBUG findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,799 DEBUG findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,799 DEBUG findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2023-01-06 15:06:01,800 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,800 DEBUG findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2023-01-06 15:06:01,800 DEBUG findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,800 DEBUG findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,800 DEBUG findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,800 DEBUG findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,800 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,800 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:01,800 DEBUG findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,800 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,800 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,800 DEBUG findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,800 DEBUG findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,800 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,800 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,800 DEBUG findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,800 DEBUG findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,800 DEBUG findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,800 DEBUG findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,801 DEBUG findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,801 DEBUG findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,801 DEBUG findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2023-01-06 15:06:01,801 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,801 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,801 DEBUG findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,801 DEBUG findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,801 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,801 DEBUG findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,801 DEBUG findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,801 DEBUG findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,801 DEBUG findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,801 DEBUG findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,801 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,801 DEBUG findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,801 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:01,801 DEBUG findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,801 DEBUG findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,801 DEBUG findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 2.872272727272727
2023-01-06 15:06:01,802 DEBUG findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,802 DEBUG findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,802 DEBUG findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,802 DEBUG findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,802 DEBUG findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:01,802 DEBUG findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,802 DEBUG findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,802 DEBUG findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,802 DEBUG findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:01,802 DEBUG findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:01,802 DEBUG findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,802 DEBUG findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2023-01-06 15:06:01,802 DEBUG findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,802 DEBUG findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,802 DEBUG findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,802 DEBUG findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,802 DEBUG findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,802 DEBUG findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,802 DEBUG findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,803 DEBUG findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,803 DEBUG findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,803 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:01,803 DEBUG findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,803 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,803 DEBUG findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,803 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,803 DEBUG findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:01,803 DEBUG findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,803 DEBUG findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,803 DEBUG findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,803 DEBUG findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,803 DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0 to DejaVu Sans ('/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2023-01-06 15:06:01,821 DEBUG findfont: Matching STIXGeneral:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0.
2023-01-06 15:06:01,821 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,821 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 0.33499999999999996
2023-01-06 15:06:01,821 DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,821 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 1.335
2023-01-06 15:06:01,821 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,822 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,822 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,822 DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,822 DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,822 DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,822 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-06 15:06:01,822 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,822 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,822 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 1.05
2023-01-06 15:06:01,822 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:01,822 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-06 15:06:01,822 DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,822 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,822 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,822 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,822 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,822 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 0.05
2023-01-06 15:06:01,822 DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,822 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-06 15:06:01,822 DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,822 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,822 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,823 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,823 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,823 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,823 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,823 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-06 15:06:01,823 DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,823 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,823 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:01,823 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,823 DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,823 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,823 DEBUG findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,823 DEBUG findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,823 DEBUG findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,823 DEBUG findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,823 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 0.05
2023-01-06 15:06:01,823 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,823 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,823 DEBUG findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,823 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:01,823 DEBUG findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,823 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:01,824 DEBUG findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:01,824 DEBUG findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,824 DEBUG findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:01,824 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,824 DEBUG findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,824 DEBUG findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,824 DEBUG findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,824 DEBUG findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,824 DEBUG findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,824 DEBUG findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,824 DEBUG findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,824 DEBUG findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,824 DEBUG findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,824 DEBUG findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,824 DEBUG findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,824 DEBUG findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,824 DEBUG findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,824 DEBUG findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,824 DEBUG findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,824 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2023-01-06 15:06:01,824 DEBUG findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,824 DEBUG findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,824 DEBUG findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,825 DEBUG findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,825 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,825 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,825 DEBUG findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,825 DEBUG findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,825 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,825 DEBUG findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,825 DEBUG findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,825 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,825 DEBUG findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,825 DEBUG findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,825 DEBUG findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,825 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,825 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,825 DEBUG findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,825 DEBUG findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,825 DEBUG findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,825 DEBUG findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,825 DEBUG findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,825 DEBUG findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,825 DEBUG findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,826 DEBUG findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2023-01-06 15:06:01,826 DEBUG findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,826 DEBUG findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,826 DEBUG findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,826 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2023-01-06 15:06:01,826 DEBUG findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,826 DEBUG findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,826 DEBUG findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,826 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,826 DEBUG findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:01,826 DEBUG findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,826 DEBUG findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,826 DEBUG findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,826 DEBUG findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,826 DEBUG findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,826 DEBUG findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,826 DEBUG findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:01,826 DEBUG findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,826 DEBUG findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,826 DEBUG findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:01,826 DEBUG findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,827 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,827 DEBUG findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,827 DEBUG findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,827 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,827 DEBUG findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,827 DEBUG findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:01,827 DEBUG findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,827 DEBUG findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,827 DEBUG findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,827 DEBUG findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,827 DEBUG findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,827 DEBUG findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,827 DEBUG findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,827 DEBUG findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,827 DEBUG findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,827 DEBUG findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,827 DEBUG findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,827 DEBUG findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,827 DEBUG findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2023-01-06 15:06:01,827 DEBUG findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,828 DEBUG findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,828 DEBUG findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,828 DEBUG findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,828 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:01,828 DEBUG findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,828 DEBUG findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,828 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:01,828 DEBUG findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,828 DEBUG findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,828 DEBUG findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,828 DEBUG findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,828 DEBUG findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,828 DEBUG findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,828 DEBUG findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,828 DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,828 DEBUG findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,828 DEBUG findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,828 DEBUG findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,828 DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,828 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2023-01-06 15:06:01,828 DEBUG findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,829 DEBUG findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,829 DEBUG findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,829 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,829 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,829 DEBUG findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,829 DEBUG findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,829 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,829 DEBUG findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,829 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:01,829 DEBUG findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,829 DEBUG findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,829 DEBUG findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,829 DEBUG findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,829 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,829 DEBUG findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,829 DEBUG findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,829 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,829 DEBUG findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,829 DEBUG findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2023-01-06 15:06:01,829 DEBUG findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,829 DEBUG findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,829 DEBUG findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,830 DEBUG findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,830 DEBUG findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,830 DEBUG findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,830 DEBUG findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,830 DEBUG findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,830 DEBUG findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:01,830 DEBUG findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,830 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2023-01-06 15:06:01,830 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,830 DEBUG findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,830 DEBUG findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,830 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:01,830 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,830 DEBUG findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,830 DEBUG findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,830 DEBUG findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,830 DEBUG findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2023-01-06 15:06:01,830 DEBUG findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,830 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,830 DEBUG findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,831 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,831 DEBUG findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,831 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,831 DEBUG findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,831 DEBUG findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,831 DEBUG findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,831 DEBUG findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,831 DEBUG findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,831 DEBUG findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,831 DEBUG findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,831 DEBUG findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2023-01-06 15:06:01,831 DEBUG findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,831 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2023-01-06 15:06:01,831 DEBUG findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2023-01-06 15:06:01,831 DEBUG findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,831 DEBUG findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,831 DEBUG findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,831 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,831 DEBUG findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2023-01-06 15:06:01,831 DEBUG findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,831 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,832 DEBUG findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,832 DEBUG findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,832 DEBUG findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,832 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,832 DEBUG findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,832 DEBUG findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,832 DEBUG findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:01,832 DEBUG findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,832 DEBUG findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,832 DEBUG findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,832 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,832 DEBUG findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,832 DEBUG findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,832 DEBUG findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,832 DEBUG findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,832 DEBUG findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2023-01-06 15:06:01,832 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2023-01-06 15:06:01,832 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,832 DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:01,832 DEBUG findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,832 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2023-01-06 15:06:01,832 DEBUG findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,833 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,833 DEBUG findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,833 DEBUG findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,833 DEBUG findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,833 DEBUG findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,833 DEBUG findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,833 DEBUG findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,833 DEBUG findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,833 DEBUG findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,833 DEBUG findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,833 DEBUG findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,833 DEBUG findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,833 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2023-01-06 15:06:01,833 DEBUG findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,833 DEBUG findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,833 DEBUG findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,833 DEBUG findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,833 DEBUG findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,833 DEBUG findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,833 DEBUG findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,833 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2023-01-06 15:06:01,833 DEBUG findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,834 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2023-01-06 15:06:01,834 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 0.33499999999999996
2023-01-06 15:06:01,834 DEBUG findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,834 DEBUG findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,834 DEBUG findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,834 DEBUG findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,834 DEBUG findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,834 DEBUG findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,834 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,834 DEBUG findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,834 DEBUG findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2023-01-06 15:06:01,834 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,834 DEBUG findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,834 DEBUG findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,834 DEBUG findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,834 DEBUG findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,834 DEBUG findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,834 DEBUG findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,834 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,834 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,834 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,834 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2023-01-06 15:06:01,835 DEBUG findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,835 DEBUG findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,835 DEBUG findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,835 DEBUG findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,835 DEBUG findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,835 DEBUG findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,835 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:01,835 DEBUG findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,835 DEBUG findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,835 DEBUG findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:01,835 DEBUG findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,835 DEBUG findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,835 DEBUG findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,835 DEBUG findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,835 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:01,835 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,835 DEBUG findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,835 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,835 DEBUG findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,836 DEBUG findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,836 DEBUG findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,836 DEBUG findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,836 DEBUG findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,836 DEBUG findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,836 DEBUG findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,836 DEBUG findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,836 DEBUG findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,836 DEBUG findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,836 DEBUG findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,836 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,836 DEBUG findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,836 DEBUG findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,836 DEBUG findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2023-01-06 15:06:01,837 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,837 DEBUG findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,837 DEBUG findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,837 DEBUG findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,837 DEBUG findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,837 DEBUG findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,837 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,837 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:01,837 DEBUG findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,837 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,837 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,837 DEBUG findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,837 DEBUG findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,837 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 1.05
2023-01-06 15:06:01,838 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,838 DEBUG findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,838 DEBUG findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,838 DEBUG findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,838 DEBUG findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,838 DEBUG findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,838 DEBUG findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,838 DEBUG findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2023-01-06 15:06:01,838 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,838 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,838 DEBUG findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,838 DEBUG findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,838 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,838 DEBUG findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,838 DEBUG findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,838 DEBUG findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,838 DEBUG findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,839 DEBUG findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,839 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,839 DEBUG findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,839 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 1.335
2023-01-06 15:06:01,839 DEBUG findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,839 DEBUG findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,839 DEBUG findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:01,839 DEBUG findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,839 DEBUG findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,839 DEBUG findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,839 DEBUG findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,839 DEBUG findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:01,839 DEBUG findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,839 DEBUG findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,839 DEBUG findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,839 DEBUG findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:01,840 DEBUG findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:01,840 DEBUG findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,840 DEBUG findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2023-01-06 15:06:01,840 DEBUG findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,840 DEBUG findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,840 DEBUG findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,840 DEBUG findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,840 DEBUG findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,840 DEBUG findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,840 DEBUG findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,840 DEBUG findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,840 DEBUG findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,840 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:01,840 DEBUG findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,840 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,840 DEBUG findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,840 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,840 DEBUG findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:01,840 DEBUG findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,840 DEBUG findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,840 DEBUG findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,841 DEBUG findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,841 DEBUG findfont: Matching STIXGeneral:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0 to STIXGeneral ('/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf') with score of 0.050000.
2023-01-06 15:06:01,841 DEBUG findfont: Matching STIXGeneral:style=italic:variant=normal:weight=normal:stretch=normal:size=18.0.
2023-01-06 15:06:01,841 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:01,841 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 1.335
2023-01-06 15:06:01,842 DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,842 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 0.33499999999999996
2023-01-06 15:06:01,842 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,842 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:01,842 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:01,842 DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,842 DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,842 DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,842 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-01-06 15:06:01,842 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,842 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:01,842 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 0.05
2023-01-06 15:06:01,842 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 10.335
2023-01-06 15:06:01,842 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-01-06 15:06:01,842 DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,842 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 10.05
2023-01-06 15:06:01,842 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,842 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,842 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:01,842 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 1.05
2023-01-06 15:06:01,843 DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,843 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-01-06 15:06:01,843 DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,843 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,843 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 10.05
2023-01-06 15:06:01,843 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,843 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,843 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:01,843 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:01,843 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-01-06 15:06:01,843 DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,843 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,843 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-01-06 15:06:01,843 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,843 DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,843 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:01,843 DEBUG findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,843 DEBUG findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 11.335
2023-01-06 15:06:01,844 DEBUG findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,844 DEBUG findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,844 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 1.05
2023-01-06 15:06:01,844 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,844 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:01,844 DEBUG findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,844 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 10.335
2023-01-06 15:06:01,844 DEBUG findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,844 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 10.335
2023-01-06 15:06:01,844 DEBUG findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 11.525
2023-01-06 15:06:01,844 DEBUG findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,844 DEBUG findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 10.335
2023-01-06 15:06:01,844 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,844 DEBUG findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,844 DEBUG findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,844 DEBUG findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,844 DEBUG findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,844 DEBUG findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,844 DEBUG findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,845 DEBUG findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,845 DEBUG findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,845 DEBUG findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,845 DEBUG findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,845 DEBUG findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,845 DEBUG findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,845 DEBUG findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,845 DEBUG findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,845 DEBUG findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,845 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 11.14975
2023-01-06 15:06:01,845 DEBUG findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,845 DEBUG findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,845 DEBUG findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,845 DEBUG findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,845 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,845 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 10.05
2023-01-06 15:06:01,845 DEBUG findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,845 DEBUG findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,845 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:01,845 DEBUG findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,845 DEBUG findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,846 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 11.335
2023-01-06 15:06:01,846 DEBUG findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,846 DEBUG findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,846 DEBUG findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,846 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,846 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:01,846 DEBUG findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,846 DEBUG findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,846 DEBUG findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,846 DEBUG findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,846 DEBUG findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,846 DEBUG findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:01,846 DEBUG findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,846 DEBUG findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 11.43
2023-01-06 15:06:01,846 DEBUG findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,846 DEBUG findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,846 DEBUG findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,846 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 10.14975
2023-01-06 15:06:01,846 DEBUG findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,846 DEBUG findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,847 DEBUG findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,847 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,847 DEBUG findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 11.145
2023-01-06 15:06:01,847 DEBUG findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,847 DEBUG findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,847 DEBUG findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,847 DEBUG findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,847 DEBUG findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,847 DEBUG findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 10.05
2023-01-06 15:06:01,847 DEBUG findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 11.145
2023-01-06 15:06:01,847 DEBUG findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,847 DEBUG findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,847 DEBUG findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 11.525
2023-01-06 15:06:01,847 DEBUG findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,847 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,847 DEBUG findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,847 DEBUG findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,847 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,847 DEBUG findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,847 DEBUG findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 11.145
2023-01-06 15:06:01,847 DEBUG findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,848 DEBUG findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,848 DEBUG findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,848 DEBUG findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 10.05
2023-01-06 15:06:01,848 DEBUG findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,848 DEBUG findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,848 DEBUG findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,848 DEBUG findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,848 DEBUG findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,848 DEBUG findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,848 DEBUG findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,848 DEBUG findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,848 DEBUG findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 11.145
2023-01-06 15:06:01,848 DEBUG findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,848 DEBUG findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,848 DEBUG findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,848 DEBUG findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,848 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 11.145
2023-01-06 15:06:01,848 DEBUG findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,848 DEBUG findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,848 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 11.525
2023-01-06 15:06:01,849 DEBUG findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,849 DEBUG findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,849 DEBUG findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,849 DEBUG findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,849 DEBUG findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,849 DEBUG findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,849 DEBUG findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,849 DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,849 DEBUG findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 10.05
2023-01-06 15:06:01,849 DEBUG findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,849 DEBUG findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,849 DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,849 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 10.535
2023-01-06 15:06:01,849 DEBUG findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,849 DEBUG findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,849 DEBUG findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,849 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,850 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:01,850 DEBUG findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,850 DEBUG findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,850 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,850 DEBUG findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,850 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 11.145
2023-01-06 15:06:01,850 DEBUG findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,850 DEBUG findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,850 DEBUG findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,850 DEBUG findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,850 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:01,850 DEBUG findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,850 DEBUG findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,850 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,851 DEBUG findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,851 DEBUG findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 11.42525
2023-01-06 15:06:01,851 DEBUG findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,851 DEBUG findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,851 DEBUG findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,851 DEBUG findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,851 DEBUG findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,851 DEBUG findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,851 DEBUG findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,851 DEBUG findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 11.335
2023-01-06 15:06:01,851 DEBUG findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 11.145
2023-01-06 15:06:01,851 DEBUG findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,851 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 11.43
2023-01-06 15:06:01,851 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:01,851 DEBUG findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,851 DEBUG findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,851 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 10.335
2023-01-06 15:06:01,851 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,851 DEBUG findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,851 DEBUG findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,852 DEBUG findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,852 DEBUG findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 11.25
2023-01-06 15:06:01,852 DEBUG findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,852 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,852 DEBUG findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 10.05
2023-01-06 15:06:01,852 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:01,852 DEBUG findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 10.05
2023-01-06 15:06:01,852 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,852 DEBUG findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,852 DEBUG findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,852 DEBUG findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,852 DEBUG findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,852 DEBUG findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:01,852 DEBUG findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 10.05
2023-01-06 15:06:01,852 DEBUG findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 11.335
2023-01-06 15:06:01,852 DEBUG findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 11.525
2023-01-06 15:06:01,852 DEBUG findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 11.335
2023-01-06 15:06:01,852 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 11.1925
2023-01-06 15:06:01,852 DEBUG findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 11.535
2023-01-06 15:06:01,853 DEBUG findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,853 DEBUG findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,853 DEBUG findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,853 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 10.05
2023-01-06 15:06:01,853 DEBUG findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 11.62
2023-01-06 15:06:01,853 DEBUG findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,853 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,853 DEBUG findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,853 DEBUG findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,853 DEBUG findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,853 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:01,853 DEBUG findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:01,853 DEBUG findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,853 DEBUG findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 11.525
2023-01-06 15:06:01,853 DEBUG findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,853 DEBUG findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,853 DEBUG findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,853 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:01,853 DEBUG findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,853 DEBUG findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,854 DEBUG findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,854 DEBUG findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,854 DEBUG findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 11.535
2023-01-06 15:06:01,854 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 11.25
2023-01-06 15:06:01,854 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,854 DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 11.525
2023-01-06 15:06:01,854 DEBUG findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,854 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 11.24
2023-01-06 15:06:01,854 DEBUG findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,854 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:01,854 DEBUG findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,854 DEBUG findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,854 DEBUG findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,854 DEBUG findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,854 DEBUG findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,854 DEBUG findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,854 DEBUG findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,854 DEBUG findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 10.05
2023-01-06 15:06:01,854 DEBUG findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,855 DEBUG findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,855 DEBUG findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,855 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 11.24
2023-01-06 15:06:01,855 DEBUG findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,855 DEBUG findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,855 DEBUG findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,855 DEBUG findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,855 DEBUG findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,855 DEBUG findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,855 DEBUG findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,855 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 11.335
2023-01-06 15:06:01,855 DEBUG findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,855 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 11.535
2023-01-06 15:06:01,855 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 1.335
2023-01-06 15:06:01,855 DEBUG findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,855 DEBUG findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,855 DEBUG findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,855 DEBUG findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,856 DEBUG findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,856 DEBUG findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,856 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,856 DEBUG findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,856 DEBUG findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 11.145
2023-01-06 15:06:01,856 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,856 DEBUG findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,856 DEBUG findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,856 DEBUG findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,856 DEBUG findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,856 DEBUG findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,856 DEBUG findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,856 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,856 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 10.05
2023-01-06 15:06:01,856 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,856 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 10.25
2023-01-06 15:06:01,856 DEBUG findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:01,856 DEBUG findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,856 DEBUG findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,856 DEBUG findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,857 DEBUG findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,857 DEBUG findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,857 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 10.335
2023-01-06 15:06:01,857 DEBUG findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,857 DEBUG findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,857 DEBUG findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 11.145
2023-01-06 15:06:01,857 DEBUG findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,857 DEBUG findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,857 DEBUG findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,857 DEBUG findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,857 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 11.145
2023-01-06 15:06:01,857 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,857 DEBUG findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,857 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,857 DEBUG findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,857 DEBUG findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,857 DEBUG findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,857 DEBUG findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,858 DEBUG findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,858 DEBUG findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,858 DEBUG findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,858 DEBUG findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,858 DEBUG findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,858 DEBUG findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,858 DEBUG findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,858 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,858 DEBUG findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,858 DEBUG findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,858 DEBUG findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 11.335
2023-01-06 15:06:01,858 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,858 DEBUG findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 10.05
2023-01-06 15:06:01,858 DEBUG findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,858 DEBUG findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,859 DEBUG findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,859 DEBUG findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,859 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:01,859 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 10.335
2023-01-06 15:06:01,859 DEBUG findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,859 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,859 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:01,859 DEBUG findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,859 DEBUG findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,859 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 0.05
2023-01-06 15:06:01,859 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:01,859 DEBUG findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,859 DEBUG findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,859 DEBUG findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:01,859 DEBUG findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,859 DEBUG findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,859 DEBUG findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,859 DEBUG findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 10.62
2023-01-06 15:06:01,859 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,859 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,859 DEBUG findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,860 DEBUG findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,860 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:01,860 DEBUG findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,860 DEBUG findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,860 DEBUG findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,860 DEBUG findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,860 DEBUG findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,860 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:01,860 DEBUG findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,860 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 0.33499999999999996
2023-01-06 15:06:01,860 DEBUG findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,860 DEBUG findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,860 DEBUG findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 11.145
2023-01-06 15:06:01,860 DEBUG findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,860 DEBUG findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,860 DEBUG findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,860 DEBUG findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,860 DEBUG findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 11.145
2023-01-06 15:06:01,860 DEBUG findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,860 DEBUG findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,860 DEBUG findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,861 DEBUG findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 11.145
2023-01-06 15:06:01,861 DEBUG findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 11.525
2023-01-06 15:06:01,861 DEBUG findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,861 DEBUG findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 11.1925
2023-01-06 15:06:01,861 DEBUG findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,861 DEBUG findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,861 DEBUG findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,861 DEBUG findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,861 DEBUG findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,861 DEBUG findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,861 DEBUG findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,861 DEBUG findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,861 DEBUG findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,861 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 10.335
2023-01-06 15:06:01,861 DEBUG findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,861 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,861 DEBUG findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,861 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:01,861 DEBUG findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 11.525
2023-01-06 15:06:01,861 DEBUG findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,861 DEBUG findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,861 DEBUG findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,862 DEBUG findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,862 DEBUG findfont: Matching STIXGeneral:style=italic:variant=normal:weight=normal:stretch=normal:size=18.0 to STIXGeneral ('/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf') with score of 0.050000.
2023-01-06 15:06:01,862 DEBUG findfont: Matching STIXGeneral:style=normal:variant=normal:weight=bold:stretch=normal:size=18.0.
2023-01-06 15:06:01,862 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:01,862 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 0.05
2023-01-06 15:06:01,862 DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,862 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 1.05
2023-01-06 15:06:01,863 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,863 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:01,863 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:01,863 DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,863 DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,863 DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,863 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-01-06 15:06:01,863 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,863 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:01,863 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 1.335
2023-01-06 15:06:01,863 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.05
2023-01-06 15:06:01,863 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-01-06 15:06:01,863 DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,863 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.335
2023-01-06 15:06:01,863 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,863 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,863 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:01,863 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 0.33499999999999996
2023-01-06 15:06:01,863 DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,863 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-01-06 15:06:01,863 DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,863 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,864 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.335
2023-01-06 15:06:01,864 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,864 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,864 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:01,864 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:01,864 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-01-06 15:06:01,864 DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,864 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,864 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-01-06 15:06:01,864 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,864 DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,864 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:01,864 DEBUG findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,864 DEBUG findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.05
2023-01-06 15:06:01,864 DEBUG findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,864 DEBUG findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,864 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 0.33499999999999996
2023-01-06 15:06:01,864 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,864 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:01,864 DEBUG findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,864 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 11.05
2023-01-06 15:06:01,864 DEBUG findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,865 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.05
2023-01-06 15:06:01,865 DEBUG findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.24
2023-01-06 15:06:01,865 DEBUG findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,865 DEBUG findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 11.05
2023-01-06 15:06:01,865 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,865 DEBUG findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,865 DEBUG findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,865 DEBUG findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,865 DEBUG findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,865 DEBUG findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,865 DEBUG findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,865 DEBUG findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,865 DEBUG findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,865 DEBUG findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,865 DEBUG findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,865 DEBUG findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,865 DEBUG findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,865 DEBUG findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,865 DEBUG findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,865 DEBUG findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,865 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.43475
2023-01-06 15:06:01,866 DEBUG findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,866 DEBUG findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,866 DEBUG findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,866 DEBUG findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,866 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,866 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.335
2023-01-06 15:06:01,866 DEBUG findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,866 DEBUG findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,866 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:01,866 DEBUG findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,866 DEBUG findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,866 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.05
2023-01-06 15:06:01,866 DEBUG findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,866 DEBUG findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,866 DEBUG findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,866 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,866 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:01,866 DEBUG findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,866 DEBUG findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,866 DEBUG findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,866 DEBUG findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,866 DEBUG findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,867 DEBUG findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:01,867 DEBUG findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,867 DEBUG findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.715
2023-01-06 15:06:01,867 DEBUG findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,867 DEBUG findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,867 DEBUG findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,867 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.43475
2023-01-06 15:06:01,867 DEBUG findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,867 DEBUG findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,867 DEBUG findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,867 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,867 DEBUG findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.43
2023-01-06 15:06:01,867 DEBUG findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,867 DEBUG findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,867 DEBUG findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,867 DEBUG findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,867 DEBUG findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,867 DEBUG findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.335
2023-01-06 15:06:01,867 DEBUG findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.43
2023-01-06 15:06:01,867 DEBUG findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,867 DEBUG findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,867 DEBUG findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.24
2023-01-06 15:06:01,868 DEBUG findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,868 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,868 DEBUG findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,868 DEBUG findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,868 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,868 DEBUG findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,868 DEBUG findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.43
2023-01-06 15:06:01,868 DEBUG findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,868 DEBUG findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,868 DEBUG findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,868 DEBUG findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.335
2023-01-06 15:06:01,868 DEBUG findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,868 DEBUG findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,868 DEBUG findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,868 DEBUG findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,868 DEBUG findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,868 DEBUG findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,868 DEBUG findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,868 DEBUG findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,868 DEBUG findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.24
2023-01-06 15:06:01,868 DEBUG findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,868 DEBUG findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,869 DEBUG findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,869 DEBUG findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,869 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.43
2023-01-06 15:06:01,869 DEBUG findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,869 DEBUG findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,869 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.24
2023-01-06 15:06:01,869 DEBUG findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,869 DEBUG findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,869 DEBUG findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,869 DEBUG findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,869 DEBUG findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,869 DEBUG findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,869 DEBUG findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,869 DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,869 DEBUG findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.335
2023-01-06 15:06:01,869 DEBUG findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,869 DEBUG findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,869 DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,869 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.25
2023-01-06 15:06:01,869 DEBUG findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,869 DEBUG findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,869 DEBUG findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,870 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,870 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:01,870 DEBUG findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,870 DEBUG findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,870 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,870 DEBUG findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,870 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.43
2023-01-06 15:06:01,870 DEBUG findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,870 DEBUG findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,870 DEBUG findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,870 DEBUG findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,870 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:01,870 DEBUG findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,870 DEBUG findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,870 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,870 DEBUG findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,870 DEBUG findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.71025
2023-01-06 15:06:01,870 DEBUG findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,870 DEBUG findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,870 DEBUG findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,870 DEBUG findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,870 DEBUG findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,870 DEBUG findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,871 DEBUG findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,871 DEBUG findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.05
2023-01-06 15:06:01,871 DEBUG findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.43
2023-01-06 15:06:01,871 DEBUG findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,871 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.145
2023-01-06 15:06:01,871 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:01,871 DEBUG findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,871 DEBUG findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,871 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.05
2023-01-06 15:06:01,871 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,871 DEBUG findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,871 DEBUG findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,871 DEBUG findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,871 DEBUG findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.535
2023-01-06 15:06:01,871 DEBUG findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,871 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,871 DEBUG findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.335
2023-01-06 15:06:01,871 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:01,871 DEBUG findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 11.335
2023-01-06 15:06:01,871 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,871 DEBUG findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,872 DEBUG findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,872 DEBUG findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,872 DEBUG findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,872 DEBUG findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:01,872 DEBUG findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.335
2023-01-06 15:06:01,872 DEBUG findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.05
2023-01-06 15:06:01,872 DEBUG findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.24
2023-01-06 15:06:01,872 DEBUG findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.05
2023-01-06 15:06:01,872 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.4775
2023-01-06 15:06:01,872 DEBUG findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.25
2023-01-06 15:06:01,872 DEBUG findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,872 DEBUG findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,872 DEBUG findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,872 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.335
2023-01-06 15:06:01,872 DEBUG findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.335
2023-01-06 15:06:01,872 DEBUG findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,872 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,872 DEBUG findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,872 DEBUG findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,872 DEBUG findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,872 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:01,872 DEBUG findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:01,873 DEBUG findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,873 DEBUG findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.24
2023-01-06 15:06:01,873 DEBUG findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,873 DEBUG findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,873 DEBUG findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,873 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:01,873 DEBUG findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,873 DEBUG findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,873 DEBUG findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,873 DEBUG findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,873 DEBUG findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.25
2023-01-06 15:06:01,873 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.535
2023-01-06 15:06:01,873 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,873 DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.24
2023-01-06 15:06:01,873 DEBUG findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,873 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.145
2023-01-06 15:06:01,873 DEBUG findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,873 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:01,873 DEBUG findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,873 DEBUG findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,873 DEBUG findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,873 DEBUG findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,874 DEBUG findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,874 DEBUG findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,874 DEBUG findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,874 DEBUG findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.335
2023-01-06 15:06:01,874 DEBUG findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,874 DEBUG findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,874 DEBUG findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,874 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.525
2023-01-06 15:06:01,874 DEBUG findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,874 DEBUG findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,874 DEBUG findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,874 DEBUG findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,874 DEBUG findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,874 DEBUG findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,874 DEBUG findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,874 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.62
2023-01-06 15:06:01,874 DEBUG findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,874 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.25
2023-01-06 15:06:01,874 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 0.05
2023-01-06 15:06:01,874 DEBUG findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,874 DEBUG findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,874 DEBUG findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,874 DEBUG findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,875 DEBUG findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,875 DEBUG findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,875 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,875 DEBUG findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,875 DEBUG findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.24
2023-01-06 15:06:01,875 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,875 DEBUG findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,875 DEBUG findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,875 DEBUG findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,875 DEBUG findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,875 DEBUG findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,875 DEBUG findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,875 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,875 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.335
2023-01-06 15:06:01,875 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,875 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.535
2023-01-06 15:06:01,875 DEBUG findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:01,875 DEBUG findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,875 DEBUG findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,875 DEBUG findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,876 DEBUG findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,876 DEBUG findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,876 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.05
2023-01-06 15:06:01,876 DEBUG findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,876 DEBUG findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,876 DEBUG findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.24
2023-01-06 15:06:01,876 DEBUG findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,876 DEBUG findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,876 DEBUG findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,876 DEBUG findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,876 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.24
2023-01-06 15:06:01,876 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,876 DEBUG findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,876 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,876 DEBUG findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,876 DEBUG findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,877 DEBUG findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,877 DEBUG findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,877 DEBUG findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,877 DEBUG findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,877 DEBUG findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,877 DEBUG findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,877 DEBUG findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,877 DEBUG findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,877 DEBUG findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,877 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,877 DEBUG findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,877 DEBUG findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,877 DEBUG findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.62
2023-01-06 15:06:01,877 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,877 DEBUG findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 11.335
2023-01-06 15:06:01,877 DEBUG findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,877 DEBUG findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,877 DEBUG findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,877 DEBUG findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,877 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:01,877 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.05
2023-01-06 15:06:01,878 DEBUG findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,878 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,878 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:01,878 DEBUG findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,878 DEBUG findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,878 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 1.335
2023-01-06 15:06:01,878 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:01,878 DEBUG findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,878 DEBUG findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,878 DEBUG findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:01,878 DEBUG findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,878 DEBUG findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,878 DEBUG findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,878 DEBUG findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.335
2023-01-06 15:06:01,878 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,878 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,878 DEBUG findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,878 DEBUG findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,878 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:01,879 DEBUG findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,879 DEBUG findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,879 DEBUG findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,879 DEBUG findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,879 DEBUG findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,879 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:01,879 DEBUG findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,879 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 1.05
2023-01-06 15:06:01,879 DEBUG findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,879 DEBUG findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,879 DEBUG findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 10.24
2023-01-06 15:06:01,879 DEBUG findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,879 DEBUG findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,879 DEBUG findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,879 DEBUG findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,879 DEBUG findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.24
2023-01-06 15:06:01,879 DEBUG findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,879 DEBUG findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,880 DEBUG findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,880 DEBUG findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.24
2023-01-06 15:06:01,880 DEBUG findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.24
2023-01-06 15:06:01,880 DEBUG findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,880 DEBUG findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.4775
2023-01-06 15:06:01,880 DEBUG findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,880 DEBUG findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,880 DEBUG findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,880 DEBUG findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,880 DEBUG findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,880 DEBUG findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,880 DEBUG findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,880 DEBUG findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,880 DEBUG findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,880 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.05
2023-01-06 15:06:01,880 DEBUG findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,880 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,880 DEBUG findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,880 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:01,880 DEBUG findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.24
2023-01-06 15:06:01,880 DEBUG findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,880 DEBUG findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,881 DEBUG findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,881 DEBUG findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,881 DEBUG findfont: Matching STIXGeneral:style=normal:variant=normal:weight=bold:stretch=normal:size=18.0 to STIXGeneral ('/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf') with score of 0.050000.
2023-01-06 15:06:01,881 DEBUG findfont: Matching STIXNonUnicode:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0.
2023-01-06 15:06:01,881 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,881 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,881 DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,881 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:01,881 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 0.05
2023-01-06 15:06:01,881 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,881 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,881 DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,882 DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,882 DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,882 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-06 15:06:01,882 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,882 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 0.33499999999999996
2023-01-06 15:06:01,882 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,882 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 1.335
2023-01-06 15:06:01,882 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-06 15:06:01,882 DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,882 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,882 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,882 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,882 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,882 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,882 DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,882 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-06 15:06:01,882 DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,882 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,882 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 1.05
2023-01-06 15:06:01,882 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,882 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,882 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,883 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,883 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-06 15:06:01,883 DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,883 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,883 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:01,883 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,883 DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,883 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,883 DEBUG findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,883 DEBUG findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,883 DEBUG findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,883 DEBUG findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,883 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,883 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,883 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,883 DEBUG findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,883 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:01,883 DEBUG findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,883 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:01,883 DEBUG findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:01,883 DEBUG findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,883 DEBUG findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:01,884 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,884 DEBUG findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,884 DEBUG findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,884 DEBUG findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,884 DEBUG findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,884 DEBUG findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,884 DEBUG findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,884 DEBUG findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,884 DEBUG findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,884 DEBUG findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,884 DEBUG findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,884 DEBUG findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,884 DEBUG findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,884 DEBUG findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,884 DEBUG findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,884 DEBUG findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,884 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2023-01-06 15:06:01,884 DEBUG findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,884 DEBUG findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,885 DEBUG findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,885 DEBUG findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,885 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,885 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,885 DEBUG findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,885 DEBUG findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,885 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,885 DEBUG findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,885 DEBUG findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,885 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,885 DEBUG findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,885 DEBUG findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,885 DEBUG findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,885 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,885 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,885 DEBUG findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,885 DEBUG findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,885 DEBUG findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,885 DEBUG findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,885 DEBUG findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,885 DEBUG findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,886 DEBUG findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,886 DEBUG findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2023-01-06 15:06:01,886 DEBUG findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,886 DEBUG findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,886 DEBUG findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,886 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2023-01-06 15:06:01,886 DEBUG findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,886 DEBUG findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,886 DEBUG findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,886 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,886 DEBUG findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:01,886 DEBUG findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,886 DEBUG findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,886 DEBUG findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,886 DEBUG findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,886 DEBUG findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,886 DEBUG findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,886 DEBUG findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:01,886 DEBUG findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,886 DEBUG findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,887 DEBUG findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:01,887 DEBUG findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,887 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 0.05
2023-01-06 15:06:01,887 DEBUG findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,887 DEBUG findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,887 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,887 DEBUG findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,887 DEBUG findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:01,887 DEBUG findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,887 DEBUG findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,887 DEBUG findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,887 DEBUG findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,887 DEBUG findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,887 DEBUG findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,887 DEBUG findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,887 DEBUG findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,887 DEBUG findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,887 DEBUG findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,887 DEBUG findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,888 DEBUG findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,888 DEBUG findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2023-01-06 15:06:01,888 DEBUG findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,888 DEBUG findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,888 DEBUG findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,888 DEBUG findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,888 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:01,888 DEBUG findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,888 DEBUG findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,888 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:01,888 DEBUG findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,888 DEBUG findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,888 DEBUG findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,888 DEBUG findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,888 DEBUG findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,888 DEBUG findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,888 DEBUG findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,888 DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,888 DEBUG findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,888 DEBUG findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,888 DEBUG findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,889 DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,889 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2023-01-06 15:06:01,889 DEBUG findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,889 DEBUG findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,889 DEBUG findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,889 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,889 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,889 DEBUG findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,889 DEBUG findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,889 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,889 DEBUG findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,889 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:01,889 DEBUG findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,889 DEBUG findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,889 DEBUG findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,889 DEBUG findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,889 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,889 DEBUG findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,889 DEBUG findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,889 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,889 DEBUG findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,890 DEBUG findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2023-01-06 15:06:01,890 DEBUG findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,890 DEBUG findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,890 DEBUG findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,890 DEBUG findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,890 DEBUG findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,890 DEBUG findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,890 DEBUG findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,890 DEBUG findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,891 DEBUG findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:01,891 DEBUG findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,891 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2023-01-06 15:06:01,891 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,891 DEBUG findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,891 DEBUG findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,891 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:01,891 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,891 DEBUG findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,891 DEBUG findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,891 DEBUG findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,891 DEBUG findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2023-01-06 15:06:01,891 DEBUG findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,891 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,891 DEBUG findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,891 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,892 DEBUG findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,892 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,892 DEBUG findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,892 DEBUG findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,892 DEBUG findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,892 DEBUG findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,892 DEBUG findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,892 DEBUG findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,892 DEBUG findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,892 DEBUG findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2023-01-06 15:06:01,892 DEBUG findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,892 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2023-01-06 15:06:01,892 DEBUG findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2023-01-06 15:06:01,892 DEBUG findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,892 DEBUG findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,892 DEBUG findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,892 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,892 DEBUG findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2023-01-06 15:06:01,892 DEBUG findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,892 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,892 DEBUG findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,892 DEBUG findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,893 DEBUG findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,893 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,893 DEBUG findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,893 DEBUG findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,893 DEBUG findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:01,893 DEBUG findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,893 DEBUG findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,893 DEBUG findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,893 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,893 DEBUG findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,893 DEBUG findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,893 DEBUG findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,893 DEBUG findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,893 DEBUG findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2023-01-06 15:06:01,893 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2023-01-06 15:06:01,893 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,893 DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:01,893 DEBUG findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,893 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2023-01-06 15:06:01,893 DEBUG findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,893 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,894 DEBUG findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,894 DEBUG findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,894 DEBUG findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,894 DEBUG findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,894 DEBUG findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,894 DEBUG findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,894 DEBUG findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,894 DEBUG findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,894 DEBUG findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,894 DEBUG findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,894 DEBUG findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,894 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2023-01-06 15:06:01,894 DEBUG findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,894 DEBUG findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,894 DEBUG findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,894 DEBUG findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,894 DEBUG findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,894 DEBUG findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,895 DEBUG findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,895 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2023-01-06 15:06:01,895 DEBUG findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,895 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2023-01-06 15:06:01,895 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,895 DEBUG findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,895 DEBUG findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,895 DEBUG findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,895 DEBUG findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,895 DEBUG findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,895 DEBUG findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,895 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,896 DEBUG findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,896 DEBUG findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2023-01-06 15:06:01,896 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,896 DEBUG findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,896 DEBUG findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,896 DEBUG findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,896 DEBUG findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,896 DEBUG findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,896 DEBUG findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,896 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,896 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 1.05
2023-01-06 15:06:01,896 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,896 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2023-01-06 15:06:01,897 DEBUG findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,897 DEBUG findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,897 DEBUG findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,897 DEBUG findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,897 DEBUG findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,897 DEBUG findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,897 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:01,897 DEBUG findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,897 DEBUG findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,897 DEBUG findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:01,897 DEBUG findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,897 DEBUG findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,897 DEBUG findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,897 DEBUG findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,897 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:01,897 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,897 DEBUG findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,897 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,897 DEBUG findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,897 DEBUG findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,897 DEBUG findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,897 DEBUG findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,898 DEBUG findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,898 DEBUG findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,898 DEBUG findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,898 DEBUG findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,898 DEBUG findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,898 DEBUG findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,898 DEBUG findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,898 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,898 DEBUG findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,898 DEBUG findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,898 DEBUG findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2023-01-06 15:06:01,898 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,898 DEBUG findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,898 DEBUG findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,898 DEBUG findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,898 DEBUG findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,898 DEBUG findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,898 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,898 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:01,898 DEBUG findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,898 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,898 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,899 DEBUG findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,899 DEBUG findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,899 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,899 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,899 DEBUG findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,899 DEBUG findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,899 DEBUG findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,899 DEBUG findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,899 DEBUG findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,899 DEBUG findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,899 DEBUG findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2023-01-06 15:06:01,899 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,899 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,899 DEBUG findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,899 DEBUG findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,899 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,899 DEBUG findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,899 DEBUG findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,899 DEBUG findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,899 DEBUG findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,899 DEBUG findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,900 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 0.33499999999999996
2023-01-06 15:06:01,900 DEBUG findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,900 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:01,900 DEBUG findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,900 DEBUG findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,900 DEBUG findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:01,900 DEBUG findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,900 DEBUG findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,900 DEBUG findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,900 DEBUG findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,900 DEBUG findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:01,900 DEBUG findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,900 DEBUG findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,900 DEBUG findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,900 DEBUG findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:01,900 DEBUG findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:01,900 DEBUG findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,900 DEBUG findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2023-01-06 15:06:01,900 DEBUG findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,900 DEBUG findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,900 DEBUG findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,900 DEBUG findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,901 DEBUG findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,901 DEBUG findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,901 DEBUG findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,901 DEBUG findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,901 DEBUG findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,901 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 1.335
2023-01-06 15:06:01,901 DEBUG findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,901 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,901 DEBUG findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,901 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,901 DEBUG findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:01,901 DEBUG findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,901 DEBUG findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,901 DEBUG findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,901 DEBUG findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,901 DEBUG findfont: Matching STIXNonUnicode:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0 to STIXNonUnicode ('/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf') with score of 0.050000.
2023-01-06 15:06:01,902 DEBUG findfont: Matching STIXNonUnicode:style=italic:variant=normal:weight=normal:stretch=normal:size=18.0.
2023-01-06 15:06:01,902 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:01,902 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:01,902 DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,902 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 10.335
2023-01-06 15:06:01,902 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 1.05
2023-01-06 15:06:01,902 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:01,902 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:01,902 DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,902 DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,902 DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,902 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-01-06 15:06:01,902 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,902 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 1.335
2023-01-06 15:06:01,903 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 10.05
2023-01-06 15:06:01,903 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 0.33499999999999996
2023-01-06 15:06:01,903 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-01-06 15:06:01,903 DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,903 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 10.05
2023-01-06 15:06:01,903 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,903 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,903 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:01,903 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,903 DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,903 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-01-06 15:06:01,903 DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,903 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,903 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 0.05
2023-01-06 15:06:01,903 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,903 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,903 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:01,903 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:01,903 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-01-06 15:06:01,904 DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,904 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,904 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-01-06 15:06:01,904 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,904 DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,904 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:01,904 DEBUG findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,904 DEBUG findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 11.335
2023-01-06 15:06:01,904 DEBUG findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,904 DEBUG findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,904 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,904 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,904 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:01,904 DEBUG findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,904 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 10.335
2023-01-06 15:06:01,904 DEBUG findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,904 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 10.335
2023-01-06 15:06:01,905 DEBUG findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 11.525
2023-01-06 15:06:01,905 DEBUG findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,905 DEBUG findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 10.335
2023-01-06 15:06:01,905 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,905 DEBUG findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,905 DEBUG findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,905 DEBUG findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,905 DEBUG findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,905 DEBUG findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,905 DEBUG findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,905 DEBUG findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,905 DEBUG findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,905 DEBUG findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,905 DEBUG findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,905 DEBUG findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,905 DEBUG findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,905 DEBUG findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,905 DEBUG findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,905 DEBUG findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,906 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 11.14975
2023-01-06 15:06:01,906 DEBUG findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,906 DEBUG findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,906 DEBUG findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,906 DEBUG findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,906 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,906 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 10.05
2023-01-06 15:06:01,906 DEBUG findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,906 DEBUG findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,906 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:01,906 DEBUG findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,906 DEBUG findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,906 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 11.335
2023-01-06 15:06:01,906 DEBUG findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,906 DEBUG findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,906 DEBUG findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,906 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,906 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:01,906 DEBUG findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,906 DEBUG findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,907 DEBUG findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,907 DEBUG findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,907 DEBUG findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,907 DEBUG findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:01,907 DEBUG findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,907 DEBUG findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 11.43
2023-01-06 15:06:01,907 DEBUG findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,907 DEBUG findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,907 DEBUG findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,907 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 10.14975
2023-01-06 15:06:01,907 DEBUG findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,907 DEBUG findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,907 DEBUG findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,907 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,907 DEBUG findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 11.145
2023-01-06 15:06:01,907 DEBUG findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,907 DEBUG findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,908 DEBUG findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,908 DEBUG findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,908 DEBUG findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,908 DEBUG findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 10.05
2023-01-06 15:06:01,908 DEBUG findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 11.145
2023-01-06 15:06:01,908 DEBUG findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,908 DEBUG findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,908 DEBUG findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 11.525
2023-01-06 15:06:01,908 DEBUG findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,908 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 1.05
2023-01-06 15:06:01,908 DEBUG findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,908 DEBUG findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,908 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,908 DEBUG findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,908 DEBUG findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 11.145
2023-01-06 15:06:01,908 DEBUG findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,908 DEBUG findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,908 DEBUG findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,908 DEBUG findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 10.05
2023-01-06 15:06:01,909 DEBUG findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,909 DEBUG findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,909 DEBUG findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,909 DEBUG findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,909 DEBUG findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,909 DEBUG findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,909 DEBUG findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,909 DEBUG findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,909 DEBUG findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 11.145
2023-01-06 15:06:01,909 DEBUG findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,909 DEBUG findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,909 DEBUG findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,909 DEBUG findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,909 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 11.145
2023-01-06 15:06:01,909 DEBUG findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,909 DEBUG findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,909 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 11.525
2023-01-06 15:06:01,910 DEBUG findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,910 DEBUG findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,910 DEBUG findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,910 DEBUG findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,910 DEBUG findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,910 DEBUG findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,910 DEBUG findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,910 DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,910 DEBUG findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 10.05
2023-01-06 15:06:01,910 DEBUG findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,910 DEBUG findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,910 DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,910 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 10.535
2023-01-06 15:06:01,910 DEBUG findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,910 DEBUG findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,910 DEBUG findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,910 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,910 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:01,911 DEBUG findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,911 DEBUG findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,911 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,911 DEBUG findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,911 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 11.145
2023-01-06 15:06:01,911 DEBUG findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,911 DEBUG findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,911 DEBUG findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,911 DEBUG findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,911 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:01,911 DEBUG findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,911 DEBUG findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,911 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,911 DEBUG findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,911 DEBUG findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 11.42525
2023-01-06 15:06:01,911 DEBUG findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,911 DEBUG findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,911 DEBUG findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,911 DEBUG findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,912 DEBUG findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,912 DEBUG findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,912 DEBUG findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,912 DEBUG findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 11.335
2023-01-06 15:06:01,912 DEBUG findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 11.145
2023-01-06 15:06:01,912 DEBUG findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,912 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 11.43
2023-01-06 15:06:01,912 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:01,912 DEBUG findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,912 DEBUG findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,912 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 10.335
2023-01-06 15:06:01,912 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,912 DEBUG findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,912 DEBUG findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,912 DEBUG findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,912 DEBUG findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 11.25
2023-01-06 15:06:01,912 DEBUG findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,912 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,912 DEBUG findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 10.05
2023-01-06 15:06:01,912 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:01,913 DEBUG findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 10.05
2023-01-06 15:06:01,913 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,913 DEBUG findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,913 DEBUG findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,913 DEBUG findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,913 DEBUG findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,913 DEBUG findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:01,913 DEBUG findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 10.05
2023-01-06 15:06:01,913 DEBUG findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 11.335
2023-01-06 15:06:01,913 DEBUG findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 11.525
2023-01-06 15:06:01,913 DEBUG findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 11.335
2023-01-06 15:06:01,913 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 11.1925
2023-01-06 15:06:01,913 DEBUG findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 11.535
2023-01-06 15:06:01,913 DEBUG findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,913 DEBUG findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,913 DEBUG findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,913 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 10.05
2023-01-06 15:06:01,913 DEBUG findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 11.62
2023-01-06 15:06:01,913 DEBUG findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,913 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,914 DEBUG findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,914 DEBUG findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,914 DEBUG findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,914 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:01,914 DEBUG findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:01,914 DEBUG findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,914 DEBUG findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 11.525
2023-01-06 15:06:01,914 DEBUG findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,914 DEBUG findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,914 DEBUG findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,914 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:01,914 DEBUG findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,914 DEBUG findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,914 DEBUG findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,914 DEBUG findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,914 DEBUG findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 11.535
2023-01-06 15:06:01,914 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 11.25
2023-01-06 15:06:01,914 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,915 DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 11.525
2023-01-06 15:06:01,915 DEBUG findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,915 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 11.24
2023-01-06 15:06:01,915 DEBUG findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,915 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:01,915 DEBUG findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,915 DEBUG findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,915 DEBUG findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,915 DEBUG findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,915 DEBUG findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,915 DEBUG findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,915 DEBUG findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,915 DEBUG findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 10.05
2023-01-06 15:06:01,915 DEBUG findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,915 DEBUG findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,915 DEBUG findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,915 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 11.24
2023-01-06 15:06:01,915 DEBUG findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,915 DEBUG findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,916 DEBUG findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,916 DEBUG findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,916 DEBUG findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,916 DEBUG findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,916 DEBUG findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,916 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 11.335
2023-01-06 15:06:01,916 DEBUG findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,916 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 11.535
2023-01-06 15:06:01,916 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:01,916 DEBUG findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,916 DEBUG findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,916 DEBUG findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,916 DEBUG findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,916 DEBUG findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,916 DEBUG findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,916 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,916 DEBUG findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,916 DEBUG findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 11.145
2023-01-06 15:06:01,916 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,916 DEBUG findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,917 DEBUG findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,917 DEBUG findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,917 DEBUG findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,917 DEBUG findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,917 DEBUG findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,917 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,917 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 0.05
2023-01-06 15:06:01,917 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,917 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 10.25
2023-01-06 15:06:01,917 DEBUG findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:01,917 DEBUG findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,917 DEBUG findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,917 DEBUG findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,917 DEBUG findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,917 DEBUG findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,917 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 10.335
2023-01-06 15:06:01,917 DEBUG findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,917 DEBUG findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,917 DEBUG findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 11.145
2023-01-06 15:06:01,918 DEBUG findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,918 DEBUG findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,918 DEBUG findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,918 DEBUG findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,918 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 11.145
2023-01-06 15:06:01,918 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,918 DEBUG findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,918 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,918 DEBUG findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,918 DEBUG findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,918 DEBUG findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,918 DEBUG findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,918 DEBUG findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,918 DEBUG findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,918 DEBUG findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,918 DEBUG findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,918 DEBUG findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,918 DEBUG findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,918 DEBUG findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,918 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,918 DEBUG findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,919 DEBUG findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,919 DEBUG findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 11.335
2023-01-06 15:06:01,919 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,919 DEBUG findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 10.05
2023-01-06 15:06:01,919 DEBUG findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,919 DEBUG findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,919 DEBUG findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,919 DEBUG findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,919 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:01,919 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 10.335
2023-01-06 15:06:01,919 DEBUG findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,919 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,919 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:01,919 DEBUG findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,919 DEBUG findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,919 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 10.05
2023-01-06 15:06:01,919 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:01,919 DEBUG findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,919 DEBUG findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,920 DEBUG findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:01,920 DEBUG findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,920 DEBUG findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,920 DEBUG findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,920 DEBUG findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 10.62
2023-01-06 15:06:01,920 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,920 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,920 DEBUG findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,920 DEBUG findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,920 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:01,920 DEBUG findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,920 DEBUG findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,920 DEBUG findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,920 DEBUG findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,920 DEBUG findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,920 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 1.335
2023-01-06 15:06:01,920 DEBUG findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,920 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 10.335
2023-01-06 15:06:01,920 DEBUG findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,920 DEBUG findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,920 DEBUG findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 11.145
2023-01-06 15:06:01,921 DEBUG findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,921 DEBUG findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,921 DEBUG findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,921 DEBUG findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,921 DEBUG findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 11.145
2023-01-06 15:06:01,921 DEBUG findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,921 DEBUG findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,921 DEBUG findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,921 DEBUG findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 11.145
2023-01-06 15:06:01,921 DEBUG findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 11.525
2023-01-06 15:06:01,921 DEBUG findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,921 DEBUG findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 11.1925
2023-01-06 15:06:01,921 DEBUG findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,921 DEBUG findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,921 DEBUG findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,921 DEBUG findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,921 DEBUG findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,921 DEBUG findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,921 DEBUG findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,921 DEBUG findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,921 DEBUG findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,922 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 0.33499999999999996
2023-01-06 15:06:01,922 DEBUG findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,922 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,922 DEBUG findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,922 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:01,922 DEBUG findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 11.525
2023-01-06 15:06:01,922 DEBUG findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,922 DEBUG findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,922 DEBUG findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,922 DEBUG findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:01,922 DEBUG findfont: Matching STIXNonUnicode:style=italic:variant=normal:weight=normal:stretch=normal:size=18.0 to STIXNonUnicode ('/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf') with score of 0.050000.
2023-01-06 15:06:01,923 DEBUG findfont: Matching STIXNonUnicode:style=normal:variant=normal:weight=bold:stretch=normal:size=18.0.
2023-01-06 15:06:01,923 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:01,923 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:01,923 DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,923 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.05
2023-01-06 15:06:01,923 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 0.33499999999999996
2023-01-06 15:06:01,923 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:01,923 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:01,923 DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,923 DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,923 DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,923 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-01-06 15:06:01,924 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,924 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 0.05
2023-01-06 15:06:01,924 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.335
2023-01-06 15:06:01,924 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 1.05
2023-01-06 15:06:01,924 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-01-06 15:06:01,924 DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,924 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.335
2023-01-06 15:06:01,924 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,924 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,924 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:01,924 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,924 DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,924 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-01-06 15:06:01,924 DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,924 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,924 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 1.335
2023-01-06 15:06:01,924 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,924 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,924 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:01,924 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:01,925 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-01-06 15:06:01,925 DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,925 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,925 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-01-06 15:06:01,925 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,925 DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,925 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:01,925 DEBUG findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,925 DEBUG findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.05
2023-01-06 15:06:01,925 DEBUG findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,925 DEBUG findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,925 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,925 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,925 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:01,925 DEBUG findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,925 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 11.05
2023-01-06 15:06:01,925 DEBUG findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,925 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.05
2023-01-06 15:06:01,925 DEBUG findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.24
2023-01-06 15:06:01,925 DEBUG findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,925 DEBUG findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 11.05
2023-01-06 15:06:01,926 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,926 DEBUG findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,926 DEBUG findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,926 DEBUG findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,926 DEBUG findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,926 DEBUG findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,926 DEBUG findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,926 DEBUG findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,926 DEBUG findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,926 DEBUG findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,926 DEBUG findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,926 DEBUG findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,926 DEBUG findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,926 DEBUG findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,926 DEBUG findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,926 DEBUG findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,926 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.43475
2023-01-06 15:06:01,926 DEBUG findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,926 DEBUG findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,926 DEBUG findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,926 DEBUG findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,926 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,926 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.335
2023-01-06 15:06:01,927 DEBUG findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,927 DEBUG findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,927 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:01,927 DEBUG findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,927 DEBUG findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,927 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.05
2023-01-06 15:06:01,927 DEBUG findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,927 DEBUG findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,927 DEBUG findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,927 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,927 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:01,927 DEBUG findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,927 DEBUG findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,927 DEBUG findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,927 DEBUG findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,927 DEBUG findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,927 DEBUG findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:01,927 DEBUG findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,928 DEBUG findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.715
2023-01-06 15:06:01,928 DEBUG findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,928 DEBUG findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,928 DEBUG findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,928 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.43475
2023-01-06 15:06:01,928 DEBUG findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,928 DEBUG findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,928 DEBUG findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,928 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,928 DEBUG findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.43
2023-01-06 15:06:01,928 DEBUG findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,928 DEBUG findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,928 DEBUG findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,928 DEBUG findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,928 DEBUG findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,928 DEBUG findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.335
2023-01-06 15:06:01,928 DEBUG findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.43
2023-01-06 15:06:01,929 DEBUG findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,929 DEBUG findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,929 DEBUG findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.24
2023-01-06 15:06:01,929 DEBUG findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,929 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 0.33499999999999996
2023-01-06 15:06:01,929 DEBUG findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,929 DEBUG findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,929 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,929 DEBUG findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,929 DEBUG findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.43
2023-01-06 15:06:01,929 DEBUG findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,929 DEBUG findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,929 DEBUG findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,929 DEBUG findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.335
2023-01-06 15:06:01,929 DEBUG findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,929 DEBUG findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,929 DEBUG findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,930 DEBUG findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,930 DEBUG findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,930 DEBUG findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,930 DEBUG findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,930 DEBUG findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,930 DEBUG findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.24
2023-01-06 15:06:01,930 DEBUG findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,930 DEBUG findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,930 DEBUG findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,930 DEBUG findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,930 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.43
2023-01-06 15:06:01,930 DEBUG findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,930 DEBUG findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,930 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.24
2023-01-06 15:06:01,930 DEBUG findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,930 DEBUG findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,930 DEBUG findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,930 DEBUG findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,930 DEBUG findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,930 DEBUG findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,931 DEBUG findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,931 DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,931 DEBUG findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.335
2023-01-06 15:06:01,931 DEBUG findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,931 DEBUG findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,931 DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,931 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.25
2023-01-06 15:06:01,931 DEBUG findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,931 DEBUG findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,931 DEBUG findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,931 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,931 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:01,931 DEBUG findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,932 DEBUG findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,932 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,932 DEBUG findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,932 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.43
2023-01-06 15:06:01,932 DEBUG findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,932 DEBUG findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,932 DEBUG findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,932 DEBUG findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,932 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:01,932 DEBUG findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,932 DEBUG findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,932 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,932 DEBUG findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,932 DEBUG findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.71025
2023-01-06 15:06:01,932 DEBUG findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,932 DEBUG findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,932 DEBUG findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,932 DEBUG findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,933 DEBUG findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,933 DEBUG findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,933 DEBUG findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,933 DEBUG findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.05
2023-01-06 15:06:01,933 DEBUG findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.43
2023-01-06 15:06:01,933 DEBUG findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,933 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.145
2023-01-06 15:06:01,933 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:01,933 DEBUG findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,933 DEBUG findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,933 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.05
2023-01-06 15:06:01,933 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,933 DEBUG findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,933 DEBUG findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,933 DEBUG findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,933 DEBUG findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.535
2023-01-06 15:06:01,933 DEBUG findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,934 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,934 DEBUG findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.335
2023-01-06 15:06:01,934 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:01,934 DEBUG findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 11.335
2023-01-06 15:06:01,934 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,934 DEBUG findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,934 DEBUG findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,934 DEBUG findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,934 DEBUG findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,934 DEBUG findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:01,934 DEBUG findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.335
2023-01-06 15:06:01,934 DEBUG findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.05
2023-01-06 15:06:01,934 DEBUG findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.24
2023-01-06 15:06:01,934 DEBUG findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.05
2023-01-06 15:06:01,934 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.4775
2023-01-06 15:06:01,935 DEBUG findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.25
2023-01-06 15:06:01,935 DEBUG findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,935 DEBUG findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,935 DEBUG findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,935 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.335
2023-01-06 15:06:01,935 DEBUG findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.335
2023-01-06 15:06:01,935 DEBUG findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,935 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,935 DEBUG findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,935 DEBUG findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,935 DEBUG findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,935 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:01,935 DEBUG findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:01,935 DEBUG findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,935 DEBUG findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.24
2023-01-06 15:06:01,935 DEBUG findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,935 DEBUG findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,935 DEBUG findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,935 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:01,936 DEBUG findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,936 DEBUG findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,936 DEBUG findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,936 DEBUG findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,936 DEBUG findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.25
2023-01-06 15:06:01,936 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.535
2023-01-06 15:06:01,936 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,936 DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.24
2023-01-06 15:06:01,936 DEBUG findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,936 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.145
2023-01-06 15:06:01,936 DEBUG findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,936 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:01,936 DEBUG findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,936 DEBUG findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,936 DEBUG findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,936 DEBUG findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,937 DEBUG findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,937 DEBUG findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,937 DEBUG findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,937 DEBUG findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.335
2023-01-06 15:06:01,937 DEBUG findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,937 DEBUG findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,937 DEBUG findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,937 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.525
2023-01-06 15:06:01,937 DEBUG findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,937 DEBUG findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,937 DEBUG findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,937 DEBUG findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,937 DEBUG findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,937 DEBUG findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,937 DEBUG findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,937 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.62
2023-01-06 15:06:01,938 DEBUG findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,938 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.25
2023-01-06 15:06:01,938 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:01,938 DEBUG findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,938 DEBUG findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,938 DEBUG findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,938 DEBUG findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,938 DEBUG findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,938 DEBUG findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,938 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,938 DEBUG findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,938 DEBUG findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.24
2023-01-06 15:06:01,938 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,938 DEBUG findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,938 DEBUG findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,938 DEBUG findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,938 DEBUG findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,938 DEBUG findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,939 DEBUG findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,939 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,939 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 1.335
2023-01-06 15:06:01,939 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,939 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.535
2023-01-06 15:06:01,939 DEBUG findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:01,939 DEBUG findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,939 DEBUG findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,939 DEBUG findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,939 DEBUG findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,939 DEBUG findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,939 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.05
2023-01-06 15:06:01,939 DEBUG findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,939 DEBUG findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,939 DEBUG findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.24
2023-01-06 15:06:01,939 DEBUG findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,939 DEBUG findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,939 DEBUG findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,939 DEBUG findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,939 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.24
2023-01-06 15:06:01,939 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,939 DEBUG findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,940 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,940 DEBUG findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,940 DEBUG findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,940 DEBUG findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,940 DEBUG findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,940 DEBUG findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,940 DEBUG findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,940 DEBUG findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,940 DEBUG findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,940 DEBUG findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,940 DEBUG findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,940 DEBUG findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,940 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,940 DEBUG findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,940 DEBUG findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,940 DEBUG findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.62
2023-01-06 15:06:01,940 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,940 DEBUG findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 11.335
2023-01-06 15:06:01,940 DEBUG findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,940 DEBUG findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,940 DEBUG findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,940 DEBUG findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,941 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:01,941 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.05
2023-01-06 15:06:01,941 DEBUG findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,941 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,941 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:01,941 DEBUG findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,941 DEBUG findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,941 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.335
2023-01-06 15:06:01,941 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:01,941 DEBUG findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,941 DEBUG findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,941 DEBUG findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:01,941 DEBUG findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,941 DEBUG findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,941 DEBUG findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,941 DEBUG findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.335
2023-01-06 15:06:01,941 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,941 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,941 DEBUG findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,941 DEBUG findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,941 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:01,941 DEBUG findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,941 DEBUG findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,942 DEBUG findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,942 DEBUG findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,942 DEBUG findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,942 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 0.05
2023-01-06 15:06:01,942 DEBUG findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,942 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.05
2023-01-06 15:06:01,942 DEBUG findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,942 DEBUG findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,942 DEBUG findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 10.24
2023-01-06 15:06:01,942 DEBUG findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,942 DEBUG findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,942 DEBUG findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,942 DEBUG findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,942 DEBUG findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.24
2023-01-06 15:06:01,942 DEBUG findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,942 DEBUG findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,942 DEBUG findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,942 DEBUG findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.24
2023-01-06 15:06:01,942 DEBUG findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.24
2023-01-06 15:06:01,942 DEBUG findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,942 DEBUG findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.4775
2023-01-06 15:06:01,943 DEBUG findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,943 DEBUG findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,943 DEBUG findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,943 DEBUG findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,943 DEBUG findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,943 DEBUG findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,943 DEBUG findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,943 DEBUG findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,943 DEBUG findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,943 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 1.05
2023-01-06 15:06:01,943 DEBUG findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,944 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,944 DEBUG findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,944 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:01,944 DEBUG findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.24
2023-01-06 15:06:01,944 DEBUG findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,944 DEBUG findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,944 DEBUG findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,944 DEBUG findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:01,945 DEBUG findfont: Matching STIXNonUnicode:style=normal:variant=normal:weight=bold:stretch=normal:size=18.0 to STIXNonUnicode ('/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf') with score of 0.050000.
2023-01-06 15:06:01,945 DEBUG findfont: Matching STIXSizeOneSym:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0.
2023-01-06 15:06:01,945 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 0.33499999999999996
2023-01-06 15:06:01,945 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,945 DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,945 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:01,946 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,946 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,946 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,946 DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,946 DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,946 DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,946 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-06 15:06:01,946 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,946 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,946 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,946 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:01,946 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-06 15:06:01,946 DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,946 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,947 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,947 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 0.05
2023-01-06 15:06:01,947 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,947 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,947 DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,947 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-06 15:06:01,947 DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,947 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,947 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,947 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,947 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,947 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,947 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,947 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-06 15:06:01,947 DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,947 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,947 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:01,947 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,947 DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,947 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,948 DEBUG findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,948 DEBUG findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,948 DEBUG findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,948 DEBUG findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,948 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,948 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,948 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,948 DEBUG findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,948 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:01,948 DEBUG findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,948 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:01,948 DEBUG findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:01,948 DEBUG findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,948 DEBUG findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:01,948 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,948 DEBUG findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,948 DEBUG findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,949 DEBUG findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,949 DEBUG findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,949 DEBUG findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,949 DEBUG findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,949 DEBUG findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,949 DEBUG findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,949 DEBUG findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,949 DEBUG findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,949 DEBUG findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,949 DEBUG findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,949 DEBUG findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,949 DEBUG findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,949 DEBUG findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,949 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2023-01-06 15:06:01,949 DEBUG findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,949 DEBUG findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,949 DEBUG findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,949 DEBUG findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,949 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,949 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,950 DEBUG findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,950 DEBUG findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,950 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,950 DEBUG findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,950 DEBUG findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,950 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,950 DEBUG findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,950 DEBUG findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,950 DEBUG findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,950 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,950 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,950 DEBUG findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,950 DEBUG findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,950 DEBUG findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,950 DEBUG findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,950 DEBUG findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,950 DEBUG findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,950 DEBUG findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,950 DEBUG findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2023-01-06 15:06:01,951 DEBUG findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,951 DEBUG findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,951 DEBUG findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,951 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2023-01-06 15:06:01,951 DEBUG findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,951 DEBUG findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,951 DEBUG findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,951 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,951 DEBUG findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:01,951 DEBUG findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,951 DEBUG findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,951 DEBUG findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,951 DEBUG findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,951 DEBUG findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,951 DEBUG findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,951 DEBUG findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:01,951 DEBUG findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,951 DEBUG findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,951 DEBUG findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:01,951 DEBUG findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,952 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,952 DEBUG findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,952 DEBUG findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,952 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,952 DEBUG findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,952 DEBUG findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:01,952 DEBUG findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,952 DEBUG findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,952 DEBUG findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,952 DEBUG findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,952 DEBUG findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,952 DEBUG findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,952 DEBUG findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,952 DEBUG findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,952 DEBUG findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,952 DEBUG findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,952 DEBUG findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,952 DEBUG findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,952 DEBUG findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2023-01-06 15:06:01,952 DEBUG findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,953 DEBUG findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,953 DEBUG findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,953 DEBUG findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,953 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:01,953 DEBUG findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,953 DEBUG findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,953 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:01,953 DEBUG findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,953 DEBUG findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,953 DEBUG findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,953 DEBUG findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,953 DEBUG findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,953 DEBUG findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,953 DEBUG findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,953 DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,953 DEBUG findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,953 DEBUG findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,953 DEBUG findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,953 DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,953 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2023-01-06 15:06:01,953 DEBUG findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,954 DEBUG findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,954 DEBUG findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,954 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,954 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,954 DEBUG findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,954 DEBUG findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,954 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,954 DEBUG findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,954 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:01,954 DEBUG findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,954 DEBUG findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,954 DEBUG findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,954 DEBUG findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,954 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,954 DEBUG findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,954 DEBUG findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,954 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,954 DEBUG findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,954 DEBUG findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2023-01-06 15:06:01,954 DEBUG findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,954 DEBUG findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,954 DEBUG findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,955 DEBUG findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,955 DEBUG findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,955 DEBUG findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,955 DEBUG findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,955 DEBUG findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,955 DEBUG findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:01,955 DEBUG findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,955 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2023-01-06 15:06:01,955 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,955 DEBUG findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,955 DEBUG findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,955 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:01,955 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 0.05
2023-01-06 15:06:01,955 DEBUG findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,955 DEBUG findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,955 DEBUG findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,955 DEBUG findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2023-01-06 15:06:01,955 DEBUG findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,955 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,955 DEBUG findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,955 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,955 DEBUG findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,956 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,956 DEBUG findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,956 DEBUG findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,956 DEBUG findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,956 DEBUG findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,956 DEBUG findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,956 DEBUG findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,956 DEBUG findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,956 DEBUG findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2023-01-06 15:06:01,956 DEBUG findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,956 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2023-01-06 15:06:01,956 DEBUG findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2023-01-06 15:06:01,956 DEBUG findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,956 DEBUG findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,956 DEBUG findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,956 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,956 DEBUG findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2023-01-06 15:06:01,956 DEBUG findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,956 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,956 DEBUG findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,956 DEBUG findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,956 DEBUG findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,957 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,957 DEBUG findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,957 DEBUG findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,957 DEBUG findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:01,957 DEBUG findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,957 DEBUG findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,957 DEBUG findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,957 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,957 DEBUG findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,957 DEBUG findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,957 DEBUG findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,957 DEBUG findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,957 DEBUG findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2023-01-06 15:06:01,958 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2023-01-06 15:06:01,958 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,958 DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:01,958 DEBUG findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,958 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2023-01-06 15:06:01,958 DEBUG findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,958 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 0.33499999999999996
2023-01-06 15:06:01,958 DEBUG findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,958 DEBUG findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,958 DEBUG findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,958 DEBUG findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,958 DEBUG findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,958 DEBUG findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,958 DEBUG findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,958 DEBUG findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,958 DEBUG findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,958 DEBUG findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,958 DEBUG findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,958 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2023-01-06 15:06:01,958 DEBUG findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,959 DEBUG findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,959 DEBUG findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,959 DEBUG findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,959 DEBUG findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,959 DEBUG findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,959 DEBUG findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,959 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2023-01-06 15:06:01,959 DEBUG findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,959 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2023-01-06 15:06:01,959 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,959 DEBUG findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,959 DEBUG findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,959 DEBUG findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,959 DEBUG findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,959 DEBUG findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,959 DEBUG findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,959 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,959 DEBUG findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,959 DEBUG findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2023-01-06 15:06:01,959 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,960 DEBUG findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,960 DEBUG findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,960 DEBUG findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,960 DEBUG findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,960 DEBUG findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,960 DEBUG findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,960 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,960 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,960 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,960 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2023-01-06 15:06:01,960 DEBUG findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,960 DEBUG findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,960 DEBUG findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,960 DEBUG findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,960 DEBUG findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,960 DEBUG findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,960 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:01,961 DEBUG findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,961 DEBUG findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,961 DEBUG findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:01,962 DEBUG findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,962 DEBUG findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,962 DEBUG findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,962 DEBUG findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,962 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:01,962 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,962 DEBUG findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,962 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,962 DEBUG findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,962 DEBUG findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,962 DEBUG findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,962 DEBUG findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,962 DEBUG findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,962 DEBUG findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,962 DEBUG findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,962 DEBUG findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,962 DEBUG findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,963 DEBUG findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,963 DEBUG findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,963 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,963 DEBUG findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,963 DEBUG findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,963 DEBUG findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2023-01-06 15:06:01,963 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,963 DEBUG findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,963 DEBUG findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,963 DEBUG findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,963 DEBUG findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,963 DEBUG findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,963 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,963 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:01,963 DEBUG findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,963 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,963 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,963 DEBUG findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,963 DEBUG findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,963 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,964 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,964 DEBUG findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,964 DEBUG findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,964 DEBUG findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,964 DEBUG findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,964 DEBUG findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,964 DEBUG findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,964 DEBUG findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2023-01-06 15:06:01,964 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,964 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,964 DEBUG findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,964 DEBUG findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,964 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,964 DEBUG findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,964 DEBUG findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,964 DEBUG findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,964 DEBUG findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,964 DEBUG findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,964 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,964 DEBUG findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,965 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:01,965 DEBUG findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,965 DEBUG findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,965 DEBUG findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:01,965 DEBUG findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,965 DEBUG findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,965 DEBUG findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,965 DEBUG findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,965 DEBUG findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:01,965 DEBUG findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,965 DEBUG findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,965 DEBUG findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,965 DEBUG findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:01,965 DEBUG findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:01,965 DEBUG findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,965 DEBUG findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2023-01-06 15:06:01,965 DEBUG findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,965 DEBUG findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,965 DEBUG findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,965 DEBUG findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,965 DEBUG findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,965 DEBUG findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,966 DEBUG findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,966 DEBUG findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,966 DEBUG findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,966 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:01,966 DEBUG findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,966 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,966 DEBUG findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,966 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,966 DEBUG findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:01,966 DEBUG findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,966 DEBUG findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,966 DEBUG findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,966 DEBUG findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,966 DEBUG findfont: Matching STIXSizeOneSym:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0 to STIXSizeOneSym ('/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf') with score of 0.050000.
2023-01-06 15:06:01,967 DEBUG findfont: Matching STIXSizeTwoSym:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0.
2023-01-06 15:06:01,967 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,967 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,967 DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,967 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:01,967 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,967 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,967 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,967 DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,967 DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,967 DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,967 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-06 15:06:01,967 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,967 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,967 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,968 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:01,968 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-06 15:06:01,968 DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,968 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,968 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 0.05
2023-01-06 15:06:01,968 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,968 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,968 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,968 DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,968 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-06 15:06:01,968 DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,968 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,968 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,968 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,968 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,968 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 0.33499999999999996
2023-01-06 15:06:01,968 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,968 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-06 15:06:01,968 DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,968 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,968 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:01,969 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,969 DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,969 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,969 DEBUG findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,969 DEBUG findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,969 DEBUG findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,969 DEBUG findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,969 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,969 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,969 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,969 DEBUG findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,969 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:01,969 DEBUG findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,969 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:01,969 DEBUG findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:01,969 DEBUG findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,969 DEBUG findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:01,969 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,969 DEBUG findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,970 DEBUG findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,970 DEBUG findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,970 DEBUG findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,970 DEBUG findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,970 DEBUG findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,970 DEBUG findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,970 DEBUG findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,970 DEBUG findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,970 DEBUG findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,970 DEBUG findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,970 DEBUG findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,970 DEBUG findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,970 DEBUG findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,970 DEBUG findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,970 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2023-01-06 15:06:01,970 DEBUG findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,971 DEBUG findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,971 DEBUG findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,971 DEBUG findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,971 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,971 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,971 DEBUG findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,971 DEBUG findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,971 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,971 DEBUG findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,971 DEBUG findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,971 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,971 DEBUG findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,971 DEBUG findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,971 DEBUG findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,971 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,971 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,971 DEBUG findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,971 DEBUG findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,972 DEBUG findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,972 DEBUG findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,972 DEBUG findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,972 DEBUG findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,972 DEBUG findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,972 DEBUG findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2023-01-06 15:06:01,972 DEBUG findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,972 DEBUG findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,972 DEBUG findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,972 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2023-01-06 15:06:01,972 DEBUG findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,972 DEBUG findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,972 DEBUG findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,972 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,972 DEBUG findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:01,972 DEBUG findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,972 DEBUG findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,972 DEBUG findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,972 DEBUG findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,972 DEBUG findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,972 DEBUG findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,973 DEBUG findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:01,973 DEBUG findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,973 DEBUG findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,973 DEBUG findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:01,973 DEBUG findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,973 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,973 DEBUG findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,973 DEBUG findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,973 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,973 DEBUG findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,973 DEBUG findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:01,973 DEBUG findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,973 DEBUG findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,973 DEBUG findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,973 DEBUG findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,973 DEBUG findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,973 DEBUG findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,973 DEBUG findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,973 DEBUG findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,974 DEBUG findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,974 DEBUG findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,974 DEBUG findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,974 DEBUG findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,974 DEBUG findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2023-01-06 15:06:01,974 DEBUG findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,974 DEBUG findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,974 DEBUG findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,974 DEBUG findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,974 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:01,974 DEBUG findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,974 DEBUG findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,974 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:01,974 DEBUG findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,974 DEBUG findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,974 DEBUG findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,974 DEBUG findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,974 DEBUG findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,974 DEBUG findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,975 DEBUG findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,975 DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,975 DEBUG findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,975 DEBUG findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,975 DEBUG findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,975 DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,975 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2023-01-06 15:06:01,975 DEBUG findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,975 DEBUG findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,975 DEBUG findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,975 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,975 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,975 DEBUG findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,975 DEBUG findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,975 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,975 DEBUG findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,975 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:01,975 DEBUG findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,976 DEBUG findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,976 DEBUG findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,976 DEBUG findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,976 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,976 DEBUG findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,976 DEBUG findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,976 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,976 DEBUG findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,976 DEBUG findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2023-01-06 15:06:01,976 DEBUG findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,976 DEBUG findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,976 DEBUG findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,976 DEBUG findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,976 DEBUG findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,976 DEBUG findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,976 DEBUG findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,976 DEBUG findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,976 DEBUG findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:01,977 DEBUG findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,977 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2023-01-06 15:06:01,977 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,977 DEBUG findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,977 DEBUG findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,977 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:01,977 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,977 DEBUG findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,977 DEBUG findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,977 DEBUG findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,977 DEBUG findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2023-01-06 15:06:01,977 DEBUG findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,977 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,977 DEBUG findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,977 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,977 DEBUG findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,977 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,977 DEBUG findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,977 DEBUG findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,977 DEBUG findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,978 DEBUG findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,978 DEBUG findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,978 DEBUG findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,978 DEBUG findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,978 DEBUG findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2023-01-06 15:06:01,978 DEBUG findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,978 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2023-01-06 15:06:01,978 DEBUG findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2023-01-06 15:06:01,978 DEBUG findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,978 DEBUG findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,978 DEBUG findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,978 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,978 DEBUG findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2023-01-06 15:06:01,978 DEBUG findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,978 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,978 DEBUG findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,978 DEBUG findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,979 DEBUG findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,979 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,979 DEBUG findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,979 DEBUG findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,979 DEBUG findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:01,979 DEBUG findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,979 DEBUG findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,979 DEBUG findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,979 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,979 DEBUG findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,979 DEBUG findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,979 DEBUG findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,979 DEBUG findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,979 DEBUG findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2023-01-06 15:06:01,979 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2023-01-06 15:06:01,979 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,979 DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:01,980 DEBUG findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,980 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2023-01-06 15:06:01,980 DEBUG findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,980 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,980 DEBUG findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,980 DEBUG findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,980 DEBUG findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,980 DEBUG findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,980 DEBUG findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,980 DEBUG findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,980 DEBUG findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,980 DEBUG findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,980 DEBUG findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,980 DEBUG findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,980 DEBUG findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,980 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2023-01-06 15:06:01,980 DEBUG findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,980 DEBUG findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,980 DEBUG findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,980 DEBUG findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,981 DEBUG findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,981 DEBUG findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,981 DEBUG findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,981 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2023-01-06 15:06:01,981 DEBUG findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,981 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2023-01-06 15:06:01,981 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,981 DEBUG findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,981 DEBUG findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,981 DEBUG findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,981 DEBUG findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,981 DEBUG findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,981 DEBUG findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,981 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,981 DEBUG findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,981 DEBUG findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2023-01-06 15:06:01,981 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,981 DEBUG findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,981 DEBUG findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,981 DEBUG findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,981 DEBUG findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,981 DEBUG findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,982 DEBUG findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,982 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 0.05
2023-01-06 15:06:01,982 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,982 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,982 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2023-01-06 15:06:01,982 DEBUG findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,982 DEBUG findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,982 DEBUG findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,982 DEBUG findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,982 DEBUG findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,982 DEBUG findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,982 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:01,982 DEBUG findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,982 DEBUG findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,982 DEBUG findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:01,982 DEBUG findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,982 DEBUG findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,983 DEBUG findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,983 DEBUG findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,983 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:01,983 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,983 DEBUG findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,983 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,983 DEBUG findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,983 DEBUG findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,983 DEBUG findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,983 DEBUG findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,983 DEBUG findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,983 DEBUG findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,983 DEBUG findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,983 DEBUG findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,983 DEBUG findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,983 DEBUG findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,983 DEBUG findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,983 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,983 DEBUG findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,983 DEBUG findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,983 DEBUG findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2023-01-06 15:06:01,984 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,984 DEBUG findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,984 DEBUG findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,984 DEBUG findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,984 DEBUG findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,984 DEBUG findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,984 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,984 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:01,984 DEBUG findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,984 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,984 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,984 DEBUG findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,984 DEBUG findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,984 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,984 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,984 DEBUG findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,984 DEBUG findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,984 DEBUG findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,984 DEBUG findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,985 DEBUG findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,985 DEBUG findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,985 DEBUG findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2023-01-06 15:06:01,985 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,985 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,985 DEBUG findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,985 DEBUG findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,985 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 0.33499999999999996
2023-01-06 15:06:01,985 DEBUG findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,985 DEBUG findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,985 DEBUG findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,985 DEBUG findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,985 DEBUG findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,985 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,985 DEBUG findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,985 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:01,985 DEBUG findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,985 DEBUG findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,985 DEBUG findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:01,986 DEBUG findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,986 DEBUG findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,986 DEBUG findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,986 DEBUG findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,986 DEBUG findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:01,986 DEBUG findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,986 DEBUG findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,986 DEBUG findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,986 DEBUG findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:01,986 DEBUG findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:01,986 DEBUG findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,986 DEBUG findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2023-01-06 15:06:01,986 DEBUG findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,986 DEBUG findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,986 DEBUG findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,986 DEBUG findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,986 DEBUG findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,986 DEBUG findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,986 DEBUG findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,987 DEBUG findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,987 DEBUG findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,987 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:01,987 DEBUG findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,987 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,987 DEBUG findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,987 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,987 DEBUG findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:01,987 DEBUG findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,987 DEBUG findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,987 DEBUG findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,987 DEBUG findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,987 DEBUG findfont: Matching STIXSizeTwoSym:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0 to STIXSizeTwoSym ('/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf') with score of 0.050000.
2023-01-06 15:06:01,988 DEBUG findfont: Matching STIXSizeThreeSym:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0.
2023-01-06 15:06:01,988 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,988 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,988 DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,988 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:01,988 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,988 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,988 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 0.33499999999999996
2023-01-06 15:06:01,988 DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,988 DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,988 DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,988 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-06 15:06:01,988 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,988 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,988 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,988 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:01,988 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-06 15:06:01,988 DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,989 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,989 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,989 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,989 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,989 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,989 DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,989 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-06 15:06:01,989 DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,989 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,989 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,989 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,989 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 0.05
2023-01-06 15:06:01,989 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,989 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,989 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-06 15:06:01,989 DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,989 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,989 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:01,989 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,989 DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,989 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,990 DEBUG findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,990 DEBUG findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,990 DEBUG findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,990 DEBUG findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,990 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,990 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,990 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,990 DEBUG findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,990 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:01,990 DEBUG findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,990 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:01,990 DEBUG findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:01,990 DEBUG findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,990 DEBUG findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:01,990 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,990 DEBUG findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,990 DEBUG findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,990 DEBUG findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,990 DEBUG findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,990 DEBUG findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,990 DEBUG findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,991 DEBUG findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,991 DEBUG findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,991 DEBUG findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,991 DEBUG findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,991 DEBUG findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,991 DEBUG findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,991 DEBUG findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,991 DEBUG findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,991 DEBUG findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,991 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2023-01-06 15:06:01,991 DEBUG findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,991 DEBUG findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,991 DEBUG findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,991 DEBUG findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,991 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,991 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,991 DEBUG findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,991 DEBUG findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,991 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,991 DEBUG findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,992 DEBUG findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,992 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,992 DEBUG findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,992 DEBUG findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,992 DEBUG findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,992 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,992 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,992 DEBUG findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,992 DEBUG findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,992 DEBUG findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,992 DEBUG findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,992 DEBUG findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,992 DEBUG findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,992 DEBUG findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,992 DEBUG findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2023-01-06 15:06:01,992 DEBUG findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,992 DEBUG findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,992 DEBUG findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,992 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2023-01-06 15:06:01,992 DEBUG findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,993 DEBUG findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,993 DEBUG findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,993 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,993 DEBUG findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:01,993 DEBUG findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,993 DEBUG findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,993 DEBUG findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,993 DEBUG findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,993 DEBUG findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,993 DEBUG findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,993 DEBUG findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:01,993 DEBUG findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,993 DEBUG findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,993 DEBUG findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:01,993 DEBUG findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,993 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,993 DEBUG findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,993 DEBUG findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,993 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,993 DEBUG findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,994 DEBUG findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:01,994 DEBUG findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,994 DEBUG findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,994 DEBUG findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,994 DEBUG findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,994 DEBUG findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,994 DEBUG findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,994 DEBUG findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,994 DEBUG findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,994 DEBUG findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,994 DEBUG findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,994 DEBUG findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,994 DEBUG findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,994 DEBUG findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2023-01-06 15:06:01,994 DEBUG findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,994 DEBUG findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,994 DEBUG findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,994 DEBUG findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,994 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:01,994 DEBUG findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,994 DEBUG findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,995 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:01,995 DEBUG findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,995 DEBUG findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,995 DEBUG findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,995 DEBUG findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,995 DEBUG findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,995 DEBUG findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,995 DEBUG findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,995 DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,995 DEBUG findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,995 DEBUG findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,995 DEBUG findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,995 DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,995 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2023-01-06 15:06:01,995 DEBUG findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,995 DEBUG findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,995 DEBUG findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,995 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,995 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,995 DEBUG findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,995 DEBUG findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,996 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,996 DEBUG findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,996 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:01,996 DEBUG findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,996 DEBUG findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,996 DEBUG findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,996 DEBUG findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,996 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,996 DEBUG findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,996 DEBUG findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,996 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,996 DEBUG findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,996 DEBUG findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2023-01-06 15:06:01,996 DEBUG findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,996 DEBUG findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,996 DEBUG findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,996 DEBUG findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,996 DEBUG findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,996 DEBUG findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,996 DEBUG findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,996 DEBUG findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,997 DEBUG findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:01,997 DEBUG findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,997 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2023-01-06 15:06:01,997 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,997 DEBUG findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,997 DEBUG findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,997 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:01,997 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,997 DEBUG findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,997 DEBUG findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,997 DEBUG findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,997 DEBUG findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2023-01-06 15:06:01,997 DEBUG findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,997 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,998 DEBUG findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,998 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,998 DEBUG findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,998 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,998 DEBUG findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,998 DEBUG findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,998 DEBUG findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,998 DEBUG findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,998 DEBUG findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,999 DEBUG findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:01,999 DEBUG findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,999 DEBUG findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2023-01-06 15:06:01,999 DEBUG findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:01,999 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2023-01-06 15:06:01,999 DEBUG findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2023-01-06 15:06:01,999 DEBUG findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,999 DEBUG findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,999 DEBUG findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:01,999 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,000 DEBUG findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2023-01-06 15:06:02,000 DEBUG findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,000 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 0.05
2023-01-06 15:06:02,000 DEBUG findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,000 DEBUG findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,000 DEBUG findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,000 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,000 DEBUG findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,000 DEBUG findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,000 DEBUG findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,000 DEBUG findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,000 DEBUG findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,001 DEBUG findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,001 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,001 DEBUG findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,001 DEBUG findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,001 DEBUG findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,001 DEBUG findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,001 DEBUG findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2023-01-06 15:06:02,001 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2023-01-06 15:06:02,001 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,001 DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,001 DEBUG findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,001 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2023-01-06 15:06:02,001 DEBUG findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,001 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,001 DEBUG findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,002 DEBUG findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,002 DEBUG findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,002 DEBUG findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,002 DEBUG findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,002 DEBUG findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,002 DEBUG findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,002 DEBUG findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,002 DEBUG findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,003 DEBUG findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,003 DEBUG findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,003 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2023-01-06 15:06:02,003 DEBUG findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,003 DEBUG findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,003 DEBUG findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,003 DEBUG findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,003 DEBUG findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,003 DEBUG findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,003 DEBUG findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,003 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2023-01-06 15:06:02,003 DEBUG findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,003 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2023-01-06 15:06:02,004 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,004 DEBUG findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,004 DEBUG findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,004 DEBUG findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,004 DEBUG findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,004 DEBUG findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,004 DEBUG findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,004 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,004 DEBUG findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,004 DEBUG findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,004 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,004 DEBUG findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,004 DEBUG findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,004 DEBUG findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,004 DEBUG findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,005 DEBUG findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,005 DEBUG findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,005 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,005 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,005 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,005 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2023-01-06 15:06:02,005 DEBUG findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,005 DEBUG findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,005 DEBUG findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,005 DEBUG findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,005 DEBUG findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,005 DEBUG findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,005 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,005 DEBUG findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,005 DEBUG findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,005 DEBUG findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,005 DEBUG findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,005 DEBUG findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,005 DEBUG findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,005 DEBUG findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,005 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,005 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,006 DEBUG findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,006 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,006 DEBUG findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,006 DEBUG findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,006 DEBUG findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,006 DEBUG findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,006 DEBUG findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,006 DEBUG findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,006 DEBUG findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,006 DEBUG findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,006 DEBUG findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,006 DEBUG findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,006 DEBUG findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,006 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,006 DEBUG findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,006 DEBUG findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,006 DEBUG findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2023-01-06 15:06:02,006 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,006 DEBUG findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,006 DEBUG findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,006 DEBUG findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,006 DEBUG findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,007 DEBUG findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,007 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,007 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,007 DEBUG findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,007 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,007 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,007 DEBUG findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,007 DEBUG findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,007 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,007 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 0.33499999999999996
2023-01-06 15:06:02,007 DEBUG findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,007 DEBUG findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,007 DEBUG findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,007 DEBUG findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,007 DEBUG findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,007 DEBUG findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,007 DEBUG findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2023-01-06 15:06:02,007 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,007 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,007 DEBUG findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,008 DEBUG findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,008 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,008 DEBUG findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,008 DEBUG findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,008 DEBUG findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,008 DEBUG findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,008 DEBUG findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,008 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,008 DEBUG findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,008 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,008 DEBUG findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,008 DEBUG findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,008 DEBUG findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,008 DEBUG findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,008 DEBUG findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,008 DEBUG findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,008 DEBUG findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,008 DEBUG findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,008 DEBUG findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,008 DEBUG findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,008 DEBUG findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,008 DEBUG findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,009 DEBUG findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,009 DEBUG findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,009 DEBUG findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2023-01-06 15:06:02,009 DEBUG findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,009 DEBUG findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,009 DEBUG findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,009 DEBUG findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,009 DEBUG findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,009 DEBUG findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,009 DEBUG findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,009 DEBUG findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,009 DEBUG findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,009 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,009 DEBUG findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,009 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,009 DEBUG findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,009 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,009 DEBUG findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,009 DEBUG findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,009 DEBUG findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,010 DEBUG findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,010 DEBUG findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,010 DEBUG findfont: Matching STIXSizeThreeSym:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0 to STIXSizeThreeSym ('/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf') with score of 0.050000.
2023-01-06 15:06:02,010 DEBUG findfont: Matching STIXSizeFourSym:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0.
2023-01-06 15:06:02,010 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,010 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,010 DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,011 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,011 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,011 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,011 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,011 DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,011 DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,011 DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,011 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-06 15:06:02,011 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 0.05
2023-01-06 15:06:02,011 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,011 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,011 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,011 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-06 15:06:02,012 DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,012 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,012 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,012 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,012 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,012 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,012 DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,012 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-06 15:06:02,012 DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,012 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,012 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,012 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,012 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,012 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,012 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 0.33499999999999996
2023-01-06 15:06:02,012 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-06 15:06:02,012 DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,012 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,012 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,012 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,012 DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,012 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,013 DEBUG findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,013 DEBUG findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,013 DEBUG findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,013 DEBUG findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,013 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,013 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,013 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 0.33499999999999996
2023-01-06 15:06:02,013 DEBUG findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,013 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,013 DEBUG findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,013 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,013 DEBUG findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,013 DEBUG findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,013 DEBUG findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,013 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,013 DEBUG findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,013 DEBUG findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,013 DEBUG findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,013 DEBUG findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,013 DEBUG findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,013 DEBUG findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,014 DEBUG findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,014 DEBUG findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,014 DEBUG findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,014 DEBUG findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,014 DEBUG findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,014 DEBUG findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,014 DEBUG findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,014 DEBUG findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,014 DEBUG findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,014 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2023-01-06 15:06:02,014 DEBUG findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,014 DEBUG findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,014 DEBUG findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,014 DEBUG findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,014 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,014 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,014 DEBUG findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,014 DEBUG findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,014 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,015 DEBUG findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,015 DEBUG findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,015 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,015 DEBUG findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,015 DEBUG findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,015 DEBUG findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,015 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,015 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,015 DEBUG findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,015 DEBUG findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,015 DEBUG findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,015 DEBUG findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,015 DEBUG findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,015 DEBUG findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,015 DEBUG findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,015 DEBUG findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2023-01-06 15:06:02,015 DEBUG findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,016 DEBUG findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,016 DEBUG findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,016 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2023-01-06 15:06:02,016 DEBUG findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,016 DEBUG findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,016 DEBUG findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,016 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 0.05
2023-01-06 15:06:02,016 DEBUG findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:02,016 DEBUG findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,016 DEBUG findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,016 DEBUG findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,016 DEBUG findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,016 DEBUG findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,016 DEBUG findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,016 DEBUG findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:02,016 DEBUG findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,016 DEBUG findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,016 DEBUG findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,016 DEBUG findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,016 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,016 DEBUG findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,016 DEBUG findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,017 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,017 DEBUG findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,017 DEBUG findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:02,017 DEBUG findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,017 DEBUG findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,017 DEBUG findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,017 DEBUG findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,017 DEBUG findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,017 DEBUG findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,017 DEBUG findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,017 DEBUG findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,017 DEBUG findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,017 DEBUG findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,017 DEBUG findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,017 DEBUG findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,017 DEBUG findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,017 DEBUG findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,017 DEBUG findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,017 DEBUG findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,017 DEBUG findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,017 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:02,018 DEBUG findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,018 DEBUG findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,018 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,018 DEBUG findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,018 DEBUG findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,018 DEBUG findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,018 DEBUG findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,018 DEBUG findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,018 DEBUG findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,018 DEBUG findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,018 DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,018 DEBUG findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,018 DEBUG findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,018 DEBUG findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,018 DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,018 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2023-01-06 15:06:02,018 DEBUG findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,018 DEBUG findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,018 DEBUG findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,018 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,018 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,018 DEBUG findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,019 DEBUG findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,019 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,019 DEBUG findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,019 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:02,019 DEBUG findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,019 DEBUG findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,019 DEBUG findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,019 DEBUG findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,019 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,019 DEBUG findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,019 DEBUG findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,019 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,019 DEBUG findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,019 DEBUG findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2023-01-06 15:06:02,019 DEBUG findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,019 DEBUG findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,019 DEBUG findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,019 DEBUG findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,019 DEBUG findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,020 DEBUG findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,020 DEBUG findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,020 DEBUG findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,020 DEBUG findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:02,020 DEBUG findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,020 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2023-01-06 15:06:02,020 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,020 DEBUG findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,020 DEBUG findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,020 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,020 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,020 DEBUG findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,020 DEBUG findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,020 DEBUG findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,020 DEBUG findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2023-01-06 15:06:02,020 DEBUG findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,020 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,020 DEBUG findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,020 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,020 DEBUG findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,020 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,020 DEBUG findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,021 DEBUG findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,021 DEBUG findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,021 DEBUG findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,021 DEBUG findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,021 DEBUG findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,021 DEBUG findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,021 DEBUG findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,021 DEBUG findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,021 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2023-01-06 15:06:02,021 DEBUG findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2023-01-06 15:06:02,021 DEBUG findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,021 DEBUG findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,021 DEBUG findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,021 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,021 DEBUG findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2023-01-06 15:06:02,021 DEBUG findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,021 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,021 DEBUG findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,021 DEBUG findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,021 DEBUG findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,021 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,021 DEBUG findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,022 DEBUG findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,022 DEBUG findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,022 DEBUG findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,022 DEBUG findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,022 DEBUG findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,022 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,022 DEBUG findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,022 DEBUG findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,022 DEBUG findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,022 DEBUG findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,022 DEBUG findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2023-01-06 15:06:02,022 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2023-01-06 15:06:02,022 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,022 DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,022 DEBUG findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,022 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2023-01-06 15:06:02,022 DEBUG findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,022 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,022 DEBUG findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,022 DEBUG findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,022 DEBUG findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,022 DEBUG findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,023 DEBUG findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,023 DEBUG findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,023 DEBUG findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,023 DEBUG findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,023 DEBUG findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,023 DEBUG findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,023 DEBUG findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,023 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2023-01-06 15:06:02,023 DEBUG findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,023 DEBUG findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,023 DEBUG findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,023 DEBUG findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,023 DEBUG findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,023 DEBUG findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,023 DEBUG findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,023 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2023-01-06 15:06:02,023 DEBUG findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,023 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2023-01-06 15:06:02,023 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,023 DEBUG findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,023 DEBUG findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,023 DEBUG findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,023 DEBUG findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,024 DEBUG findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,024 DEBUG findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,024 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,024 DEBUG findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,024 DEBUG findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,024 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,024 DEBUG findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,024 DEBUG findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,024 DEBUG findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,024 DEBUG findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,024 DEBUG findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,024 DEBUG findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,024 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,024 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,024 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,024 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2023-01-06 15:06:02,024 DEBUG findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,024 DEBUG findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,024 DEBUG findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,024 DEBUG findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,024 DEBUG findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,024 DEBUG findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,025 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,025 DEBUG findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,025 DEBUG findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,025 DEBUG findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,025 DEBUG findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,025 DEBUG findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,025 DEBUG findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,025 DEBUG findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,025 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,025 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,025 DEBUG findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,025 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,025 DEBUG findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,025 DEBUG findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,025 DEBUG findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,025 DEBUG findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,025 DEBUG findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,025 DEBUG findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,025 DEBUG findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,026 DEBUG findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,026 DEBUG findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,026 DEBUG findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,026 DEBUG findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,026 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,026 DEBUG findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,026 DEBUG findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,026 DEBUG findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2023-01-06 15:06:02,026 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,026 DEBUG findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,026 DEBUG findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,026 DEBUG findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,026 DEBUG findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,026 DEBUG findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,026 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,026 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,026 DEBUG findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,026 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,027 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,027 DEBUG findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,027 DEBUG findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,027 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,027 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,027 DEBUG findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,027 DEBUG findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,027 DEBUG findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,027 DEBUG findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,027 DEBUG findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,027 DEBUG findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,027 DEBUG findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2023-01-06 15:06:02,027 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,027 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,027 DEBUG findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,027 DEBUG findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,027 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,028 DEBUG findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,028 DEBUG findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,028 DEBUG findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,028 DEBUG findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,028 DEBUG findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,028 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,028 DEBUG findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,028 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,028 DEBUG findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,028 DEBUG findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,028 DEBUG findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,028 DEBUG findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,028 DEBUG findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,028 DEBUG findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,028 DEBUG findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,028 DEBUG findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,028 DEBUG findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,028 DEBUG findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,029 DEBUG findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,029 DEBUG findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,029 DEBUG findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,029 DEBUG findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,029 DEBUG findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2023-01-06 15:06:02,029 DEBUG findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,029 DEBUG findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,029 DEBUG findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,029 DEBUG findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,029 DEBUG findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,029 DEBUG findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,029 DEBUG findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,029 DEBUG findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,029 DEBUG findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,029 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,029 DEBUG findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,029 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,029 DEBUG findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,029 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,029 DEBUG findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,030 DEBUG findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,030 DEBUG findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,030 DEBUG findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,030 DEBUG findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,030 DEBUG findfont: Matching STIXSizeFourSym:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0 to STIXSizeFourSym ('/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf') with score of 0.050000.
2023-01-06 15:06:02,030 DEBUG findfont: Matching STIXSizeFiveSym:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0.
2023-01-06 15:06:02,030 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,030 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,031 DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,031 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,031 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,031 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,031 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,031 DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,031 DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,031 DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,031 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-06 15:06:02,031 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,031 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,031 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,031 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,031 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-06 15:06:02,031 DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,031 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,031 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,032 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,032 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,032 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,032 DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,032 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-06 15:06:02,032 DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,032 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 0.05
2023-01-06 15:06:02,032 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,032 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,032 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,032 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,032 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,032 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-06 15:06:02,032 DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,032 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,032 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,032 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,032 DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,033 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,033 DEBUG findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,033 DEBUG findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,033 DEBUG findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,033 DEBUG findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,033 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,033 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,033 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,033 DEBUG findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,033 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,033 DEBUG findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,033 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,033 DEBUG findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,033 DEBUG findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,033 DEBUG findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,033 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,033 DEBUG findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,034 DEBUG findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,034 DEBUG findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,034 DEBUG findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,034 DEBUG findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,034 DEBUG findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,034 DEBUG findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,034 DEBUG findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,034 DEBUG findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,034 DEBUG findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,034 DEBUG findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,034 DEBUG findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,034 DEBUG findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,034 DEBUG findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,034 DEBUG findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,034 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2023-01-06 15:06:02,034 DEBUG findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,034 DEBUG findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,034 DEBUG findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,034 DEBUG findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,034 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,035 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,035 DEBUG findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,035 DEBUG findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,035 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,035 DEBUG findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,035 DEBUG findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,035 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,035 DEBUG findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,035 DEBUG findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,035 DEBUG findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,035 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,035 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,035 DEBUG findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,035 DEBUG findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,035 DEBUG findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,035 DEBUG findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,035 DEBUG findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,035 DEBUG findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,035 DEBUG findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,035 DEBUG findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2023-01-06 15:06:02,036 DEBUG findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,036 DEBUG findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,036 DEBUG findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,036 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2023-01-06 15:06:02,036 DEBUG findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,036 DEBUG findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,036 DEBUG findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,036 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,036 DEBUG findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:02,036 DEBUG findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,036 DEBUG findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,036 DEBUG findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,036 DEBUG findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,036 DEBUG findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,036 DEBUG findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,036 DEBUG findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:02,036 DEBUG findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,036 DEBUG findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,037 DEBUG findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,037 DEBUG findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,037 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,037 DEBUG findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,037 DEBUG findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,037 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,037 DEBUG findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,037 DEBUG findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:02,037 DEBUG findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,037 DEBUG findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,037 DEBUG findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,037 DEBUG findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,037 DEBUG findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,037 DEBUG findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,037 DEBUG findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,037 DEBUG findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,037 DEBUG findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,037 DEBUG findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,038 DEBUG findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,038 DEBUG findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,038 DEBUG findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,038 DEBUG findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,038 DEBUG findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,038 DEBUG findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,038 DEBUG findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,038 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:02,038 DEBUG findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,038 DEBUG findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,038 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,038 DEBUG findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,038 DEBUG findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,038 DEBUG findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,038 DEBUG findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,038 DEBUG findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,039 DEBUG findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,039 DEBUG findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,039 DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,039 DEBUG findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,039 DEBUG findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,039 DEBUG findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,039 DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,039 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2023-01-06 15:06:02,039 DEBUG findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,039 DEBUG findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,039 DEBUG findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,039 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,039 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,039 DEBUG findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,039 DEBUG findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,039 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,039 DEBUG findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,040 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:02,040 DEBUG findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,040 DEBUG findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,040 DEBUG findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,040 DEBUG findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,040 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,040 DEBUG findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,040 DEBUG findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,040 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,040 DEBUG findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,040 DEBUG findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2023-01-06 15:06:02,040 DEBUG findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,040 DEBUG findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,040 DEBUG findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,040 DEBUG findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,040 DEBUG findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,040 DEBUG findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,040 DEBUG findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,041 DEBUG findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,041 DEBUG findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:02,041 DEBUG findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,041 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2023-01-06 15:06:02,041 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,041 DEBUG findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,041 DEBUG findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,041 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,041 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,041 DEBUG findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,041 DEBUG findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,041 DEBUG findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,041 DEBUG findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2023-01-06 15:06:02,041 DEBUG findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,041 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,041 DEBUG findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,041 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,041 DEBUG findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,041 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,041 DEBUG findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,042 DEBUG findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,042 DEBUG findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,042 DEBUG findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,042 DEBUG findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,042 DEBUG findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,042 DEBUG findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,042 DEBUG findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,042 DEBUG findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,042 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2023-01-06 15:06:02,042 DEBUG findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2023-01-06 15:06:02,042 DEBUG findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,042 DEBUG findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,042 DEBUG findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,042 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,042 DEBUG findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2023-01-06 15:06:02,042 DEBUG findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,042 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,042 DEBUG findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,042 DEBUG findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,042 DEBUG findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,042 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,043 DEBUG findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,043 DEBUG findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,043 DEBUG findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,043 DEBUG findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,043 DEBUG findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,043 DEBUG findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,043 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,043 DEBUG findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,043 DEBUG findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,043 DEBUG findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,043 DEBUG findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,043 DEBUG findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2023-01-06 15:06:02,043 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2023-01-06 15:06:02,043 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,043 DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,043 DEBUG findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,043 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2023-01-06 15:06:02,043 DEBUG findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,043 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,043 DEBUG findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,043 DEBUG findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,043 DEBUG findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,043 DEBUG findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,044 DEBUG findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,044 DEBUG findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,044 DEBUG findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,044 DEBUG findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,044 DEBUG findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,044 DEBUG findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,044 DEBUG findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,044 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2023-01-06 15:06:02,044 DEBUG findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,044 DEBUG findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,044 DEBUG findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,044 DEBUG findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,044 DEBUG findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,044 DEBUG findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,044 DEBUG findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,044 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2023-01-06 15:06:02,044 DEBUG findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,044 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2023-01-06 15:06:02,044 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,044 DEBUG findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,044 DEBUG findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,044 DEBUG findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,045 DEBUG findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,045 DEBUG findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,045 DEBUG findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,045 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,045 DEBUG findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,045 DEBUG findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,045 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,045 DEBUG findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,045 DEBUG findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,045 DEBUG findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,045 DEBUG findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,045 DEBUG findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,045 DEBUG findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,045 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,045 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,045 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,045 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2023-01-06 15:06:02,045 DEBUG findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,045 DEBUG findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,045 DEBUG findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,045 DEBUG findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,045 DEBUG findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,045 DEBUG findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,046 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,046 DEBUG findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,046 DEBUG findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,046 DEBUG findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,046 DEBUG findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,046 DEBUG findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,046 DEBUG findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,046 DEBUG findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,046 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,046 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,046 DEBUG findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,046 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 0.05
2023-01-06 15:06:02,046 DEBUG findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,046 DEBUG findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,046 DEBUG findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,046 DEBUG findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,046 DEBUG findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,046 DEBUG findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,046 DEBUG findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,046 DEBUG findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,046 DEBUG findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,047 DEBUG findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,047 DEBUG findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,047 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,047 DEBUG findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,047 DEBUG findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,047 DEBUG findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2023-01-06 15:06:02,047 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,047 DEBUG findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,047 DEBUG findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,047 DEBUG findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,047 DEBUG findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,047 DEBUG findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,047 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,047 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,047 DEBUG findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,047 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,047 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,047 DEBUG findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,047 DEBUG findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,047 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,047 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,048 DEBUG findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,048 DEBUG findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,048 DEBUG findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,048 DEBUG findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,048 DEBUG findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,048 DEBUG findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,048 DEBUG findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2023-01-06 15:06:02,048 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,048 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,048 DEBUG findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,048 DEBUG findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,048 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,048 DEBUG findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,048 DEBUG findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,048 DEBUG findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,048 DEBUG findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,048 DEBUG findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,048 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,048 DEBUG findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,048 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,048 DEBUG findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,049 DEBUG findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,049 DEBUG findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,049 DEBUG findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,049 DEBUG findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,049 DEBUG findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,049 DEBUG findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,049 DEBUG findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,049 DEBUG findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,049 DEBUG findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,049 DEBUG findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,049 DEBUG findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,049 DEBUG findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,049 DEBUG findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,049 DEBUG findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2023-01-06 15:06:02,049 DEBUG findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,049 DEBUG findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,049 DEBUG findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,049 DEBUG findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,049 DEBUG findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,049 DEBUG findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,050 DEBUG findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,050 DEBUG findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,050 DEBUG findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,050 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,050 DEBUG findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,050 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,050 DEBUG findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,050 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,050 DEBUG findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,050 DEBUG findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,050 DEBUG findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,050 DEBUG findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,050 DEBUG findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,050 DEBUG findfont: Matching STIXSizeFiveSym:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0 to STIXSizeFiveSym ('/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf') with score of 0.050000.
2023-01-06 15:06:02,052 DEBUG findfont: Matching cmsy10:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0.
2023-01-06 15:06:02,053 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,053 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,053 DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,053 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,053 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,053 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,053 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,053 DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,053 DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,053 DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 0.05
2023-01-06 15:06:02,053 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-06 15:06:02,053 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,053 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,053 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,053 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,053 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-06 15:06:02,053 DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,053 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,053 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,053 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,053 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,054 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,054 DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,054 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-06 15:06:02,054 DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,054 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,054 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,054 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,054 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,054 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,054 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,054 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-06 15:06:02,054 DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,054 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,054 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,054 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,054 DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,054 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,054 DEBUG findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,054 DEBUG findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,054 DEBUG findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,054 DEBUG findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,055 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,055 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,055 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,055 DEBUG findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,055 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,055 DEBUG findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,055 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,055 DEBUG findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,055 DEBUG findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,055 DEBUG findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,055 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,055 DEBUG findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,055 DEBUG findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,055 DEBUG findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,055 DEBUG findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,055 DEBUG findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,055 DEBUG findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,055 DEBUG findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,055 DEBUG findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,055 DEBUG findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,055 DEBUG findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,055 DEBUG findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,056 DEBUG findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,056 DEBUG findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,056 DEBUG findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,056 DEBUG findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,056 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2023-01-06 15:06:02,056 DEBUG findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,056 DEBUG findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,056 DEBUG findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,056 DEBUG findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,056 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,056 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,056 DEBUG findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,056 DEBUG findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,056 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,056 DEBUG findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,056 DEBUG findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,056 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,056 DEBUG findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,056 DEBUG findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,056 DEBUG findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,056 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,056 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,057 DEBUG findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,057 DEBUG findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,057 DEBUG findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,057 DEBUG findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,057 DEBUG findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,057 DEBUG findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,057 DEBUG findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,057 DEBUG findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2023-01-06 15:06:02,057 DEBUG findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,057 DEBUG findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,057 DEBUG findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,057 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2023-01-06 15:06:02,057 DEBUG findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,057 DEBUG findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,057 DEBUG findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,058 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,058 DEBUG findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:02,058 DEBUG findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,058 DEBUG findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,058 DEBUG findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,058 DEBUG findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,058 DEBUG findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,058 DEBUG findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,058 DEBUG findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:02,058 DEBUG findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,058 DEBUG findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,058 DEBUG findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,058 DEBUG findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,058 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,058 DEBUG findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,058 DEBUG findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,058 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,058 DEBUG findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,058 DEBUG findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:02,058 DEBUG findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,058 DEBUG findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,059 DEBUG findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,059 DEBUG findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,059 DEBUG findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,059 DEBUG findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,059 DEBUG findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,059 DEBUG findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,059 DEBUG findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,059 DEBUG findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,059 DEBUG findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,059 DEBUG findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,059 DEBUG findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,059 DEBUG findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,059 DEBUG findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,059 DEBUG findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,059 DEBUG findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,059 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:02,059 DEBUG findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,059 DEBUG findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,060 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,060 DEBUG findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,060 DEBUG findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,060 DEBUG findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,060 DEBUG findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,060 DEBUG findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,060 DEBUG findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,060 DEBUG findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,060 DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,060 DEBUG findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,060 DEBUG findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,060 DEBUG findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,060 DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,060 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2023-01-06 15:06:02,060 DEBUG findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,060 DEBUG findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,060 DEBUG findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,060 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,060 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,060 DEBUG findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,060 DEBUG findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,061 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,061 DEBUG findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,061 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:02,061 DEBUG findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,061 DEBUG findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,061 DEBUG findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,061 DEBUG findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,061 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,061 DEBUG findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,061 DEBUG findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,061 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,061 DEBUG findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,061 DEBUG findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2023-01-06 15:06:02,061 DEBUG findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,061 DEBUG findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,061 DEBUG findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,061 DEBUG findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,061 DEBUG findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,061 DEBUG findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,061 DEBUG findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,061 DEBUG findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,061 DEBUG findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:02,062 DEBUG findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,062 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2023-01-06 15:06:02,062 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,062 DEBUG findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,062 DEBUG findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,062 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,062 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,062 DEBUG findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,062 DEBUG findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,062 DEBUG findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,062 DEBUG findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2023-01-06 15:06:02,062 DEBUG findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,062 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,062 DEBUG findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,062 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,062 DEBUG findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,062 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,062 DEBUG findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,062 DEBUG findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,062 DEBUG findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,062 DEBUG findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,063 DEBUG findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,063 DEBUG findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,063 DEBUG findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,063 DEBUG findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,063 DEBUG findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,063 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2023-01-06 15:06:02,063 DEBUG findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2023-01-06 15:06:02,063 DEBUG findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,063 DEBUG findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,063 DEBUG findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,063 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,063 DEBUG findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2023-01-06 15:06:02,063 DEBUG findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,063 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,063 DEBUG findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,063 DEBUG findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,063 DEBUG findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,063 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,063 DEBUG findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,063 DEBUG findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,063 DEBUG findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,063 DEBUG findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,064 DEBUG findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,064 DEBUG findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,064 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,064 DEBUG findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,064 DEBUG findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,064 DEBUG findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,064 DEBUG findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,064 DEBUG findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2023-01-06 15:06:02,064 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2023-01-06 15:06:02,064 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,064 DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,064 DEBUG findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,064 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2023-01-06 15:06:02,064 DEBUG findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,064 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,064 DEBUG findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,064 DEBUG findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,064 DEBUG findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,064 DEBUG findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,064 DEBUG findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,064 DEBUG findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,064 DEBUG findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,065 DEBUG findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,065 DEBUG findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,065 DEBUG findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,065 DEBUG findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,065 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2023-01-06 15:06:02,065 DEBUG findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,065 DEBUG findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,065 DEBUG findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,065 DEBUG findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,065 DEBUG findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,065 DEBUG findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,065 DEBUG findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,065 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2023-01-06 15:06:02,065 DEBUG findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,065 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2023-01-06 15:06:02,065 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,065 DEBUG findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,065 DEBUG findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,065 DEBUG findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,065 DEBUG findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,065 DEBUG findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,065 DEBUG findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,066 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,066 DEBUG findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,066 DEBUG findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,066 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,066 DEBUG findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,066 DEBUG findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,066 DEBUG findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,066 DEBUG findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,066 DEBUG findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,066 DEBUG findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,066 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,066 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,066 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,066 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2023-01-06 15:06:02,066 DEBUG findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,066 DEBUG findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,066 DEBUG findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,066 DEBUG findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,066 DEBUG findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,066 DEBUG findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,066 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,066 DEBUG findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,067 DEBUG findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,067 DEBUG findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,067 DEBUG findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,067 DEBUG findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,067 DEBUG findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,067 DEBUG findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,067 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,067 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,067 DEBUG findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,067 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,067 DEBUG findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,067 DEBUG findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,067 DEBUG findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,067 DEBUG findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,067 DEBUG findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,067 DEBUG findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,067 DEBUG findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,067 DEBUG findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,067 DEBUG findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,067 DEBUG findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,067 DEBUG findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,067 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,068 DEBUG findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,068 DEBUG findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,068 DEBUG findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2023-01-06 15:06:02,068 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,068 DEBUG findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,068 DEBUG findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,068 DEBUG findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,068 DEBUG findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,068 DEBUG findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,068 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,068 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,068 DEBUG findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,068 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,068 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,068 DEBUG findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,068 DEBUG findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,068 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,068 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,068 DEBUG findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,068 DEBUG findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,068 DEBUG findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,068 DEBUG findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,069 DEBUG findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,069 DEBUG findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,069 DEBUG findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2023-01-06 15:06:02,069 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,069 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,069 DEBUG findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,069 DEBUG findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,069 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,069 DEBUG findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,069 DEBUG findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,069 DEBUG findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,069 DEBUG findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,069 DEBUG findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,069 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,069 DEBUG findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,069 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,069 DEBUG findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,069 DEBUG findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,069 DEBUG findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,069 DEBUG findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,069 DEBUG findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,069 DEBUG findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,070 DEBUG findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,070 DEBUG findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,070 DEBUG findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,070 DEBUG findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,070 DEBUG findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,070 DEBUG findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,070 DEBUG findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,070 DEBUG findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,070 DEBUG findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2023-01-06 15:06:02,070 DEBUG findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,070 DEBUG findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,070 DEBUG findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,070 DEBUG findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,070 DEBUG findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,070 DEBUG findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,070 DEBUG findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,070 DEBUG findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,070 DEBUG findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,070 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,070 DEBUG findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,070 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,070 DEBUG findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,071 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,071 DEBUG findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,071 DEBUG findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,071 DEBUG findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,071 DEBUG findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,071 DEBUG findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,071 DEBUG findfont: Matching cmsy10:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0 to cmsy10 ('/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf') with score of 0.050000.
2023-01-06 15:06:02,071 DEBUG findfont: Matching cmr10:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0.
2023-01-06 15:06:02,071 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,071 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,071 DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 0.05
2023-01-06 15:06:02,071 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,072 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,072 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,072 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,072 DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,072 DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,072 DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,072 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-06 15:06:02,072 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,072 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,072 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,072 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,072 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-06 15:06:02,072 DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,072 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,072 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,072 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,072 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,072 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,072 DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,072 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-06 15:06:02,072 DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,072 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,073 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,073 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,073 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,073 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,073 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,073 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-06 15:06:02,073 DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,073 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,073 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,073 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,073 DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,073 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,073 DEBUG findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,073 DEBUG findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,073 DEBUG findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,073 DEBUG findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,073 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,073 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,073 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,073 DEBUG findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,073 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,073 DEBUG findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,074 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,074 DEBUG findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,074 DEBUG findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,074 DEBUG findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,074 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,074 DEBUG findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,074 DEBUG findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,074 DEBUG findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,074 DEBUG findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,074 DEBUG findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,074 DEBUG findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,074 DEBUG findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,074 DEBUG findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,074 DEBUG findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,074 DEBUG findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,074 DEBUG findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,074 DEBUG findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,074 DEBUG findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,074 DEBUG findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,074 DEBUG findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,074 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2023-01-06 15:06:02,074 DEBUG findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,075 DEBUG findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,075 DEBUG findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,075 DEBUG findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,075 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,075 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,075 DEBUG findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,075 DEBUG findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,075 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,075 DEBUG findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,075 DEBUG findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,075 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,075 DEBUG findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,075 DEBUG findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,075 DEBUG findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,075 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,075 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,075 DEBUG findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,075 DEBUG findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,075 DEBUG findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,075 DEBUG findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,075 DEBUG findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,075 DEBUG findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,076 DEBUG findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,076 DEBUG findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2023-01-06 15:06:02,076 DEBUG findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,076 DEBUG findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,076 DEBUG findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,076 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2023-01-06 15:06:02,076 DEBUG findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,076 DEBUG findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,076 DEBUG findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,076 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,076 DEBUG findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:02,076 DEBUG findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,076 DEBUG findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,076 DEBUG findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,076 DEBUG findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,076 DEBUG findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,076 DEBUG findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,076 DEBUG findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:02,076 DEBUG findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,076 DEBUG findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,077 DEBUG findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,077 DEBUG findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,077 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,077 DEBUG findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,077 DEBUG findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,077 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,077 DEBUG findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,077 DEBUG findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:02,077 DEBUG findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,077 DEBUG findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,077 DEBUG findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,077 DEBUG findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,077 DEBUG findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,077 DEBUG findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,077 DEBUG findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,077 DEBUG findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,077 DEBUG findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,077 DEBUG findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,077 DEBUG findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,077 DEBUG findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,077 DEBUG findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,078 DEBUG findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,078 DEBUG findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,078 DEBUG findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,078 DEBUG findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,078 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:02,078 DEBUG findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,078 DEBUG findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,078 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,078 DEBUG findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,078 DEBUG findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,078 DEBUG findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,078 DEBUG findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,078 DEBUG findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,078 DEBUG findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,078 DEBUG findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,078 DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,078 DEBUG findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,078 DEBUG findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,078 DEBUG findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,078 DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,078 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2023-01-06 15:06:02,079 DEBUG findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,079 DEBUG findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,079 DEBUG findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,079 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,079 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,079 DEBUG findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,079 DEBUG findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,079 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,079 DEBUG findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,079 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:02,079 DEBUG findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,079 DEBUG findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,079 DEBUG findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,079 DEBUG findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,079 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,079 DEBUG findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,079 DEBUG findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,079 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,079 DEBUG findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,079 DEBUG findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2023-01-06 15:06:02,079 DEBUG findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,080 DEBUG findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,080 DEBUG findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,080 DEBUG findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,080 DEBUG findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,080 DEBUG findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,080 DEBUG findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,080 DEBUG findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,080 DEBUG findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:02,080 DEBUG findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,080 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2023-01-06 15:06:02,080 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,080 DEBUG findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,080 DEBUG findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,080 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,080 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,080 DEBUG findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,080 DEBUG findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,080 DEBUG findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,080 DEBUG findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2023-01-06 15:06:02,080 DEBUG findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,080 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,081 DEBUG findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,081 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,081 DEBUG findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,081 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,081 DEBUG findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,081 DEBUG findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,081 DEBUG findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,081 DEBUG findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,081 DEBUG findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,081 DEBUG findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,081 DEBUG findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,081 DEBUG findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,081 DEBUG findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,081 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2023-01-06 15:06:02,081 DEBUG findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2023-01-06 15:06:02,081 DEBUG findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,081 DEBUG findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,081 DEBUG findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,081 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,081 DEBUG findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2023-01-06 15:06:02,081 DEBUG findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,081 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,082 DEBUG findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,082 DEBUG findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,082 DEBUG findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,082 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,082 DEBUG findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,082 DEBUG findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,082 DEBUG findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,082 DEBUG findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,082 DEBUG findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,082 DEBUG findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,082 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,082 DEBUG findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,082 DEBUG findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,082 DEBUG findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,082 DEBUG findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,082 DEBUG findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2023-01-06 15:06:02,082 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2023-01-06 15:06:02,082 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,082 DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,082 DEBUG findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,082 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2023-01-06 15:06:02,082 DEBUG findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,083 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,083 DEBUG findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,083 DEBUG findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,083 DEBUG findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,083 DEBUG findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,083 DEBUG findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,083 DEBUG findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,083 DEBUG findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,083 DEBUG findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,083 DEBUG findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,083 DEBUG findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,083 DEBUG findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,083 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2023-01-06 15:06:02,083 DEBUG findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,083 DEBUG findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,083 DEBUG findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,083 DEBUG findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,083 DEBUG findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,083 DEBUG findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,083 DEBUG findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,083 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2023-01-06 15:06:02,083 DEBUG findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,084 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2023-01-06 15:06:02,084 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,084 DEBUG findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,084 DEBUG findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,084 DEBUG findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,084 DEBUG findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,084 DEBUG findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,084 DEBUG findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,084 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,084 DEBUG findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,084 DEBUG findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,084 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,084 DEBUG findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,084 DEBUG findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,084 DEBUG findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,084 DEBUG findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,084 DEBUG findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,084 DEBUG findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,084 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,084 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,084 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,085 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2023-01-06 15:06:02,085 DEBUG findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,085 DEBUG findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,085 DEBUG findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,085 DEBUG findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,085 DEBUG findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,085 DEBUG findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,085 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,085 DEBUG findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,085 DEBUG findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,085 DEBUG findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,085 DEBUG findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,085 DEBUG findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,085 DEBUG findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,085 DEBUG findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,085 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,085 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,085 DEBUG findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,085 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,085 DEBUG findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,085 DEBUG findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,086 DEBUG findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,086 DEBUG findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,086 DEBUG findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,086 DEBUG findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,086 DEBUG findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,086 DEBUG findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,086 DEBUG findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,086 DEBUG findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,086 DEBUG findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,086 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,086 DEBUG findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,086 DEBUG findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,086 DEBUG findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2023-01-06 15:06:02,086 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,086 DEBUG findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,086 DEBUG findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,086 DEBUG findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,086 DEBUG findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,086 DEBUG findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,086 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,086 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,086 DEBUG findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,087 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,087 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,087 DEBUG findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,087 DEBUG findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,087 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,087 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,087 DEBUG findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,087 DEBUG findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,087 DEBUG findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,087 DEBUG findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,087 DEBUG findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,087 DEBUG findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,087 DEBUG findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2023-01-06 15:06:02,087 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,087 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,087 DEBUG findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,087 DEBUG findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,087 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,087 DEBUG findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,087 DEBUG findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,088 DEBUG findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,088 DEBUG findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,088 DEBUG findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,088 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,088 DEBUG findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,088 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,088 DEBUG findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,088 DEBUG findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,088 DEBUG findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,088 DEBUG findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,088 DEBUG findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,088 DEBUG findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,088 DEBUG findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,088 DEBUG findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,088 DEBUG findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,088 DEBUG findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,088 DEBUG findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,088 DEBUG findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,088 DEBUG findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,088 DEBUG findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,089 DEBUG findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2023-01-06 15:06:02,089 DEBUG findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,089 DEBUG findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,089 DEBUG findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,089 DEBUG findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,089 DEBUG findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,089 DEBUG findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,089 DEBUG findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,089 DEBUG findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,089 DEBUG findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,089 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,089 DEBUG findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,089 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,089 DEBUG findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,089 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,089 DEBUG findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,089 DEBUG findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,089 DEBUG findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,089 DEBUG findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,089 DEBUG findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,089 DEBUG findfont: Matching cmr10:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0 to cmr10 ('/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf') with score of 0.050000.
2023-01-06 15:06:02,090 DEBUG findfont: Matching cmtt10:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0.
2023-01-06 15:06:02,090 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,090 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,090 DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,090 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,090 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,090 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,090 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,090 DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,090 DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,090 DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,090 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-06 15:06:02,091 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,091 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,091 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,091 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,091 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-06 15:06:02,091 DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,091 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,091 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,091 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,091 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,091 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,091 DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,091 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-06 15:06:02,091 DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 0.05
2023-01-06 15:06:02,091 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,091 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,091 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,091 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,091 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,091 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,091 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-06 15:06:02,091 DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,092 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,092 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,092 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,092 DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,092 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,092 DEBUG findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,092 DEBUG findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,092 DEBUG findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,092 DEBUG findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,092 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,092 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,092 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,092 DEBUG findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,092 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,092 DEBUG findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,092 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,092 DEBUG findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,092 DEBUG findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,092 DEBUG findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,092 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,092 DEBUG findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,092 DEBUG findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,093 DEBUG findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,093 DEBUG findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,093 DEBUG findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,093 DEBUG findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,093 DEBUG findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,093 DEBUG findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,093 DEBUG findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,093 DEBUG findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,093 DEBUG findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,093 DEBUG findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,093 DEBUG findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,093 DEBUG findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,093 DEBUG findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,093 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2023-01-06 15:06:02,093 DEBUG findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,093 DEBUG findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,093 DEBUG findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,093 DEBUG findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,093 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,093 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,093 DEBUG findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,093 DEBUG findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,093 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,094 DEBUG findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,094 DEBUG findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,094 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,094 DEBUG findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,094 DEBUG findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,094 DEBUG findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,094 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,094 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,094 DEBUG findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,094 DEBUG findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,094 DEBUG findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,094 DEBUG findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,094 DEBUG findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,094 DEBUG findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,094 DEBUG findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,094 DEBUG findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2023-01-06 15:06:02,094 DEBUG findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,094 DEBUG findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,094 DEBUG findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,094 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2023-01-06 15:06:02,094 DEBUG findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,094 DEBUG findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,095 DEBUG findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,095 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,095 DEBUG findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:02,095 DEBUG findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,095 DEBUG findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,095 DEBUG findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,095 DEBUG findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,095 DEBUG findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,095 DEBUG findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,095 DEBUG findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:02,095 DEBUG findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,095 DEBUG findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,095 DEBUG findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,095 DEBUG findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,095 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,095 DEBUG findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,095 DEBUG findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,095 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,095 DEBUG findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,095 DEBUG findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:02,095 DEBUG findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,095 DEBUG findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,096 DEBUG findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,096 DEBUG findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,096 DEBUG findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,096 DEBUG findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,096 DEBUG findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,096 DEBUG findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,096 DEBUG findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,096 DEBUG findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,096 DEBUG findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,096 DEBUG findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,096 DEBUG findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,096 DEBUG findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,096 DEBUG findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,096 DEBUG findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,096 DEBUG findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,096 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:02,096 DEBUG findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,096 DEBUG findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,096 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,096 DEBUG findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,096 DEBUG findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,097 DEBUG findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,097 DEBUG findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,097 DEBUG findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,097 DEBUG findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,097 DEBUG findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,097 DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,097 DEBUG findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,097 DEBUG findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,097 DEBUG findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,097 DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,097 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2023-01-06 15:06:02,097 DEBUG findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,097 DEBUG findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,097 DEBUG findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,097 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,097 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,097 DEBUG findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,097 DEBUG findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,097 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,097 DEBUG findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,097 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:02,098 DEBUG findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,098 DEBUG findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,098 DEBUG findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,098 DEBUG findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,098 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,098 DEBUG findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,098 DEBUG findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,098 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,098 DEBUG findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,098 DEBUG findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2023-01-06 15:06:02,098 DEBUG findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,098 DEBUG findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,098 DEBUG findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,098 DEBUG findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,098 DEBUG findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,098 DEBUG findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,098 DEBUG findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,098 DEBUG findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,098 DEBUG findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:02,098 DEBUG findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,098 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2023-01-06 15:06:02,098 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,099 DEBUG findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,099 DEBUG findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,099 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,099 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,099 DEBUG findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,099 DEBUG findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,099 DEBUG findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,099 DEBUG findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2023-01-06 15:06:02,099 DEBUG findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,099 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,099 DEBUG findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,099 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,099 DEBUG findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,099 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,099 DEBUG findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,099 DEBUG findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,099 DEBUG findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,099 DEBUG findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,099 DEBUG findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,099 DEBUG findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,100 DEBUG findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,100 DEBUG findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,100 DEBUG findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,100 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2023-01-06 15:06:02,100 DEBUG findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2023-01-06 15:06:02,100 DEBUG findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,100 DEBUG findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,100 DEBUG findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,100 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,100 DEBUG findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2023-01-06 15:06:02,100 DEBUG findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,100 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,100 DEBUG findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,100 DEBUG findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,100 DEBUG findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,100 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,100 DEBUG findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,100 DEBUG findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,100 DEBUG findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,100 DEBUG findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,100 DEBUG findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,101 DEBUG findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,101 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,101 DEBUG findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,101 DEBUG findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,101 DEBUG findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,101 DEBUG findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,101 DEBUG findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2023-01-06 15:06:02,101 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2023-01-06 15:06:02,101 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,101 DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,101 DEBUG findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,101 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2023-01-06 15:06:02,101 DEBUG findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,101 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,101 DEBUG findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,101 DEBUG findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,101 DEBUG findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,101 DEBUG findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,101 DEBUG findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,101 DEBUG findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,101 DEBUG findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,102 DEBUG findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,102 DEBUG findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,102 DEBUG findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,102 DEBUG findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,102 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2023-01-06 15:06:02,102 DEBUG findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,102 DEBUG findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,102 DEBUG findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,102 DEBUG findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,102 DEBUG findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,102 DEBUG findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,102 DEBUG findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,102 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2023-01-06 15:06:02,102 DEBUG findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,102 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2023-01-06 15:06:02,102 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,102 DEBUG findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,102 DEBUG findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,102 DEBUG findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,102 DEBUG findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,103 DEBUG findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,103 DEBUG findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,103 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,103 DEBUG findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,103 DEBUG findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,103 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,103 DEBUG findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,103 DEBUG findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,103 DEBUG findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,103 DEBUG findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,103 DEBUG findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,103 DEBUG findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,103 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,103 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,103 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,103 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2023-01-06 15:06:02,103 DEBUG findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,103 DEBUG findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,103 DEBUG findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,103 DEBUG findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,104 DEBUG findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,104 DEBUG findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,104 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,104 DEBUG findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,104 DEBUG findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,104 DEBUG findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,104 DEBUG findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,104 DEBUG findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,104 DEBUG findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,104 DEBUG findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,104 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,104 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,104 DEBUG findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,104 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,104 DEBUG findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,104 DEBUG findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,104 DEBUG findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,104 DEBUG findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,104 DEBUG findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,104 DEBUG findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,104 DEBUG findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,105 DEBUG findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,105 DEBUG findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,105 DEBUG findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,105 DEBUG findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,105 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,105 DEBUG findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,105 DEBUG findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,105 DEBUG findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2023-01-06 15:06:02,105 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,105 DEBUG findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,105 DEBUG findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,105 DEBUG findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,105 DEBUG findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,105 DEBUG findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,105 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,105 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,105 DEBUG findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,105 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,105 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,105 DEBUG findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,106 DEBUG findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,106 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,106 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,106 DEBUG findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,106 DEBUG findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,106 DEBUG findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,106 DEBUG findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,106 DEBUG findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,106 DEBUG findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,106 DEBUG findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2023-01-06 15:06:02,106 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,106 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,106 DEBUG findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,106 DEBUG findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,106 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,106 DEBUG findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,106 DEBUG findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,106 DEBUG findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,106 DEBUG findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,106 DEBUG findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,107 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,107 DEBUG findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,107 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,107 DEBUG findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,107 DEBUG findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,107 DEBUG findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,107 DEBUG findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,107 DEBUG findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,107 DEBUG findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,107 DEBUG findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,107 DEBUG findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,107 DEBUG findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,107 DEBUG findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,107 DEBUG findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,107 DEBUG findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,107 DEBUG findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,107 DEBUG findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,107 DEBUG findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2023-01-06 15:06:02,107 DEBUG findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,107 DEBUG findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,107 DEBUG findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,108 DEBUG findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,108 DEBUG findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,108 DEBUG findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,108 DEBUG findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,108 DEBUG findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,108 DEBUG findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,108 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,108 DEBUG findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,108 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,108 DEBUG findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,108 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,108 DEBUG findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,108 DEBUG findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,108 DEBUG findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,108 DEBUG findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,108 DEBUG findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,108 DEBUG findfont: Matching cmtt10:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0 to cmtt10 ('/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf') with score of 0.050000.
2023-01-06 15:06:02,109 DEBUG findfont: Matching cmmi10:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0.
2023-01-06 15:06:02,109 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,109 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,109 DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,109 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,109 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,109 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,109 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,109 DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,109 DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,109 DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,110 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-06 15:06:02,110 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,110 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,110 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,110 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,110 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-06 15:06:02,110 DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,110 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,110 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,110 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,110 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,110 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,110 DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,110 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-06 15:06:02,110 DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,110 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,110 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,110 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,110 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,110 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,110 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,111 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-06 15:06:02,111 DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 0.05
2023-01-06 15:06:02,111 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,111 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,111 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,111 DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,111 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,111 DEBUG findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,111 DEBUG findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,111 DEBUG findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,111 DEBUG findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,111 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,111 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,111 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,111 DEBUG findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,111 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,111 DEBUG findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,111 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,111 DEBUG findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,111 DEBUG findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,111 DEBUG findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,111 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,112 DEBUG findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,112 DEBUG findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,112 DEBUG findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,112 DEBUG findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,112 DEBUG findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,112 DEBUG findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,112 DEBUG findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,112 DEBUG findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,112 DEBUG findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,112 DEBUG findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,112 DEBUG findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,112 DEBUG findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,112 DEBUG findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,112 DEBUG findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,112 DEBUG findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,112 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2023-01-06 15:06:02,112 DEBUG findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,112 DEBUG findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,112 DEBUG findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,112 DEBUG findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,112 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,112 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,113 DEBUG findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,113 DEBUG findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,113 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,113 DEBUG findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,113 DEBUG findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,113 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,113 DEBUG findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,113 DEBUG findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,113 DEBUG findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,113 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,113 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,113 DEBUG findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,113 DEBUG findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,113 DEBUG findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,113 DEBUG findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,113 DEBUG findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,113 DEBUG findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,113 DEBUG findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,113 DEBUG findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2023-01-06 15:06:02,113 DEBUG findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,113 DEBUG findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,114 DEBUG findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,114 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2023-01-06 15:06:02,114 DEBUG findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,114 DEBUG findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,114 DEBUG findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,114 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,114 DEBUG findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:02,114 DEBUG findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,114 DEBUG findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,114 DEBUG findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,114 DEBUG findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,114 DEBUG findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,114 DEBUG findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,114 DEBUG findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:02,114 DEBUG findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,114 DEBUG findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,114 DEBUG findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,114 DEBUG findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,114 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,114 DEBUG findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,114 DEBUG findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,114 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,114 DEBUG findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,115 DEBUG findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:02,115 DEBUG findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,115 DEBUG findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,115 DEBUG findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,115 DEBUG findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,115 DEBUG findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,115 DEBUG findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,115 DEBUG findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,115 DEBUG findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,115 DEBUG findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,115 DEBUG findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,115 DEBUG findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,115 DEBUG findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,115 DEBUG findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,115 DEBUG findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,115 DEBUG findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,115 DEBUG findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,115 DEBUG findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,115 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:02,115 DEBUG findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,115 DEBUG findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,115 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,116 DEBUG findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,116 DEBUG findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,116 DEBUG findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,116 DEBUG findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,116 DEBUG findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,116 DEBUG findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,116 DEBUG findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,116 DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,116 DEBUG findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,116 DEBUG findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,116 DEBUG findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,116 DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,116 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2023-01-06 15:06:02,116 DEBUG findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,116 DEBUG findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,116 DEBUG findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,116 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,116 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,116 DEBUG findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,116 DEBUG findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,116 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,116 DEBUG findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,117 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:02,117 DEBUG findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,117 DEBUG findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,117 DEBUG findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,117 DEBUG findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,117 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,117 DEBUG findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,117 DEBUG findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,117 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,117 DEBUG findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,117 DEBUG findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2023-01-06 15:06:02,117 DEBUG findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,117 DEBUG findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,117 DEBUG findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,117 DEBUG findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,117 DEBUG findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,117 DEBUG findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,117 DEBUG findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,117 DEBUG findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,117 DEBUG findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:02,117 DEBUG findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,117 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2023-01-06 15:06:02,118 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,118 DEBUG findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,118 DEBUG findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,118 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,118 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,118 DEBUG findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,118 DEBUG findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,118 DEBUG findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,118 DEBUG findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2023-01-06 15:06:02,118 DEBUG findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,118 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,118 DEBUG findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,118 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,118 DEBUG findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,118 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,118 DEBUG findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,118 DEBUG findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,118 DEBUG findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,118 DEBUG findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,118 DEBUG findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,118 DEBUG findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,118 DEBUG findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,119 DEBUG findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,119 DEBUG findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,119 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2023-01-06 15:06:02,119 DEBUG findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2023-01-06 15:06:02,119 DEBUG findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,119 DEBUG findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,119 DEBUG findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,119 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,119 DEBUG findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2023-01-06 15:06:02,119 DEBUG findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,119 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,119 DEBUG findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,119 DEBUG findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,119 DEBUG findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,119 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,119 DEBUG findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,119 DEBUG findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,119 DEBUG findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,119 DEBUG findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,119 DEBUG findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,119 DEBUG findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,119 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,119 DEBUG findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,120 DEBUG findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,120 DEBUG findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,120 DEBUG findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,120 DEBUG findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2023-01-06 15:06:02,120 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2023-01-06 15:06:02,120 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,120 DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,120 DEBUG findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,120 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2023-01-06 15:06:02,120 DEBUG findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,120 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,120 DEBUG findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,120 DEBUG findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,120 DEBUG findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,120 DEBUG findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,120 DEBUG findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,120 DEBUG findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,120 DEBUG findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,120 DEBUG findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,120 DEBUG findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,120 DEBUG findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,120 DEBUG findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,121 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2023-01-06 15:06:02,121 DEBUG findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,121 DEBUG findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,121 DEBUG findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,121 DEBUG findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,121 DEBUG findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,121 DEBUG findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,121 DEBUG findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,121 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2023-01-06 15:06:02,121 DEBUG findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,121 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2023-01-06 15:06:02,121 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,121 DEBUG findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,121 DEBUG findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,121 DEBUG findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,121 DEBUG findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,121 DEBUG findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,121 DEBUG findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,121 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,121 DEBUG findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,121 DEBUG findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,121 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,122 DEBUG findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,122 DEBUG findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,122 DEBUG findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,122 DEBUG findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,122 DEBUG findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,122 DEBUG findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,122 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,122 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,122 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,122 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2023-01-06 15:06:02,122 DEBUG findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,122 DEBUG findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,122 DEBUG findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,122 DEBUG findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,122 DEBUG findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,122 DEBUG findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,122 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,122 DEBUG findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,122 DEBUG findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,122 DEBUG findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,122 DEBUG findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,122 DEBUG findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,123 DEBUG findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,123 DEBUG findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,123 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,123 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,123 DEBUG findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,123 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,123 DEBUG findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,123 DEBUG findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,123 DEBUG findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,123 DEBUG findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,123 DEBUG findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,123 DEBUG findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,123 DEBUG findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,123 DEBUG findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,123 DEBUG findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,123 DEBUG findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,123 DEBUG findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,123 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,123 DEBUG findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,123 DEBUG findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,123 DEBUG findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2023-01-06 15:06:02,123 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,124 DEBUG findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,124 DEBUG findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,124 DEBUG findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,124 DEBUG findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,124 DEBUG findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,124 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,124 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,124 DEBUG findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,124 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,124 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,124 DEBUG findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,124 DEBUG findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,124 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,124 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,124 DEBUG findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,124 DEBUG findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,124 DEBUG findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,124 DEBUG findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,124 DEBUG findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,124 DEBUG findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,124 DEBUG findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2023-01-06 15:06:02,124 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,125 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,125 DEBUG findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,125 DEBUG findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,125 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,125 DEBUG findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,125 DEBUG findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,125 DEBUG findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,125 DEBUG findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,125 DEBUG findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,125 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,125 DEBUG findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,125 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,125 DEBUG findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,125 DEBUG findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,125 DEBUG findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,125 DEBUG findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,125 DEBUG findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,125 DEBUG findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,125 DEBUG findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,125 DEBUG findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,125 DEBUG findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,126 DEBUG findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,126 DEBUG findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,126 DEBUG findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,126 DEBUG findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,126 DEBUG findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,126 DEBUG findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2023-01-06 15:06:02,126 DEBUG findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,126 DEBUG findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,126 DEBUG findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,126 DEBUG findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,126 DEBUG findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,126 DEBUG findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,126 DEBUG findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,126 DEBUG findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,126 DEBUG findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,126 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,126 DEBUG findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,126 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,126 DEBUG findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,126 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,126 DEBUG findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,127 DEBUG findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,127 DEBUG findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,127 DEBUG findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,127 DEBUG findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,127 DEBUG findfont: Matching cmmi10:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0 to cmmi10 ('/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf') with score of 0.050000.
2023-01-06 15:06:02,127 DEBUG findfont: Matching cmb10:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0.
2023-01-06 15:06:02,127 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,127 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,127 DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,127 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,127 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,128 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,128 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,128 DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,128 DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,128 DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,128 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-06 15:06:02,128 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,128 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,128 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,128 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,128 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-06 15:06:02,128 DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 0.05
2023-01-06 15:06:02,128 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,128 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,128 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,128 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,128 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,128 DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,128 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-06 15:06:02,128 DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,128 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,129 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,129 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,129 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,129 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,129 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,129 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-06 15:06:02,129 DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,129 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,129 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,129 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,129 DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,129 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,129 DEBUG findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,129 DEBUG findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,129 DEBUG findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,129 DEBUG findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,129 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,129 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,129 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,129 DEBUG findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,129 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,130 DEBUG findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,130 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,130 DEBUG findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,130 DEBUG findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,130 DEBUG findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,130 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,130 DEBUG findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,130 DEBUG findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,130 DEBUG findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,130 DEBUG findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,130 DEBUG findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,130 DEBUG findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,130 DEBUG findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,130 DEBUG findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,130 DEBUG findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,130 DEBUG findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,130 DEBUG findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,130 DEBUG findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,130 DEBUG findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,130 DEBUG findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,130 DEBUG findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,131 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2023-01-06 15:06:02,131 DEBUG findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,131 DEBUG findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,131 DEBUG findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,131 DEBUG findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,131 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,131 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,131 DEBUG findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,131 DEBUG findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,131 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,131 DEBUG findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,131 DEBUG findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,131 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,131 DEBUG findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,131 DEBUG findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,131 DEBUG findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,131 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,131 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,131 DEBUG findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,131 DEBUG findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,132 DEBUG findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,132 DEBUG findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,132 DEBUG findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,132 DEBUG findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,132 DEBUG findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,132 DEBUG findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2023-01-06 15:06:02,132 DEBUG findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,132 DEBUG findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,132 DEBUG findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,132 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2023-01-06 15:06:02,132 DEBUG findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,132 DEBUG findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,132 DEBUG findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,132 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,132 DEBUG findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:02,132 DEBUG findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,132 DEBUG findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,132 DEBUG findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,132 DEBUG findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,132 DEBUG findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,133 DEBUG findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,133 DEBUG findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:02,133 DEBUG findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,133 DEBUG findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,133 DEBUG findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,133 DEBUG findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,133 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,133 DEBUG findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,133 DEBUG findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,133 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,133 DEBUG findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,133 DEBUG findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:02,133 DEBUG findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,133 DEBUG findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,133 DEBUG findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,133 DEBUG findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,133 DEBUG findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,133 DEBUG findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,133 DEBUG findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,133 DEBUG findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,133 DEBUG findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,134 DEBUG findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,134 DEBUG findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,134 DEBUG findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,134 DEBUG findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,134 DEBUG findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,134 DEBUG findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,134 DEBUG findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,134 DEBUG findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,134 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:02,134 DEBUG findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,134 DEBUG findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,134 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,134 DEBUG findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,134 DEBUG findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,134 DEBUG findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,134 DEBUG findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,134 DEBUG findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,134 DEBUG findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,134 DEBUG findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,134 DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,134 DEBUG findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,135 DEBUG findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,135 DEBUG findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,135 DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,135 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2023-01-06 15:06:02,135 DEBUG findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,135 DEBUG findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,135 DEBUG findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,135 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,135 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,135 DEBUG findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,135 DEBUG findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,135 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,135 DEBUG findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,135 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:02,135 DEBUG findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,135 DEBUG findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,135 DEBUG findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,135 DEBUG findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,135 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,135 DEBUG findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,136 DEBUG findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,136 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,136 DEBUG findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,136 DEBUG findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2023-01-06 15:06:02,136 DEBUG findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,136 DEBUG findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,136 DEBUG findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,136 DEBUG findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,136 DEBUG findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,136 DEBUG findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,136 DEBUG findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,136 DEBUG findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,136 DEBUG findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:02,136 DEBUG findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,136 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2023-01-06 15:06:02,136 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,136 DEBUG findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,136 DEBUG findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,137 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,137 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,137 DEBUG findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,137 DEBUG findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,137 DEBUG findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,137 DEBUG findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2023-01-06 15:06:02,137 DEBUG findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,137 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,137 DEBUG findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,137 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,137 DEBUG findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,137 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,137 DEBUG findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,137 DEBUG findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,137 DEBUG findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,137 DEBUG findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,137 DEBUG findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,138 DEBUG findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,138 DEBUG findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,138 DEBUG findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,138 DEBUG findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,138 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2023-01-06 15:06:02,138 DEBUG findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2023-01-06 15:06:02,138 DEBUG findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,138 DEBUG findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,138 DEBUG findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,138 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,138 DEBUG findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2023-01-06 15:06:02,138 DEBUG findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,138 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,138 DEBUG findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,138 DEBUG findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,138 DEBUG findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,138 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,138 DEBUG findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,139 DEBUG findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,139 DEBUG findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,139 DEBUG findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,139 DEBUG findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,139 DEBUG findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,139 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,139 DEBUG findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,139 DEBUG findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,139 DEBUG findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,139 DEBUG findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,139 DEBUG findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2023-01-06 15:06:02,139 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2023-01-06 15:06:02,139 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,139 DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,139 DEBUG findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,139 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2023-01-06 15:06:02,139 DEBUG findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,139 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,140 DEBUG findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,140 DEBUG findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,140 DEBUG findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,140 DEBUG findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,140 DEBUG findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,140 DEBUG findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,140 DEBUG findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,140 DEBUG findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,140 DEBUG findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,140 DEBUG findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,140 DEBUG findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,140 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2023-01-06 15:06:02,140 DEBUG findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,140 DEBUG findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,140 DEBUG findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,140 DEBUG findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,140 DEBUG findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,140 DEBUG findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,140 DEBUG findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,140 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2023-01-06 15:06:02,141 DEBUG findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,141 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2023-01-06 15:06:02,141 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,141 DEBUG findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,141 DEBUG findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,141 DEBUG findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,141 DEBUG findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,141 DEBUG findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,141 DEBUG findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,141 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,141 DEBUG findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,141 DEBUG findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,141 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,141 DEBUG findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,141 DEBUG findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,141 DEBUG findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,141 DEBUG findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,141 DEBUG findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,141 DEBUG findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,141 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,141 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,141 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,141 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2023-01-06 15:06:02,142 DEBUG findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,142 DEBUG findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,142 DEBUG findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,142 DEBUG findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,142 DEBUG findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,142 DEBUG findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,142 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,142 DEBUG findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,142 DEBUG findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,142 DEBUG findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,142 DEBUG findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,142 DEBUG findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,142 DEBUG findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,142 DEBUG findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,142 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,142 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,142 DEBUG findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,142 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,142 DEBUG findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,142 DEBUG findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,142 DEBUG findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,142 DEBUG findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,143 DEBUG findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,143 DEBUG findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,143 DEBUG findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,143 DEBUG findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,143 DEBUG findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,143 DEBUG findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,143 DEBUG findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,143 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,143 DEBUG findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,143 DEBUG findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,143 DEBUG findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2023-01-06 15:06:02,143 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,143 DEBUG findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,143 DEBUG findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,143 DEBUG findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,143 DEBUG findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,143 DEBUG findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,143 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,143 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,143 DEBUG findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,143 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,143 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,144 DEBUG findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,144 DEBUG findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,144 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,144 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,144 DEBUG findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,144 DEBUG findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,144 DEBUG findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,144 DEBUG findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,144 DEBUG findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,144 DEBUG findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,144 DEBUG findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2023-01-06 15:06:02,144 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,144 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,144 DEBUG findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,144 DEBUG findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,144 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,144 DEBUG findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,144 DEBUG findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,144 DEBUG findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,144 DEBUG findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,144 DEBUG findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,144 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,145 DEBUG findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,145 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,145 DEBUG findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,145 DEBUG findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,145 DEBUG findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,145 DEBUG findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,145 DEBUG findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,145 DEBUG findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,145 DEBUG findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,145 DEBUG findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,145 DEBUG findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,145 DEBUG findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,145 DEBUG findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,145 DEBUG findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,145 DEBUG findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,145 DEBUG findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,145 DEBUG findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2023-01-06 15:06:02,145 DEBUG findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,145 DEBUG findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,145 DEBUG findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,145 DEBUG findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,146 DEBUG findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,146 DEBUG findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,146 DEBUG findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,146 DEBUG findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,146 DEBUG findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,146 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,146 DEBUG findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,146 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,146 DEBUG findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,146 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,146 DEBUG findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,146 DEBUG findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,146 DEBUG findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,146 DEBUG findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,146 DEBUG findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,146 DEBUG findfont: Matching cmb10:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0 to cmb10 ('/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf') with score of 0.050000.
2023-01-06 15:06:02,147 DEBUG findfont: Matching cmss10:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0.
2023-01-06 15:06:02,147 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,147 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,147 DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,147 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,147 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,147 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,147 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,147 DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,147 DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,147 DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,147 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-06 15:06:02,147 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,147 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,148 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,148 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,148 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-06 15:06:02,148 DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,148 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,148 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,148 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,148 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,148 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,148 DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 0.05
2023-01-06 15:06:02,148 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-06 15:06:02,148 DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,148 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,148 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,148 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,148 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,148 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,148 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,148 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-06 15:06:02,148 DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,148 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,149 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,149 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,149 DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,149 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,149 DEBUG findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,149 DEBUG findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,149 DEBUG findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,149 DEBUG findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,149 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,149 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,149 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,149 DEBUG findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,149 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,149 DEBUG findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,149 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,149 DEBUG findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,149 DEBUG findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,149 DEBUG findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,149 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,149 DEBUG findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,149 DEBUG findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,150 DEBUG findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,150 DEBUG findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,150 DEBUG findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,150 DEBUG findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,150 DEBUG findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,150 DEBUG findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,150 DEBUG findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,150 DEBUG findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,150 DEBUG findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,150 DEBUG findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,150 DEBUG findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,150 DEBUG findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,150 DEBUG findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,150 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2023-01-06 15:06:02,150 DEBUG findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,150 DEBUG findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,150 DEBUG findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,150 DEBUG findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,150 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,150 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,151 DEBUG findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,151 DEBUG findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,151 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,151 DEBUG findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,151 DEBUG findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,151 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,151 DEBUG findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,151 DEBUG findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,151 DEBUG findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,151 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,151 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,151 DEBUG findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,151 DEBUG findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,151 DEBUG findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,151 DEBUG findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,151 DEBUG findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,151 DEBUG findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,151 DEBUG findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,151 DEBUG findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2023-01-06 15:06:02,151 DEBUG findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,152 DEBUG findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,152 DEBUG findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,152 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2023-01-06 15:06:02,152 DEBUG findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,152 DEBUG findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,152 DEBUG findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,152 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,152 DEBUG findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:02,152 DEBUG findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,152 DEBUG findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,152 DEBUG findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,152 DEBUG findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,152 DEBUG findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,152 DEBUG findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,152 DEBUG findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:02,152 DEBUG findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,152 DEBUG findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,152 DEBUG findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,152 DEBUG findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,152 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,152 DEBUG findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,153 DEBUG findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,153 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,153 DEBUG findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,153 DEBUG findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:02,153 DEBUG findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,153 DEBUG findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,153 DEBUG findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,153 DEBUG findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,153 DEBUG findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,153 DEBUG findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,153 DEBUG findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,153 DEBUG findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,153 DEBUG findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,153 DEBUG findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,153 DEBUG findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,153 DEBUG findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,153 DEBUG findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,153 DEBUG findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,153 DEBUG findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,153 DEBUG findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,153 DEBUG findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,154 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:02,154 DEBUG findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,154 DEBUG findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,154 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,154 DEBUG findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,154 DEBUG findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,154 DEBUG findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,154 DEBUG findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,154 DEBUG findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,154 DEBUG findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,154 DEBUG findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,154 DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,154 DEBUG findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,154 DEBUG findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,154 DEBUG findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,154 DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,154 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2023-01-06 15:06:02,154 DEBUG findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,154 DEBUG findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,154 DEBUG findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,154 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,155 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,155 DEBUG findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,155 DEBUG findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,155 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,155 DEBUG findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,155 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:02,155 DEBUG findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,155 DEBUG findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,155 DEBUG findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,155 DEBUG findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,155 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,155 DEBUG findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,155 DEBUG findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,155 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,155 DEBUG findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,155 DEBUG findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2023-01-06 15:06:02,155 DEBUG findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,155 DEBUG findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,155 DEBUG findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,155 DEBUG findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,155 DEBUG findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,156 DEBUG findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,156 DEBUG findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,156 DEBUG findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,156 DEBUG findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:02,156 DEBUG findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,156 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2023-01-06 15:06:02,156 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,156 DEBUG findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,156 DEBUG findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,156 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,156 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,156 DEBUG findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,156 DEBUG findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,156 DEBUG findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,156 DEBUG findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2023-01-06 15:06:02,156 DEBUG findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,156 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,156 DEBUG findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,156 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,156 DEBUG findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,156 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,157 DEBUG findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,157 DEBUG findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,157 DEBUG findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,157 DEBUG findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,157 DEBUG findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,157 DEBUG findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,157 DEBUG findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,157 DEBUG findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,157 DEBUG findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,157 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2023-01-06 15:06:02,157 DEBUG findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2023-01-06 15:06:02,157 DEBUG findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,157 DEBUG findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,157 DEBUG findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,157 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,157 DEBUG findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2023-01-06 15:06:02,157 DEBUG findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,157 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,157 DEBUG findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,157 DEBUG findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,158 DEBUG findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,158 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,158 DEBUG findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,158 DEBUG findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,158 DEBUG findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,158 DEBUG findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,158 DEBUG findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,158 DEBUG findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,158 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,158 DEBUG findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,158 DEBUG findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,158 DEBUG findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,158 DEBUG findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,158 DEBUG findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2023-01-06 15:06:02,158 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2023-01-06 15:06:02,158 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,158 DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,158 DEBUG findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,158 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2023-01-06 15:06:02,158 DEBUG findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,158 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,159 DEBUG findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,159 DEBUG findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,159 DEBUG findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,159 DEBUG findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,159 DEBUG findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,159 DEBUG findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,159 DEBUG findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,159 DEBUG findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,159 DEBUG findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,159 DEBUG findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,159 DEBUG findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,159 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2023-01-06 15:06:02,159 DEBUG findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,159 DEBUG findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,159 DEBUG findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,159 DEBUG findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,159 DEBUG findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,159 DEBUG findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,159 DEBUG findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,159 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2023-01-06 15:06:02,159 DEBUG findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,160 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2023-01-06 15:06:02,160 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,160 DEBUG findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,160 DEBUG findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,160 DEBUG findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,160 DEBUG findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,160 DEBUG findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,160 DEBUG findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,160 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,160 DEBUG findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,160 DEBUG findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,160 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,160 DEBUG findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,160 DEBUG findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,160 DEBUG findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,160 DEBUG findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,160 DEBUG findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,160 DEBUG findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,160 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,160 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,160 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,161 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2023-01-06 15:06:02,161 DEBUG findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,161 DEBUG findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,161 DEBUG findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,161 DEBUG findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,161 DEBUG findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,161 DEBUG findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,161 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,161 DEBUG findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,161 DEBUG findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,161 DEBUG findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,161 DEBUG findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,161 DEBUG findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,161 DEBUG findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,161 DEBUG findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,161 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,161 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,161 DEBUG findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,161 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,161 DEBUG findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,161 DEBUG findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,161 DEBUG findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,162 DEBUG findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,162 DEBUG findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,162 DEBUG findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,162 DEBUG findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,162 DEBUG findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,162 DEBUG findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,162 DEBUG findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,162 DEBUG findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,162 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,162 DEBUG findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,162 DEBUG findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,162 DEBUG findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2023-01-06 15:06:02,162 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,162 DEBUG findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,162 DEBUG findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,162 DEBUG findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,162 DEBUG findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,162 DEBUG findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,162 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,162 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,162 DEBUG findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,163 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,163 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,163 DEBUG findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,163 DEBUG findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,163 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,163 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,163 DEBUG findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,163 DEBUG findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,163 DEBUG findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,163 DEBUG findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,163 DEBUG findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,163 DEBUG findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,163 DEBUG findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2023-01-06 15:06:02,163 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,163 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,163 DEBUG findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,163 DEBUG findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,163 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,163 DEBUG findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,163 DEBUG findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,163 DEBUG findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,163 DEBUG findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,164 DEBUG findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,164 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,164 DEBUG findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,164 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,164 DEBUG findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,164 DEBUG findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,164 DEBUG findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,164 DEBUG findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,164 DEBUG findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,164 DEBUG findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,164 DEBUG findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,164 DEBUG findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,164 DEBUG findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,164 DEBUG findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,164 DEBUG findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,164 DEBUG findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,164 DEBUG findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,164 DEBUG findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,164 DEBUG findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2023-01-06 15:06:02,164 DEBUG findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,164 DEBUG findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,164 DEBUG findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,164 DEBUG findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,165 DEBUG findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,165 DEBUG findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,165 DEBUG findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,165 DEBUG findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,165 DEBUG findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,165 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,165 DEBUG findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,165 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,165 DEBUG findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,165 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,165 DEBUG findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,165 DEBUG findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,165 DEBUG findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,165 DEBUG findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,165 DEBUG findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,165 DEBUG findfont: Matching cmss10:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0 to cmss10 ('/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf') with score of 0.050000.
2023-01-06 15:06:02,166 DEBUG findfont: Matching cmex10:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0.
2023-01-06 15:06:02,166 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,166 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,166 DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,166 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,166 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,166 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,166 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,166 DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 0.05
2023-01-06 15:06:02,166 DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,166 DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,166 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-06 15:06:02,166 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,166 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,166 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,166 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,166 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-06 15:06:02,166 DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,166 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,167 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,167 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,167 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,167 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,167 DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,167 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-06 15:06:02,167 DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,167 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,167 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,167 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,167 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,167 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,167 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,167 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-06 15:06:02,167 DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,167 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,167 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,167 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,167 DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,167 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,167 DEBUG findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,167 DEBUG findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,168 DEBUG findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,168 DEBUG findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,168 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,168 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,168 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,168 DEBUG findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,168 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,168 DEBUG findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,168 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,168 DEBUG findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,168 DEBUG findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,168 DEBUG findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,168 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,168 DEBUG findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,168 DEBUG findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,168 DEBUG findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,168 DEBUG findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,168 DEBUG findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,168 DEBUG findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,168 DEBUG findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,168 DEBUG findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,168 DEBUG findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,169 DEBUG findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,169 DEBUG findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,169 DEBUG findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,169 DEBUG findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,169 DEBUG findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,169 DEBUG findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,169 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2023-01-06 15:06:02,169 DEBUG findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,169 DEBUG findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,169 DEBUG findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,169 DEBUG findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,169 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,169 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,169 DEBUG findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,169 DEBUG findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,169 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,169 DEBUG findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,169 DEBUG findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,169 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,169 DEBUG findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,169 DEBUG findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,169 DEBUG findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,169 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,170 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,170 DEBUG findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,170 DEBUG findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,170 DEBUG findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,170 DEBUG findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,170 DEBUG findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,170 DEBUG findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,170 DEBUG findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,170 DEBUG findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2023-01-06 15:06:02,170 DEBUG findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,170 DEBUG findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,170 DEBUG findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,170 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2023-01-06 15:06:02,170 DEBUG findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,170 DEBUG findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,170 DEBUG findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,170 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,170 DEBUG findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:02,170 DEBUG findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,170 DEBUG findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,170 DEBUG findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,170 DEBUG findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,171 DEBUG findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,171 DEBUG findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,171 DEBUG findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:02,171 DEBUG findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,171 DEBUG findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,171 DEBUG findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,171 DEBUG findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,171 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,171 DEBUG findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,171 DEBUG findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,171 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,171 DEBUG findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,171 DEBUG findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:02,171 DEBUG findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,171 DEBUG findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,171 DEBUG findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,171 DEBUG findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,171 DEBUG findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,172 DEBUG findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,172 DEBUG findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,172 DEBUG findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,172 DEBUG findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,172 DEBUG findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,172 DEBUG findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,172 DEBUG findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,172 DEBUG findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,172 DEBUG findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,172 DEBUG findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,172 DEBUG findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,172 DEBUG findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,172 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:02,172 DEBUG findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,172 DEBUG findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,172 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,172 DEBUG findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,172 DEBUG findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,173 DEBUG findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,173 DEBUG findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,173 DEBUG findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,173 DEBUG findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,173 DEBUG findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,173 DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,173 DEBUG findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,173 DEBUG findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,173 DEBUG findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,173 DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,173 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2023-01-06 15:06:02,173 DEBUG findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,173 DEBUG findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,173 DEBUG findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,173 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,173 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,173 DEBUG findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,173 DEBUG findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,173 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,173 DEBUG findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,173 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:02,173 DEBUG findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,174 DEBUG findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,174 DEBUG findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,174 DEBUG findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,174 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,174 DEBUG findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,174 DEBUG findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,174 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,174 DEBUG findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,174 DEBUG findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2023-01-06 15:06:02,174 DEBUG findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,174 DEBUG findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,174 DEBUG findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,174 DEBUG findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,174 DEBUG findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,174 DEBUG findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,174 DEBUG findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,174 DEBUG findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,174 DEBUG findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:02,174 DEBUG findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,174 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2023-01-06 15:06:02,174 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,174 DEBUG findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,175 DEBUG findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,175 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,175 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,175 DEBUG findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,175 DEBUG findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,175 DEBUG findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,175 DEBUG findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2023-01-06 15:06:02,175 DEBUG findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,175 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,175 DEBUG findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,175 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,175 DEBUG findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,175 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,175 DEBUG findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,175 DEBUG findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,175 DEBUG findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,175 DEBUG findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,175 DEBUG findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,175 DEBUG findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,175 DEBUG findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,175 DEBUG findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,175 DEBUG findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,176 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2023-01-06 15:06:02,176 DEBUG findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2023-01-06 15:06:02,176 DEBUG findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,176 DEBUG findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,176 DEBUG findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,176 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,176 DEBUG findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2023-01-06 15:06:02,176 DEBUG findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,176 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,176 DEBUG findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,176 DEBUG findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,176 DEBUG findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,176 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,176 DEBUG findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,176 DEBUG findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,176 DEBUG findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,176 DEBUG findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,176 DEBUG findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,176 DEBUG findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,176 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,176 DEBUG findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,177 DEBUG findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,177 DEBUG findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,177 DEBUG findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,177 DEBUG findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2023-01-06 15:06:02,177 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2023-01-06 15:06:02,177 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,177 DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,177 DEBUG findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,177 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2023-01-06 15:06:02,177 DEBUG findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,177 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,177 DEBUG findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,177 DEBUG findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,177 DEBUG findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,177 DEBUG findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,177 DEBUG findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,177 DEBUG findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,177 DEBUG findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,177 DEBUG findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,177 DEBUG findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,177 DEBUG findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,178 DEBUG findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,178 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2023-01-06 15:06:02,178 DEBUG findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,178 DEBUG findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,178 DEBUG findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,178 DEBUG findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,178 DEBUG findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,178 DEBUG findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,178 DEBUG findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,178 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2023-01-06 15:06:02,178 DEBUG findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,178 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2023-01-06 15:06:02,178 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,178 DEBUG findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,178 DEBUG findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,179 DEBUG findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,179 DEBUG findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,179 DEBUG findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,179 DEBUG findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,179 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,179 DEBUG findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,179 DEBUG findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,179 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,179 DEBUG findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,179 DEBUG findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,179 DEBUG findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,179 DEBUG findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,179 DEBUG findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,179 DEBUG findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,179 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,179 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,179 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,179 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2023-01-06 15:06:02,180 DEBUG findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,180 DEBUG findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,180 DEBUG findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,180 DEBUG findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,180 DEBUG findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,180 DEBUG findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,180 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,180 DEBUG findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,180 DEBUG findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,180 DEBUG findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,180 DEBUG findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,180 DEBUG findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,180 DEBUG findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,180 DEBUG findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,180 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,180 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,180 DEBUG findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,180 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,180 DEBUG findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,180 DEBUG findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,180 DEBUG findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,181 DEBUG findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,181 DEBUG findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,181 DEBUG findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,181 DEBUG findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,181 DEBUG findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,181 DEBUG findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,181 DEBUG findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,181 DEBUG findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,181 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,181 DEBUG findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,181 DEBUG findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,181 DEBUG findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2023-01-06 15:06:02,181 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,181 DEBUG findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,181 DEBUG findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,181 DEBUG findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,181 DEBUG findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,181 DEBUG findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,181 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,181 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,182 DEBUG findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,182 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,182 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,182 DEBUG findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,182 DEBUG findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,182 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,182 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,182 DEBUG findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,182 DEBUG findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,182 DEBUG findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,182 DEBUG findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,182 DEBUG findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,182 DEBUG findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,182 DEBUG findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2023-01-06 15:06:02,182 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,182 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,182 DEBUG findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,182 DEBUG findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,182 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,182 DEBUG findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,183 DEBUG findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,183 DEBUG findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,183 DEBUG findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,183 DEBUG findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,183 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,183 DEBUG findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,183 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,183 DEBUG findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,183 DEBUG findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,183 DEBUG findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,183 DEBUG findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,183 DEBUG findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,183 DEBUG findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,183 DEBUG findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,183 DEBUG findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,183 DEBUG findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,183 DEBUG findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,183 DEBUG findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,183 DEBUG findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,183 DEBUG findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,183 DEBUG findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,184 DEBUG findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2023-01-06 15:06:02,184 DEBUG findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,184 DEBUG findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,184 DEBUG findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,184 DEBUG findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,184 DEBUG findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,184 DEBUG findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,184 DEBUG findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,184 DEBUG findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,184 DEBUG findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,184 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,184 DEBUG findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,184 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,184 DEBUG findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,184 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,184 DEBUG findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,184 DEBUG findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,184 DEBUG findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,184 DEBUG findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,184 DEBUG findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,184 DEBUG findfont: Matching cmex10:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0 to cmex10 ('/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf') with score of 0.050000.
2023-01-06 15:06:02,185 DEBUG findfont: Matching DejaVu Sans:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0.
2023-01-06 15:06:02,185 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,185 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,185 DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,185 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,186 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,186 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2023-01-06 15:06:02,186 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,186 DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,186 DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,186 DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,186 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2023-01-06 15:06:02,186 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,186 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,186 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,186 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,186 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-06 15:06:02,186 DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,186 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,186 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,186 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,186 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,186 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,186 DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,186 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-06 15:06:02,187 DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,187 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,187 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,187 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,187 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,187 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,187 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,187 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2023-01-06 15:06:02,187 DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,187 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2023-01-06 15:06:02,187 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,187 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,187 DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,187 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,187 DEBUG findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,187 DEBUG findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,188 DEBUG findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,188 DEBUG findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,188 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,188 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,188 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,188 DEBUG findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,188 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,188 DEBUG findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,188 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,188 DEBUG findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,188 DEBUG findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,188 DEBUG findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,188 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,188 DEBUG findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,188 DEBUG findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,188 DEBUG findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,188 DEBUG findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,189 DEBUG findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,189 DEBUG findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,189 DEBUG findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,189 DEBUG findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,189 DEBUG findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,189 DEBUG findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,189 DEBUG findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,189 DEBUG findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,189 DEBUG findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,189 DEBUG findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,189 DEBUG findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,189 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2023-01-06 15:06:02,189 DEBUG findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,189 DEBUG findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,189 DEBUG findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,189 DEBUG findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,189 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,189 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,189 DEBUG findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,189 DEBUG findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,189 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,190 DEBUG findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,190 DEBUG findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,190 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,190 DEBUG findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,190 DEBUG findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,190 DEBUG findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,190 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,190 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,190 DEBUG findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,190 DEBUG findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,190 DEBUG findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,190 DEBUG findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,190 DEBUG findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,190 DEBUG findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,190 DEBUG findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,190 DEBUG findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2023-01-06 15:06:02,190 DEBUG findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,191 DEBUG findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,191 DEBUG findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,191 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2023-01-06 15:06:02,191 DEBUG findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,191 DEBUG findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,191 DEBUG findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,191 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,191 DEBUG findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:02,191 DEBUG findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,191 DEBUG findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,191 DEBUG findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,191 DEBUG findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,191 DEBUG findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,191 DEBUG findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,191 DEBUG findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:02,191 DEBUG findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,191 DEBUG findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,191 DEBUG findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,191 DEBUG findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,191 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,191 DEBUG findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,192 DEBUG findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,192 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,192 DEBUG findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,192 DEBUG findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:02,192 DEBUG findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,192 DEBUG findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,192 DEBUG findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,192 DEBUG findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,192 DEBUG findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,192 DEBUG findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,192 DEBUG findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,192 DEBUG findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,192 DEBUG findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,192 DEBUG findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,192 DEBUG findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,192 DEBUG findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,192 DEBUG findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,192 DEBUG findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,192 DEBUG findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,192 DEBUG findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,192 DEBUG findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,192 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:02,193 DEBUG findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,193 DEBUG findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,193 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,193 DEBUG findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,193 DEBUG findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,193 DEBUG findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,193 DEBUG findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,193 DEBUG findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,193 DEBUG findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,193 DEBUG findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,193 DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,193 DEBUG findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,193 DEBUG findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,193 DEBUG findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,193 DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,193 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2023-01-06 15:06:02,193 DEBUG findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,193 DEBUG findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,193 DEBUG findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,193 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,193 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,193 DEBUG findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,194 DEBUG findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,194 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,194 DEBUG findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,194 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:02,194 DEBUG findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,194 DEBUG findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,194 DEBUG findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,194 DEBUG findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,194 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,194 DEBUG findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,194 DEBUG findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,194 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,194 DEBUG findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,194 DEBUG findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2023-01-06 15:06:02,194 DEBUG findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,194 DEBUG findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,194 DEBUG findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,194 DEBUG findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,194 DEBUG findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,194 DEBUG findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,194 DEBUG findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,194 DEBUG findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,195 DEBUG findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:02,195 DEBUG findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,195 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2023-01-06 15:06:02,195 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,195 DEBUG findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,195 DEBUG findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,195 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,195 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,195 DEBUG findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,195 DEBUG findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,195 DEBUG findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,195 DEBUG findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2023-01-06 15:06:02,195 DEBUG findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,195 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,195 DEBUG findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,195 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,195 DEBUG findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,195 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,195 DEBUG findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,195 DEBUG findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,196 DEBUG findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,196 DEBUG findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,196 DEBUG findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,196 DEBUG findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,196 DEBUG findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,196 DEBUG findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,196 DEBUG findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,196 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2023-01-06 15:06:02,196 DEBUG findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2023-01-06 15:06:02,196 DEBUG findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,196 DEBUG findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,196 DEBUG findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,196 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,196 DEBUG findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2023-01-06 15:06:02,196 DEBUG findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,196 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,196 DEBUG findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,196 DEBUG findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,196 DEBUG findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,196 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,197 DEBUG findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,197 DEBUG findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,197 DEBUG findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,197 DEBUG findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,197 DEBUG findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,197 DEBUG findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,197 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,197 DEBUG findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,197 DEBUG findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,197 DEBUG findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,197 DEBUG findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,197 DEBUG findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2023-01-06 15:06:02,197 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2023-01-06 15:06:02,197 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,197 DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,197 DEBUG findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,197 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2023-01-06 15:06:02,198 DEBUG findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,198 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,198 DEBUG findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,198 DEBUG findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,198 DEBUG findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,198 DEBUG findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,198 DEBUG findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,198 DEBUG findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,198 DEBUG findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,198 DEBUG findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,199 DEBUG findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,199 DEBUG findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,199 DEBUG findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,199 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2023-01-06 15:06:02,199 DEBUG findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,199 DEBUG findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,199 DEBUG findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,199 DEBUG findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,199 DEBUG findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,199 DEBUG findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,199 DEBUG findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,199 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2023-01-06 15:06:02,199 DEBUG findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,199 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2023-01-06 15:06:02,199 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,199 DEBUG findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,200 DEBUG findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,200 DEBUG findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,200 DEBUG findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,200 DEBUG findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,200 DEBUG findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,200 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,200 DEBUG findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,200 DEBUG findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,200 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,200 DEBUG findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,200 DEBUG findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,200 DEBUG findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,200 DEBUG findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,200 DEBUG findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,200 DEBUG findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,200 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,200 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,201 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,201 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2023-01-06 15:06:02,201 DEBUG findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,201 DEBUG findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,201 DEBUG findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,201 DEBUG findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,201 DEBUG findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,201 DEBUG findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,201 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,201 DEBUG findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,201 DEBUG findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,201 DEBUG findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,201 DEBUG findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,201 DEBUG findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,201 DEBUG findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,201 DEBUG findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,201 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,201 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,201 DEBUG findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,201 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,202 DEBUG findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,202 DEBUG findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,202 DEBUG findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,202 DEBUG findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,202 DEBUG findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,202 DEBUG findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,202 DEBUG findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,202 DEBUG findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,202 DEBUG findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,202 DEBUG findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,202 DEBUG findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,202 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,202 DEBUG findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,202 DEBUG findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,202 DEBUG findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2023-01-06 15:06:02,202 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,202 DEBUG findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,202 DEBUG findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,202 DEBUG findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,202 DEBUG findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,202 DEBUG findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,203 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,203 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,203 DEBUG findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,203 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,203 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,203 DEBUG findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,203 DEBUG findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,203 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,203 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,203 DEBUG findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,203 DEBUG findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,203 DEBUG findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,203 DEBUG findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,203 DEBUG findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,203 DEBUG findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,203 DEBUG findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2023-01-06 15:06:02,203 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,203 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,203 DEBUG findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,203 DEBUG findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,203 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,204 DEBUG findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,204 DEBUG findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,204 DEBUG findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,204 DEBUG findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,204 DEBUG findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,204 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,204 DEBUG findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,204 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,204 DEBUG findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,204 DEBUG findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,204 DEBUG findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,204 DEBUG findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,204 DEBUG findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,204 DEBUG findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,204 DEBUG findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,204 DEBUG findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,204 DEBUG findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,204 DEBUG findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,204 DEBUG findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,204 DEBUG findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,205 DEBUG findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,205 DEBUG findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,205 DEBUG findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2023-01-06 15:06:02,205 DEBUG findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,205 DEBUG findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,205 DEBUG findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,205 DEBUG findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,205 DEBUG findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,205 DEBUG findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,205 DEBUG findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,205 DEBUG findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,205 DEBUG findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,205 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,205 DEBUG findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,205 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,205 DEBUG findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,205 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,205 DEBUG findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,205 DEBUG findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,205 DEBUG findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,206 DEBUG findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,206 DEBUG findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,206 DEBUG findfont: Matching DejaVu Sans:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0 to DejaVu Sans ('/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2023-01-06 15:06:02,206 DEBUG findfont: Matching DejaVu Sans:style=italic:variant=normal:weight=normal:stretch=normal:size=18.0.
2023-01-06 15:06:02,207 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:02,207 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:02,207 DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,207 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 10.335
2023-01-06 15:06:02,207 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,207 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 1.335
2023-01-06 15:06:02,207 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:02,207 DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,207 DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,207 DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,207 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 0.15000000000000002
2023-01-06 15:06:02,207 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,207 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:02,207 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 10.05
2023-01-06 15:06:02,207 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 10.335
2023-01-06 15:06:02,207 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-01-06 15:06:02,207 DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,207 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 10.05
2023-01-06 15:06:02,207 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,207 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,208 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:02,208 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,208 DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,208 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-01-06 15:06:02,208 DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,208 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,208 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 10.05
2023-01-06 15:06:02,208 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,208 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,208 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:02,208 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:02,208 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 0.43499999999999994
2023-01-06 15:06:02,208 DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,208 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 1.05
2023-01-06 15:06:02,208 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-01-06 15:06:02,208 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,208 DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,208 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:02,208 DEBUG findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,208 DEBUG findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 11.335
2023-01-06 15:06:02,208 DEBUG findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,209 DEBUG findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,209 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,209 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,209 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:02,209 DEBUG findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,209 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 10.335
2023-01-06 15:06:02,209 DEBUG findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,209 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 10.335
2023-01-06 15:06:02,209 DEBUG findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 11.525
2023-01-06 15:06:02,209 DEBUG findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,209 DEBUG findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 10.335
2023-01-06 15:06:02,209 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,209 DEBUG findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,209 DEBUG findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,209 DEBUG findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,209 DEBUG findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,209 DEBUG findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,209 DEBUG findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,209 DEBUG findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,209 DEBUG findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,210 DEBUG findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,210 DEBUG findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,210 DEBUG findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,210 DEBUG findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,210 DEBUG findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,210 DEBUG findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,210 DEBUG findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,210 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 11.14975
2023-01-06 15:06:02,210 DEBUG findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,210 DEBUG findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,210 DEBUG findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,210 DEBUG findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,210 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,210 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 10.05
2023-01-06 15:06:02,210 DEBUG findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,210 DEBUG findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,210 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:02,210 DEBUG findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,210 DEBUG findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,210 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 11.335
2023-01-06 15:06:02,210 DEBUG findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,210 DEBUG findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,211 DEBUG findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,211 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,211 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:02,211 DEBUG findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,211 DEBUG findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,211 DEBUG findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,211 DEBUG findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,211 DEBUG findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,211 DEBUG findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:02,211 DEBUG findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,211 DEBUG findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 11.43
2023-01-06 15:06:02,211 DEBUG findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,211 DEBUG findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,211 DEBUG findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,211 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 10.14975
2023-01-06 15:06:02,211 DEBUG findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,211 DEBUG findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,211 DEBUG findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,211 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,211 DEBUG findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 11.145
2023-01-06 15:06:02,211 DEBUG findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,211 DEBUG findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,212 DEBUG findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,212 DEBUG findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,212 DEBUG findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,212 DEBUG findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 10.05
2023-01-06 15:06:02,212 DEBUG findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 11.145
2023-01-06 15:06:02,212 DEBUG findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,212 DEBUG findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,212 DEBUG findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 11.525
2023-01-06 15:06:02,212 DEBUG findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,212 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,212 DEBUG findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,212 DEBUG findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,212 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,212 DEBUG findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,212 DEBUG findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 11.145
2023-01-06 15:06:02,212 DEBUG findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,212 DEBUG findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,212 DEBUG findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,212 DEBUG findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 10.05
2023-01-06 15:06:02,212 DEBUG findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,212 DEBUG findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,212 DEBUG findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,213 DEBUG findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,213 DEBUG findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,213 DEBUG findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,213 DEBUG findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,213 DEBUG findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,213 DEBUG findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 11.145
2023-01-06 15:06:02,213 DEBUG findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,213 DEBUG findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,213 DEBUG findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,213 DEBUG findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,213 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 11.145
2023-01-06 15:06:02,213 DEBUG findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,213 DEBUG findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,213 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 11.525
2023-01-06 15:06:02,213 DEBUG findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,213 DEBUG findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,213 DEBUG findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,213 DEBUG findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,213 DEBUG findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,213 DEBUG findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,213 DEBUG findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,214 DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,214 DEBUG findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 10.05
2023-01-06 15:06:02,214 DEBUG findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,214 DEBUG findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,214 DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,214 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 10.535
2023-01-06 15:06:02,214 DEBUG findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,214 DEBUG findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,214 DEBUG findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,214 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,214 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:02,214 DEBUG findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,214 DEBUG findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,214 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,214 DEBUG findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,214 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 11.145
2023-01-06 15:06:02,214 DEBUG findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,214 DEBUG findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,214 DEBUG findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,214 DEBUG findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,214 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:02,214 DEBUG findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,215 DEBUG findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,215 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,215 DEBUG findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,215 DEBUG findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 11.42525
2023-01-06 15:06:02,215 DEBUG findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,215 DEBUG findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,215 DEBUG findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,215 DEBUG findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,215 DEBUG findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,215 DEBUG findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,215 DEBUG findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,215 DEBUG findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 11.335
2023-01-06 15:06:02,215 DEBUG findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 11.145
2023-01-06 15:06:02,215 DEBUG findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,215 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 11.43
2023-01-06 15:06:02,215 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:02,215 DEBUG findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,215 DEBUG findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,215 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 10.335
2023-01-06 15:06:02,215 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,215 DEBUG findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,216 DEBUG findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,216 DEBUG findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,216 DEBUG findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 11.25
2023-01-06 15:06:02,216 DEBUG findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,216 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,216 DEBUG findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 10.05
2023-01-06 15:06:02,216 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:02,216 DEBUG findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 10.05
2023-01-06 15:06:02,216 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,216 DEBUG findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,216 DEBUG findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,216 DEBUG findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,216 DEBUG findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,216 DEBUG findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:02,216 DEBUG findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 10.05
2023-01-06 15:06:02,216 DEBUG findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 11.335
2023-01-06 15:06:02,216 DEBUG findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 11.525
2023-01-06 15:06:02,216 DEBUG findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 11.335
2023-01-06 15:06:02,216 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 11.1925
2023-01-06 15:06:02,216 DEBUG findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 11.535
2023-01-06 15:06:02,216 DEBUG findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,216 DEBUG findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,217 DEBUG findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,217 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 10.05
2023-01-06 15:06:02,217 DEBUG findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 11.62
2023-01-06 15:06:02,217 DEBUG findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,217 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,217 DEBUG findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,217 DEBUG findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,217 DEBUG findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,217 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:02,217 DEBUG findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:02,217 DEBUG findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,217 DEBUG findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 11.525
2023-01-06 15:06:02,217 DEBUG findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,217 DEBUG findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,217 DEBUG findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,217 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:02,217 DEBUG findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,217 DEBUG findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,217 DEBUG findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,217 DEBUG findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,217 DEBUG findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 11.535
2023-01-06 15:06:02,217 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 11.25
2023-01-06 15:06:02,217 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,218 DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 11.525
2023-01-06 15:06:02,218 DEBUG findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,218 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 11.24
2023-01-06 15:06:02,218 DEBUG findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,218 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:02,218 DEBUG findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,218 DEBUG findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,218 DEBUG findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,218 DEBUG findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,218 DEBUG findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,218 DEBUG findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,218 DEBUG findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,218 DEBUG findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 10.05
2023-01-06 15:06:02,218 DEBUG findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,218 DEBUG findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,218 DEBUG findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,218 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 11.24
2023-01-06 15:06:02,218 DEBUG findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,218 DEBUG findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,218 DEBUG findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,218 DEBUG findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,218 DEBUG findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,219 DEBUG findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,219 DEBUG findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,219 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 11.335
2023-01-06 15:06:02,219 DEBUG findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,219 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 11.535
2023-01-06 15:06:02,219 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:02,219 DEBUG findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,219 DEBUG findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,219 DEBUG findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,219 DEBUG findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,219 DEBUG findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,219 DEBUG findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,219 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,219 DEBUG findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,219 DEBUG findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 11.145
2023-01-06 15:06:02,219 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,219 DEBUG findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,219 DEBUG findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,219 DEBUG findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,219 DEBUG findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,219 DEBUG findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,219 DEBUG findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,220 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,220 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 10.05
2023-01-06 15:06:02,220 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,220 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 10.25
2023-01-06 15:06:02,220 DEBUG findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:02,220 DEBUG findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,220 DEBUG findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,220 DEBUG findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,220 DEBUG findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,220 DEBUG findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,220 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 10.335
2023-01-06 15:06:02,220 DEBUG findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,220 DEBUG findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,220 DEBUG findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 11.145
2023-01-06 15:06:02,220 DEBUG findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,220 DEBUG findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,220 DEBUG findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,220 DEBUG findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,220 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 11.145
2023-01-06 15:06:02,220 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,220 DEBUG findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,220 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,221 DEBUG findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,221 DEBUG findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,221 DEBUG findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,221 DEBUG findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,221 DEBUG findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,221 DEBUG findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,221 DEBUG findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,221 DEBUG findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,221 DEBUG findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,221 DEBUG findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,221 DEBUG findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,221 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,221 DEBUG findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,221 DEBUG findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,221 DEBUG findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 11.335
2023-01-06 15:06:02,221 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,221 DEBUG findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 10.05
2023-01-06 15:06:02,221 DEBUG findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,221 DEBUG findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,221 DEBUG findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,221 DEBUG findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,221 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:02,222 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 10.335
2023-01-06 15:06:02,222 DEBUG findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,222 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,222 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:02,222 DEBUG findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,222 DEBUG findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,222 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 10.05
2023-01-06 15:06:02,222 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:02,222 DEBUG findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,222 DEBUG findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,222 DEBUG findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:02,222 DEBUG findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,222 DEBUG findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,222 DEBUG findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,222 DEBUG findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 10.62
2023-01-06 15:06:02,222 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,222 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,222 DEBUG findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,222 DEBUG findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,222 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:02,222 DEBUG findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,222 DEBUG findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,223 DEBUG findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,223 DEBUG findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,223 DEBUG findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,223 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:02,223 DEBUG findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,223 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 10.335
2023-01-06 15:06:02,223 DEBUG findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,223 DEBUG findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,223 DEBUG findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 11.145
2023-01-06 15:06:02,223 DEBUG findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,223 DEBUG findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,223 DEBUG findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,223 DEBUG findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,223 DEBUG findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 11.145
2023-01-06 15:06:02,223 DEBUG findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,223 DEBUG findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,223 DEBUG findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,223 DEBUG findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 11.145
2023-01-06 15:06:02,223 DEBUG findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 11.525
2023-01-06 15:06:02,223 DEBUG findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,223 DEBUG findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 11.1925
2023-01-06 15:06:02,223 DEBUG findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,223 DEBUG findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,224 DEBUG findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,224 DEBUG findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,224 DEBUG findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,224 DEBUG findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,224 DEBUG findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,224 DEBUG findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,224 DEBUG findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,224 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 10.335
2023-01-06 15:06:02,224 DEBUG findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,224 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,224 DEBUG findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,224 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-06 15:06:02,224 DEBUG findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 11.525
2023-01-06 15:06:02,224 DEBUG findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,224 DEBUG findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,224 DEBUG findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,224 DEBUG findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 11.05
2023-01-06 15:06:02,224 DEBUG findfont: Matching DejaVu Sans:style=italic:variant=normal:weight=normal:stretch=normal:size=18.0 to DejaVu Sans ('/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf') with score of 0.150000.
2023-01-06 15:06:02,225 DEBUG findfont: Matching DejaVu Sans:style=normal:variant=normal:weight=bold:stretch=normal:size=18.0.
2023-01-06 15:06:02,225 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:02,225 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:02,225 DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,225 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.05
2023-01-06 15:06:02,225 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,225 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.05
2023-01-06 15:06:02,225 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:02,225 DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,225 DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,225 DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,225 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.335
2023-01-06 15:06:02,226 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,226 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:02,226 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.335
2023-01-06 15:06:02,226 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.05
2023-01-06 15:06:02,226 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-01-06 15:06:02,226 DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,226 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.335
2023-01-06 15:06:02,226 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,226 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,226 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:02,226 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,226 DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,226 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-01-06 15:06:02,226 DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,226 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,226 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.335
2023-01-06 15:06:02,226 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,226 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,226 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:02,226 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:02,227 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.05
2023-01-06 15:06:02,227 DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,227 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.33499999999999996
2023-01-06 15:06:02,227 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-01-06 15:06:02,227 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,227 DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,227 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:02,227 DEBUG findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,227 DEBUG findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.05
2023-01-06 15:06:02,227 DEBUG findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,227 DEBUG findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,227 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,227 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,227 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:02,227 DEBUG findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,227 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 11.05
2023-01-06 15:06:02,227 DEBUG findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,227 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.05
2023-01-06 15:06:02,227 DEBUG findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.24
2023-01-06 15:06:02,227 DEBUG findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,227 DEBUG findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 11.05
2023-01-06 15:06:02,228 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,228 DEBUG findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,228 DEBUG findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,228 DEBUG findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,228 DEBUG findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,228 DEBUG findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,228 DEBUG findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,228 DEBUG findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,228 DEBUG findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,228 DEBUG findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,228 DEBUG findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,228 DEBUG findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,228 DEBUG findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,228 DEBUG findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,228 DEBUG findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,228 DEBUG findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,228 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.43475
2023-01-06 15:06:02,228 DEBUG findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,228 DEBUG findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,229 DEBUG findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,229 DEBUG findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,229 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,229 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.335
2023-01-06 15:06:02,229 DEBUG findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,229 DEBUG findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,229 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:02,229 DEBUG findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,229 DEBUG findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,229 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.05
2023-01-06 15:06:02,229 DEBUG findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,229 DEBUG findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,229 DEBUG findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,229 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,229 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:02,229 DEBUG findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,229 DEBUG findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,229 DEBUG findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,230 DEBUG findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,230 DEBUG findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,230 DEBUG findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:02,230 DEBUG findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,230 DEBUG findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.715
2023-01-06 15:06:02,230 DEBUG findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,230 DEBUG findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,230 DEBUG findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,230 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.43475
2023-01-06 15:06:02,230 DEBUG findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,230 DEBUG findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,230 DEBUG findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,230 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,230 DEBUG findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.43
2023-01-06 15:06:02,230 DEBUG findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,230 DEBUG findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,230 DEBUG findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,230 DEBUG findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,230 DEBUG findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,231 DEBUG findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.335
2023-01-06 15:06:02,231 DEBUG findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.43
2023-01-06 15:06:02,231 DEBUG findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,231 DEBUG findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,231 DEBUG findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.24
2023-01-06 15:06:02,231 DEBUG findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,231 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,231 DEBUG findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,231 DEBUG findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,231 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,231 DEBUG findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,231 DEBUG findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.43
2023-01-06 15:06:02,231 DEBUG findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,231 DEBUG findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,231 DEBUG findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,231 DEBUG findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.335
2023-01-06 15:06:02,231 DEBUG findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,231 DEBUG findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,231 DEBUG findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,231 DEBUG findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,231 DEBUG findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,231 DEBUG findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,232 DEBUG findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,232 DEBUG findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,232 DEBUG findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.24
2023-01-06 15:06:02,232 DEBUG findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,232 DEBUG findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,232 DEBUG findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,232 DEBUG findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,232 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.43
2023-01-06 15:06:02,232 DEBUG findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,232 DEBUG findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,232 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.24
2023-01-06 15:06:02,232 DEBUG findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,232 DEBUG findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,232 DEBUG findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,232 DEBUG findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,232 DEBUG findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,232 DEBUG findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,232 DEBUG findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,232 DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,232 DEBUG findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.335
2023-01-06 15:06:02,232 DEBUG findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,233 DEBUG findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,233 DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,233 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.25
2023-01-06 15:06:02,233 DEBUG findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,233 DEBUG findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,233 DEBUG findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,233 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,233 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:02,233 DEBUG findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,233 DEBUG findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,233 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,233 DEBUG findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,233 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.43
2023-01-06 15:06:02,233 DEBUG findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,233 DEBUG findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,233 DEBUG findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,233 DEBUG findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,233 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:02,233 DEBUG findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,233 DEBUG findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,233 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,234 DEBUG findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,234 DEBUG findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.71025
2023-01-06 15:06:02,234 DEBUG findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,234 DEBUG findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,234 DEBUG findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,234 DEBUG findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,234 DEBUG findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,234 DEBUG findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,234 DEBUG findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,234 DEBUG findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.05
2023-01-06 15:06:02,234 DEBUG findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.43
2023-01-06 15:06:02,234 DEBUG findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,234 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.145
2023-01-06 15:06:02,234 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:02,234 DEBUG findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,234 DEBUG findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,234 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.05
2023-01-06 15:06:02,234 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,234 DEBUG findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,234 DEBUG findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,234 DEBUG findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,235 DEBUG findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.535
2023-01-06 15:06:02,235 DEBUG findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,235 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,235 DEBUG findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.335
2023-01-06 15:06:02,235 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:02,235 DEBUG findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 11.335
2023-01-06 15:06:02,235 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,235 DEBUG findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,235 DEBUG findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,235 DEBUG findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,235 DEBUG findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,235 DEBUG findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:02,235 DEBUG findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.335
2023-01-06 15:06:02,235 DEBUG findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.05
2023-01-06 15:06:02,235 DEBUG findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.24
2023-01-06 15:06:02,235 DEBUG findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.05
2023-01-06 15:06:02,235 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.4775
2023-01-06 15:06:02,235 DEBUG findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.25
2023-01-06 15:06:02,235 DEBUG findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,235 DEBUG findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,235 DEBUG findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,236 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.335
2023-01-06 15:06:02,236 DEBUG findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.335
2023-01-06 15:06:02,236 DEBUG findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,236 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,236 DEBUG findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,236 DEBUG findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,236 DEBUG findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,236 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:02,236 DEBUG findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:02,236 DEBUG findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,236 DEBUG findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.24
2023-01-06 15:06:02,236 DEBUG findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,236 DEBUG findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,236 DEBUG findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,236 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:02,236 DEBUG findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,236 DEBUG findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,236 DEBUG findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,236 DEBUG findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,236 DEBUG findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.25
2023-01-06 15:06:02,237 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.535
2023-01-06 15:06:02,237 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,237 DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.24
2023-01-06 15:06:02,237 DEBUG findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,237 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.145
2023-01-06 15:06:02,237 DEBUG findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,237 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:02,237 DEBUG findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,237 DEBUG findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,237 DEBUG findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,237 DEBUG findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,237 DEBUG findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,237 DEBUG findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,237 DEBUG findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,237 DEBUG findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.335
2023-01-06 15:06:02,237 DEBUG findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,237 DEBUG findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,237 DEBUG findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,237 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.525
2023-01-06 15:06:02,237 DEBUG findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,237 DEBUG findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,237 DEBUG findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,238 DEBUG findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,238 DEBUG findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,238 DEBUG findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,238 DEBUG findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,238 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.62
2023-01-06 15:06:02,238 DEBUG findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,238 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.25
2023-01-06 15:06:02,238 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:02,238 DEBUG findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,238 DEBUG findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,238 DEBUG findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,238 DEBUG findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,238 DEBUG findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,238 DEBUG findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,238 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,238 DEBUG findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,238 DEBUG findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.24
2023-01-06 15:06:02,238 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,239 DEBUG findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,239 DEBUG findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,239 DEBUG findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,239 DEBUG findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,239 DEBUG findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,239 DEBUG findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,239 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,239 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.335
2023-01-06 15:06:02,239 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,239 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.535
2023-01-06 15:06:02,239 DEBUG findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:02,239 DEBUG findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,239 DEBUG findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,239 DEBUG findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,240 DEBUG findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,240 DEBUG findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,240 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.05
2023-01-06 15:06:02,240 DEBUG findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,240 DEBUG findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,240 DEBUG findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.24
2023-01-06 15:06:02,240 DEBUG findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,240 DEBUG findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,240 DEBUG findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,240 DEBUG findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,240 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.24
2023-01-06 15:06:02,240 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,240 DEBUG findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,240 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,240 DEBUG findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,240 DEBUG findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,240 DEBUG findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,240 DEBUG findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,241 DEBUG findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,241 DEBUG findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,241 DEBUG findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,241 DEBUG findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,241 DEBUG findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,241 DEBUG findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,241 DEBUG findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,241 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,241 DEBUG findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,241 DEBUG findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,241 DEBUG findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.62
2023-01-06 15:06:02,241 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,241 DEBUG findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 11.335
2023-01-06 15:06:02,241 DEBUG findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,241 DEBUG findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,241 DEBUG findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,241 DEBUG findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,241 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:02,242 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.05
2023-01-06 15:06:02,242 DEBUG findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,242 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,242 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:02,242 DEBUG findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,242 DEBUG findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,242 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.335
2023-01-06 15:06:02,242 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:02,242 DEBUG findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,242 DEBUG findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,242 DEBUG findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:02,242 DEBUG findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,242 DEBUG findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,242 DEBUG findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,242 DEBUG findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.335
2023-01-06 15:06:02,242 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,242 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,243 DEBUG findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,243 DEBUG findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,243 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:02,243 DEBUG findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,243 DEBUG findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,243 DEBUG findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,243 DEBUG findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,243 DEBUG findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,243 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:02,243 DEBUG findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,243 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.05
2023-01-06 15:06:02,243 DEBUG findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,243 DEBUG findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,243 DEBUG findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 10.24
2023-01-06 15:06:02,243 DEBUG findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,243 DEBUG findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,243 DEBUG findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,243 DEBUG findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,243 DEBUG findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.24
2023-01-06 15:06:02,243 DEBUG findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,243 DEBUG findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,243 DEBUG findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,244 DEBUG findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.24
2023-01-06 15:06:02,244 DEBUG findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.24
2023-01-06 15:06:02,244 DEBUG findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,244 DEBUG findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.4775
2023-01-06 15:06:02,244 DEBUG findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,244 DEBUG findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,244 DEBUG findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,244 DEBUG findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,244 DEBUG findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,244 DEBUG findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,244 DEBUG findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,244 DEBUG findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,244 DEBUG findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,244 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.05
2023-01-06 15:06:02,244 DEBUG findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,244 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,244 DEBUG findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,244 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-06 15:06:02,244 DEBUG findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.24
2023-01-06 15:06:02,244 DEBUG findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,244 DEBUG findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,244 DEBUG findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,245 DEBUG findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.335
2023-01-06 15:06:02,245 DEBUG findfont: Matching DejaVu Sans:style=normal:variant=normal:weight=bold:stretch=normal:size=18.0 to DejaVu Sans ('/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf') with score of 0.050000.
2023-01-06 15:06:02,245 DEBUG findfont: Matching DejaVu Sans Mono:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0.
2023-01-06 15:06:02,245 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,245 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,245 DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,245 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,245 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,245 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,245 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,246 DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,246 DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,246 DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,246 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-06 15:06:02,246 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,246 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,246 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,246 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,246 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 1.05
2023-01-06 15:06:02,246 DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,246 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,246 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,246 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,246 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,246 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,246 DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,246 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2023-01-06 15:06:02,246 DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,246 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,246 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,246 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,246 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,247 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,247 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,247 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-06 15:06:02,247 DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,247 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,247 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,247 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 0.05
2023-01-06 15:06:02,247 DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,247 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2023-01-06 15:06:02,247 DEBUG findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,247 DEBUG findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,247 DEBUG findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,247 DEBUG findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,247 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,247 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,247 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,247 DEBUG findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,247 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,247 DEBUG findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,247 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,248 DEBUG findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,248 DEBUG findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,248 DEBUG findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,248 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,248 DEBUG findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,248 DEBUG findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,248 DEBUG findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,248 DEBUG findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,248 DEBUG findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,248 DEBUG findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,248 DEBUG findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,248 DEBUG findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,248 DEBUG findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,248 DEBUG findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,248 DEBUG findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,248 DEBUG findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,248 DEBUG findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,248 DEBUG findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,248 DEBUG findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,248 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2023-01-06 15:06:02,248 DEBUG findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,249 DEBUG findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,249 DEBUG findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,249 DEBUG findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,249 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,249 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,249 DEBUG findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,249 DEBUG findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,249 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,249 DEBUG findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,249 DEBUG findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,249 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,249 DEBUG findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,249 DEBUG findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,249 DEBUG findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,249 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,249 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,249 DEBUG findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,249 DEBUG findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,249 DEBUG findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,249 DEBUG findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,249 DEBUG findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,250 DEBUG findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,250 DEBUG findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,250 DEBUG findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2023-01-06 15:06:02,250 DEBUG findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,250 DEBUG findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,250 DEBUG findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,250 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2023-01-06 15:06:02,250 DEBUG findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,250 DEBUG findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,250 DEBUG findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,250 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,250 DEBUG findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:02,250 DEBUG findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,250 DEBUG findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,250 DEBUG findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,250 DEBUG findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,250 DEBUG findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,250 DEBUG findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,250 DEBUG findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:02,250 DEBUG findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,251 DEBUG findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,251 DEBUG findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,251 DEBUG findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,251 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,251 DEBUG findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,251 DEBUG findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,251 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,251 DEBUG findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,251 DEBUG findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:02,251 DEBUG findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,251 DEBUG findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,251 DEBUG findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,251 DEBUG findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,251 DEBUG findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,251 DEBUG findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,251 DEBUG findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,251 DEBUG findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,251 DEBUG findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,251 DEBUG findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,251 DEBUG findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,252 DEBUG findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,252 DEBUG findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,252 DEBUG findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,252 DEBUG findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,252 DEBUG findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,252 DEBUG findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,252 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:02,252 DEBUG findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,252 DEBUG findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,252 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,252 DEBUG findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,252 DEBUG findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,252 DEBUG findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,252 DEBUG findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,252 DEBUG findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,252 DEBUG findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,252 DEBUG findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,252 DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,252 DEBUG findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,252 DEBUG findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,252 DEBUG findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,253 DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,253 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2023-01-06 15:06:02,253 DEBUG findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,253 DEBUG findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,253 DEBUG findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,253 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,253 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,253 DEBUG findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,253 DEBUG findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,253 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,253 DEBUG findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,253 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:02,253 DEBUG findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,253 DEBUG findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,253 DEBUG findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,253 DEBUG findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,253 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,253 DEBUG findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,253 DEBUG findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,253 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,253 DEBUG findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,254 DEBUG findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2023-01-06 15:06:02,254 DEBUG findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,254 DEBUG findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,254 DEBUG findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,254 DEBUG findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,254 DEBUG findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,254 DEBUG findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,254 DEBUG findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,254 DEBUG findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,254 DEBUG findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:02,254 DEBUG findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,254 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2023-01-06 15:06:02,254 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,254 DEBUG findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,254 DEBUG findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,254 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,254 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,254 DEBUG findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,254 DEBUG findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,254 DEBUG findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,254 DEBUG findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2023-01-06 15:06:02,255 DEBUG findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,255 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,255 DEBUG findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,255 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,255 DEBUG findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,255 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,255 DEBUG findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,255 DEBUG findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,255 DEBUG findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,255 DEBUG findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,255 DEBUG findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,255 DEBUG findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,255 DEBUG findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,255 DEBUG findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,255 DEBUG findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,255 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2023-01-06 15:06:02,255 DEBUG findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2023-01-06 15:06:02,255 DEBUG findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,255 DEBUG findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,255 DEBUG findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,256 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,256 DEBUG findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2023-01-06 15:06:02,256 DEBUG findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,256 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,256 DEBUG findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,256 DEBUG findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,256 DEBUG findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,256 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,256 DEBUG findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,256 DEBUG findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,256 DEBUG findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,256 DEBUG findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,256 DEBUG findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,256 DEBUG findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,256 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,256 DEBUG findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,256 DEBUG findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,256 DEBUG findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,256 DEBUG findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,256 DEBUG findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2023-01-06 15:06:02,256 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2023-01-06 15:06:02,257 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,257 DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,257 DEBUG findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,257 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2023-01-06 15:06:02,257 DEBUG findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,257 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,257 DEBUG findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,257 DEBUG findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,257 DEBUG findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,257 DEBUG findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,257 DEBUG findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,257 DEBUG findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,257 DEBUG findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,257 DEBUG findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,257 DEBUG findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,257 DEBUG findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,257 DEBUG findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,257 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2023-01-06 15:06:02,257 DEBUG findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,257 DEBUG findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,257 DEBUG findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,258 DEBUG findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,258 DEBUG findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,258 DEBUG findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,258 DEBUG findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,258 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2023-01-06 15:06:02,258 DEBUG findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,258 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2023-01-06 15:06:02,258 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,258 DEBUG findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,258 DEBUG findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,258 DEBUG findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,258 DEBUG findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,258 DEBUG findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,258 DEBUG findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,258 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,258 DEBUG findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,258 DEBUG findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,258 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,258 DEBUG findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,258 DEBUG findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,258 DEBUG findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,259 DEBUG findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,259 DEBUG findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,259 DEBUG findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,259 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,259 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,259 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,259 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2023-01-06 15:06:02,259 DEBUG findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,259 DEBUG findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,259 DEBUG findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,259 DEBUG findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,259 DEBUG findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,259 DEBUG findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,259 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,259 DEBUG findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,259 DEBUG findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,259 DEBUG findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,259 DEBUG findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,259 DEBUG findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,259 DEBUG findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,260 DEBUG findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,260 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,260 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,260 DEBUG findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,260 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,260 DEBUG findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,260 DEBUG findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,260 DEBUG findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,260 DEBUG findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,260 DEBUG findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,260 DEBUG findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,260 DEBUG findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,260 DEBUG findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,260 DEBUG findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,260 DEBUG findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,260 DEBUG findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,260 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,260 DEBUG findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,260 DEBUG findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,260 DEBUG findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2023-01-06 15:06:02,260 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,261 DEBUG findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,261 DEBUG findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,261 DEBUG findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,261 DEBUG findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,261 DEBUG findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,261 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,261 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,261 DEBUG findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,261 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,261 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,261 DEBUG findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,261 DEBUG findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,261 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,261 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,261 DEBUG findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,261 DEBUG findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,261 DEBUG findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,261 DEBUG findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,261 DEBUG findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,261 DEBUG findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,261 DEBUG findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2023-01-06 15:06:02,261 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,262 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,262 DEBUG findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,262 DEBUG findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,262 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,262 DEBUG findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,262 DEBUG findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,262 DEBUG findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,262 DEBUG findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,262 DEBUG findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,262 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,262 DEBUG findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,262 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,262 DEBUG findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,262 DEBUG findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,262 DEBUG findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,262 DEBUG findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,262 DEBUG findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,262 DEBUG findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,262 DEBUG findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,262 DEBUG findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,262 DEBUG findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,262 DEBUG findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,263 DEBUG findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,263 DEBUG findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,263 DEBUG findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,263 DEBUG findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,263 DEBUG findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2023-01-06 15:06:02,263 DEBUG findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,263 DEBUG findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,263 DEBUG findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,263 DEBUG findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,263 DEBUG findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,263 DEBUG findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,263 DEBUG findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,263 DEBUG findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,263 DEBUG findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,263 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,263 DEBUG findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,263 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,263 DEBUG findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,263 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,263 DEBUG findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,263 DEBUG findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,263 DEBUG findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,264 DEBUG findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,264 DEBUG findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,264 DEBUG findfont: Matching DejaVu Sans Mono:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0 to DejaVu Sans Mono ('/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf') with score of 0.050000.
2023-01-06 15:06:02,264 DEBUG findfont: Matching DejaVu Sans Display:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0.
2023-01-06 15:06:02,264 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,264 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,264 DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,264 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,264 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,264 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,264 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,265 DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,265 DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 0.05
2023-01-06 15:06:02,265 DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,265 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-06 15:06:02,265 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,265 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,265 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,265 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,265 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-06 15:06:02,265 DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,265 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,265 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,265 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,265 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,265 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,265 DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,265 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-06 15:06:02,265 DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,265 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,265 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,265 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,265 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,266 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,266 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,266 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-06 15:06:02,266 DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,266 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,266 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,266 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,266 DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,266 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,266 DEBUG findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,266 DEBUG findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,266 DEBUG findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,266 DEBUG findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,266 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,266 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,266 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,266 DEBUG findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,266 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,266 DEBUG findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,266 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,266 DEBUG findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,266 DEBUG findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,267 DEBUG findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,267 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,267 DEBUG findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,267 DEBUG findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,267 DEBUG findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,267 DEBUG findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,267 DEBUG findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,267 DEBUG findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,267 DEBUG findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,267 DEBUG findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,267 DEBUG findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,267 DEBUG findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,267 DEBUG findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,267 DEBUG findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,267 DEBUG findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,267 DEBUG findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,267 DEBUG findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,267 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2023-01-06 15:06:02,267 DEBUG findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,267 DEBUG findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,267 DEBUG findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,267 DEBUG findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,267 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,268 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,268 DEBUG findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,268 DEBUG findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,268 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,268 DEBUG findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,268 DEBUG findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,268 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,268 DEBUG findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,268 DEBUG findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,268 DEBUG findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,268 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,268 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,268 DEBUG findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,268 DEBUG findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,268 DEBUG findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,268 DEBUG findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,268 DEBUG findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,268 DEBUG findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,268 DEBUG findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,268 DEBUG findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2023-01-06 15:06:02,268 DEBUG findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,268 DEBUG findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,269 DEBUG findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,269 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2023-01-06 15:06:02,269 DEBUG findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,269 DEBUG findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,269 DEBUG findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,269 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,269 DEBUG findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:02,269 DEBUG findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,269 DEBUG findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,269 DEBUG findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,269 DEBUG findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,269 DEBUG findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,269 DEBUG findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,269 DEBUG findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:02,269 DEBUG findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,269 DEBUG findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,269 DEBUG findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,269 DEBUG findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,269 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,269 DEBUG findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,269 DEBUG findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,269 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,270 DEBUG findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,270 DEBUG findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:02,270 DEBUG findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,270 DEBUG findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,270 DEBUG findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,270 DEBUG findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,270 DEBUG findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,270 DEBUG findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,270 DEBUG findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,270 DEBUG findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,270 DEBUG findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,270 DEBUG findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,270 DEBUG findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,270 DEBUG findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,270 DEBUG findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,270 DEBUG findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,270 DEBUG findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,270 DEBUG findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,270 DEBUG findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,270 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:02,270 DEBUG findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,270 DEBUG findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,270 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,271 DEBUG findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,271 DEBUG findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,271 DEBUG findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,271 DEBUG findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,271 DEBUG findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,271 DEBUG findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,271 DEBUG findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,271 DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,271 DEBUG findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,271 DEBUG findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,271 DEBUG findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,271 DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,271 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2023-01-06 15:06:02,271 DEBUG findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,271 DEBUG findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,271 DEBUG findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,271 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,271 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,271 DEBUG findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,271 DEBUG findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,271 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,271 DEBUG findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,272 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:02,272 DEBUG findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,272 DEBUG findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,272 DEBUG findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,272 DEBUG findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,272 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,272 DEBUG findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,272 DEBUG findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,272 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,272 DEBUG findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,272 DEBUG findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2023-01-06 15:06:02,272 DEBUG findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,272 DEBUG findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,272 DEBUG findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,272 DEBUG findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,272 DEBUG findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,272 DEBUG findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,272 DEBUG findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,272 DEBUG findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,272 DEBUG findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2023-01-06 15:06:02,272 DEBUG findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,272 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2023-01-06 15:06:02,273 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,273 DEBUG findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,273 DEBUG findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,273 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,273 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,273 DEBUG findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,273 DEBUG findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,273 DEBUG findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,273 DEBUG findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2023-01-06 15:06:02,273 DEBUG findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,273 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,273 DEBUG findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,273 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,273 DEBUG findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,273 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,273 DEBUG findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,273 DEBUG findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,273 DEBUG findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,273 DEBUG findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,273 DEBUG findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,273 DEBUG findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,273 DEBUG findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,274 DEBUG findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,274 DEBUG findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,274 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2023-01-06 15:06:02,274 DEBUG findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2023-01-06 15:06:02,274 DEBUG findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,274 DEBUG findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,274 DEBUG findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,274 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,274 DEBUG findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2023-01-06 15:06:02,274 DEBUG findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,274 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,274 DEBUG findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,274 DEBUG findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,274 DEBUG findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,274 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,274 DEBUG findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,274 DEBUG findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,274 DEBUG findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,274 DEBUG findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,274 DEBUG findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,274 DEBUG findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,274 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,274 DEBUG findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,275 DEBUG findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,275 DEBUG findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,275 DEBUG findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,275 DEBUG findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2023-01-06 15:06:02,275 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2023-01-06 15:06:02,275 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,275 DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,275 DEBUG findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,275 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2023-01-06 15:06:02,275 DEBUG findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,275 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,275 DEBUG findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,275 DEBUG findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,275 DEBUG findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,275 DEBUG findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,275 DEBUG findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,275 DEBUG findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,275 DEBUG findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,275 DEBUG findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,275 DEBUG findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,275 DEBUG findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,276 DEBUG findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,276 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2023-01-06 15:06:02,276 DEBUG findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,276 DEBUG findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,276 DEBUG findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,276 DEBUG findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,276 DEBUG findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,276 DEBUG findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,276 DEBUG findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,276 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2023-01-06 15:06:02,276 DEBUG findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,276 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2023-01-06 15:06:02,276 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,276 DEBUG findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,276 DEBUG findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,276 DEBUG findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,276 DEBUG findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,276 DEBUG findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,276 DEBUG findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,276 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,277 DEBUG findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,277 DEBUG findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,277 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,277 DEBUG findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,277 DEBUG findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,277 DEBUG findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,277 DEBUG findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,277 DEBUG findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,277 DEBUG findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,277 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,277 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,277 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,277 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2023-01-06 15:06:02,277 DEBUG findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,277 DEBUG findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,277 DEBUG findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,277 DEBUG findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,277 DEBUG findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,277 DEBUG findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,277 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,278 DEBUG findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,278 DEBUG findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,278 DEBUG findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,278 DEBUG findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,278 DEBUG findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,278 DEBUG findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,278 DEBUG findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,278 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,278 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,278 DEBUG findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,278 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,278 DEBUG findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,278 DEBUG findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,278 DEBUG findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,278 DEBUG findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,278 DEBUG findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,278 DEBUG findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,278 DEBUG findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,278 DEBUG findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,278 DEBUG findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,279 DEBUG findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,279 DEBUG findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,279 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,279 DEBUG findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,279 DEBUG findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,279 DEBUG findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2023-01-06 15:06:02,279 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,279 DEBUG findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,279 DEBUG findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,279 DEBUG findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,279 DEBUG findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,279 DEBUG findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,279 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,279 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,279 DEBUG findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,279 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,279 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,280 DEBUG findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,280 DEBUG findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,280 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2023-01-06 15:06:02,280 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,280 DEBUG findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,280 DEBUG findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,280 DEBUG findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,280 DEBUG findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,280 DEBUG findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,280 DEBUG findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,280 DEBUG findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2023-01-06 15:06:02,280 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,280 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,280 DEBUG findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,280 DEBUG findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,280 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,280 DEBUG findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,280 DEBUG findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,280 DEBUG findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,280 DEBUG findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,280 DEBUG findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,280 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,281 DEBUG findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,281 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,281 DEBUG findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,281 DEBUG findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,281 DEBUG findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,281 DEBUG findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,281 DEBUG findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,281 DEBUG findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,281 DEBUG findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,281 DEBUG findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,281 DEBUG findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,281 DEBUG findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,281 DEBUG findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,281 DEBUG findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2023-01-06 15:06:02,281 DEBUG findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,281 DEBUG findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,281 DEBUG findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2023-01-06 15:06:02,281 DEBUG findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,281 DEBUG findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,281 DEBUG findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,281 DEBUG findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,282 DEBUG findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,282 DEBUG findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,282 DEBUG findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,282 DEBUG findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,282 DEBUG findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,282 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2023-01-06 15:06:02,282 DEBUG findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,282 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,282 DEBUG findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,282 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-06 15:06:02,282 DEBUG findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2023-01-06 15:06:02,282 DEBUG findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,282 DEBUG findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,282 DEBUG findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,282 DEBUG findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2023-01-06 15:06:02,282 DEBUG findfont: Matching DejaVu Sans Display:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0 to DejaVu Sans Display ('/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf') with score of 0.050000.
2023-01-06 15:06:04,776 INFO MSE deviation of the 1:th estimated GD-refined rotations using register_rotations : 1.2103792543141942
2023-01-06 15:06:05,988 DEBUG locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7c909179e8>
2023-01-06 15:06:05,988 DEBUG Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7c909179e8> on colorbar
2023-01-06 15:06:05,988 DEBUG Setting pcolormesh
2023-01-06 15:06:08,924 INFO MSE deviation of the 2:th estimated GD-refined rotations using register_rotations : 0.3066826724517833
2023-01-06 15:06:10,186 DEBUG locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7c901b2f28>
2023-01-06 15:06:10,186 DEBUG Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7c901b2f28> on colorbar
2023-01-06 15:06:10,186 DEBUG Setting pcolormesh
2023-01-06 15:06:12,680 INFO MSE deviation of the 3:th estimated GD-refined rotations using register_rotations : 0.23286039250617402
2023-01-06 15:06:13,857 DEBUG locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7c90aecb00>
2023-01-06 15:06:13,858 DEBUG Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7c90aecb00> on colorbar
2023-01-06 15:06:13,858 DEBUG Setting pcolormesh
2023-01-06 15:06:16,581 INFO MSE deviation of the 4:th estimated GD-refined rotations using register_rotations : 0.2730163544760613
2023-01-06 15:06:17,737 DEBUG locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7c90204630>
2023-01-06 15:06:17,738 DEBUG Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7c90204630> on colorbar
2023-01-06 15:06:17,738 DEBUG Setting pcolormesh
2023-01-06 15:06:20,087 INFO MSE deviation of the 5:th estimated GD-refined rotations using register_rotations : 0.2928930331887732
2023-01-06 15:06:21,292 DEBUG locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7c90217780>
2023-01-06 15:06:21,293 DEBUG Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7c90217780> on colorbar
2023-01-06 15:06:21,293 DEBUG Setting pcolormesh
2023-01-06 15:06:23,896 INFO MSE deviation of the 6:th estimated GD-refined rotations using register_rotations : 0.30943074957629
2023-01-06 15:06:25,177 DEBUG locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7c8af96358>
2023-01-06 15:06:25,177 DEBUG Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7c8af96358> on colorbar
2023-01-06 15:06:25,177 DEBUG Setting pcolormesh
2023-01-06 15:06:27,659 INFO MSE deviation of the 7:th estimated GD-refined rotations using register_rotations : 0.31232923740653373
2023-01-06 15:06:28,868 DEBUG locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7c90f8e780>
2023-01-06 15:06:28,868 DEBUG Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7c90f8e780> on colorbar
2023-01-06 15:06:28,868 DEBUG Setting pcolormesh
2023-01-06 15:06:31,345 INFO MSE deviation of the 8:th estimated GD-refined rotations using register_rotations : 0.32291491831618546
2023-01-06 15:06:32,678 DEBUG locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7c901ae208>
2023-01-06 15:06:32,679 DEBUG Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7c901ae208> on colorbar
2023-01-06 15:06:32,679 DEBUG Setting pcolormesh
2023-01-06 15:06:35,202 INFO MSE deviation of the 9:th estimated GD-refined rotations using register_rotations : 0.3264339039247826
2023-01-06 15:06:36,418 DEBUG locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7c904c5780>
2023-01-06 15:06:36,418 DEBUG Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7c904c5780> on colorbar
2023-01-06 15:06:36,418 DEBUG Setting pcolormesh
2023-01-06 15:06:39,046 INFO MSE deviation of the 10:th estimated GD-refined rotations using register_rotations : 0.32761289271838273
2023-01-06 15:06:39,727 WARNING The PostScript backend does not support transparency; partially transparent artists will be rendered opaque.
2023-01-06 15:06:39,728 WARNING The PostScript backend does not support transparency; partially transparent artists will be rendered opaque.
2023-01-06 15:06:39,961 WARNING The PostScript backend does not support transparency; partially transparent artists will be rendered opaque.
2023-01-06 15:06:39,961 WARNING The PostScript backend does not support transparency; partially transparent artists will be rendered opaque.
