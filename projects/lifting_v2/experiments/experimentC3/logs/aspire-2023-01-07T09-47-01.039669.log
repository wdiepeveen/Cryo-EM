2023-01-07 09:47:01,548 DEBUG (private) matplotlib data path: /Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data
2023-01-07 09:47:01,549 DEBUG matplotlib data path: /Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data
2023-01-07 09:47:01,553 DEBUG CONFIGDIR=/Users/wdiepeveen/.matplotlib
2023-01-07 09:47:01,556 DEBUG matplotlib version 3.3.4
2023-01-07 09:47:01,556 DEBUG interactive is False
2023-01-07 09:47:01,557 DEBUG platform is darwin
2023-01-07 09:47:01,557 DEBUG loaded modules: ['builtins', 'sys', '_frozen_importlib', '_imp', '_warnings', '_thread', '_weakref', '_frozen_importlib_external', '_io', 'marshal', 'posix', 'zipimport', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_weakrefset', '_bootlocale', '_locale', 'site', 'os', 'errno', 'stat', '_stat', 'posixpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', 'types', 'functools', '_functools', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'weakref', 'collections.abc', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'mpl_toolkits', 'sphinxcontrib', 'sysconfig', '_sysconfigdata_m_darwin_darwin', '_osx_support', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'runpy', 'pkgutil', 'ipykernel', 'ipykernel._version', 'ipykernel.connect', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'subprocess', 'time', 'signal', '_posixsubprocess', 'select', 'selectors', 'math', 'threading', 'traceback', 'linecache', 'tokenize', 'token', 'IPython', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'IPython.core.application', 'atexit', 'copy', 'glob', 'fnmatch', 'logging', 'string', '_string', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'pwd', 'grp', 'traitlets', 'traitlets.traitlets', 'inspect', 'ast', '_ast', 'dis', 'opcode', '_opcode', 'six', '__future__', 'struct', '_struct', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'ipython_genutils', 'ipython_genutils._version', 'ipython_genutils.py3compat', 'ipython_genutils.encoding', 'locale', 'platform', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets._version', 'traitlets.config', 'traitlets.config.application', 'decorator', 'traitlets.config.configurable', 'traitlets.config.loader', 'argparse', 'textwrap', 'gettext', 'ipython_genutils.path', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'ipython_genutils.text', 'ipython_genutils.importstring', 'IPython.core.crashhandler', 'pprint', 'IPython.core.ultratb', 'pydoc', 'urllib', 'urllib.parse', 'IPython.core.debugger', 'bdb', 'IPython.utils', 'IPython.utils.PyColorize', 'IPython.utils.coloransi', 'IPython.utils.ipstruct', 'IPython.utils.colorable', 'pygments', 'IPython.utils.py3compat', 'IPython.utils.encoding', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'pdb', 'cmd', 'code', 'codeop', 'IPython.core.display_trap', 'IPython.utils.path', 'IPython.utils.process', 'IPython.utils._process_posix', 'pexpect', 'pexpect.exceptions', 'pexpect.utils', 'pexpect.expect', 'pexpect.pty_spawn', 'pty', 'tty', 'termios', 'ptyprocess', 'ptyprocess.ptyprocess', 'fcntl', 'resource', 'ptyprocess.util', 'pexpect.spawnbase', 'pexpect.run', 'IPython.utils._process_common', 'shlex', 'IPython.utils.decorators', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.utils.sysinfo', 'IPython.utils._sysinfo', 'IPython.core.profiledir', 'IPython.paths', 'tempfile', 'IPython.utils.importstring', 'IPython.terminal', 'IPython.terminal.embed', 'IPython.core.compilerop', 'IPython.core.magic_arguments', 'IPython.core.error', 'IPython.utils.text', 'pathlib', 'ntpath', 'IPython.core.magic', 'getopt', 'IPython.core.oinspect', 'typing', 'typing.io', 'typing.re', 'IPython.core.page', 'IPython.core.display', 'binascii', 'mimetypes', 'IPython.lib', 'IPython.lib.security', 'getpass', 'IPython.lib.pretty', 'datetime', '_datetime', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.python', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.unistring', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'IPython.core.inputtransformer2', 'IPython.core.interactiveshell', 'pickleshare', 'pickle', '_compat_pickle', '_pickle', 'IPython.core.prefilter', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.alias', 'IPython.core.builtin_trap', 'IPython.core.events', 'backcall', 'backcall.backcall', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.core.formatters', 'IPython.utils.sentinel', 'IPython.core.history', 'sqlite3', 'sqlite3.dbapi2', '_sqlite3', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.display', 'IPython.lib.display', 'html', 'html.entities', 'IPython.utils.io', 'IPython.utils.capture', 'IPython.utils.strdispatch', 'IPython.core.hooks', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.terminal.interactiveshell', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'concurrent.futures.process', 'queue', 'multiprocessing', 'multiprocessing.context', 'multiprocessing.process', 'multiprocessing.reduction', 'socket', '_socket', 'array', '__mp_main__', 'multiprocessing.connection', '_multiprocessing', 'multiprocessing.util', 'concurrent.futures.thread', 'asyncio.compat', 'asyncio.coroutines', 'asyncio.constants', 'asyncio.events', 'asyncio.base_futures', 'asyncio.log', 'asyncio.futures', 'asyncio.base_tasks', '_asyncio', 'asyncio.tasks', 'asyncio.locks', 'asyncio.protocols', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.transports', 'asyncio.unix_events', 'asyncio.base_subprocess', 'asyncio.selector_events', 'ssl', 'ipaddress', '_ssl', 'base64', 'asyncio.sslproto', 'prompt_toolkit', 'prompt_toolkit.application', 'prompt_toolkit.application.application', 'prompt_toolkit.buffer', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop', 'prompt_toolkit.eventloop.async_generator', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.dummy_contextvars', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.utils', 'wcwidth', 'wcwidth.wcwidth', 'wcwidth.table_wide', 'wcwidth.table_zero', 'wcwidth.unicode_versions', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.eventloop.async_context_manager', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.document', 'prompt_toolkit.clipboard', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.filters', 'prompt_toolkit.filters.app', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.completion', 'prompt_toolkit.completion.base', 'prompt_toolkit.formatted_text', 'prompt_toolkit.formatted_text.ansi', 'prompt_toolkit.output', 'prompt_toolkit.output.base', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.pygments', 'prompt_toolkit.styles.style_transformation', 'colorsys', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output.vt100', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.html', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.history', 'prompt_toolkit.search', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.validation', 'prompt_toolkit.input', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.layout', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.controls', 'prompt_toolkit.lexers', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.dummy', 'prompt_toolkit.shortcuts', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.patch_stdout', 'pygments.style', 'IPython.terminal.debugger', 'IPython.core.completer', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'jedi', 'jedi.api', 'parso', 'parso.parser', 'parso.tree', 'parso.utils', 'parso.pgen2', 'parso.pgen2.generator', 'parso.pgen2.grammar_parser', 'parso.python', 'parso.python.tokenize', 'parso.python.token', 'parso.grammar', 'parso._compatibility', 'parso.python.diff', 'difflib', 'parso.python.parser', 'parso.python.tree', 'parso.python.prefix', 'parso.cache', 'gc', 'parso.python.errors', 'parso.normalizer', 'parso.python.pep8', 'parso.file_io', 'jedi._compatibility', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.file_io', 'jedi.api.classes', 'jedi.inference', 'jedi.inference.imports', 'jedi.inference.sys_path', 'jedi.inference.cache', 'jedi.inference.base_value', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.inference.compiled', 'jedi.inference.compiled.value', 'jedi.inference.filters', 'jedi.inference.flow_analysis', 'jedi.inference.recursion', 'jedi.inference.names', 'jedi.inference.docstrings', 'jedi.common', 'jedi.inference.lazy_value', 'jedi.plugins', 'jedi.inference.compiled.access', 'jedi.inference.compiled.getattr_static', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.gradual.typeshed', 'jedi.inference.gradual.stub_value', 'jedi.inference.value', 'jedi.inference.value.module', 'jedi.inference.value.klass', 'jedi.inference.arguments', 'jedi.inference.value.iterable', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.function', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.instance', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.compiled.subprocess', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.inference.syntax_tree', 'jedi.inference.gradual.annotation', 'jedi.inference.param', 'jedi.inference.value.decorator', 'jedi.inference.compiled.mixed', 'jedi.inference.gradual.conversion', 'jedi.api.keywords', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.interpreter', 'jedi.api.completion', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.api.environment', 'filecmp', 'jedi.api.project', 'jedi.inference.references', 'jedi.api.errors', 'jedi.api.refactoring', 'jedi.api.refactoring.extract', 'jedi.inference.gradual.utils', 'jedi.plugins.registry', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'jedi.plugins.django', 'IPython.terminal.ptutils', 'IPython.terminal.shortcuts', 'IPython.terminal.magics', 'IPython.lib.clipboard', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.ipapp', 'IPython.core.magics', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'IPython.core.magics.code', 'urllib.request', 'email', 'http', 'http.client', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'urllib.error', 'urllib.response', '_scproxy', 'IPython.core.magics.config', 'IPython.core.magics.display', 'IPython.core.magics.execution', 'timeit', 'cProfile', '_lsprof', 'profile', 'optparse', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.magics.pylab', 'IPython.core.pylabtools', 'IPython.core.magics.script', 'IPython.lib.backgroundjobs', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.utils.frame', 'jupyter_client', 'jupyter_client._version', 'jupyter_client.connect', 'zmq', 'ctypes', '_ctypes', 'ctypes._endian', 'zmq.backend', 'zmq.backend.select', 'zmq.backend.cython', 'zmq.backend.cython.constants', 'cython_runtime', 'zmq.backend.cython.error', '_cython_0_29_21', 'zmq.backend.cython.message', 'zmq.error', 'zmq.backend.cython.context', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.sugar', 'zmq.sugar.constants', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.context', 'zmq.sugar.attrsettr', 'zmq.sugar.socket', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'jupyter_client.localinterfaces', 'jupyter_core', 'jupyter_core.version', 'jupyter_core.paths', 'jupyter_client.launcher', 'traitlets.log', 'jupyter_client.client', 'jupyter_client.channels', 'jupyter_client.channelsabc', 'jupyter_client.clientabc', 'jupyter_client.manager', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.blocking', 'jupyter_client.blocking.client', 'jupyter_client.blocking.channels', 'jupyter_client.asynchronous', 'jupyter_client.asynchronous.client', 'zmq.asyncio', 'zmq._future', 'jupyter_client.asynchronous.channels', 'jupyter_client.multikernelmanager', 'uuid', 'ctypes.util', 'ctypes.macholib', 'ctypes.macholib.dyld', 'ctypes.macholib.framework', 'ctypes.macholib.dylib', 'ipykernel.kernelapp', 'tornado', 'tornado.ioloop', 'numbers', 'tornado.concurrent', 'tornado.log', 'logging.handlers', 'tornado.escape', 'tornado.util', 'tornado.speedups', 'curses', '_curses', 'zmq.eventloop', 'zmq.eventloop.ioloop', 'tornado.platform', 'tornado.platform.asyncio', 'tornado.gen', 'zmq.eventloop.zmqstream', 'ipykernel.iostream', 'imp', 'jupyter_client.session', 'hmac', 'jupyter_client.jsonutil', 'dateutil', 'dateutil._version', 'dateutil.parser', 'dateutil.parser._parser', 'decimal', '_decimal', 'dateutil.relativedelta', 'dateutil._common', 'dateutil.tz', 'dateutil.tz.tz', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.parser.isoparser', '_strptime', 'jupyter_client.adapter', 'ipykernel.heartbeat', 'ipykernel.ipkernel', 'IPython.utils.tokenutil', 'ipykernel.comm', 'ipykernel.comm.manager', 'ipykernel.comm.comm', 'ipykernel.kernelbase', 'tornado.queues', 'tornado.locks', 'ipykernel.jsonutil', 'ipykernel.zmqshell', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.datapub', 'ipykernel.serialize', 'ipykernel.pickleutil', 'ipykernel.codeutil', 'ipykernel.eventloops', 'distutils', 'distutils.version', 'ipykernel.parentpoller', 'faulthandler', 'IPython.core.completerlib', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'appnope', 'appnope._nope', 'storemagic', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'numpy.core', 'numpy.core.info', 'numpy.core.multiarray', 'numpy.core.overrides', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core._internal', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.shape_base', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.info', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.info', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.utils', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.mixins', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.scimath', 'numpy.lib.polynomial', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft.info', 'numpy.fft.fftpack', 'numpy.fft.fftpack_lite', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random.mtrand', 'mtrand', 'numpy.ctypeslib', 'numpy.core._dtype_ctypes', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.testing', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'numpy.testing._private', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'projects', 'projects.lifting_v2', 'projects.lifting_v2.experiments', 'projects.lifting_v2.experiments.experimentC3', 'projects.lifting_v2.experiments.experimentC3.E1_run', 'mrcfile', 'mrcfile.load_functions', 'mrcfile.bzip2mrcfile', 'mrcfile.mrcfile', 'mrcfile.mrcinterpreter', 'mrcfile.utils', 'mrcfile.constants', 'mrcfile.dtypes', 'mrcfile.mrcobject', 'mrcfile.future_mrcfile', 'mrcfile.gzipmrcfile', 'gzip', 'mrcfile.mrcmemmap', 'mrcfile.validator', 'mrcfile.version', 'scipy', 'scipy._lib', 'scipy._lib._testutils', 'scipy._lib.deprecation', 'scipy._distributor_init', 'scipy.__config__', 'scipy.version', 'scipy._lib._version', 'scipy._lib.six', 'scipy._lib._ccallback', 'scipy._lib._ccallback_c', 'scipy.fft', 'scipy.fft._basic', 'scipy._lib.uarray', 'scipy._lib._uarray', 'scipy._lib._uarray._backend', 'scipy._lib._uarray._uarray', 'scipy.fft._realtransforms', 'scipy.fft._helper', 'scipy.fft._pocketfft', 'scipy.fft._pocketfft.basic', 'scipy.fft._pocketfft.pypocketfft', 'scipy.fft._pocketfft.helper', 'scipy.fft._pocketfft.realtransforms', 'scipy.fft._backend', 'numpy.dual', 'scipy.ndimage', 'scipy.ndimage.filters', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy.ndimage._ni_docstrings', 'scipy._lib.doccer', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', 'scipy.ndimage.measurements', 'scipy.ndimage._ni_label', '_cython_0_29_13', '_ni_label', 'scipy.ndimage.morphology', 'aspire', 'logging.config', 'socketserver', 'importlib_resources', 'importlib_resources._common', 'importlib_resources.abc', 'importlib_resources._compat', 'zipfile', 'zipp', 'importlib_resources._py3', 'aspire.config', 'configparser', 'aspire.exceptions', 'aspire.operators', 'aspire.operators.blk_diag_matrix', 'scipy.linalg', 'scipy.linalg.linalg_version', 'scipy.linalg.misc', 'scipy.linalg.blas', 'scipy.linalg._fblas', 'scipy.linalg.lapack', 'scipy.linalg._flapack', 'scipy._lib._util', 'scipy.linalg.basic', 'scipy.linalg.flinalg', 'scipy.linalg._flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.matfuncs', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg._decomp_update', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._sketches', 'scipy.sparse', 'scipy.sparse.base', 'scipy._lib._numpy_compat', 'scipy.sparse.sputils', 'scipy.sparse.csr', 'scipy.sparse._sparsetools', 'scipy.sparse.compressed', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.csc', 'scipy.sparse.lil', 'scipy.sparse._csparsetools', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'aspire.utils', 'aspire.utils.misc', 'aspire.utils.matrix', 'aspire.utils.matlab_compat', 'aspire.utils.rotation', 'scipy.spatial', 'scipy.spatial.kdtree', 'scipy.spatial.ckdtree', 'scipy.spatial.qhull', 'scipy._lib.messagestream', 'scipy.spatial._spherical_voronoi', 'scipy.spatial._voronoi', 'scipy.spatial._plotutils', 'scipy._lib.decorator', 'scipy.spatial._procrustes', 'scipy.spatial.distance', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.special', 'scipy.special.sf_error', 'scipy.special._ufuncs', 'scipy.special._ufuncs_cxx', 'scipy.special._basic', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm', 'scipy.special._ellip_harm_2', 'scipy.special.lambertw', 'scipy.special._spherical_bessel', 'scipy.spatial.transform', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_groups', 'scipy.constants', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.spatial.transform._rotation_spline', 'aspire.utils.random', 'aspire.utils.types', 'aspire.utils.cell', 'aspire.operators.filters', 'scipy.interpolate', 'scipy.interpolate.interpolate', 'scipy.interpolate.fitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._bsplines', 'scipy.interpolate._bspl', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.rbf', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'aspire.utils.coor_trans', 'aspire.utils.filter_to_fb_mat', 'aspire.basis', 'aspire.basis.basis', 'scipy.sparse.linalg', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.matfuncs', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'aspire.basis.basis_utils', 'aspire.basis.dirac', 'aspire.basis.fb_2d', 'aspire.basis.fb_3d', 'aspire.basis.ffb_2d', 'aspire.image', 'aspire.image.image', 'aspire.volume', 'aspire.nufft', 'aspire.numeric', 'aspire.numeric.numpy', 'aspire.numeric.pyfftw_fft', 'pyfftw', 'pyfftw.pyfftw', 'pyfftw.config', 'pyfftw.builders', 'pyfftw.builders.builders', 'pyfftw.builders._utils', 'pyfftw.interfaces', 'pyfftw.interfaces.numpy_fft', 'pyfftw.interfaces._utils', 'pyfftw.interfaces.cache', 'scipy.fftpack', 'scipy.fftpack.basic', 'scipy.fftpack.helper', 'scipy.fftpack.pseudo_diffs', 'scipy.fftpack.convolve', 'scipy.fftpack.realtransforms', 'pyfftw.interfaces.scipy_fftpack', 'pyfftw.interfaces.scipy_fft', 'pyfftw._version', 'aspire.numeric.base_fft', 'aspire.image.preprocess', 'aspire.basis.ffb_3d', 'aspire.basis.fpswf_2d', 'scipy.optimize', 'scipy.optimize.optimize', 'scipy.optimize.linesearch', 'scipy.optimize.minpack2', 'scipy.optimize._minimize', 'scipy.optimize._trustregion_dogleg', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trlib', 'scipy.optimize._trlib._trlib', 'scipy.optimize._trustregion_exact', 'scipy.optimize._trustregion_constr', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.optimize._differentiable_functions', 'scipy.optimize._numdiff', 'scipy.optimize._group_columns', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._constraints', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize.lbfgsb', 'scipy.optimize._lbfgsb', 'scipy.optimize.tnc', 'scipy.optimize.moduleTNC', 'scipy.optimize.cobyla', 'scipy.optimize._cobyla', 'scipy.optimize.slsqp', 'scipy.optimize._slsqp', 'scipy.optimize._root', 'scipy.optimize.minpack', 'scipy.optimize._minpack', 'scipy.optimize._lsq', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.bvls', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root_scalar', 'scipy.optimize.zeros', 'scipy.optimize._zeros', 'scipy.optimize.nnls', 'scipy.optimize._nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._linprog', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_util', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_simplex', 'scipy.optimize._linprog_rs', 'scipy.optimize._bglu_dense', 'scipy.optimize._lsap', 'scipy.optimize._lsap_module', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.sobol_seq', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._dual_annealing', 'aspire.basis.pswf_2d', 'aspire.basis.pswf_utils', 'aspire.basis.fpswf_3d', 'aspire.basis.pswf_3d', 'aspire.basis.polar_2d', 'aspire.source', 'pandas', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pandas.compat', 'pandas.compat.numpy', 'pandas._libs', 'pandas._libs.tslibs', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.c_timestamp', 'pandas._libs.tslibs.nattype', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.tzconversion', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.ccalendar', 'pandas._config', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.frequencies', 'pandas._libs.tslibs.timestamps', 'pandas._libs.tslibs.resolution', 'pandas._libs.hashtable', 'pandas._libs.missing', 'pandas._libs.lib', 'fractions', 'pandas._libs.tslib', 'pandas.core', 'pandas.core.config_init', 'pandas.core.api', 'pandas.core.arrays', 'pandas.core.arrays.array_', 'pandas.core.dtypes', 'pandas.core.dtypes.common', 'pandas._libs.algos', 'pandas.core.dtypes.dtypes', 'pandas._libs.interval', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.errors', 'pandas.core.dtypes.inference', 'pandas._typing', 'pandas.core.arrays.base', 'pandas.compat.numpy.function', 'pandas.util', 'pandas.util._decorators', 'pandas._libs.properties', 'pandas.core.util', 'pandas.core.util.hashing', 'pandas._libs.hashing', 'pandas.core.dtypes.cast', 'pandas.core.dtypes.missing', 'pandas.util._validators', 'pandas.core.ops', 'pandas._libs.ops', 'pandas.core.common', 'pandas.core.ops.missing', 'pandas.core.ops.roperator', 'pandas.core.ops.docstrings', 'pandas.core.sorting', 'pandas.core.algorithms', 'pandas.core.indexers', 'pandas.core.arrays.categorical', 'pandas.core.accessor', 'pandas.core.base', 'pandas.core.nanops', 'pandas.compat._optional', 'pandas.core.missing', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.datetimelike', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.tseries.offsets', 'dateutil.easter', 'pandas.core.tools', 'pandas.core.tools.datetimes', 'pandas.core.arrays._ranges', 'pandas.core.arrays.integer', 'pandas.core.tools.numeric', 'pandas.core.arrays.interval', 'pandas.core.indexes', 'pandas.core.indexes.base', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.dtypes.concat', 'pandas.core.indexes.frozen', 'pandas.io.formats.printing', 'pandas.core.strings', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.sparse', 'pandas._libs.sparse', 'pandas.core.arrays.timedeltas', 'pandas.core.groupby', 'pandas.core.groupby.generic', 'pandas.core.frame', 'pandas.core.generic', 'pandas.core.index', 'pandas.core.indexes.api', 'pandas.core.indexes.category', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.numeric', 'pandas.core.indexes.interval', 'pandas.util._exceptions', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexing', 'pandas._libs.indexing', 'pandas.core.internals', 'pandas.core.internals.blocks', 'pandas._libs.internals', 'pandas.core.internals.arrays', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.io.formats.format', 'pandas.io.common', 'csv', '_csv', 'mmap', 'pandas.core.internals.construction', 'pandas.core.series', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.plotting', 'pandas.plotting._core', 'pandas.plotting._matplotlib', 'pandas.plotting._matplotlib.boxplot', 'matplotlib', 'matplotlib.cbook', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.animation', 'matplotlib._animation_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'matplotlib._version', 'matplotlib.ft2font', 'kiwisolver']
2023-01-07 09:47:01,649 DEBUG CACHEDIR=/Users/wdiepeveen/.matplotlib
2023-01-07 09:47:01,652 DEBUG Using fontManager instance from /Users/wdiepeveen/.matplotlib/fontlist-v330.json
2023-01-07 09:47:02,390 DEBUG Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2023-01-07 09:47:02,394 DEBUG Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2023-01-07 09:47:03,874 INFO Results folder is /Users/wdiepeveen/Documents/PhD/Projects/2 - Cryo-EM/src/src/Cryo-EM/tools/../results/expC3_23-01-07_09-47-03_SNR16_N2048_J15_r2_s10_i10
2023-01-07 09:47:03,896 INFO Start Experiment
2023-01-07 09:47:03,899 INFO Running Experiment for SNR = 0.0625 and 2048 images
2023-01-07 09:47:03,900 INFO This experiment illustrates orientation refinement using a lifting approach
2023-01-07 09:47:03,912 INFO Load 3D map and downsample 3D map to desired grids of 91 x 91 x 91.
2023-01-07 09:47:03,914 INFO Initialize simulation object and CTF filters.
2023-01-07 09:47:04,030 INFO Use downsampled map to creat simulation object.
2023-01-07 09:47:04,064 INFO Get true rotation angles generated randomly by the simulation object.
2023-01-07 09:47:05,682 DEBUG Corresponding type is already real float64.
2023-01-07 09:47:05,682 DEBUG nufft passed real_type for signal, converting
2023-01-07 09:47:05,686 INFO Trying NFFT backend finufft
2023-01-07 09:47:05,696 INFO NFFT backend finufft usable.
2023-01-07 09:47:05,698 INFO Trying NFFT backend cufinufft
2023-01-07 09:47:05,701 INFO NFFT backend cufinufft not usable:
	No module named 'pycuda'
2023-01-07 09:47:05,702 INFO Trying NFFT backend pynfft
2023-01-07 09:47:05,705 INFO NFFT backend pynfft not usable:
	No module named 'pynfft'
2023-01-07 09:47:05,706 INFO Selected NFFT backend = finufft.
2023-01-07 09:47:22,662 INFO Applying forward transformations in pipeline
2023-01-07 09:47:22,663 INFO All forward transformations applied
2023-01-07 09:47:22,664 INFO Loaded 2048 images
2023-01-07 09:47:24,572 DEBUG Corresponding type is already real float64.
2023-01-07 09:47:24,572 DEBUG nufft passed real_type for signal, converting
2023-01-07 09:47:42,583 INFO Applying forward transformations in pipeline
2023-01-07 09:47:42,584 INFO All forward transformations applied
2023-01-07 09:47:42,584 INFO Loaded 2048 images
2023-01-07 09:47:42,585 INFO Initializing density
2023-01-07 09:47:43,897 INFO Initialising Solver
2023-01-07 09:47:43,899 INFO Update data_discrepancies
2023-01-07 09:47:43,900 INFO Computing \|Ag.u - f_i\|^2
2023-01-07 09:47:44,816 DEBUG Corresponding type is already real float64.
2023-01-07 09:47:44,817 DEBUG nufft passed real_type for signal, converting
2023-01-07 09:47:59,872 INFO Computing data fidelity for 114564 rotations and 2048 images at 0%
2023-01-07 09:48:00,800 DEBUG Corresponding type is already real float64.
2023-01-07 09:48:00,800 DEBUG nufft passed real_type for signal, converting
2023-01-07 09:48:15,750 INFO Computing data fidelity for 114564 rotations and 2048 images at 1%
2023-01-07 09:48:16,647 DEBUG Corresponding type is already real float64.
2023-01-07 09:48:16,647 DEBUG nufft passed real_type for signal, converting
2023-01-07 09:48:32,362 INFO Computing data fidelity for 114564 rotations and 2048 images at 2%
2023-01-07 09:48:33,251 DEBUG Corresponding type is already real float64.
2023-01-07 09:48:33,251 DEBUG nufft passed real_type for signal, converting
2023-01-07 09:48:48,766 INFO Computing data fidelity for 114564 rotations and 2048 images at 3%
2023-01-07 09:48:49,680 DEBUG Corresponding type is already real float64.
2023-01-07 09:48:49,680 DEBUG nufft passed real_type for signal, converting
2023-01-07 09:49:05,074 INFO Computing data fidelity for 114564 rotations and 2048 images at 4%
2023-01-07 09:49:05,926 DEBUG Corresponding type is already real float64.
2023-01-07 09:49:05,926 DEBUG nufft passed real_type for signal, converting
2023-01-07 09:49:21,122 INFO Computing data fidelity for 114564 rotations and 2048 images at 5%
2023-01-07 09:49:21,999 DEBUG Corresponding type is already real float64.
2023-01-07 09:49:21,999 DEBUG nufft passed real_type for signal, converting
2023-01-07 09:49:37,141 INFO Computing data fidelity for 114564 rotations and 2048 images at 6%
2023-01-07 09:49:37,997 DEBUG Corresponding type is already real float64.
2023-01-07 09:49:37,997 DEBUG nufft passed real_type for signal, converting
2023-01-07 09:49:53,761 INFO Computing data fidelity for 114564 rotations and 2048 images at 7%
2023-01-07 09:49:54,688 DEBUG Corresponding type is already real float64.
2023-01-07 09:49:54,689 DEBUG nufft passed real_type for signal, converting
2023-01-07 09:52:39,231 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2023-01-07 09:52:40,428 DEBUG Corresponding type is already real float64.
2023-01-07 09:52:40,428 DEBUG nufft passed real_type for signal, converting
2023-01-07 09:52:56,576 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2023-01-07 09:52:57,498 DEBUG Corresponding type is already real float64.
2023-01-07 09:52:57,499 DEBUG nufft passed real_type for signal, converting
2023-01-07 09:53:13,142 INFO Computing data fidelity for 114564 rotations and 2048 images at 9%
2023-01-07 09:53:14,023 DEBUG Corresponding type is already real float64.
2023-01-07 09:53:14,023 DEBUG nufft passed real_type for signal, converting
2023-01-07 09:53:29,630 INFO Computing data fidelity for 114564 rotations and 2048 images at 10%
2023-01-07 09:53:30,572 DEBUG Corresponding type is already real float64.
2023-01-07 09:53:30,573 DEBUG nufft passed real_type for signal, converting
2023-01-07 09:53:46,228 INFO Computing data fidelity for 114564 rotations and 2048 images at 11%
2023-01-07 09:53:47,192 DEBUG Corresponding type is already real float64.
2023-01-07 09:53:47,193 DEBUG nufft passed real_type for signal, converting
2023-01-07 09:54:02,867 INFO Computing data fidelity for 114564 rotations and 2048 images at 12%
2023-01-07 09:54:03,789 DEBUG Corresponding type is already real float64.
2023-01-07 09:54:03,789 DEBUG nufft passed real_type for signal, converting
2023-01-07 09:54:19,529 INFO Computing data fidelity for 114564 rotations and 2048 images at 13%
2023-01-07 09:54:20,411 DEBUG Corresponding type is already real float64.
2023-01-07 09:54:20,411 DEBUG nufft passed real_type for signal, converting
2023-01-07 09:54:36,126 INFO Computing data fidelity for 114564 rotations and 2048 images at 14%
2023-01-07 09:54:37,021 DEBUG Corresponding type is already real float64.
2023-01-07 09:54:37,022 DEBUG nufft passed real_type for signal, converting
2023-01-07 09:54:52,680 INFO Computing data fidelity for 114564 rotations and 2048 images at 15%
2023-01-07 09:54:53,517 DEBUG Corresponding type is already real float64.
2023-01-07 09:54:53,518 DEBUG nufft passed real_type for signal, converting
2023-01-07 09:55:09,368 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2023-01-07 09:55:10,100 DEBUG Corresponding type is already real float64.
2023-01-07 09:55:10,100 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:11:24,934 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2023-01-07 10:11:25,669 DEBUG Corresponding type is already real float64.
2023-01-07 10:11:25,669 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:34:21,161 INFO Computing data fidelity for 114564 rotations and 2048 images at 17%
2023-01-07 10:34:21,965 DEBUG Corresponding type is already real float64.
2023-01-07 10:34:21,965 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:34:37,173 INFO Computing data fidelity for 114564 rotations and 2048 images at 18%
2023-01-07 10:34:37,915 DEBUG Corresponding type is already real float64.
2023-01-07 10:34:37,915 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:34:51,150 INFO Computing data fidelity for 114564 rotations and 2048 images at 19%
2023-01-07 10:34:51,871 DEBUG Corresponding type is already real float64.
2023-01-07 10:34:51,871 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:35:04,998 INFO Computing data fidelity for 114564 rotations and 2048 images at 20%
2023-01-07 10:35:05,716 DEBUG Corresponding type is already real float64.
2023-01-07 10:35:05,717 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:35:19,022 INFO Computing data fidelity for 114564 rotations and 2048 images at 21%
2023-01-07 10:35:19,740 DEBUG Corresponding type is already real float64.
2023-01-07 10:35:19,740 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:35:32,868 INFO Computing data fidelity for 114564 rotations and 2048 images at 22%
2023-01-07 10:35:33,593 DEBUG Corresponding type is already real float64.
2023-01-07 10:35:33,593 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:35:46,734 INFO Computing data fidelity for 114564 rotations and 2048 images at 23%
2023-01-07 10:35:47,451 DEBUG Corresponding type is already real float64.
2023-01-07 10:35:47,451 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:36:00,620 INFO Computing data fidelity for 114564 rotations and 2048 images at 24%
2023-01-07 10:36:01,428 DEBUG Corresponding type is already real float64.
2023-01-07 10:36:01,428 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:36:15,747 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2023-01-07 10:36:16,596 DEBUG Corresponding type is already real float64.
2023-01-07 10:36:16,596 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:36:32,980 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2023-01-07 10:36:33,883 DEBUG Corresponding type is already real float64.
2023-01-07 10:36:33,883 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:36:48,632 INFO Computing data fidelity for 114564 rotations and 2048 images at 26%
2023-01-07 10:36:49,527 DEBUG Corresponding type is already real float64.
2023-01-07 10:36:49,527 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:37:04,787 INFO Computing data fidelity for 114564 rotations and 2048 images at 27%
2023-01-07 10:37:05,608 DEBUG Corresponding type is already real float64.
2023-01-07 10:37:05,608 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:37:19,360 INFO Computing data fidelity for 114564 rotations and 2048 images at 28%
2023-01-07 10:37:20,096 DEBUG Corresponding type is already real float64.
2023-01-07 10:37:20,096 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:37:34,250 INFO Computing data fidelity for 114564 rotations and 2048 images at 29%
2023-01-07 10:37:35,018 DEBUG Corresponding type is already real float64.
2023-01-07 10:37:35,018 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:37:48,633 INFO Computing data fidelity for 114564 rotations and 2048 images at 30%
2023-01-07 10:37:49,405 DEBUG Corresponding type is already real float64.
2023-01-07 10:37:49,405 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:38:04,734 INFO Computing data fidelity for 114564 rotations and 2048 images at 31%
2023-01-07 10:38:05,580 DEBUG Corresponding type is already real float64.
2023-01-07 10:38:05,580 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:38:20,184 INFO Computing data fidelity for 114564 rotations and 2048 images at 32%
2023-01-07 10:38:20,974 DEBUG Corresponding type is already real float64.
2023-01-07 10:38:20,974 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:38:36,111 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2023-01-07 10:38:36,945 DEBUG Corresponding type is already real float64.
2023-01-07 10:38:36,946 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:38:51,758 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2023-01-07 10:38:52,561 DEBUG Corresponding type is already real float64.
2023-01-07 10:38:52,561 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:39:06,987 INFO Computing data fidelity for 114564 rotations and 2048 images at 34%
2023-01-07 10:39:07,735 DEBUG Corresponding type is already real float64.
2023-01-07 10:39:07,735 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:39:22,957 INFO Computing data fidelity for 114564 rotations and 2048 images at 35%
2023-01-07 10:39:23,716 DEBUG Corresponding type is already real float64.
2023-01-07 10:39:23,716 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:39:38,030 INFO Computing data fidelity for 114564 rotations and 2048 images at 36%
2023-01-07 10:39:38,777 DEBUG Corresponding type is already real float64.
2023-01-07 10:39:38,778 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:39:52,341 INFO Computing data fidelity for 114564 rotations and 2048 images at 37%
2023-01-07 10:39:53,075 DEBUG Corresponding type is already real float64.
2023-01-07 10:39:53,075 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:40:07,574 INFO Computing data fidelity for 114564 rotations and 2048 images at 38%
2023-01-07 10:40:08,382 DEBUG Corresponding type is already real float64.
2023-01-07 10:40:08,382 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:40:21,746 INFO Computing data fidelity for 114564 rotations and 2048 images at 39%
2023-01-07 10:40:22,486 DEBUG Corresponding type is already real float64.
2023-01-07 10:40:22,486 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:40:36,265 INFO Computing data fidelity for 114564 rotations and 2048 images at 40%
2023-01-07 10:40:36,999 DEBUG Corresponding type is already real float64.
2023-01-07 10:40:37,000 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:40:50,389 INFO Computing data fidelity for 114564 rotations and 2048 images at 41%
2023-01-07 10:40:51,140 DEBUG Corresponding type is already real float64.
2023-01-07 10:40:51,140 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:41:06,172 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2023-01-07 10:41:07,000 DEBUG Corresponding type is already real float64.
2023-01-07 10:41:07,000 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:41:21,924 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2023-01-07 10:41:22,660 DEBUG Corresponding type is already real float64.
2023-01-07 10:41:22,660 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:41:37,126 INFO Computing data fidelity for 114564 rotations and 2048 images at 43%
2023-01-07 10:41:37,933 DEBUG Corresponding type is already real float64.
2023-01-07 10:41:37,933 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:41:51,897 INFO Computing data fidelity for 114564 rotations and 2048 images at 44%
2023-01-07 10:41:52,649 DEBUG Corresponding type is already real float64.
2023-01-07 10:41:52,649 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:42:06,073 INFO Computing data fidelity for 114564 rotations and 2048 images at 45%
2023-01-07 10:42:06,883 DEBUG Corresponding type is already real float64.
2023-01-07 10:42:06,883 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:42:20,931 INFO Computing data fidelity for 114564 rotations and 2048 images at 46%
2023-01-07 10:42:21,717 DEBUG Corresponding type is already real float64.
2023-01-07 10:42:21,717 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:42:36,832 INFO Computing data fidelity for 114564 rotations and 2048 images at 47%
2023-01-07 10:42:37,629 DEBUG Corresponding type is already real float64.
2023-01-07 10:42:37,629 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:42:52,335 INFO Computing data fidelity for 114564 rotations and 2048 images at 48%
2023-01-07 10:42:53,092 DEBUG Corresponding type is already real float64.
2023-01-07 10:42:53,092 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:43:06,639 INFO Computing data fidelity for 114564 rotations and 2048 images at 49%
2023-01-07 10:43:07,386 DEBUG Corresponding type is already real float64.
2023-01-07 10:43:07,387 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:43:22,178 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2023-01-07 10:43:22,987 DEBUG Corresponding type is already real float64.
2023-01-07 10:43:22,988 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:43:38,596 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2023-01-07 10:43:39,449 DEBUG Corresponding type is already real float64.
2023-01-07 10:43:39,449 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:43:53,646 INFO Computing data fidelity for 114564 rotations and 2048 images at 51%
2023-01-07 10:43:54,386 DEBUG Corresponding type is already real float64.
2023-01-07 10:43:54,387 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:44:07,726 INFO Computing data fidelity for 114564 rotations and 2048 images at 52%
2023-01-07 10:44:08,464 DEBUG Corresponding type is already real float64.
2023-01-07 10:44:08,464 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:44:22,723 INFO Computing data fidelity for 114564 rotations and 2048 images at 53%
2023-01-07 10:44:23,470 DEBUG Corresponding type is already real float64.
2023-01-07 10:44:23,470 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:44:37,224 INFO Computing data fidelity for 114564 rotations and 2048 images at 54%
2023-01-07 10:44:37,970 DEBUG Corresponding type is already real float64.
2023-01-07 10:44:37,970 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:44:52,478 INFO Computing data fidelity for 114564 rotations and 2048 images at 55%
2023-01-07 10:44:53,319 DEBUG Corresponding type is already real float64.
2023-01-07 10:44:53,319 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:45:06,938 INFO Computing data fidelity for 114564 rotations and 2048 images at 56%
2023-01-07 10:45:07,675 DEBUG Corresponding type is already real float64.
2023-01-07 10:45:07,675 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:45:22,866 INFO Computing data fidelity for 114564 rotations and 2048 images at 57%
2023-01-07 10:45:23,697 DEBUG Corresponding type is already real float64.
2023-01-07 10:45:23,697 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:45:38,175 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2023-01-07 10:45:38,950 DEBUG Corresponding type is already real float64.
2023-01-07 10:45:38,951 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:45:53,726 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2023-01-07 10:45:54,524 DEBUG Corresponding type is already real float64.
2023-01-07 10:45:54,524 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:46:09,584 INFO Computing data fidelity for 114564 rotations and 2048 images at 59%
2023-01-07 10:46:10,563 DEBUG Corresponding type is already real float64.
2023-01-07 10:46:10,563 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:46:25,669 INFO Computing data fidelity for 114564 rotations and 2048 images at 60%
2023-01-07 10:46:26,417 DEBUG Corresponding type is already real float64.
2023-01-07 10:46:26,418 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:46:41,729 INFO Computing data fidelity for 114564 rotations and 2048 images at 61%
2023-01-07 10:46:42,502 DEBUG Corresponding type is already real float64.
2023-01-07 10:46:42,502 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:46:56,763 INFO Computing data fidelity for 114564 rotations and 2048 images at 62%
2023-01-07 10:46:57,527 DEBUG Corresponding type is already real float64.
2023-01-07 10:46:57,527 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:47:11,069 INFO Computing data fidelity for 114564 rotations and 2048 images at 63%
2023-01-07 10:47:11,828 DEBUG Corresponding type is already real float64.
2023-01-07 10:47:11,828 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:47:25,277 INFO Computing data fidelity for 114564 rotations and 2048 images at 64%
2023-01-07 10:47:26,028 DEBUG Corresponding type is already real float64.
2023-01-07 10:47:26,028 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:47:39,683 INFO Computing data fidelity for 114564 rotations and 2048 images at 65%
2023-01-07 10:47:40,421 DEBUG Corresponding type is already real float64.
2023-01-07 10:47:40,421 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:47:55,341 INFO Computing data fidelity for 114564 rotations and 2048 images at 66%
2023-01-07 10:47:56,130 DEBUG Corresponding type is already real float64.
2023-01-07 10:47:56,130 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:48:09,995 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2023-01-07 10:48:10,743 DEBUG Corresponding type is already real float64.
2023-01-07 10:48:10,744 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:48:25,211 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2023-01-07 10:48:25,975 DEBUG Corresponding type is already real float64.
2023-01-07 10:48:25,975 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:48:40,103 INFO Computing data fidelity for 114564 rotations and 2048 images at 68%
2023-01-07 10:48:40,917 DEBUG Corresponding type is already real float64.
2023-01-07 10:48:40,917 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:48:55,543 INFO Computing data fidelity for 114564 rotations and 2048 images at 69%
2023-01-07 10:48:56,269 DEBUG Corresponding type is already real float64.
2023-01-07 10:48:56,269 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:49:09,359 INFO Computing data fidelity for 114564 rotations and 2048 images at 70%
2023-01-07 10:49:10,089 DEBUG Corresponding type is already real float64.
2023-01-07 10:49:10,089 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:49:24,424 INFO Computing data fidelity for 114564 rotations and 2048 images at 71%
2023-01-07 10:49:25,147 DEBUG Corresponding type is already real float64.
2023-01-07 10:49:25,147 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:49:38,223 INFO Computing data fidelity for 114564 rotations and 2048 images at 72%
2023-01-07 10:49:38,954 DEBUG Corresponding type is already real float64.
2023-01-07 10:49:38,954 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:49:52,000 INFO Computing data fidelity for 114564 rotations and 2048 images at 73%
2023-01-07 10:49:52,713 DEBUG Corresponding type is already real float64.
2023-01-07 10:49:52,713 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:53:59,714 INFO Computing data fidelity for 114564 rotations and 2048 images at 74%
2023-01-07 10:54:00,461 DEBUG Corresponding type is already real float64.
2023-01-07 10:54:00,461 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:54:15,345 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2023-01-07 10:54:16,238 DEBUG Corresponding type is already real float64.
2023-01-07 10:54:16,239 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:54:31,901 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2023-01-07 10:54:32,743 DEBUG Corresponding type is already real float64.
2023-01-07 10:54:32,743 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:54:47,638 INFO Computing data fidelity for 114564 rotations and 2048 images at 76%
2023-01-07 10:54:48,441 DEBUG Corresponding type is already real float64.
2023-01-07 10:54:48,441 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:55:02,150 INFO Computing data fidelity for 114564 rotations and 2048 images at 77%
2023-01-07 10:55:02,931 DEBUG Corresponding type is already real float64.
2023-01-07 10:55:02,931 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:55:17,247 INFO Computing data fidelity for 114564 rotations and 2048 images at 78%
2023-01-07 10:55:18,002 DEBUG Corresponding type is already real float64.
2023-01-07 10:55:18,002 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:55:32,119 INFO Computing data fidelity for 114564 rotations and 2048 images at 79%
2023-01-07 10:55:32,855 DEBUG Corresponding type is already real float64.
2023-01-07 10:55:32,855 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:55:47,663 INFO Computing data fidelity for 114564 rotations and 2048 images at 80%
2023-01-07 10:55:48,496 DEBUG Corresponding type is already real float64.
2023-01-07 10:55:48,496 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:56:02,093 INFO Computing data fidelity for 114564 rotations and 2048 images at 81%
2023-01-07 10:56:02,830 DEBUG Corresponding type is already real float64.
2023-01-07 10:56:02,830 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:56:16,440 INFO Computing data fidelity for 114564 rotations and 2048 images at 82%
2023-01-07 10:56:17,182 DEBUG Corresponding type is already real float64.
2023-01-07 10:56:17,183 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:56:30,573 INFO Computing data fidelity for 114564 rotations and 2048 images at 83%
2023-01-07 10:56:31,373 DEBUG Corresponding type is already real float64.
2023-01-07 10:56:31,373 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:56:46,120 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2023-01-07 10:56:46,903 DEBUG Corresponding type is already real float64.
2023-01-07 10:56:46,903 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:57:02,061 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2023-01-07 10:57:02,904 DEBUG Corresponding type is already real float64.
2023-01-07 10:57:02,905 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:57:17,510 INFO Computing data fidelity for 114564 rotations and 2048 images at 85%
2023-01-07 10:57:18,339 DEBUG Corresponding type is already real float64.
2023-01-07 10:57:18,339 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:57:31,937 INFO Computing data fidelity for 114564 rotations and 2048 images at 86%
2023-01-07 10:57:32,685 DEBUG Corresponding type is already real float64.
2023-01-07 10:57:32,685 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:57:46,442 INFO Computing data fidelity for 114564 rotations and 2048 images at 87%
2023-01-07 10:57:47,255 DEBUG Corresponding type is already real float64.
2023-01-07 10:57:47,256 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:58:01,694 INFO Computing data fidelity for 114564 rotations and 2048 images at 88%
2023-01-07 10:58:02,534 DEBUG Corresponding type is already real float64.
2023-01-07 10:58:02,534 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:58:17,020 INFO Computing data fidelity for 114564 rotations and 2048 images at 89%
2023-01-07 10:58:17,757 DEBUG Corresponding type is already real float64.
2023-01-07 10:58:17,757 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:58:32,023 INFO Computing data fidelity for 114564 rotations and 2048 images at 90%
2023-01-07 10:58:32,757 DEBUG Corresponding type is already real float64.
2023-01-07 10:58:32,757 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:58:47,083 INFO Computing data fidelity for 114564 rotations and 2048 images at 91%
2023-01-07 10:58:47,896 DEBUG Corresponding type is already real float64.
2023-01-07 10:58:47,896 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:59:02,149 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2023-01-07 10:59:02,951 DEBUG Corresponding type is already real float64.
2023-01-07 10:59:02,951 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:59:18,413 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2023-01-07 10:59:19,247 DEBUG Corresponding type is already real float64.
2023-01-07 10:59:19,247 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:59:33,517 INFO Computing data fidelity for 114564 rotations and 2048 images at 93%
2023-01-07 10:59:34,256 DEBUG Corresponding type is already real float64.
2023-01-07 10:59:34,256 DEBUG nufft passed real_type for signal, converting
2023-01-07 10:59:47,924 INFO Computing data fidelity for 114564 rotations and 2048 images at 94%
2023-01-07 10:59:48,692 DEBUG Corresponding type is already real float64.
2023-01-07 10:59:48,692 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:00:02,668 INFO Computing data fidelity for 114564 rotations and 2048 images at 95%
2023-01-07 11:00:03,411 DEBUG Corresponding type is already real float64.
2023-01-07 11:00:03,411 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:00:17,131 INFO Computing data fidelity for 114564 rotations and 2048 images at 96%
2023-01-07 11:00:17,899 DEBUG Corresponding type is already real float64.
2023-01-07 11:00:17,899 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:00:32,670 INFO Computing data fidelity for 114564 rotations and 2048 images at 97%
2023-01-07 11:00:33,444 DEBUG Corresponding type is already real float64.
2023-01-07 11:00:33,444 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:00:48,686 INFO Computing data fidelity for 114564 rotations and 2048 images at 98%
2023-01-07 11:00:49,569 DEBUG Corresponding type is already real float64.
2023-01-07 11:00:49,569 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:01:04,512 INFO Computing data fidelity for 114564 rotations and 2048 images at 99%
2023-01-07 11:01:05,041 DEBUG Corresponding type is already real float64.
2023-01-07 11:01:05,041 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:01:17,059 INFO Computing data fidelity for 114564 rotations and 2048 images at 100%
2023-01-07 11:01:19,544 INFO Do lambda update step
2023-01-07 11:01:47,922 INFO Do rots update step
2023-01-07 11:01:48,761 INFO Projecting 2048 vectors onto 114564-simplex at 2%
2023-01-07 11:01:49,365 INFO Projecting 2048 vectors onto 114564-simplex at 4%
2023-01-07 11:01:49,988 INFO Projecting 2048 vectors onto 114564-simplex at 7%
2023-01-07 11:01:50,713 INFO Projecting 2048 vectors onto 114564-simplex at 9%
2023-01-07 11:01:51,453 INFO Projecting 2048 vectors onto 114564-simplex at 12%
2023-01-07 11:01:52,222 INFO Projecting 2048 vectors onto 114564-simplex at 14%
2023-01-07 11:01:52,889 INFO Projecting 2048 vectors onto 114564-simplex at 17%
2023-01-07 11:01:53,502 INFO Projecting 2048 vectors onto 114564-simplex at 19%
2023-01-07 11:01:54,200 INFO Projecting 2048 vectors onto 114564-simplex at 21%
2023-01-07 11:01:54,833 INFO Projecting 2048 vectors onto 114564-simplex at 24%
2023-01-07 11:01:55,597 INFO Projecting 2048 vectors onto 114564-simplex at 26%
2023-01-07 11:01:56,278 INFO Projecting 2048 vectors onto 114564-simplex at 29%
2023-01-07 11:01:56,916 INFO Projecting 2048 vectors onto 114564-simplex at 31%
2023-01-07 11:01:57,523 INFO Projecting 2048 vectors onto 114564-simplex at 34%
2023-01-07 11:01:58,115 INFO Projecting 2048 vectors onto 114564-simplex at 36%
2023-01-07 11:01:58,769 INFO Projecting 2048 vectors onto 114564-simplex at 39%
2023-01-07 11:01:59,379 INFO Projecting 2048 vectors onto 114564-simplex at 41%
2023-01-07 11:01:59,975 INFO Projecting 2048 vectors onto 114564-simplex at 43%
2023-01-07 11:02:00,573 INFO Projecting 2048 vectors onto 114564-simplex at 46%
2023-01-07 11:02:01,167 INFO Projecting 2048 vectors onto 114564-simplex at 48%
2023-01-07 11:02:01,942 INFO Projecting 2048 vectors onto 114564-simplex at 51%
2023-01-07 11:02:02,541 INFO Projecting 2048 vectors onto 114564-simplex at 53%
2023-01-07 11:02:03,136 INFO Projecting 2048 vectors onto 114564-simplex at 56%
2023-01-07 11:02:03,730 INFO Projecting 2048 vectors onto 114564-simplex at 58%
2023-01-07 11:02:04,327 INFO Projecting 2048 vectors onto 114564-simplex at 61%
2023-01-07 11:02:04,920 INFO Projecting 2048 vectors onto 114564-simplex at 63%
2023-01-07 11:02:05,513 INFO Projecting 2048 vectors onto 114564-simplex at 65%
2023-01-07 11:02:06,108 INFO Projecting 2048 vectors onto 114564-simplex at 68%
2023-01-07 11:02:06,705 INFO Projecting 2048 vectors onto 114564-simplex at 70%
2023-01-07 11:02:07,304 INFO Projecting 2048 vectors onto 114564-simplex at 73%
2023-01-07 11:02:08,071 INFO Projecting 2048 vectors onto 114564-simplex at 75%
2023-01-07 11:02:08,674 INFO Projecting 2048 vectors onto 114564-simplex at 78%
2023-01-07 11:02:09,359 INFO Projecting 2048 vectors onto 114564-simplex at 80%
2023-01-07 11:02:09,968 INFO Projecting 2048 vectors onto 114564-simplex at 83%
2023-01-07 11:02:10,574 INFO Projecting 2048 vectors onto 114564-simplex at 85%
2023-01-07 11:02:11,214 INFO Projecting 2048 vectors onto 114564-simplex at 87%
2023-01-07 11:02:11,888 INFO Projecting 2048 vectors onto 114564-simplex at 90%
2023-01-07 11:02:12,595 INFO Projecting 2048 vectors onto 114564-simplex at 92%
2023-01-07 11:02:13,300 INFO Projecting 2048 vectors onto 114564-simplex at 95%
2023-01-07 11:02:13,973 INFO Projecting 2048 vectors onto 114564-simplex at 97%
2023-01-07 11:02:14,643 INFO Projecting 2048 vectors onto 114564-simplex at 100%
2023-01-07 11:02:16,260 INFO Computing 50 means of 514 points in at most 20 steps...
2023-01-07 11:02:16,449 INFO Computing 2048 means at 2%
2023-01-07 11:02:16,540 INFO Computing 50 means of 506 points in at most 20 steps...
2023-01-07 11:02:16,636 INFO Computing 2048 means at 4%
2023-01-07 11:02:16,749 INFO Computing 50 means of 505 points in at most 20 steps...
2023-01-07 11:02:16,820 INFO Computing 2048 means at 7%
2023-01-07 11:02:16,904 INFO Computing 50 means of 506 points in at most 20 steps...
2023-01-07 11:02:16,972 INFO Computing 2048 means at 9%
2023-01-07 11:02:17,053 INFO Computing 50 means of 496 points in at most 20 steps...
2023-01-07 11:02:17,121 INFO Computing 2048 means at 12%
2023-01-07 11:02:17,205 INFO Computing 50 means of 504 points in at most 20 steps...
2023-01-07 11:02:17,274 INFO Computing 2048 means at 14%
2023-01-07 11:02:17,355 INFO Computing 50 means of 499 points in at most 20 steps...
2023-01-07 11:02:17,421 INFO Computing 2048 means at 17%
2023-01-07 11:02:17,512 INFO Computing 50 means of 485 points in at most 20 steps...
2023-01-07 11:02:17,586 INFO Computing 2048 means at 19%
2023-01-07 11:02:17,670 INFO Computing 50 means of 496 points in at most 20 steps...
2023-01-07 11:02:17,735 INFO Computing 2048 means at 21%
2023-01-07 11:02:17,819 INFO Computing 50 means of 491 points in at most 20 steps...
2023-01-07 11:02:17,886 INFO Computing 2048 means at 24%
2023-01-07 11:02:17,989 INFO Computing 50 means of 488 points in at most 20 steps...
2023-01-07 11:02:18,057 INFO Computing 2048 means at 26%
2023-01-07 11:02:18,140 INFO Computing 50 means of 509 points in at most 20 steps...
2023-01-07 11:02:18,218 INFO Computing 2048 means at 29%
2023-01-07 11:02:18,300 INFO Computing 50 means of 506 points in at most 20 steps...
2023-01-07 11:02:18,369 INFO Computing 2048 means at 31%
2023-01-07 11:02:18,459 INFO Computing 50 means of 513 points in at most 20 steps...
2023-01-07 11:02:18,538 INFO Computing 2048 means at 34%
2023-01-07 11:02:18,625 INFO Computing 50 means of 517 points in at most 20 steps...
2023-01-07 11:02:18,701 INFO Computing 2048 means at 36%
2023-01-07 11:02:18,784 INFO Computing 50 means of 492 points in at most 20 steps...
2023-01-07 11:02:18,846 INFO Computing 2048 means at 39%
2023-01-07 11:02:18,931 INFO Computing 50 means of 510 points in at most 20 steps...
2023-01-07 11:02:18,990 INFO Computing 2048 means at 41%
2023-01-07 11:02:19,066 INFO Computing 50 means of 498 points in at most 20 steps...
2023-01-07 11:02:19,125 INFO Computing 2048 means at 43%
2023-01-07 11:02:19,205 INFO Computing 50 means of 515 points in at most 20 steps...
2023-01-07 11:02:19,264 INFO Computing 2048 means at 46%
2023-01-07 11:02:19,344 INFO Computing 50 means of 508 points in at most 20 steps...
2023-01-07 11:02:19,410 INFO Computing 2048 means at 48%
2023-01-07 11:02:19,516 INFO Computing 50 means of 498 points in at most 20 steps...
2023-01-07 11:02:19,580 INFO Computing 2048 means at 51%
2023-01-07 11:02:19,663 INFO Computing 50 means of 515 points in at most 20 steps...
2023-01-07 11:02:19,726 INFO Computing 2048 means at 53%
2023-01-07 11:02:19,807 INFO Computing 50 means of 493 points in at most 20 steps...
2023-01-07 11:02:19,877 INFO Computing 2048 means at 56%
2023-01-07 11:02:19,963 INFO Computing 50 means of 505 points in at most 20 steps...
2023-01-07 11:02:20,030 INFO Computing 2048 means at 58%
2023-01-07 11:02:20,115 INFO Computing 50 means of 497 points in at most 20 steps...
2023-01-07 11:02:20,186 INFO Computing 2048 means at 61%
2023-01-07 11:02:20,267 INFO Computing 50 means of 509 points in at most 20 steps...
2023-01-07 11:02:20,323 INFO Computing 2048 means at 63%
2023-01-07 11:02:20,399 INFO Computing 50 means of 517 points in at most 20 steps...
2023-01-07 11:02:20,455 INFO Computing 2048 means at 65%
2023-01-07 11:02:20,537 INFO Computing 50 means of 516 points in at most 20 steps...
2023-01-07 11:02:20,593 INFO Computing 2048 means at 68%
2023-01-07 11:02:20,679 INFO Computing 50 means of 520 points in at most 20 steps...
2023-01-07 11:02:20,751 INFO Computing 2048 means at 70%
2023-01-07 11:02:20,835 INFO Computing 50 means of 521 points in at most 20 steps...
2023-01-07 11:02:20,903 INFO Computing 2048 means at 73%
2023-01-07 11:02:21,012 INFO Computing 50 means of 503 points in at most 20 steps...
2023-01-07 11:02:21,080 INFO Computing 2048 means at 75%
2023-01-07 11:02:21,166 INFO Computing 50 means of 511 points in at most 20 steps...
2023-01-07 11:02:21,234 INFO Computing 2048 means at 78%
2023-01-07 11:02:21,311 INFO Computing 50 means of 514 points in at most 20 steps...
2023-01-07 11:02:21,366 INFO Computing 2048 means at 80%
2023-01-07 11:02:21,442 INFO Computing 50 means of 496 points in at most 20 steps...
2023-01-07 11:02:21,496 INFO Computing 2048 means at 83%
2023-01-07 11:02:21,574 INFO Computing 50 means of 485 points in at most 20 steps...
2023-01-07 11:02:21,636 INFO Computing 2048 means at 85%
2023-01-07 11:02:21,718 INFO Computing 50 means of 498 points in at most 20 steps...
2023-01-07 11:02:21,785 INFO Computing 2048 means at 87%
2023-01-07 11:02:21,870 INFO Computing 50 means of 491 points in at most 20 steps...
2023-01-07 11:02:21,934 INFO Computing 2048 means at 90%
2023-01-07 11:02:22,016 INFO Computing 50 means of 476 points in at most 20 steps...
2023-01-07 11:02:22,069 INFO Computing 2048 means at 92%
2023-01-07 11:02:22,150 INFO Computing 50 means of 515 points in at most 20 steps...
2023-01-07 11:02:22,213 INFO Computing 2048 means at 95%
2023-01-07 11:02:22,295 INFO Computing 50 means of 539 points in at most 20 steps...
2023-01-07 11:02:22,357 INFO Computing 2048 means at 97%
2023-01-07 11:02:22,441 INFO Computing 48 means of 492 points in at most 20 steps...
2023-01-07 11:02:22,513 INFO Computing 2048 means at 100%
2023-01-07 11:02:27,510 INFO Do vol update step
2023-01-07 11:02:27,512 INFO Compute adjoint forward mapping on the images
2023-01-07 11:02:29,300 DEBUG Corresponding type is already complex complex128.
2023-01-07 11:02:32,411 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2023-01-07 11:02:32,425 INFO Computing adjoint forward mappings from 2048 rotations at 50%
2023-01-07 11:02:34,189 DEBUG Corresponding type is already complex complex128.
2023-01-07 11:02:36,718 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2023-01-07 11:02:36,729 INFO Computing adjoint forward mappings from 2048 rotations at 100%
2023-01-07 11:02:37,609 DEBUG Corresponding type is already real float64.
2023-01-07 11:02:37,609 DEBUG anufft passed real_type for signal, converting
2023-01-07 11:02:44,091 INFO Computing kernel from 2048 rotations at 50%
2023-01-07 11:02:45,059 DEBUG Corresponding type is already real float64.
2023-01-07 11:02:45,059 DEBUG anufft passed real_type for signal, converting
2023-01-07 11:02:51,821 INFO Computing kernel from 2048 rotations at 100%
2023-01-07 11:02:51,823 INFO Computing non-centered Fourier Transform
2023-01-07 11:02:52,013 INFO Add ramp filter regularisation
2023-01-07 11:02:57,279 INFO Update data_discrepancies
2023-01-07 11:02:57,280 INFO Computing \|Ag.u - f_i\|^2
2023-01-07 11:02:58,196 DEBUG Corresponding type is already real float64.
2023-01-07 11:02:58,196 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:03:13,645 INFO Computing data fidelity for 114564 rotations and 2048 images at 0%
2023-01-07 11:03:14,421 DEBUG Corresponding type is already real float64.
2023-01-07 11:03:14,421 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:03:28,794 INFO Computing data fidelity for 114564 rotations and 2048 images at 1%
2023-01-07 11:03:29,641 DEBUG Corresponding type is already real float64.
2023-01-07 11:03:29,641 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:03:45,155 INFO Computing data fidelity for 114564 rotations and 2048 images at 2%
2023-01-07 11:03:45,914 DEBUG Corresponding type is already real float64.
2023-01-07 11:03:45,914 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:03:59,961 INFO Computing data fidelity for 114564 rotations and 2048 images at 3%
2023-01-07 11:04:00,732 DEBUG Corresponding type is already real float64.
2023-01-07 11:04:00,733 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:04:14,590 INFO Computing data fidelity for 114564 rotations and 2048 images at 4%
2023-01-07 11:04:15,353 DEBUG Corresponding type is already real float64.
2023-01-07 11:04:15,354 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:04:29,693 INFO Computing data fidelity for 114564 rotations and 2048 images at 5%
2023-01-07 11:04:30,441 DEBUG Corresponding type is already real float64.
2023-01-07 11:04:30,441 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:04:44,917 INFO Computing data fidelity for 114564 rotations and 2048 images at 6%
2023-01-07 11:04:45,727 DEBUG Corresponding type is already real float64.
2023-01-07 11:04:45,727 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:05:00,580 INFO Computing data fidelity for 114564 rotations and 2048 images at 7%
2023-01-07 11:05:01,308 DEBUG Corresponding type is already real float64.
2023-01-07 11:05:01,308 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:05:16,516 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2023-01-07 11:05:17,361 DEBUG Corresponding type is already real float64.
2023-01-07 11:05:17,361 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:05:30,894 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2023-01-07 11:05:31,650 DEBUG Corresponding type is already real float64.
2023-01-07 11:05:31,650 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:05:45,392 INFO Computing data fidelity for 114564 rotations and 2048 images at 9%
2023-01-07 11:05:46,140 DEBUG Corresponding type is already real float64.
2023-01-07 11:05:46,140 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:06:00,498 INFO Computing data fidelity for 114564 rotations and 2048 images at 10%
2023-01-07 11:06:01,231 DEBUG Corresponding type is already real float64.
2023-01-07 11:06:01,231 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:06:14,469 INFO Computing data fidelity for 114564 rotations and 2048 images at 11%
2023-01-07 11:06:15,218 DEBUG Corresponding type is already real float64.
2023-01-07 11:06:15,218 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:06:28,743 INFO Computing data fidelity for 114564 rotations and 2048 images at 12%
2023-01-07 11:06:29,484 DEBUG Corresponding type is already real float64.
2023-01-07 11:06:29,484 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:06:44,504 INFO Computing data fidelity for 114564 rotations and 2048 images at 13%
2023-01-07 11:06:45,302 DEBUG Corresponding type is already real float64.
2023-01-07 11:06:45,302 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:06:59,549 INFO Computing data fidelity for 114564 rotations and 2048 images at 14%
2023-01-07 11:07:00,284 DEBUG Corresponding type is already real float64.
2023-01-07 11:07:00,284 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:07:14,063 INFO Computing data fidelity for 114564 rotations and 2048 images at 15%
2023-01-07 11:07:14,876 DEBUG Corresponding type is already real float64.
2023-01-07 11:07:14,877 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:07:28,186 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2023-01-07 11:07:28,917 DEBUG Corresponding type is already real float64.
2023-01-07 11:07:28,918 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:07:41,905 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2023-01-07 11:07:42,629 DEBUG Corresponding type is already real float64.
2023-01-07 11:07:42,629 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:07:55,636 INFO Computing data fidelity for 114564 rotations and 2048 images at 17%
2023-01-07 11:07:56,369 DEBUG Corresponding type is already real float64.
2023-01-07 11:07:56,369 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:08:09,476 INFO Computing data fidelity for 114564 rotations and 2048 images at 18%
2023-01-07 11:08:10,205 DEBUG Corresponding type is already real float64.
2023-01-07 11:08:10,205 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:08:23,221 INFO Computing data fidelity for 114564 rotations and 2048 images at 19%
2023-01-07 11:08:23,958 DEBUG Corresponding type is already real float64.
2023-01-07 11:08:23,958 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:08:36,985 INFO Computing data fidelity for 114564 rotations and 2048 images at 20%
2023-01-07 11:08:37,716 DEBUG Corresponding type is already real float64.
2023-01-07 11:08:37,716 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:08:50,774 INFO Computing data fidelity for 114564 rotations and 2048 images at 21%
2023-01-07 11:08:51,510 DEBUG Corresponding type is already real float64.
2023-01-07 11:08:51,510 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:09:04,453 INFO Computing data fidelity for 114564 rotations and 2048 images at 22%
2023-01-07 11:09:05,190 DEBUG Corresponding type is already real float64.
2023-01-07 11:09:05,190 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:09:19,105 INFO Computing data fidelity for 114564 rotations and 2048 images at 23%
2023-01-07 11:09:19,946 DEBUG Corresponding type is already real float64.
2023-01-07 11:09:19,946 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:09:35,375 INFO Computing data fidelity for 114564 rotations and 2048 images at 24%
2023-01-07 11:09:36,232 DEBUG Corresponding type is already real float64.
2023-01-07 11:09:36,232 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:09:50,711 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2023-01-07 11:09:51,502 DEBUG Corresponding type is already real float64.
2023-01-07 11:09:51,502 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:10:06,068 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2023-01-07 11:10:06,825 DEBUG Corresponding type is already real float64.
2023-01-07 11:10:06,826 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:10:21,189 INFO Computing data fidelity for 114564 rotations and 2048 images at 26%
2023-01-07 11:10:21,974 DEBUG Corresponding type is already real float64.
2023-01-07 11:10:21,975 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:10:35,834 INFO Computing data fidelity for 114564 rotations and 2048 images at 27%
2023-01-07 11:10:36,589 DEBUG Corresponding type is already real float64.
2023-01-07 11:10:36,589 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:10:51,321 INFO Computing data fidelity for 114564 rotations and 2048 images at 28%
2023-01-07 11:10:52,156 DEBUG Corresponding type is already real float64.
2023-01-07 11:10:52,157 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:11:06,228 INFO Computing data fidelity for 114564 rotations and 2048 images at 29%
2023-01-07 11:11:07,002 DEBUG Corresponding type is already real float64.
2023-01-07 11:11:07,003 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:11:21,689 INFO Computing data fidelity for 114564 rotations and 2048 images at 30%
2023-01-07 11:11:22,488 DEBUG Corresponding type is already real float64.
2023-01-07 11:11:22,488 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:11:37,447 INFO Computing data fidelity for 114564 rotations and 2048 images at 31%
2023-01-07 11:11:38,414 DEBUG Corresponding type is already real float64.
2023-01-07 11:11:38,414 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:11:53,685 INFO Computing data fidelity for 114564 rotations and 2048 images at 32%
2023-01-07 11:11:54,469 DEBUG Corresponding type is already real float64.
2023-01-07 11:11:54,469 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:12:08,823 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2023-01-07 11:12:09,598 DEBUG Corresponding type is already real float64.
2023-01-07 11:12:09,598 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:12:22,985 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2023-01-07 11:12:23,789 DEBUG Corresponding type is already real float64.
2023-01-07 11:12:23,789 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:12:38,848 INFO Computing data fidelity for 114564 rotations and 2048 images at 34%
2023-01-07 11:12:39,733 DEBUG Corresponding type is already real float64.
2023-01-07 11:12:39,733 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:12:55,550 INFO Computing data fidelity for 114564 rotations and 2048 images at 35%
2023-01-07 11:12:56,426 DEBUG Corresponding type is already real float64.
2023-01-07 11:12:56,426 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:13:11,973 INFO Computing data fidelity for 114564 rotations and 2048 images at 36%
2023-01-07 11:13:12,842 DEBUG Corresponding type is already real float64.
2023-01-07 11:13:12,842 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:13:28,650 INFO Computing data fidelity for 114564 rotations and 2048 images at 37%
2023-01-07 11:13:29,491 DEBUG Corresponding type is already real float64.
2023-01-07 11:13:29,492 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:13:44,350 INFO Computing data fidelity for 114564 rotations and 2048 images at 38%
2023-01-07 11:13:45,131 DEBUG Corresponding type is already real float64.
2023-01-07 11:13:45,131 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:13:59,433 INFO Computing data fidelity for 114564 rotations and 2048 images at 39%
2023-01-07 11:14:00,212 DEBUG Corresponding type is already real float64.
2023-01-07 11:14:00,213 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:14:14,798 INFO Computing data fidelity for 114564 rotations and 2048 images at 40%
2023-01-07 11:14:15,684 DEBUG Corresponding type is already real float64.
2023-01-07 11:14:15,684 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:14:30,481 INFO Computing data fidelity for 114564 rotations and 2048 images at 41%
2023-01-07 11:14:31,244 DEBUG Corresponding type is already real float64.
2023-01-07 11:14:31,244 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:14:45,785 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2023-01-07 11:14:46,585 DEBUG Corresponding type is already real float64.
2023-01-07 11:14:46,585 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:15:01,267 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2023-01-07 11:15:02,088 DEBUG Corresponding type is already real float64.
2023-01-07 11:15:02,088 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:15:16,140 INFO Computing data fidelity for 114564 rotations and 2048 images at 43%
2023-01-07 11:15:16,897 DEBUG Corresponding type is already real float64.
2023-01-07 11:15:16,897 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:15:30,410 INFO Computing data fidelity for 114564 rotations and 2048 images at 44%
2023-01-07 11:15:31,169 DEBUG Corresponding type is already real float64.
2023-01-07 11:15:31,169 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:15:44,703 INFO Computing data fidelity for 114564 rotations and 2048 images at 45%
2023-01-07 11:15:45,460 DEBUG Corresponding type is already real float64.
2023-01-07 11:15:45,460 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:15:59,051 INFO Computing data fidelity for 114564 rotations and 2048 images at 46%
2023-01-07 11:15:59,811 DEBUG Corresponding type is already real float64.
2023-01-07 11:15:59,811 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:16:14,662 INFO Computing data fidelity for 114564 rotations and 2048 images at 47%
2023-01-07 11:16:15,443 DEBUG Corresponding type is already real float64.
2023-01-07 11:16:15,443 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:16:29,929 INFO Computing data fidelity for 114564 rotations and 2048 images at 48%
2023-01-07 11:16:30,682 DEBUG Corresponding type is already real float64.
2023-01-07 11:16:30,682 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:16:45,382 INFO Computing data fidelity for 114564 rotations and 2048 images at 49%
2023-01-07 11:16:46,188 DEBUG Corresponding type is already real float64.
2023-01-07 11:16:46,188 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:17:00,640 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2023-01-07 11:17:01,470 DEBUG Corresponding type is already real float64.
2023-01-07 11:17:01,470 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:17:16,101 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2023-01-07 11:17:16,910 DEBUG Corresponding type is already real float64.
2023-01-07 11:17:16,910 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:17:31,733 INFO Computing data fidelity for 114564 rotations and 2048 images at 51%
2023-01-07 11:17:32,701 DEBUG Corresponding type is already real float64.
2023-01-07 11:17:32,701 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:17:48,298 INFO Computing data fidelity for 114564 rotations and 2048 images at 52%
2023-01-07 11:17:49,158 DEBUG Corresponding type is already real float64.
2023-01-07 11:17:49,159 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:18:04,185 INFO Computing data fidelity for 114564 rotations and 2048 images at 53%
2023-01-07 11:18:05,020 DEBUG Corresponding type is already real float64.
2023-01-07 11:18:05,020 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:18:20,152 INFO Computing data fidelity for 114564 rotations and 2048 images at 54%
2023-01-07 11:18:21,027 DEBUG Corresponding type is already real float64.
2023-01-07 11:18:21,027 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:18:35,901 INFO Computing data fidelity for 114564 rotations and 2048 images at 55%
2023-01-07 11:18:36,710 DEBUG Corresponding type is already real float64.
2023-01-07 11:18:36,710 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:18:51,298 INFO Computing data fidelity for 114564 rotations and 2048 images at 56%
2023-01-07 11:18:52,100 DEBUG Corresponding type is already real float64.
2023-01-07 11:18:52,101 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:19:06,932 INFO Computing data fidelity for 114564 rotations and 2048 images at 57%
2023-01-07 11:19:07,790 DEBUG Corresponding type is already real float64.
2023-01-07 11:19:07,790 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:19:23,348 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2023-01-07 11:19:24,206 DEBUG Corresponding type is already real float64.
2023-01-07 11:19:24,224 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:19:39,798 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2023-01-07 11:19:40,620 DEBUG Corresponding type is already real float64.
2023-01-07 11:19:40,620 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:19:55,660 INFO Computing data fidelity for 114564 rotations and 2048 images at 59%
2023-01-07 11:19:56,419 DEBUG Corresponding type is already real float64.
2023-01-07 11:19:56,419 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:20:10,481 INFO Computing data fidelity for 114564 rotations and 2048 images at 60%
2023-01-07 11:20:11,294 DEBUG Corresponding type is already real float64.
2023-01-07 11:20:11,294 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:20:25,556 INFO Computing data fidelity for 114564 rotations and 2048 images at 61%
2023-01-07 11:20:26,334 DEBUG Corresponding type is already real float64.
2023-01-07 11:20:26,334 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:20:41,129 INFO Computing data fidelity for 114564 rotations and 2048 images at 62%
2023-01-07 11:20:41,919 DEBUG Corresponding type is already real float64.
2023-01-07 11:20:41,919 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:20:56,966 INFO Computing data fidelity for 114564 rotations and 2048 images at 63%
2023-01-07 11:20:57,746 DEBUG Corresponding type is already real float64.
2023-01-07 11:20:57,746 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:21:12,521 INFO Computing data fidelity for 114564 rotations and 2048 images at 64%
2023-01-07 11:21:13,357 DEBUG Corresponding type is already real float64.
2023-01-07 11:21:13,357 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:21:27,339 INFO Computing data fidelity for 114564 rotations and 2048 images at 65%
2023-01-07 11:21:28,117 DEBUG Corresponding type is already real float64.
2023-01-07 11:21:28,118 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:21:41,983 INFO Computing data fidelity for 114564 rotations and 2048 images at 66%
2023-01-07 11:21:42,804 DEBUG Corresponding type is already real float64.
2023-01-07 11:21:42,804 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:21:56,705 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2023-01-07 11:21:57,530 DEBUG Corresponding type is already real float64.
2023-01-07 11:21:57,530 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:22:12,382 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2023-01-07 11:22:13,222 DEBUG Corresponding type is already real float64.
2023-01-07 11:22:13,222 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:22:27,123 INFO Computing data fidelity for 114564 rotations and 2048 images at 68%
2023-01-07 11:22:27,890 DEBUG Corresponding type is already real float64.
2023-01-07 11:22:27,890 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:22:42,238 INFO Computing data fidelity for 114564 rotations and 2048 images at 69%
2023-01-07 11:22:43,018 DEBUG Corresponding type is already real float64.
2023-01-07 11:22:43,018 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:22:56,880 INFO Computing data fidelity for 114564 rotations and 2048 images at 70%
2023-01-07 11:22:57,636 DEBUG Corresponding type is already real float64.
2023-01-07 11:22:57,636 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:23:10,942 INFO Computing data fidelity for 114564 rotations and 2048 images at 71%
2023-01-07 11:23:11,696 DEBUG Corresponding type is already real float64.
2023-01-07 11:23:11,696 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:23:24,948 INFO Computing data fidelity for 114564 rotations and 2048 images at 72%
2023-01-07 11:23:25,714 DEBUG Corresponding type is already real float64.
2023-01-07 11:23:25,715 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:23:40,015 INFO Computing data fidelity for 114564 rotations and 2048 images at 73%
2023-01-07 11:23:40,785 DEBUG Corresponding type is already real float64.
2023-01-07 11:23:40,785 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:23:54,183 INFO Computing data fidelity for 114564 rotations and 2048 images at 74%
2023-01-07 11:23:54,951 DEBUG Corresponding type is already real float64.
2023-01-07 11:23:54,951 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:24:08,503 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2023-01-07 11:24:09,334 DEBUG Corresponding type is already real float64.
2023-01-07 11:24:09,334 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:24:23,732 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2023-01-07 11:24:24,533 DEBUG Corresponding type is already real float64.
2023-01-07 11:24:24,533 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:24:39,206 INFO Computing data fidelity for 114564 rotations and 2048 images at 76%
2023-01-07 11:24:40,015 DEBUG Corresponding type is already real float64.
2023-01-07 11:24:40,015 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:24:54,757 INFO Computing data fidelity for 114564 rotations and 2048 images at 77%
2023-01-07 11:24:55,610 DEBUG Corresponding type is already real float64.
2023-01-07 11:24:55,610 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:25:09,548 INFO Computing data fidelity for 114564 rotations and 2048 images at 78%
2023-01-07 11:25:10,364 DEBUG Corresponding type is already real float64.
2023-01-07 11:25:10,364 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:25:24,265 INFO Computing data fidelity for 114564 rotations and 2048 images at 79%
2023-01-07 11:25:25,042 DEBUG Corresponding type is already real float64.
2023-01-07 11:25:25,042 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:25:39,228 INFO Computing data fidelity for 114564 rotations and 2048 images at 80%
2023-01-07 11:25:40,051 DEBUG Corresponding type is already real float64.
2023-01-07 11:25:40,051 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:25:54,316 INFO Computing data fidelity for 114564 rotations and 2048 images at 81%
2023-01-07 11:25:55,083 DEBUG Corresponding type is already real float64.
2023-01-07 11:25:55,083 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:26:08,852 INFO Computing data fidelity for 114564 rotations and 2048 images at 82%
2023-01-07 11:26:09,617 DEBUG Corresponding type is already real float64.
2023-01-07 11:26:09,618 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:26:22,879 INFO Computing data fidelity for 114564 rotations and 2048 images at 83%
2023-01-07 11:26:23,628 DEBUG Corresponding type is already real float64.
2023-01-07 11:26:23,628 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:26:37,256 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2023-01-07 11:26:38,056 DEBUG Corresponding type is already real float64.
2023-01-07 11:26:38,056 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:26:52,281 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2023-01-07 11:26:53,179 DEBUG Corresponding type is already real float64.
2023-01-07 11:26:53,179 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:27:08,693 INFO Computing data fidelity for 114564 rotations and 2048 images at 85%
2023-01-07 11:27:09,637 DEBUG Corresponding type is already real float64.
2023-01-07 11:27:09,637 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:27:25,381 INFO Computing data fidelity for 114564 rotations and 2048 images at 86%
2023-01-07 11:27:26,215 DEBUG Corresponding type is already real float64.
2023-01-07 11:27:26,215 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:27:40,463 INFO Computing data fidelity for 114564 rotations and 2048 images at 87%
2023-01-07 11:27:41,207 DEBUG Corresponding type is already real float64.
2023-01-07 11:27:41,207 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:27:55,539 INFO Computing data fidelity for 114564 rotations and 2048 images at 88%
2023-01-07 11:27:56,327 DEBUG Corresponding type is already real float64.
2023-01-07 11:27:56,327 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:28:09,496 INFO Computing data fidelity for 114564 rotations and 2048 images at 89%
2023-01-07 11:28:10,230 DEBUG Corresponding type is already real float64.
2023-01-07 11:28:10,230 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:28:23,089 INFO Computing data fidelity for 114564 rotations and 2048 images at 90%
2023-01-07 11:28:23,836 DEBUG Corresponding type is already real float64.
2023-01-07 11:28:23,836 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:28:37,238 INFO Computing data fidelity for 114564 rotations and 2048 images at 91%
2023-01-07 11:28:37,974 DEBUG Corresponding type is already real float64.
2023-01-07 11:28:37,974 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:28:50,949 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2023-01-07 11:28:51,692 DEBUG Corresponding type is already real float64.
2023-01-07 11:28:51,692 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:29:04,819 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2023-01-07 11:29:05,557 DEBUG Corresponding type is already real float64.
2023-01-07 11:29:05,557 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:29:19,022 INFO Computing data fidelity for 114564 rotations and 2048 images at 93%
2023-01-07 11:29:19,791 DEBUG Corresponding type is already real float64.
2023-01-07 11:29:19,791 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:29:32,773 INFO Computing data fidelity for 114564 rotations and 2048 images at 94%
2023-01-07 11:29:33,508 DEBUG Corresponding type is already real float64.
2023-01-07 11:29:33,508 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:29:46,452 INFO Computing data fidelity for 114564 rotations and 2048 images at 95%
2023-01-07 11:29:47,185 DEBUG Corresponding type is already real float64.
2023-01-07 11:29:47,185 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:30:01,449 INFO Computing data fidelity for 114564 rotations and 2048 images at 96%
2023-01-07 11:30:02,190 DEBUG Corresponding type is already real float64.
2023-01-07 11:30:02,191 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:30:16,738 INFO Computing data fidelity for 114564 rotations and 2048 images at 97%
2023-01-07 11:30:17,561 DEBUG Corresponding type is already real float64.
2023-01-07 11:30:17,561 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:30:32,083 INFO Computing data fidelity for 114564 rotations and 2048 images at 98%
2023-01-07 11:30:32,919 DEBUG Corresponding type is already real float64.
2023-01-07 11:30:32,919 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:30:46,935 INFO Computing data fidelity for 114564 rotations and 2048 images at 99%
2023-01-07 11:30:47,404 DEBUG Corresponding type is already real float64.
2023-01-07 11:30:47,404 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:30:59,403 INFO Computing data fidelity for 114564 rotations and 2048 images at 100%
2023-01-07 11:31:02,380 INFO Do lambda update step
2023-01-07 11:31:26,906 INFO Do rots update step
2023-01-07 11:31:27,811 INFO Projecting 2048 vectors onto 114564-simplex at 2%
2023-01-07 11:31:28,462 INFO Projecting 2048 vectors onto 114564-simplex at 4%
2023-01-07 11:31:29,106 INFO Projecting 2048 vectors onto 114564-simplex at 7%
2023-01-07 11:31:29,720 INFO Projecting 2048 vectors onto 114564-simplex at 9%
2023-01-07 11:31:30,338 INFO Projecting 2048 vectors onto 114564-simplex at 12%
2023-01-07 11:31:30,956 INFO Projecting 2048 vectors onto 114564-simplex at 14%
2023-01-07 11:31:31,570 INFO Projecting 2048 vectors onto 114564-simplex at 17%
2023-01-07 11:31:32,193 INFO Projecting 2048 vectors onto 114564-simplex at 19%
2023-01-07 11:31:32,810 INFO Projecting 2048 vectors onto 114564-simplex at 21%
2023-01-07 11:31:33,428 INFO Projecting 2048 vectors onto 114564-simplex at 24%
2023-01-07 11:31:34,216 INFO Projecting 2048 vectors onto 114564-simplex at 26%
2023-01-07 11:31:34,834 INFO Projecting 2048 vectors onto 114564-simplex at 29%
2023-01-07 11:31:35,449 INFO Projecting 2048 vectors onto 114564-simplex at 31%
2023-01-07 11:31:36,074 INFO Projecting 2048 vectors onto 114564-simplex at 34%
2023-01-07 11:31:36,698 INFO Projecting 2048 vectors onto 114564-simplex at 36%
2023-01-07 11:31:37,323 INFO Projecting 2048 vectors onto 114564-simplex at 39%
2023-01-07 11:31:37,934 INFO Projecting 2048 vectors onto 114564-simplex at 41%
2023-01-07 11:31:38,551 INFO Projecting 2048 vectors onto 114564-simplex at 43%
2023-01-07 11:31:39,165 INFO Projecting 2048 vectors onto 114564-simplex at 46%
2023-01-07 11:31:39,784 INFO Projecting 2048 vectors onto 114564-simplex at 48%
2023-01-07 11:31:40,577 INFO Projecting 2048 vectors onto 114564-simplex at 51%
2023-01-07 11:31:41,195 INFO Projecting 2048 vectors onto 114564-simplex at 53%
2023-01-07 11:31:41,821 INFO Projecting 2048 vectors onto 114564-simplex at 56%
2023-01-07 11:31:42,439 INFO Projecting 2048 vectors onto 114564-simplex at 58%
2023-01-07 11:31:43,045 INFO Projecting 2048 vectors onto 114564-simplex at 61%
2023-01-07 11:31:43,665 INFO Projecting 2048 vectors onto 114564-simplex at 63%
2023-01-07 11:31:44,281 INFO Projecting 2048 vectors onto 114564-simplex at 65%
2023-01-07 11:31:44,912 INFO Projecting 2048 vectors onto 114564-simplex at 68%
2023-01-07 11:31:45,525 INFO Projecting 2048 vectors onto 114564-simplex at 70%
2023-01-07 11:31:46,190 INFO Projecting 2048 vectors onto 114564-simplex at 73%
2023-01-07 11:31:47,098 INFO Projecting 2048 vectors onto 114564-simplex at 75%
2023-01-07 11:31:47,823 INFO Projecting 2048 vectors onto 114564-simplex at 78%
2023-01-07 11:31:48,526 INFO Projecting 2048 vectors onto 114564-simplex at 80%
2023-01-07 11:31:49,249 INFO Projecting 2048 vectors onto 114564-simplex at 83%
2023-01-07 11:31:49,924 INFO Projecting 2048 vectors onto 114564-simplex at 85%
2023-01-07 11:31:50,561 INFO Projecting 2048 vectors onto 114564-simplex at 87%
2023-01-07 11:31:51,231 INFO Projecting 2048 vectors onto 114564-simplex at 90%
2023-01-07 11:31:51,894 INFO Projecting 2048 vectors onto 114564-simplex at 92%
2023-01-07 11:31:52,582 INFO Projecting 2048 vectors onto 114564-simplex at 95%
2023-01-07 11:31:53,290 INFO Projecting 2048 vectors onto 114564-simplex at 97%
2023-01-07 11:31:53,913 INFO Projecting 2048 vectors onto 114564-simplex at 100%
2023-01-07 11:31:55,384 INFO Computing 50 means of 522 points in at most 20 steps...
2023-01-07 11:31:55,445 INFO Computing 2048 means at 2%
2023-01-07 11:31:55,521 INFO Computing 50 means of 478 points in at most 20 steps...
2023-01-07 11:31:55,572 INFO Computing 2048 means at 4%
2023-01-07 11:31:55,647 INFO Computing 50 means of 498 points in at most 20 steps...
2023-01-07 11:31:55,701 INFO Computing 2048 means at 7%
2023-01-07 11:31:55,778 INFO Computing 50 means of 520 points in at most 20 steps...
2023-01-07 11:31:55,838 INFO Computing 2048 means at 9%
2023-01-07 11:31:55,914 INFO Computing 50 means of 499 points in at most 20 steps...
2023-01-07 11:31:55,968 INFO Computing 2048 means at 12%
2023-01-07 11:31:56,047 INFO Computing 50 means of 508 points in at most 20 steps...
2023-01-07 11:31:56,101 INFO Computing 2048 means at 14%
2023-01-07 11:31:56,180 INFO Computing 50 means of 521 points in at most 20 steps...
2023-01-07 11:31:56,236 INFO Computing 2048 means at 17%
2023-01-07 11:31:56,313 INFO Computing 50 means of 512 points in at most 20 steps...
2023-01-07 11:31:56,367 INFO Computing 2048 means at 19%
2023-01-07 11:31:56,444 INFO Computing 50 means of 489 points in at most 20 steps...
2023-01-07 11:31:56,496 INFO Computing 2048 means at 21%
2023-01-07 11:31:56,572 INFO Computing 50 means of 493 points in at most 20 steps...
2023-01-07 11:31:56,626 INFO Computing 2048 means at 24%
2023-01-07 11:31:56,708 INFO Computing 50 means of 497 points in at most 20 steps...
2023-01-07 11:31:56,761 INFO Computing 2048 means at 26%
2023-01-07 11:31:56,839 INFO Computing 50 means of 487 points in at most 20 steps...
2023-01-07 11:31:56,894 INFO Computing 2048 means at 29%
2023-01-07 11:31:56,971 INFO Computing 50 means of 493 points in at most 20 steps...
2023-01-07 11:31:57,023 INFO Computing 2048 means at 31%
2023-01-07 11:31:57,099 INFO Computing 50 means of 497 points in at most 20 steps...
2023-01-07 11:31:57,151 INFO Computing 2048 means at 34%
2023-01-07 11:31:57,225 INFO Computing 50 means of 510 points in at most 20 steps...
2023-01-07 11:31:57,278 INFO Computing 2048 means at 36%
2023-01-07 11:31:57,352 INFO Computing 50 means of 487 points in at most 20 steps...
2023-01-07 11:31:57,406 INFO Computing 2048 means at 39%
2023-01-07 11:31:57,481 INFO Computing 50 means of 545 points in at most 20 steps...
2023-01-07 11:31:57,548 INFO Computing 2048 means at 41%
2023-01-07 11:31:57,623 INFO Computing 50 means of 481 points in at most 20 steps...
2023-01-07 11:31:57,673 INFO Computing 2048 means at 43%
2023-01-07 11:31:57,749 INFO Computing 50 means of 514 points in at most 20 steps...
2023-01-07 11:31:57,801 INFO Computing 2048 means at 46%
2023-01-07 11:31:57,877 INFO Computing 50 means of 519 points in at most 20 steps...
2023-01-07 11:31:57,932 INFO Computing 2048 means at 48%
2023-01-07 11:31:58,014 INFO Computing 50 means of 489 points in at most 20 steps...
2023-01-07 11:31:58,067 INFO Computing 2048 means at 51%
2023-01-07 11:31:58,144 INFO Computing 50 means of 513 points in at most 20 steps...
2023-01-07 11:31:58,197 INFO Computing 2048 means at 53%
2023-01-07 11:31:58,272 INFO Computing 50 means of 506 points in at most 20 steps...
2023-01-07 11:31:58,325 INFO Computing 2048 means at 56%
2023-01-07 11:31:58,401 INFO Computing 50 means of 501 points in at most 20 steps...
2023-01-07 11:31:58,455 INFO Computing 2048 means at 58%
2023-01-07 11:31:58,530 INFO Computing 50 means of 497 points in at most 20 steps...
2023-01-07 11:31:58,584 INFO Computing 2048 means at 61%
2023-01-07 11:31:58,659 INFO Computing 50 means of 518 points in at most 20 steps...
2023-01-07 11:31:58,712 INFO Computing 2048 means at 63%
2023-01-07 11:31:58,787 INFO Computing 50 means of 509 points in at most 20 steps...
2023-01-07 11:31:58,844 INFO Computing 2048 means at 65%
2023-01-07 11:31:58,921 INFO Computing 50 means of 484 points in at most 20 steps...
2023-01-07 11:31:58,975 INFO Computing 2048 means at 68%
2023-01-07 11:31:59,052 INFO Computing 50 means of 497 points in at most 20 steps...
2023-01-07 11:31:59,106 INFO Computing 2048 means at 70%
2023-01-07 11:31:59,181 INFO Computing 50 means of 506 points in at most 20 steps...
2023-01-07 11:31:59,233 INFO Computing 2048 means at 73%
2023-01-07 11:31:59,315 INFO Computing 50 means of 496 points in at most 20 steps...
2023-01-07 11:31:59,368 INFO Computing 2048 means at 75%
2023-01-07 11:31:59,445 INFO Computing 50 means of 502 points in at most 20 steps...
2023-01-07 11:31:59,498 INFO Computing 2048 means at 78%
2023-01-07 11:31:59,573 INFO Computing 50 means of 483 points in at most 20 steps...
2023-01-07 11:31:59,625 INFO Computing 2048 means at 80%
2023-01-07 11:31:59,701 INFO Computing 50 means of 507 points in at most 20 steps...
2023-01-07 11:31:59,753 INFO Computing 2048 means at 83%
2023-01-07 11:31:59,828 INFO Computing 50 means of 489 points in at most 20 steps...
2023-01-07 11:31:59,881 INFO Computing 2048 means at 85%
2023-01-07 11:31:59,957 INFO Computing 50 means of 506 points in at most 20 steps...
2023-01-07 11:32:00,013 INFO Computing 2048 means at 87%
2023-01-07 11:32:00,088 INFO Computing 50 means of 503 points in at most 20 steps...
2023-01-07 11:32:00,142 INFO Computing 2048 means at 90%
2023-01-07 11:32:00,216 INFO Computing 50 means of 502 points in at most 20 steps...
2023-01-07 11:32:00,268 INFO Computing 2048 means at 92%
2023-01-07 11:32:00,342 INFO Computing 50 means of 500 points in at most 20 steps...
2023-01-07 11:32:00,407 INFO Computing 2048 means at 95%
2023-01-07 11:32:00,494 INFO Computing 50 means of 479 points in at most 20 steps...
2023-01-07 11:32:00,549 INFO Computing 2048 means at 97%
2023-01-07 11:32:00,624 INFO Computing 48 means of 478 points in at most 20 steps...
2023-01-07 11:32:00,674 INFO Computing 2048 means at 100%
2023-01-07 11:32:05,173 INFO Do vol update step
2023-01-07 11:32:05,175 INFO Compute adjoint forward mapping on the images
2023-01-07 11:32:06,833 DEBUG Corresponding type is already complex complex128.
2023-01-07 11:32:09,150 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2023-01-07 11:32:09,167 INFO Computing adjoint forward mappings from 2048 rotations at 50%
2023-01-07 11:32:10,629 DEBUG Corresponding type is already complex complex128.
2023-01-07 11:32:12,966 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2023-01-07 11:32:12,980 INFO Computing adjoint forward mappings from 2048 rotations at 100%
2023-01-07 11:32:13,798 DEBUG Corresponding type is already real float64.
2023-01-07 11:32:13,798 DEBUG anufft passed real_type for signal, converting
2023-01-07 11:32:19,710 INFO Computing kernel from 2048 rotations at 50%
2023-01-07 11:32:20,546 DEBUG Corresponding type is already real float64.
2023-01-07 11:32:20,546 DEBUG anufft passed real_type for signal, converting
2023-01-07 11:32:26,663 INFO Computing kernel from 2048 rotations at 100%
2023-01-07 11:32:26,665 INFO Computing non-centered Fourier Transform
2023-01-07 11:32:26,837 INFO Add ramp filter regularisation
2023-01-07 11:32:31,863 INFO Update data_discrepancies
2023-01-07 11:32:31,865 INFO Computing \|Ag.u - f_i\|^2
2023-01-07 11:32:32,664 DEBUG Corresponding type is already real float64.
2023-01-07 11:32:32,664 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:32:45,903 INFO Computing data fidelity for 114564 rotations and 2048 images at 0%
2023-01-07 11:32:46,636 DEBUG Corresponding type is already real float64.
2023-01-07 11:32:46,636 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:32:59,872 INFO Computing data fidelity for 114564 rotations and 2048 images at 1%
2023-01-07 11:33:00,786 DEBUG Corresponding type is already real float64.
2023-01-07 11:33:00,786 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:33:15,609 INFO Computing data fidelity for 114564 rotations and 2048 images at 2%
2023-01-07 11:33:16,391 DEBUG Corresponding type is already real float64.
2023-01-07 11:33:16,391 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:33:30,706 INFO Computing data fidelity for 114564 rotations and 2048 images at 3%
2023-01-07 11:33:31,438 DEBUG Corresponding type is already real float64.
2023-01-07 11:33:31,438 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:33:46,063 INFO Computing data fidelity for 114564 rotations and 2048 images at 4%
2023-01-07 11:33:46,842 DEBUG Corresponding type is already real float64.
2023-01-07 11:33:46,842 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:34:02,225 INFO Computing data fidelity for 114564 rotations and 2048 images at 5%
2023-01-07 11:34:03,116 DEBUG Corresponding type is already real float64.
2023-01-07 11:34:03,117 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:34:17,475 INFO Computing data fidelity for 114564 rotations and 2048 images at 6%
2023-01-07 11:34:18,245 DEBUG Corresponding type is already real float64.
2023-01-07 11:34:18,245 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:34:32,899 INFO Computing data fidelity for 114564 rotations and 2048 images at 7%
2023-01-07 11:34:33,774 DEBUG Corresponding type is already real float64.
2023-01-07 11:34:33,774 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:34:49,056 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2023-01-07 11:34:49,854 DEBUG Corresponding type is already real float64.
2023-01-07 11:34:49,854 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:35:04,506 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2023-01-07 11:35:05,343 DEBUG Corresponding type is already real float64.
2023-01-07 11:35:05,343 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:35:19,669 INFO Computing data fidelity for 114564 rotations and 2048 images at 9%
2023-01-07 11:35:20,486 DEBUG Corresponding type is already real float64.
2023-01-07 11:35:20,486 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:35:35,782 INFO Computing data fidelity for 114564 rotations and 2048 images at 10%
2023-01-07 11:35:36,642 DEBUG Corresponding type is already real float64.
2023-01-07 11:35:36,642 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:35:51,813 INFO Computing data fidelity for 114564 rotations and 2048 images at 11%
2023-01-07 11:35:52,613 DEBUG Corresponding type is already real float64.
2023-01-07 11:35:52,613 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:36:06,514 INFO Computing data fidelity for 114564 rotations and 2048 images at 12%
2023-01-07 11:36:07,283 DEBUG Corresponding type is already real float64.
2023-01-07 11:36:07,283 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:36:21,202 INFO Computing data fidelity for 114564 rotations and 2048 images at 13%
2023-01-07 11:36:22,061 DEBUG Corresponding type is already real float64.
2023-01-07 11:36:22,062 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:36:37,030 INFO Computing data fidelity for 114564 rotations and 2048 images at 14%
2023-01-07 11:36:37,780 DEBUG Corresponding type is already real float64.
2023-01-07 11:36:37,780 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:36:51,997 INFO Computing data fidelity for 114564 rotations and 2048 images at 15%
2023-01-07 11:36:52,748 DEBUG Corresponding type is already real float64.
2023-01-07 11:36:52,748 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:37:07,020 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2023-01-07 11:37:07,806 DEBUG Corresponding type is already real float64.
2023-01-07 11:37:07,806 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:37:22,449 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2023-01-07 11:37:23,295 DEBUG Corresponding type is already real float64.
2023-01-07 11:37:23,295 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:37:38,457 INFO Computing data fidelity for 114564 rotations and 2048 images at 17%
2023-01-07 11:37:39,259 DEBUG Corresponding type is already real float64.
2023-01-07 11:37:39,259 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:37:54,025 INFO Computing data fidelity for 114564 rotations and 2048 images at 18%
2023-01-07 11:37:54,794 DEBUG Corresponding type is already real float64.
2023-01-07 11:37:54,794 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:38:08,748 INFO Computing data fidelity for 114564 rotations and 2048 images at 19%
2023-01-07 11:38:09,520 DEBUG Corresponding type is already real float64.
2023-01-07 11:38:09,520 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:38:23,314 INFO Computing data fidelity for 114564 rotations and 2048 images at 20%
2023-01-07 11:38:24,059 DEBUG Corresponding type is already real float64.
2023-01-07 11:38:24,059 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:38:38,499 INFO Computing data fidelity for 114564 rotations and 2048 images at 21%
2023-01-07 11:38:39,283 DEBUG Corresponding type is already real float64.
2023-01-07 11:38:39,284 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:38:54,078 INFO Computing data fidelity for 114564 rotations and 2048 images at 22%
2023-01-07 11:38:54,924 DEBUG Corresponding type is already real float64.
2023-01-07 11:38:54,924 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:39:09,319 INFO Computing data fidelity for 114564 rotations and 2048 images at 23%
2023-01-07 11:39:10,166 DEBUG Corresponding type is already real float64.
2023-01-07 11:39:10,166 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:39:25,438 INFO Computing data fidelity for 114564 rotations and 2048 images at 24%
2023-01-07 11:39:26,311 DEBUG Corresponding type is already real float64.
2023-01-07 11:39:26,311 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:39:40,936 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2023-01-07 11:39:41,696 DEBUG Corresponding type is already real float64.
2023-01-07 11:39:41,696 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:39:56,243 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2023-01-07 11:39:57,088 DEBUG Corresponding type is already real float64.
2023-01-07 11:39:57,089 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:40:12,297 INFO Computing data fidelity for 114564 rotations and 2048 images at 26%
2023-01-07 11:40:13,086 DEBUG Corresponding type is already real float64.
2023-01-07 11:40:13,086 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:40:27,899 INFO Computing data fidelity for 114564 rotations and 2048 images at 27%
2023-01-07 11:40:28,658 DEBUG Corresponding type is already real float64.
2023-01-07 11:40:28,658 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:40:42,602 INFO Computing data fidelity for 114564 rotations and 2048 images at 28%
2023-01-07 11:40:43,368 DEBUG Corresponding type is already real float64.
2023-01-07 11:40:43,368 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:40:57,693 INFO Computing data fidelity for 114564 rotations and 2048 images at 29%
2023-01-07 11:40:58,481 DEBUG Corresponding type is already real float64.
2023-01-07 11:40:58,481 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:41:13,018 INFO Computing data fidelity for 114564 rotations and 2048 images at 30%
2023-01-07 11:41:13,761 DEBUG Corresponding type is already real float64.
2023-01-07 11:41:13,761 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:41:27,204 INFO Computing data fidelity for 114564 rotations and 2048 images at 31%
2023-01-07 11:41:27,948 DEBUG Corresponding type is already real float64.
2023-01-07 11:41:27,948 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:41:43,045 INFO Computing data fidelity for 114564 rotations and 2048 images at 32%
2023-01-07 11:41:43,929 DEBUG Corresponding type is already real float64.
2023-01-07 11:41:43,929 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:41:58,519 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2023-01-07 11:41:59,289 DEBUG Corresponding type is already real float64.
2023-01-07 11:41:59,290 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:42:12,593 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2023-01-07 11:42:13,352 DEBUG Corresponding type is already real float64.
2023-01-07 11:42:13,352 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:42:26,730 INFO Computing data fidelity for 114564 rotations and 2048 images at 34%
2023-01-07 11:42:27,487 DEBUG Corresponding type is already real float64.
2023-01-07 11:42:27,487 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:42:40,832 INFO Computing data fidelity for 114564 rotations and 2048 images at 35%
2023-01-07 11:42:41,588 DEBUG Corresponding type is already real float64.
2023-01-07 11:42:41,588 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:42:55,050 INFO Computing data fidelity for 114564 rotations and 2048 images at 36%
2023-01-07 11:42:55,798 DEBUG Corresponding type is already real float64.
2023-01-07 11:42:55,798 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:43:09,319 INFO Computing data fidelity for 114564 rotations and 2048 images at 37%
2023-01-07 11:43:10,074 DEBUG Corresponding type is already real float64.
2023-01-07 11:43:10,075 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:43:23,332 INFO Computing data fidelity for 114564 rotations and 2048 images at 38%
2023-01-07 11:43:24,072 DEBUG Corresponding type is already real float64.
2023-01-07 11:43:24,072 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:43:37,906 INFO Computing data fidelity for 114564 rotations and 2048 images at 39%
2023-01-07 11:43:38,646 DEBUG Corresponding type is already real float64.
2023-01-07 11:43:38,646 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:43:53,193 INFO Computing data fidelity for 114564 rotations and 2048 images at 40%
2023-01-07 11:43:53,931 DEBUG Corresponding type is already real float64.
2023-01-07 11:43:53,931 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:44:08,708 INFO Computing data fidelity for 114564 rotations and 2048 images at 41%
2023-01-07 11:44:09,500 DEBUG Corresponding type is already real float64.
2023-01-07 11:44:09,500 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:44:24,626 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2023-01-07 11:44:25,428 DEBUG Corresponding type is already real float64.
2023-01-07 11:44:25,428 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:44:39,635 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2023-01-07 11:44:40,391 DEBUG Corresponding type is already real float64.
2023-01-07 11:44:40,391 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:44:54,427 INFO Computing data fidelity for 114564 rotations and 2048 images at 43%
2023-01-07 11:44:55,185 DEBUG Corresponding type is already real float64.
2023-01-07 11:44:55,185 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:45:09,597 INFO Computing data fidelity for 114564 rotations and 2048 images at 44%
2023-01-07 11:45:10,344 DEBUG Corresponding type is already real float64.
2023-01-07 11:45:10,344 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:45:24,732 INFO Computing data fidelity for 114564 rotations and 2048 images at 45%
2023-01-07 11:45:25,602 DEBUG Corresponding type is already real float64.
2023-01-07 11:45:25,602 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:45:39,956 INFO Computing data fidelity for 114564 rotations and 2048 images at 46%
2023-01-07 11:45:40,705 DEBUG Corresponding type is already real float64.
2023-01-07 11:45:40,706 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:45:54,018 INFO Computing data fidelity for 114564 rotations and 2048 images at 47%
2023-01-07 11:45:54,767 DEBUG Corresponding type is already real float64.
2023-01-07 11:45:54,768 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:46:08,334 INFO Computing data fidelity for 114564 rotations and 2048 images at 48%
2023-01-07 11:46:09,163 DEBUG Corresponding type is already real float64.
2023-01-07 11:46:09,163 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:46:23,772 INFO Computing data fidelity for 114564 rotations and 2048 images at 49%
2023-01-07 11:46:24,536 DEBUG Corresponding type is already real float64.
2023-01-07 11:46:24,536 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:46:39,287 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2023-01-07 11:46:40,063 DEBUG Corresponding type is already real float64.
2023-01-07 11:46:40,063 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:46:54,852 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2023-01-07 11:46:55,740 DEBUG Corresponding type is already real float64.
2023-01-07 11:46:55,740 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:47:11,027 INFO Computing data fidelity for 114564 rotations and 2048 images at 51%
2023-01-07 11:47:11,880 DEBUG Corresponding type is already real float64.
2023-01-07 11:47:11,880 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:47:25,844 INFO Computing data fidelity for 114564 rotations and 2048 images at 52%
2023-01-07 11:47:26,660 DEBUG Corresponding type is already real float64.
2023-01-07 11:47:26,660 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:47:40,532 INFO Computing data fidelity for 114564 rotations and 2048 images at 53%
2023-01-07 11:47:41,285 DEBUG Corresponding type is already real float64.
2023-01-07 11:47:41,285 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:47:54,653 INFO Computing data fidelity for 114564 rotations and 2048 images at 54%
2023-01-07 11:47:55,475 DEBUG Corresponding type is already real float64.
2023-01-07 11:47:55,476 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:48:10,277 INFO Computing data fidelity for 114564 rotations and 2048 images at 55%
2023-01-07 11:48:11,132 DEBUG Corresponding type is already real float64.
2023-01-07 11:48:11,133 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:48:25,579 INFO Computing data fidelity for 114564 rotations and 2048 images at 56%
2023-01-07 11:48:26,394 DEBUG Corresponding type is already real float64.
2023-01-07 11:48:26,394 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:48:41,077 INFO Computing data fidelity for 114564 rotations and 2048 images at 57%
2023-01-07 11:48:41,889 DEBUG Corresponding type is already real float64.
2023-01-07 11:48:41,889 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:48:57,484 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2023-01-07 11:48:58,440 DEBUG Corresponding type is already real float64.
2023-01-07 11:48:58,440 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:49:13,706 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2023-01-07 11:49:14,551 DEBUG Corresponding type is already real float64.
2023-01-07 11:49:14,551 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:49:28,854 INFO Computing data fidelity for 114564 rotations and 2048 images at 59%
2023-01-07 11:49:29,624 DEBUG Corresponding type is already real float64.
2023-01-07 11:49:29,624 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:49:44,996 INFO Computing data fidelity for 114564 rotations and 2048 images at 60%
2023-01-07 11:49:45,852 DEBUG Corresponding type is already real float64.
2023-01-07 11:49:45,852 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:50:00,555 INFO Computing data fidelity for 114564 rotations and 2048 images at 61%
2023-01-07 11:50:01,358 DEBUG Corresponding type is already real float64.
2023-01-07 11:50:01,358 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:50:16,749 INFO Computing data fidelity for 114564 rotations and 2048 images at 62%
2023-01-07 11:50:17,739 DEBUG Corresponding type is already real float64.
2023-01-07 11:50:17,739 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:50:33,230 INFO Computing data fidelity for 114564 rotations and 2048 images at 63%
2023-01-07 11:50:34,008 DEBUG Corresponding type is already real float64.
2023-01-07 11:50:34,008 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:50:50,352 INFO Computing data fidelity for 114564 rotations and 2048 images at 64%
2023-01-07 11:50:51,220 DEBUG Corresponding type is already real float64.
2023-01-07 11:50:51,221 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:51:06,817 INFO Computing data fidelity for 114564 rotations and 2048 images at 65%
2023-01-07 11:51:07,611 DEBUG Corresponding type is already real float64.
2023-01-07 11:51:07,611 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:51:22,368 INFO Computing data fidelity for 114564 rotations and 2048 images at 66%
2023-01-07 11:51:23,223 DEBUG Corresponding type is already real float64.
2023-01-07 11:51:23,223 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:51:38,462 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2023-01-07 11:51:39,223 DEBUG Corresponding type is already real float64.
2023-01-07 11:51:39,223 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:51:53,664 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2023-01-07 11:51:54,472 DEBUG Corresponding type is already real float64.
2023-01-07 11:51:54,472 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:52:09,379 INFO Computing data fidelity for 114564 rotations and 2048 images at 68%
2023-01-07 11:52:10,174 DEBUG Corresponding type is already real float64.
2023-01-07 11:52:10,175 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:52:24,437 INFO Computing data fidelity for 114564 rotations and 2048 images at 69%
2023-01-07 11:52:25,205 DEBUG Corresponding type is already real float64.
2023-01-07 11:52:25,206 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:52:39,789 INFO Computing data fidelity for 114564 rotations and 2048 images at 70%
2023-01-07 11:52:40,600 DEBUG Corresponding type is already real float64.
2023-01-07 11:52:40,600 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:52:55,086 INFO Computing data fidelity for 114564 rotations and 2048 images at 71%
2023-01-07 11:52:55,837 DEBUG Corresponding type is already real float64.
2023-01-07 11:52:55,837 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:53:09,533 INFO Computing data fidelity for 114564 rotations and 2048 images at 72%
2023-01-07 11:53:10,296 DEBUG Corresponding type is already real float64.
2023-01-07 11:53:10,296 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:53:24,239 INFO Computing data fidelity for 114564 rotations and 2048 images at 73%
2023-01-07 11:53:25,003 DEBUG Corresponding type is already real float64.
2023-01-07 11:53:25,003 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:53:39,956 INFO Computing data fidelity for 114564 rotations and 2048 images at 74%
2023-01-07 11:53:40,818 DEBUG Corresponding type is already real float64.
2023-01-07 11:53:40,818 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:53:55,032 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2023-01-07 11:53:55,820 DEBUG Corresponding type is already real float64.
2023-01-07 11:53:55,820 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:54:10,868 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2023-01-07 11:54:11,661 DEBUG Corresponding type is already real float64.
2023-01-07 11:54:11,661 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:54:25,964 INFO Computing data fidelity for 114564 rotations and 2048 images at 76%
2023-01-07 11:54:26,764 DEBUG Corresponding type is already real float64.
2023-01-07 11:54:26,764 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:54:41,298 INFO Computing data fidelity for 114564 rotations and 2048 images at 77%
2023-01-07 11:54:42,109 DEBUG Corresponding type is already real float64.
2023-01-07 11:54:42,109 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:54:57,038 INFO Computing data fidelity for 114564 rotations and 2048 images at 78%
2023-01-07 11:54:57,903 DEBUG Corresponding type is already real float64.
2023-01-07 11:54:57,903 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:55:12,569 INFO Computing data fidelity for 114564 rotations and 2048 images at 79%
2023-01-07 11:55:13,408 DEBUG Corresponding type is already real float64.
2023-01-07 11:55:13,408 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:55:27,700 INFO Computing data fidelity for 114564 rotations and 2048 images at 80%
2023-01-07 11:55:28,467 DEBUG Corresponding type is already real float64.
2023-01-07 11:55:28,467 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:55:43,529 INFO Computing data fidelity for 114564 rotations and 2048 images at 81%
2023-01-07 11:55:44,341 DEBUG Corresponding type is already real float64.
2023-01-07 11:55:44,341 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:55:58,554 INFO Computing data fidelity for 114564 rotations and 2048 images at 82%
2023-01-07 11:55:59,362 DEBUG Corresponding type is already real float64.
2023-01-07 11:55:59,362 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:56:13,203 INFO Computing data fidelity for 114564 rotations and 2048 images at 83%
2023-01-07 11:56:13,959 DEBUG Corresponding type is already real float64.
2023-01-07 11:56:13,960 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:56:27,560 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2023-01-07 11:56:28,317 DEBUG Corresponding type is already real float64.
2023-01-07 11:56:28,317 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:56:42,161 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2023-01-07 11:56:42,960 DEBUG Corresponding type is already real float64.
2023-01-07 11:56:42,960 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:56:57,412 INFO Computing data fidelity for 114564 rotations and 2048 images at 85%
2023-01-07 11:56:58,195 DEBUG Corresponding type is already real float64.
2023-01-07 11:56:58,196 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:57:11,608 INFO Computing data fidelity for 114564 rotations and 2048 images at 86%
2023-01-07 11:57:12,356 DEBUG Corresponding type is already real float64.
2023-01-07 11:57:12,356 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:57:27,082 INFO Computing data fidelity for 114564 rotations and 2048 images at 87%
2023-01-07 11:57:27,823 DEBUG Corresponding type is already real float64.
2023-01-07 11:57:27,823 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:57:42,165 INFO Computing data fidelity for 114564 rotations and 2048 images at 88%
2023-01-07 11:57:42,998 DEBUG Corresponding type is already real float64.
2023-01-07 11:57:42,999 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:57:57,624 INFO Computing data fidelity for 114564 rotations and 2048 images at 89%
2023-01-07 11:57:58,437 DEBUG Corresponding type is already real float64.
2023-01-07 11:57:58,438 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:58:13,151 INFO Computing data fidelity for 114564 rotations and 2048 images at 90%
2023-01-07 11:58:14,001 DEBUG Corresponding type is already real float64.
2023-01-07 11:58:14,001 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:58:28,019 INFO Computing data fidelity for 114564 rotations and 2048 images at 91%
2023-01-07 11:58:28,855 DEBUG Corresponding type is already real float64.
2023-01-07 11:58:28,855 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:58:43,514 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2023-01-07 11:58:44,327 DEBUG Corresponding type is already real float64.
2023-01-07 11:58:44,327 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:58:58,843 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2023-01-07 11:58:59,720 DEBUG Corresponding type is already real float64.
2023-01-07 11:58:59,720 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:59:14,055 INFO Computing data fidelity for 114564 rotations and 2048 images at 93%
2023-01-07 11:59:14,863 DEBUG Corresponding type is already real float64.
2023-01-07 11:59:14,863 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:59:29,544 INFO Computing data fidelity for 114564 rotations and 2048 images at 94%
2023-01-07 11:59:30,356 DEBUG Corresponding type is already real float64.
2023-01-07 11:59:30,356 DEBUG nufft passed real_type for signal, converting
2023-01-07 11:59:45,206 INFO Computing data fidelity for 114564 rotations and 2048 images at 95%
2023-01-07 11:59:46,019 DEBUG Corresponding type is already real float64.
2023-01-07 11:59:46,019 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:00:00,962 INFO Computing data fidelity for 114564 rotations and 2048 images at 96%
2023-01-07 12:00:01,795 DEBUG Corresponding type is already real float64.
2023-01-07 12:00:01,796 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:00:16,866 INFO Computing data fidelity for 114564 rotations and 2048 images at 97%
2023-01-07 12:00:17,677 DEBUG Corresponding type is already real float64.
2023-01-07 12:00:17,678 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:00:32,602 INFO Computing data fidelity for 114564 rotations and 2048 images at 98%
2023-01-07 12:00:33,407 DEBUG Corresponding type is already real float64.
2023-01-07 12:00:33,407 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:00:48,440 INFO Computing data fidelity for 114564 rotations and 2048 images at 99%
2023-01-07 12:00:48,930 DEBUG Corresponding type is already real float64.
2023-01-07 12:00:48,930 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:01:03,117 INFO Computing data fidelity for 114564 rotations and 2048 images at 100%
2023-01-07 12:01:06,545 INFO Do lambda update step
2023-01-07 12:01:33,446 INFO Do rots update step
2023-01-07 12:01:34,380 INFO Projecting 2048 vectors onto 114564-simplex at 2%
2023-01-07 12:01:35,037 INFO Projecting 2048 vectors onto 114564-simplex at 4%
2023-01-07 12:01:35,679 INFO Projecting 2048 vectors onto 114564-simplex at 7%
2023-01-07 12:01:36,383 INFO Projecting 2048 vectors onto 114564-simplex at 9%
2023-01-07 12:01:37,055 INFO Projecting 2048 vectors onto 114564-simplex at 12%
2023-01-07 12:01:37,758 INFO Projecting 2048 vectors onto 114564-simplex at 14%
2023-01-07 12:01:38,439 INFO Projecting 2048 vectors onto 114564-simplex at 17%
2023-01-07 12:01:39,149 INFO Projecting 2048 vectors onto 114564-simplex at 19%
2023-01-07 12:01:39,841 INFO Projecting 2048 vectors onto 114564-simplex at 21%
2023-01-07 12:01:40,481 INFO Projecting 2048 vectors onto 114564-simplex at 24%
2023-01-07 12:01:41,314 INFO Projecting 2048 vectors onto 114564-simplex at 26%
2023-01-07 12:01:41,947 INFO Projecting 2048 vectors onto 114564-simplex at 29%
2023-01-07 12:01:42,575 INFO Projecting 2048 vectors onto 114564-simplex at 31%
2023-01-07 12:01:43,202 INFO Projecting 2048 vectors onto 114564-simplex at 34%
2023-01-07 12:01:43,827 INFO Projecting 2048 vectors onto 114564-simplex at 36%
2023-01-07 12:01:44,531 INFO Projecting 2048 vectors onto 114564-simplex at 39%
2023-01-07 12:01:45,234 INFO Projecting 2048 vectors onto 114564-simplex at 41%
2023-01-07 12:01:45,945 INFO Projecting 2048 vectors onto 114564-simplex at 43%
2023-01-07 12:01:46,659 INFO Projecting 2048 vectors onto 114564-simplex at 46%
2023-01-07 12:01:47,360 INFO Projecting 2048 vectors onto 114564-simplex at 48%
2023-01-07 12:01:48,292 INFO Projecting 2048 vectors onto 114564-simplex at 51%
2023-01-07 12:01:49,007 INFO Projecting 2048 vectors onto 114564-simplex at 53%
2023-01-07 12:01:49,706 INFO Projecting 2048 vectors onto 114564-simplex at 56%
2023-01-07 12:01:50,414 INFO Projecting 2048 vectors onto 114564-simplex at 58%
2023-01-07 12:01:51,109 INFO Projecting 2048 vectors onto 114564-simplex at 61%
2023-01-07 12:01:51,781 INFO Projecting 2048 vectors onto 114564-simplex at 63%
2023-01-07 12:01:52,479 INFO Projecting 2048 vectors onto 114564-simplex at 65%
2023-01-07 12:01:53,172 INFO Projecting 2048 vectors onto 114564-simplex at 68%
2023-01-07 12:01:53,880 INFO Projecting 2048 vectors onto 114564-simplex at 70%
2023-01-07 12:01:54,550 INFO Projecting 2048 vectors onto 114564-simplex at 73%
2023-01-07 12:01:55,456 INFO Projecting 2048 vectors onto 114564-simplex at 75%
2023-01-07 12:01:56,095 INFO Projecting 2048 vectors onto 114564-simplex at 78%
2023-01-07 12:01:56,756 INFO Projecting 2048 vectors onto 114564-simplex at 80%
2023-01-07 12:01:57,443 INFO Projecting 2048 vectors onto 114564-simplex at 83%
2023-01-07 12:01:58,093 INFO Projecting 2048 vectors onto 114564-simplex at 85%
2023-01-07 12:01:58,748 INFO Projecting 2048 vectors onto 114564-simplex at 87%
2023-01-07 12:01:59,382 INFO Projecting 2048 vectors onto 114564-simplex at 90%
2023-01-07 12:02:00,077 INFO Projecting 2048 vectors onto 114564-simplex at 92%
2023-01-07 12:02:00,763 INFO Projecting 2048 vectors onto 114564-simplex at 95%
2023-01-07 12:02:01,435 INFO Projecting 2048 vectors onto 114564-simplex at 97%
2023-01-07 12:02:02,123 INFO Projecting 2048 vectors onto 114564-simplex at 100%
2023-01-07 12:02:03,529 INFO Computing 50 means of 497 points in at most 20 steps...
2023-01-07 12:02:03,592 INFO Computing 2048 means at 2%
2023-01-07 12:02:03,670 INFO Computing 50 means of 477 points in at most 20 steps...
2023-01-07 12:02:03,724 INFO Computing 2048 means at 4%
2023-01-07 12:02:03,801 INFO Computing 50 means of 505 points in at most 20 steps...
2023-01-07 12:02:03,867 INFO Computing 2048 means at 7%
2023-01-07 12:02:03,942 INFO Computing 50 means of 510 points in at most 20 steps...
2023-01-07 12:02:04,003 INFO Computing 2048 means at 9%
2023-01-07 12:02:04,079 INFO Computing 50 means of 498 points in at most 20 steps...
2023-01-07 12:02:04,133 INFO Computing 2048 means at 12%
2023-01-07 12:02:04,211 INFO Computing 50 means of 504 points in at most 20 steps...
2023-01-07 12:02:04,264 INFO Computing 2048 means at 14%
2023-01-07 12:02:04,341 INFO Computing 50 means of 505 points in at most 20 steps...
2023-01-07 12:02:04,398 INFO Computing 2048 means at 17%
2023-01-07 12:02:04,475 INFO Computing 50 means of 525 points in at most 20 steps...
2023-01-07 12:02:04,531 INFO Computing 2048 means at 19%
2023-01-07 12:02:04,609 INFO Computing 50 means of 477 points in at most 20 steps...
2023-01-07 12:02:04,669 INFO Computing 2048 means at 21%
2023-01-07 12:02:04,756 INFO Computing 50 means of 474 points in at most 20 steps...
2023-01-07 12:02:04,816 INFO Computing 2048 means at 24%
2023-01-07 12:02:04,907 INFO Computing 50 means of 484 points in at most 20 steps...
2023-01-07 12:02:04,969 INFO Computing 2048 means at 26%
2023-01-07 12:02:05,053 INFO Computing 50 means of 496 points in at most 20 steps...
2023-01-07 12:02:05,115 INFO Computing 2048 means at 29%
2023-01-07 12:02:05,200 INFO Computing 50 means of 502 points in at most 20 steps...
2023-01-07 12:02:05,266 INFO Computing 2048 means at 31%
2023-01-07 12:02:05,349 INFO Computing 50 means of 494 points in at most 20 steps...
2023-01-07 12:02:05,411 INFO Computing 2048 means at 34%
2023-01-07 12:02:05,499 INFO Computing 50 means of 481 points in at most 20 steps...
2023-01-07 12:02:05,557 INFO Computing 2048 means at 36%
2023-01-07 12:02:05,636 INFO Computing 50 means of 482 points in at most 20 steps...
2023-01-07 12:02:05,696 INFO Computing 2048 means at 39%
2023-01-07 12:02:05,781 INFO Computing 50 means of 488 points in at most 20 steps...
2023-01-07 12:02:05,842 INFO Computing 2048 means at 41%
2023-01-07 12:02:05,926 INFO Computing 50 means of 495 points in at most 20 steps...
2023-01-07 12:02:05,990 INFO Computing 2048 means at 43%
2023-01-07 12:02:06,072 INFO Computing 50 means of 477 points in at most 20 steps...
2023-01-07 12:02:06,128 INFO Computing 2048 means at 46%
2023-01-07 12:02:06,211 INFO Computing 50 means of 522 points in at most 20 steps...
2023-01-07 12:02:06,277 INFO Computing 2048 means at 48%
2023-01-07 12:02:06,374 INFO Computing 50 means of 481 points in at most 20 steps...
2023-01-07 12:02:06,431 INFO Computing 2048 means at 51%
2023-01-07 12:02:06,512 INFO Computing 50 means of 510 points in at most 20 steps...
2023-01-07 12:02:06,568 INFO Computing 2048 means at 53%
2023-01-07 12:02:06,646 INFO Computing 50 means of 495 points in at most 20 steps...
2023-01-07 12:02:06,702 INFO Computing 2048 means at 56%
2023-01-07 12:02:06,785 INFO Computing 50 means of 484 points in at most 20 steps...
2023-01-07 12:02:06,848 INFO Computing 2048 means at 58%
2023-01-07 12:02:06,930 INFO Computing 50 means of 509 points in at most 20 steps...
2023-01-07 12:02:06,991 INFO Computing 2048 means at 61%
2023-01-07 12:02:07,068 INFO Computing 50 means of 483 points in at most 20 steps...
2023-01-07 12:02:07,125 INFO Computing 2048 means at 63%
2023-01-07 12:02:07,209 INFO Computing 50 means of 501 points in at most 20 steps...
2023-01-07 12:02:07,268 INFO Computing 2048 means at 65%
2023-01-07 12:02:07,349 INFO Computing 50 means of 503 points in at most 20 steps...
2023-01-07 12:02:07,412 INFO Computing 2048 means at 68%
2023-01-07 12:02:07,496 INFO Computing 50 means of 505 points in at most 20 steps...
2023-01-07 12:02:07,561 INFO Computing 2048 means at 70%
2023-01-07 12:02:07,646 INFO Computing 50 means of 492 points in at most 20 steps...
2023-01-07 12:02:07,708 INFO Computing 2048 means at 73%
2023-01-07 12:02:07,802 INFO Computing 50 means of 498 points in at most 20 steps...
2023-01-07 12:02:07,864 INFO Computing 2048 means at 75%
2023-01-07 12:02:07,947 INFO Computing 50 means of 476 points in at most 20 steps...
2023-01-07 12:02:08,002 INFO Computing 2048 means at 78%
2023-01-07 12:02:08,084 INFO Computing 50 means of 498 points in at most 20 steps...
2023-01-07 12:02:08,144 INFO Computing 2048 means at 80%
2023-01-07 12:02:08,226 INFO Computing 50 means of 492 points in at most 20 steps...
2023-01-07 12:02:08,287 INFO Computing 2048 means at 83%
2023-01-07 12:02:08,369 INFO Computing 50 means of 485 points in at most 20 steps...
2023-01-07 12:02:08,427 INFO Computing 2048 means at 85%
2023-01-07 12:02:08,511 INFO Computing 50 means of 492 points in at most 20 steps...
2023-01-07 12:02:08,573 INFO Computing 2048 means at 87%
2023-01-07 12:02:08,657 INFO Computing 50 means of 516 points in at most 20 steps...
2023-01-07 12:02:08,719 INFO Computing 2048 means at 90%
2023-01-07 12:02:08,800 INFO Computing 50 means of 477 points in at most 20 steps...
2023-01-07 12:02:08,860 INFO Computing 2048 means at 92%
2023-01-07 12:02:08,942 INFO Computing 50 means of 494 points in at most 20 steps...
2023-01-07 12:02:09,001 INFO Computing 2048 means at 95%
2023-01-07 12:02:09,086 INFO Computing 50 means of 485 points in at most 20 steps...
2023-01-07 12:02:09,142 INFO Computing 2048 means at 97%
2023-01-07 12:02:09,225 INFO Computing 48 means of 494 points in at most 20 steps...
2023-01-07 12:02:09,280 INFO Computing 2048 means at 100%
2023-01-07 12:02:13,861 INFO Do vol update step
2023-01-07 12:02:13,863 INFO Compute adjoint forward mapping on the images
2023-01-07 12:02:15,630 DEBUG Corresponding type is already complex complex128.
2023-01-07 12:02:18,214 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2023-01-07 12:02:18,231 INFO Computing adjoint forward mappings from 2048 rotations at 50%
2023-01-07 12:02:19,921 DEBUG Corresponding type is already complex complex128.
2023-01-07 12:02:22,506 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2023-01-07 12:02:22,519 INFO Computing adjoint forward mappings from 2048 rotations at 100%
2023-01-07 12:02:23,439 DEBUG Corresponding type is already real float64.
2023-01-07 12:02:23,439 DEBUG anufft passed real_type for signal, converting
2023-01-07 12:02:30,763 INFO Computing kernel from 2048 rotations at 50%
2023-01-07 12:02:31,935 DEBUG Corresponding type is already real float64.
2023-01-07 12:02:31,935 DEBUG anufft passed real_type for signal, converting
2023-01-07 12:02:39,088 INFO Computing kernel from 2048 rotations at 100%
2023-01-07 12:02:39,091 INFO Computing non-centered Fourier Transform
2023-01-07 12:02:39,292 INFO Add ramp filter regularisation
2023-01-07 12:02:44,186 INFO Update data_discrepancies
2023-01-07 12:02:44,188 INFO Computing \|Ag.u - f_i\|^2
2023-01-07 12:02:45,061 DEBUG Corresponding type is already real float64.
2023-01-07 12:02:45,061 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:03:00,645 INFO Computing data fidelity for 114564 rotations and 2048 images at 0%
2023-01-07 12:03:01,470 DEBUG Corresponding type is already real float64.
2023-01-07 12:03:01,470 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:03:17,024 INFO Computing data fidelity for 114564 rotations and 2048 images at 1%
2023-01-07 12:03:17,912 DEBUG Corresponding type is already real float64.
2023-01-07 12:03:17,912 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:03:32,499 INFO Computing data fidelity for 114564 rotations and 2048 images at 2%
2023-01-07 12:03:33,323 DEBUG Corresponding type is already real float64.
2023-01-07 12:03:33,323 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:03:46,677 INFO Computing data fidelity for 114564 rotations and 2048 images at 3%
2023-01-07 12:03:47,422 DEBUG Corresponding type is already real float64.
2023-01-07 12:03:47,422 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:04:01,054 INFO Computing data fidelity for 114564 rotations and 2048 images at 4%
2023-01-07 12:04:01,787 DEBUG Corresponding type is already real float64.
2023-01-07 12:04:01,787 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:04:16,524 INFO Computing data fidelity for 114564 rotations and 2048 images at 5%
2023-01-07 12:04:17,253 DEBUG Corresponding type is already real float64.
2023-01-07 12:04:17,253 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:04:30,483 INFO Computing data fidelity for 114564 rotations and 2048 images at 6%
2023-01-07 12:04:31,214 DEBUG Corresponding type is already real float64.
2023-01-07 12:04:31,214 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:04:44,451 INFO Computing data fidelity for 114564 rotations and 2048 images at 7%
2023-01-07 12:04:45,175 DEBUG Corresponding type is already real float64.
2023-01-07 12:04:45,175 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:04:58,341 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2023-01-07 12:04:59,110 DEBUG Corresponding type is already real float64.
2023-01-07 12:04:59,110 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:05:13,541 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2023-01-07 12:05:14,278 DEBUG Corresponding type is already real float64.
2023-01-07 12:05:14,278 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:05:27,525 INFO Computing data fidelity for 114564 rotations and 2048 images at 9%
2023-01-07 12:05:28,252 DEBUG Corresponding type is already real float64.
2023-01-07 12:05:28,252 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:05:42,118 INFO Computing data fidelity for 114564 rotations and 2048 images at 10%
2023-01-07 12:05:42,858 DEBUG Corresponding type is already real float64.
2023-01-07 12:05:42,858 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:05:58,248 INFO Computing data fidelity for 114564 rotations and 2048 images at 11%
2023-01-07 12:05:59,092 DEBUG Corresponding type is already real float64.
2023-01-07 12:05:59,092 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:06:14,651 INFO Computing data fidelity for 114564 rotations and 2048 images at 12%
2023-01-07 12:06:15,519 DEBUG Corresponding type is already real float64.
2023-01-07 12:06:15,519 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:06:29,244 INFO Computing data fidelity for 114564 rotations and 2048 images at 13%
2023-01-07 12:06:30,002 DEBUG Corresponding type is already real float64.
2023-01-07 12:06:30,002 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:06:43,037 INFO Computing data fidelity for 114564 rotations and 2048 images at 14%
2023-01-07 12:06:43,799 DEBUG Corresponding type is already real float64.
2023-01-07 12:06:43,799 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:06:56,843 INFO Computing data fidelity for 114564 rotations and 2048 images at 15%
2023-01-07 12:06:57,602 DEBUG Corresponding type is already real float64.
2023-01-07 12:06:57,602 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:07:10,628 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2023-01-07 12:07:11,387 DEBUG Corresponding type is already real float64.
2023-01-07 12:07:11,387 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:07:24,373 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2023-01-07 12:07:25,133 DEBUG Corresponding type is already real float64.
2023-01-07 12:07:25,133 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:07:38,164 INFO Computing data fidelity for 114564 rotations and 2048 images at 17%
2023-01-07 12:07:38,919 DEBUG Corresponding type is already real float64.
2023-01-07 12:07:38,919 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:07:51,879 INFO Computing data fidelity for 114564 rotations and 2048 images at 18%
2023-01-07 12:07:52,635 DEBUG Corresponding type is already real float64.
2023-01-07 12:07:52,635 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:08:05,607 INFO Computing data fidelity for 114564 rotations and 2048 images at 19%
2023-01-07 12:08:06,379 DEBUG Corresponding type is already real float64.
2023-01-07 12:08:06,379 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:08:19,327 INFO Computing data fidelity for 114564 rotations and 2048 images at 20%
2023-01-07 12:08:20,085 DEBUG Corresponding type is already real float64.
2023-01-07 12:08:20,085 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:08:33,001 INFO Computing data fidelity for 114564 rotations and 2048 images at 21%
2023-01-07 12:08:33,749 DEBUG Corresponding type is already real float64.
2023-01-07 12:08:33,749 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:08:46,708 INFO Computing data fidelity for 114564 rotations and 2048 images at 22%
2023-01-07 12:08:47,465 DEBUG Corresponding type is already real float64.
2023-01-07 12:08:47,465 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:09:00,390 INFO Computing data fidelity for 114564 rotations and 2048 images at 23%
2023-01-07 12:09:01,145 DEBUG Corresponding type is already real float64.
2023-01-07 12:09:01,145 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:09:14,058 INFO Computing data fidelity for 114564 rotations and 2048 images at 24%
2023-01-07 12:09:14,803 DEBUG Corresponding type is already real float64.
2023-01-07 12:09:14,803 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:09:27,694 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2023-01-07 12:09:28,441 DEBUG Corresponding type is already real float64.
2023-01-07 12:09:28,441 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:09:41,398 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2023-01-07 12:09:42,136 DEBUG Corresponding type is already real float64.
2023-01-07 12:09:42,136 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:09:54,993 INFO Computing data fidelity for 114564 rotations and 2048 images at 26%
2023-01-07 12:09:55,725 DEBUG Corresponding type is already real float64.
2023-01-07 12:09:55,725 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:10:08,616 INFO Computing data fidelity for 114564 rotations and 2048 images at 27%
2023-01-07 12:10:09,346 DEBUG Corresponding type is already real float64.
2023-01-07 12:10:09,347 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:10:22,158 INFO Computing data fidelity for 114564 rotations and 2048 images at 28%
2023-01-07 12:10:22,907 DEBUG Corresponding type is already real float64.
2023-01-07 12:10:22,907 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:10:35,838 INFO Computing data fidelity for 114564 rotations and 2048 images at 29%
2023-01-07 12:10:36,570 DEBUG Corresponding type is already real float64.
2023-01-07 12:10:36,570 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:10:49,833 INFO Computing data fidelity for 114564 rotations and 2048 images at 30%
2023-01-07 12:10:50,593 DEBUG Corresponding type is already real float64.
2023-01-07 12:10:50,593 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:11:03,578 INFO Computing data fidelity for 114564 rotations and 2048 images at 31%
2023-01-07 12:11:04,347 DEBUG Corresponding type is already real float64.
2023-01-07 12:11:04,347 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:11:17,228 INFO Computing data fidelity for 114564 rotations and 2048 images at 32%
2023-01-07 12:11:17,965 DEBUG Corresponding type is already real float64.
2023-01-07 12:11:17,965 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:11:32,035 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2023-01-07 12:11:32,800 DEBUG Corresponding type is already real float64.
2023-01-07 12:11:32,800 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:11:47,471 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2023-01-07 12:11:48,263 DEBUG Corresponding type is already real float64.
2023-01-07 12:11:48,263 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:12:01,932 INFO Computing data fidelity for 114564 rotations and 2048 images at 34%
2023-01-07 12:12:02,709 DEBUG Corresponding type is already real float64.
2023-01-07 12:12:02,709 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:12:16,715 INFO Computing data fidelity for 114564 rotations and 2048 images at 35%
2023-01-07 12:12:17,482 DEBUG Corresponding type is already real float64.
2023-01-07 12:12:17,482 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:12:31,580 INFO Computing data fidelity for 114564 rotations and 2048 images at 36%
2023-01-07 12:12:32,348 DEBUG Corresponding type is already real float64.
2023-01-07 12:12:32,348 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:12:46,262 INFO Computing data fidelity for 114564 rotations and 2048 images at 37%
2023-01-07 12:12:47,019 DEBUG Corresponding type is already real float64.
2023-01-07 12:12:47,019 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:13:00,895 INFO Computing data fidelity for 114564 rotations and 2048 images at 38%
2023-01-07 12:13:01,643 DEBUG Corresponding type is already real float64.
2023-01-07 12:13:01,643 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:13:15,358 INFO Computing data fidelity for 114564 rotations and 2048 images at 39%
2023-01-07 12:13:16,102 DEBUG Corresponding type is already real float64.
2023-01-07 12:13:16,102 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:13:30,005 INFO Computing data fidelity for 114564 rotations and 2048 images at 40%
2023-01-07 12:13:30,767 DEBUG Corresponding type is already real float64.
2023-01-07 12:13:30,767 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:13:44,781 INFO Computing data fidelity for 114564 rotations and 2048 images at 41%
2023-01-07 12:13:45,542 DEBUG Corresponding type is already real float64.
2023-01-07 12:13:45,542 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:13:59,457 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2023-01-07 12:14:00,229 DEBUG Corresponding type is already real float64.
2023-01-07 12:14:00,229 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:14:14,018 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2023-01-07 12:14:14,791 DEBUG Corresponding type is already real float64.
2023-01-07 12:14:14,792 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:14:28,647 INFO Computing data fidelity for 114564 rotations and 2048 images at 43%
2023-01-07 12:14:29,437 DEBUG Corresponding type is already real float64.
2023-01-07 12:14:29,437 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:14:43,406 INFO Computing data fidelity for 114564 rotations and 2048 images at 44%
2023-01-07 12:14:44,178 DEBUG Corresponding type is already real float64.
2023-01-07 12:14:44,178 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:14:58,137 INFO Computing data fidelity for 114564 rotations and 2048 images at 45%
2023-01-07 12:14:58,898 DEBUG Corresponding type is already real float64.
2023-01-07 12:14:58,898 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:15:12,297 INFO Computing data fidelity for 114564 rotations and 2048 images at 46%
2023-01-07 12:15:13,054 DEBUG Corresponding type is already real float64.
2023-01-07 12:15:13,055 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:15:26,684 INFO Computing data fidelity for 114564 rotations and 2048 images at 47%
2023-01-07 12:15:27,461 DEBUG Corresponding type is already real float64.
2023-01-07 12:15:27,461 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:15:41,084 INFO Computing data fidelity for 114564 rotations and 2048 images at 48%
2023-01-07 12:15:41,842 DEBUG Corresponding type is already real float64.
2023-01-07 12:15:41,842 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:15:55,918 INFO Computing data fidelity for 114564 rotations and 2048 images at 49%
2023-01-07 12:15:56,673 DEBUG Corresponding type is already real float64.
2023-01-07 12:15:56,673 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:16:10,249 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2023-01-07 12:16:11,001 DEBUG Corresponding type is already real float64.
2023-01-07 12:16:11,001 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:16:25,110 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2023-01-07 12:16:25,869 DEBUG Corresponding type is already real float64.
2023-01-07 12:16:25,869 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:16:39,874 INFO Computing data fidelity for 114564 rotations and 2048 images at 51%
2023-01-07 12:16:40,630 DEBUG Corresponding type is already real float64.
2023-01-07 12:16:40,630 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:16:54,443 INFO Computing data fidelity for 114564 rotations and 2048 images at 52%
2023-01-07 12:16:55,197 DEBUG Corresponding type is already real float64.
2023-01-07 12:16:55,197 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:17:08,660 INFO Computing data fidelity for 114564 rotations and 2048 images at 53%
2023-01-07 12:17:09,416 DEBUG Corresponding type is already real float64.
2023-01-07 12:17:09,416 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:17:22,910 INFO Computing data fidelity for 114564 rotations and 2048 images at 54%
2023-01-07 12:17:23,681 DEBUG Corresponding type is already real float64.
2023-01-07 12:17:23,681 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:17:37,421 INFO Computing data fidelity for 114564 rotations and 2048 images at 55%
2023-01-07 12:17:38,184 DEBUG Corresponding type is already real float64.
2023-01-07 12:17:38,185 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:17:51,100 INFO Computing data fidelity for 114564 rotations and 2048 images at 56%
2023-01-07 12:17:51,852 DEBUG Corresponding type is already real float64.
2023-01-07 12:17:51,852 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:18:05,292 INFO Computing data fidelity for 114564 rotations and 2048 images at 57%
2023-01-07 12:18:06,059 DEBUG Corresponding type is already real float64.
2023-01-07 12:18:06,059 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:18:19,487 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2023-01-07 12:18:20,271 DEBUG Corresponding type is already real float64.
2023-01-07 12:18:20,271 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:18:33,994 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2023-01-07 12:18:34,726 DEBUG Corresponding type is already real float64.
2023-01-07 12:18:34,726 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:18:48,121 INFO Computing data fidelity for 114564 rotations and 2048 images at 59%
2023-01-07 12:18:48,886 DEBUG Corresponding type is already real float64.
2023-01-07 12:18:48,886 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:19:02,906 INFO Computing data fidelity for 114564 rotations and 2048 images at 60%
2023-01-07 12:19:03,659 DEBUG Corresponding type is already real float64.
2023-01-07 12:19:03,659 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:19:17,080 INFO Computing data fidelity for 114564 rotations and 2048 images at 61%
2023-01-07 12:19:17,828 DEBUG Corresponding type is already real float64.
2023-01-07 12:19:17,828 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:19:31,171 INFO Computing data fidelity for 114564 rotations and 2048 images at 62%
2023-01-07 12:19:31,918 DEBUG Corresponding type is already real float64.
2023-01-07 12:19:31,918 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:19:45,271 INFO Computing data fidelity for 114564 rotations and 2048 images at 63%
2023-01-07 12:19:46,014 DEBUG Corresponding type is already real float64.
2023-01-07 12:19:46,014 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:19:59,344 INFO Computing data fidelity for 114564 rotations and 2048 images at 64%
2023-01-07 12:20:00,096 DEBUG Corresponding type is already real float64.
2023-01-07 12:20:00,096 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:20:13,387 INFO Computing data fidelity for 114564 rotations and 2048 images at 65%
2023-01-07 12:20:14,136 DEBUG Corresponding type is already real float64.
2023-01-07 12:20:14,136 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:20:27,814 INFO Computing data fidelity for 114564 rotations and 2048 images at 66%
2023-01-07 12:20:28,589 DEBUG Corresponding type is already real float64.
2023-01-07 12:20:28,590 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:20:42,220 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2023-01-07 12:20:42,960 DEBUG Corresponding type is already real float64.
2023-01-07 12:20:42,960 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:20:56,906 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2023-01-07 12:20:57,655 DEBUG Corresponding type is already real float64.
2023-01-07 12:20:57,655 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:21:11,370 INFO Computing data fidelity for 114564 rotations and 2048 images at 68%
2023-01-07 12:21:12,134 DEBUG Corresponding type is already real float64.
2023-01-07 12:21:12,134 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:21:25,918 INFO Computing data fidelity for 114564 rotations and 2048 images at 69%
2023-01-07 12:21:26,665 DEBUG Corresponding type is already real float64.
2023-01-07 12:21:26,665 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:21:39,782 INFO Computing data fidelity for 114564 rotations and 2048 images at 70%
2023-01-07 12:21:40,526 DEBUG Corresponding type is already real float64.
2023-01-07 12:21:40,526 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:21:53,461 INFO Computing data fidelity for 114564 rotations and 2048 images at 71%
2023-01-07 12:21:54,211 DEBUG Corresponding type is already real float64.
2023-01-07 12:21:54,211 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:22:07,242 INFO Computing data fidelity for 114564 rotations and 2048 images at 72%
2023-01-07 12:22:07,981 DEBUG Corresponding type is already real float64.
2023-01-07 12:22:07,981 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:22:20,796 INFO Computing data fidelity for 114564 rotations and 2048 images at 73%
2023-01-07 12:22:21,557 DEBUG Corresponding type is already real float64.
2023-01-07 12:22:21,558 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:22:34,415 INFO Computing data fidelity for 114564 rotations and 2048 images at 74%
2023-01-07 12:22:35,154 DEBUG Corresponding type is already real float64.
2023-01-07 12:22:35,154 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:22:48,130 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2023-01-07 12:22:48,871 DEBUG Corresponding type is already real float64.
2023-01-07 12:22:48,871 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:23:01,734 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2023-01-07 12:23:02,497 DEBUG Corresponding type is already real float64.
2023-01-07 12:23:02,497 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:23:15,321 INFO Computing data fidelity for 114564 rotations and 2048 images at 76%
2023-01-07 12:23:16,059 DEBUG Corresponding type is already real float64.
2023-01-07 12:23:16,059 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:23:28,894 INFO Computing data fidelity for 114564 rotations and 2048 images at 77%
2023-01-07 12:23:29,637 DEBUG Corresponding type is already real float64.
2023-01-07 12:23:29,637 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:23:42,412 INFO Computing data fidelity for 114564 rotations and 2048 images at 78%
2023-01-07 12:23:43,154 DEBUG Corresponding type is already real float64.
2023-01-07 12:23:43,154 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:23:56,047 INFO Computing data fidelity for 114564 rotations and 2048 images at 79%
2023-01-07 12:23:56,781 DEBUG Corresponding type is already real float64.
2023-01-07 12:23:56,781 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:24:09,692 INFO Computing data fidelity for 114564 rotations and 2048 images at 80%
2023-01-07 12:24:10,423 DEBUG Corresponding type is already real float64.
2023-01-07 12:24:10,423 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:24:23,274 INFO Computing data fidelity for 114564 rotations and 2048 images at 81%
2023-01-07 12:24:24,010 DEBUG Corresponding type is already real float64.
2023-01-07 12:24:24,010 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:24:36,880 INFO Computing data fidelity for 114564 rotations and 2048 images at 82%
2023-01-07 12:24:37,610 DEBUG Corresponding type is already real float64.
2023-01-07 12:24:37,610 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:24:50,439 INFO Computing data fidelity for 114564 rotations and 2048 images at 83%
2023-01-07 12:24:51,179 DEBUG Corresponding type is already real float64.
2023-01-07 12:24:51,179 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:25:04,020 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2023-01-07 12:25:04,756 DEBUG Corresponding type is already real float64.
2023-01-07 12:25:04,756 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:25:17,653 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2023-01-07 12:25:18,387 DEBUG Corresponding type is already real float64.
2023-01-07 12:25:18,387 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:25:31,262 INFO Computing data fidelity for 114564 rotations and 2048 images at 85%
2023-01-07 12:25:31,999 DEBUG Corresponding type is already real float64.
2023-01-07 12:25:31,999 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:25:44,906 INFO Computing data fidelity for 114564 rotations and 2048 images at 86%
2023-01-07 12:25:45,642 DEBUG Corresponding type is already real float64.
2023-01-07 12:25:45,642 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:25:59,799 INFO Computing data fidelity for 114564 rotations and 2048 images at 87%
2023-01-07 12:26:00,551 DEBUG Corresponding type is already real float64.
2023-01-07 12:26:00,551 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:26:13,746 INFO Computing data fidelity for 114564 rotations and 2048 images at 88%
2023-01-07 12:26:14,478 DEBUG Corresponding type is already real float64.
2023-01-07 12:26:14,479 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:26:27,360 INFO Computing data fidelity for 114564 rotations and 2048 images at 89%
2023-01-07 12:26:28,092 DEBUG Corresponding type is already real float64.
2023-01-07 12:26:28,092 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:26:40,968 INFO Computing data fidelity for 114564 rotations and 2048 images at 90%
2023-01-07 12:26:41,729 DEBUG Corresponding type is already real float64.
2023-01-07 12:26:41,730 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:26:54,616 INFO Computing data fidelity for 114564 rotations and 2048 images at 91%
2023-01-07 12:26:55,361 DEBUG Corresponding type is already real float64.
2023-01-07 12:26:55,361 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:27:08,298 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2023-01-07 12:27:09,038 DEBUG Corresponding type is already real float64.
2023-01-07 12:27:09,038 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:27:21,854 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2023-01-07 12:27:22,600 DEBUG Corresponding type is already real float64.
2023-01-07 12:27:22,600 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:27:35,455 INFO Computing data fidelity for 114564 rotations and 2048 images at 93%
2023-01-07 12:27:36,195 DEBUG Corresponding type is already real float64.
2023-01-07 12:27:36,195 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:27:49,121 INFO Computing data fidelity for 114564 rotations and 2048 images at 94%
2023-01-07 12:27:49,856 DEBUG Corresponding type is already real float64.
2023-01-07 12:27:49,856 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:28:02,809 INFO Computing data fidelity for 114564 rotations and 2048 images at 95%
2023-01-07 12:28:03,543 DEBUG Corresponding type is already real float64.
2023-01-07 12:28:03,543 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:28:16,483 INFO Computing data fidelity for 114564 rotations and 2048 images at 96%
2023-01-07 12:28:17,223 DEBUG Corresponding type is already real float64.
2023-01-07 12:28:17,223 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:28:30,212 INFO Computing data fidelity for 114564 rotations and 2048 images at 97%
2023-01-07 12:28:30,956 DEBUG Corresponding type is already real float64.
2023-01-07 12:28:30,956 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:28:43,927 INFO Computing data fidelity for 114564 rotations and 2048 images at 98%
2023-01-07 12:28:44,690 DEBUG Corresponding type is already real float64.
2023-01-07 12:28:44,690 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:28:57,621 INFO Computing data fidelity for 114564 rotations and 2048 images at 99%
2023-01-07 12:28:58,070 DEBUG Corresponding type is already real float64.
2023-01-07 12:28:58,070 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:29:09,195 INFO Computing data fidelity for 114564 rotations and 2048 images at 100%
2023-01-07 12:29:10,898 INFO Do lambda update step
2023-01-07 12:29:33,382 INFO Do rots update step
2023-01-07 12:29:34,175 INFO Projecting 2048 vectors onto 114564-simplex at 2%
2023-01-07 12:29:34,789 INFO Projecting 2048 vectors onto 114564-simplex at 4%
2023-01-07 12:29:35,407 INFO Projecting 2048 vectors onto 114564-simplex at 7%
2023-01-07 12:29:36,013 INFO Projecting 2048 vectors onto 114564-simplex at 9%
2023-01-07 12:29:36,634 INFO Projecting 2048 vectors onto 114564-simplex at 12%
2023-01-07 12:29:37,241 INFO Projecting 2048 vectors onto 114564-simplex at 14%
2023-01-07 12:29:37,849 INFO Projecting 2048 vectors onto 114564-simplex at 17%
2023-01-07 12:29:38,459 INFO Projecting 2048 vectors onto 114564-simplex at 19%
2023-01-07 12:29:39,062 INFO Projecting 2048 vectors onto 114564-simplex at 21%
2023-01-07 12:29:39,669 INFO Projecting 2048 vectors onto 114564-simplex at 24%
2023-01-07 12:29:40,469 INFO Projecting 2048 vectors onto 114564-simplex at 26%
2023-01-07 12:29:41,080 INFO Projecting 2048 vectors onto 114564-simplex at 29%
2023-01-07 12:29:41,696 INFO Projecting 2048 vectors onto 114564-simplex at 31%
2023-01-07 12:29:42,302 INFO Projecting 2048 vectors onto 114564-simplex at 34%
2023-01-07 12:29:42,911 INFO Projecting 2048 vectors onto 114564-simplex at 36%
2023-01-07 12:29:43,522 INFO Projecting 2048 vectors onto 114564-simplex at 39%
2023-01-07 12:29:44,124 INFO Projecting 2048 vectors onto 114564-simplex at 41%
2023-01-07 12:29:44,732 INFO Projecting 2048 vectors onto 114564-simplex at 43%
2023-01-07 12:29:45,360 INFO Projecting 2048 vectors onto 114564-simplex at 46%
2023-01-07 12:29:45,969 INFO Projecting 2048 vectors onto 114564-simplex at 48%
2023-01-07 12:29:46,750 INFO Projecting 2048 vectors onto 114564-simplex at 51%
2023-01-07 12:29:47,357 INFO Projecting 2048 vectors onto 114564-simplex at 53%
2023-01-07 12:29:47,965 INFO Projecting 2048 vectors onto 114564-simplex at 56%
2023-01-07 12:29:48,573 INFO Projecting 2048 vectors onto 114564-simplex at 58%
2023-01-07 12:29:49,227 INFO Projecting 2048 vectors onto 114564-simplex at 61%
2023-01-07 12:29:49,842 INFO Projecting 2048 vectors onto 114564-simplex at 63%
2023-01-07 12:29:50,468 INFO Projecting 2048 vectors onto 114564-simplex at 65%
2023-01-07 12:29:51,068 INFO Projecting 2048 vectors onto 114564-simplex at 68%
2023-01-07 12:29:51,688 INFO Projecting 2048 vectors onto 114564-simplex at 70%
2023-01-07 12:29:52,297 INFO Projecting 2048 vectors onto 114564-simplex at 73%
2023-01-07 12:29:53,074 INFO Projecting 2048 vectors onto 114564-simplex at 75%
2023-01-07 12:29:53,684 INFO Projecting 2048 vectors onto 114564-simplex at 78%
2023-01-07 12:29:54,297 INFO Projecting 2048 vectors onto 114564-simplex at 80%
2023-01-07 12:29:54,902 INFO Projecting 2048 vectors onto 114564-simplex at 83%
2023-01-07 12:29:55,509 INFO Projecting 2048 vectors onto 114564-simplex at 85%
2023-01-07 12:29:56,110 INFO Projecting 2048 vectors onto 114564-simplex at 87%
2023-01-07 12:29:56,731 INFO Projecting 2048 vectors onto 114564-simplex at 90%
2023-01-07 12:29:57,333 INFO Projecting 2048 vectors onto 114564-simplex at 92%
2023-01-07 12:29:57,940 INFO Projecting 2048 vectors onto 114564-simplex at 95%
2023-01-07 12:29:58,554 INFO Projecting 2048 vectors onto 114564-simplex at 97%
2023-01-07 12:29:59,145 INFO Projecting 2048 vectors onto 114564-simplex at 100%
2023-01-07 12:30:00,595 INFO Computing 50 means of 488 points in at most 20 steps...
2023-01-07 12:30:00,656 INFO Computing 2048 means at 2%
2023-01-07 12:30:00,736 INFO Computing 50 means of 465 points in at most 20 steps...
2023-01-07 12:30:00,791 INFO Computing 2048 means at 4%
2023-01-07 12:30:00,875 INFO Computing 50 means of 483 points in at most 20 steps...
2023-01-07 12:30:00,927 INFO Computing 2048 means at 7%
2023-01-07 12:30:01,004 INFO Computing 50 means of 498 points in at most 20 steps...
2023-01-07 12:30:01,071 INFO Computing 2048 means at 9%
2023-01-07 12:30:01,148 INFO Computing 50 means of 484 points in at most 20 steps...
2023-01-07 12:30:01,201 INFO Computing 2048 means at 12%
2023-01-07 12:30:01,277 INFO Computing 50 means of 491 points in at most 20 steps...
2023-01-07 12:30:01,329 INFO Computing 2048 means at 14%
2023-01-07 12:30:01,405 INFO Computing 50 means of 481 points in at most 20 steps...
2023-01-07 12:30:01,459 INFO Computing 2048 means at 17%
2023-01-07 12:30:01,536 INFO Computing 50 means of 503 points in at most 20 steps...
2023-01-07 12:30:01,591 INFO Computing 2048 means at 19%
2023-01-07 12:30:01,667 INFO Computing 50 means of 482 points in at most 20 steps...
2023-01-07 12:30:01,721 INFO Computing 2048 means at 21%
2023-01-07 12:30:01,798 INFO Computing 50 means of 478 points in at most 20 steps...
2023-01-07 12:30:01,850 INFO Computing 2048 means at 24%
2023-01-07 12:30:01,934 INFO Computing 50 means of 488 points in at most 20 steps...
2023-01-07 12:30:01,988 INFO Computing 2048 means at 26%
2023-01-07 12:30:02,065 INFO Computing 50 means of 479 points in at most 20 steps...
2023-01-07 12:30:02,118 INFO Computing 2048 means at 29%
2023-01-07 12:30:02,194 INFO Computing 50 means of 497 points in at most 20 steps...
2023-01-07 12:30:02,248 INFO Computing 2048 means at 31%
2023-01-07 12:30:02,323 INFO Computing 50 means of 503 points in at most 20 steps...
2023-01-07 12:30:02,381 INFO Computing 2048 means at 34%
2023-01-07 12:30:02,457 INFO Computing 50 means of 480 points in at most 20 steps...
2023-01-07 12:30:02,510 INFO Computing 2048 means at 36%
2023-01-07 12:30:02,586 INFO Computing 50 means of 483 points in at most 20 steps...
2023-01-07 12:30:02,641 INFO Computing 2048 means at 39%
2023-01-07 12:30:02,717 INFO Computing 50 means of 477 points in at most 20 steps...
2023-01-07 12:30:02,771 INFO Computing 2048 means at 41%
2023-01-07 12:30:02,847 INFO Computing 50 means of 488 points in at most 20 steps...
2023-01-07 12:30:02,901 INFO Computing 2048 means at 43%
2023-01-07 12:30:02,977 INFO Computing 50 means of 467 points in at most 20 steps...
2023-01-07 12:30:03,030 INFO Computing 2048 means at 46%
2023-01-07 12:30:03,106 INFO Computing 50 means of 497 points in at most 20 steps...
2023-01-07 12:30:03,162 INFO Computing 2048 means at 48%
2023-01-07 12:30:03,244 INFO Computing 50 means of 478 points in at most 20 steps...
2023-01-07 12:30:03,297 INFO Computing 2048 means at 51%
2023-01-07 12:30:03,374 INFO Computing 50 means of 503 points in at most 20 steps...
2023-01-07 12:30:03,430 INFO Computing 2048 means at 53%
2023-01-07 12:30:03,506 INFO Computing 50 means of 482 points in at most 20 steps...
2023-01-07 12:30:03,562 INFO Computing 2048 means at 56%
2023-01-07 12:30:03,638 INFO Computing 50 means of 465 points in at most 20 steps...
2023-01-07 12:30:03,691 INFO Computing 2048 means at 58%
2023-01-07 12:30:03,768 INFO Computing 50 means of 514 points in at most 20 steps...
2023-01-07 12:30:03,825 INFO Computing 2048 means at 61%
2023-01-07 12:30:03,901 INFO Computing 50 means of 479 points in at most 20 steps...
2023-01-07 12:30:03,956 INFO Computing 2048 means at 63%
2023-01-07 12:30:04,036 INFO Computing 50 means of 490 points in at most 20 steps...
2023-01-07 12:30:04,094 INFO Computing 2048 means at 65%
2023-01-07 12:30:04,180 INFO Computing 50 means of 481 points in at most 20 steps...
2023-01-07 12:30:04,239 INFO Computing 2048 means at 68%
2023-01-07 12:30:04,320 INFO Computing 50 means of 484 points in at most 20 steps...
2023-01-07 12:30:04,379 INFO Computing 2048 means at 70%
2023-01-07 12:30:04,459 INFO Computing 50 means of 500 points in at most 20 steps...
2023-01-07 12:30:04,514 INFO Computing 2048 means at 73%
2023-01-07 12:30:04,597 INFO Computing 50 means of 460 points in at most 20 steps...
2023-01-07 12:30:04,649 INFO Computing 2048 means at 75%
2023-01-07 12:30:04,728 INFO Computing 50 means of 486 points in at most 20 steps...
2023-01-07 12:30:04,783 INFO Computing 2048 means at 78%
2023-01-07 12:30:04,861 INFO Computing 50 means of 486 points in at most 20 steps...
2023-01-07 12:30:04,915 INFO Computing 2048 means at 80%
2023-01-07 12:30:04,991 INFO Computing 50 means of 504 points in at most 20 steps...
2023-01-07 12:30:05,045 INFO Computing 2048 means at 83%
2023-01-07 12:30:05,122 INFO Computing 50 means of 499 points in at most 20 steps...
2023-01-07 12:30:05,179 INFO Computing 2048 means at 85%
2023-01-07 12:30:05,255 INFO Computing 50 means of 499 points in at most 20 steps...
2023-01-07 12:30:05,318 INFO Computing 2048 means at 87%
2023-01-07 12:30:05,397 INFO Computing 50 means of 491 points in at most 20 steps...
2023-01-07 12:30:05,452 INFO Computing 2048 means at 90%
2023-01-07 12:30:05,531 INFO Computing 50 means of 468 points in at most 20 steps...
2023-01-07 12:30:05,584 INFO Computing 2048 means at 92%
2023-01-07 12:30:05,661 INFO Computing 50 means of 473 points in at most 20 steps...
2023-01-07 12:30:05,714 INFO Computing 2048 means at 95%
2023-01-07 12:30:05,791 INFO Computing 50 means of 486 points in at most 20 steps...
2023-01-07 12:30:05,845 INFO Computing 2048 means at 97%
2023-01-07 12:30:05,922 INFO Computing 48 means of 466 points in at most 20 steps...
2023-01-07 12:30:05,973 INFO Computing 2048 means at 100%
2023-01-07 12:30:10,886 INFO Do vol update step
2023-01-07 12:30:10,888 INFO Compute adjoint forward mapping on the images
2023-01-07 12:30:12,513 DEBUG Corresponding type is already complex complex128.
2023-01-07 12:30:14,849 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2023-01-07 12:30:14,863 INFO Computing adjoint forward mappings from 2048 rotations at 50%
2023-01-07 12:30:16,342 DEBUG Corresponding type is already complex complex128.
2023-01-07 12:30:18,668 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2023-01-07 12:30:18,683 INFO Computing adjoint forward mappings from 2048 rotations at 100%
2023-01-07 12:30:19,511 DEBUG Corresponding type is already real float64.
2023-01-07 12:30:19,511 DEBUG anufft passed real_type for signal, converting
2023-01-07 12:30:25,546 INFO Computing kernel from 2048 rotations at 50%
2023-01-07 12:30:26,464 DEBUG Corresponding type is already real float64.
2023-01-07 12:30:26,464 DEBUG anufft passed real_type for signal, converting
2023-01-07 12:30:32,617 INFO Computing kernel from 2048 rotations at 100%
2023-01-07 12:30:32,619 INFO Computing non-centered Fourier Transform
2023-01-07 12:30:32,805 INFO Add ramp filter regularisation
2023-01-07 12:30:38,154 INFO Update data_discrepancies
2023-01-07 12:30:38,156 INFO Computing \|Ag.u - f_i\|^2
2023-01-07 12:30:39,033 DEBUG Corresponding type is already real float64.
2023-01-07 12:30:39,033 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:30:53,078 INFO Computing data fidelity for 114564 rotations and 2048 images at 0%
2023-01-07 12:30:53,840 DEBUG Corresponding type is already real float64.
2023-01-07 12:30:53,841 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:31:06,915 INFO Computing data fidelity for 114564 rotations and 2048 images at 1%
2023-01-07 12:31:07,658 DEBUG Corresponding type is already real float64.
2023-01-07 12:31:07,658 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:31:20,504 INFO Computing data fidelity for 114564 rotations and 2048 images at 2%
2023-01-07 12:31:21,239 DEBUG Corresponding type is already real float64.
2023-01-07 12:31:21,239 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:31:34,050 INFO Computing data fidelity for 114564 rotations and 2048 images at 3%
2023-01-07 12:31:34,781 DEBUG Corresponding type is already real float64.
2023-01-07 12:31:34,781 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:31:47,611 INFO Computing data fidelity for 114564 rotations and 2048 images at 4%
2023-01-07 12:31:48,321 DEBUG Corresponding type is already real float64.
2023-01-07 12:31:48,321 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:32:01,094 INFO Computing data fidelity for 114564 rotations and 2048 images at 5%
2023-01-07 12:32:01,799 DEBUG Corresponding type is already real float64.
2023-01-07 12:32:01,800 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:32:14,611 INFO Computing data fidelity for 114564 rotations and 2048 images at 6%
2023-01-07 12:32:15,325 DEBUG Corresponding type is already real float64.
2023-01-07 12:32:15,325 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:32:28,095 INFO Computing data fidelity for 114564 rotations and 2048 images at 7%
2023-01-07 12:32:28,809 DEBUG Corresponding type is already real float64.
2023-01-07 12:32:28,809 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:32:41,545 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2023-01-07 12:32:42,256 DEBUG Corresponding type is already real float64.
2023-01-07 12:32:42,256 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:32:55,066 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2023-01-07 12:32:55,783 DEBUG Corresponding type is already real float64.
2023-01-07 12:32:55,783 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:33:08,741 INFO Computing data fidelity for 114564 rotations and 2048 images at 9%
2023-01-07 12:33:09,455 DEBUG Corresponding type is already real float64.
2023-01-07 12:33:09,455 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:33:22,241 INFO Computing data fidelity for 114564 rotations and 2048 images at 10%
2023-01-07 12:33:22,959 DEBUG Corresponding type is already real float64.
2023-01-07 12:33:22,959 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:33:35,716 INFO Computing data fidelity for 114564 rotations and 2048 images at 11%
2023-01-07 12:33:36,422 DEBUG Corresponding type is already real float64.
2023-01-07 12:33:36,423 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:33:49,233 INFO Computing data fidelity for 114564 rotations and 2048 images at 12%
2023-01-07 12:33:49,960 DEBUG Corresponding type is already real float64.
2023-01-07 12:33:49,960 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:34:02,737 INFO Computing data fidelity for 114564 rotations and 2048 images at 13%
2023-01-07 12:34:03,450 DEBUG Corresponding type is already real float64.
2023-01-07 12:34:03,451 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:34:16,272 INFO Computing data fidelity for 114564 rotations and 2048 images at 14%
2023-01-07 12:34:16,989 DEBUG Corresponding type is already real float64.
2023-01-07 12:34:16,989 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:34:29,796 INFO Computing data fidelity for 114564 rotations and 2048 images at 15%
2023-01-07 12:34:30,519 DEBUG Corresponding type is already real float64.
2023-01-07 12:34:30,519 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:34:43,425 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2023-01-07 12:34:44,143 DEBUG Corresponding type is already real float64.
2023-01-07 12:34:44,143 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:34:56,930 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2023-01-07 12:34:57,653 DEBUG Corresponding type is already real float64.
2023-01-07 12:34:57,653 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:35:10,470 INFO Computing data fidelity for 114564 rotations and 2048 images at 17%
2023-01-07 12:35:11,181 DEBUG Corresponding type is already real float64.
2023-01-07 12:35:11,181 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:35:23,970 INFO Computing data fidelity for 114564 rotations and 2048 images at 18%
2023-01-07 12:35:24,697 DEBUG Corresponding type is already real float64.
2023-01-07 12:35:24,697 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:35:37,524 INFO Computing data fidelity for 114564 rotations and 2048 images at 19%
2023-01-07 12:35:38,245 DEBUG Corresponding type is already real float64.
2023-01-07 12:35:38,245 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:35:51,750 INFO Computing data fidelity for 114564 rotations and 2048 images at 20%
2023-01-07 12:35:52,493 DEBUG Corresponding type is already real float64.
2023-01-07 12:35:52,493 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:36:05,390 INFO Computing data fidelity for 114564 rotations and 2048 images at 21%
2023-01-07 12:36:06,121 DEBUG Corresponding type is already real float64.
2023-01-07 12:36:06,122 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:36:18,913 INFO Computing data fidelity for 114564 rotations and 2048 images at 22%
2023-01-07 12:36:19,643 DEBUG Corresponding type is already real float64.
2023-01-07 12:36:19,643 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:36:32,477 INFO Computing data fidelity for 114564 rotations and 2048 images at 23%
2023-01-07 12:36:33,209 DEBUG Corresponding type is already real float64.
2023-01-07 12:36:33,209 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:36:46,085 INFO Computing data fidelity for 114564 rotations and 2048 images at 24%
2023-01-07 12:36:46,846 DEBUG Corresponding type is already real float64.
2023-01-07 12:36:46,846 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:36:59,720 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2023-01-07 12:37:00,448 DEBUG Corresponding type is already real float64.
2023-01-07 12:37:00,448 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:37:13,271 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2023-01-07 12:37:14,010 DEBUG Corresponding type is already real float64.
2023-01-07 12:37:14,010 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:37:26,861 INFO Computing data fidelity for 114564 rotations and 2048 images at 26%
2023-01-07 12:37:27,602 DEBUG Corresponding type is already real float64.
2023-01-07 12:37:27,602 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:37:40,467 INFO Computing data fidelity for 114564 rotations and 2048 images at 27%
2023-01-07 12:37:41,194 DEBUG Corresponding type is already real float64.
2023-01-07 12:37:41,194 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:37:54,027 INFO Computing data fidelity for 114564 rotations and 2048 images at 28%
2023-01-07 12:37:54,766 DEBUG Corresponding type is already real float64.
2023-01-07 12:37:54,766 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:38:07,884 INFO Computing data fidelity for 114564 rotations and 2048 images at 29%
2023-01-07 12:38:08,622 DEBUG Corresponding type is already real float64.
2023-01-07 12:38:08,622 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:38:21,474 INFO Computing data fidelity for 114564 rotations and 2048 images at 30%
2023-01-07 12:38:22,217 DEBUG Corresponding type is already real float64.
2023-01-07 12:38:22,217 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:38:35,053 INFO Computing data fidelity for 114564 rotations and 2048 images at 31%
2023-01-07 12:38:35,787 DEBUG Corresponding type is already real float64.
2023-01-07 12:38:35,787 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:38:48,640 INFO Computing data fidelity for 114564 rotations and 2048 images at 32%
2023-01-07 12:38:49,385 DEBUG Corresponding type is already real float64.
2023-01-07 12:38:49,386 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:39:02,283 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2023-01-07 12:39:03,020 DEBUG Corresponding type is already real float64.
2023-01-07 12:39:03,020 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:39:15,858 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2023-01-07 12:39:16,586 DEBUG Corresponding type is already real float64.
2023-01-07 12:39:16,586 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:39:29,428 INFO Computing data fidelity for 114564 rotations and 2048 images at 34%
2023-01-07 12:39:30,161 DEBUG Corresponding type is already real float64.
2023-01-07 12:39:30,161 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:39:43,017 INFO Computing data fidelity for 114564 rotations and 2048 images at 35%
2023-01-07 12:39:43,746 DEBUG Corresponding type is already real float64.
2023-01-07 12:39:43,746 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:39:57,104 INFO Computing data fidelity for 114564 rotations and 2048 images at 36%
2023-01-07 12:39:57,847 DEBUG Corresponding type is already real float64.
2023-01-07 12:39:57,847 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:40:11,676 INFO Computing data fidelity for 114564 rotations and 2048 images at 37%
2023-01-07 12:40:12,411 DEBUG Corresponding type is already real float64.
2023-01-07 12:40:12,412 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:40:25,264 INFO Computing data fidelity for 114564 rotations and 2048 images at 38%
2023-01-07 12:40:26,010 DEBUG Corresponding type is already real float64.
2023-01-07 12:40:26,010 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:40:38,921 INFO Computing data fidelity for 114564 rotations and 2048 images at 39%
2023-01-07 12:40:39,659 DEBUG Corresponding type is already real float64.
2023-01-07 12:40:39,659 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:40:53,018 INFO Computing data fidelity for 114564 rotations and 2048 images at 40%
2023-01-07 12:40:53,781 DEBUG Corresponding type is already real float64.
2023-01-07 12:40:53,781 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:41:06,736 INFO Computing data fidelity for 114564 rotations and 2048 images at 41%
2023-01-07 12:41:07,483 DEBUG Corresponding type is already real float64.
2023-01-07 12:41:07,483 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:41:20,330 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2023-01-07 12:41:21,072 DEBUG Corresponding type is already real float64.
2023-01-07 12:41:21,073 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:41:33,915 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2023-01-07 12:41:34,657 DEBUG Corresponding type is already real float64.
2023-01-07 12:41:34,657 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:41:47,526 INFO Computing data fidelity for 114564 rotations and 2048 images at 43%
2023-01-07 12:41:48,272 DEBUG Corresponding type is already real float64.
2023-01-07 12:41:48,272 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:42:01,129 INFO Computing data fidelity for 114564 rotations and 2048 images at 44%
2023-01-07 12:42:01,866 DEBUG Corresponding type is already real float64.
2023-01-07 12:42:01,866 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:42:14,714 INFO Computing data fidelity for 114564 rotations and 2048 images at 45%
2023-01-07 12:42:15,449 DEBUG Corresponding type is already real float64.
2023-01-07 12:42:15,449 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:42:28,303 INFO Computing data fidelity for 114564 rotations and 2048 images at 46%
2023-01-07 12:42:29,036 DEBUG Corresponding type is already real float64.
2023-01-07 12:42:29,036 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:42:41,848 INFO Computing data fidelity for 114564 rotations and 2048 images at 47%
2023-01-07 12:42:42,592 DEBUG Corresponding type is already real float64.
2023-01-07 12:42:42,592 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:42:55,489 INFO Computing data fidelity for 114564 rotations and 2048 images at 48%
2023-01-07 12:42:56,226 DEBUG Corresponding type is already real float64.
2023-01-07 12:42:56,226 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:43:09,205 INFO Computing data fidelity for 114564 rotations and 2048 images at 49%
2023-01-07 12:43:09,934 DEBUG Corresponding type is already real float64.
2023-01-07 12:43:09,934 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:43:22,778 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2023-01-07 12:43:23,515 DEBUG Corresponding type is already real float64.
2023-01-07 12:43:23,515 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:43:36,368 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2023-01-07 12:43:37,105 DEBUG Corresponding type is already real float64.
2023-01-07 12:43:37,105 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:43:50,083 INFO Computing data fidelity for 114564 rotations and 2048 images at 51%
2023-01-07 12:43:50,820 DEBUG Corresponding type is already real float64.
2023-01-07 12:43:50,821 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:44:03,694 INFO Computing data fidelity for 114564 rotations and 2048 images at 52%
2023-01-07 12:44:04,465 DEBUG Corresponding type is already real float64.
2023-01-07 12:44:04,465 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:44:17,306 INFO Computing data fidelity for 114564 rotations and 2048 images at 53%
2023-01-07 12:44:18,033 DEBUG Corresponding type is already real float64.
2023-01-07 12:44:18,034 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:44:30,871 INFO Computing data fidelity for 114564 rotations and 2048 images at 54%
2023-01-07 12:44:31,601 DEBUG Corresponding type is already real float64.
2023-01-07 12:44:31,602 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:44:44,439 INFO Computing data fidelity for 114564 rotations and 2048 images at 55%
2023-01-07 12:44:45,164 DEBUG Corresponding type is already real float64.
2023-01-07 12:44:45,164 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:44:57,997 INFO Computing data fidelity for 114564 rotations and 2048 images at 56%
2023-01-07 12:44:58,728 DEBUG Corresponding type is already real float64.
2023-01-07 12:44:58,728 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:45:11,586 INFO Computing data fidelity for 114564 rotations and 2048 images at 57%
2023-01-07 12:45:12,343 DEBUG Corresponding type is already real float64.
2023-01-07 12:45:12,343 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:45:25,224 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2023-01-07 12:45:25,960 DEBUG Corresponding type is already real float64.
2023-01-07 12:45:25,961 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:45:38,810 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2023-01-07 12:45:39,547 DEBUG Corresponding type is already real float64.
2023-01-07 12:45:39,547 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:45:53,044 INFO Computing data fidelity for 114564 rotations and 2048 images at 59%
2023-01-07 12:45:53,808 DEBUG Corresponding type is already real float64.
2023-01-07 12:45:53,808 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:46:07,865 INFO Computing data fidelity for 114564 rotations and 2048 images at 60%
2023-01-07 12:46:08,595 DEBUG Corresponding type is already real float64.
2023-01-07 12:46:08,595 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:46:21,545 INFO Computing data fidelity for 114564 rotations and 2048 images at 61%
2023-01-07 12:46:22,282 DEBUG Corresponding type is already real float64.
2023-01-07 12:46:22,283 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:46:35,119 INFO Computing data fidelity for 114564 rotations and 2048 images at 62%
2023-01-07 12:46:35,853 DEBUG Corresponding type is already real float64.
2023-01-07 12:46:35,853 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:46:48,693 INFO Computing data fidelity for 114564 rotations and 2048 images at 63%
2023-01-07 12:46:49,436 DEBUG Corresponding type is already real float64.
2023-01-07 12:46:49,436 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:47:02,305 INFO Computing data fidelity for 114564 rotations and 2048 images at 64%
2023-01-07 12:47:03,036 DEBUG Corresponding type is already real float64.
2023-01-07 12:47:03,036 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:47:15,917 INFO Computing data fidelity for 114564 rotations and 2048 images at 65%
2023-01-07 12:47:16,641 DEBUG Corresponding type is already real float64.
2023-01-07 12:47:16,641 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:47:29,500 INFO Computing data fidelity for 114564 rotations and 2048 images at 66%
2023-01-07 12:47:30,240 DEBUG Corresponding type is already real float64.
2023-01-07 12:47:30,240 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:47:43,084 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2023-01-07 12:47:43,813 DEBUG Corresponding type is already real float64.
2023-01-07 12:47:43,813 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:47:56,645 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2023-01-07 12:47:57,376 DEBUG Corresponding type is already real float64.
2023-01-07 12:47:57,376 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:48:10,485 INFO Computing data fidelity for 114564 rotations and 2048 images at 68%
2023-01-07 12:48:11,219 DEBUG Corresponding type is already real float64.
2023-01-07 12:48:11,219 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:48:24,016 INFO Computing data fidelity for 114564 rotations and 2048 images at 69%
2023-01-07 12:48:24,758 DEBUG Corresponding type is already real float64.
2023-01-07 12:48:24,758 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:48:37,605 INFO Computing data fidelity for 114564 rotations and 2048 images at 70%
2023-01-07 12:48:38,336 DEBUG Corresponding type is already real float64.
2023-01-07 12:48:38,336 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:48:51,197 INFO Computing data fidelity for 114564 rotations and 2048 images at 71%
2023-01-07 12:48:51,948 DEBUG Corresponding type is already real float64.
2023-01-07 12:48:51,948 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:49:04,840 INFO Computing data fidelity for 114564 rotations and 2048 images at 72%
2023-01-07 12:49:05,572 DEBUG Corresponding type is already real float64.
2023-01-07 12:49:05,572 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:49:18,434 INFO Computing data fidelity for 114564 rotations and 2048 images at 73%
2023-01-07 12:49:19,173 DEBUG Corresponding type is already real float64.
2023-01-07 12:49:19,173 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:49:32,196 INFO Computing data fidelity for 114564 rotations and 2048 images at 74%
2023-01-07 12:49:32,924 DEBUG Corresponding type is already real float64.
2023-01-07 12:49:32,924 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:49:45,838 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2023-01-07 12:49:46,582 DEBUG Corresponding type is already real float64.
2023-01-07 12:49:46,582 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:49:59,441 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2023-01-07 12:50:00,174 DEBUG Corresponding type is already real float64.
2023-01-07 12:50:00,174 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:50:13,113 INFO Computing data fidelity for 114564 rotations and 2048 images at 76%
2023-01-07 12:50:13,845 DEBUG Corresponding type is already real float64.
2023-01-07 12:50:13,845 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:50:26,677 INFO Computing data fidelity for 114564 rotations and 2048 images at 77%
2023-01-07 12:50:27,417 DEBUG Corresponding type is already real float64.
2023-01-07 12:50:27,417 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:50:40,272 INFO Computing data fidelity for 114564 rotations and 2048 images at 78%
2023-01-07 12:50:41,005 DEBUG Corresponding type is already real float64.
2023-01-07 12:50:41,005 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:50:54,563 INFO Computing data fidelity for 114564 rotations and 2048 images at 79%
2023-01-07 12:50:55,320 DEBUG Corresponding type is already real float64.
2023-01-07 12:50:55,320 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:51:08,218 INFO Computing data fidelity for 114564 rotations and 2048 images at 80%
2023-01-07 12:51:08,958 DEBUG Corresponding type is already real float64.
2023-01-07 12:51:08,959 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:51:21,782 INFO Computing data fidelity for 114564 rotations and 2048 images at 81%
2023-01-07 12:51:22,522 DEBUG Corresponding type is already real float64.
2023-01-07 12:51:22,522 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:51:35,380 INFO Computing data fidelity for 114564 rotations and 2048 images at 82%
2023-01-07 12:51:36,114 DEBUG Corresponding type is already real float64.
2023-01-07 12:51:36,114 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:51:49,062 INFO Computing data fidelity for 114564 rotations and 2048 images at 83%
2023-01-07 12:51:49,811 DEBUG Corresponding type is already real float64.
2023-01-07 12:51:49,811 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:52:02,709 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2023-01-07 12:52:03,448 DEBUG Corresponding type is already real float64.
2023-01-07 12:52:03,448 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:52:16,337 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2023-01-07 12:52:17,075 DEBUG Corresponding type is already real float64.
2023-01-07 12:52:17,075 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:52:29,960 INFO Computing data fidelity for 114564 rotations and 2048 images at 85%
2023-01-07 12:52:30,708 DEBUG Corresponding type is already real float64.
2023-01-07 12:52:30,708 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:52:43,564 INFO Computing data fidelity for 114564 rotations and 2048 images at 86%
2023-01-07 12:52:44,311 DEBUG Corresponding type is already real float64.
2023-01-07 12:52:44,311 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:52:57,142 INFO Computing data fidelity for 114564 rotations and 2048 images at 87%
2023-01-07 12:52:57,893 DEBUG Corresponding type is already real float64.
2023-01-07 12:52:57,893 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:53:10,803 INFO Computing data fidelity for 114564 rotations and 2048 images at 88%
2023-01-07 12:53:11,536 DEBUG Corresponding type is already real float64.
2023-01-07 12:53:11,536 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:53:24,323 INFO Computing data fidelity for 114564 rotations and 2048 images at 89%
2023-01-07 12:53:25,062 DEBUG Corresponding type is already real float64.
2023-01-07 12:53:25,063 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:53:37,886 INFO Computing data fidelity for 114564 rotations and 2048 images at 90%
2023-01-07 12:53:38,618 DEBUG Corresponding type is already real float64.
2023-01-07 12:53:38,618 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:53:51,474 INFO Computing data fidelity for 114564 rotations and 2048 images at 91%
2023-01-07 12:53:52,221 DEBUG Corresponding type is already real float64.
2023-01-07 12:53:52,221 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:54:05,082 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2023-01-07 12:54:05,822 DEBUG Corresponding type is already real float64.
2023-01-07 12:54:05,823 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:54:18,653 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2023-01-07 12:54:19,389 DEBUG Corresponding type is already real float64.
2023-01-07 12:54:19,389 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:54:32,276 INFO Computing data fidelity for 114564 rotations and 2048 images at 93%
2023-01-07 12:54:33,011 DEBUG Corresponding type is already real float64.
2023-01-07 12:54:33,011 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:54:46,001 INFO Computing data fidelity for 114564 rotations and 2048 images at 94%
2023-01-07 12:54:46,754 DEBUG Corresponding type is already real float64.
2023-01-07 12:54:46,754 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:55:00,796 INFO Computing data fidelity for 114564 rotations and 2048 images at 95%
2023-01-07 12:55:01,543 DEBUG Corresponding type is already real float64.
2023-01-07 12:55:01,543 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:55:14,485 INFO Computing data fidelity for 114564 rotations and 2048 images at 96%
2023-01-07 12:55:15,219 DEBUG Corresponding type is already real float64.
2023-01-07 12:55:15,219 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:55:28,041 INFO Computing data fidelity for 114564 rotations and 2048 images at 97%
2023-01-07 12:55:28,787 DEBUG Corresponding type is already real float64.
2023-01-07 12:55:28,787 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:55:41,751 INFO Computing data fidelity for 114564 rotations and 2048 images at 98%
2023-01-07 12:55:42,485 DEBUG Corresponding type is already real float64.
2023-01-07 12:55:42,486 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:55:56,187 INFO Computing data fidelity for 114564 rotations and 2048 images at 99%
2023-01-07 12:55:56,679 DEBUG Corresponding type is already real float64.
2023-01-07 12:55:56,679 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:56:07,886 INFO Computing data fidelity for 114564 rotations and 2048 images at 100%
2023-01-07 12:56:09,247 INFO Do lambda update step
2023-01-07 12:56:31,724 INFO Do rots update step
2023-01-07 12:56:32,519 INFO Projecting 2048 vectors onto 114564-simplex at 2%
2023-01-07 12:56:33,139 INFO Projecting 2048 vectors onto 114564-simplex at 4%
2023-01-07 12:56:33,752 INFO Projecting 2048 vectors onto 114564-simplex at 7%
2023-01-07 12:56:34,370 INFO Projecting 2048 vectors onto 114564-simplex at 9%
2023-01-07 12:56:34,988 INFO Projecting 2048 vectors onto 114564-simplex at 12%
2023-01-07 12:56:35,606 INFO Projecting 2048 vectors onto 114564-simplex at 14%
2023-01-07 12:56:36,218 INFO Projecting 2048 vectors onto 114564-simplex at 17%
2023-01-07 12:56:36,833 INFO Projecting 2048 vectors onto 114564-simplex at 19%
2023-01-07 12:56:37,445 INFO Projecting 2048 vectors onto 114564-simplex at 21%
2023-01-07 12:56:38,057 INFO Projecting 2048 vectors onto 114564-simplex at 24%
2023-01-07 12:56:38,840 INFO Projecting 2048 vectors onto 114564-simplex at 26%
2023-01-07 12:56:39,466 INFO Projecting 2048 vectors onto 114564-simplex at 29%
2023-01-07 12:56:40,080 INFO Projecting 2048 vectors onto 114564-simplex at 31%
2023-01-07 12:56:40,690 INFO Projecting 2048 vectors onto 114564-simplex at 34%
2023-01-07 12:56:41,300 INFO Projecting 2048 vectors onto 114564-simplex at 36%
2023-01-07 12:56:41,913 INFO Projecting 2048 vectors onto 114564-simplex at 39%
2023-01-07 12:56:42,520 INFO Projecting 2048 vectors onto 114564-simplex at 41%
2023-01-07 12:56:43,180 INFO Projecting 2048 vectors onto 114564-simplex at 43%
2023-01-07 12:56:43,864 INFO Projecting 2048 vectors onto 114564-simplex at 46%
2023-01-07 12:56:44,564 INFO Projecting 2048 vectors onto 114564-simplex at 48%
2023-01-07 12:56:45,461 INFO Projecting 2048 vectors onto 114564-simplex at 51%
2023-01-07 12:56:46,168 INFO Projecting 2048 vectors onto 114564-simplex at 53%
2023-01-07 12:56:46,872 INFO Projecting 2048 vectors onto 114564-simplex at 56%
2023-01-07 12:56:47,585 INFO Projecting 2048 vectors onto 114564-simplex at 58%
2023-01-07 12:56:48,303 INFO Projecting 2048 vectors onto 114564-simplex at 61%
2023-01-07 12:56:48,990 INFO Projecting 2048 vectors onto 114564-simplex at 63%
2023-01-07 12:56:49,676 INFO Projecting 2048 vectors onto 114564-simplex at 65%
2023-01-07 12:56:50,368 INFO Projecting 2048 vectors onto 114564-simplex at 68%
2023-01-07 12:56:51,049 INFO Projecting 2048 vectors onto 114564-simplex at 70%
2023-01-07 12:56:51,737 INFO Projecting 2048 vectors onto 114564-simplex at 73%
2023-01-07 12:56:52,628 INFO Projecting 2048 vectors onto 114564-simplex at 75%
2023-01-07 12:56:53,322 INFO Projecting 2048 vectors onto 114564-simplex at 78%
2023-01-07 12:56:54,012 INFO Projecting 2048 vectors onto 114564-simplex at 80%
2023-01-07 12:56:54,700 INFO Projecting 2048 vectors onto 114564-simplex at 83%
2023-01-07 12:56:55,391 INFO Projecting 2048 vectors onto 114564-simplex at 85%
2023-01-07 12:56:56,074 INFO Projecting 2048 vectors onto 114564-simplex at 87%
2023-01-07 12:56:56,763 INFO Projecting 2048 vectors onto 114564-simplex at 90%
2023-01-07 12:56:57,450 INFO Projecting 2048 vectors onto 114564-simplex at 92%
2023-01-07 12:56:58,127 INFO Projecting 2048 vectors onto 114564-simplex at 95%
2023-01-07 12:56:58,810 INFO Projecting 2048 vectors onto 114564-simplex at 97%
2023-01-07 12:56:59,474 INFO Projecting 2048 vectors onto 114564-simplex at 100%
2023-01-07 12:57:00,976 INFO Computing 50 means of 477 points in at most 20 steps...
2023-01-07 12:57:01,060 INFO Computing 2048 means at 2%
2023-01-07 12:57:01,144 INFO Computing 50 means of 455 points in at most 20 steps...
2023-01-07 12:57:01,199 INFO Computing 2048 means at 4%
2023-01-07 12:57:01,280 INFO Computing 50 means of 470 points in at most 20 steps...
2023-01-07 12:57:01,334 INFO Computing 2048 means at 7%
2023-01-07 12:57:01,417 INFO Computing 50 means of 486 points in at most 20 steps...
2023-01-07 12:57:01,490 INFO Computing 2048 means at 9%
2023-01-07 12:57:01,575 INFO Computing 50 means of 494 points in at most 20 steps...
2023-01-07 12:57:01,637 INFO Computing 2048 means at 12%
2023-01-07 12:57:01,722 INFO Computing 50 means of 493 points in at most 20 steps...
2023-01-07 12:57:01,781 INFO Computing 2048 means at 14%
2023-01-07 12:57:01,863 INFO Computing 50 means of 479 points in at most 20 steps...
2023-01-07 12:57:01,920 INFO Computing 2048 means at 17%
2023-01-07 12:57:02,000 INFO Computing 50 means of 481 points in at most 20 steps...
2023-01-07 12:57:02,060 INFO Computing 2048 means at 19%
2023-01-07 12:57:02,146 INFO Computing 50 means of 474 points in at most 20 steps...
2023-01-07 12:57:02,202 INFO Computing 2048 means at 21%
2023-01-07 12:57:02,287 INFO Computing 50 means of 491 points in at most 20 steps...
2023-01-07 12:57:02,344 INFO Computing 2048 means at 24%
2023-01-07 12:57:02,433 INFO Computing 50 means of 506 points in at most 20 steps...
2023-01-07 12:57:02,492 INFO Computing 2048 means at 26%
2023-01-07 12:57:02,579 INFO Computing 50 means of 461 points in at most 20 steps...
2023-01-07 12:57:02,632 INFO Computing 2048 means at 29%
2023-01-07 12:57:02,720 INFO Computing 50 means of 496 points in at most 20 steps...
2023-01-07 12:57:02,779 INFO Computing 2048 means at 31%
2023-01-07 12:57:02,860 INFO Computing 50 means of 503 points in at most 20 steps...
2023-01-07 12:57:02,921 INFO Computing 2048 means at 34%
2023-01-07 12:57:03,004 INFO Computing 50 means of 473 points in at most 20 steps...
2023-01-07 12:57:03,059 INFO Computing 2048 means at 36%
2023-01-07 12:57:03,141 INFO Computing 50 means of 486 points in at most 20 steps...
2023-01-07 12:57:03,199 INFO Computing 2048 means at 39%
2023-01-07 12:57:03,284 INFO Computing 50 means of 470 points in at most 20 steps...
2023-01-07 12:57:03,343 INFO Computing 2048 means at 41%
2023-01-07 12:57:03,428 INFO Computing 50 means of 474 points in at most 20 steps...
2023-01-07 12:57:03,484 INFO Computing 2048 means at 43%
2023-01-07 12:57:03,561 INFO Computing 50 means of 466 points in at most 20 steps...
2023-01-07 12:57:03,612 INFO Computing 2048 means at 46%
2023-01-07 12:57:03,701 INFO Computing 50 means of 495 points in at most 20 steps...
2023-01-07 12:57:03,760 INFO Computing 2048 means at 48%
2023-01-07 12:57:03,854 INFO Computing 50 means of 474 points in at most 20 steps...
2023-01-07 12:57:03,910 INFO Computing 2048 means at 51%
2023-01-07 12:57:03,995 INFO Computing 50 means of 514 points in at most 20 steps...
2023-01-07 12:57:04,069 INFO Computing 2048 means at 53%
2023-01-07 12:57:04,152 INFO Computing 50 means of 494 points in at most 20 steps...
2023-01-07 12:57:04,210 INFO Computing 2048 means at 56%
2023-01-07 12:57:04,295 INFO Computing 50 means of 479 points in at most 20 steps...
2023-01-07 12:57:04,350 INFO Computing 2048 means at 58%
2023-01-07 12:57:04,436 INFO Computing 50 means of 490 points in at most 20 steps...
2023-01-07 12:57:04,494 INFO Computing 2048 means at 61%
2023-01-07 12:57:04,579 INFO Computing 50 means of 489 points in at most 20 steps...
2023-01-07 12:57:04,636 INFO Computing 2048 means at 63%
2023-01-07 12:57:04,720 INFO Computing 50 means of 494 points in at most 20 steps...
2023-01-07 12:57:04,778 INFO Computing 2048 means at 65%
2023-01-07 12:57:04,861 INFO Computing 50 means of 489 points in at most 20 steps...
2023-01-07 12:57:04,918 INFO Computing 2048 means at 68%
2023-01-07 12:57:05,004 INFO Computing 50 means of 471 points in at most 20 steps...
2023-01-07 12:57:05,060 INFO Computing 2048 means at 70%
2023-01-07 12:57:05,144 INFO Computing 50 means of 493 points in at most 20 steps...
2023-01-07 12:57:05,202 INFO Computing 2048 means at 73%
2023-01-07 12:57:05,296 INFO Computing 50 means of 470 points in at most 20 steps...
2023-01-07 12:57:05,350 INFO Computing 2048 means at 75%
2023-01-07 12:57:05,436 INFO Computing 50 means of 482 points in at most 20 steps...
2023-01-07 12:57:05,497 INFO Computing 2048 means at 78%
2023-01-07 12:57:05,579 INFO Computing 50 means of 485 points in at most 20 steps...
2023-01-07 12:57:05,635 INFO Computing 2048 means at 80%
2023-01-07 12:57:05,716 INFO Computing 50 means of 487 points in at most 20 steps...
2023-01-07 12:57:05,773 INFO Computing 2048 means at 83%
2023-01-07 12:57:05,853 INFO Computing 50 means of 498 points in at most 20 steps...
2023-01-07 12:57:05,912 INFO Computing 2048 means at 85%
2023-01-07 12:57:05,990 INFO Computing 50 means of 495 points in at most 20 steps...
2023-01-07 12:57:06,049 INFO Computing 2048 means at 87%
2023-01-07 12:57:06,128 INFO Computing 50 means of 489 points in at most 20 steps...
2023-01-07 12:57:06,185 INFO Computing 2048 means at 90%
2023-01-07 12:57:06,264 INFO Computing 50 means of 480 points in at most 20 steps...
2023-01-07 12:57:06,321 INFO Computing 2048 means at 92%
2023-01-07 12:57:06,403 INFO Computing 50 means of 485 points in at most 20 steps...
2023-01-07 12:57:06,460 INFO Computing 2048 means at 95%
2023-01-07 12:57:06,539 INFO Computing 50 means of 480 points in at most 20 steps...
2023-01-07 12:57:06,595 INFO Computing 2048 means at 97%
2023-01-07 12:57:06,676 INFO Computing 48 means of 470 points in at most 20 steps...
2023-01-07 12:57:06,729 INFO Computing 2048 means at 100%
2023-01-07 12:57:11,930 INFO Do vol update step
2023-01-07 12:57:11,932 INFO Compute adjoint forward mapping on the images
2023-01-07 12:57:13,764 DEBUG Corresponding type is already complex complex128.
2023-01-07 12:57:16,160 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2023-01-07 12:57:16,175 INFO Computing adjoint forward mappings from 2048 rotations at 50%
2023-01-07 12:57:17,797 DEBUG Corresponding type is already complex complex128.
2023-01-07 12:57:20,219 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2023-01-07 12:57:20,233 INFO Computing adjoint forward mappings from 2048 rotations at 100%
2023-01-07 12:57:21,152 DEBUG Corresponding type is already real float64.
2023-01-07 12:57:21,152 DEBUG anufft passed real_type for signal, converting
2023-01-07 12:57:27,249 INFO Computing kernel from 2048 rotations at 50%
2023-01-07 12:57:28,148 DEBUG Corresponding type is already real float64.
2023-01-07 12:57:28,148 DEBUG anufft passed real_type for signal, converting
2023-01-07 12:57:34,322 INFO Computing kernel from 2048 rotations at 100%
2023-01-07 12:57:34,324 INFO Computing non-centered Fourier Transform
2023-01-07 12:57:34,505 INFO Add ramp filter regularisation
2023-01-07 12:57:40,559 INFO Update data_discrepancies
2023-01-07 12:57:40,561 INFO Computing \|Ag.u - f_i\|^2
2023-01-07 12:57:41,377 DEBUG Corresponding type is already real float64.
2023-01-07 12:57:41,377 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:57:54,795 INFO Computing data fidelity for 114564 rotations and 2048 images at 0%
2023-01-07 12:57:55,535 DEBUG Corresponding type is already real float64.
2023-01-07 12:57:55,535 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:58:09,757 INFO Computing data fidelity for 114564 rotations and 2048 images at 1%
2023-01-07 12:58:10,511 DEBUG Corresponding type is already real float64.
2023-01-07 12:58:10,511 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:58:23,451 INFO Computing data fidelity for 114564 rotations and 2048 images at 2%
2023-01-07 12:58:24,189 DEBUG Corresponding type is already real float64.
2023-01-07 12:58:24,190 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:58:37,046 INFO Computing data fidelity for 114564 rotations and 2048 images at 3%
2023-01-07 12:58:37,769 DEBUG Corresponding type is already real float64.
2023-01-07 12:58:37,769 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:58:50,659 INFO Computing data fidelity for 114564 rotations and 2048 images at 4%
2023-01-07 12:58:51,369 DEBUG Corresponding type is already real float64.
2023-01-07 12:58:51,369 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:59:04,175 INFO Computing data fidelity for 114564 rotations and 2048 images at 5%
2023-01-07 12:59:04,875 DEBUG Corresponding type is already real float64.
2023-01-07 12:59:04,875 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:59:17,636 INFO Computing data fidelity for 114564 rotations and 2048 images at 6%
2023-01-07 12:59:18,348 DEBUG Corresponding type is already real float64.
2023-01-07 12:59:18,349 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:59:31,137 INFO Computing data fidelity for 114564 rotations and 2048 images at 7%
2023-01-07 12:59:31,849 DEBUG Corresponding type is already real float64.
2023-01-07 12:59:31,849 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:59:44,650 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2023-01-07 12:59:45,362 DEBUG Corresponding type is already real float64.
2023-01-07 12:59:45,362 DEBUG nufft passed real_type for signal, converting
2023-01-07 12:59:58,232 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2023-01-07 12:59:58,941 DEBUG Corresponding type is already real float64.
2023-01-07 12:59:58,941 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:00:11,822 INFO Computing data fidelity for 114564 rotations and 2048 images at 9%
2023-01-07 13:00:12,526 DEBUG Corresponding type is already real float64.
2023-01-07 13:00:12,526 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:00:26,023 INFO Computing data fidelity for 114564 rotations and 2048 images at 10%
2023-01-07 13:00:26,782 DEBUG Corresponding type is already real float64.
2023-01-07 13:00:26,782 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:00:42,131 INFO Computing data fidelity for 114564 rotations and 2048 images at 11%
2023-01-07 13:00:43,058 DEBUG Corresponding type is already real float64.
2023-01-07 13:00:43,058 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:00:58,176 INFO Computing data fidelity for 114564 rotations and 2048 images at 12%
2023-01-07 13:00:58,944 DEBUG Corresponding type is already real float64.
2023-01-07 13:00:58,944 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:01:13,434 INFO Computing data fidelity for 114564 rotations and 2048 images at 13%
2023-01-07 13:01:14,201 DEBUG Corresponding type is already real float64.
2023-01-07 13:01:14,201 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:01:27,852 INFO Computing data fidelity for 114564 rotations and 2048 images at 14%
2023-01-07 13:01:28,619 DEBUG Corresponding type is already real float64.
2023-01-07 13:01:28,619 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:01:43,078 INFO Computing data fidelity for 114564 rotations and 2048 images at 15%
2023-01-07 13:01:43,904 DEBUG Corresponding type is already real float64.
2023-01-07 13:01:43,904 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:01:58,229 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2023-01-07 13:01:59,055 DEBUG Corresponding type is already real float64.
2023-01-07 13:01:59,056 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:02:13,393 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2023-01-07 13:02:14,214 DEBUG Corresponding type is already real float64.
2023-01-07 13:02:14,215 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:02:28,036 INFO Computing data fidelity for 114564 rotations and 2048 images at 17%
2023-01-07 13:02:28,820 DEBUG Corresponding type is already real float64.
2023-01-07 13:02:28,820 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:02:43,273 INFO Computing data fidelity for 114564 rotations and 2048 images at 18%
2023-01-07 13:02:44,076 DEBUG Corresponding type is already real float64.
2023-01-07 13:02:44,076 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:02:57,807 INFO Computing data fidelity for 114564 rotations and 2048 images at 19%
2023-01-07 13:02:58,567 DEBUG Corresponding type is already real float64.
2023-01-07 13:02:58,567 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:03:11,672 INFO Computing data fidelity for 114564 rotations and 2048 images at 20%
2023-01-07 13:03:12,439 DEBUG Corresponding type is already real float64.
2023-01-07 13:03:12,439 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:03:26,491 INFO Computing data fidelity for 114564 rotations and 2048 images at 21%
2023-01-07 13:03:27,400 DEBUG Corresponding type is already real float64.
2023-01-07 13:03:27,400 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:03:42,686 INFO Computing data fidelity for 114564 rotations and 2048 images at 22%
2023-01-07 13:03:43,710 DEBUG Corresponding type is already real float64.
2023-01-07 13:03:43,711 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:03:58,523 INFO Computing data fidelity for 114564 rotations and 2048 images at 23%
2023-01-07 13:03:59,286 DEBUG Corresponding type is already real float64.
2023-01-07 13:03:59,286 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:04:13,234 INFO Computing data fidelity for 114564 rotations and 2048 images at 24%
2023-01-07 13:04:14,102 DEBUG Corresponding type is already real float64.
2023-01-07 13:04:14,102 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:04:28,091 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2023-01-07 13:04:28,857 DEBUG Corresponding type is already real float64.
2023-01-07 13:04:28,857 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:04:43,008 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2023-01-07 13:04:43,765 DEBUG Corresponding type is already real float64.
2023-01-07 13:04:43,765 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:04:56,952 INFO Computing data fidelity for 114564 rotations and 2048 images at 26%
2023-01-07 13:04:57,711 DEBUG Corresponding type is already real float64.
2023-01-07 13:04:57,711 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:05:11,643 INFO Computing data fidelity for 114564 rotations and 2048 images at 27%
2023-01-07 13:05:12,414 DEBUG Corresponding type is already real float64.
2023-01-07 13:05:12,414 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:05:26,626 INFO Computing data fidelity for 114564 rotations and 2048 images at 28%
2023-01-07 13:05:27,411 DEBUG Corresponding type is already real float64.
2023-01-07 13:05:27,411 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:05:42,269 INFO Computing data fidelity for 114564 rotations and 2048 images at 29%
2023-01-07 13:05:43,128 DEBUG Corresponding type is already real float64.
2023-01-07 13:05:43,128 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:05:58,760 INFO Computing data fidelity for 114564 rotations and 2048 images at 30%
2023-01-07 13:05:59,681 DEBUG Corresponding type is already real float64.
2023-01-07 13:05:59,681 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:06:15,410 INFO Computing data fidelity for 114564 rotations and 2048 images at 31%
2023-01-07 13:06:16,320 DEBUG Corresponding type is already real float64.
2023-01-07 13:06:16,320 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:06:31,935 INFO Computing data fidelity for 114564 rotations and 2048 images at 32%
2023-01-07 13:06:32,741 DEBUG Corresponding type is already real float64.
2023-01-07 13:06:32,741 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:06:46,919 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2023-01-07 13:06:47,770 DEBUG Corresponding type is already real float64.
2023-01-07 13:06:47,770 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:07:01,999 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2023-01-07 13:07:02,885 DEBUG Corresponding type is already real float64.
2023-01-07 13:07:02,886 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:07:16,847 INFO Computing data fidelity for 114564 rotations and 2048 images at 34%
2023-01-07 13:07:17,668 DEBUG Corresponding type is already real float64.
2023-01-07 13:07:17,668 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:07:32,929 INFO Computing data fidelity for 114564 rotations and 2048 images at 35%
2023-01-07 13:07:33,782 DEBUG Corresponding type is already real float64.
2023-01-07 13:07:33,782 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:07:48,735 INFO Computing data fidelity for 114564 rotations and 2048 images at 36%
2023-01-07 13:07:49,648 DEBUG Corresponding type is already real float64.
2023-01-07 13:07:49,648 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:08:04,293 INFO Computing data fidelity for 114564 rotations and 2048 images at 37%
2023-01-07 13:08:05,180 DEBUG Corresponding type is already real float64.
2023-01-07 13:08:05,180 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:08:19,529 INFO Computing data fidelity for 114564 rotations and 2048 images at 38%
2023-01-07 13:08:20,413 DEBUG Corresponding type is already real float64.
2023-01-07 13:08:20,414 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:08:35,609 INFO Computing data fidelity for 114564 rotations and 2048 images at 39%
2023-01-07 13:08:36,435 DEBUG Corresponding type is already real float64.
2023-01-07 13:08:36,436 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:08:51,102 INFO Computing data fidelity for 114564 rotations and 2048 images at 40%
2023-01-07 13:08:52,005 DEBUG Corresponding type is already real float64.
2023-01-07 13:08:52,006 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:09:07,449 INFO Computing data fidelity for 114564 rotations and 2048 images at 41%
2023-01-07 13:09:08,375 DEBUG Corresponding type is already real float64.
2023-01-07 13:09:08,375 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:09:23,882 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2023-01-07 13:09:24,801 DEBUG Corresponding type is already real float64.
2023-01-07 13:09:24,801 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:09:39,984 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2023-01-07 13:09:40,763 DEBUG Corresponding type is already real float64.
2023-01-07 13:09:40,763 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:09:55,622 INFO Computing data fidelity for 114564 rotations and 2048 images at 43%
2023-01-07 13:09:56,497 DEBUG Corresponding type is already real float64.
2023-01-07 13:09:56,497 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:10:11,983 INFO Computing data fidelity for 114564 rotations and 2048 images at 44%
2023-01-07 13:10:12,819 DEBUG Corresponding type is already real float64.
2023-01-07 13:10:12,819 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:10:28,382 INFO Computing data fidelity for 114564 rotations and 2048 images at 45%
2023-01-07 13:10:29,273 DEBUG Corresponding type is already real float64.
2023-01-07 13:10:29,273 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:10:45,065 INFO Computing data fidelity for 114564 rotations and 2048 images at 46%
2023-01-07 13:10:45,961 DEBUG Corresponding type is already real float64.
2023-01-07 13:10:45,961 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:11:01,634 INFO Computing data fidelity for 114564 rotations and 2048 images at 47%
2023-01-07 13:11:02,495 DEBUG Corresponding type is already real float64.
2023-01-07 13:11:02,495 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:11:17,454 INFO Computing data fidelity for 114564 rotations and 2048 images at 48%
2023-01-07 13:11:18,359 DEBUG Corresponding type is already real float64.
2023-01-07 13:11:18,359 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:11:32,552 INFO Computing data fidelity for 114564 rotations and 2048 images at 49%
2023-01-07 13:11:33,376 DEBUG Corresponding type is already real float64.
2023-01-07 13:11:33,377 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:11:47,334 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2023-01-07 13:11:48,134 DEBUG Corresponding type is already real float64.
2023-01-07 13:11:48,134 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:12:02,755 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2023-01-07 13:12:03,675 DEBUG Corresponding type is already real float64.
2023-01-07 13:12:03,675 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:12:19,384 INFO Computing data fidelity for 114564 rotations and 2048 images at 51%
2023-01-07 13:12:20,197 DEBUG Corresponding type is already real float64.
2023-01-07 13:12:20,197 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:12:36,025 INFO Computing data fidelity for 114564 rotations and 2048 images at 52%
2023-01-07 13:12:36,842 DEBUG Corresponding type is already real float64.
2023-01-07 13:12:36,842 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:12:52,115 INFO Computing data fidelity for 114564 rotations and 2048 images at 53%
2023-01-07 13:12:52,939 DEBUG Corresponding type is already real float64.
2023-01-07 13:12:52,940 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:13:08,045 INFO Computing data fidelity for 114564 rotations and 2048 images at 54%
2023-01-07 13:13:08,867 DEBUG Corresponding type is already real float64.
2023-01-07 13:13:08,867 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:13:23,569 INFO Computing data fidelity for 114564 rotations and 2048 images at 55%
2023-01-07 13:13:24,336 DEBUG Corresponding type is already real float64.
2023-01-07 13:13:24,336 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:13:38,708 INFO Computing data fidelity for 114564 rotations and 2048 images at 56%
2023-01-07 13:13:39,475 DEBUG Corresponding type is already real float64.
2023-01-07 13:13:39,475 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:13:54,381 INFO Computing data fidelity for 114564 rotations and 2048 images at 57%
2023-01-07 13:13:55,174 DEBUG Corresponding type is already real float64.
2023-01-07 13:13:55,175 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:14:09,846 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2023-01-07 13:14:10,779 DEBUG Corresponding type is already real float64.
2023-01-07 13:14:10,779 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:14:25,429 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2023-01-07 13:14:26,234 DEBUG Corresponding type is already real float64.
2023-01-07 13:14:26,235 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:14:40,181 INFO Computing data fidelity for 114564 rotations and 2048 images at 59%
2023-01-07 13:14:40,966 DEBUG Corresponding type is already real float64.
2023-01-07 13:14:40,966 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:14:55,699 INFO Computing data fidelity for 114564 rotations and 2048 images at 60%
2023-01-07 13:14:56,483 DEBUG Corresponding type is already real float64.
2023-01-07 13:14:56,483 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:15:11,201 INFO Computing data fidelity for 114564 rotations and 2048 images at 61%
2023-01-07 13:15:12,003 DEBUG Corresponding type is already real float64.
2023-01-07 13:15:12,003 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:15:27,485 INFO Computing data fidelity for 114564 rotations and 2048 images at 62%
2023-01-07 13:15:28,360 DEBUG Corresponding type is already real float64.
2023-01-07 13:15:28,361 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:15:43,059 INFO Computing data fidelity for 114564 rotations and 2048 images at 63%
2023-01-07 13:15:43,920 DEBUG Corresponding type is already real float64.
2023-01-07 13:15:43,920 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:15:59,114 INFO Computing data fidelity for 114564 rotations and 2048 images at 64%
2023-01-07 13:15:59,898 DEBUG Corresponding type is already real float64.
2023-01-07 13:15:59,899 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:16:14,242 INFO Computing data fidelity for 114564 rotations and 2048 images at 65%
2023-01-07 13:16:15,032 DEBUG Corresponding type is already real float64.
2023-01-07 13:16:15,032 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:16:30,116 INFO Computing data fidelity for 114564 rotations and 2048 images at 66%
2023-01-07 13:16:30,954 DEBUG Corresponding type is already real float64.
2023-01-07 13:16:30,954 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:16:45,915 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2023-01-07 13:16:46,716 DEBUG Corresponding type is already real float64.
2023-01-07 13:16:46,716 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:17:00,940 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2023-01-07 13:17:01,782 DEBUG Corresponding type is already real float64.
2023-01-07 13:17:01,782 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:17:16,998 INFO Computing data fidelity for 114564 rotations and 2048 images at 68%
2023-01-07 13:17:17,817 DEBUG Corresponding type is already real float64.
2023-01-07 13:17:17,817 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:17:33,115 INFO Computing data fidelity for 114564 rotations and 2048 images at 69%
2023-01-07 13:17:33,960 DEBUG Corresponding type is already real float64.
2023-01-07 13:17:33,960 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:17:48,939 INFO Computing data fidelity for 114564 rotations and 2048 images at 70%
2023-01-07 13:17:49,937 DEBUG Corresponding type is already real float64.
2023-01-07 13:17:49,937 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:18:05,427 INFO Computing data fidelity for 114564 rotations and 2048 images at 71%
2023-01-07 13:18:06,232 DEBUG Corresponding type is already real float64.
2023-01-07 13:18:06,232 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:18:20,660 INFO Computing data fidelity for 114564 rotations and 2048 images at 72%
2023-01-07 13:18:21,454 DEBUG Corresponding type is already real float64.
2023-01-07 13:18:21,454 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:18:35,930 INFO Computing data fidelity for 114564 rotations and 2048 images at 73%
2023-01-07 13:18:36,723 DEBUG Corresponding type is already real float64.
2023-01-07 13:18:36,724 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:18:50,442 INFO Computing data fidelity for 114564 rotations and 2048 images at 74%
2023-01-07 13:18:51,238 DEBUG Corresponding type is already real float64.
2023-01-07 13:18:51,238 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:19:06,383 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2023-01-07 13:19:07,240 DEBUG Corresponding type is already real float64.
2023-01-07 13:19:07,241 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:19:22,417 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2023-01-07 13:19:23,194 DEBUG Corresponding type is already real float64.
2023-01-07 13:19:23,194 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:19:38,523 INFO Computing data fidelity for 114564 rotations and 2048 images at 76%
2023-01-07 13:19:39,384 DEBUG Corresponding type is already real float64.
2023-01-07 13:19:39,385 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:19:54,108 INFO Computing data fidelity for 114564 rotations and 2048 images at 77%
2023-01-07 13:19:54,973 DEBUG Corresponding type is already real float64.
2023-01-07 13:19:54,973 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:20:09,831 INFO Computing data fidelity for 114564 rotations and 2048 images at 78%
2023-01-07 13:20:10,636 DEBUG Corresponding type is already real float64.
2023-01-07 13:20:10,636 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:20:25,602 INFO Computing data fidelity for 114564 rotations and 2048 images at 79%
2023-01-07 13:20:26,374 DEBUG Corresponding type is already real float64.
2023-01-07 13:20:26,374 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:20:41,234 INFO Computing data fidelity for 114564 rotations and 2048 images at 80%
2023-01-07 13:20:42,073 DEBUG Corresponding type is already real float64.
2023-01-07 13:20:42,073 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:20:56,782 INFO Computing data fidelity for 114564 rotations and 2048 images at 81%
2023-01-07 13:20:57,634 DEBUG Corresponding type is already real float64.
2023-01-07 13:20:57,634 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:21:12,212 INFO Computing data fidelity for 114564 rotations and 2048 images at 82%
2023-01-07 13:21:12,981 DEBUG Corresponding type is already real float64.
2023-01-07 13:21:12,982 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:21:27,211 INFO Computing data fidelity for 114564 rotations and 2048 images at 83%
2023-01-07 13:21:27,993 DEBUG Corresponding type is already real float64.
2023-01-07 13:21:27,993 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:21:42,413 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2023-01-07 13:21:43,207 DEBUG Corresponding type is already real float64.
2023-01-07 13:21:43,207 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:21:57,921 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2023-01-07 13:21:58,712 DEBUG Corresponding type is already real float64.
2023-01-07 13:21:58,712 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:22:13,245 INFO Computing data fidelity for 114564 rotations and 2048 images at 85%
2023-01-07 13:22:14,047 DEBUG Corresponding type is already real float64.
2023-01-07 13:22:14,047 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:22:28,888 INFO Computing data fidelity for 114564 rotations and 2048 images at 86%
2023-01-07 13:22:29,794 DEBUG Corresponding type is already real float64.
2023-01-07 13:22:29,794 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:22:44,930 INFO Computing data fidelity for 114564 rotations and 2048 images at 87%
2023-01-07 13:22:45,745 DEBUG Corresponding type is already real float64.
2023-01-07 13:22:45,745 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:22:59,770 INFO Computing data fidelity for 114564 rotations and 2048 images at 88%
2023-01-07 13:23:00,559 DEBUG Corresponding type is already real float64.
2023-01-07 13:23:00,559 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:23:14,757 INFO Computing data fidelity for 114564 rotations and 2048 images at 89%
2023-01-07 13:23:15,663 DEBUG Corresponding type is already real float64.
2023-01-07 13:23:15,663 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:23:30,548 INFO Computing data fidelity for 114564 rotations and 2048 images at 90%
2023-01-07 13:23:31,360 DEBUG Corresponding type is already real float64.
2023-01-07 13:23:31,360 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:23:45,725 INFO Computing data fidelity for 114564 rotations and 2048 images at 91%
2023-01-07 13:23:46,517 DEBUG Corresponding type is already real float64.
2023-01-07 13:23:46,517 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:24:00,451 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2023-01-07 13:24:01,327 DEBUG Corresponding type is already real float64.
2023-01-07 13:24:01,327 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:24:15,205 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2023-01-07 13:24:15,991 DEBUG Corresponding type is already real float64.
2023-01-07 13:24:15,991 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:24:30,181 INFO Computing data fidelity for 114564 rotations and 2048 images at 93%
2023-01-07 13:24:30,955 DEBUG Corresponding type is already real float64.
2023-01-07 13:24:30,955 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:24:46,213 INFO Computing data fidelity for 114564 rotations and 2048 images at 94%
2023-01-07 13:24:47,045 DEBUG Corresponding type is already real float64.
2023-01-07 13:24:47,045 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:25:00,707 INFO Computing data fidelity for 114564 rotations and 2048 images at 95%
2023-01-07 13:25:01,470 DEBUG Corresponding type is already real float64.
2023-01-07 13:25:01,470 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:25:15,809 INFO Computing data fidelity for 114564 rotations and 2048 images at 96%
2023-01-07 13:25:16,660 DEBUG Corresponding type is already real float64.
2023-01-07 13:25:16,660 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:25:30,411 INFO Computing data fidelity for 114564 rotations and 2048 images at 97%
2023-01-07 13:25:31,190 DEBUG Corresponding type is already real float64.
2023-01-07 13:25:31,190 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:25:45,814 INFO Computing data fidelity for 114564 rotations and 2048 images at 98%
2023-01-07 13:25:46,663 DEBUG Corresponding type is already real float64.
2023-01-07 13:25:46,663 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:26:01,517 INFO Computing data fidelity for 114564 rotations and 2048 images at 99%
2023-01-07 13:26:02,015 DEBUG Corresponding type is already real float64.
2023-01-07 13:26:02,015 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:26:14,033 INFO Computing data fidelity for 114564 rotations and 2048 images at 100%
2023-01-07 13:26:17,449 INFO Do lambda update step
2023-01-07 13:26:42,856 INFO Do rots update step
2023-01-07 13:26:43,731 INFO Projecting 2048 vectors onto 114564-simplex at 2%
2023-01-07 13:26:44,423 INFO Projecting 2048 vectors onto 114564-simplex at 4%
2023-01-07 13:26:45,045 INFO Projecting 2048 vectors onto 114564-simplex at 7%
2023-01-07 13:26:45,662 INFO Projecting 2048 vectors onto 114564-simplex at 9%
2023-01-07 13:26:46,285 INFO Projecting 2048 vectors onto 114564-simplex at 12%
2023-01-07 13:26:46,915 INFO Projecting 2048 vectors onto 114564-simplex at 14%
2023-01-07 13:26:47,540 INFO Projecting 2048 vectors onto 114564-simplex at 17%
2023-01-07 13:26:48,162 INFO Projecting 2048 vectors onto 114564-simplex at 19%
2023-01-07 13:26:48,776 INFO Projecting 2048 vectors onto 114564-simplex at 21%
2023-01-07 13:26:49,398 INFO Projecting 2048 vectors onto 114564-simplex at 24%
2023-01-07 13:26:50,210 INFO Projecting 2048 vectors onto 114564-simplex at 26%
2023-01-07 13:26:50,840 INFO Projecting 2048 vectors onto 114564-simplex at 29%
2023-01-07 13:26:51,462 INFO Projecting 2048 vectors onto 114564-simplex at 31%
2023-01-07 13:26:52,085 INFO Projecting 2048 vectors onto 114564-simplex at 34%
2023-01-07 13:26:52,710 INFO Projecting 2048 vectors onto 114564-simplex at 36%
2023-01-07 13:26:53,336 INFO Projecting 2048 vectors onto 114564-simplex at 39%
2023-01-07 13:26:53,973 INFO Projecting 2048 vectors onto 114564-simplex at 41%
2023-01-07 13:26:54,607 INFO Projecting 2048 vectors onto 114564-simplex at 43%
2023-01-07 13:26:55,346 INFO Projecting 2048 vectors onto 114564-simplex at 46%
2023-01-07 13:26:56,105 INFO Projecting 2048 vectors onto 114564-simplex at 48%
2023-01-07 13:26:57,014 INFO Projecting 2048 vectors onto 114564-simplex at 51%
2023-01-07 13:26:57,690 INFO Projecting 2048 vectors onto 114564-simplex at 53%
2023-01-07 13:26:58,337 INFO Projecting 2048 vectors onto 114564-simplex at 56%
2023-01-07 13:26:59,024 INFO Projecting 2048 vectors onto 114564-simplex at 58%
2023-01-07 13:26:59,656 INFO Projecting 2048 vectors onto 114564-simplex at 61%
2023-01-07 13:27:00,296 INFO Projecting 2048 vectors onto 114564-simplex at 63%
2023-01-07 13:27:00,908 INFO Projecting 2048 vectors onto 114564-simplex at 65%
2023-01-07 13:27:01,574 INFO Projecting 2048 vectors onto 114564-simplex at 68%
2023-01-07 13:27:02,288 INFO Projecting 2048 vectors onto 114564-simplex at 70%
2023-01-07 13:27:02,981 INFO Projecting 2048 vectors onto 114564-simplex at 73%
2023-01-07 13:27:03,822 INFO Projecting 2048 vectors onto 114564-simplex at 75%
2023-01-07 13:27:04,503 INFO Projecting 2048 vectors onto 114564-simplex at 78%
2023-01-07 13:27:05,139 INFO Projecting 2048 vectors onto 114564-simplex at 80%
2023-01-07 13:27:05,809 INFO Projecting 2048 vectors onto 114564-simplex at 83%
2023-01-07 13:27:06,523 INFO Projecting 2048 vectors onto 114564-simplex at 85%
2023-01-07 13:27:07,246 INFO Projecting 2048 vectors onto 114564-simplex at 87%
2023-01-07 13:27:07,988 INFO Projecting 2048 vectors onto 114564-simplex at 90%
2023-01-07 13:27:08,732 INFO Projecting 2048 vectors onto 114564-simplex at 92%
2023-01-07 13:27:09,418 INFO Projecting 2048 vectors onto 114564-simplex at 95%
2023-01-07 13:27:10,163 INFO Projecting 2048 vectors onto 114564-simplex at 97%
2023-01-07 13:27:10,917 INFO Projecting 2048 vectors onto 114564-simplex at 100%
2023-01-07 13:27:12,711 INFO Computing 50 means of 479 points in at most 20 steps...
2023-01-07 13:27:12,799 INFO Computing 2048 means at 2%
2023-01-07 13:27:12,887 INFO Computing 50 means of 465 points in at most 20 steps...
2023-01-07 13:27:12,970 INFO Computing 2048 means at 4%
2023-01-07 13:27:13,056 INFO Computing 50 means of 476 points in at most 20 steps...
2023-01-07 13:27:13,122 INFO Computing 2048 means at 7%
2023-01-07 13:27:13,213 INFO Computing 50 means of 483 points in at most 20 steps...
2023-01-07 13:27:13,300 INFO Computing 2048 means at 9%
2023-01-07 13:27:13,387 INFO Computing 50 means of 497 points in at most 20 steps...
2023-01-07 13:27:13,459 INFO Computing 2048 means at 12%
2023-01-07 13:27:13,541 INFO Computing 50 means of 502 points in at most 20 steps...
2023-01-07 13:27:13,626 INFO Computing 2048 means at 14%
2023-01-07 13:27:13,714 INFO Computing 50 means of 483 points in at most 20 steps...
2023-01-07 13:27:13,793 INFO Computing 2048 means at 17%
2023-01-07 13:27:13,877 INFO Computing 50 means of 492 points in at most 20 steps...
2023-01-07 13:27:13,955 INFO Computing 2048 means at 19%
2023-01-07 13:27:14,042 INFO Computing 50 means of 483 points in at most 20 steps...
2023-01-07 13:27:14,120 INFO Computing 2048 means at 21%
2023-01-07 13:27:14,208 INFO Computing 50 means of 476 points in at most 20 steps...
2023-01-07 13:27:14,282 INFO Computing 2048 means at 24%
2023-01-07 13:27:14,375 INFO Computing 50 means of 499 points in at most 20 steps...
2023-01-07 13:27:14,453 INFO Computing 2048 means at 26%
2023-01-07 13:27:14,539 INFO Computing 50 means of 475 points in at most 20 steps...
2023-01-07 13:27:14,614 INFO Computing 2048 means at 29%
2023-01-07 13:27:14,700 INFO Computing 50 means of 495 points in at most 20 steps...
2023-01-07 13:27:14,774 INFO Computing 2048 means at 31%
2023-01-07 13:27:14,860 INFO Computing 50 means of 501 points in at most 20 steps...
2023-01-07 13:27:14,930 INFO Computing 2048 means at 34%
2023-01-07 13:27:15,013 INFO Computing 50 means of 467 points in at most 20 steps...
2023-01-07 13:27:15,079 INFO Computing 2048 means at 36%
2023-01-07 13:27:15,161 INFO Computing 50 means of 485 points in at most 20 steps...
2023-01-07 13:27:15,217 INFO Computing 2048 means at 39%
2023-01-07 13:27:15,301 INFO Computing 50 means of 478 points in at most 20 steps...
2023-01-07 13:27:15,361 INFO Computing 2048 means at 41%
2023-01-07 13:27:15,444 INFO Computing 50 means of 473 points in at most 20 steps...
2023-01-07 13:27:15,506 INFO Computing 2048 means at 43%
2023-01-07 13:27:15,592 INFO Computing 50 means of 481 points in at most 20 steps...
2023-01-07 13:27:15,651 INFO Computing 2048 means at 46%
2023-01-07 13:27:15,733 INFO Computing 50 means of 491 points in at most 20 steps...
2023-01-07 13:27:15,789 INFO Computing 2048 means at 48%
2023-01-07 13:27:15,877 INFO Computing 50 means of 485 points in at most 20 steps...
2023-01-07 13:27:15,935 INFO Computing 2048 means at 51%
2023-01-07 13:27:16,020 INFO Computing 50 means of 514 points in at most 20 steps...
2023-01-07 13:27:16,085 INFO Computing 2048 means at 53%
2023-01-07 13:27:16,169 INFO Computing 50 means of 480 points in at most 20 steps...
2023-01-07 13:27:16,228 INFO Computing 2048 means at 56%
2023-01-07 13:27:16,313 INFO Computing 50 means of 475 points in at most 20 steps...
2023-01-07 13:27:16,370 INFO Computing 2048 means at 58%
2023-01-07 13:27:16,452 INFO Computing 50 means of 479 points in at most 20 steps...
2023-01-07 13:27:16,510 INFO Computing 2048 means at 61%
2023-01-07 13:27:16,592 INFO Computing 50 means of 489 points in at most 20 steps...
2023-01-07 13:27:16,653 INFO Computing 2048 means at 63%
2023-01-07 13:27:16,734 INFO Computing 50 means of 493 points in at most 20 steps...
2023-01-07 13:27:16,790 INFO Computing 2048 means at 65%
2023-01-07 13:27:16,872 INFO Computing 50 means of 486 points in at most 20 steps...
2023-01-07 13:27:16,931 INFO Computing 2048 means at 68%
2023-01-07 13:27:17,011 INFO Computing 50 means of 474 points in at most 20 steps...
2023-01-07 13:27:17,065 INFO Computing 2048 means at 70%
2023-01-07 13:27:17,143 INFO Computing 50 means of 486 points in at most 20 steps...
2023-01-07 13:27:17,201 INFO Computing 2048 means at 73%
2023-01-07 13:27:17,288 INFO Computing 50 means of 476 points in at most 20 steps...
2023-01-07 13:27:17,344 INFO Computing 2048 means at 75%
2023-01-07 13:27:17,425 INFO Computing 50 means of 470 points in at most 20 steps...
2023-01-07 13:27:17,480 INFO Computing 2048 means at 78%
2023-01-07 13:27:17,561 INFO Computing 50 means of 485 points in at most 20 steps...
2023-01-07 13:27:17,623 INFO Computing 2048 means at 80%
2023-01-07 13:27:17,704 INFO Computing 50 means of 486 points in at most 20 steps...
2023-01-07 13:27:17,761 INFO Computing 2048 means at 83%
2023-01-07 13:27:17,838 INFO Computing 50 means of 506 points in at most 20 steps...
2023-01-07 13:27:17,896 INFO Computing 2048 means at 85%
2023-01-07 13:27:17,983 INFO Computing 50 means of 491 points in at most 20 steps...
2023-01-07 13:27:18,046 INFO Computing 2048 means at 87%
2023-01-07 13:27:18,139 INFO Computing 50 means of 498 points in at most 20 steps...
2023-01-07 13:27:18,197 INFO Computing 2048 means at 90%
2023-01-07 13:27:18,277 INFO Computing 50 means of 473 points in at most 20 steps...
2023-01-07 13:27:18,331 INFO Computing 2048 means at 92%
2023-01-07 13:27:18,410 INFO Computing 50 means of 481 points in at most 20 steps...
2023-01-07 13:27:18,466 INFO Computing 2048 means at 95%
2023-01-07 13:27:18,545 INFO Computing 50 means of 495 points in at most 20 steps...
2023-01-07 13:27:18,602 INFO Computing 2048 means at 97%
2023-01-07 13:27:18,683 INFO Computing 48 means of 469 points in at most 20 steps...
2023-01-07 13:27:18,736 INFO Computing 2048 means at 100%
2023-01-07 13:27:23,834 INFO Do vol update step
2023-01-07 13:27:23,836 INFO Compute adjoint forward mapping on the images
2023-01-07 13:27:26,008 DEBUG Corresponding type is already complex complex128.
2023-01-07 13:27:29,225 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2023-01-07 13:27:29,239 INFO Computing adjoint forward mappings from 2048 rotations at 50%
2023-01-07 13:27:31,005 DEBUG Corresponding type is already complex complex128.
2023-01-07 13:27:34,077 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2023-01-07 13:27:34,089 INFO Computing adjoint forward mappings from 2048 rotations at 100%
2023-01-07 13:27:35,045 DEBUG Corresponding type is already real float64.
2023-01-07 13:27:35,045 DEBUG anufft passed real_type for signal, converting
2023-01-07 13:27:42,462 INFO Computing kernel from 2048 rotations at 50%
2023-01-07 13:27:43,410 DEBUG Corresponding type is already real float64.
2023-01-07 13:27:43,410 DEBUG anufft passed real_type for signal, converting
2023-01-07 13:27:50,948 INFO Computing kernel from 2048 rotations at 100%
2023-01-07 13:27:50,951 INFO Computing non-centered Fourier Transform
2023-01-07 13:27:51,133 INFO Add ramp filter regularisation
2023-01-07 13:27:56,678 INFO Update data_discrepancies
2023-01-07 13:27:56,680 INFO Computing \|Ag.u - f_i\|^2
2023-01-07 13:27:57,606 DEBUG Corresponding type is already real float64.
2023-01-07 13:27:57,606 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:28:13,791 INFO Computing data fidelity for 114564 rotations and 2048 images at 0%
2023-01-07 13:28:14,727 DEBUG Corresponding type is already real float64.
2023-01-07 13:28:14,727 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:28:30,641 INFO Computing data fidelity for 114564 rotations and 2048 images at 1%
2023-01-07 13:28:31,517 DEBUG Corresponding type is already real float64.
2023-01-07 13:28:31,517 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:28:47,004 INFO Computing data fidelity for 114564 rotations and 2048 images at 2%
2023-01-07 13:28:47,804 DEBUG Corresponding type is already real float64.
2023-01-07 13:28:47,804 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:29:03,219 INFO Computing data fidelity for 114564 rotations and 2048 images at 3%
2023-01-07 13:29:04,029 DEBUG Corresponding type is already real float64.
2023-01-07 13:29:04,029 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:29:18,564 INFO Computing data fidelity for 114564 rotations and 2048 images at 4%
2023-01-07 13:29:19,354 DEBUG Corresponding type is already real float64.
2023-01-07 13:29:19,355 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:29:33,132 INFO Computing data fidelity for 114564 rotations and 2048 images at 5%
2023-01-07 13:29:33,914 DEBUG Corresponding type is already real float64.
2023-01-07 13:29:33,914 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:29:47,836 INFO Computing data fidelity for 114564 rotations and 2048 images at 6%
2023-01-07 13:29:48,619 DEBUG Corresponding type is already real float64.
2023-01-07 13:29:48,619 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:30:03,663 INFO Computing data fidelity for 114564 rotations and 2048 images at 7%
2023-01-07 13:30:04,503 DEBUG Corresponding type is already real float64.
2023-01-07 13:30:04,503 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:30:17,930 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2023-01-07 13:30:18,664 DEBUG Corresponding type is already real float64.
2023-01-07 13:30:18,665 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:30:32,566 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2023-01-07 13:30:33,315 DEBUG Corresponding type is already real float64.
2023-01-07 13:30:33,315 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:30:47,711 INFO Computing data fidelity for 114564 rotations and 2048 images at 9%
2023-01-07 13:30:48,514 DEBUG Corresponding type is already real float64.
2023-01-07 13:30:48,514 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:31:03,363 INFO Computing data fidelity for 114564 rotations and 2048 images at 10%
2023-01-07 13:31:04,190 DEBUG Corresponding type is already real float64.
2023-01-07 13:31:04,190 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:31:18,806 INFO Computing data fidelity for 114564 rotations and 2048 images at 11%
2023-01-07 13:31:19,600 DEBUG Corresponding type is already real float64.
2023-01-07 13:31:19,600 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:31:34,384 INFO Computing data fidelity for 114564 rotations and 2048 images at 12%
2023-01-07 13:31:35,150 DEBUG Corresponding type is already real float64.
2023-01-07 13:31:35,150 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:31:48,598 INFO Computing data fidelity for 114564 rotations and 2048 images at 13%
2023-01-07 13:31:49,359 DEBUG Corresponding type is already real float64.
2023-01-07 13:31:49,359 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:32:03,863 INFO Computing data fidelity for 114564 rotations and 2048 images at 14%
2023-01-07 13:32:04,667 DEBUG Corresponding type is already real float64.
2023-01-07 13:32:04,667 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:32:18,324 INFO Computing data fidelity for 114564 rotations and 2048 images at 15%
2023-01-07 13:32:19,085 DEBUG Corresponding type is already real float64.
2023-01-07 13:32:19,085 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:32:32,562 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2023-01-07 13:32:33,319 DEBUG Corresponding type is already real float64.
2023-01-07 13:32:33,319 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:32:46,737 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2023-01-07 13:32:47,496 DEBUG Corresponding type is already real float64.
2023-01-07 13:32:47,496 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:33:01,604 INFO Computing data fidelity for 114564 rotations and 2048 images at 17%
2023-01-07 13:33:02,371 DEBUG Corresponding type is already real float64.
2023-01-07 13:33:02,371 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:33:16,379 INFO Computing data fidelity for 114564 rotations and 2048 images at 18%
2023-01-07 13:33:17,123 DEBUG Corresponding type is already real float64.
2023-01-07 13:33:17,123 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:33:30,398 INFO Computing data fidelity for 114564 rotations and 2048 images at 19%
2023-01-07 13:33:31,155 DEBUG Corresponding type is already real float64.
2023-01-07 13:33:31,155 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:33:44,390 INFO Computing data fidelity for 114564 rotations and 2048 images at 20%
2023-01-07 13:33:45,137 DEBUG Corresponding type is already real float64.
2023-01-07 13:33:45,137 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:33:58,444 INFO Computing data fidelity for 114564 rotations and 2048 images at 21%
2023-01-07 13:33:59,193 DEBUG Corresponding type is already real float64.
2023-01-07 13:33:59,193 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:34:13,209 INFO Computing data fidelity for 114564 rotations and 2048 images at 22%
2023-01-07 13:34:14,038 DEBUG Corresponding type is already real float64.
2023-01-07 13:34:14,038 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:34:28,924 INFO Computing data fidelity for 114564 rotations and 2048 images at 23%
2023-01-07 13:34:29,803 DEBUG Corresponding type is already real float64.
2023-01-07 13:34:29,803 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:34:44,515 INFO Computing data fidelity for 114564 rotations and 2048 images at 24%
2023-01-07 13:34:45,281 DEBUG Corresponding type is already real float64.
2023-01-07 13:34:45,281 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:34:59,508 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2023-01-07 13:35:00,284 DEBUG Corresponding type is already real float64.
2023-01-07 13:35:00,284 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:35:13,991 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2023-01-07 13:35:14,841 DEBUG Corresponding type is already real float64.
2023-01-07 13:35:14,841 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:35:28,329 INFO Computing data fidelity for 114564 rotations and 2048 images at 26%
2023-01-07 13:35:29,092 DEBUG Corresponding type is already real float64.
2023-01-07 13:35:29,092 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:35:43,610 INFO Computing data fidelity for 114564 rotations and 2048 images at 27%
2023-01-07 13:35:44,452 DEBUG Corresponding type is already real float64.
2023-01-07 13:35:44,452 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:35:58,944 INFO Computing data fidelity for 114564 rotations and 2048 images at 28%
2023-01-07 13:35:59,772 DEBUG Corresponding type is already real float64.
2023-01-07 13:35:59,772 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:36:14,836 INFO Computing data fidelity for 114564 rotations and 2048 images at 29%
2023-01-07 13:36:15,726 DEBUG Corresponding type is already real float64.
2023-01-07 13:36:15,726 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:36:30,610 INFO Computing data fidelity for 114564 rotations and 2048 images at 30%
2023-01-07 13:36:31,459 DEBUG Corresponding type is already real float64.
2023-01-07 13:36:31,460 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:36:46,243 INFO Computing data fidelity for 114564 rotations and 2048 images at 31%
2023-01-07 13:36:47,096 DEBUG Corresponding type is already real float64.
2023-01-07 13:36:47,096 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:37:01,544 INFO Computing data fidelity for 114564 rotations and 2048 images at 32%
2023-01-07 13:37:02,357 DEBUG Corresponding type is already real float64.
2023-01-07 13:37:02,357 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:37:16,414 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2023-01-07 13:37:17,215 DEBUG Corresponding type is already real float64.
2023-01-07 13:37:17,215 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:37:31,827 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2023-01-07 13:37:32,734 DEBUG Corresponding type is already real float64.
2023-01-07 13:37:32,734 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:37:46,845 INFO Computing data fidelity for 114564 rotations and 2048 images at 34%
2023-01-07 13:37:47,712 DEBUG Corresponding type is already real float64.
2023-01-07 13:37:47,712 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:38:02,367 INFO Computing data fidelity for 114564 rotations and 2048 images at 35%
2023-01-07 13:38:03,157 DEBUG Corresponding type is already real float64.
2023-01-07 13:38:03,157 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:38:17,880 INFO Computing data fidelity for 114564 rotations and 2048 images at 36%
2023-01-07 13:38:18,755 DEBUG Corresponding type is already real float64.
2023-01-07 13:38:18,755 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:38:33,635 INFO Computing data fidelity for 114564 rotations and 2048 images at 37%
2023-01-07 13:38:34,415 DEBUG Corresponding type is already real float64.
2023-01-07 13:38:34,415 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:38:49,522 INFO Computing data fidelity for 114564 rotations and 2048 images at 38%
2023-01-07 13:38:50,389 DEBUG Corresponding type is already real float64.
2023-01-07 13:38:50,389 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:39:05,402 INFO Computing data fidelity for 114564 rotations and 2048 images at 39%
2023-01-07 13:39:06,208 DEBUG Corresponding type is already real float64.
2023-01-07 13:39:06,208 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:39:20,208 INFO Computing data fidelity for 114564 rotations and 2048 images at 40%
2023-01-07 13:39:21,088 DEBUG Corresponding type is already real float64.
2023-01-07 13:39:21,088 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:39:36,112 INFO Computing data fidelity for 114564 rotations and 2048 images at 41%
2023-01-07 13:39:36,895 DEBUG Corresponding type is already real float64.
2023-01-07 13:39:36,895 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:39:50,355 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2023-01-07 13:39:51,137 DEBUG Corresponding type is already real float64.
2023-01-07 13:39:51,137 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:40:06,217 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2023-01-07 13:40:07,101 DEBUG Corresponding type is already real float64.
2023-01-07 13:40:07,101 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:40:22,012 INFO Computing data fidelity for 114564 rotations and 2048 images at 43%
2023-01-07 13:40:22,800 DEBUG Corresponding type is already real float64.
2023-01-07 13:40:22,800 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:40:37,379 INFO Computing data fidelity for 114564 rotations and 2048 images at 44%
2023-01-07 13:40:38,171 DEBUG Corresponding type is already real float64.
2023-01-07 13:40:38,171 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:40:52,532 INFO Computing data fidelity for 114564 rotations and 2048 images at 45%
2023-01-07 13:40:53,309 DEBUG Corresponding type is already real float64.
2023-01-07 13:40:53,309 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:41:08,051 INFO Computing data fidelity for 114564 rotations and 2048 images at 46%
2023-01-07 13:41:08,835 DEBUG Corresponding type is already real float64.
2023-01-07 13:41:08,835 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:41:24,063 INFO Computing data fidelity for 114564 rotations and 2048 images at 47%
2023-01-07 13:41:25,085 DEBUG Corresponding type is already real float64.
2023-01-07 13:41:25,085 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:41:39,400 INFO Computing data fidelity for 114564 rotations and 2048 images at 48%
2023-01-07 13:41:40,189 DEBUG Corresponding type is already real float64.
2023-01-07 13:41:40,189 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:41:54,133 INFO Computing data fidelity for 114564 rotations and 2048 images at 49%
2023-01-07 13:41:54,942 DEBUG Corresponding type is already real float64.
2023-01-07 13:41:54,943 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:42:09,246 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2023-01-07 13:42:10,069 DEBUG Corresponding type is already real float64.
2023-01-07 13:42:10,069 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:42:25,258 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2023-01-07 13:42:26,039 DEBUG Corresponding type is already real float64.
2023-01-07 13:42:26,039 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:42:41,215 INFO Computing data fidelity for 114564 rotations and 2048 images at 51%
2023-01-07 13:42:42,032 DEBUG Corresponding type is already real float64.
2023-01-07 13:42:42,032 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:42:56,660 INFO Computing data fidelity for 114564 rotations and 2048 images at 52%
2023-01-07 13:42:57,537 DEBUG Corresponding type is already real float64.
2023-01-07 13:42:57,537 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:43:12,168 INFO Computing data fidelity for 114564 rotations and 2048 images at 53%
2023-01-07 13:43:12,946 DEBUG Corresponding type is already real float64.
2023-01-07 13:43:12,946 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:43:27,645 INFO Computing data fidelity for 114564 rotations and 2048 images at 54%
2023-01-07 13:43:28,512 DEBUG Corresponding type is already real float64.
2023-01-07 13:43:28,512 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:43:43,416 INFO Computing data fidelity for 114564 rotations and 2048 images at 55%
2023-01-07 13:43:44,212 DEBUG Corresponding type is already real float64.
2023-01-07 13:43:44,212 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:43:59,413 INFO Computing data fidelity for 114564 rotations and 2048 images at 56%
2023-01-07 13:44:00,308 DEBUG Corresponding type is already real float64.
2023-01-07 13:44:00,308 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:44:15,155 INFO Computing data fidelity for 114564 rotations and 2048 images at 57%
2023-01-07 13:44:16,012 DEBUG Corresponding type is already real float64.
2023-01-07 13:44:16,012 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:44:31,008 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2023-01-07 13:44:31,860 DEBUG Corresponding type is already real float64.
2023-01-07 13:44:31,860 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:44:45,838 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2023-01-07 13:44:46,615 DEBUG Corresponding type is already real float64.
2023-01-07 13:44:46,616 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:45:00,873 INFO Computing data fidelity for 114564 rotations and 2048 images at 59%
2023-01-07 13:45:01,742 DEBUG Corresponding type is already real float64.
2023-01-07 13:45:01,742 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:45:16,121 INFO Computing data fidelity for 114564 rotations and 2048 images at 60%
2023-01-07 13:45:16,905 DEBUG Corresponding type is already real float64.
2023-01-07 13:45:16,905 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:45:30,983 INFO Computing data fidelity for 114564 rotations and 2048 images at 61%
2023-01-07 13:45:31,798 DEBUG Corresponding type is already real float64.
2023-01-07 13:45:31,798 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:45:46,652 INFO Computing data fidelity for 114564 rotations and 2048 images at 62%
2023-01-07 13:45:47,445 DEBUG Corresponding type is already real float64.
2023-01-07 13:45:47,445 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:46:01,988 INFO Computing data fidelity for 114564 rotations and 2048 images at 63%
2023-01-07 13:46:02,864 DEBUG Corresponding type is already real float64.
2023-01-07 13:46:02,865 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:46:17,832 INFO Computing data fidelity for 114564 rotations and 2048 images at 64%
2023-01-07 13:46:18,678 DEBUG Corresponding type is already real float64.
2023-01-07 13:46:18,678 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:46:33,707 INFO Computing data fidelity for 114564 rotations and 2048 images at 65%
2023-01-07 13:46:34,582 DEBUG Corresponding type is already real float64.
2023-01-07 13:46:34,582 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:46:49,639 INFO Computing data fidelity for 114564 rotations and 2048 images at 66%
2023-01-07 13:46:50,498 DEBUG Corresponding type is already real float64.
2023-01-07 13:46:50,498 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:47:04,677 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2023-01-07 13:47:05,467 DEBUG Corresponding type is already real float64.
2023-01-07 13:47:05,467 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:47:20,001 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2023-01-07 13:47:20,777 DEBUG Corresponding type is already real float64.
2023-01-07 13:47:20,778 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:47:35,640 INFO Computing data fidelity for 114564 rotations and 2048 images at 68%
2023-01-07 13:47:36,519 DEBUG Corresponding type is already real float64.
2023-01-07 13:47:36,519 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:47:51,671 INFO Computing data fidelity for 114564 rotations and 2048 images at 69%
2023-01-07 13:47:52,491 DEBUG Corresponding type is already real float64.
2023-01-07 13:47:52,491 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:48:07,268 INFO Computing data fidelity for 114564 rotations and 2048 images at 70%
2023-01-07 13:48:08,137 DEBUG Corresponding type is already real float64.
2023-01-07 13:48:08,138 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:48:22,617 INFO Computing data fidelity for 114564 rotations and 2048 images at 71%
2023-01-07 13:48:23,443 DEBUG Corresponding type is already real float64.
2023-01-07 13:48:23,443 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:48:37,501 INFO Computing data fidelity for 114564 rotations and 2048 images at 72%
2023-01-07 13:48:38,282 DEBUG Corresponding type is already real float64.
2023-01-07 13:48:38,282 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:48:52,720 INFO Computing data fidelity for 114564 rotations and 2048 images at 73%
2023-01-07 13:48:53,621 DEBUG Corresponding type is already real float64.
2023-01-07 13:48:53,621 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:49:08,410 INFO Computing data fidelity for 114564 rotations and 2048 images at 74%
2023-01-07 13:49:09,240 DEBUG Corresponding type is already real float64.
2023-01-07 13:49:09,240 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:49:23,875 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2023-01-07 13:49:24,725 DEBUG Corresponding type is already real float64.
2023-01-07 13:49:24,726 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:49:39,369 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2023-01-07 13:49:40,216 DEBUG Corresponding type is already real float64.
2023-01-07 13:49:40,216 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:49:54,996 INFO Computing data fidelity for 114564 rotations and 2048 images at 76%
2023-01-07 13:49:55,928 DEBUG Corresponding type is already real float64.
2023-01-07 13:49:55,929 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:50:11,095 INFO Computing data fidelity for 114564 rotations and 2048 images at 77%
2023-01-07 13:50:11,967 DEBUG Corresponding type is already real float64.
2023-01-07 13:50:11,967 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:50:26,861 INFO Computing data fidelity for 114564 rotations and 2048 images at 78%
2023-01-07 13:50:27,684 DEBUG Corresponding type is already real float64.
2023-01-07 13:50:27,684 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:50:43,018 INFO Computing data fidelity for 114564 rotations and 2048 images at 79%
2023-01-07 13:50:43,887 DEBUG Corresponding type is already real float64.
2023-01-07 13:50:43,887 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:50:59,814 INFO Computing data fidelity for 114564 rotations and 2048 images at 80%
2023-01-07 13:51:00,681 DEBUG Corresponding type is already real float64.
2023-01-07 13:51:00,681 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:51:15,670 INFO Computing data fidelity for 114564 rotations and 2048 images at 81%
2023-01-07 13:51:16,468 DEBUG Corresponding type is already real float64.
2023-01-07 13:51:16,469 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:51:30,655 INFO Computing data fidelity for 114564 rotations and 2048 images at 82%
2023-01-07 13:51:31,471 DEBUG Corresponding type is already real float64.
2023-01-07 13:51:31,472 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:51:46,133 INFO Computing data fidelity for 114564 rotations and 2048 images at 83%
2023-01-07 13:51:46,911 DEBUG Corresponding type is already real float64.
2023-01-07 13:51:46,912 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:52:01,146 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2023-01-07 13:52:02,147 DEBUG Corresponding type is already real float64.
2023-01-07 13:52:02,148 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:52:16,522 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2023-01-07 13:52:17,311 DEBUG Corresponding type is already real float64.
2023-01-07 13:52:17,311 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:52:32,303 INFO Computing data fidelity for 114564 rotations and 2048 images at 85%
2023-01-07 13:52:33,154 DEBUG Corresponding type is already real float64.
2023-01-07 13:52:33,154 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:52:48,609 INFO Computing data fidelity for 114564 rotations and 2048 images at 86%
2023-01-07 13:52:49,502 DEBUG Corresponding type is already real float64.
2023-01-07 13:52:49,502 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:53:04,649 INFO Computing data fidelity for 114564 rotations and 2048 images at 87%
2023-01-07 13:53:05,466 DEBUG Corresponding type is already real float64.
2023-01-07 13:53:05,466 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:53:19,707 INFO Computing data fidelity for 114564 rotations and 2048 images at 88%
2023-01-07 13:53:20,520 DEBUG Corresponding type is already real float64.
2023-01-07 13:53:20,520 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:53:34,275 INFO Computing data fidelity for 114564 rotations and 2048 images at 89%
2023-01-07 13:53:35,042 DEBUG Corresponding type is already real float64.
2023-01-07 13:53:35,042 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:53:48,500 INFO Computing data fidelity for 114564 rotations and 2048 images at 90%
2023-01-07 13:53:49,269 DEBUG Corresponding type is already real float64.
2023-01-07 13:53:49,269 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:54:02,917 INFO Computing data fidelity for 114564 rotations and 2048 images at 91%
2023-01-07 13:54:03,719 DEBUG Corresponding type is already real float64.
2023-01-07 13:54:03,719 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:54:18,690 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2023-01-07 13:54:19,532 DEBUG Corresponding type is already real float64.
2023-01-07 13:54:19,532 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:54:34,308 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2023-01-07 13:54:35,116 DEBUG Corresponding type is already real float64.
2023-01-07 13:54:35,116 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:54:49,075 INFO Computing data fidelity for 114564 rotations and 2048 images at 93%
2023-01-07 13:54:49,923 DEBUG Corresponding type is already real float64.
2023-01-07 13:54:49,923 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:55:04,030 INFO Computing data fidelity for 114564 rotations and 2048 images at 94%
2023-01-07 13:55:04,827 DEBUG Corresponding type is already real float64.
2023-01-07 13:55:04,827 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:55:19,668 INFO Computing data fidelity for 114564 rotations and 2048 images at 95%
2023-01-07 13:55:20,517 DEBUG Corresponding type is already real float64.
2023-01-07 13:55:20,517 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:55:34,886 INFO Computing data fidelity for 114564 rotations and 2048 images at 96%
2023-01-07 13:55:35,794 DEBUG Corresponding type is already real float64.
2023-01-07 13:55:35,794 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:55:50,898 INFO Computing data fidelity for 114564 rotations and 2048 images at 97%
2023-01-07 13:55:51,716 DEBUG Corresponding type is already real float64.
2023-01-07 13:55:51,716 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:56:06,037 INFO Computing data fidelity for 114564 rotations and 2048 images at 98%
2023-01-07 13:56:06,823 DEBUG Corresponding type is already real float64.
2023-01-07 13:56:06,824 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:56:21,866 INFO Computing data fidelity for 114564 rotations and 2048 images at 99%
2023-01-07 13:56:22,367 DEBUG Corresponding type is already real float64.
2023-01-07 13:56:22,367 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:56:34,661 INFO Computing data fidelity for 114564 rotations and 2048 images at 100%
2023-01-07 13:56:38,106 INFO Do lambda update step
2023-01-07 13:57:04,465 INFO Do rots update step
2023-01-07 13:57:05,336 INFO Projecting 2048 vectors onto 114564-simplex at 2%
2023-01-07 13:57:06,038 INFO Projecting 2048 vectors onto 114564-simplex at 4%
2023-01-07 13:57:06,739 INFO Projecting 2048 vectors onto 114564-simplex at 7%
2023-01-07 13:57:07,430 INFO Projecting 2048 vectors onto 114564-simplex at 9%
2023-01-07 13:57:08,114 INFO Projecting 2048 vectors onto 114564-simplex at 12%
2023-01-07 13:57:08,785 INFO Projecting 2048 vectors onto 114564-simplex at 14%
2023-01-07 13:57:09,461 INFO Projecting 2048 vectors onto 114564-simplex at 17%
2023-01-07 13:57:10,159 INFO Projecting 2048 vectors onto 114564-simplex at 19%
2023-01-07 13:57:10,812 INFO Projecting 2048 vectors onto 114564-simplex at 21%
2023-01-07 13:57:11,453 INFO Projecting 2048 vectors onto 114564-simplex at 24%
2023-01-07 13:57:12,283 INFO Projecting 2048 vectors onto 114564-simplex at 26%
2023-01-07 13:57:12,906 INFO Projecting 2048 vectors onto 114564-simplex at 29%
2023-01-07 13:57:13,533 INFO Projecting 2048 vectors onto 114564-simplex at 31%
2023-01-07 13:57:14,157 INFO Projecting 2048 vectors onto 114564-simplex at 34%
2023-01-07 13:57:14,789 INFO Projecting 2048 vectors onto 114564-simplex at 36%
2023-01-07 13:57:15,416 INFO Projecting 2048 vectors onto 114564-simplex at 39%
2023-01-07 13:57:16,053 INFO Projecting 2048 vectors onto 114564-simplex at 41%
2023-01-07 13:57:16,677 INFO Projecting 2048 vectors onto 114564-simplex at 43%
2023-01-07 13:57:17,313 INFO Projecting 2048 vectors onto 114564-simplex at 46%
2023-01-07 13:57:17,943 INFO Projecting 2048 vectors onto 114564-simplex at 48%
2023-01-07 13:57:18,871 INFO Projecting 2048 vectors onto 114564-simplex at 51%
2023-01-07 13:57:19,582 INFO Projecting 2048 vectors onto 114564-simplex at 53%
2023-01-07 13:57:20,280 INFO Projecting 2048 vectors onto 114564-simplex at 56%
2023-01-07 13:57:20,988 INFO Projecting 2048 vectors onto 114564-simplex at 58%
2023-01-07 13:57:21,696 INFO Projecting 2048 vectors onto 114564-simplex at 61%
2023-01-07 13:57:22,406 INFO Projecting 2048 vectors onto 114564-simplex at 63%
2023-01-07 13:57:23,116 INFO Projecting 2048 vectors onto 114564-simplex at 65%
2023-01-07 13:57:23,791 INFO Projecting 2048 vectors onto 114564-simplex at 68%
2023-01-07 13:57:24,497 INFO Projecting 2048 vectors onto 114564-simplex at 70%
2023-01-07 13:57:25,198 INFO Projecting 2048 vectors onto 114564-simplex at 73%
2023-01-07 13:57:26,105 INFO Projecting 2048 vectors onto 114564-simplex at 75%
2023-01-07 13:57:26,806 INFO Projecting 2048 vectors onto 114564-simplex at 78%
2023-01-07 13:57:27,502 INFO Projecting 2048 vectors onto 114564-simplex at 80%
2023-01-07 13:57:28,145 INFO Projecting 2048 vectors onto 114564-simplex at 83%
2023-01-07 13:57:28,798 INFO Projecting 2048 vectors onto 114564-simplex at 85%
2023-01-07 13:57:29,430 INFO Projecting 2048 vectors onto 114564-simplex at 87%
2023-01-07 13:57:30,066 INFO Projecting 2048 vectors onto 114564-simplex at 90%
2023-01-07 13:57:30,750 INFO Projecting 2048 vectors onto 114564-simplex at 92%
2023-01-07 13:57:31,450 INFO Projecting 2048 vectors onto 114564-simplex at 95%
2023-01-07 13:57:32,163 INFO Projecting 2048 vectors onto 114564-simplex at 97%
2023-01-07 13:57:32,839 INFO Projecting 2048 vectors onto 114564-simplex at 100%
2023-01-07 13:57:34,415 INFO Computing 50 means of 486 points in at most 20 steps...
2023-01-07 13:57:34,482 INFO Computing 2048 means at 2%
2023-01-07 13:57:34,567 INFO Computing 50 means of 453 points in at most 20 steps...
2023-01-07 13:57:34,631 INFO Computing 2048 means at 4%
2023-01-07 13:57:34,716 INFO Computing 50 means of 484 points in at most 20 steps...
2023-01-07 13:57:34,775 INFO Computing 2048 means at 7%
2023-01-07 13:57:34,854 INFO Computing 50 means of 472 points in at most 20 steps...
2023-01-07 13:57:34,907 INFO Computing 2048 means at 9%
2023-01-07 13:57:34,983 INFO Computing 50 means of 487 points in at most 20 steps...
2023-01-07 13:57:35,042 INFO Computing 2048 means at 12%
2023-01-07 13:57:35,120 INFO Computing 50 means of 506 points in at most 20 steps...
2023-01-07 13:57:35,179 INFO Computing 2048 means at 14%
2023-01-07 13:57:35,260 INFO Computing 50 means of 482 points in at most 20 steps...
2023-01-07 13:57:35,318 INFO Computing 2048 means at 17%
2023-01-07 13:57:35,399 INFO Computing 50 means of 489 points in at most 20 steps...
2023-01-07 13:57:35,459 INFO Computing 2048 means at 19%
2023-01-07 13:57:35,541 INFO Computing 50 means of 483 points in at most 20 steps...
2023-01-07 13:57:35,604 INFO Computing 2048 means at 21%
2023-01-07 13:57:35,691 INFO Computing 50 means of 474 points in at most 20 steps...
2023-01-07 13:57:35,748 INFO Computing 2048 means at 24%
2023-01-07 13:57:35,840 INFO Computing 50 means of 497 points in at most 20 steps...
2023-01-07 13:57:35,902 INFO Computing 2048 means at 26%
2023-01-07 13:57:35,985 INFO Computing 50 means of 479 points in at most 20 steps...
2023-01-07 13:57:36,041 INFO Computing 2048 means at 29%
2023-01-07 13:57:36,119 INFO Computing 50 means of 495 points in at most 20 steps...
2023-01-07 13:57:36,172 INFO Computing 2048 means at 31%
2023-01-07 13:57:36,255 INFO Computing 50 means of 496 points in at most 20 steps...
2023-01-07 13:57:36,316 INFO Computing 2048 means at 34%
2023-01-07 13:57:36,401 INFO Computing 50 means of 461 points in at most 20 steps...
2023-01-07 13:57:36,458 INFO Computing 2048 means at 36%
2023-01-07 13:57:36,538 INFO Computing 50 means of 479 points in at most 20 steps...
2023-01-07 13:57:36,593 INFO Computing 2048 means at 39%
2023-01-07 13:57:36,676 INFO Computing 50 means of 476 points in at most 20 steps...
2023-01-07 13:57:36,738 INFO Computing 2048 means at 41%
2023-01-07 13:57:36,818 INFO Computing 50 means of 471 points in at most 20 steps...
2023-01-07 13:57:36,870 INFO Computing 2048 means at 43%
2023-01-07 13:57:36,948 INFO Computing 50 means of 489 points in at most 20 steps...
2023-01-07 13:57:37,001 INFO Computing 2048 means at 46%
2023-01-07 13:57:37,086 INFO Computing 50 means of 485 points in at most 20 steps...
2023-01-07 13:57:37,146 INFO Computing 2048 means at 48%
2023-01-07 13:57:37,239 INFO Computing 50 means of 477 points in at most 20 steps...
2023-01-07 13:57:37,300 INFO Computing 2048 means at 51%
2023-01-07 13:57:37,383 INFO Computing 50 means of 515 points in at most 20 steps...
2023-01-07 13:57:37,451 INFO Computing 2048 means at 53%
2023-01-07 13:57:37,534 INFO Computing 50 means of 471 points in at most 20 steps...
2023-01-07 13:57:37,593 INFO Computing 2048 means at 56%
2023-01-07 13:57:37,676 INFO Computing 50 means of 471 points in at most 20 steps...
2023-01-07 13:57:37,733 INFO Computing 2048 means at 58%
2023-01-07 13:57:37,816 INFO Computing 50 means of 480 points in at most 20 steps...
2023-01-07 13:57:37,876 INFO Computing 2048 means at 61%
2023-01-07 13:57:37,959 INFO Computing 50 means of 483 points in at most 20 steps...
2023-01-07 13:57:38,020 INFO Computing 2048 means at 63%
2023-01-07 13:57:38,103 INFO Computing 50 means of 496 points in at most 20 steps...
2023-01-07 13:57:38,164 INFO Computing 2048 means at 65%
2023-01-07 13:57:38,243 INFO Computing 50 means of 486 points in at most 20 steps...
2023-01-07 13:57:38,295 INFO Computing 2048 means at 68%
2023-01-07 13:57:38,373 INFO Computing 50 means of 475 points in at most 20 steps...
2023-01-07 13:57:38,425 INFO Computing 2048 means at 70%
2023-01-07 13:57:38,504 INFO Computing 50 means of 484 points in at most 20 steps...
2023-01-07 13:57:38,562 INFO Computing 2048 means at 73%
2023-01-07 13:57:38,650 INFO Computing 50 means of 486 points in at most 20 steps...
2023-01-07 13:57:38,706 INFO Computing 2048 means at 75%
2023-01-07 13:57:38,791 INFO Computing 50 means of 473 points in at most 20 steps...
2023-01-07 13:57:38,854 INFO Computing 2048 means at 78%
2023-01-07 13:57:38,938 INFO Computing 50 means of 489 points in at most 20 steps...
2023-01-07 13:57:38,995 INFO Computing 2048 means at 80%
2023-01-07 13:57:39,073 INFO Computing 50 means of 487 points in at most 20 steps...
2023-01-07 13:57:39,126 INFO Computing 2048 means at 83%
2023-01-07 13:57:39,203 INFO Computing 50 means of 520 points in at most 20 steps...
2023-01-07 13:57:39,263 INFO Computing 2048 means at 85%
2023-01-07 13:57:39,346 INFO Computing 50 means of 485 points in at most 20 steps...
2023-01-07 13:57:39,410 INFO Computing 2048 means at 87%
2023-01-07 13:57:39,494 INFO Computing 50 means of 499 points in at most 20 steps...
2023-01-07 13:57:39,553 INFO Computing 2048 means at 90%
2023-01-07 13:57:39,636 INFO Computing 50 means of 477 points in at most 20 steps...
2023-01-07 13:57:39,697 INFO Computing 2048 means at 92%
2023-01-07 13:57:39,780 INFO Computing 50 means of 483 points in at most 20 steps...
2023-01-07 13:57:39,842 INFO Computing 2048 means at 95%
2023-01-07 13:57:39,932 INFO Computing 50 means of 488 points in at most 20 steps...
2023-01-07 13:57:39,997 INFO Computing 2048 means at 97%
2023-01-07 13:57:40,082 INFO Computing 48 means of 467 points in at most 20 steps...
2023-01-07 13:57:40,138 INFO Computing 2048 means at 100%
2023-01-07 13:57:45,035 INFO Do vol update step
2023-01-07 13:57:45,037 INFO Compute adjoint forward mapping on the images
2023-01-07 13:57:46,847 DEBUG Corresponding type is already complex complex128.
2023-01-07 13:57:49,296 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2023-01-07 13:57:49,316 INFO Computing adjoint forward mappings from 2048 rotations at 50%
2023-01-07 13:57:50,914 DEBUG Corresponding type is already complex complex128.
2023-01-07 13:57:53,494 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2023-01-07 13:57:53,507 INFO Computing adjoint forward mappings from 2048 rotations at 100%
2023-01-07 13:57:54,452 DEBUG Corresponding type is already real float64.
2023-01-07 13:57:54,453 DEBUG anufft passed real_type for signal, converting
2023-01-07 13:58:01,047 INFO Computing kernel from 2048 rotations at 50%
2023-01-07 13:58:01,970 DEBUG Corresponding type is already real float64.
2023-01-07 13:58:01,970 DEBUG anufft passed real_type for signal, converting
2023-01-07 13:58:08,571 INFO Computing kernel from 2048 rotations at 100%
2023-01-07 13:58:08,573 INFO Computing non-centered Fourier Transform
2023-01-07 13:58:08,762 INFO Add ramp filter regularisation
2023-01-07 13:58:13,809 INFO Update data_discrepancies
2023-01-07 13:58:13,811 INFO Computing \|Ag.u - f_i\|^2
2023-01-07 13:58:14,743 DEBUG Corresponding type is already real float64.
2023-01-07 13:58:14,743 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:58:29,252 INFO Computing data fidelity for 114564 rotations and 2048 images at 0%
2023-01-07 13:58:30,054 DEBUG Corresponding type is already real float64.
2023-01-07 13:58:30,054 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:58:45,043 INFO Computing data fidelity for 114564 rotations and 2048 images at 1%
2023-01-07 13:58:45,870 DEBUG Corresponding type is already real float64.
2023-01-07 13:58:45,871 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:59:01,334 INFO Computing data fidelity for 114564 rotations and 2048 images at 2%
2023-01-07 13:59:02,185 DEBUG Corresponding type is already real float64.
2023-01-07 13:59:02,185 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:59:17,579 INFO Computing data fidelity for 114564 rotations and 2048 images at 3%
2023-01-07 13:59:18,377 DEBUG Corresponding type is already real float64.
2023-01-07 13:59:18,378 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:59:33,830 INFO Computing data fidelity for 114564 rotations and 2048 images at 4%
2023-01-07 13:59:34,708 DEBUG Corresponding type is already real float64.
2023-01-07 13:59:34,709 DEBUG nufft passed real_type for signal, converting
2023-01-07 13:59:49,959 INFO Computing data fidelity for 114564 rotations and 2048 images at 5%
2023-01-07 13:59:50,804 DEBUG Corresponding type is already real float64.
2023-01-07 13:59:50,804 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:00:05,729 INFO Computing data fidelity for 114564 rotations and 2048 images at 6%
2023-01-07 14:00:06,539 DEBUG Corresponding type is already real float64.
2023-01-07 14:00:06,539 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:00:20,799 INFO Computing data fidelity for 114564 rotations and 2048 images at 7%
2023-01-07 14:00:21,606 DEBUG Corresponding type is already real float64.
2023-01-07 14:00:21,607 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:00:36,585 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2023-01-07 14:00:37,440 DEBUG Corresponding type is already real float64.
2023-01-07 14:00:37,440 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:00:52,761 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2023-01-07 14:00:53,603 DEBUG Corresponding type is already real float64.
2023-01-07 14:00:53,603 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:01:08,329 INFO Computing data fidelity for 114564 rotations and 2048 images at 9%
2023-01-07 14:01:09,113 DEBUG Corresponding type is already real float64.
2023-01-07 14:01:09,113 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:01:24,185 INFO Computing data fidelity for 114564 rotations and 2048 images at 10%
2023-01-07 14:01:25,022 DEBUG Corresponding type is already real float64.
2023-01-07 14:01:25,022 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:01:40,121 INFO Computing data fidelity for 114564 rotations and 2048 images at 11%
2023-01-07 14:01:40,923 DEBUG Corresponding type is already real float64.
2023-01-07 14:01:40,923 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:01:55,571 INFO Computing data fidelity for 114564 rotations and 2048 images at 12%
2023-01-07 14:01:56,350 DEBUG Corresponding type is already real float64.
2023-01-07 14:01:56,350 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:02:10,720 INFO Computing data fidelity for 114564 rotations and 2048 images at 13%
2023-01-07 14:02:11,602 DEBUG Corresponding type is already real float64.
2023-01-07 14:02:11,602 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:02:27,089 INFO Computing data fidelity for 114564 rotations and 2048 images at 14%
2023-01-07 14:02:27,895 DEBUG Corresponding type is already real float64.
2023-01-07 14:02:27,895 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:02:42,883 INFO Computing data fidelity for 114564 rotations and 2048 images at 15%
2023-01-07 14:02:43,783 DEBUG Corresponding type is already real float64.
2023-01-07 14:02:43,784 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:02:58,772 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2023-01-07 14:02:59,573 DEBUG Corresponding type is already real float64.
2023-01-07 14:02:59,573 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:03:14,471 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2023-01-07 14:03:15,289 DEBUG Corresponding type is already real float64.
2023-01-07 14:03:15,289 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:03:29,825 INFO Computing data fidelity for 114564 rotations and 2048 images at 17%
2023-01-07 14:03:30,645 DEBUG Corresponding type is already real float64.
2023-01-07 14:03:30,645 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:03:44,493 INFO Computing data fidelity for 114564 rotations and 2048 images at 18%
2023-01-07 14:03:45,276 DEBUG Corresponding type is already real float64.
2023-01-07 14:03:45,276 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:03:59,529 INFO Computing data fidelity for 114564 rotations and 2048 images at 19%
2023-01-07 14:04:00,289 DEBUG Corresponding type is already real float64.
2023-01-07 14:04:00,289 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:04:13,798 INFO Computing data fidelity for 114564 rotations and 2048 images at 20%
2023-01-07 14:04:14,543 DEBUG Corresponding type is already real float64.
2023-01-07 14:04:14,543 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:04:28,027 INFO Computing data fidelity for 114564 rotations and 2048 images at 21%
2023-01-07 14:04:28,786 DEBUG Corresponding type is already real float64.
2023-01-07 14:04:28,786 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:04:42,221 INFO Computing data fidelity for 114564 rotations and 2048 images at 22%
2023-01-07 14:04:42,962 DEBUG Corresponding type is already real float64.
2023-01-07 14:04:42,962 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:04:56,450 INFO Computing data fidelity for 114564 rotations and 2048 images at 23%
2023-01-07 14:04:57,193 DEBUG Corresponding type is already real float64.
2023-01-07 14:04:57,193 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:05:10,704 INFO Computing data fidelity for 114564 rotations and 2048 images at 24%
2023-01-07 14:05:11,452 DEBUG Corresponding type is already real float64.
2023-01-07 14:05:11,452 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:05:24,943 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2023-01-07 14:05:25,683 DEBUG Corresponding type is already real float64.
2023-01-07 14:05:25,684 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:05:39,149 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2023-01-07 14:05:39,901 DEBUG Corresponding type is already real float64.
2023-01-07 14:05:39,902 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:05:53,898 INFO Computing data fidelity for 114564 rotations and 2048 images at 26%
2023-01-07 14:05:54,666 DEBUG Corresponding type is already real float64.
2023-01-07 14:05:54,666 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:06:08,197 INFO Computing data fidelity for 114564 rotations and 2048 images at 27%
2023-01-07 14:06:08,967 DEBUG Corresponding type is already real float64.
2023-01-07 14:06:08,967 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:06:22,464 INFO Computing data fidelity for 114564 rotations and 2048 images at 28%
2023-01-07 14:06:23,220 DEBUG Corresponding type is already real float64.
2023-01-07 14:06:23,220 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:06:36,742 INFO Computing data fidelity for 114564 rotations and 2048 images at 29%
2023-01-07 14:06:37,498 DEBUG Corresponding type is already real float64.
2023-01-07 14:06:37,498 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:06:51,117 INFO Computing data fidelity for 114564 rotations and 2048 images at 30%
2023-01-07 14:06:51,882 DEBUG Corresponding type is already real float64.
2023-01-07 14:06:51,882 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:07:05,793 INFO Computing data fidelity for 114564 rotations and 2048 images at 31%
2023-01-07 14:07:06,570 DEBUG Corresponding type is already real float64.
2023-01-07 14:07:06,570 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:07:20,089 INFO Computing data fidelity for 114564 rotations and 2048 images at 32%
2023-01-07 14:07:20,841 DEBUG Corresponding type is already real float64.
2023-01-07 14:07:20,841 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:07:34,336 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2023-01-07 14:07:35,096 DEBUG Corresponding type is already real float64.
2023-01-07 14:07:35,096 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:07:48,658 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2023-01-07 14:07:49,416 DEBUG Corresponding type is already real float64.
2023-01-07 14:07:49,416 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:08:02,954 INFO Computing data fidelity for 114564 rotations and 2048 images at 34%
2023-01-07 14:08:03,714 DEBUG Corresponding type is already real float64.
2023-01-07 14:08:03,714 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:08:17,262 INFO Computing data fidelity for 114564 rotations and 2048 images at 35%
2023-01-07 14:08:18,026 DEBUG Corresponding type is already real float64.
2023-01-07 14:08:18,026 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:08:31,553 INFO Computing data fidelity for 114564 rotations and 2048 images at 36%
2023-01-07 14:08:32,316 DEBUG Corresponding type is already real float64.
2023-01-07 14:08:32,316 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:08:45,893 INFO Computing data fidelity for 114564 rotations and 2048 images at 37%
2023-01-07 14:08:46,645 DEBUG Corresponding type is already real float64.
2023-01-07 14:08:46,646 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:09:00,256 INFO Computing data fidelity for 114564 rotations and 2048 images at 38%
2023-01-07 14:09:01,074 DEBUG Corresponding type is already real float64.
2023-01-07 14:09:01,075 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:09:15,700 INFO Computing data fidelity for 114564 rotations and 2048 images at 39%
2023-01-07 14:09:16,468 DEBUG Corresponding type is already real float64.
2023-01-07 14:09:16,469 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:09:30,219 INFO Computing data fidelity for 114564 rotations and 2048 images at 40%
2023-01-07 14:09:30,977 DEBUG Corresponding type is already real float64.
2023-01-07 14:09:30,977 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:09:44,513 INFO Computing data fidelity for 114564 rotations and 2048 images at 41%
2023-01-07 14:09:45,279 DEBUG Corresponding type is already real float64.
2023-01-07 14:09:45,279 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:09:58,713 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2023-01-07 14:09:59,477 DEBUG Corresponding type is already real float64.
2023-01-07 14:09:59,477 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:10:12,965 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2023-01-07 14:10:13,723 DEBUG Corresponding type is already real float64.
2023-01-07 14:10:13,723 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:10:27,162 INFO Computing data fidelity for 114564 rotations and 2048 images at 43%
2023-01-07 14:10:27,916 DEBUG Corresponding type is already real float64.
2023-01-07 14:10:27,916 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:10:41,419 INFO Computing data fidelity for 114564 rotations and 2048 images at 44%
2023-01-07 14:10:42,169 DEBUG Corresponding type is already real float64.
2023-01-07 14:10:42,169 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:10:56,086 INFO Computing data fidelity for 114564 rotations and 2048 images at 45%
2023-01-07 14:10:56,847 DEBUG Corresponding type is already real float64.
2023-01-07 14:10:56,847 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:11:10,370 INFO Computing data fidelity for 114564 rotations and 2048 images at 46%
2023-01-07 14:11:11,138 DEBUG Corresponding type is already real float64.
2023-01-07 14:11:11,139 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:11:24,557 INFO Computing data fidelity for 114564 rotations and 2048 images at 47%
2023-01-07 14:11:25,324 DEBUG Corresponding type is already real float64.
2023-01-07 14:11:25,324 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:11:39,523 INFO Computing data fidelity for 114564 rotations and 2048 images at 48%
2023-01-07 14:11:40,358 DEBUG Corresponding type is already real float64.
2023-01-07 14:11:40,358 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:11:54,001 INFO Computing data fidelity for 114564 rotations and 2048 images at 49%
2023-01-07 14:11:54,760 DEBUG Corresponding type is already real float64.
2023-01-07 14:11:54,760 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:12:08,284 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2023-01-07 14:12:09,051 DEBUG Corresponding type is already real float64.
2023-01-07 14:12:09,051 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:12:22,556 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2023-01-07 14:12:23,313 DEBUG Corresponding type is already real float64.
2023-01-07 14:12:23,313 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:12:36,792 INFO Computing data fidelity for 114564 rotations and 2048 images at 51%
2023-01-07 14:12:37,554 DEBUG Corresponding type is already real float64.
2023-01-07 14:12:37,554 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:12:51,104 INFO Computing data fidelity for 114564 rotations and 2048 images at 52%
2023-01-07 14:12:51,860 DEBUG Corresponding type is already real float64.
2023-01-07 14:12:51,860 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:13:05,371 INFO Computing data fidelity for 114564 rotations and 2048 images at 53%
2023-01-07 14:13:06,129 DEBUG Corresponding type is already real float64.
2023-01-07 14:13:06,129 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:13:19,568 INFO Computing data fidelity for 114564 rotations and 2048 images at 54%
2023-01-07 14:13:20,317 DEBUG Corresponding type is already real float64.
2023-01-07 14:13:20,318 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:13:33,735 INFO Computing data fidelity for 114564 rotations and 2048 images at 55%
2023-01-07 14:13:34,488 DEBUG Corresponding type is already real float64.
2023-01-07 14:13:34,488 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:13:47,990 INFO Computing data fidelity for 114564 rotations and 2048 images at 56%
2023-01-07 14:13:48,752 DEBUG Corresponding type is already real float64.
2023-01-07 14:13:48,753 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:14:02,217 INFO Computing data fidelity for 114564 rotations and 2048 images at 57%
2023-01-07 14:14:02,978 DEBUG Corresponding type is already real float64.
2023-01-07 14:14:02,978 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:14:16,574 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2023-01-07 14:14:17,329 DEBUG Corresponding type is already real float64.
2023-01-07 14:14:17,329 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:14:30,552 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2023-01-07 14:14:31,303 DEBUG Corresponding type is already real float64.
2023-01-07 14:14:31,303 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:14:44,464 INFO Computing data fidelity for 114564 rotations and 2048 images at 59%
2023-01-07 14:14:45,213 DEBUG Corresponding type is already real float64.
2023-01-07 14:14:45,213 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:14:58,383 INFO Computing data fidelity for 114564 rotations and 2048 images at 60%
2023-01-07 14:14:59,130 DEBUG Corresponding type is already real float64.
2023-01-07 14:14:59,130 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:15:12,301 INFO Computing data fidelity for 114564 rotations and 2048 images at 61%
2023-01-07 14:15:13,050 DEBUG Corresponding type is already real float64.
2023-01-07 14:15:13,050 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:15:26,221 INFO Computing data fidelity for 114564 rotations and 2048 images at 62%
2023-01-07 14:15:26,967 DEBUG Corresponding type is already real float64.
2023-01-07 14:15:26,967 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:15:40,311 INFO Computing data fidelity for 114564 rotations and 2048 images at 63%
2023-01-07 14:15:41,082 DEBUG Corresponding type is already real float64.
2023-01-07 14:15:41,082 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:15:55,162 INFO Computing data fidelity for 114564 rotations and 2048 images at 64%
2023-01-07 14:15:55,921 DEBUG Corresponding type is already real float64.
2023-01-07 14:15:55,921 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:16:09,154 INFO Computing data fidelity for 114564 rotations and 2048 images at 65%
2023-01-07 14:16:09,903 DEBUG Corresponding type is already real float64.
2023-01-07 14:16:09,903 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:16:23,070 INFO Computing data fidelity for 114564 rotations and 2048 images at 66%
2023-01-07 14:16:23,820 DEBUG Corresponding type is already real float64.
2023-01-07 14:16:23,820 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:16:37,067 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2023-01-07 14:16:37,824 DEBUG Corresponding type is already real float64.
2023-01-07 14:16:37,824 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:16:51,131 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2023-01-07 14:16:51,893 DEBUG Corresponding type is already real float64.
2023-01-07 14:16:51,894 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:17:05,145 INFO Computing data fidelity for 114564 rotations and 2048 images at 68%
2023-01-07 14:17:05,897 DEBUG Corresponding type is already real float64.
2023-01-07 14:17:05,897 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:17:21,740 INFO Computing data fidelity for 114564 rotations and 2048 images at 69%
2023-01-07 14:17:22,590 DEBUG Corresponding type is already real float64.
2023-01-07 14:17:22,590 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:17:37,199 INFO Computing data fidelity for 114564 rotations and 2048 images at 70%
2023-01-07 14:17:37,962 DEBUG Corresponding type is already real float64.
2023-01-07 14:17:37,962 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:17:51,628 INFO Computing data fidelity for 114564 rotations and 2048 images at 71%
2023-01-07 14:17:52,389 DEBUG Corresponding type is already real float64.
2023-01-07 14:17:52,389 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:18:06,067 INFO Computing data fidelity for 114564 rotations and 2048 images at 72%
2023-01-07 14:18:06,842 DEBUG Corresponding type is already real float64.
2023-01-07 14:18:06,842 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:18:20,435 INFO Computing data fidelity for 114564 rotations and 2048 images at 73%
2023-01-07 14:18:21,203 DEBUG Corresponding type is already real float64.
2023-01-07 14:18:21,203 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:18:34,807 INFO Computing data fidelity for 114564 rotations and 2048 images at 74%
2023-01-07 14:18:35,566 DEBUG Corresponding type is already real float64.
2023-01-07 14:18:35,566 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:18:49,195 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2023-01-07 14:18:49,954 DEBUG Corresponding type is already real float64.
2023-01-07 14:18:49,954 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:19:03,592 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2023-01-07 14:19:04,370 DEBUG Corresponding type is already real float64.
2023-01-07 14:19:04,370 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:19:17,899 INFO Computing data fidelity for 114564 rotations and 2048 images at 76%
2023-01-07 14:19:18,662 DEBUG Corresponding type is already real float64.
2023-01-07 14:19:18,662 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:19:32,277 INFO Computing data fidelity for 114564 rotations and 2048 images at 77%
2023-01-07 14:19:33,048 DEBUG Corresponding type is already real float64.
2023-01-07 14:19:33,048 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:19:46,682 INFO Computing data fidelity for 114564 rotations and 2048 images at 78%
2023-01-07 14:19:47,451 DEBUG Corresponding type is already real float64.
2023-01-07 14:19:47,452 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:20:01,029 INFO Computing data fidelity for 114564 rotations and 2048 images at 79%
2023-01-07 14:20:01,788 DEBUG Corresponding type is already real float64.
2023-01-07 14:20:01,788 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:20:15,414 INFO Computing data fidelity for 114564 rotations and 2048 images at 80%
2023-01-07 14:20:16,193 DEBUG Corresponding type is already real float64.
2023-01-07 14:20:16,193 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:20:30,647 INFO Computing data fidelity for 114564 rotations and 2048 images at 81%
2023-01-07 14:20:31,422 DEBUG Corresponding type is already real float64.
2023-01-07 14:20:31,423 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:20:44,898 INFO Computing data fidelity for 114564 rotations and 2048 images at 82%
2023-01-07 14:20:45,662 DEBUG Corresponding type is already real float64.
2023-01-07 14:20:45,662 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:20:59,627 INFO Computing data fidelity for 114564 rotations and 2048 images at 83%
2023-01-07 14:21:00,375 DEBUG Corresponding type is already real float64.
2023-01-07 14:21:00,375 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:21:13,913 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2023-01-07 14:21:14,666 DEBUG Corresponding type is already real float64.
2023-01-07 14:21:14,666 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:21:28,181 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2023-01-07 14:21:28,935 DEBUG Corresponding type is already real float64.
2023-01-07 14:21:28,935 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:21:42,408 INFO Computing data fidelity for 114564 rotations and 2048 images at 85%
2023-01-07 14:21:43,159 DEBUG Corresponding type is already real float64.
2023-01-07 14:21:43,159 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:21:56,643 INFO Computing data fidelity for 114564 rotations and 2048 images at 86%
2023-01-07 14:21:57,405 DEBUG Corresponding type is already real float64.
2023-01-07 14:21:57,405 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:22:10,879 INFO Computing data fidelity for 114564 rotations and 2048 images at 87%
2023-01-07 14:22:11,637 DEBUG Corresponding type is already real float64.
2023-01-07 14:22:11,637 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:22:25,144 INFO Computing data fidelity for 114564 rotations and 2048 images at 88%
2023-01-07 14:22:25,897 DEBUG Corresponding type is already real float64.
2023-01-07 14:22:25,897 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:22:39,850 INFO Computing data fidelity for 114564 rotations and 2048 images at 89%
2023-01-07 14:22:40,619 DEBUG Corresponding type is already real float64.
2023-01-07 14:22:40,620 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:22:54,213 INFO Computing data fidelity for 114564 rotations and 2048 images at 90%
2023-01-07 14:22:54,971 DEBUG Corresponding type is already real float64.
2023-01-07 14:22:54,971 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:23:08,440 INFO Computing data fidelity for 114564 rotations and 2048 images at 91%
2023-01-07 14:23:09,199 DEBUG Corresponding type is already real float64.
2023-01-07 14:23:09,199 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:23:22,688 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2023-01-07 14:23:23,448 DEBUG Corresponding type is already real float64.
2023-01-07 14:23:23,448 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:23:36,946 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2023-01-07 14:23:37,704 DEBUG Corresponding type is already real float64.
2023-01-07 14:23:37,704 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:23:51,242 INFO Computing data fidelity for 114564 rotations and 2048 images at 93%
2023-01-07 14:23:52,011 DEBUG Corresponding type is already real float64.
2023-01-07 14:23:52,011 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:24:05,602 INFO Computing data fidelity for 114564 rotations and 2048 images at 94%
2023-01-07 14:24:06,359 DEBUG Corresponding type is already real float64.
2023-01-07 14:24:06,359 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:24:19,834 INFO Computing data fidelity for 114564 rotations and 2048 images at 95%
2023-01-07 14:24:20,594 DEBUG Corresponding type is already real float64.
2023-01-07 14:24:20,594 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:24:34,131 INFO Computing data fidelity for 114564 rotations and 2048 images at 96%
2023-01-07 14:24:34,888 DEBUG Corresponding type is already real float64.
2023-01-07 14:24:34,888 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:24:48,479 INFO Computing data fidelity for 114564 rotations and 2048 images at 97%
2023-01-07 14:24:49,311 DEBUG Corresponding type is already real float64.
2023-01-07 14:24:49,311 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:25:03,790 INFO Computing data fidelity for 114564 rotations and 2048 images at 98%
2023-01-07 14:25:04,614 DEBUG Corresponding type is already real float64.
2023-01-07 14:25:04,615 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:25:19,443 INFO Computing data fidelity for 114564 rotations and 2048 images at 99%
2023-01-07 14:25:19,969 DEBUG Corresponding type is already real float64.
2023-01-07 14:25:19,969 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:25:32,066 INFO Computing data fidelity for 114564 rotations and 2048 images at 100%
2023-01-07 14:25:34,818 INFO Do lambda update step
2023-01-07 14:26:00,022 INFO Do rots update step
2023-01-07 14:26:00,920 INFO Projecting 2048 vectors onto 114564-simplex at 2%
2023-01-07 14:26:01,603 INFO Projecting 2048 vectors onto 114564-simplex at 4%
2023-01-07 14:26:02,263 INFO Projecting 2048 vectors onto 114564-simplex at 7%
2023-01-07 14:26:02,945 INFO Projecting 2048 vectors onto 114564-simplex at 9%
2023-01-07 14:26:03,640 INFO Projecting 2048 vectors onto 114564-simplex at 12%
2023-01-07 14:26:04,311 INFO Projecting 2048 vectors onto 114564-simplex at 14%
2023-01-07 14:26:05,011 INFO Projecting 2048 vectors onto 114564-simplex at 17%
2023-01-07 14:26:05,698 INFO Projecting 2048 vectors onto 114564-simplex at 19%
2023-01-07 14:26:06,326 INFO Projecting 2048 vectors onto 114564-simplex at 21%
2023-01-07 14:26:07,005 INFO Projecting 2048 vectors onto 114564-simplex at 24%
2023-01-07 14:26:07,803 INFO Projecting 2048 vectors onto 114564-simplex at 26%
2023-01-07 14:26:08,487 INFO Projecting 2048 vectors onto 114564-simplex at 29%
2023-01-07 14:26:09,195 INFO Projecting 2048 vectors onto 114564-simplex at 31%
2023-01-07 14:26:09,824 INFO Projecting 2048 vectors onto 114564-simplex at 34%
2023-01-07 14:26:10,464 INFO Projecting 2048 vectors onto 114564-simplex at 36%
2023-01-07 14:26:11,151 INFO Projecting 2048 vectors onto 114564-simplex at 39%
2023-01-07 14:26:11,850 INFO Projecting 2048 vectors onto 114564-simplex at 41%
2023-01-07 14:26:12,551 INFO Projecting 2048 vectors onto 114564-simplex at 43%
2023-01-07 14:26:13,249 INFO Projecting 2048 vectors onto 114564-simplex at 46%
2023-01-07 14:26:13,948 INFO Projecting 2048 vectors onto 114564-simplex at 48%
2023-01-07 14:26:14,866 INFO Projecting 2048 vectors onto 114564-simplex at 51%
2023-01-07 14:26:15,576 INFO Projecting 2048 vectors onto 114564-simplex at 53%
2023-01-07 14:26:16,278 INFO Projecting 2048 vectors onto 114564-simplex at 56%
2023-01-07 14:26:16,975 INFO Projecting 2048 vectors onto 114564-simplex at 58%
2023-01-07 14:26:17,669 INFO Projecting 2048 vectors onto 114564-simplex at 61%
2023-01-07 14:26:18,353 INFO Projecting 2048 vectors onto 114564-simplex at 63%
2023-01-07 14:26:19,050 INFO Projecting 2048 vectors onto 114564-simplex at 65%
2023-01-07 14:26:19,742 INFO Projecting 2048 vectors onto 114564-simplex at 68%
2023-01-07 14:26:20,429 INFO Projecting 2048 vectors onto 114564-simplex at 70%
2023-01-07 14:26:21,135 INFO Projecting 2048 vectors onto 114564-simplex at 73%
2023-01-07 14:26:22,043 INFO Projecting 2048 vectors onto 114564-simplex at 75%
2023-01-07 14:26:22,718 INFO Projecting 2048 vectors onto 114564-simplex at 78%
2023-01-07 14:26:23,414 INFO Projecting 2048 vectors onto 114564-simplex at 80%
2023-01-07 14:26:24,090 INFO Projecting 2048 vectors onto 114564-simplex at 83%
2023-01-07 14:26:24,783 INFO Projecting 2048 vectors onto 114564-simplex at 85%
2023-01-07 14:26:25,465 INFO Projecting 2048 vectors onto 114564-simplex at 87%
2023-01-07 14:26:26,149 INFO Projecting 2048 vectors onto 114564-simplex at 90%
2023-01-07 14:26:26,857 INFO Projecting 2048 vectors onto 114564-simplex at 92%
2023-01-07 14:26:27,563 INFO Projecting 2048 vectors onto 114564-simplex at 95%
2023-01-07 14:26:28,268 INFO Projecting 2048 vectors onto 114564-simplex at 97%
2023-01-07 14:26:28,906 INFO Projecting 2048 vectors onto 114564-simplex at 100%
2023-01-07 14:26:30,470 INFO Computing 50 means of 483 points in at most 20 steps...
2023-01-07 14:26:30,542 INFO Computing 2048 means at 2%
2023-01-07 14:26:30,619 INFO Computing 50 means of 456 points in at most 20 steps...
2023-01-07 14:26:30,672 INFO Computing 2048 means at 4%
2023-01-07 14:26:30,748 INFO Computing 50 means of 485 points in at most 20 steps...
2023-01-07 14:26:30,813 INFO Computing 2048 means at 7%
2023-01-07 14:26:30,892 INFO Computing 50 means of 473 points in at most 20 steps...
2023-01-07 14:26:30,954 INFO Computing 2048 means at 9%
2023-01-07 14:26:31,036 INFO Computing 50 means of 491 points in at most 20 steps...
2023-01-07 14:26:31,106 INFO Computing 2048 means at 12%
2023-01-07 14:26:31,188 INFO Computing 50 means of 496 points in at most 20 steps...
2023-01-07 14:26:31,244 INFO Computing 2048 means at 14%
2023-01-07 14:26:31,323 INFO Computing 50 means of 485 points in at most 20 steps...
2023-01-07 14:26:31,376 INFO Computing 2048 means at 17%
2023-01-07 14:26:31,452 INFO Computing 50 means of 491 points in at most 20 steps...
2023-01-07 14:26:31,506 INFO Computing 2048 means at 19%
2023-01-07 14:26:31,585 INFO Computing 50 means of 476 points in at most 20 steps...
2023-01-07 14:26:31,646 INFO Computing 2048 means at 21%
2023-01-07 14:26:31,730 INFO Computing 50 means of 473 points in at most 20 steps...
2023-01-07 14:26:31,786 INFO Computing 2048 means at 24%
2023-01-07 14:26:31,872 INFO Computing 50 means of 490 points in at most 20 steps...
2023-01-07 14:26:31,941 INFO Computing 2048 means at 26%
2023-01-07 14:26:32,028 INFO Computing 50 means of 484 points in at most 20 steps...
2023-01-07 14:26:32,096 INFO Computing 2048 means at 29%
2023-01-07 14:26:32,185 INFO Computing 50 means of 493 points in at most 20 steps...
2023-01-07 14:26:32,253 INFO Computing 2048 means at 31%
2023-01-07 14:26:32,336 INFO Computing 50 means of 493 points in at most 20 steps...
2023-01-07 14:26:32,394 INFO Computing 2048 means at 34%
2023-01-07 14:26:32,473 INFO Computing 50 means of 469 points in at most 20 steps...
2023-01-07 14:26:32,526 INFO Computing 2048 means at 36%
2023-01-07 14:26:32,605 INFO Computing 50 means of 478 points in at most 20 steps...
2023-01-07 14:26:32,659 INFO Computing 2048 means at 39%
2023-01-07 14:26:32,741 INFO Computing 50 means of 466 points in at most 20 steps...
2023-01-07 14:26:32,796 INFO Computing 2048 means at 41%
2023-01-07 14:26:32,874 INFO Computing 50 means of 462 points in at most 20 steps...
2023-01-07 14:26:32,936 INFO Computing 2048 means at 43%
2023-01-07 14:26:33,027 INFO Computing 50 means of 487 points in at most 20 steps...
2023-01-07 14:26:33,090 INFO Computing 2048 means at 46%
2023-01-07 14:26:33,168 INFO Computing 50 means of 480 points in at most 20 steps...
2023-01-07 14:26:33,221 INFO Computing 2048 means at 48%
2023-01-07 14:26:33,306 INFO Computing 50 means of 478 points in at most 20 steps...
2023-01-07 14:26:33,356 INFO Computing 2048 means at 51%
2023-01-07 14:26:33,434 INFO Computing 50 means of 506 points in at most 20 steps...
2023-01-07 14:26:33,492 INFO Computing 2048 means at 53%
2023-01-07 14:26:33,568 INFO Computing 50 means of 476 points in at most 20 steps...
2023-01-07 14:26:33,620 INFO Computing 2048 means at 56%
2023-01-07 14:26:33,697 INFO Computing 50 means of 481 points in at most 20 steps...
2023-01-07 14:26:33,760 INFO Computing 2048 means at 58%
2023-01-07 14:26:33,842 INFO Computing 50 means of 473 points in at most 20 steps...
2023-01-07 14:26:33,906 INFO Computing 2048 means at 61%
2023-01-07 14:26:33,987 INFO Computing 50 means of 484 points in at most 20 steps...
2023-01-07 14:26:34,050 INFO Computing 2048 means at 63%
2023-01-07 14:26:34,133 INFO Computing 50 means of 491 points in at most 20 steps...
2023-01-07 14:26:34,190 INFO Computing 2048 means at 65%
2023-01-07 14:26:34,278 INFO Computing 50 means of 481 points in at most 20 steps...
2023-01-07 14:26:34,341 INFO Computing 2048 means at 68%
2023-01-07 14:26:34,424 INFO Computing 50 means of 475 points in at most 20 steps...
2023-01-07 14:26:34,485 INFO Computing 2048 means at 70%
2023-01-07 14:26:34,567 INFO Computing 50 means of 482 points in at most 20 steps...
2023-01-07 14:26:34,627 INFO Computing 2048 means at 73%
2023-01-07 14:26:34,716 INFO Computing 50 means of 489 points in at most 20 steps...
2023-01-07 14:26:34,772 INFO Computing 2048 means at 75%
2023-01-07 14:26:34,857 INFO Computing 50 means of 482 points in at most 20 steps...
2023-01-07 14:26:34,921 INFO Computing 2048 means at 78%
2023-01-07 14:26:35,003 INFO Computing 50 means of 490 points in at most 20 steps...
2023-01-07 14:26:35,065 INFO Computing 2048 means at 80%
2023-01-07 14:26:35,148 INFO Computing 50 means of 492 points in at most 20 steps...
2023-01-07 14:26:35,211 INFO Computing 2048 means at 83%
2023-01-07 14:26:35,294 INFO Computing 50 means of 521 points in at most 20 steps...
2023-01-07 14:26:35,355 INFO Computing 2048 means at 85%
2023-01-07 14:26:35,438 INFO Computing 50 means of 485 points in at most 20 steps...
2023-01-07 14:26:35,499 INFO Computing 2048 means at 87%
2023-01-07 14:26:35,581 INFO Computing 50 means of 504 points in at most 20 steps...
2023-01-07 14:26:35,644 INFO Computing 2048 means at 90%
2023-01-07 14:26:35,724 INFO Computing 50 means of 484 points in at most 20 steps...
2023-01-07 14:26:35,782 INFO Computing 2048 means at 92%
2023-01-07 14:26:35,868 INFO Computing 50 means of 487 points in at most 20 steps...
2023-01-07 14:26:35,928 INFO Computing 2048 means at 95%
2023-01-07 14:26:36,006 INFO Computing 50 means of 488 points in at most 20 steps...
2023-01-07 14:26:36,059 INFO Computing 2048 means at 97%
2023-01-07 14:26:36,135 INFO Computing 48 means of 473 points in at most 20 steps...
2023-01-07 14:26:36,186 INFO Computing 2048 means at 100%
2023-01-07 14:26:41,360 INFO Do vol update step
2023-01-07 14:26:41,361 INFO Compute adjoint forward mapping on the images
2023-01-07 14:26:43,255 DEBUG Corresponding type is already complex complex128.
2023-01-07 14:26:45,857 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2023-01-07 14:26:45,874 INFO Computing adjoint forward mappings from 2048 rotations at 50%
2023-01-07 14:26:47,530 DEBUG Corresponding type is already complex complex128.
2023-01-07 14:26:50,146 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2023-01-07 14:26:50,161 INFO Computing adjoint forward mappings from 2048 rotations at 100%
2023-01-07 14:26:51,078 DEBUG Corresponding type is already real float64.
2023-01-07 14:26:51,078 DEBUG anufft passed real_type for signal, converting
2023-01-07 14:26:57,777 INFO Computing kernel from 2048 rotations at 50%
2023-01-07 14:26:58,731 DEBUG Corresponding type is already real float64.
2023-01-07 14:26:58,731 DEBUG anufft passed real_type for signal, converting
2023-01-07 14:27:05,752 INFO Computing kernel from 2048 rotations at 100%
2023-01-07 14:27:05,754 INFO Computing non-centered Fourier Transform
2023-01-07 14:27:05,939 INFO Add ramp filter regularisation
2023-01-07 14:27:11,481 INFO Update data_discrepancies
2023-01-07 14:27:11,482 INFO Computing \|Ag.u - f_i\|^2
2023-01-07 14:27:12,332 DEBUG Corresponding type is already real float64.
2023-01-07 14:27:12,332 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:27:27,217 INFO Computing data fidelity for 114564 rotations and 2048 images at 0%
2023-01-07 14:27:28,081 DEBUG Corresponding type is already real float64.
2023-01-07 14:27:28,081 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:27:43,687 INFO Computing data fidelity for 114564 rotations and 2048 images at 1%
2023-01-07 14:27:44,523 DEBUG Corresponding type is already real float64.
2023-01-07 14:27:44,523 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:28:00,010 INFO Computing data fidelity for 114564 rotations and 2048 images at 2%
2023-01-07 14:28:00,929 DEBUG Corresponding type is already real float64.
2023-01-07 14:28:00,929 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:28:16,253 INFO Computing data fidelity for 114564 rotations and 2048 images at 3%
2023-01-07 14:28:17,081 DEBUG Corresponding type is already real float64.
2023-01-07 14:28:17,081 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:28:31,938 INFO Computing data fidelity for 114564 rotations and 2048 images at 4%
2023-01-07 14:28:32,723 DEBUG Corresponding type is already real float64.
2023-01-07 14:28:32,723 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:28:47,769 INFO Computing data fidelity for 114564 rotations and 2048 images at 5%
2023-01-07 14:28:48,608 DEBUG Corresponding type is already real float64.
2023-01-07 14:28:48,608 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:29:03,434 INFO Computing data fidelity for 114564 rotations and 2048 images at 6%
2023-01-07 14:29:04,251 DEBUG Corresponding type is already real float64.
2023-01-07 14:29:04,252 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:29:18,614 INFO Computing data fidelity for 114564 rotations and 2048 images at 7%
2023-01-07 14:29:19,433 DEBUG Corresponding type is already real float64.
2023-01-07 14:29:19,433 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:29:34,272 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2023-01-07 14:29:35,111 DEBUG Corresponding type is already real float64.
2023-01-07 14:29:35,111 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:29:49,629 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2023-01-07 14:29:50,475 DEBUG Corresponding type is already real float64.
2023-01-07 14:29:50,476 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:30:05,398 INFO Computing data fidelity for 114564 rotations and 2048 images at 9%
2023-01-07 14:30:06,198 DEBUG Corresponding type is already real float64.
2023-01-07 14:30:06,198 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:30:21,099 INFO Computing data fidelity for 114564 rotations and 2048 images at 10%
2023-01-07 14:30:21,916 DEBUG Corresponding type is already real float64.
2023-01-07 14:30:21,916 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:30:36,486 INFO Computing data fidelity for 114564 rotations and 2048 images at 11%
2023-01-07 14:30:37,250 DEBUG Corresponding type is already real float64.
2023-01-07 14:30:37,250 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:30:51,276 INFO Computing data fidelity for 114564 rotations and 2048 images at 12%
2023-01-07 14:30:52,069 DEBUG Corresponding type is already real float64.
2023-01-07 14:30:52,069 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:31:06,209 INFO Computing data fidelity for 114564 rotations and 2048 images at 13%
2023-01-07 14:31:06,985 DEBUG Corresponding type is already real float64.
2023-01-07 14:31:06,985 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:31:20,730 INFO Computing data fidelity for 114564 rotations and 2048 images at 14%
2023-01-07 14:31:21,578 DEBUG Corresponding type is already real float64.
2023-01-07 14:31:21,579 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:31:36,792 INFO Computing data fidelity for 114564 rotations and 2048 images at 15%
2023-01-07 14:31:37,573 DEBUG Corresponding type is already real float64.
2023-01-07 14:31:37,573 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:31:51,902 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2023-01-07 14:31:52,681 DEBUG Corresponding type is already real float64.
2023-01-07 14:31:52,682 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:32:07,317 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2023-01-07 14:32:08,126 DEBUG Corresponding type is already real float64.
2023-01-07 14:32:08,126 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:32:22,579 INFO Computing data fidelity for 114564 rotations and 2048 images at 17%
2023-01-07 14:32:23,443 DEBUG Corresponding type is already real float64.
2023-01-07 14:32:23,444 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:32:39,340 INFO Computing data fidelity for 114564 rotations and 2048 images at 18%
2023-01-07 14:32:40,194 DEBUG Corresponding type is already real float64.
2023-01-07 14:32:40,195 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:32:55,993 INFO Computing data fidelity for 114564 rotations and 2048 images at 19%
2023-01-07 14:32:56,782 DEBUG Corresponding type is already real float64.
2023-01-07 14:32:56,783 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:33:11,132 INFO Computing data fidelity for 114564 rotations and 2048 images at 20%
2023-01-07 14:33:11,948 DEBUG Corresponding type is already real float64.
2023-01-07 14:33:11,949 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:33:26,989 INFO Computing data fidelity for 114564 rotations and 2048 images at 21%
2023-01-07 14:33:27,777 DEBUG Corresponding type is already real float64.
2023-01-07 14:33:27,777 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:33:41,250 INFO Computing data fidelity for 114564 rotations and 2048 images at 22%
2023-01-07 14:33:42,026 DEBUG Corresponding type is already real float64.
2023-01-07 14:33:42,026 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:33:55,968 INFO Computing data fidelity for 114564 rotations and 2048 images at 23%
2023-01-07 14:33:56,750 DEBUG Corresponding type is already real float64.
2023-01-07 14:33:56,750 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:34:11,150 INFO Computing data fidelity for 114564 rotations and 2048 images at 24%
2023-01-07 14:34:11,957 DEBUG Corresponding type is already real float64.
2023-01-07 14:34:11,957 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:34:27,161 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2023-01-07 14:34:27,960 DEBUG Corresponding type is already real float64.
2023-01-07 14:34:27,961 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:34:43,095 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2023-01-07 14:34:43,987 DEBUG Corresponding type is already real float64.
2023-01-07 14:34:43,987 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:34:58,951 INFO Computing data fidelity for 114564 rotations and 2048 images at 26%
2023-01-07 14:34:59,745 DEBUG Corresponding type is already real float64.
2023-01-07 14:34:59,745 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:35:14,574 INFO Computing data fidelity for 114564 rotations and 2048 images at 27%
2023-01-07 14:35:15,422 DEBUG Corresponding type is already real float64.
2023-01-07 14:35:15,422 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:35:30,113 INFO Computing data fidelity for 114564 rotations and 2048 images at 28%
2023-01-07 14:35:30,895 DEBUG Corresponding type is already real float64.
2023-01-07 14:35:30,895 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:35:44,640 INFO Computing data fidelity for 114564 rotations and 2048 images at 29%
2023-01-07 14:35:45,421 DEBUG Corresponding type is already real float64.
2023-01-07 14:35:45,421 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:36:00,214 INFO Computing data fidelity for 114564 rotations and 2048 images at 30%
2023-01-07 14:36:00,995 DEBUG Corresponding type is already real float64.
2023-01-07 14:36:00,995 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:36:14,628 INFO Computing data fidelity for 114564 rotations and 2048 images at 31%
2023-01-07 14:36:15,413 DEBUG Corresponding type is already real float64.
2023-01-07 14:36:15,414 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:36:29,330 INFO Computing data fidelity for 114564 rotations and 2048 images at 32%
2023-01-07 14:36:30,099 DEBUG Corresponding type is already real float64.
2023-01-07 14:36:30,099 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:36:43,755 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2023-01-07 14:36:44,534 DEBUG Corresponding type is already real float64.
2023-01-07 14:36:44,534 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:36:58,136 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2023-01-07 14:36:58,898 DEBUG Corresponding type is already real float64.
2023-01-07 14:36:58,898 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:37:12,488 INFO Computing data fidelity for 114564 rotations and 2048 images at 34%
2023-01-07 14:37:13,249 DEBUG Corresponding type is already real float64.
2023-01-07 14:37:13,249 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:37:26,782 INFO Computing data fidelity for 114564 rotations and 2048 images at 35%
2023-01-07 14:37:27,610 DEBUG Corresponding type is already real float64.
2023-01-07 14:37:27,610 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:37:42,213 INFO Computing data fidelity for 114564 rotations and 2048 images at 36%
2023-01-07 14:37:43,002 DEBUG Corresponding type is already real float64.
2023-01-07 14:37:43,002 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:37:57,627 INFO Computing data fidelity for 114564 rotations and 2048 images at 37%
2023-01-07 14:37:58,399 DEBUG Corresponding type is already real float64.
2023-01-07 14:37:58,399 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:38:12,599 INFO Computing data fidelity for 114564 rotations and 2048 images at 38%
2023-01-07 14:38:13,362 DEBUG Corresponding type is already real float64.
2023-01-07 14:38:13,362 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:38:27,268 INFO Computing data fidelity for 114564 rotations and 2048 images at 39%
2023-01-07 14:38:28,029 DEBUG Corresponding type is already real float64.
2023-01-07 14:38:28,029 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:38:42,737 INFO Computing data fidelity for 114564 rotations and 2048 images at 40%
2023-01-07 14:38:43,507 DEBUG Corresponding type is already real float64.
2023-01-07 14:38:43,507 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:38:57,958 INFO Computing data fidelity for 114564 rotations and 2048 images at 41%
2023-01-07 14:38:58,769 DEBUG Corresponding type is already real float64.
2023-01-07 14:38:58,769 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:39:14,049 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2023-01-07 14:39:14,890 DEBUG Corresponding type is already real float64.
2023-01-07 14:39:14,891 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:39:30,283 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2023-01-07 14:39:31,104 DEBUG Corresponding type is already real float64.
2023-01-07 14:39:31,105 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:39:46,216 INFO Computing data fidelity for 114564 rotations and 2048 images at 43%
2023-01-07 14:39:47,195 DEBUG Corresponding type is already real float64.
2023-01-07 14:39:47,195 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:40:02,450 INFO Computing data fidelity for 114564 rotations and 2048 images at 44%
2023-01-07 14:40:03,335 DEBUG Corresponding type is already real float64.
2023-01-07 14:40:03,335 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:40:18,919 INFO Computing data fidelity for 114564 rotations and 2048 images at 45%
2023-01-07 14:40:19,739 DEBUG Corresponding type is already real float64.
2023-01-07 14:40:19,739 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:40:34,925 INFO Computing data fidelity for 114564 rotations and 2048 images at 46%
2023-01-07 14:40:35,751 DEBUG Corresponding type is already real float64.
2023-01-07 14:40:35,752 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:40:51,330 INFO Computing data fidelity for 114564 rotations and 2048 images at 47%
2023-01-07 14:40:52,183 DEBUG Corresponding type is already real float64.
2023-01-07 14:40:52,183 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:41:07,068 INFO Computing data fidelity for 114564 rotations and 2048 images at 48%
2023-01-07 14:41:07,884 DEBUG Corresponding type is already real float64.
2023-01-07 14:41:07,884 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:41:21,896 INFO Computing data fidelity for 114564 rotations and 2048 images at 49%
2023-01-07 14:41:22,685 DEBUG Corresponding type is already real float64.
2023-01-07 14:41:22,685 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:41:37,302 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2023-01-07 14:41:38,171 DEBUG Corresponding type is already real float64.
2023-01-07 14:41:38,171 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:41:53,164 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2023-01-07 14:41:53,950 DEBUG Corresponding type is already real float64.
2023-01-07 14:41:53,950 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:42:08,529 INFO Computing data fidelity for 114564 rotations and 2048 images at 51%
2023-01-07 14:42:09,314 DEBUG Corresponding type is already real float64.
2023-01-07 14:42:09,314 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:42:23,939 INFO Computing data fidelity for 114564 rotations and 2048 images at 52%
2023-01-07 14:42:24,776 DEBUG Corresponding type is already real float64.
2023-01-07 14:42:24,776 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:42:39,872 INFO Computing data fidelity for 114564 rotations and 2048 images at 53%
2023-01-07 14:42:40,691 DEBUG Corresponding type is already real float64.
2023-01-07 14:42:40,691 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:42:55,871 INFO Computing data fidelity for 114564 rotations and 2048 images at 54%
2023-01-07 14:42:56,770 DEBUG Corresponding type is already real float64.
2023-01-07 14:42:56,770 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:43:11,082 INFO Computing data fidelity for 114564 rotations and 2048 images at 55%
2023-01-07 14:43:11,875 DEBUG Corresponding type is already real float64.
2023-01-07 14:43:11,875 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:43:25,559 INFO Computing data fidelity for 114564 rotations and 2048 images at 56%
2023-01-07 14:43:26,343 DEBUG Corresponding type is already real float64.
2023-01-07 14:43:26,343 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:43:40,049 INFO Computing data fidelity for 114564 rotations and 2048 images at 57%
2023-01-07 14:43:40,831 DEBUG Corresponding type is already real float64.
2023-01-07 14:43:40,831 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:43:54,646 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2023-01-07 14:43:55,431 DEBUG Corresponding type is already real float64.
2023-01-07 14:43:55,431 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:44:09,062 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2023-01-07 14:44:09,840 DEBUG Corresponding type is already real float64.
2023-01-07 14:44:09,840 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:44:23,429 INFO Computing data fidelity for 114564 rotations and 2048 images at 59%
2023-01-07 14:44:24,193 DEBUG Corresponding type is already real float64.
2023-01-07 14:44:24,193 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:44:37,761 INFO Computing data fidelity for 114564 rotations and 2048 images at 60%
2023-01-07 14:44:38,528 DEBUG Corresponding type is already real float64.
2023-01-07 14:44:38,528 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:44:52,234 INFO Computing data fidelity for 114564 rotations and 2048 images at 61%
2023-01-07 14:44:53,004 DEBUG Corresponding type is already real float64.
2023-01-07 14:44:53,004 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:45:06,663 INFO Computing data fidelity for 114564 rotations and 2048 images at 62%
2023-01-07 14:45:07,431 DEBUG Corresponding type is already real float64.
2023-01-07 14:45:07,432 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:45:21,051 INFO Computing data fidelity for 114564 rotations and 2048 images at 63%
2023-01-07 14:45:21,822 DEBUG Corresponding type is already real float64.
2023-01-07 14:45:21,822 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:45:36,374 INFO Computing data fidelity for 114564 rotations and 2048 images at 64%
2023-01-07 14:45:37,150 DEBUG Corresponding type is already real float64.
2023-01-07 14:45:37,150 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:45:51,083 INFO Computing data fidelity for 114564 rotations and 2048 images at 65%
2023-01-07 14:45:51,861 DEBUG Corresponding type is already real float64.
2023-01-07 14:45:51,861 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:46:05,606 INFO Computing data fidelity for 114564 rotations and 2048 images at 66%
2023-01-07 14:46:06,368 DEBUG Corresponding type is already real float64.
2023-01-07 14:46:06,368 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:46:19,892 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2023-01-07 14:46:20,659 DEBUG Corresponding type is already real float64.
2023-01-07 14:46:20,659 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:46:34,234 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2023-01-07 14:46:34,999 DEBUG Corresponding type is already real float64.
2023-01-07 14:46:34,999 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:46:48,598 INFO Computing data fidelity for 114564 rotations and 2048 images at 68%
2023-01-07 14:46:49,365 DEBUG Corresponding type is already real float64.
2023-01-07 14:46:49,365 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:47:02,977 INFO Computing data fidelity for 114564 rotations and 2048 images at 69%
2023-01-07 14:47:03,742 DEBUG Corresponding type is already real float64.
2023-01-07 14:47:03,742 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:47:17,245 INFO Computing data fidelity for 114564 rotations and 2048 images at 70%
2023-01-07 14:47:18,011 DEBUG Corresponding type is already real float64.
2023-01-07 14:47:18,011 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:47:31,586 INFO Computing data fidelity for 114564 rotations and 2048 images at 71%
2023-01-07 14:47:32,353 DEBUG Corresponding type is already real float64.
2023-01-07 14:47:32,353 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:47:45,897 INFO Computing data fidelity for 114564 rotations and 2048 images at 72%
2023-01-07 14:47:46,651 DEBUG Corresponding type is already real float64.
2023-01-07 14:47:46,651 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:48:00,168 INFO Computing data fidelity for 114564 rotations and 2048 images at 73%
2023-01-07 14:48:00,925 DEBUG Corresponding type is already real float64.
2023-01-07 14:48:00,925 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:48:14,670 INFO Computing data fidelity for 114564 rotations and 2048 images at 74%
2023-01-07 14:48:15,422 DEBUG Corresponding type is already real float64.
2023-01-07 14:48:15,422 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:48:28,864 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2023-01-07 14:48:29,620 DEBUG Corresponding type is already real float64.
2023-01-07 14:48:29,620 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:48:43,048 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2023-01-07 14:48:43,811 DEBUG Corresponding type is already real float64.
2023-01-07 14:48:43,811 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:48:57,296 INFO Computing data fidelity for 114564 rotations and 2048 images at 76%
2023-01-07 14:48:58,057 DEBUG Corresponding type is already real float64.
2023-01-07 14:48:58,057 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:49:11,520 INFO Computing data fidelity for 114564 rotations and 2048 images at 77%
2023-01-07 14:49:12,266 DEBUG Corresponding type is already real float64.
2023-01-07 14:49:12,266 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:49:25,758 INFO Computing data fidelity for 114564 rotations and 2048 images at 78%
2023-01-07 14:49:26,512 DEBUG Corresponding type is already real float64.
2023-01-07 14:49:26,512 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:49:39,986 INFO Computing data fidelity for 114564 rotations and 2048 images at 79%
2023-01-07 14:49:40,757 DEBUG Corresponding type is already real float64.
2023-01-07 14:49:40,757 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:49:54,270 INFO Computing data fidelity for 114564 rotations and 2048 images at 80%
2023-01-07 14:49:55,032 DEBUG Corresponding type is already real float64.
2023-01-07 14:49:55,032 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:50:08,496 INFO Computing data fidelity for 114564 rotations and 2048 images at 81%
2023-01-07 14:50:09,251 DEBUG Corresponding type is already real float64.
2023-01-07 14:50:09,251 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:50:22,679 INFO Computing data fidelity for 114564 rotations and 2048 images at 82%
2023-01-07 14:50:23,436 DEBUG Corresponding type is already real float64.
2023-01-07 14:50:23,436 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:50:36,887 INFO Computing data fidelity for 114564 rotations and 2048 images at 83%
2023-01-07 14:50:37,643 DEBUG Corresponding type is already real float64.
2023-01-07 14:50:37,643 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:50:51,517 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2023-01-07 14:50:52,310 DEBUG Corresponding type is already real float64.
2023-01-07 14:50:52,310 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:51:06,890 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2023-01-07 14:51:07,653 DEBUG Corresponding type is already real float64.
2023-01-07 14:51:07,653 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:51:21,222 INFO Computing data fidelity for 114564 rotations and 2048 images at 85%
2023-01-07 14:51:21,978 DEBUG Corresponding type is already real float64.
2023-01-07 14:51:21,978 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:51:35,466 INFO Computing data fidelity for 114564 rotations and 2048 images at 86%
2023-01-07 14:51:36,222 DEBUG Corresponding type is already real float64.
2023-01-07 14:51:36,222 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:51:49,667 INFO Computing data fidelity for 114564 rotations and 2048 images at 87%
2023-01-07 14:51:50,437 DEBUG Corresponding type is already real float64.
2023-01-07 14:51:50,437 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:52:03,941 INFO Computing data fidelity for 114564 rotations and 2048 images at 88%
2023-01-07 14:52:04,703 DEBUG Corresponding type is already real float64.
2023-01-07 14:52:04,704 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:52:18,140 INFO Computing data fidelity for 114564 rotations and 2048 images at 89%
2023-01-07 14:52:18,898 DEBUG Corresponding type is already real float64.
2023-01-07 14:52:18,898 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:52:32,398 INFO Computing data fidelity for 114564 rotations and 2048 images at 90%
2023-01-07 14:52:33,173 DEBUG Corresponding type is already real float64.
2023-01-07 14:52:33,173 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:52:46,574 INFO Computing data fidelity for 114564 rotations and 2048 images at 91%
2023-01-07 14:52:47,347 DEBUG Corresponding type is already real float64.
2023-01-07 14:52:47,347 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:53:00,841 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2023-01-07 14:53:01,607 DEBUG Corresponding type is already real float64.
2023-01-07 14:53:01,607 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:53:15,282 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2023-01-07 14:53:16,042 DEBUG Corresponding type is already real float64.
2023-01-07 14:53:16,042 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:53:29,508 INFO Computing data fidelity for 114564 rotations and 2048 images at 93%
2023-01-07 14:53:30,270 DEBUG Corresponding type is already real float64.
2023-01-07 14:53:30,270 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:53:43,713 INFO Computing data fidelity for 114564 rotations and 2048 images at 94%
2023-01-07 14:53:44,474 DEBUG Corresponding type is already real float64.
2023-01-07 14:53:44,474 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:53:58,050 INFO Computing data fidelity for 114564 rotations and 2048 images at 95%
2023-01-07 14:53:58,819 DEBUG Corresponding type is already real float64.
2023-01-07 14:53:58,819 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:54:12,575 INFO Computing data fidelity for 114564 rotations and 2048 images at 96%
2023-01-07 14:54:13,421 DEBUG Corresponding type is already real float64.
2023-01-07 14:54:13,422 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:54:29,509 INFO Computing data fidelity for 114564 rotations and 2048 images at 97%
2023-01-07 14:54:30,440 DEBUG Corresponding type is already real float64.
2023-01-07 14:54:30,440 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:54:44,796 INFO Computing data fidelity for 114564 rotations and 2048 images at 98%
2023-01-07 14:54:45,615 DEBUG Corresponding type is already real float64.
2023-01-07 14:54:45,615 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:54:59,484 INFO Computing data fidelity for 114564 rotations and 2048 images at 99%
2023-01-07 14:54:59,983 DEBUG Corresponding type is already real float64.
2023-01-07 14:54:59,983 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:55:11,891 INFO Computing data fidelity for 114564 rotations and 2048 images at 100%
2023-01-07 14:55:14,691 INFO Do lambda update step
2023-01-07 14:55:39,053 INFO Do rots update step
2023-01-07 14:55:39,954 INFO Projecting 2048 vectors onto 114564-simplex at 2%
2023-01-07 14:55:40,695 INFO Projecting 2048 vectors onto 114564-simplex at 4%
2023-01-07 14:55:41,421 INFO Projecting 2048 vectors onto 114564-simplex at 7%
2023-01-07 14:55:42,152 INFO Projecting 2048 vectors onto 114564-simplex at 9%
2023-01-07 14:55:42,868 INFO Projecting 2048 vectors onto 114564-simplex at 12%
2023-01-07 14:55:43,557 INFO Projecting 2048 vectors onto 114564-simplex at 14%
2023-01-07 14:55:44,281 INFO Projecting 2048 vectors onto 114564-simplex at 17%
2023-01-07 14:55:44,997 INFO Projecting 2048 vectors onto 114564-simplex at 19%
2023-01-07 14:55:45,707 INFO Projecting 2048 vectors onto 114564-simplex at 21%
2023-01-07 14:55:46,394 INFO Projecting 2048 vectors onto 114564-simplex at 24%
2023-01-07 14:55:47,221 INFO Projecting 2048 vectors onto 114564-simplex at 26%
2023-01-07 14:55:47,851 INFO Projecting 2048 vectors onto 114564-simplex at 29%
2023-01-07 14:55:48,488 INFO Projecting 2048 vectors onto 114564-simplex at 31%
2023-01-07 14:55:49,216 INFO Projecting 2048 vectors onto 114564-simplex at 34%
2023-01-07 14:55:49,898 INFO Projecting 2048 vectors onto 114564-simplex at 36%
2023-01-07 14:55:50,623 INFO Projecting 2048 vectors onto 114564-simplex at 39%
2023-01-07 14:55:51,331 INFO Projecting 2048 vectors onto 114564-simplex at 41%
2023-01-07 14:55:52,055 INFO Projecting 2048 vectors onto 114564-simplex at 43%
2023-01-07 14:55:52,780 INFO Projecting 2048 vectors onto 114564-simplex at 46%
2023-01-07 14:55:53,502 INFO Projecting 2048 vectors onto 114564-simplex at 48%
2023-01-07 14:55:54,429 INFO Projecting 2048 vectors onto 114564-simplex at 51%
2023-01-07 14:55:55,127 INFO Projecting 2048 vectors onto 114564-simplex at 53%
2023-01-07 14:55:55,879 INFO Projecting 2048 vectors onto 114564-simplex at 56%
2023-01-07 14:55:56,571 INFO Projecting 2048 vectors onto 114564-simplex at 58%
2023-01-07 14:55:57,284 INFO Projecting 2048 vectors onto 114564-simplex at 61%
2023-01-07 14:55:58,028 INFO Projecting 2048 vectors onto 114564-simplex at 63%
2023-01-07 14:55:58,729 INFO Projecting 2048 vectors onto 114564-simplex at 65%
2023-01-07 14:55:59,440 INFO Projecting 2048 vectors onto 114564-simplex at 68%
2023-01-07 14:56:00,192 INFO Projecting 2048 vectors onto 114564-simplex at 70%
2023-01-07 14:56:00,927 INFO Projecting 2048 vectors onto 114564-simplex at 73%
2023-01-07 14:56:01,858 INFO Projecting 2048 vectors onto 114564-simplex at 75%
2023-01-07 14:56:02,562 INFO Projecting 2048 vectors onto 114564-simplex at 78%
2023-01-07 14:56:03,240 INFO Projecting 2048 vectors onto 114564-simplex at 80%
2023-01-07 14:56:03,876 INFO Projecting 2048 vectors onto 114564-simplex at 83%
2023-01-07 14:56:04,500 INFO Projecting 2048 vectors onto 114564-simplex at 85%
2023-01-07 14:56:05,202 INFO Projecting 2048 vectors onto 114564-simplex at 87%
2023-01-07 14:56:05,893 INFO Projecting 2048 vectors onto 114564-simplex at 90%
2023-01-07 14:56:06,612 INFO Projecting 2048 vectors onto 114564-simplex at 92%
2023-01-07 14:56:07,245 INFO Projecting 2048 vectors onto 114564-simplex at 95%
2023-01-07 14:56:07,875 INFO Projecting 2048 vectors onto 114564-simplex at 97%
2023-01-07 14:56:08,485 INFO Projecting 2048 vectors onto 114564-simplex at 100%
2023-01-07 14:56:10,012 INFO Computing 50 means of 485 points in at most 20 steps...
2023-01-07 14:56:10,073 INFO Computing 2048 means at 2%
2023-01-07 14:56:10,153 INFO Computing 50 means of 457 points in at most 20 steps...
2023-01-07 14:56:10,204 INFO Computing 2048 means at 4%
2023-01-07 14:56:10,280 INFO Computing 50 means of 484 points in at most 20 steps...
2023-01-07 14:56:10,333 INFO Computing 2048 means at 7%
2023-01-07 14:56:10,408 INFO Computing 50 means of 471 points in at most 20 steps...
2023-01-07 14:56:10,462 INFO Computing 2048 means at 9%
2023-01-07 14:56:10,539 INFO Computing 50 means of 492 points in at most 20 steps...
2023-01-07 14:56:10,601 INFO Computing 2048 means at 12%
2023-01-07 14:56:10,678 INFO Computing 50 means of 491 points in at most 20 steps...
2023-01-07 14:56:10,743 INFO Computing 2048 means at 14%
2023-01-07 14:56:10,828 INFO Computing 50 means of 492 points in at most 20 steps...
2023-01-07 14:56:10,894 INFO Computing 2048 means at 17%
2023-01-07 14:56:10,981 INFO Computing 50 means of 489 points in at most 20 steps...
2023-01-07 14:56:11,044 INFO Computing 2048 means at 19%
2023-01-07 14:56:11,130 INFO Computing 50 means of 482 points in at most 20 steps...
2023-01-07 14:56:11,193 INFO Computing 2048 means at 21%
2023-01-07 14:56:11,272 INFO Computing 50 means of 477 points in at most 20 steps...
2023-01-07 14:56:11,325 INFO Computing 2048 means at 24%
2023-01-07 14:56:11,409 INFO Computing 50 means of 488 points in at most 20 steps...
2023-01-07 14:56:11,461 INFO Computing 2048 means at 26%
2023-01-07 14:56:11,539 INFO Computing 50 means of 488 points in at most 20 steps...
2023-01-07 14:56:11,594 INFO Computing 2048 means at 29%
2023-01-07 14:56:11,674 INFO Computing 50 means of 488 points in at most 20 steps...
2023-01-07 14:56:11,735 INFO Computing 2048 means at 31%
2023-01-07 14:56:11,820 INFO Computing 50 means of 498 points in at most 20 steps...
2023-01-07 14:56:11,885 INFO Computing 2048 means at 34%
2023-01-07 14:56:11,967 INFO Computing 50 means of 469 points in at most 20 steps...
2023-01-07 14:56:12,020 INFO Computing 2048 means at 36%
2023-01-07 14:56:12,105 INFO Computing 50 means of 481 points in at most 20 steps...
2023-01-07 14:56:12,167 INFO Computing 2048 means at 39%
2023-01-07 14:56:12,254 INFO Computing 50 means of 463 points in at most 20 steps...
2023-01-07 14:56:12,316 INFO Computing 2048 means at 41%
2023-01-07 14:56:12,396 INFO Computing 50 means of 457 points in at most 20 steps...
2023-01-07 14:56:12,447 INFO Computing 2048 means at 43%
2023-01-07 14:56:12,527 INFO Computing 50 means of 481 points in at most 20 steps...
2023-01-07 14:56:12,583 INFO Computing 2048 means at 46%
2023-01-07 14:56:12,664 INFO Computing 50 means of 485 points in at most 20 steps...
2023-01-07 14:56:12,726 INFO Computing 2048 means at 48%
2023-01-07 14:56:12,820 INFO Computing 50 means of 475 points in at most 20 steps...
2023-01-07 14:56:12,889 INFO Computing 2048 means at 51%
2023-01-07 14:56:12,972 INFO Computing 50 means of 510 points in at most 20 steps...
2023-01-07 14:56:13,029 INFO Computing 2048 means at 53%
2023-01-07 14:56:13,106 INFO Computing 50 means of 475 points in at most 20 steps...
2023-01-07 14:56:13,157 INFO Computing 2048 means at 56%
2023-01-07 14:56:13,235 INFO Computing 50 means of 480 points in at most 20 steps...
2023-01-07 14:56:13,288 INFO Computing 2048 means at 58%
2023-01-07 14:56:13,365 INFO Computing 50 means of 470 points in at most 20 steps...
2023-01-07 14:56:13,416 INFO Computing 2048 means at 61%
2023-01-07 14:56:13,495 INFO Computing 50 means of 485 points in at most 20 steps...
2023-01-07 14:56:13,548 INFO Computing 2048 means at 63%
2023-01-07 14:56:13,626 INFO Computing 50 means of 492 points in at most 20 steps...
2023-01-07 14:56:13,681 INFO Computing 2048 means at 65%
2023-01-07 14:56:13,760 INFO Computing 50 means of 478 points in at most 20 steps...
2023-01-07 14:56:13,813 INFO Computing 2048 means at 68%
2023-01-07 14:56:13,891 INFO Computing 50 means of 479 points in at most 20 steps...
2023-01-07 14:56:13,950 INFO Computing 2048 means at 70%
2023-01-07 14:56:14,034 INFO Computing 50 means of 486 points in at most 20 steps...
2023-01-07 14:56:14,098 INFO Computing 2048 means at 73%
2023-01-07 14:56:14,192 INFO Computing 50 means of 494 points in at most 20 steps...
2023-01-07 14:56:14,259 INFO Computing 2048 means at 75%
2023-01-07 14:56:14,346 INFO Computing 50 means of 485 points in at most 20 steps...
2023-01-07 14:56:14,414 INFO Computing 2048 means at 78%
2023-01-07 14:56:14,498 INFO Computing 50 means of 487 points in at most 20 steps...
2023-01-07 14:56:14,560 INFO Computing 2048 means at 80%
2023-01-07 14:56:14,641 INFO Computing 50 means of 495 points in at most 20 steps...
2023-01-07 14:56:14,696 INFO Computing 2048 means at 83%
2023-01-07 14:56:14,775 INFO Computing 50 means of 522 points in at most 20 steps...
2023-01-07 14:56:14,833 INFO Computing 2048 means at 85%
2023-01-07 14:56:14,910 INFO Computing 50 means of 487 points in at most 20 steps...
2023-01-07 14:56:14,974 INFO Computing 2048 means at 87%
2023-01-07 14:56:15,062 INFO Computing 50 means of 504 points in at most 20 steps...
2023-01-07 14:56:15,123 INFO Computing 2048 means at 90%
2023-01-07 14:56:15,208 INFO Computing 50 means of 491 points in at most 20 steps...
2023-01-07 14:56:15,271 INFO Computing 2048 means at 92%
2023-01-07 14:56:15,357 INFO Computing 50 means of 496 points in at most 20 steps...
2023-01-07 14:56:15,422 INFO Computing 2048 means at 95%
2023-01-07 14:56:15,507 INFO Computing 50 means of 485 points in at most 20 steps...
2023-01-07 14:56:15,570 INFO Computing 2048 means at 97%
2023-01-07 14:56:15,652 INFO Computing 48 means of 472 points in at most 20 steps...
2023-01-07 14:56:15,702 INFO Computing 2048 means at 100%
2023-01-07 14:56:21,053 INFO Do vol update step
2023-01-07 14:56:21,055 INFO Compute adjoint forward mapping on the images
2023-01-07 14:56:22,795 DEBUG Corresponding type is already complex complex128.
2023-01-07 14:56:25,320 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2023-01-07 14:56:25,339 INFO Computing adjoint forward mappings from 2048 rotations at 50%
2023-01-07 14:56:26,900 DEBUG Corresponding type is already complex complex128.
2023-01-07 14:56:29,420 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2023-01-07 14:56:29,435 INFO Computing adjoint forward mappings from 2048 rotations at 100%
2023-01-07 14:56:30,313 DEBUG Corresponding type is already real float64.
2023-01-07 14:56:30,313 DEBUG anufft passed real_type for signal, converting
2023-01-07 14:56:37,178 INFO Computing kernel from 2048 rotations at 50%
2023-01-07 14:56:38,225 DEBUG Corresponding type is already real float64.
2023-01-07 14:56:38,226 DEBUG anufft passed real_type for signal, converting
2023-01-07 14:56:45,676 INFO Computing kernel from 2048 rotations at 100%
2023-01-07 14:56:45,677 INFO Computing non-centered Fourier Transform
2023-01-07 14:56:45,874 INFO Add ramp filter regularisation
2023-01-07 14:56:51,566 INFO Update data_discrepancies
2023-01-07 14:56:51,568 INFO Computing \|Ag.u - f_i\|^2
2023-01-07 14:56:52,422 DEBUG Corresponding type is already real float64.
2023-01-07 14:56:52,423 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:57:07,985 INFO Computing data fidelity for 114564 rotations and 2048 images at 0%
2023-01-07 14:57:08,865 DEBUG Corresponding type is already real float64.
2023-01-07 14:57:08,865 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:57:23,983 INFO Computing data fidelity for 114564 rotations and 2048 images at 1%
2023-01-07 14:57:24,862 DEBUG Corresponding type is already real float64.
2023-01-07 14:57:24,862 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:57:40,475 INFO Computing data fidelity for 114564 rotations and 2048 images at 2%
2023-01-07 14:57:41,290 DEBUG Corresponding type is already real float64.
2023-01-07 14:57:41,290 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:57:55,953 INFO Computing data fidelity for 114564 rotations and 2048 images at 3%
2023-01-07 14:57:56,726 DEBUG Corresponding type is already real float64.
2023-01-07 14:57:56,726 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:58:11,185 INFO Computing data fidelity for 114564 rotations and 2048 images at 4%
2023-01-07 14:58:11,940 DEBUG Corresponding type is already real float64.
2023-01-07 14:58:11,940 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:58:25,508 INFO Computing data fidelity for 114564 rotations and 2048 images at 5%
2023-01-07 14:58:26,331 DEBUG Corresponding type is already real float64.
2023-01-07 14:58:26,331 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:58:39,717 INFO Computing data fidelity for 114564 rotations and 2048 images at 6%
2023-01-07 14:58:40,521 DEBUG Corresponding type is already real float64.
2023-01-07 14:58:40,521 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:58:54,017 INFO Computing data fidelity for 114564 rotations and 2048 images at 7%
2023-01-07 14:58:54,760 DEBUG Corresponding type is already real float64.
2023-01-07 14:58:54,760 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:59:08,268 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2023-01-07 14:59:09,001 DEBUG Corresponding type is already real float64.
2023-01-07 14:59:09,001 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:59:22,241 INFO Computing data fidelity for 114564 rotations and 2048 images at 8%
2023-01-07 14:59:22,979 DEBUG Corresponding type is already real float64.
2023-01-07 14:59:22,979 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:59:37,513 INFO Computing data fidelity for 114564 rotations and 2048 images at 9%
2023-01-07 14:59:38,284 DEBUG Corresponding type is already real float64.
2023-01-07 14:59:38,285 DEBUG nufft passed real_type for signal, converting
2023-01-07 14:59:53,383 INFO Computing data fidelity for 114564 rotations and 2048 images at 10%
2023-01-07 14:59:54,282 DEBUG Corresponding type is already real float64.
2023-01-07 14:59:54,283 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:00:09,112 INFO Computing data fidelity for 114564 rotations and 2048 images at 11%
2023-01-07 15:00:09,952 DEBUG Corresponding type is already real float64.
2023-01-07 15:00:09,953 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:00:24,738 INFO Computing data fidelity for 114564 rotations and 2048 images at 12%
2023-01-07 15:00:25,572 DEBUG Corresponding type is already real float64.
2023-01-07 15:00:25,572 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:00:40,126 INFO Computing data fidelity for 114564 rotations and 2048 images at 13%
2023-01-07 15:00:40,910 DEBUG Corresponding type is already real float64.
2023-01-07 15:00:40,910 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:00:55,481 INFO Computing data fidelity for 114564 rotations and 2048 images at 14%
2023-01-07 15:00:56,282 DEBUG Corresponding type is already real float64.
2023-01-07 15:00:56,283 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:01:11,215 INFO Computing data fidelity for 114564 rotations and 2048 images at 15%
2023-01-07 15:01:12,042 DEBUG Corresponding type is already real float64.
2023-01-07 15:01:12,042 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:01:27,694 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2023-01-07 15:01:28,554 DEBUG Corresponding type is already real float64.
2023-01-07 15:01:28,554 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:01:43,710 INFO Computing data fidelity for 114564 rotations and 2048 images at 16%
2023-01-07 15:01:44,540 DEBUG Corresponding type is already real float64.
2023-01-07 15:01:44,540 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:01:59,316 INFO Computing data fidelity for 114564 rotations and 2048 images at 17%
2023-01-07 15:02:00,180 DEBUG Corresponding type is already real float64.
2023-01-07 15:02:00,181 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:02:14,854 INFO Computing data fidelity for 114564 rotations and 2048 images at 18%
2023-01-07 15:02:15,650 DEBUG Corresponding type is already real float64.
2023-01-07 15:02:15,650 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:02:30,673 INFO Computing data fidelity for 114564 rotations and 2048 images at 19%
2023-01-07 15:02:31,452 DEBUG Corresponding type is already real float64.
2023-01-07 15:02:31,452 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:02:46,417 INFO Computing data fidelity for 114564 rotations and 2048 images at 20%
2023-01-07 15:02:47,194 DEBUG Corresponding type is already real float64.
2023-01-07 15:02:47,194 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:03:01,871 INFO Computing data fidelity for 114564 rotations and 2048 images at 21%
2023-01-07 15:03:02,655 DEBUG Corresponding type is already real float64.
2023-01-07 15:03:02,655 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:03:17,340 INFO Computing data fidelity for 114564 rotations and 2048 images at 22%
2023-01-07 15:03:18,134 DEBUG Corresponding type is already real float64.
2023-01-07 15:03:18,134 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:03:32,507 INFO Computing data fidelity for 114564 rotations and 2048 images at 23%
2023-01-07 15:03:33,325 DEBUG Corresponding type is already real float64.
2023-01-07 15:03:33,326 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:03:48,055 INFO Computing data fidelity for 114564 rotations and 2048 images at 24%
2023-01-07 15:03:48,880 DEBUG Corresponding type is already real float64.
2023-01-07 15:03:48,881 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:04:03,768 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2023-01-07 15:04:04,570 DEBUG Corresponding type is already real float64.
2023-01-07 15:04:04,570 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:04:19,319 INFO Computing data fidelity for 114564 rotations and 2048 images at 25%
2023-01-07 15:04:20,174 DEBUG Corresponding type is already real float64.
2023-01-07 15:04:20,174 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:04:35,030 INFO Computing data fidelity for 114564 rotations and 2048 images at 26%
2023-01-07 15:04:35,800 DEBUG Corresponding type is already real float64.
2023-01-07 15:04:35,801 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:04:50,531 INFO Computing data fidelity for 114564 rotations and 2048 images at 27%
2023-01-07 15:04:51,416 DEBUG Corresponding type is already real float64.
2023-01-07 15:04:51,416 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:05:06,450 INFO Computing data fidelity for 114564 rotations and 2048 images at 28%
2023-01-07 15:05:07,305 DEBUG Corresponding type is already real float64.
2023-01-07 15:05:07,305 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:05:22,373 INFO Computing data fidelity for 114564 rotations and 2048 images at 29%
2023-01-07 15:05:23,198 DEBUG Corresponding type is already real float64.
2023-01-07 15:05:23,198 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:05:38,019 INFO Computing data fidelity for 114564 rotations and 2048 images at 30%
2023-01-07 15:05:38,830 DEBUG Corresponding type is already real float64.
2023-01-07 15:05:38,830 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:05:53,139 INFO Computing data fidelity for 114564 rotations and 2048 images at 31%
2023-01-07 15:05:54,019 DEBUG Corresponding type is already real float64.
2023-01-07 15:05:54,019 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:06:09,031 INFO Computing data fidelity for 114564 rotations and 2048 images at 32%
2023-01-07 15:06:09,856 DEBUG Corresponding type is already real float64.
2023-01-07 15:06:09,856 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:06:23,735 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2023-01-07 15:06:24,530 DEBUG Corresponding type is already real float64.
2023-01-07 15:06:24,531 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:06:38,116 INFO Computing data fidelity for 114564 rotations and 2048 images at 33%
2023-01-07 15:06:38,884 DEBUG Corresponding type is already real float64.
2023-01-07 15:06:38,884 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:06:53,676 INFO Computing data fidelity for 114564 rotations and 2048 images at 34%
2023-01-07 15:06:54,468 DEBUG Corresponding type is already real float64.
2023-01-07 15:06:54,468 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:07:10,207 INFO Computing data fidelity for 114564 rotations and 2048 images at 35%
2023-01-07 15:07:11,112 DEBUG Corresponding type is already real float64.
2023-01-07 15:07:11,112 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:07:26,516 INFO Computing data fidelity for 114564 rotations and 2048 images at 36%
2023-01-07 15:07:27,427 DEBUG Corresponding type is already real float64.
2023-01-07 15:07:27,427 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:07:41,880 INFO Computing data fidelity for 114564 rotations and 2048 images at 37%
2023-01-07 15:07:42,757 DEBUG Corresponding type is already real float64.
2023-01-07 15:07:42,757 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:07:57,714 INFO Computing data fidelity for 114564 rotations and 2048 images at 38%
2023-01-07 15:07:58,499 DEBUG Corresponding type is already real float64.
2023-01-07 15:07:58,499 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:08:12,899 INFO Computing data fidelity for 114564 rotations and 2048 images at 39%
2023-01-07 15:08:13,784 DEBUG Corresponding type is already real float64.
2023-01-07 15:08:13,784 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:08:28,199 INFO Computing data fidelity for 114564 rotations and 2048 images at 40%
2023-01-07 15:08:29,012 DEBUG Corresponding type is already real float64.
2023-01-07 15:08:29,012 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:08:42,698 INFO Computing data fidelity for 114564 rotations and 2048 images at 41%
2023-01-07 15:08:43,469 DEBUG Corresponding type is already real float64.
2023-01-07 15:08:43,469 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:08:57,940 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2023-01-07 15:08:58,705 DEBUG Corresponding type is already real float64.
2023-01-07 15:08:58,705 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:09:12,306 INFO Computing data fidelity for 114564 rotations and 2048 images at 42%
2023-01-07 15:09:13,076 DEBUG Corresponding type is already real float64.
2023-01-07 15:09:13,076 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:09:27,275 INFO Computing data fidelity for 114564 rotations and 2048 images at 43%
2023-01-07 15:09:28,079 DEBUG Corresponding type is already real float64.
2023-01-07 15:09:28,079 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:09:42,051 INFO Computing data fidelity for 114564 rotations and 2048 images at 44%
2023-01-07 15:09:42,921 DEBUG Corresponding type is already real float64.
2023-01-07 15:09:42,921 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:09:57,504 INFO Computing data fidelity for 114564 rotations and 2048 images at 45%
2023-01-07 15:09:58,344 DEBUG Corresponding type is already real float64.
2023-01-07 15:09:58,345 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:10:12,864 INFO Computing data fidelity for 114564 rotations and 2048 images at 46%
2023-01-07 15:10:13,628 DEBUG Corresponding type is already real float64.
2023-01-07 15:10:13,628 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:10:27,193 INFO Computing data fidelity for 114564 rotations and 2048 images at 47%
2023-01-07 15:10:27,964 DEBUG Corresponding type is already real float64.
2023-01-07 15:10:27,965 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:10:41,629 INFO Computing data fidelity for 114564 rotations and 2048 images at 48%
2023-01-07 15:10:42,393 DEBUG Corresponding type is already real float64.
2023-01-07 15:10:42,393 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:10:57,562 INFO Computing data fidelity for 114564 rotations and 2048 images at 49%
2023-01-07 15:10:58,397 DEBUG Corresponding type is already real float64.
2023-01-07 15:10:58,397 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:11:12,620 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2023-01-07 15:11:13,393 DEBUG Corresponding type is already real float64.
2023-01-07 15:11:13,393 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:11:27,317 INFO Computing data fidelity for 114564 rotations and 2048 images at 50%
2023-01-07 15:11:28,124 DEBUG Corresponding type is already real float64.
2023-01-07 15:11:28,124 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:11:43,023 INFO Computing data fidelity for 114564 rotations and 2048 images at 51%
2023-01-07 15:11:43,870 DEBUG Corresponding type is already real float64.
2023-01-07 15:11:43,870 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:11:58,064 INFO Computing data fidelity for 114564 rotations and 2048 images at 52%
2023-01-07 15:11:58,839 DEBUG Corresponding type is already real float64.
2023-01-07 15:11:58,840 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:12:12,482 INFO Computing data fidelity for 114564 rotations and 2048 images at 53%
2023-01-07 15:12:13,292 DEBUG Corresponding type is already real float64.
2023-01-07 15:12:13,292 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:12:27,175 INFO Computing data fidelity for 114564 rotations and 2048 images at 54%
2023-01-07 15:12:27,940 DEBUG Corresponding type is already real float64.
2023-01-07 15:12:27,940 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:12:42,064 INFO Computing data fidelity for 114564 rotations and 2048 images at 55%
2023-01-07 15:12:42,877 DEBUG Corresponding type is already real float64.
2023-01-07 15:12:42,878 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:12:57,435 INFO Computing data fidelity for 114564 rotations and 2048 images at 56%
2023-01-07 15:12:58,213 DEBUG Corresponding type is already real float64.
2023-01-07 15:12:58,213 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:13:12,518 INFO Computing data fidelity for 114564 rotations and 2048 images at 57%
2023-01-07 15:13:13,331 DEBUG Corresponding type is already real float64.
2023-01-07 15:13:13,331 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:13:27,758 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2023-01-07 15:13:28,626 DEBUG Corresponding type is already real float64.
2023-01-07 15:13:28,627 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:13:42,908 INFO Computing data fidelity for 114564 rotations and 2048 images at 58%
2023-01-07 15:13:43,724 DEBUG Corresponding type is already real float64.
2023-01-07 15:13:43,724 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:13:57,490 INFO Computing data fidelity for 114564 rotations and 2048 images at 59%
2023-01-07 15:13:58,255 DEBUG Corresponding type is already real float64.
2023-01-07 15:13:58,255 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:14:12,569 INFO Computing data fidelity for 114564 rotations and 2048 images at 60%
2023-01-07 15:14:13,366 DEBUG Corresponding type is already real float64.
2023-01-07 15:14:13,366 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:14:27,773 INFO Computing data fidelity for 114564 rotations and 2048 images at 61%
2023-01-07 15:14:28,538 DEBUG Corresponding type is already real float64.
2023-01-07 15:14:28,538 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:14:42,466 INFO Computing data fidelity for 114564 rotations and 2048 images at 62%
2023-01-07 15:14:43,239 DEBUG Corresponding type is already real float64.
2023-01-07 15:14:43,239 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:14:57,281 INFO Computing data fidelity for 114564 rotations and 2048 images at 63%
2023-01-07 15:14:58,126 DEBUG Corresponding type is already real float64.
2023-01-07 15:14:58,127 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:15:12,601 INFO Computing data fidelity for 114564 rotations and 2048 images at 64%
2023-01-07 15:15:13,371 DEBUG Corresponding type is already real float64.
2023-01-07 15:15:13,371 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:15:27,396 INFO Computing data fidelity for 114564 rotations and 2048 images at 65%
2023-01-07 15:15:28,158 DEBUG Corresponding type is already real float64.
2023-01-07 15:15:28,158 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:15:41,971 INFO Computing data fidelity for 114564 rotations and 2048 images at 66%
2023-01-07 15:15:42,767 DEBUG Corresponding type is already real float64.
2023-01-07 15:15:42,767 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:15:58,147 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2023-01-07 15:15:58,986 DEBUG Corresponding type is already real float64.
2023-01-07 15:15:58,987 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:16:14,598 INFO Computing data fidelity for 114564 rotations and 2048 images at 67%
2023-01-07 15:16:15,452 DEBUG Corresponding type is already real float64.
2023-01-07 15:16:15,452 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:16:30,013 INFO Computing data fidelity for 114564 rotations and 2048 images at 68%
2023-01-07 15:16:30,801 DEBUG Corresponding type is already real float64.
2023-01-07 15:16:30,801 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:16:46,107 INFO Computing data fidelity for 114564 rotations and 2048 images at 69%
2023-01-07 15:16:46,924 DEBUG Corresponding type is already real float64.
2023-01-07 15:16:46,924 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:17:02,026 INFO Computing data fidelity for 114564 rotations and 2048 images at 70%
2023-01-07 15:17:02,811 DEBUG Corresponding type is already real float64.
2023-01-07 15:17:02,812 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:17:16,526 INFO Computing data fidelity for 114564 rotations and 2048 images at 71%
2023-01-07 15:17:17,314 DEBUG Corresponding type is already real float64.
2023-01-07 15:17:17,314 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:17:30,952 INFO Computing data fidelity for 114564 rotations and 2048 images at 72%
2023-01-07 15:17:31,725 DEBUG Corresponding type is already real float64.
2023-01-07 15:17:31,725 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:17:46,101 INFO Computing data fidelity for 114564 rotations and 2048 images at 73%
2023-01-07 15:17:46,970 DEBUG Corresponding type is already real float64.
2023-01-07 15:17:46,970 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:18:01,912 INFO Computing data fidelity for 114564 rotations and 2048 images at 74%
2023-01-07 15:18:02,709 DEBUG Corresponding type is already real float64.
2023-01-07 15:18:02,709 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:18:18,268 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2023-01-07 15:18:19,343 DEBUG Corresponding type is already real float64.
2023-01-07 15:18:19,343 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:18:34,404 INFO Computing data fidelity for 114564 rotations and 2048 images at 75%
2023-01-07 15:18:35,194 DEBUG Corresponding type is already real float64.
2023-01-07 15:18:35,194 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:18:49,166 INFO Computing data fidelity for 114564 rotations and 2048 images at 76%
2023-01-07 15:18:49,958 DEBUG Corresponding type is already real float64.
2023-01-07 15:18:49,958 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:19:04,384 INFO Computing data fidelity for 114564 rotations and 2048 images at 77%
2023-01-07 15:19:05,228 DEBUG Corresponding type is already real float64.
2023-01-07 15:19:05,228 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:19:19,212 INFO Computing data fidelity for 114564 rotations and 2048 images at 78%
2023-01-07 15:19:19,993 DEBUG Corresponding type is already real float64.
2023-01-07 15:19:19,993 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:19:34,756 INFO Computing data fidelity for 114564 rotations and 2048 images at 79%
2023-01-07 15:19:35,546 DEBUG Corresponding type is already real float64.
2023-01-07 15:19:35,546 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:19:49,713 INFO Computing data fidelity for 114564 rotations and 2048 images at 80%
2023-01-07 15:19:50,486 DEBUG Corresponding type is already real float64.
2023-01-07 15:19:50,486 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:20:05,283 INFO Computing data fidelity for 114564 rotations and 2048 images at 81%
2023-01-07 15:20:06,109 DEBUG Corresponding type is already real float64.
2023-01-07 15:20:06,109 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:20:20,068 INFO Computing data fidelity for 114564 rotations and 2048 images at 82%
2023-01-07 15:20:20,829 DEBUG Corresponding type is already real float64.
2023-01-07 15:20:20,829 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:20:34,511 INFO Computing data fidelity for 114564 rotations and 2048 images at 83%
2023-01-07 15:20:35,266 DEBUG Corresponding type is already real float64.
2023-01-07 15:20:35,267 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:20:49,681 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2023-01-07 15:20:50,577 DEBUG Corresponding type is already real float64.
2023-01-07 15:20:50,577 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:21:05,044 INFO Computing data fidelity for 114564 rotations and 2048 images at 84%
2023-01-07 15:21:05,845 DEBUG Corresponding type is already real float64.
2023-01-07 15:21:05,845 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:21:19,962 INFO Computing data fidelity for 114564 rotations and 2048 images at 85%
2023-01-07 15:21:20,736 DEBUG Corresponding type is already real float64.
2023-01-07 15:21:20,736 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:21:34,330 INFO Computing data fidelity for 114564 rotations and 2048 images at 86%
2023-01-07 15:21:35,093 DEBUG Corresponding type is already real float64.
2023-01-07 15:21:35,093 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:21:49,013 INFO Computing data fidelity for 114564 rotations and 2048 images at 87%
2023-01-07 15:21:49,801 DEBUG Corresponding type is already real float64.
2023-01-07 15:21:49,801 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:22:04,822 INFO Computing data fidelity for 114564 rotations and 2048 images at 88%
2023-01-07 15:22:05,641 DEBUG Corresponding type is already real float64.
2023-01-07 15:22:05,641 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:22:21,086 INFO Computing data fidelity for 114564 rotations and 2048 images at 89%
2023-01-07 15:22:21,873 DEBUG Corresponding type is already real float64.
2023-01-07 15:22:21,873 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:22:35,975 INFO Computing data fidelity for 114564 rotations and 2048 images at 90%
2023-01-07 15:22:36,749 DEBUG Corresponding type is already real float64.
2023-01-07 15:22:36,749 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:22:50,195 INFO Computing data fidelity for 114564 rotations and 2048 images at 91%
2023-01-07 15:22:50,966 DEBUG Corresponding type is already real float64.
2023-01-07 15:22:50,966 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:23:04,431 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2023-01-07 15:23:05,202 DEBUG Corresponding type is already real float64.
2023-01-07 15:23:05,202 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:23:19,277 INFO Computing data fidelity for 114564 rotations and 2048 images at 92%
2023-01-07 15:23:20,166 DEBUG Corresponding type is already real float64.
2023-01-07 15:23:20,166 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:23:34,887 INFO Computing data fidelity for 114564 rotations and 2048 images at 93%
2023-01-07 15:23:35,725 DEBUG Corresponding type is already real float64.
2023-01-07 15:23:35,725 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:23:50,292 INFO Computing data fidelity for 114564 rotations and 2048 images at 94%
2023-01-07 15:23:51,067 DEBUG Corresponding type is already real float64.
2023-01-07 15:23:51,067 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:24:05,658 INFO Computing data fidelity for 114564 rotations and 2048 images at 95%
2023-01-07 15:24:06,481 DEBUG Corresponding type is already real float64.
2023-01-07 15:24:06,481 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:24:22,163 INFO Computing data fidelity for 114564 rotations and 2048 images at 96%
2023-01-07 15:24:23,058 DEBUG Corresponding type is already real float64.
2023-01-07 15:24:23,058 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:24:37,499 INFO Computing data fidelity for 114564 rotations and 2048 images at 97%
2023-01-07 15:24:38,306 DEBUG Corresponding type is already real float64.
2023-01-07 15:24:38,306 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:24:53,098 INFO Computing data fidelity for 114564 rotations and 2048 images at 98%
2023-01-07 15:24:53,989 DEBUG Corresponding type is already real float64.
2023-01-07 15:24:53,989 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:25:09,463 INFO Computing data fidelity for 114564 rotations and 2048 images at 99%
2023-01-07 15:25:10,050 DEBUG Corresponding type is already real float64.
2023-01-07 15:25:10,051 DEBUG nufft passed real_type for signal, converting
2023-01-07 15:25:23,301 INFO Computing data fidelity for 114564 rotations and 2048 images at 100%
2023-01-07 15:25:26,383 INFO Do lambda update step
2023-01-07 15:25:53,604 INFO Do rots update step
2023-01-07 15:25:54,583 INFO Projecting 2048 vectors onto 114564-simplex at 2%
2023-01-07 15:25:55,263 INFO Projecting 2048 vectors onto 114564-simplex at 4%
2023-01-07 15:25:55,934 INFO Projecting 2048 vectors onto 114564-simplex at 7%
2023-01-07 15:25:56,614 INFO Projecting 2048 vectors onto 114564-simplex at 9%
2023-01-07 15:25:57,338 INFO Projecting 2048 vectors onto 114564-simplex at 12%
2023-01-07 15:25:58,064 INFO Projecting 2048 vectors onto 114564-simplex at 14%
2023-01-07 15:25:58,778 INFO Projecting 2048 vectors onto 114564-simplex at 17%
2023-01-07 15:25:59,497 INFO Projecting 2048 vectors onto 114564-simplex at 19%
2023-01-07 15:26:00,222 INFO Projecting 2048 vectors onto 114564-simplex at 21%
2023-01-07 15:26:00,958 INFO Projecting 2048 vectors onto 114564-simplex at 24%
2023-01-07 15:26:01,885 INFO Projecting 2048 vectors onto 114564-simplex at 26%
2023-01-07 15:26:02,586 INFO Projecting 2048 vectors onto 114564-simplex at 29%
2023-01-07 15:26:03,279 INFO Projecting 2048 vectors onto 114564-simplex at 31%
2023-01-07 15:26:03,956 INFO Projecting 2048 vectors onto 114564-simplex at 34%
2023-01-07 15:26:04,640 INFO Projecting 2048 vectors onto 114564-simplex at 36%
2023-01-07 15:26:05,337 INFO Projecting 2048 vectors onto 114564-simplex at 39%
2023-01-07 15:26:06,036 INFO Projecting 2048 vectors onto 114564-simplex at 41%
2023-01-07 15:26:06,824 INFO Projecting 2048 vectors onto 114564-simplex at 43%
2023-01-07 15:26:07,562 INFO Projecting 2048 vectors onto 114564-simplex at 46%
2023-01-07 15:26:08,256 INFO Projecting 2048 vectors onto 114564-simplex at 48%
2023-01-07 15:26:09,140 INFO Projecting 2048 vectors onto 114564-simplex at 51%
2023-01-07 15:26:09,862 INFO Projecting 2048 vectors onto 114564-simplex at 53%
2023-01-07 15:26:10,593 INFO Projecting 2048 vectors onto 114564-simplex at 56%
2023-01-07 15:26:11,268 INFO Projecting 2048 vectors onto 114564-simplex at 58%
2023-01-07 15:26:11,956 INFO Projecting 2048 vectors onto 114564-simplex at 61%
2023-01-07 15:26:12,636 INFO Projecting 2048 vectors onto 114564-simplex at 63%
2023-01-07 15:26:13,315 INFO Projecting 2048 vectors onto 114564-simplex at 65%
2023-01-07 15:26:13,996 INFO Projecting 2048 vectors onto 114564-simplex at 68%
2023-01-07 15:26:14,678 INFO Projecting 2048 vectors onto 114564-simplex at 70%
2023-01-07 15:26:15,391 INFO Projecting 2048 vectors onto 114564-simplex at 73%
2023-01-07 15:26:16,357 INFO Projecting 2048 vectors onto 114564-simplex at 75%
2023-01-07 15:26:17,077 INFO Projecting 2048 vectors onto 114564-simplex at 78%
2023-01-07 15:26:17,795 INFO Projecting 2048 vectors onto 114564-simplex at 80%
2023-01-07 15:26:18,489 INFO Projecting 2048 vectors onto 114564-simplex at 83%
2023-01-07 15:26:19,198 INFO Projecting 2048 vectors onto 114564-simplex at 85%
2023-01-07 15:26:19,932 INFO Projecting 2048 vectors onto 114564-simplex at 87%
2023-01-07 15:26:20,644 INFO Projecting 2048 vectors onto 114564-simplex at 90%
2023-01-07 15:26:21,354 INFO Projecting 2048 vectors onto 114564-simplex at 92%
2023-01-07 15:26:22,098 INFO Projecting 2048 vectors onto 114564-simplex at 95%
2023-01-07 15:26:22,986 INFO Projecting 2048 vectors onto 114564-simplex at 97%
2023-01-07 15:26:23,785 INFO Projecting 2048 vectors onto 114564-simplex at 100%
2023-01-07 15:26:25,737 INFO Computing 50 means of 486 points in at most 20 steps...
2023-01-07 15:26:25,842 INFO Computing 2048 means at 2%
2023-01-07 15:26:25,929 INFO Computing 50 means of 464 points in at most 20 steps...
2023-01-07 15:26:26,021 INFO Computing 2048 means at 4%
2023-01-07 15:26:26,105 INFO Computing 50 means of 482 points in at most 20 steps...
2023-01-07 15:26:26,203 INFO Computing 2048 means at 7%
2023-01-07 15:26:26,294 INFO Computing 50 means of 466 points in at most 20 steps...
2023-01-07 15:26:26,385 INFO Computing 2048 means at 9%
2023-01-07 15:26:26,472 INFO Computing 50 means of 493 points in at most 20 steps...
2023-01-07 15:26:26,586 INFO Computing 2048 means at 12%
2023-01-07 15:26:26,680 INFO Computing 50 means of 483 points in at most 20 steps...
2023-01-07 15:26:26,800 INFO Computing 2048 means at 14%
2023-01-07 15:26:26,904 INFO Computing 50 means of 493 points in at most 20 steps...
2023-01-07 15:26:27,002 INFO Computing 2048 means at 17%
2023-01-07 15:26:27,105 INFO Computing 50 means of 481 points in at most 20 steps...
2023-01-07 15:26:27,196 INFO Computing 2048 means at 19%
2023-01-07 15:26:27,278 INFO Computing 50 means of 482 points in at most 20 steps...
2023-01-07 15:26:27,370 INFO Computing 2048 means at 21%
2023-01-07 15:26:27,463 INFO Computing 50 means of 480 points in at most 20 steps...
2023-01-07 15:26:27,573 INFO Computing 2048 means at 24%
2023-01-07 15:26:27,663 INFO Computing 50 means of 494 points in at most 20 steps...
2023-01-07 15:26:27,757 INFO Computing 2048 means at 26%
2023-01-07 15:26:27,848 INFO Computing 50 means of 487 points in at most 20 steps...
2023-01-07 15:26:27,936 INFO Computing 2048 means at 29%
2023-01-07 15:26:28,017 INFO Computing 50 means of 490 points in at most 20 steps...
2023-01-07 15:26:28,138 INFO Computing 2048 means at 31%
2023-01-07 15:26:28,219 INFO Computing 50 means of 500 points in at most 20 steps...
2023-01-07 15:26:28,319 INFO Computing 2048 means at 34%
2023-01-07 15:26:28,409 INFO Computing 50 means of 476 points in at most 20 steps...
2023-01-07 15:26:28,496 INFO Computing 2048 means at 36%
2023-01-07 15:26:28,578 INFO Computing 50 means of 480 points in at most 20 steps...
2023-01-07 15:26:28,661 INFO Computing 2048 means at 39%
2023-01-07 15:26:28,742 INFO Computing 50 means of 455 points in at most 20 steps...
2023-01-07 15:26:28,818 INFO Computing 2048 means at 41%
2023-01-07 15:26:28,898 INFO Computing 50 means of 453 points in at most 20 steps...
2023-01-07 15:26:28,982 INFO Computing 2048 means at 43%
2023-01-07 15:26:29,064 INFO Computing 50 means of 476 points in at most 20 steps...
2023-01-07 15:26:29,150 INFO Computing 2048 means at 46%
2023-01-07 15:26:29,234 INFO Computing 50 means of 483 points in at most 20 steps...
2023-01-07 15:26:29,323 INFO Computing 2048 means at 48%
2023-01-07 15:26:29,415 INFO Computing 50 means of 479 points in at most 20 steps...
2023-01-07 15:26:29,503 INFO Computing 2048 means at 51%
2023-01-07 15:26:29,585 INFO Computing 50 means of 509 points in at most 20 steps...
2023-01-07 15:26:29,678 INFO Computing 2048 means at 53%
2023-01-07 15:26:29,760 INFO Computing 50 means of 475 points in at most 20 steps...
2023-01-07 15:26:29,848 INFO Computing 2048 means at 56%
2023-01-07 15:26:29,929 INFO Computing 50 means of 479 points in at most 20 steps...
2023-01-07 15:26:30,021 INFO Computing 2048 means at 58%
2023-01-07 15:26:30,101 INFO Computing 50 means of 476 points in at most 20 steps...
2023-01-07 15:26:30,180 INFO Computing 2048 means at 61%
2023-01-07 15:26:30,264 INFO Computing 50 means of 488 points in at most 20 steps...
2023-01-07 15:26:30,360 INFO Computing 2048 means at 63%
2023-01-07 15:26:30,450 INFO Computing 50 means of 492 points in at most 20 steps...
2023-01-07 15:26:30,569 INFO Computing 2048 means at 65%
2023-01-07 15:26:30,662 INFO Computing 50 means of 477 points in at most 20 steps...
2023-01-07 15:26:30,755 INFO Computing 2048 means at 68%
2023-01-07 15:26:30,841 INFO Computing 50 means of 479 points in at most 20 steps...
2023-01-07 15:26:30,938 INFO Computing 2048 means at 70%
2023-01-07 15:26:31,024 INFO Computing 50 means of 490 points in at most 20 steps...
2023-01-07 15:26:31,134 INFO Computing 2048 means at 73%
2023-01-07 15:26:31,263 INFO Computing 50 means of 499 points in at most 20 steps...
2023-01-07 15:26:31,373 INFO Computing 2048 means at 75%
2023-01-07 15:26:31,468 INFO Computing 50 means of 486 points in at most 20 steps...
2023-01-07 15:26:31,568 INFO Computing 2048 means at 78%
2023-01-07 15:26:31,655 INFO Computing 50 means of 490 points in at most 20 steps...
2023-01-07 15:26:31,814 INFO Computing 2048 means at 80%
2023-01-07 15:26:31,923 INFO Computing 50 means of 494 points in at most 20 steps...
2023-01-07 15:26:32,027 INFO Computing 2048 means at 83%
2023-01-07 15:26:32,114 INFO Computing 50 means of 519 points in at most 20 steps...
2023-01-07 15:26:32,209 INFO Computing 2048 means at 85%
2023-01-07 15:26:32,292 INFO Computing 50 means of 490 points in at most 20 steps...
2023-01-07 15:26:32,386 INFO Computing 2048 means at 87%
2023-01-07 15:26:32,470 INFO Computing 50 means of 506 points in at most 20 steps...
2023-01-07 15:26:32,564 INFO Computing 2048 means at 90%
2023-01-07 15:26:32,650 INFO Computing 50 means of 490 points in at most 20 steps...
2023-01-07 15:26:32,748 INFO Computing 2048 means at 92%
2023-01-07 15:26:32,837 INFO Computing 50 means of 501 points in at most 20 steps...
2023-01-07 15:26:32,930 INFO Computing 2048 means at 95%
2023-01-07 15:26:33,016 INFO Computing 50 means of 486 points in at most 20 steps...
2023-01-07 15:26:33,111 INFO Computing 2048 means at 97%
2023-01-07 15:26:33,198 INFO Computing 48 means of 466 points in at most 20 steps...
2023-01-07 15:26:33,285 INFO Computing 2048 means at 100%
2023-01-07 15:26:39,458 INFO Do vol update step
2023-01-07 15:26:39,459 INFO Compute adjoint forward mapping on the images
2023-01-07 15:26:41,502 DEBUG Corresponding type is already complex complex128.
2023-01-07 15:26:46,055 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2023-01-07 15:26:46,077 INFO Computing adjoint forward mappings from 2048 rotations at 50%
2023-01-07 15:26:48,258 DEBUG Corresponding type is already complex complex128.
2023-01-07 15:26:51,849 INFO Determined adjoint mappings. Shape = (91, 91, 91)
2023-01-07 15:26:51,864 INFO Computing adjoint forward mappings from 2048 rotations at 100%
2023-01-07 15:26:52,934 DEBUG Corresponding type is already real float64.
2023-01-07 15:26:52,936 DEBUG anufft passed real_type for signal, converting
2023-01-07 15:27:00,403 INFO Computing kernel from 2048 rotations at 50%
2023-01-07 15:27:01,359 DEBUG Corresponding type is already real float64.
2023-01-07 15:27:01,359 DEBUG anufft passed real_type for signal, converting
2023-01-07 15:27:08,643 INFO Computing kernel from 2048 rotations at 100%
2023-01-07 15:27:08,644 INFO Computing non-centered Fourier Transform
2023-01-07 15:27:08,820 INFO Add ramp filter regularisation
2023-01-07 15:29:02,108 INFO Start Postprocessing
2023-01-07 15:29:02,111 INFO Postprocessing started
2023-01-07 15:29:34,343 DEBUG locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f75df19fc18>
2023-01-07 15:29:34,344 DEBUG Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f75df19fc18> on colorbar
2023-01-07 15:29:34,344 DEBUG Setting pcolormesh
2023-01-07 15:29:34,385 DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0.
2023-01-07 15:29:34,387 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,387 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,387 DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,387 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,387 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,387 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2023-01-07 15:29:34,387 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,387 DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,388 DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,388 DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,388 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2023-01-07 15:29:34,388 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,388 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,388 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,388 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,388 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-07 15:29:34,388 DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,388 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,388 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,388 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,388 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,388 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,389 DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,389 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-07 15:29:34,389 DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,389 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,389 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,389 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,389 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,389 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,389 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,389 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2023-01-07 15:29:34,389 DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,389 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2023-01-07 15:29:34,389 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,389 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,389 DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,389 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,389 DEBUG findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,390 DEBUG findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,390 DEBUG findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,390 DEBUG findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,390 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,390 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,390 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,390 DEBUG findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,390 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2023-01-07 15:29:34,390 DEBUG findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,390 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,390 DEBUG findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,390 DEBUG findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,390 DEBUG findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2023-01-07 15:29:34,390 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,390 DEBUG findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,390 DEBUG findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,390 DEBUG findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,391 DEBUG findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,391 DEBUG findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2023-01-07 15:29:34,391 DEBUG findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,391 DEBUG findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,391 DEBUG findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,391 DEBUG findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,391 DEBUG findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,391 DEBUG findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,391 DEBUG findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,391 DEBUG findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,391 DEBUG findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,391 DEBUG findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,391 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2023-01-07 15:29:34,391 DEBUG findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,391 DEBUG findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,391 DEBUG findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,391 DEBUG findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,391 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,392 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,392 DEBUG findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,392 DEBUG findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,392 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,392 DEBUG findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,392 DEBUG findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,392 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,392 DEBUG findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,392 DEBUG findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,392 DEBUG findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,392 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,392 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,392 DEBUG findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,392 DEBUG findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,392 DEBUG findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,392 DEBUG findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,392 DEBUG findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,392 DEBUG findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2023-01-07 15:29:34,393 DEBUG findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,393 DEBUG findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2023-01-07 15:29:34,393 DEBUG findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,393 DEBUG findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,393 DEBUG findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,393 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2023-01-07 15:29:34,393 DEBUG findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,393 DEBUG findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,393 DEBUG findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,393 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,393 DEBUG findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,393 DEBUG findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,393 DEBUG findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,393 DEBUG findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,393 DEBUG findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
2023-01-07 15:29:34,393 DEBUG findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,393 DEBUG findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,393 DEBUG findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,393 DEBUG findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,394 DEBUG findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,394 DEBUG findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,394 DEBUG findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,394 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,394 DEBUG findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,394 DEBUG findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,394 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,394 DEBUG findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,394 DEBUG findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,394 DEBUG findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,394 DEBUG findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,394 DEBUG findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,394 DEBUG findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,394 DEBUG findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,394 DEBUG findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,394 DEBUG findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,394 DEBUG findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,395 DEBUG findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,395 DEBUG findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,395 DEBUG findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,395 DEBUG findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,395 DEBUG findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,395 DEBUG findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,395 DEBUG findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,395 DEBUG findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,395 DEBUG findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,395 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,395 DEBUG findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,395 DEBUG findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,395 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,395 DEBUG findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,395 DEBUG findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,395 DEBUG findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,395 DEBUG findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,395 DEBUG findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,396 DEBUG findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,396 DEBUG findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,396 DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,396 DEBUG findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,396 DEBUG findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,396 DEBUG findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,396 DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,396 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2023-01-07 15:29:34,396 DEBUG findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,396 DEBUG findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,396 DEBUG findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,396 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,396 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,396 DEBUG findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,396 DEBUG findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,396 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,396 DEBUG findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,396 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,397 DEBUG findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,397 DEBUG findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,397 DEBUG findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,397 DEBUG findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,397 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,397 DEBUG findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,397 DEBUG findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,397 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,397 DEBUG findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,397 DEBUG findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2023-01-07 15:29:34,397 DEBUG findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,397 DEBUG findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,397 DEBUG findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,397 DEBUG findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,397 DEBUG findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,397 DEBUG findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,397 DEBUG findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,397 DEBUG findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,397 DEBUG findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,398 DEBUG findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,398 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2023-01-07 15:29:34,398 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2023-01-07 15:29:34,398 DEBUG findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,398 DEBUG findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,398 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,398 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,398 DEBUG findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,398 DEBUG findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,398 DEBUG findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2023-01-07 15:29:34,398 DEBUG findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2023-01-07 15:29:34,398 DEBUG findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,398 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,398 DEBUG findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,398 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,398 DEBUG findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2023-01-07 15:29:34,398 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,398 DEBUG findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,399 DEBUG findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,399 DEBUG findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,399 DEBUG findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,399 DEBUG findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,399 DEBUG findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,399 DEBUG findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,399 DEBUG findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,399 DEBUG findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,399 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2023-01-07 15:29:34,399 DEBUG findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2023-01-07 15:29:34,399 DEBUG findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,399 DEBUG findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,399 DEBUG findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,399 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,399 DEBUG findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2023-01-07 15:29:34,399 DEBUG findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,399 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,399 DEBUG findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,400 DEBUG findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,400 DEBUG findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,400 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,400 DEBUG findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,400 DEBUG findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,400 DEBUG findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,400 DEBUG findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,400 DEBUG findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,400 DEBUG findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,400 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,400 DEBUG findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,400 DEBUG findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,400 DEBUG findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,400 DEBUG findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,400 DEBUG findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2023-01-07 15:29:34,400 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2023-01-07 15:29:34,400 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,400 DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,401 DEBUG findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,401 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2023-01-07 15:29:34,401 DEBUG findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,401 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,401 DEBUG findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,401 DEBUG findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,401 DEBUG findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,401 DEBUG findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,401 DEBUG findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,401 DEBUG findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,401 DEBUG findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,401 DEBUG findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,401 DEBUG findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,401 DEBUG findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,401 DEBUG findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,401 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2023-01-07 15:29:34,401 DEBUG findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,401 DEBUG findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,402 DEBUG findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,402 DEBUG findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,402 DEBUG findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,402 DEBUG findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,402 DEBUG findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,402 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2023-01-07 15:29:34,402 DEBUG findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,402 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2023-01-07 15:29:34,402 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,402 DEBUG findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,402 DEBUG findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,402 DEBUG findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,402 DEBUG findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,402 DEBUG findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,402 DEBUG findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,402 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,402 DEBUG findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,403 DEBUG findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,403 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,403 DEBUG findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,403 DEBUG findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,403 DEBUG findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,403 DEBUG findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,403 DEBUG findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,403 DEBUG findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,403 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,403 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,403 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,403 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2023-01-07 15:29:34,403 DEBUG findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,403 DEBUG findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,403 DEBUG findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,403 DEBUG findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,403 DEBUG findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,403 DEBUG findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,403 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,404 DEBUG findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,404 DEBUG findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,404 DEBUG findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,404 DEBUG findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,404 DEBUG findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,404 DEBUG findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,404 DEBUG findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,404 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,404 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,404 DEBUG findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,404 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,404 DEBUG findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,404 DEBUG findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,404 DEBUG findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,404 DEBUG findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,404 DEBUG findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,404 DEBUG findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,404 DEBUG findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,405 DEBUG findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,405 DEBUG findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,405 DEBUG findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,405 DEBUG findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,405 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,405 DEBUG findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,405 DEBUG findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,405 DEBUG findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2023-01-07 15:29:34,405 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,405 DEBUG findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2023-01-07 15:29:34,405 DEBUG findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,405 DEBUG findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,405 DEBUG findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,405 DEBUG findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,405 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,405 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,405 DEBUG findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,406 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,406 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,406 DEBUG findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,406 DEBUG findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,406 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,406 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,406 DEBUG findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,406 DEBUG findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,406 DEBUG findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,406 DEBUG findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,406 DEBUG findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,406 DEBUG findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,406 DEBUG findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2023-01-07 15:29:34,406 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,406 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,406 DEBUG findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,406 DEBUG findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,406 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,407 DEBUG findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,407 DEBUG findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,407 DEBUG findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,407 DEBUG findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,407 DEBUG findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,407 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,407 DEBUG findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,407 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,407 DEBUG findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,407 DEBUG findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,407 DEBUG findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 2.872272727272727
2023-01-07 15:29:34,407 DEBUG findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,407 DEBUG findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,407 DEBUG findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,407 DEBUG findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,407 DEBUG findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,408 DEBUG findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,408 DEBUG findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,408 DEBUG findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,408 DEBUG findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,408 DEBUG findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,408 DEBUG findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,408 DEBUG findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2023-01-07 15:29:34,408 DEBUG findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,408 DEBUG findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,408 DEBUG findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,408 DEBUG findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,408 DEBUG findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,408 DEBUG findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,408 DEBUG findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,408 DEBUG findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,408 DEBUG findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,409 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,409 DEBUG findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,409 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,409 DEBUG findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,409 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,409 DEBUG findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,409 DEBUG findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,409 DEBUG findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,409 DEBUG findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,409 DEBUG findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,409 DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0 to DejaVu Sans ('/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2023-01-07 15:29:34,424 DEBUG findfont: Matching STIXGeneral:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0.
2023-01-07 15:29:34,424 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,425 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 0.33499999999999996
2023-01-07 15:29:34,425 DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,425 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 1.335
2023-01-07 15:29:34,425 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,425 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,425 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,425 DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,425 DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,425 DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,425 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-07 15:29:34,425 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,425 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,425 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 1.05
2023-01-07 15:29:34,425 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,425 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-07 15:29:34,425 DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,425 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,425 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,425 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,426 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,426 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 0.05
2023-01-07 15:29:34,426 DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,426 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-07 15:29:34,426 DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,426 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,426 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,426 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,426 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,426 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,426 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,426 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-07 15:29:34,426 DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,426 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,426 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,426 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,427 DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,427 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,427 DEBUG findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,427 DEBUG findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,427 DEBUG findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,427 DEBUG findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,427 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 0.05
2023-01-07 15:29:34,427 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,427 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,427 DEBUG findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,427 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,427 DEBUG findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,427 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,427 DEBUG findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,428 DEBUG findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,428 DEBUG findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,428 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,428 DEBUG findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,428 DEBUG findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,428 DEBUG findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,428 DEBUG findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,428 DEBUG findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,428 DEBUG findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,428 DEBUG findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,428 DEBUG findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,428 DEBUG findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,428 DEBUG findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,428 DEBUG findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,428 DEBUG findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,428 DEBUG findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,428 DEBUG findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,429 DEBUG findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,429 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2023-01-07 15:29:34,429 DEBUG findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,429 DEBUG findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,429 DEBUG findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,429 DEBUG findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,429 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,429 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,429 DEBUG findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,429 DEBUG findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,429 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,429 DEBUG findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,429 DEBUG findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,429 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,429 DEBUG findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,429 DEBUG findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,429 DEBUG findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,429 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,429 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,429 DEBUG findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,430 DEBUG findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,430 DEBUG findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,430 DEBUG findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,430 DEBUG findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,430 DEBUG findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,430 DEBUG findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,430 DEBUG findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2023-01-07 15:29:34,430 DEBUG findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,430 DEBUG findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,430 DEBUG findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,430 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2023-01-07 15:29:34,430 DEBUG findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,430 DEBUG findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,430 DEBUG findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,431 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,431 DEBUG findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,431 DEBUG findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,431 DEBUG findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,431 DEBUG findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,431 DEBUG findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,431 DEBUG findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,431 DEBUG findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,431 DEBUG findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,431 DEBUG findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,431 DEBUG findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,431 DEBUG findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,431 DEBUG findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,431 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,431 DEBUG findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,432 DEBUG findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,432 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,432 DEBUG findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,432 DEBUG findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,432 DEBUG findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,432 DEBUG findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,432 DEBUG findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,432 DEBUG findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,432 DEBUG findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,432 DEBUG findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,432 DEBUG findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,432 DEBUG findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,433 DEBUG findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,433 DEBUG findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,433 DEBUG findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,433 DEBUG findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,433 DEBUG findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,433 DEBUG findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,433 DEBUG findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,433 DEBUG findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,433 DEBUG findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,433 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,433 DEBUG findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,433 DEBUG findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,433 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,434 DEBUG findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,434 DEBUG findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,434 DEBUG findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,434 DEBUG findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,434 DEBUG findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,434 DEBUG findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,434 DEBUG findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,434 DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,434 DEBUG findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,434 DEBUG findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,434 DEBUG findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,434 DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,434 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2023-01-07 15:29:34,434 DEBUG findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,434 DEBUG findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,434 DEBUG findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,434 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,434 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,434 DEBUG findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,434 DEBUG findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,435 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,435 DEBUG findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,435 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,435 DEBUG findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,435 DEBUG findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,435 DEBUG findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,435 DEBUG findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,435 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,435 DEBUG findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,435 DEBUG findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,435 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,435 DEBUG findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,435 DEBUG findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2023-01-07 15:29:34,435 DEBUG findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,435 DEBUG findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,435 DEBUG findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,435 DEBUG findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,435 DEBUG findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,435 DEBUG findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,436 DEBUG findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,436 DEBUG findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,436 DEBUG findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,436 DEBUG findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,436 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2023-01-07 15:29:34,436 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,436 DEBUG findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,436 DEBUG findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,436 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,436 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,436 DEBUG findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,436 DEBUG findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,436 DEBUG findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,436 DEBUG findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2023-01-07 15:29:34,436 DEBUG findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,436 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,436 DEBUG findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,436 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,436 DEBUG findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,437 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,437 DEBUG findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,437 DEBUG findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,437 DEBUG findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,437 DEBUG findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,437 DEBUG findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,437 DEBUG findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,437 DEBUG findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,437 DEBUG findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,437 DEBUG findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,437 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2023-01-07 15:29:34,437 DEBUG findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2023-01-07 15:29:34,437 DEBUG findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,437 DEBUG findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,437 DEBUG findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,437 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,437 DEBUG findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2023-01-07 15:29:34,437 DEBUG findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,437 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,437 DEBUG findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,437 DEBUG findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,438 DEBUG findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,438 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,438 DEBUG findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,438 DEBUG findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,438 DEBUG findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,438 DEBUG findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,438 DEBUG findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,438 DEBUG findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,438 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,438 DEBUG findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,438 DEBUG findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,438 DEBUG findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,438 DEBUG findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,438 DEBUG findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2023-01-07 15:29:34,438 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2023-01-07 15:29:34,438 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,438 DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,438 DEBUG findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,438 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2023-01-07 15:29:34,439 DEBUG findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,439 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,439 DEBUG findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,439 DEBUG findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,439 DEBUG findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,439 DEBUG findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,439 DEBUG findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,439 DEBUG findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,439 DEBUG findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,439 DEBUG findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,439 DEBUG findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,439 DEBUG findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,439 DEBUG findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,440 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2023-01-07 15:29:34,440 DEBUG findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,440 DEBUG findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,440 DEBUG findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,440 DEBUG findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,440 DEBUG findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,440 DEBUG findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,441 DEBUG findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,441 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2023-01-07 15:29:34,441 DEBUG findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,441 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2023-01-07 15:29:34,441 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 0.33499999999999996
2023-01-07 15:29:34,441 DEBUG findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,441 DEBUG findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,441 DEBUG findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,441 DEBUG findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,441 DEBUG findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,441 DEBUG findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,441 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,441 DEBUG findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,442 DEBUG findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,442 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,442 DEBUG findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,442 DEBUG findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,442 DEBUG findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,442 DEBUG findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,442 DEBUG findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,442 DEBUG findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,442 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,442 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,442 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,442 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2023-01-07 15:29:34,442 DEBUG findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,442 DEBUG findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,442 DEBUG findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,442 DEBUG findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,442 DEBUG findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,442 DEBUG findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,443 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,443 DEBUG findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,443 DEBUG findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,443 DEBUG findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,443 DEBUG findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,443 DEBUG findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,443 DEBUG findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,443 DEBUG findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,443 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,443 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,443 DEBUG findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,443 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,443 DEBUG findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,443 DEBUG findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,443 DEBUG findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,443 DEBUG findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,443 DEBUG findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,443 DEBUG findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,443 DEBUG findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,443 DEBUG findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,444 DEBUG findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,444 DEBUG findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,444 DEBUG findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,444 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,444 DEBUG findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,444 DEBUG findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,444 DEBUG findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2023-01-07 15:29:34,444 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,444 DEBUG findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,444 DEBUG findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,444 DEBUG findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,444 DEBUG findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,444 DEBUG findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,444 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,444 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,444 DEBUG findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,444 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,444 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,444 DEBUG findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,445 DEBUG findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,445 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 1.05
2023-01-07 15:29:34,445 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,445 DEBUG findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,445 DEBUG findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,445 DEBUG findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,445 DEBUG findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,445 DEBUG findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,445 DEBUG findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,445 DEBUG findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2023-01-07 15:29:34,445 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,445 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,445 DEBUG findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,445 DEBUG findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,445 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,445 DEBUG findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,445 DEBUG findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,445 DEBUG findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,445 DEBUG findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,445 DEBUG findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,446 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,446 DEBUG findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,446 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 1.335
2023-01-07 15:29:34,446 DEBUG findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,446 DEBUG findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,446 DEBUG findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,446 DEBUG findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,446 DEBUG findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,446 DEBUG findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,446 DEBUG findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,446 DEBUG findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,446 DEBUG findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,446 DEBUG findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,446 DEBUG findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,446 DEBUG findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,446 DEBUG findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,446 DEBUG findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,446 DEBUG findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2023-01-07 15:29:34,447 DEBUG findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,447 DEBUG findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,447 DEBUG findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,447 DEBUG findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,447 DEBUG findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,447 DEBUG findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,447 DEBUG findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,447 DEBUG findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,447 DEBUG findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,447 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,447 DEBUG findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,447 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,447 DEBUG findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,447 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,447 DEBUG findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,447 DEBUG findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,447 DEBUG findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,447 DEBUG findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,447 DEBUG findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,447 DEBUG findfont: Matching STIXGeneral:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0 to STIXGeneral ('/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf') with score of 0.050000.
2023-01-07 15:29:34,448 DEBUG findfont: Matching STIXGeneral:style=italic:variant=normal:weight=normal:stretch=normal:size=18.0.
2023-01-07 15:29:34,448 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,448 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 1.335
2023-01-07 15:29:34,449 DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,449 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 0.33499999999999996
2023-01-07 15:29:34,449 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,449 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,449 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,449 DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,449 DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,449 DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,449 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-01-07 15:29:34,449 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,449 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,449 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 0.05
2023-01-07 15:29:34,449 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 10.335
2023-01-07 15:29:34,449 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-01-07 15:29:34,449 DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,449 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 10.05
2023-01-07 15:29:34,449 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,449 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,449 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,450 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 1.05
2023-01-07 15:29:34,450 DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,450 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-01-07 15:29:34,450 DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,450 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,450 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 10.05
2023-01-07 15:29:34,450 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,450 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,450 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,450 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,450 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-01-07 15:29:34,450 DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,450 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,450 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-01-07 15:29:34,450 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,450 DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,450 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,450 DEBUG findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,451 DEBUG findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,451 DEBUG findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,451 DEBUG findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,451 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 1.05
2023-01-07 15:29:34,451 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,451 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,451 DEBUG findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,451 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 10.335
2023-01-07 15:29:34,451 DEBUG findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,451 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 10.335
2023-01-07 15:29:34,451 DEBUG findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 11.525
2023-01-07 15:29:34,451 DEBUG findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,451 DEBUG findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 10.335
2023-01-07 15:29:34,451 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,451 DEBUG findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,451 DEBUG findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,451 DEBUG findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,451 DEBUG findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,451 DEBUG findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,451 DEBUG findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,452 DEBUG findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,452 DEBUG findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,452 DEBUG findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,452 DEBUG findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,452 DEBUG findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,452 DEBUG findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,452 DEBUG findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,452 DEBUG findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,452 DEBUG findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,452 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 11.14975
2023-01-07 15:29:34,452 DEBUG findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,452 DEBUG findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,452 DEBUG findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,452 DEBUG findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,452 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,452 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 10.05
2023-01-07 15:29:34,452 DEBUG findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,453 DEBUG findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,453 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,453 DEBUG findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,453 DEBUG findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,453 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,453 DEBUG findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,453 DEBUG findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,453 DEBUG findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,453 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,453 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,453 DEBUG findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,453 DEBUG findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,453 DEBUG findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,453 DEBUG findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,453 DEBUG findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,453 DEBUG findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,453 DEBUG findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,453 DEBUG findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 11.43
2023-01-07 15:29:34,453 DEBUG findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,454 DEBUG findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,454 DEBUG findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,454 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 10.14975
2023-01-07 15:29:34,454 DEBUG findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,454 DEBUG findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,454 DEBUG findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,454 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,454 DEBUG findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 11.145
2023-01-07 15:29:34,454 DEBUG findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,454 DEBUG findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,454 DEBUG findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,454 DEBUG findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,454 DEBUG findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,454 DEBUG findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 10.05
2023-01-07 15:29:34,454 DEBUG findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 11.145
2023-01-07 15:29:34,454 DEBUG findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,454 DEBUG findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,454 DEBUG findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 11.525
2023-01-07 15:29:34,454 DEBUG findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,455 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,455 DEBUG findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,455 DEBUG findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,455 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,455 DEBUG findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,455 DEBUG findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 11.145
2023-01-07 15:29:34,455 DEBUG findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,455 DEBUG findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,455 DEBUG findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,455 DEBUG findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 10.05
2023-01-07 15:29:34,455 DEBUG findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,455 DEBUG findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,455 DEBUG findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,455 DEBUG findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,455 DEBUG findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,455 DEBUG findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,455 DEBUG findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,455 DEBUG findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,456 DEBUG findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 11.145
2023-01-07 15:29:34,456 DEBUG findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,456 DEBUG findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,456 DEBUG findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,456 DEBUG findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,456 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 11.145
2023-01-07 15:29:34,456 DEBUG findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,456 DEBUG findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,456 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 11.525
2023-01-07 15:29:34,456 DEBUG findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,456 DEBUG findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,456 DEBUG findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,456 DEBUG findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,456 DEBUG findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,456 DEBUG findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,456 DEBUG findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,456 DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,456 DEBUG findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 10.05
2023-01-07 15:29:34,456 DEBUG findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,456 DEBUG findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,456 DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,457 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 10.535
2023-01-07 15:29:34,457 DEBUG findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,457 DEBUG findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,457 DEBUG findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,457 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,457 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,457 DEBUG findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,457 DEBUG findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,457 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,457 DEBUG findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,457 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 11.145
2023-01-07 15:29:34,457 DEBUG findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,457 DEBUG findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,457 DEBUG findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,457 DEBUG findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,457 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,457 DEBUG findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,457 DEBUG findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,457 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,458 DEBUG findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,458 DEBUG findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 11.42525
2023-01-07 15:29:34,458 DEBUG findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,458 DEBUG findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,458 DEBUG findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,458 DEBUG findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,458 DEBUG findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,458 DEBUG findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,458 DEBUG findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,458 DEBUG findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,458 DEBUG findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 11.145
2023-01-07 15:29:34,458 DEBUG findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,458 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 11.43
2023-01-07 15:29:34,458 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,458 DEBUG findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,458 DEBUG findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,458 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 10.335
2023-01-07 15:29:34,458 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,459 DEBUG findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,459 DEBUG findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,459 DEBUG findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,459 DEBUG findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 11.25
2023-01-07 15:29:34,459 DEBUG findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,459 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,459 DEBUG findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 10.05
2023-01-07 15:29:34,459 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,459 DEBUG findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 10.05
2023-01-07 15:29:34,459 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,459 DEBUG findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,459 DEBUG findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,459 DEBUG findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,459 DEBUG findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,459 DEBUG findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,459 DEBUG findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 10.05
2023-01-07 15:29:34,459 DEBUG findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,459 DEBUG findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 11.525
2023-01-07 15:29:34,459 DEBUG findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,459 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 11.1925
2023-01-07 15:29:34,460 DEBUG findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 11.535
2023-01-07 15:29:34,460 DEBUG findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,460 DEBUG findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,460 DEBUG findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,460 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 10.05
2023-01-07 15:29:34,460 DEBUG findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 11.62
2023-01-07 15:29:34,460 DEBUG findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,460 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,460 DEBUG findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,460 DEBUG findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,460 DEBUG findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,460 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,460 DEBUG findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,460 DEBUG findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,460 DEBUG findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 11.525
2023-01-07 15:29:34,461 DEBUG findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,461 DEBUG findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,461 DEBUG findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,461 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,461 DEBUG findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,461 DEBUG findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,461 DEBUG findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,461 DEBUG findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,461 DEBUG findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 11.535
2023-01-07 15:29:34,461 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 11.25
2023-01-07 15:29:34,461 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,462 DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 11.525
2023-01-07 15:29:34,462 DEBUG findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,462 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 11.24
2023-01-07 15:29:34,462 DEBUG findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,462 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,462 DEBUG findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,462 DEBUG findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,462 DEBUG findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,462 DEBUG findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,462 DEBUG findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,462 DEBUG findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,463 DEBUG findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,463 DEBUG findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 10.05
2023-01-07 15:29:34,463 DEBUG findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,463 DEBUG findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,463 DEBUG findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,463 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 11.24
2023-01-07 15:29:34,463 DEBUG findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,463 DEBUG findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,463 DEBUG findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,463 DEBUG findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,464 DEBUG findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,464 DEBUG findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,464 DEBUG findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,464 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 11.335
2023-01-07 15:29:34,464 DEBUG findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,464 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 11.535
2023-01-07 15:29:34,464 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 1.335
2023-01-07 15:29:34,464 DEBUG findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,464 DEBUG findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,464 DEBUG findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,464 DEBUG findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,464 DEBUG findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,464 DEBUG findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,464 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,464 DEBUG findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,464 DEBUG findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 11.145
2023-01-07 15:29:34,464 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,464 DEBUG findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,464 DEBUG findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,465 DEBUG findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,465 DEBUG findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,465 DEBUG findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,465 DEBUG findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,465 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,465 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 10.05
2023-01-07 15:29:34,465 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,465 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 10.25
2023-01-07 15:29:34,465 DEBUG findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,465 DEBUG findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,465 DEBUG findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,465 DEBUG findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,465 DEBUG findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,465 DEBUG findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,465 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 10.335
2023-01-07 15:29:34,465 DEBUG findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,465 DEBUG findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,465 DEBUG findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 11.145
2023-01-07 15:29:34,466 DEBUG findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,466 DEBUG findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,466 DEBUG findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,466 DEBUG findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,466 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 11.145
2023-01-07 15:29:34,466 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,466 DEBUG findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,466 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,466 DEBUG findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,466 DEBUG findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,466 DEBUG findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,466 DEBUG findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,466 DEBUG findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,466 DEBUG findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,466 DEBUG findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,466 DEBUG findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,466 DEBUG findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,466 DEBUG findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,466 DEBUG findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,466 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,467 DEBUG findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,467 DEBUG findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,467 DEBUG findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 11.335
2023-01-07 15:29:34,467 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,467 DEBUG findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 10.05
2023-01-07 15:29:34,467 DEBUG findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,467 DEBUG findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,467 DEBUG findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,467 DEBUG findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,467 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,467 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 10.335
2023-01-07 15:29:34,467 DEBUG findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,467 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,467 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,467 DEBUG findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,467 DEBUG findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,467 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 0.05
2023-01-07 15:29:34,467 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,467 DEBUG findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,468 DEBUG findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,468 DEBUG findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,468 DEBUG findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,468 DEBUG findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,468 DEBUG findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,468 DEBUG findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 10.62
2023-01-07 15:29:34,468 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,468 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,468 DEBUG findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,468 DEBUG findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,468 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,468 DEBUG findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,468 DEBUG findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,468 DEBUG findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,468 DEBUG findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,468 DEBUG findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,468 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,468 DEBUG findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,468 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 0.33499999999999996
2023-01-07 15:29:34,468 DEBUG findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,469 DEBUG findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,469 DEBUG findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 11.145
2023-01-07 15:29:34,469 DEBUG findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,469 DEBUG findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,469 DEBUG findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,469 DEBUG findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,469 DEBUG findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 11.145
2023-01-07 15:29:34,469 DEBUG findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,469 DEBUG findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,469 DEBUG findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,469 DEBUG findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 11.145
2023-01-07 15:29:34,469 DEBUG findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 11.525
2023-01-07 15:29:34,469 DEBUG findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,469 DEBUG findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 11.1925
2023-01-07 15:29:34,469 DEBUG findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,469 DEBUG findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,469 DEBUG findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,469 DEBUG findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,469 DEBUG findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,469 DEBUG findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,470 DEBUG findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,470 DEBUG findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,470 DEBUG findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,470 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 10.335
2023-01-07 15:29:34,470 DEBUG findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,470 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,470 DEBUG findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,470 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,470 DEBUG findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 11.525
2023-01-07 15:29:34,470 DEBUG findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,470 DEBUG findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,470 DEBUG findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,470 DEBUG findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,470 DEBUG findfont: Matching STIXGeneral:style=italic:variant=normal:weight=normal:stretch=normal:size=18.0 to STIXGeneral ('/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf') with score of 0.050000.
2023-01-07 15:29:34,471 DEBUG findfont: Matching STIXGeneral:style=normal:variant=normal:weight=bold:stretch=normal:size=18.0.
2023-01-07 15:29:34,471 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,471 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 0.05
2023-01-07 15:29:34,471 DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,471 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 1.05
2023-01-07 15:29:34,471 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,471 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,471 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,472 DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,472 DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,472 DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,472 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-01-07 15:29:34,472 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,472 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,472 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 1.335
2023-01-07 15:29:34,472 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.05
2023-01-07 15:29:34,472 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-01-07 15:29:34,472 DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,472 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.335
2023-01-07 15:29:34,472 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,472 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,472 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,472 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 0.33499999999999996
2023-01-07 15:29:34,472 DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,472 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-01-07 15:29:34,473 DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,473 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,473 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.335
2023-01-07 15:29:34,473 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,473 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,473 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,473 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,473 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-01-07 15:29:34,473 DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,473 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,473 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-01-07 15:29:34,473 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,473 DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,473 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,474 DEBUG findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,474 DEBUG findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,474 DEBUG findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,474 DEBUG findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,474 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 0.33499999999999996
2023-01-07 15:29:34,474 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,474 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,474 DEBUG findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,474 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 11.05
2023-01-07 15:29:34,474 DEBUG findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,474 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.05
2023-01-07 15:29:34,474 DEBUG findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.24
2023-01-07 15:29:34,474 DEBUG findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,474 DEBUG findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 11.05
2023-01-07 15:29:34,474 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,474 DEBUG findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,474 DEBUG findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,474 DEBUG findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,474 DEBUG findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,474 DEBUG findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,475 DEBUG findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,475 DEBUG findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,475 DEBUG findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,475 DEBUG findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,475 DEBUG findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,475 DEBUG findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,475 DEBUG findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,475 DEBUG findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,475 DEBUG findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,475 DEBUG findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,475 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.43475
2023-01-07 15:29:34,475 DEBUG findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,475 DEBUG findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,475 DEBUG findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,475 DEBUG findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,475 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,475 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.335
2023-01-07 15:29:34,475 DEBUG findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,475 DEBUG findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,476 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,476 DEBUG findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,476 DEBUG findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,476 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,476 DEBUG findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,476 DEBUG findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,476 DEBUG findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,476 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,476 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,476 DEBUG findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,476 DEBUG findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,476 DEBUG findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,476 DEBUG findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,476 DEBUG findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,476 DEBUG findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,476 DEBUG findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,476 DEBUG findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.715
2023-01-07 15:29:34,476 DEBUG findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,476 DEBUG findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,476 DEBUG findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,477 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.43475
2023-01-07 15:29:34,477 DEBUG findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,477 DEBUG findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,477 DEBUG findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,477 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,477 DEBUG findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.43
2023-01-07 15:29:34,477 DEBUG findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,477 DEBUG findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,477 DEBUG findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,477 DEBUG findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,477 DEBUG findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,477 DEBUG findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.335
2023-01-07 15:29:34,477 DEBUG findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.43
2023-01-07 15:29:34,477 DEBUG findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,477 DEBUG findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,477 DEBUG findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.24
2023-01-07 15:29:34,477 DEBUG findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,477 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,477 DEBUG findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,477 DEBUG findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,478 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,478 DEBUG findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,478 DEBUG findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.43
2023-01-07 15:29:34,478 DEBUG findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,478 DEBUG findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,478 DEBUG findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,478 DEBUG findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.335
2023-01-07 15:29:34,478 DEBUG findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,478 DEBUG findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,478 DEBUG findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,478 DEBUG findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,478 DEBUG findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,478 DEBUG findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,478 DEBUG findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,478 DEBUG findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,478 DEBUG findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.24
2023-01-07 15:29:34,478 DEBUG findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,478 DEBUG findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,478 DEBUG findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,479 DEBUG findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,479 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.43
2023-01-07 15:29:34,479 DEBUG findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,479 DEBUG findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,479 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.24
2023-01-07 15:29:34,479 DEBUG findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,479 DEBUG findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,479 DEBUG findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,479 DEBUG findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,479 DEBUG findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,479 DEBUG findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,479 DEBUG findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,479 DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,479 DEBUG findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.335
2023-01-07 15:29:34,479 DEBUG findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,479 DEBUG findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,479 DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,479 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.25
2023-01-07 15:29:34,479 DEBUG findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,479 DEBUG findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,480 DEBUG findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,480 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,480 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,480 DEBUG findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,480 DEBUG findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,480 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,480 DEBUG findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,480 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.43
2023-01-07 15:29:34,480 DEBUG findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,480 DEBUG findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,480 DEBUG findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,480 DEBUG findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,480 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,480 DEBUG findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,480 DEBUG findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,480 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,480 DEBUG findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,480 DEBUG findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.71025
2023-01-07 15:29:34,480 DEBUG findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,481 DEBUG findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,481 DEBUG findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,481 DEBUG findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,481 DEBUG findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,481 DEBUG findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,481 DEBUG findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,481 DEBUG findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,481 DEBUG findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.43
2023-01-07 15:29:34,481 DEBUG findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,481 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.145
2023-01-07 15:29:34,481 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,481 DEBUG findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,481 DEBUG findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,481 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.05
2023-01-07 15:29:34,481 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,481 DEBUG findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,481 DEBUG findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,481 DEBUG findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,481 DEBUG findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.535
2023-01-07 15:29:34,482 DEBUG findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,482 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,482 DEBUG findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.335
2023-01-07 15:29:34,482 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,482 DEBUG findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 11.335
2023-01-07 15:29:34,482 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,482 DEBUG findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,482 DEBUG findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,482 DEBUG findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,482 DEBUG findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,482 DEBUG findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,482 DEBUG findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.335
2023-01-07 15:29:34,482 DEBUG findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,482 DEBUG findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.24
2023-01-07 15:29:34,482 DEBUG findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,482 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.4775
2023-01-07 15:29:34,482 DEBUG findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.25
2023-01-07 15:29:34,482 DEBUG findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,482 DEBUG findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,482 DEBUG findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,483 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.335
2023-01-07 15:29:34,483 DEBUG findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.335
2023-01-07 15:29:34,483 DEBUG findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,483 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,483 DEBUG findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,483 DEBUG findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,483 DEBUG findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,483 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,483 DEBUG findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,483 DEBUG findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,483 DEBUG findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.24
2023-01-07 15:29:34,483 DEBUG findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,483 DEBUG findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,483 DEBUG findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,483 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,483 DEBUG findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,483 DEBUG findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,483 DEBUG findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,484 DEBUG findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,484 DEBUG findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.25
2023-01-07 15:29:34,484 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.535
2023-01-07 15:29:34,484 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,484 DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.24
2023-01-07 15:29:34,484 DEBUG findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,484 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.145
2023-01-07 15:29:34,484 DEBUG findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,484 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,484 DEBUG findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,484 DEBUG findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,484 DEBUG findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,484 DEBUG findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,484 DEBUG findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,484 DEBUG findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,484 DEBUG findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,484 DEBUG findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.335
2023-01-07 15:29:34,484 DEBUG findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,484 DEBUG findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,484 DEBUG findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,485 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.525
2023-01-07 15:29:34,485 DEBUG findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,485 DEBUG findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,485 DEBUG findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,485 DEBUG findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,485 DEBUG findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,485 DEBUG findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,485 DEBUG findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,485 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.62
2023-01-07 15:29:34,485 DEBUG findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,485 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.25
2023-01-07 15:29:34,485 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 0.05
2023-01-07 15:29:34,485 DEBUG findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,485 DEBUG findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,485 DEBUG findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,485 DEBUG findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,485 DEBUG findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,485 DEBUG findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,485 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,486 DEBUG findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,486 DEBUG findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.24
2023-01-07 15:29:34,486 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,486 DEBUG findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,486 DEBUG findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,486 DEBUG findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,486 DEBUG findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,486 DEBUG findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,486 DEBUG findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,486 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,486 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.335
2023-01-07 15:29:34,486 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,486 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.535
2023-01-07 15:29:34,486 DEBUG findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,486 DEBUG findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,486 DEBUG findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,486 DEBUG findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,486 DEBUG findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,486 DEBUG findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,487 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.05
2023-01-07 15:29:34,487 DEBUG findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,487 DEBUG findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,487 DEBUG findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.24
2023-01-07 15:29:34,487 DEBUG findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,487 DEBUG findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,487 DEBUG findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,487 DEBUG findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,487 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.24
2023-01-07 15:29:34,487 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,487 DEBUG findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,487 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,487 DEBUG findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,487 DEBUG findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,487 DEBUG findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,487 DEBUG findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,487 DEBUG findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,487 DEBUG findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,487 DEBUG findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,487 DEBUG findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,487 DEBUG findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,488 DEBUG findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,488 DEBUG findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,488 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,488 DEBUG findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,488 DEBUG findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,488 DEBUG findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.62
2023-01-07 15:29:34,488 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,488 DEBUG findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 11.335
2023-01-07 15:29:34,488 DEBUG findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,488 DEBUG findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,488 DEBUG findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,488 DEBUG findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,488 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,488 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.05
2023-01-07 15:29:34,488 DEBUG findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,488 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,488 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,488 DEBUG findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,488 DEBUG findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,489 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 1.335
2023-01-07 15:29:34,489 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,489 DEBUG findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,489 DEBUG findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,489 DEBUG findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,489 DEBUG findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,489 DEBUG findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,489 DEBUG findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,489 DEBUG findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.335
2023-01-07 15:29:34,489 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,489 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,489 DEBUG findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,489 DEBUG findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,489 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,489 DEBUG findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,489 DEBUG findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,489 DEBUG findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,489 DEBUG findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,489 DEBUG findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,489 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,490 DEBUG findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,490 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 1.05
2023-01-07 15:29:34,490 DEBUG findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,490 DEBUG findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,490 DEBUG findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 10.24
2023-01-07 15:29:34,490 DEBUG findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,490 DEBUG findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,490 DEBUG findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,490 DEBUG findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,490 DEBUG findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.24
2023-01-07 15:29:34,490 DEBUG findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,490 DEBUG findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,490 DEBUG findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,490 DEBUG findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.24
2023-01-07 15:29:34,490 DEBUG findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.24
2023-01-07 15:29:34,490 DEBUG findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,490 DEBUG findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.4775
2023-01-07 15:29:34,490 DEBUG findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,490 DEBUG findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,490 DEBUG findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,491 DEBUG findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,491 DEBUG findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,491 DEBUG findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,491 DEBUG findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,491 DEBUG findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,491 DEBUG findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,491 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.05
2023-01-07 15:29:34,491 DEBUG findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,491 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,491 DEBUG findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,505 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,506 DEBUG findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.24
2023-01-07 15:29:34,506 DEBUG findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,506 DEBUG findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,506 DEBUG findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,506 DEBUG findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,506 DEBUG findfont: Matching STIXGeneral:style=normal:variant=normal:weight=bold:stretch=normal:size=18.0 to STIXGeneral ('/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf') with score of 0.050000.
2023-01-07 15:29:34,506 DEBUG findfont: Matching STIXNonUnicode:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0.
2023-01-07 15:29:34,507 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,507 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,507 DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,507 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,507 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 0.05
2023-01-07 15:29:34,507 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,507 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,507 DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,507 DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,507 DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,507 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-07 15:29:34,507 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,507 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 0.33499999999999996
2023-01-07 15:29:34,507 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,507 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 1.335
2023-01-07 15:29:34,507 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-07 15:29:34,507 DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,507 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,508 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,508 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,508 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,508 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,508 DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,508 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-07 15:29:34,508 DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,508 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,508 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 1.05
2023-01-07 15:29:34,508 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,508 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,508 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,508 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,508 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-07 15:29:34,508 DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,508 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,508 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,508 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,508 DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,509 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,509 DEBUG findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,509 DEBUG findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,509 DEBUG findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,509 DEBUG findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,509 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,509 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,509 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,509 DEBUG findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,509 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,509 DEBUG findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,509 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,509 DEBUG findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,509 DEBUG findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,509 DEBUG findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,509 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,509 DEBUG findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,509 DEBUG findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,510 DEBUG findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,510 DEBUG findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,510 DEBUG findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,510 DEBUG findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,510 DEBUG findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,510 DEBUG findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,510 DEBUG findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,510 DEBUG findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,510 DEBUG findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,510 DEBUG findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,510 DEBUG findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,510 DEBUG findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,510 DEBUG findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,510 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2023-01-07 15:29:34,510 DEBUG findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,510 DEBUG findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,510 DEBUG findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,511 DEBUG findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,511 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,511 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,511 DEBUG findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,511 DEBUG findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,511 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,511 DEBUG findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,511 DEBUG findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,511 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,511 DEBUG findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,511 DEBUG findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,511 DEBUG findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,511 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,511 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,511 DEBUG findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,511 DEBUG findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,511 DEBUG findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,512 DEBUG findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,512 DEBUG findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,512 DEBUG findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,512 DEBUG findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,512 DEBUG findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2023-01-07 15:29:34,512 DEBUG findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,512 DEBUG findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,512 DEBUG findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,512 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2023-01-07 15:29:34,513 DEBUG findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,513 DEBUG findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,513 DEBUG findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,513 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,513 DEBUG findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,513 DEBUG findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,513 DEBUG findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,513 DEBUG findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,513 DEBUG findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,513 DEBUG findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,513 DEBUG findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,513 DEBUG findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,513 DEBUG findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,513 DEBUG findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,513 DEBUG findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,513 DEBUG findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,513 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 0.05
2023-01-07 15:29:34,514 DEBUG findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,514 DEBUG findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,514 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,514 DEBUG findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,514 DEBUG findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,514 DEBUG findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,514 DEBUG findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,514 DEBUG findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,514 DEBUG findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,514 DEBUG findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,514 DEBUG findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,514 DEBUG findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,514 DEBUG findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,514 DEBUG findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,514 DEBUG findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,515 DEBUG findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,515 DEBUG findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,515 DEBUG findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,515 DEBUG findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,515 DEBUG findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,515 DEBUG findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,515 DEBUG findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,515 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,515 DEBUG findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,515 DEBUG findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,515 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,515 DEBUG findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,515 DEBUG findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,515 DEBUG findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,515 DEBUG findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,515 DEBUG findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,516 DEBUG findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,516 DEBUG findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,516 DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,516 DEBUG findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,516 DEBUG findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,516 DEBUG findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,516 DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,516 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2023-01-07 15:29:34,516 DEBUG findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,516 DEBUG findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,516 DEBUG findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,516 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,516 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,516 DEBUG findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,516 DEBUG findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,516 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,516 DEBUG findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,516 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,516 DEBUG findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,517 DEBUG findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,517 DEBUG findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,517 DEBUG findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,517 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,517 DEBUG findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,517 DEBUG findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,517 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,517 DEBUG findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,517 DEBUG findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2023-01-07 15:29:34,517 DEBUG findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,517 DEBUG findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,517 DEBUG findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,517 DEBUG findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,517 DEBUG findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,517 DEBUG findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,517 DEBUG findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,517 DEBUG findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,517 DEBUG findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,517 DEBUG findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,517 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2023-01-07 15:29:34,518 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,518 DEBUG findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,518 DEBUG findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,518 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,518 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,518 DEBUG findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,518 DEBUG findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,518 DEBUG findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,518 DEBUG findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2023-01-07 15:29:34,518 DEBUG findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,518 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,518 DEBUG findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,518 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,518 DEBUG findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,518 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,518 DEBUG findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,518 DEBUG findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,518 DEBUG findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,518 DEBUG findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,519 DEBUG findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,519 DEBUG findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,519 DEBUG findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,519 DEBUG findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,519 DEBUG findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,519 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2023-01-07 15:29:34,519 DEBUG findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2023-01-07 15:29:34,519 DEBUG findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,519 DEBUG findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,519 DEBUG findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,519 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,519 DEBUG findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2023-01-07 15:29:34,519 DEBUG findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,519 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,519 DEBUG findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,519 DEBUG findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,519 DEBUG findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,519 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,519 DEBUG findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,519 DEBUG findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,520 DEBUG findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,520 DEBUG findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,520 DEBUG findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,520 DEBUG findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,520 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,520 DEBUG findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,520 DEBUG findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,520 DEBUG findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,520 DEBUG findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,520 DEBUG findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2023-01-07 15:29:34,520 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2023-01-07 15:29:34,520 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,520 DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,520 DEBUG findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,520 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2023-01-07 15:29:34,520 DEBUG findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,520 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,521 DEBUG findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,521 DEBUG findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,521 DEBUG findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,521 DEBUG findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,521 DEBUG findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,521 DEBUG findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,521 DEBUG findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,521 DEBUG findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,521 DEBUG findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,521 DEBUG findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,521 DEBUG findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,521 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2023-01-07 15:29:34,521 DEBUG findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,521 DEBUG findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,521 DEBUG findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,521 DEBUG findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,521 DEBUG findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,521 DEBUG findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,521 DEBUG findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,522 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2023-01-07 15:29:34,522 DEBUG findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,522 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2023-01-07 15:29:34,522 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,522 DEBUG findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,522 DEBUG findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,522 DEBUG findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,522 DEBUG findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,522 DEBUG findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,522 DEBUG findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,522 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,522 DEBUG findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,522 DEBUG findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,522 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,522 DEBUG findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,522 DEBUG findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,522 DEBUG findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,522 DEBUG findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,522 DEBUG findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,522 DEBUG findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,523 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,523 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 1.05
2023-01-07 15:29:34,523 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,523 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2023-01-07 15:29:34,523 DEBUG findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,523 DEBUG findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,523 DEBUG findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,523 DEBUG findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,523 DEBUG findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,523 DEBUG findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,523 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,523 DEBUG findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,523 DEBUG findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,523 DEBUG findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,523 DEBUG findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,523 DEBUG findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,523 DEBUG findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,523 DEBUG findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,523 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,524 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,524 DEBUG findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,524 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,524 DEBUG findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,524 DEBUG findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,524 DEBUG findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,524 DEBUG findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,524 DEBUG findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,524 DEBUG findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,524 DEBUG findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,524 DEBUG findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,524 DEBUG findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,524 DEBUG findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,524 DEBUG findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,524 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,524 DEBUG findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,524 DEBUG findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,524 DEBUG findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2023-01-07 15:29:34,524 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,524 DEBUG findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,525 DEBUG findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,525 DEBUG findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,525 DEBUG findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,525 DEBUG findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,525 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,525 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,525 DEBUG findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,525 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,525 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,525 DEBUG findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,525 DEBUG findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,525 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,525 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,525 DEBUG findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,525 DEBUG findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,525 DEBUG findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,525 DEBUG findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,525 DEBUG findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,525 DEBUG findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,525 DEBUG findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2023-01-07 15:29:34,526 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,526 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,526 DEBUG findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,526 DEBUG findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,526 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,526 DEBUG findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,526 DEBUG findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,526 DEBUG findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,526 DEBUG findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,526 DEBUG findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,526 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 0.33499999999999996
2023-01-07 15:29:34,526 DEBUG findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,526 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,526 DEBUG findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,526 DEBUG findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,526 DEBUG findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,526 DEBUG findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,526 DEBUG findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,526 DEBUG findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,527 DEBUG findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,527 DEBUG findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,527 DEBUG findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,527 DEBUG findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,527 DEBUG findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,527 DEBUG findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,527 DEBUG findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,527 DEBUG findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,527 DEBUG findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2023-01-07 15:29:34,527 DEBUG findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,527 DEBUG findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,527 DEBUG findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,527 DEBUG findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,527 DEBUG findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,527 DEBUG findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,527 DEBUG findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,527 DEBUG findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,527 DEBUG findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,527 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 1.335
2023-01-07 15:29:34,527 DEBUG findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,528 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,528 DEBUG findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,528 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,528 DEBUG findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,528 DEBUG findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,528 DEBUG findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,528 DEBUG findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,528 DEBUG findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,528 DEBUG findfont: Matching STIXNonUnicode:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0 to STIXNonUnicode ('/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf') with score of 0.050000.
2023-01-07 15:29:34,529 DEBUG findfont: Matching STIXNonUnicode:style=italic:variant=normal:weight=normal:stretch=normal:size=18.0.
2023-01-07 15:29:34,529 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,529 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,529 DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,529 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 10.335
2023-01-07 15:29:34,529 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 1.05
2023-01-07 15:29:34,529 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,529 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,530 DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,530 DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,530 DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,530 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-01-07 15:29:34,530 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,530 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 1.335
2023-01-07 15:29:34,530 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 10.05
2023-01-07 15:29:34,530 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 0.33499999999999996
2023-01-07 15:29:34,530 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-01-07 15:29:34,530 DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,530 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 10.05
2023-01-07 15:29:34,530 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,530 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,530 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,530 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,530 DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,530 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-01-07 15:29:34,530 DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,531 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,531 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 0.05
2023-01-07 15:29:34,531 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,531 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,531 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,531 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,531 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-01-07 15:29:34,531 DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,531 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,531 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-01-07 15:29:34,531 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,531 DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,531 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,531 DEBUG findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,531 DEBUG findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,531 DEBUG findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,531 DEBUG findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,531 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,531 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,531 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,532 DEBUG findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,532 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 10.335
2023-01-07 15:29:34,532 DEBUG findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,532 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 10.335
2023-01-07 15:29:34,532 DEBUG findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 11.525
2023-01-07 15:29:34,532 DEBUG findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,532 DEBUG findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 10.335
2023-01-07 15:29:34,532 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,532 DEBUG findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,532 DEBUG findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,532 DEBUG findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,532 DEBUG findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,532 DEBUG findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,532 DEBUG findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,532 DEBUG findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,532 DEBUG findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,532 DEBUG findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,532 DEBUG findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,533 DEBUG findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,533 DEBUG findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,533 DEBUG findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,533 DEBUG findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,533 DEBUG findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,533 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 11.14975
2023-01-07 15:29:34,533 DEBUG findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,533 DEBUG findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,533 DEBUG findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,533 DEBUG findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,533 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,533 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 10.05
2023-01-07 15:29:34,533 DEBUG findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,533 DEBUG findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,534 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,534 DEBUG findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,534 DEBUG findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,534 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,534 DEBUG findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,534 DEBUG findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,534 DEBUG findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,534 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,534 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,534 DEBUG findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,534 DEBUG findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,534 DEBUG findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,534 DEBUG findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,534 DEBUG findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,534 DEBUG findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,534 DEBUG findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,535 DEBUG findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 11.43
2023-01-07 15:29:34,535 DEBUG findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,535 DEBUG findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,535 DEBUG findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,535 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 10.14975
2023-01-07 15:29:34,535 DEBUG findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,535 DEBUG findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,535 DEBUG findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,535 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,535 DEBUG findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 11.145
2023-01-07 15:29:34,535 DEBUG findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,535 DEBUG findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,535 DEBUG findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,535 DEBUG findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,535 DEBUG findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,535 DEBUG findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 10.05
2023-01-07 15:29:34,535 DEBUG findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 11.145
2023-01-07 15:29:34,535 DEBUG findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,535 DEBUG findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,535 DEBUG findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 11.525
2023-01-07 15:29:34,535 DEBUG findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,536 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 1.05
2023-01-07 15:29:34,536 DEBUG findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,536 DEBUG findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,536 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,536 DEBUG findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,536 DEBUG findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 11.145
2023-01-07 15:29:34,536 DEBUG findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,536 DEBUG findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,536 DEBUG findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,536 DEBUG findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 10.05
2023-01-07 15:29:34,536 DEBUG findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,536 DEBUG findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,536 DEBUG findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,537 DEBUG findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,537 DEBUG findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,537 DEBUG findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,537 DEBUG findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,537 DEBUG findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,537 DEBUG findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 11.145
2023-01-07 15:29:34,537 DEBUG findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,537 DEBUG findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,537 DEBUG findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,537 DEBUG findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,537 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 11.145
2023-01-07 15:29:34,538 DEBUG findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,538 DEBUG findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,538 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 11.525
2023-01-07 15:29:34,538 DEBUG findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,538 DEBUG findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,538 DEBUG findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,538 DEBUG findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,538 DEBUG findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,538 DEBUG findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,538 DEBUG findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,538 DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,538 DEBUG findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 10.05
2023-01-07 15:29:34,538 DEBUG findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,539 DEBUG findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,539 DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,539 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 10.535
2023-01-07 15:29:34,539 DEBUG findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,539 DEBUG findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,539 DEBUG findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,539 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,539 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,539 DEBUG findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,539 DEBUG findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,539 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,539 DEBUG findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,539 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 11.145
2023-01-07 15:29:34,539 DEBUG findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,539 DEBUG findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,539 DEBUG findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,539 DEBUG findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,539 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,539 DEBUG findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,540 DEBUG findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,540 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,540 DEBUG findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,540 DEBUG findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 11.42525
2023-01-07 15:29:34,540 DEBUG findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,540 DEBUG findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,540 DEBUG findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,540 DEBUG findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,540 DEBUG findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,540 DEBUG findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,540 DEBUG findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,540 DEBUG findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,540 DEBUG findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 11.145
2023-01-07 15:29:34,540 DEBUG findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,540 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 11.43
2023-01-07 15:29:34,540 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,540 DEBUG findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,540 DEBUG findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,540 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 10.335
2023-01-07 15:29:34,541 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,541 DEBUG findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,541 DEBUG findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,541 DEBUG findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,541 DEBUG findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 11.25
2023-01-07 15:29:34,541 DEBUG findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,541 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,541 DEBUG findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 10.05
2023-01-07 15:29:34,541 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,541 DEBUG findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 10.05
2023-01-07 15:29:34,541 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,541 DEBUG findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,541 DEBUG findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,541 DEBUG findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,541 DEBUG findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,541 DEBUG findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,541 DEBUG findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 10.05
2023-01-07 15:29:34,541 DEBUG findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,541 DEBUG findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 11.525
2023-01-07 15:29:34,541 DEBUG findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,542 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 11.1925
2023-01-07 15:29:34,542 DEBUG findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 11.535
2023-01-07 15:29:34,542 DEBUG findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,542 DEBUG findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,542 DEBUG findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,542 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 10.05
2023-01-07 15:29:34,542 DEBUG findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 11.62
2023-01-07 15:29:34,542 DEBUG findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,542 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,542 DEBUG findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,542 DEBUG findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,542 DEBUG findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,542 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,542 DEBUG findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,542 DEBUG findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,542 DEBUG findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 11.525
2023-01-07 15:29:34,542 DEBUG findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,542 DEBUG findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,542 DEBUG findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,543 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,543 DEBUG findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,543 DEBUG findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,543 DEBUG findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,543 DEBUG findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,543 DEBUG findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 11.535
2023-01-07 15:29:34,543 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 11.25
2023-01-07 15:29:34,543 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,543 DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 11.525
2023-01-07 15:29:34,543 DEBUG findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,543 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 11.24
2023-01-07 15:29:34,543 DEBUG findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,543 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,543 DEBUG findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,543 DEBUG findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,543 DEBUG findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,543 DEBUG findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,543 DEBUG findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,543 DEBUG findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,544 DEBUG findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,544 DEBUG findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 10.05
2023-01-07 15:29:34,544 DEBUG findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,544 DEBUG findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,544 DEBUG findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,544 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 11.24
2023-01-07 15:29:34,544 DEBUG findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,544 DEBUG findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,544 DEBUG findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,544 DEBUG findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,544 DEBUG findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,544 DEBUG findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,544 DEBUG findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,544 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 11.335
2023-01-07 15:29:34,544 DEBUG findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,544 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 11.535
2023-01-07 15:29:34,544 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,544 DEBUG findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,544 DEBUG findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,545 DEBUG findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,545 DEBUG findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,545 DEBUG findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,545 DEBUG findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,545 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,545 DEBUG findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,545 DEBUG findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 11.145
2023-01-07 15:29:34,545 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,545 DEBUG findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,545 DEBUG findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,545 DEBUG findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,545 DEBUG findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,545 DEBUG findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,545 DEBUG findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,545 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,545 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 0.05
2023-01-07 15:29:34,545 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,545 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 10.25
2023-01-07 15:29:34,545 DEBUG findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,545 DEBUG findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,546 DEBUG findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,546 DEBUG findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,546 DEBUG findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,546 DEBUG findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,546 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 10.335
2023-01-07 15:29:34,546 DEBUG findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,546 DEBUG findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,546 DEBUG findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 11.145
2023-01-07 15:29:34,546 DEBUG findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,546 DEBUG findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,546 DEBUG findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,546 DEBUG findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,546 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 11.145
2023-01-07 15:29:34,546 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,546 DEBUG findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,546 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,546 DEBUG findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,546 DEBUG findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,546 DEBUG findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,546 DEBUG findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,547 DEBUG findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,547 DEBUG findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,547 DEBUG findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,547 DEBUG findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,547 DEBUG findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,547 DEBUG findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,547 DEBUG findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,547 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,547 DEBUG findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,547 DEBUG findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,547 DEBUG findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 11.335
2023-01-07 15:29:34,547 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,547 DEBUG findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 10.05
2023-01-07 15:29:34,547 DEBUG findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,547 DEBUG findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,547 DEBUG findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,547 DEBUG findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,547 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,547 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 10.335
2023-01-07 15:29:34,548 DEBUG findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,548 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,548 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,548 DEBUG findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,548 DEBUG findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,548 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 10.05
2023-01-07 15:29:34,548 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,548 DEBUG findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,548 DEBUG findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,548 DEBUG findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,548 DEBUG findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,548 DEBUG findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,548 DEBUG findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,548 DEBUG findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 10.62
2023-01-07 15:29:34,548 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,548 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,548 DEBUG findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,548 DEBUG findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,548 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,548 DEBUG findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,549 DEBUG findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,549 DEBUG findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,549 DEBUG findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,549 DEBUG findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,549 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 1.335
2023-01-07 15:29:34,549 DEBUG findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,549 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 10.335
2023-01-07 15:29:34,549 DEBUG findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,549 DEBUG findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,549 DEBUG findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 11.145
2023-01-07 15:29:34,549 DEBUG findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,549 DEBUG findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,549 DEBUG findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,549 DEBUG findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,549 DEBUG findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 11.145
2023-01-07 15:29:34,549 DEBUG findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,549 DEBUG findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,549 DEBUG findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,549 DEBUG findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 11.145
2023-01-07 15:29:34,549 DEBUG findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 11.525
2023-01-07 15:29:34,549 DEBUG findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,550 DEBUG findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 11.1925
2023-01-07 15:29:34,550 DEBUG findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,550 DEBUG findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,550 DEBUG findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,550 DEBUG findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,550 DEBUG findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,550 DEBUG findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,550 DEBUG findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,550 DEBUG findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,550 DEBUG findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,550 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 0.33499999999999996
2023-01-07 15:29:34,550 DEBUG findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,550 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,550 DEBUG findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,550 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,550 DEBUG findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 11.525
2023-01-07 15:29:34,550 DEBUG findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,550 DEBUG findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,551 DEBUG findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,551 DEBUG findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,551 DEBUG findfont: Matching STIXNonUnicode:style=italic:variant=normal:weight=normal:stretch=normal:size=18.0 to STIXNonUnicode ('/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf') with score of 0.050000.
2023-01-07 15:29:34,551 DEBUG findfont: Matching STIXNonUnicode:style=normal:variant=normal:weight=bold:stretch=normal:size=18.0.
2023-01-07 15:29:34,551 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,552 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,552 DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,552 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.05
2023-01-07 15:29:34,552 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 0.33499999999999996
2023-01-07 15:29:34,552 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,552 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,552 DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,552 DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,552 DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,552 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-01-07 15:29:34,552 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,552 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 0.05
2023-01-07 15:29:34,552 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.335
2023-01-07 15:29:34,553 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 1.05
2023-01-07 15:29:34,553 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-01-07 15:29:34,553 DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,553 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.335
2023-01-07 15:29:34,553 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,553 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,553 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,553 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,553 DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,553 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-01-07 15:29:34,553 DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,553 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,553 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 1.335
2023-01-07 15:29:34,553 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,553 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,554 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,554 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,554 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-01-07 15:29:34,554 DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,554 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,554 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-01-07 15:29:34,554 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,554 DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,554 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,554 DEBUG findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,554 DEBUG findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,554 DEBUG findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,554 DEBUG findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,554 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,554 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,554 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,554 DEBUG findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,554 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 11.05
2023-01-07 15:29:34,554 DEBUG findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,554 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.05
2023-01-07 15:29:34,555 DEBUG findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.24
2023-01-07 15:29:34,555 DEBUG findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,555 DEBUG findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 11.05
2023-01-07 15:29:34,555 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,555 DEBUG findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,555 DEBUG findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,555 DEBUG findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,555 DEBUG findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,555 DEBUG findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,555 DEBUG findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,555 DEBUG findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,555 DEBUG findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,555 DEBUG findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,555 DEBUG findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,555 DEBUG findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,555 DEBUG findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,555 DEBUG findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,556 DEBUG findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,556 DEBUG findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,556 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.43475
2023-01-07 15:29:34,556 DEBUG findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,556 DEBUG findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,556 DEBUG findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,556 DEBUG findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,556 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,556 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.335
2023-01-07 15:29:34,556 DEBUG findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,556 DEBUG findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,557 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,557 DEBUG findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,557 DEBUG findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,557 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,557 DEBUG findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,557 DEBUG findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,557 DEBUG findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,557 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,557 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,557 DEBUG findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,557 DEBUG findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,557 DEBUG findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,558 DEBUG findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,558 DEBUG findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,558 DEBUG findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,558 DEBUG findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,558 DEBUG findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.715
2023-01-07 15:29:34,558 DEBUG findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,558 DEBUG findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,558 DEBUG findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,558 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.43475
2023-01-07 15:29:34,558 DEBUG findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,558 DEBUG findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,558 DEBUG findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,558 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,558 DEBUG findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.43
2023-01-07 15:29:34,558 DEBUG findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,558 DEBUG findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,558 DEBUG findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,559 DEBUG findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,559 DEBUG findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,559 DEBUG findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.335
2023-01-07 15:29:34,559 DEBUG findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.43
2023-01-07 15:29:34,559 DEBUG findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,559 DEBUG findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,559 DEBUG findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.24
2023-01-07 15:29:34,559 DEBUG findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,559 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 0.33499999999999996
2023-01-07 15:29:34,559 DEBUG findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,559 DEBUG findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,559 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,559 DEBUG findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,559 DEBUG findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.43
2023-01-07 15:29:34,559 DEBUG findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,559 DEBUG findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,559 DEBUG findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,560 DEBUG findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.335
2023-01-07 15:29:34,560 DEBUG findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,560 DEBUG findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,560 DEBUG findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,560 DEBUG findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,560 DEBUG findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,560 DEBUG findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,560 DEBUG findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,560 DEBUG findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,560 DEBUG findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.24
2023-01-07 15:29:34,560 DEBUG findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,560 DEBUG findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,560 DEBUG findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,560 DEBUG findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,560 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.43
2023-01-07 15:29:34,560 DEBUG findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,560 DEBUG findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,560 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.24
2023-01-07 15:29:34,560 DEBUG findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,560 DEBUG findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,561 DEBUG findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,561 DEBUG findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,561 DEBUG findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,561 DEBUG findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,561 DEBUG findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,561 DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,561 DEBUG findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.335
2023-01-07 15:29:34,561 DEBUG findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,561 DEBUG findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,561 DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,561 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.25
2023-01-07 15:29:34,561 DEBUG findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,561 DEBUG findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,561 DEBUG findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,561 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,561 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,561 DEBUG findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,561 DEBUG findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,562 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,562 DEBUG findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,562 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.43
2023-01-07 15:29:34,562 DEBUG findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,562 DEBUG findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,562 DEBUG findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,562 DEBUG findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,562 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,562 DEBUG findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,562 DEBUG findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,562 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,562 DEBUG findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,562 DEBUG findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.71025
2023-01-07 15:29:34,562 DEBUG findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,562 DEBUG findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,562 DEBUG findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,562 DEBUG findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,562 DEBUG findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,562 DEBUG findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,563 DEBUG findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,563 DEBUG findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,563 DEBUG findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.43
2023-01-07 15:29:34,563 DEBUG findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,563 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.145
2023-01-07 15:29:34,563 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,563 DEBUG findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,563 DEBUG findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,563 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.05
2023-01-07 15:29:34,563 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,563 DEBUG findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,563 DEBUG findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,563 DEBUG findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,563 DEBUG findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.535
2023-01-07 15:29:34,563 DEBUG findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,563 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,563 DEBUG findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.335
2023-01-07 15:29:34,563 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,563 DEBUG findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 11.335
2023-01-07 15:29:34,563 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,564 DEBUG findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,564 DEBUG findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,564 DEBUG findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,564 DEBUG findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,564 DEBUG findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,564 DEBUG findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.335
2023-01-07 15:29:34,564 DEBUG findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,564 DEBUG findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.24
2023-01-07 15:29:34,564 DEBUG findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,564 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.4775
2023-01-07 15:29:34,564 DEBUG findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.25
2023-01-07 15:29:34,564 DEBUG findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,565 DEBUG findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,565 DEBUG findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,565 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.335
2023-01-07 15:29:34,565 DEBUG findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.335
2023-01-07 15:29:34,565 DEBUG findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,565 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,565 DEBUG findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,565 DEBUG findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,565 DEBUG findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,565 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,565 DEBUG findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,565 DEBUG findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,565 DEBUG findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.24
2023-01-07 15:29:34,565 DEBUG findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,565 DEBUG findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,565 DEBUG findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,565 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,565 DEBUG findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,565 DEBUG findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,565 DEBUG findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,566 DEBUG findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,566 DEBUG findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.25
2023-01-07 15:29:34,566 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.535
2023-01-07 15:29:34,566 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,566 DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.24
2023-01-07 15:29:34,566 DEBUG findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,566 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.145
2023-01-07 15:29:34,566 DEBUG findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,566 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,566 DEBUG findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,566 DEBUG findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,566 DEBUG findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,566 DEBUG findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,566 DEBUG findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,566 DEBUG findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,566 DEBUG findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,566 DEBUG findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.335
2023-01-07 15:29:34,566 DEBUG findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,566 DEBUG findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,566 DEBUG findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,567 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.525
2023-01-07 15:29:34,567 DEBUG findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,567 DEBUG findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,567 DEBUG findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,567 DEBUG findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,567 DEBUG findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,567 DEBUG findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,567 DEBUG findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,567 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.62
2023-01-07 15:29:34,567 DEBUG findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,567 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.25
2023-01-07 15:29:34,567 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,567 DEBUG findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,567 DEBUG findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,567 DEBUG findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,567 DEBUG findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,567 DEBUG findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,567 DEBUG findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,567 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,567 DEBUG findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,568 DEBUG findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.24
2023-01-07 15:29:34,568 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,568 DEBUG findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,568 DEBUG findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,568 DEBUG findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,568 DEBUG findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,568 DEBUG findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,568 DEBUG findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,568 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,568 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 1.335
2023-01-07 15:29:34,568 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,568 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.535
2023-01-07 15:29:34,568 DEBUG findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,568 DEBUG findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,568 DEBUG findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,568 DEBUG findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,568 DEBUG findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,569 DEBUG findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,569 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.05
2023-01-07 15:29:34,569 DEBUG findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,569 DEBUG findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,569 DEBUG findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.24
2023-01-07 15:29:34,569 DEBUG findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,569 DEBUG findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,569 DEBUG findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,569 DEBUG findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,569 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.24
2023-01-07 15:29:34,569 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,569 DEBUG findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,569 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,569 DEBUG findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,569 DEBUG findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,569 DEBUG findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,569 DEBUG findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,569 DEBUG findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,569 DEBUG findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,570 DEBUG findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,570 DEBUG findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,570 DEBUG findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,570 DEBUG findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,570 DEBUG findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,570 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,570 DEBUG findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,570 DEBUG findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,570 DEBUG findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.62
2023-01-07 15:29:34,570 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,570 DEBUG findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 11.335
2023-01-07 15:29:34,570 DEBUG findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,570 DEBUG findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,570 DEBUG findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,570 DEBUG findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,570 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,570 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.05
2023-01-07 15:29:34,570 DEBUG findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,570 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,570 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,570 DEBUG findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,571 DEBUG findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,571 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.335
2023-01-07 15:29:34,571 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,571 DEBUG findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,571 DEBUG findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,571 DEBUG findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,571 DEBUG findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,571 DEBUG findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,571 DEBUG findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,571 DEBUG findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.335
2023-01-07 15:29:34,571 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,571 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,571 DEBUG findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,571 DEBUG findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,572 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,572 DEBUG findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,572 DEBUG findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,572 DEBUG findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,572 DEBUG findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,572 DEBUG findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,572 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 0.05
2023-01-07 15:29:34,572 DEBUG findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,572 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.05
2023-01-07 15:29:34,572 DEBUG findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,572 DEBUG findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,572 DEBUG findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 10.24
2023-01-07 15:29:34,572 DEBUG findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,572 DEBUG findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,572 DEBUG findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,572 DEBUG findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,572 DEBUG findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.24
2023-01-07 15:29:34,572 DEBUG findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,573 DEBUG findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,573 DEBUG findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,573 DEBUG findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.24
2023-01-07 15:29:34,573 DEBUG findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.24
2023-01-07 15:29:34,573 DEBUG findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,573 DEBUG findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.4775
2023-01-07 15:29:34,573 DEBUG findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,573 DEBUG findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,573 DEBUG findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,573 DEBUG findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,573 DEBUG findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,573 DEBUG findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,573 DEBUG findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,573 DEBUG findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,574 DEBUG findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,574 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 1.05
2023-01-07 15:29:34,574 DEBUG findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,574 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,574 DEBUG findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,574 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,574 DEBUG findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.24
2023-01-07 15:29:34,574 DEBUG findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,574 DEBUG findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,574 DEBUG findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,574 DEBUG findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,574 DEBUG findfont: Matching STIXNonUnicode:style=normal:variant=normal:weight=bold:stretch=normal:size=18.0 to STIXNonUnicode ('/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf') with score of 0.050000.
2023-01-07 15:29:34,575 DEBUG findfont: Matching STIXSizeOneSym:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0.
2023-01-07 15:29:34,575 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 0.33499999999999996
2023-01-07 15:29:34,575 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,575 DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,575 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,575 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,575 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,575 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,575 DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,575 DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,575 DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,575 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-07 15:29:34,575 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,575 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,575 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,576 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,576 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-07 15:29:34,576 DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,576 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,576 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,576 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 0.05
2023-01-07 15:29:34,576 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,576 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,576 DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,576 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-07 15:29:34,576 DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,576 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,576 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,576 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,576 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,576 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,576 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,576 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-07 15:29:34,576 DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,576 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,577 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,577 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,577 DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,577 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,577 DEBUG findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,577 DEBUG findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,577 DEBUG findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,577 DEBUG findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,577 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,577 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,577 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,577 DEBUG findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,577 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,577 DEBUG findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,577 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,577 DEBUG findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,577 DEBUG findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,577 DEBUG findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,577 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,577 DEBUG findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,578 DEBUG findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,578 DEBUG findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,578 DEBUG findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,578 DEBUG findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,578 DEBUG findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,578 DEBUG findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,578 DEBUG findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,578 DEBUG findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,578 DEBUG findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,578 DEBUG findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,578 DEBUG findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,578 DEBUG findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,578 DEBUG findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,578 DEBUG findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,578 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2023-01-07 15:29:34,578 DEBUG findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,578 DEBUG findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,578 DEBUG findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,578 DEBUG findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,578 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,579 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,579 DEBUG findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,579 DEBUG findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,579 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,579 DEBUG findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,579 DEBUG findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,579 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,579 DEBUG findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,579 DEBUG findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,579 DEBUG findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,579 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,579 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,579 DEBUG findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,579 DEBUG findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,579 DEBUG findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,579 DEBUG findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,579 DEBUG findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,579 DEBUG findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,579 DEBUG findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,579 DEBUG findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2023-01-07 15:29:34,580 DEBUG findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,580 DEBUG findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,580 DEBUG findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,580 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2023-01-07 15:29:34,580 DEBUG findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,580 DEBUG findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,580 DEBUG findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,580 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,580 DEBUG findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,580 DEBUG findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,580 DEBUG findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,580 DEBUG findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,580 DEBUG findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,580 DEBUG findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,580 DEBUG findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,580 DEBUG findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,580 DEBUG findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,580 DEBUG findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,580 DEBUG findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,581 DEBUG findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,581 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,581 DEBUG findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,581 DEBUG findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,581 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,581 DEBUG findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,581 DEBUG findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,581 DEBUG findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,581 DEBUG findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,581 DEBUG findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,581 DEBUG findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,581 DEBUG findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,581 DEBUG findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,581 DEBUG findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,581 DEBUG findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,581 DEBUG findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,582 DEBUG findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,582 DEBUG findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,582 DEBUG findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,582 DEBUG findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,582 DEBUG findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,582 DEBUG findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,582 DEBUG findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,582 DEBUG findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,582 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,582 DEBUG findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,582 DEBUG findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,582 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,582 DEBUG findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,582 DEBUG findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,582 DEBUG findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,582 DEBUG findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,582 DEBUG findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,582 DEBUG findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,582 DEBUG findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,583 DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,583 DEBUG findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,583 DEBUG findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,583 DEBUG findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,583 DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,583 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2023-01-07 15:29:34,583 DEBUG findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,583 DEBUG findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,583 DEBUG findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,583 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,583 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,583 DEBUG findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,583 DEBUG findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,583 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,583 DEBUG findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,583 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,583 DEBUG findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,583 DEBUG findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,583 DEBUG findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,583 DEBUG findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,584 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,584 DEBUG findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,584 DEBUG findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,584 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,584 DEBUG findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,584 DEBUG findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2023-01-07 15:29:34,584 DEBUG findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,584 DEBUG findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,584 DEBUG findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,584 DEBUG findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,584 DEBUG findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,584 DEBUG findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,584 DEBUG findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,584 DEBUG findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,584 DEBUG findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,584 DEBUG findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,584 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2023-01-07 15:29:34,584 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,584 DEBUG findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,585 DEBUG findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,585 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,585 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 0.05
2023-01-07 15:29:34,585 DEBUG findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,585 DEBUG findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,585 DEBUG findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,585 DEBUG findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2023-01-07 15:29:34,585 DEBUG findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,585 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,585 DEBUG findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,585 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,585 DEBUG findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,585 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,585 DEBUG findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,585 DEBUG findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,585 DEBUG findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,585 DEBUG findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,585 DEBUG findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,585 DEBUG findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,585 DEBUG findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,586 DEBUG findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,586 DEBUG findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,586 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2023-01-07 15:29:34,586 DEBUG findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2023-01-07 15:29:34,586 DEBUG findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,586 DEBUG findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,586 DEBUG findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,586 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,586 DEBUG findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2023-01-07 15:29:34,586 DEBUG findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,586 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,586 DEBUG findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,586 DEBUG findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,586 DEBUG findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,586 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,586 DEBUG findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,586 DEBUG findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,586 DEBUG findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,586 DEBUG findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,586 DEBUG findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,587 DEBUG findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,587 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,587 DEBUG findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,587 DEBUG findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,587 DEBUG findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,587 DEBUG findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,587 DEBUG findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2023-01-07 15:29:34,587 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2023-01-07 15:29:34,587 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,587 DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,587 DEBUG findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,587 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2023-01-07 15:29:34,587 DEBUG findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,587 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 0.33499999999999996
2023-01-07 15:29:34,587 DEBUG findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,587 DEBUG findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,587 DEBUG findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,587 DEBUG findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,587 DEBUG findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,587 DEBUG findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,588 DEBUG findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,588 DEBUG findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,588 DEBUG findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,588 DEBUG findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,588 DEBUG findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,588 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2023-01-07 15:29:34,588 DEBUG findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,588 DEBUG findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,588 DEBUG findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,588 DEBUG findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,588 DEBUG findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,588 DEBUG findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,588 DEBUG findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,588 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2023-01-07 15:29:34,588 DEBUG findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,588 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2023-01-07 15:29:34,588 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,588 DEBUG findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,588 DEBUG findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,588 DEBUG findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,589 DEBUG findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,589 DEBUG findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,589 DEBUG findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,589 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,589 DEBUG findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,589 DEBUG findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,589 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,589 DEBUG findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,589 DEBUG findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,589 DEBUG findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,589 DEBUG findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,589 DEBUG findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,589 DEBUG findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,589 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,590 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,590 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,590 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2023-01-07 15:29:34,590 DEBUG findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,590 DEBUG findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,590 DEBUG findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,590 DEBUG findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,590 DEBUG findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,590 DEBUG findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,590 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,590 DEBUG findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,590 DEBUG findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,590 DEBUG findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,590 DEBUG findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,590 DEBUG findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,590 DEBUG findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,591 DEBUG findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,591 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,591 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,591 DEBUG findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,591 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,591 DEBUG findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,591 DEBUG findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,591 DEBUG findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,591 DEBUG findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,591 DEBUG findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,591 DEBUG findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,591 DEBUG findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,591 DEBUG findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,592 DEBUG findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,592 DEBUG findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,592 DEBUG findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,592 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,592 DEBUG findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,592 DEBUG findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,592 DEBUG findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2023-01-07 15:29:34,592 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,592 DEBUG findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,592 DEBUG findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,592 DEBUG findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,592 DEBUG findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,592 DEBUG findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,592 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,592 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,592 DEBUG findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,592 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,592 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,592 DEBUG findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,592 DEBUG findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,593 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,593 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,593 DEBUG findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,593 DEBUG findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,593 DEBUG findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,593 DEBUG findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,593 DEBUG findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,593 DEBUG findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,593 DEBUG findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2023-01-07 15:29:34,593 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,593 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,593 DEBUG findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,593 DEBUG findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,593 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,593 DEBUG findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,593 DEBUG findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,594 DEBUG findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,594 DEBUG findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,594 DEBUG findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,594 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,594 DEBUG findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,594 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,594 DEBUG findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,594 DEBUG findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,594 DEBUG findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,594 DEBUG findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,594 DEBUG findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,594 DEBUG findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,594 DEBUG findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,594 DEBUG findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,594 DEBUG findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,594 DEBUG findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,594 DEBUG findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,595 DEBUG findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,595 DEBUG findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,595 DEBUG findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,595 DEBUG findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2023-01-07 15:29:34,595 DEBUG findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,595 DEBUG findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,595 DEBUG findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,595 DEBUG findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,595 DEBUG findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,595 DEBUG findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,595 DEBUG findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,595 DEBUG findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,595 DEBUG findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,595 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,595 DEBUG findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,595 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,595 DEBUG findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,595 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,596 DEBUG findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,596 DEBUG findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,596 DEBUG findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,596 DEBUG findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,596 DEBUG findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,596 DEBUG findfont: Matching STIXSizeOneSym:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0 to STIXSizeOneSym ('/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf') with score of 0.050000.
2023-01-07 15:29:34,596 DEBUG findfont: Matching STIXSizeTwoSym:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0.
2023-01-07 15:29:34,596 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,596 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,596 DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,597 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,597 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,597 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,597 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,597 DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,597 DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,597 DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,597 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-07 15:29:34,597 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,597 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,597 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,597 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,597 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-07 15:29:34,597 DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,597 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,597 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 0.05
2023-01-07 15:29:34,597 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,597 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,598 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,598 DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,598 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-07 15:29:34,598 DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,598 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,598 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,598 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,598 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,598 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 0.33499999999999996
2023-01-07 15:29:34,598 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,598 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-07 15:29:34,598 DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,598 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,598 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,598 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,598 DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,598 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,598 DEBUG findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,598 DEBUG findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,598 DEBUG findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,599 DEBUG findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,599 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,599 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,599 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,599 DEBUG findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,599 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,599 DEBUG findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,599 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,599 DEBUG findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,599 DEBUG findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,599 DEBUG findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,599 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,599 DEBUG findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,599 DEBUG findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,599 DEBUG findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,599 DEBUG findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,599 DEBUG findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,599 DEBUG findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,600 DEBUG findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,600 DEBUG findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,600 DEBUG findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,600 DEBUG findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,600 DEBUG findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,600 DEBUG findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,600 DEBUG findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,600 DEBUG findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,600 DEBUG findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,600 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2023-01-07 15:29:34,600 DEBUG findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,600 DEBUG findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,600 DEBUG findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,601 DEBUG findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,601 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,601 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,601 DEBUG findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,601 DEBUG findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,601 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,601 DEBUG findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,601 DEBUG findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,601 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,601 DEBUG findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,602 DEBUG findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,602 DEBUG findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,602 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,602 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,602 DEBUG findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,602 DEBUG findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,602 DEBUG findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,602 DEBUG findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,602 DEBUG findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,602 DEBUG findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,602 DEBUG findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,602 DEBUG findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2023-01-07 15:29:34,602 DEBUG findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,602 DEBUG findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,602 DEBUG findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,602 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2023-01-07 15:29:34,602 DEBUG findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,602 DEBUG findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,603 DEBUG findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,603 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,603 DEBUG findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,603 DEBUG findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,603 DEBUG findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,603 DEBUG findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,603 DEBUG findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,603 DEBUG findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,603 DEBUG findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,603 DEBUG findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,603 DEBUG findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,603 DEBUG findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,603 DEBUG findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,603 DEBUG findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,603 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,603 DEBUG findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,603 DEBUG findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,603 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,604 DEBUG findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,604 DEBUG findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,604 DEBUG findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,604 DEBUG findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,604 DEBUG findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,604 DEBUG findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,604 DEBUG findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,604 DEBUG findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,604 DEBUG findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,604 DEBUG findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,604 DEBUG findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,604 DEBUG findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,604 DEBUG findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,604 DEBUG findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,604 DEBUG findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,604 DEBUG findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,604 DEBUG findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,604 DEBUG findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,604 DEBUG findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,604 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,604 DEBUG findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,605 DEBUG findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,605 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,605 DEBUG findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,605 DEBUG findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,605 DEBUG findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,605 DEBUG findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,605 DEBUG findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,605 DEBUG findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,605 DEBUG findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,605 DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,605 DEBUG findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,605 DEBUG findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,605 DEBUG findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,605 DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,605 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2023-01-07 15:29:34,605 DEBUG findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,605 DEBUG findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,605 DEBUG findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,605 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,606 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,606 DEBUG findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,606 DEBUG findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,606 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,606 DEBUG findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,606 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,606 DEBUG findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,606 DEBUG findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,606 DEBUG findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,606 DEBUG findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,606 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,606 DEBUG findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,606 DEBUG findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,606 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,606 DEBUG findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,606 DEBUG findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2023-01-07 15:29:34,606 DEBUG findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,606 DEBUG findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,606 DEBUG findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,607 DEBUG findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,607 DEBUG findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,607 DEBUG findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,607 DEBUG findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,607 DEBUG findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,607 DEBUG findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,607 DEBUG findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,607 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2023-01-07 15:29:34,607 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,607 DEBUG findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,607 DEBUG findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,607 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,607 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,607 DEBUG findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,607 DEBUG findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,607 DEBUG findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,607 DEBUG findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2023-01-07 15:29:34,607 DEBUG findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,607 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,607 DEBUG findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,607 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,608 DEBUG findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,608 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,608 DEBUG findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,608 DEBUG findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,608 DEBUG findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,608 DEBUG findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,608 DEBUG findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,608 DEBUG findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,608 DEBUG findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,608 DEBUG findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,608 DEBUG findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,608 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2023-01-07 15:29:34,608 DEBUG findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2023-01-07 15:29:34,608 DEBUG findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,608 DEBUG findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,608 DEBUG findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,608 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,608 DEBUG findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2023-01-07 15:29:34,608 DEBUG findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,609 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,609 DEBUG findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,609 DEBUG findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,609 DEBUG findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,609 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,609 DEBUG findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,609 DEBUG findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,609 DEBUG findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,609 DEBUG findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,609 DEBUG findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,609 DEBUG findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,609 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,609 DEBUG findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,609 DEBUG findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,609 DEBUG findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,609 DEBUG findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,609 DEBUG findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2023-01-07 15:29:34,609 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2023-01-07 15:29:34,609 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,609 DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,610 DEBUG findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,610 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2023-01-07 15:29:34,610 DEBUG findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,610 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,610 DEBUG findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,610 DEBUG findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,610 DEBUG findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,610 DEBUG findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,610 DEBUG findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,610 DEBUG findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,610 DEBUG findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,610 DEBUG findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,610 DEBUG findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,610 DEBUG findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,610 DEBUG findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,610 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2023-01-07 15:29:34,610 DEBUG findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,610 DEBUG findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,610 DEBUG findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,611 DEBUG findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,611 DEBUG findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,611 DEBUG findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,611 DEBUG findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,611 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2023-01-07 15:29:34,611 DEBUG findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,611 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2023-01-07 15:29:34,611 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,611 DEBUG findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,611 DEBUG findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,611 DEBUG findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,611 DEBUG findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,611 DEBUG findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,611 DEBUG findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,611 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,611 DEBUG findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,611 DEBUG findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,611 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,611 DEBUG findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,611 DEBUG findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,612 DEBUG findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,612 DEBUG findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,612 DEBUG findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,612 DEBUG findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,612 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 0.05
2023-01-07 15:29:34,612 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,612 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,612 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2023-01-07 15:29:34,612 DEBUG findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,612 DEBUG findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,612 DEBUG findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,612 DEBUG findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,612 DEBUG findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,612 DEBUG findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,612 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,612 DEBUG findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,612 DEBUG findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,612 DEBUG findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,612 DEBUG findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,612 DEBUG findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,613 DEBUG findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,613 DEBUG findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,613 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,613 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,613 DEBUG findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,613 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,613 DEBUG findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,613 DEBUG findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,613 DEBUG findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,613 DEBUG findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,613 DEBUG findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,613 DEBUG findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,613 DEBUG findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,613 DEBUG findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,613 DEBUG findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,613 DEBUG findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,613 DEBUG findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,613 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,613 DEBUG findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,614 DEBUG findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,614 DEBUG findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2023-01-07 15:29:34,614 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,614 DEBUG findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,614 DEBUG findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,614 DEBUG findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,614 DEBUG findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,614 DEBUG findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,614 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,614 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,614 DEBUG findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,614 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,614 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,614 DEBUG findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,614 DEBUG findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,614 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,614 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,614 DEBUG findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,614 DEBUG findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,614 DEBUG findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,615 DEBUG findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,615 DEBUG findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,615 DEBUG findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,615 DEBUG findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2023-01-07 15:29:34,615 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,615 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,615 DEBUG findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,615 DEBUG findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,615 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 0.33499999999999996
2023-01-07 15:29:34,615 DEBUG findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,615 DEBUG findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,615 DEBUG findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,615 DEBUG findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,615 DEBUG findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,615 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,615 DEBUG findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,615 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,615 DEBUG findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,615 DEBUG findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,615 DEBUG findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,616 DEBUG findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,616 DEBUG findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,616 DEBUG findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,616 DEBUG findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,616 DEBUG findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,616 DEBUG findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,616 DEBUG findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,616 DEBUG findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,616 DEBUG findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,616 DEBUG findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,616 DEBUG findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,616 DEBUG findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2023-01-07 15:29:34,616 DEBUG findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,616 DEBUG findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,616 DEBUG findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,616 DEBUG findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,616 DEBUG findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,616 DEBUG findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,616 DEBUG findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,617 DEBUG findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,617 DEBUG findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,617 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,617 DEBUG findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,617 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,617 DEBUG findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,617 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,617 DEBUG findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,617 DEBUG findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,617 DEBUG findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,617 DEBUG findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,617 DEBUG findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,617 DEBUG findfont: Matching STIXSizeTwoSym:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0 to STIXSizeTwoSym ('/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf') with score of 0.050000.
2023-01-07 15:29:34,618 DEBUG findfont: Matching STIXSizeThreeSym:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0.
2023-01-07 15:29:34,618 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,618 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,618 DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,618 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,618 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,618 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,618 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 0.33499999999999996
2023-01-07 15:29:34,618 DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,618 DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,618 DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,618 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-07 15:29:34,618 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,618 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,618 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,618 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,619 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-07 15:29:34,619 DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,619 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,619 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,619 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,619 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,619 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,619 DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,619 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-07 15:29:34,619 DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,619 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,619 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,619 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,619 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 0.05
2023-01-07 15:29:34,619 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,619 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,619 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-07 15:29:34,619 DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,619 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,619 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,620 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,620 DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,620 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,620 DEBUG findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,620 DEBUG findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,620 DEBUG findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,620 DEBUG findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,620 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,620 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,620 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,620 DEBUG findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,620 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,620 DEBUG findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,620 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,620 DEBUG findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,620 DEBUG findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,620 DEBUG findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,620 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,621 DEBUG findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,621 DEBUG findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,621 DEBUG findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,621 DEBUG findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,621 DEBUG findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,621 DEBUG findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,621 DEBUG findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,621 DEBUG findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,621 DEBUG findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,621 DEBUG findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,621 DEBUG findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,621 DEBUG findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,621 DEBUG findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,621 DEBUG findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,621 DEBUG findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,621 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2023-01-07 15:29:34,622 DEBUG findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,622 DEBUG findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,622 DEBUG findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,622 DEBUG findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,622 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,622 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,622 DEBUG findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,622 DEBUG findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,622 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,622 DEBUG findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,622 DEBUG findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,622 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,622 DEBUG findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,622 DEBUG findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,622 DEBUG findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,622 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,622 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,622 DEBUG findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,623 DEBUG findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,623 DEBUG findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,623 DEBUG findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,623 DEBUG findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,623 DEBUG findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,623 DEBUG findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,623 DEBUG findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2023-01-07 15:29:34,623 DEBUG findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,623 DEBUG findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,623 DEBUG findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,623 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2023-01-07 15:29:34,623 DEBUG findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,623 DEBUG findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,623 DEBUG findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,623 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,623 DEBUG findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,623 DEBUG findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,623 DEBUG findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,624 DEBUG findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,624 DEBUG findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,624 DEBUG findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,624 DEBUG findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,624 DEBUG findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,624 DEBUG findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,624 DEBUG findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,624 DEBUG findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,624 DEBUG findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,624 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,624 DEBUG findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,624 DEBUG findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,624 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,624 DEBUG findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,624 DEBUG findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,624 DEBUG findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,624 DEBUG findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,624 DEBUG findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,625 DEBUG findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,625 DEBUG findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,625 DEBUG findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,625 DEBUG findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,625 DEBUG findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,625 DEBUG findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,625 DEBUG findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,625 DEBUG findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,625 DEBUG findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,625 DEBUG findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,625 DEBUG findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,625 DEBUG findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,625 DEBUG findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,625 DEBUG findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,625 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,625 DEBUG findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,625 DEBUG findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,625 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,625 DEBUG findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,625 DEBUG findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,626 DEBUG findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,626 DEBUG findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,626 DEBUG findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,626 DEBUG findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,626 DEBUG findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,626 DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,626 DEBUG findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,626 DEBUG findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,626 DEBUG findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,626 DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,626 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2023-01-07 15:29:34,626 DEBUG findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,626 DEBUG findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,626 DEBUG findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,626 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,626 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,626 DEBUG findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,626 DEBUG findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,626 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,627 DEBUG findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,627 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,627 DEBUG findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,627 DEBUG findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,627 DEBUG findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,627 DEBUG findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,627 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,627 DEBUG findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,627 DEBUG findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,627 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,627 DEBUG findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,627 DEBUG findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2023-01-07 15:29:34,627 DEBUG findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,627 DEBUG findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,627 DEBUG findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,627 DEBUG findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,627 DEBUG findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,627 DEBUG findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,627 DEBUG findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,628 DEBUG findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,628 DEBUG findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,628 DEBUG findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,628 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2023-01-07 15:29:34,628 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,628 DEBUG findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,628 DEBUG findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,628 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,628 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,628 DEBUG findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,628 DEBUG findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,628 DEBUG findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,628 DEBUG findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2023-01-07 15:29:34,628 DEBUG findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,628 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,628 DEBUG findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,628 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,628 DEBUG findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,628 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,628 DEBUG findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,629 DEBUG findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,629 DEBUG findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,629 DEBUG findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,629 DEBUG findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,629 DEBUG findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,629 DEBUG findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,629 DEBUG findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,629 DEBUG findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,629 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2023-01-07 15:29:34,629 DEBUG findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2023-01-07 15:29:34,629 DEBUG findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,629 DEBUG findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,629 DEBUG findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,629 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,629 DEBUG findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2023-01-07 15:29:34,629 DEBUG findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,629 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 0.05
2023-01-07 15:29:34,629 DEBUG findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,630 DEBUG findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,630 DEBUG findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,630 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,630 DEBUG findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,630 DEBUG findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,630 DEBUG findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,630 DEBUG findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,630 DEBUG findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,630 DEBUG findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,630 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,630 DEBUG findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,630 DEBUG findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,630 DEBUG findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,630 DEBUG findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,630 DEBUG findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2023-01-07 15:29:34,630 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2023-01-07 15:29:34,630 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,631 DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,631 DEBUG findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,631 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2023-01-07 15:29:34,631 DEBUG findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,631 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,631 DEBUG findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,631 DEBUG findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,631 DEBUG findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,631 DEBUG findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,631 DEBUG findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,631 DEBUG findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,631 DEBUG findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,631 DEBUG findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,631 DEBUG findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,631 DEBUG findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,631 DEBUG findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,631 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2023-01-07 15:29:34,631 DEBUG findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,631 DEBUG findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,631 DEBUG findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,632 DEBUG findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,632 DEBUG findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,632 DEBUG findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,632 DEBUG findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,632 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2023-01-07 15:29:34,632 DEBUG findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,632 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2023-01-07 15:29:34,632 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,632 DEBUG findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,632 DEBUG findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,632 DEBUG findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,632 DEBUG findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,632 DEBUG findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,632 DEBUG findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,632 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,632 DEBUG findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,632 DEBUG findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,632 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,632 DEBUG findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,633 DEBUG findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,633 DEBUG findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,633 DEBUG findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,633 DEBUG findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,633 DEBUG findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,633 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,633 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,633 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,633 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2023-01-07 15:29:34,633 DEBUG findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,633 DEBUG findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,633 DEBUG findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,633 DEBUG findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,634 DEBUG findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,634 DEBUG findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,634 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,634 DEBUG findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,634 DEBUG findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,634 DEBUG findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,634 DEBUG findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,634 DEBUG findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,634 DEBUG findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,634 DEBUG findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,634 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,635 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,635 DEBUG findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,635 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,635 DEBUG findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,635 DEBUG findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,635 DEBUG findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,635 DEBUG findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,635 DEBUG findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,635 DEBUG findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,635 DEBUG findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,635 DEBUG findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,635 DEBUG findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,635 DEBUG findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,635 DEBUG findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,635 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,635 DEBUG findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,635 DEBUG findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,636 DEBUG findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2023-01-07 15:29:34,636 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,636 DEBUG findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,636 DEBUG findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,636 DEBUG findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,636 DEBUG findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,636 DEBUG findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,636 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,636 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,636 DEBUG findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,636 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,636 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,636 DEBUG findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,636 DEBUG findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,636 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,636 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 0.33499999999999996
2023-01-07 15:29:34,636 DEBUG findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,637 DEBUG findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,637 DEBUG findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,637 DEBUG findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,637 DEBUG findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,637 DEBUG findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,637 DEBUG findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2023-01-07 15:29:34,637 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,637 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,637 DEBUG findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,637 DEBUG findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,637 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,637 DEBUG findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,637 DEBUG findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,637 DEBUG findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,637 DEBUG findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,637 DEBUG findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,638 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,638 DEBUG findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,638 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,638 DEBUG findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,638 DEBUG findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,638 DEBUG findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,638 DEBUG findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,638 DEBUG findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,638 DEBUG findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,638 DEBUG findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,638 DEBUG findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,638 DEBUG findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,638 DEBUG findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,638 DEBUG findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,638 DEBUG findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,638 DEBUG findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,639 DEBUG findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,639 DEBUG findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2023-01-07 15:29:34,639 DEBUG findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,639 DEBUG findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,639 DEBUG findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,639 DEBUG findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,639 DEBUG findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,639 DEBUG findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,639 DEBUG findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,639 DEBUG findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,639 DEBUG findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,639 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,639 DEBUG findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,639 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,639 DEBUG findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,639 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,639 DEBUG findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,639 DEBUG findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,640 DEBUG findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,640 DEBUG findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,640 DEBUG findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,640 DEBUG findfont: Matching STIXSizeThreeSym:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0 to STIXSizeThreeSym ('/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf') with score of 0.050000.
2023-01-07 15:29:34,641 DEBUG findfont: Matching STIXSizeFourSym:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0.
2023-01-07 15:29:34,641 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,641 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,641 DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,641 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,641 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,641 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,641 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,641 DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,642 DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,642 DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,642 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-07 15:29:34,642 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 0.05
2023-01-07 15:29:34,642 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,642 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,642 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,642 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-07 15:29:34,642 DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,642 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,642 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,642 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,642 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,642 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,642 DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,642 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-07 15:29:34,642 DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,642 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,643 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,643 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,643 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,643 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,643 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 0.33499999999999996
2023-01-07 15:29:34,643 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-07 15:29:34,643 DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,643 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,643 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,643 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,643 DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,643 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,644 DEBUG findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,644 DEBUG findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,644 DEBUG findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,644 DEBUG findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,644 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,644 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,644 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 0.33499999999999996
2023-01-07 15:29:34,644 DEBUG findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,644 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,644 DEBUG findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,644 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,644 DEBUG findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,644 DEBUG findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,644 DEBUG findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,644 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,644 DEBUG findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,644 DEBUG findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,644 DEBUG findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,645 DEBUG findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,645 DEBUG findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,645 DEBUG findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,645 DEBUG findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,645 DEBUG findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,645 DEBUG findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,645 DEBUG findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,645 DEBUG findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,645 DEBUG findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,645 DEBUG findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,645 DEBUG findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,645 DEBUG findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,645 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2023-01-07 15:29:34,645 DEBUG findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,645 DEBUG findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,646 DEBUG findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,646 DEBUG findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,646 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,646 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,646 DEBUG findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,646 DEBUG findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,646 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,646 DEBUG findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,646 DEBUG findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,646 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,646 DEBUG findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,646 DEBUG findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,646 DEBUG findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,646 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,646 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,646 DEBUG findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,646 DEBUG findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,646 DEBUG findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,646 DEBUG findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,647 DEBUG findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,647 DEBUG findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,647 DEBUG findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,647 DEBUG findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2023-01-07 15:29:34,647 DEBUG findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,647 DEBUG findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,647 DEBUG findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,647 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2023-01-07 15:29:34,647 DEBUG findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,647 DEBUG findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,647 DEBUG findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,647 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 0.05
2023-01-07 15:29:34,647 DEBUG findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,647 DEBUG findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,647 DEBUG findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,647 DEBUG findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,647 DEBUG findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,647 DEBUG findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,647 DEBUG findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,648 DEBUG findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,648 DEBUG findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,648 DEBUG findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,648 DEBUG findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,648 DEBUG findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,648 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,648 DEBUG findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,648 DEBUG findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,648 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,648 DEBUG findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,648 DEBUG findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,648 DEBUG findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,648 DEBUG findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,648 DEBUG findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,648 DEBUG findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,648 DEBUG findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,648 DEBUG findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,648 DEBUG findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,648 DEBUG findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,649 DEBUG findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,649 DEBUG findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,649 DEBUG findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,649 DEBUG findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,649 DEBUG findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,649 DEBUG findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,649 DEBUG findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,649 DEBUG findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,649 DEBUG findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,649 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,649 DEBUG findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,649 DEBUG findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,649 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,649 DEBUG findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,649 DEBUG findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,649 DEBUG findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,649 DEBUG findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,649 DEBUG findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,650 DEBUG findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,650 DEBUG findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,650 DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,650 DEBUG findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,650 DEBUG findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,650 DEBUG findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,650 DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,650 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2023-01-07 15:29:34,650 DEBUG findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,650 DEBUG findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,650 DEBUG findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,650 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,650 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,650 DEBUG findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,650 DEBUG findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,650 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,650 DEBUG findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,650 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,650 DEBUG findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,650 DEBUG findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,650 DEBUG findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,651 DEBUG findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,651 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,651 DEBUG findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,651 DEBUG findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,651 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,651 DEBUG findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,651 DEBUG findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2023-01-07 15:29:34,651 DEBUG findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,651 DEBUG findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,651 DEBUG findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,651 DEBUG findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,651 DEBUG findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,651 DEBUG findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,651 DEBUG findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,651 DEBUG findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,651 DEBUG findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,651 DEBUG findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,652 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2023-01-07 15:29:34,652 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,652 DEBUG findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,652 DEBUG findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,652 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,652 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,652 DEBUG findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,652 DEBUG findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,652 DEBUG findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,652 DEBUG findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2023-01-07 15:29:34,652 DEBUG findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,652 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,652 DEBUG findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,652 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,652 DEBUG findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,652 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,652 DEBUG findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,652 DEBUG findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,653 DEBUG findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,653 DEBUG findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,653 DEBUG findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,653 DEBUG findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,653 DEBUG findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,653 DEBUG findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,653 DEBUG findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,653 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2023-01-07 15:29:34,653 DEBUG findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2023-01-07 15:29:34,653 DEBUG findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,653 DEBUG findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,653 DEBUG findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,653 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,653 DEBUG findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2023-01-07 15:29:34,653 DEBUG findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,653 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,653 DEBUG findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,653 DEBUG findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,653 DEBUG findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,653 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,654 DEBUG findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,654 DEBUG findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,654 DEBUG findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,654 DEBUG findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,654 DEBUG findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,654 DEBUG findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,654 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,654 DEBUG findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,654 DEBUG findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,654 DEBUG findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,654 DEBUG findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,654 DEBUG findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2023-01-07 15:29:34,654 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2023-01-07 15:29:34,654 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,654 DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,654 DEBUG findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,654 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2023-01-07 15:29:34,654 DEBUG findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,654 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,655 DEBUG findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,655 DEBUG findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,655 DEBUG findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,655 DEBUG findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,655 DEBUG findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,655 DEBUG findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,655 DEBUG findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,655 DEBUG findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,655 DEBUG findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,655 DEBUG findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,655 DEBUG findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,655 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2023-01-07 15:29:34,655 DEBUG findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,655 DEBUG findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,655 DEBUG findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,655 DEBUG findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,655 DEBUG findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,655 DEBUG findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,655 DEBUG findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,656 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2023-01-07 15:29:34,656 DEBUG findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,656 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2023-01-07 15:29:34,656 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,656 DEBUG findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,656 DEBUG findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,656 DEBUG findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,656 DEBUG findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,656 DEBUG findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,656 DEBUG findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,656 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,656 DEBUG findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,656 DEBUG findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,656 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,656 DEBUG findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,656 DEBUG findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,656 DEBUG findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,656 DEBUG findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,657 DEBUG findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,657 DEBUG findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,657 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,657 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,657 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,657 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2023-01-07 15:29:34,657 DEBUG findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,657 DEBUG findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,657 DEBUG findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,657 DEBUG findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,657 DEBUG findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,657 DEBUG findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,657 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,657 DEBUG findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,657 DEBUG findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,657 DEBUG findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,657 DEBUG findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,658 DEBUG findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,658 DEBUG findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,658 DEBUG findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,658 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,658 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,658 DEBUG findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,658 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,658 DEBUG findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,658 DEBUG findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,658 DEBUG findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,658 DEBUG findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,658 DEBUG findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,658 DEBUG findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,658 DEBUG findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,658 DEBUG findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,658 DEBUG findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,658 DEBUG findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,658 DEBUG findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,659 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,659 DEBUG findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,659 DEBUG findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,659 DEBUG findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2023-01-07 15:29:34,659 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,659 DEBUG findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,659 DEBUG findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,659 DEBUG findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,659 DEBUG findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,659 DEBUG findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,659 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,659 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,659 DEBUG findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,659 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,659 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,659 DEBUG findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,660 DEBUG findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,660 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,660 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,660 DEBUG findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,660 DEBUG findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,660 DEBUG findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,660 DEBUG findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,660 DEBUG findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,660 DEBUG findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,660 DEBUG findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2023-01-07 15:29:34,660 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,660 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,660 DEBUG findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,660 DEBUG findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,660 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,660 DEBUG findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,660 DEBUG findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,660 DEBUG findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,660 DEBUG findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,660 DEBUG findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,661 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,661 DEBUG findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,661 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,661 DEBUG findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,661 DEBUG findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,661 DEBUG findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,661 DEBUG findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,661 DEBUG findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,661 DEBUG findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,661 DEBUG findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,661 DEBUG findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,661 DEBUG findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,661 DEBUG findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,661 DEBUG findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,661 DEBUG findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,661 DEBUG findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,661 DEBUG findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,661 DEBUG findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2023-01-07 15:29:34,661 DEBUG findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,662 DEBUG findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,662 DEBUG findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,662 DEBUG findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,662 DEBUG findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,662 DEBUG findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,662 DEBUG findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,662 DEBUG findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,662 DEBUG findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,662 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,662 DEBUG findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,662 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,662 DEBUG findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,662 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,662 DEBUG findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,662 DEBUG findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,662 DEBUG findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,662 DEBUG findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,662 DEBUG findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,662 DEBUG findfont: Matching STIXSizeFourSym:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0 to STIXSizeFourSym ('/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf') with score of 0.050000.
2023-01-07 15:29:34,663 DEBUG findfont: Matching STIXSizeFiveSym:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0.
2023-01-07 15:29:34,663 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,663 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,663 DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,663 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,663 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,663 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,663 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,664 DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,664 DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,664 DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,664 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-07 15:29:34,664 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,664 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,664 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,664 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,664 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-07 15:29:34,664 DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,664 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,664 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,664 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,664 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,664 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,664 DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,664 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-07 15:29:34,664 DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,664 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 0.05
2023-01-07 15:29:34,664 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,664 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,665 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,665 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,665 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,665 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-07 15:29:34,665 DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,665 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,665 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,665 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,665 DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,665 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,665 DEBUG findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,665 DEBUG findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,665 DEBUG findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,665 DEBUG findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,665 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,665 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,666 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,666 DEBUG findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,666 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,666 DEBUG findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,666 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,666 DEBUG findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,666 DEBUG findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,666 DEBUG findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,666 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,666 DEBUG findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,666 DEBUG findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,666 DEBUG findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,666 DEBUG findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,666 DEBUG findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,666 DEBUG findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,666 DEBUG findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,667 DEBUG findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,667 DEBUG findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,667 DEBUG findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,667 DEBUG findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,667 DEBUG findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,667 DEBUG findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,667 DEBUG findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,667 DEBUG findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,667 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2023-01-07 15:29:34,667 DEBUG findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,667 DEBUG findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,667 DEBUG findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,667 DEBUG findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,667 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,667 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,667 DEBUG findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,667 DEBUG findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,668 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,668 DEBUG findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,668 DEBUG findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,668 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,668 DEBUG findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,668 DEBUG findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,668 DEBUG findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,668 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,668 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,668 DEBUG findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,668 DEBUG findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,668 DEBUG findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,668 DEBUG findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,668 DEBUG findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,668 DEBUG findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,668 DEBUG findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,668 DEBUG findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2023-01-07 15:29:34,668 DEBUG findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,668 DEBUG findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,668 DEBUG findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,669 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2023-01-07 15:29:34,669 DEBUG findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,669 DEBUG findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,669 DEBUG findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,669 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,669 DEBUG findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,669 DEBUG findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,669 DEBUG findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,669 DEBUG findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,669 DEBUG findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,669 DEBUG findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,669 DEBUG findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,669 DEBUG findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,669 DEBUG findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,669 DEBUG findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,669 DEBUG findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,670 DEBUG findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,670 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,670 DEBUG findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,670 DEBUG findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,670 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,670 DEBUG findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,670 DEBUG findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,670 DEBUG findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,670 DEBUG findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,670 DEBUG findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,670 DEBUG findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,670 DEBUG findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,670 DEBUG findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,670 DEBUG findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,670 DEBUG findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,670 DEBUG findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,670 DEBUG findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,670 DEBUG findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,670 DEBUG findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,671 DEBUG findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,671 DEBUG findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,671 DEBUG findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,671 DEBUG findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,671 DEBUG findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,671 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,671 DEBUG findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,671 DEBUG findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,671 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,671 DEBUG findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,671 DEBUG findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,671 DEBUG findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,671 DEBUG findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,671 DEBUG findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,671 DEBUG findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,671 DEBUG findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,671 DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,671 DEBUG findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,671 DEBUG findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,672 DEBUG findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,672 DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,672 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2023-01-07 15:29:34,672 DEBUG findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,672 DEBUG findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,672 DEBUG findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,672 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,672 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,672 DEBUG findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,672 DEBUG findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,672 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,672 DEBUG findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,672 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,672 DEBUG findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,672 DEBUG findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,672 DEBUG findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,672 DEBUG findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,672 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,672 DEBUG findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,673 DEBUG findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,673 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,673 DEBUG findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,673 DEBUG findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2023-01-07 15:29:34,673 DEBUG findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,673 DEBUG findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,673 DEBUG findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,673 DEBUG findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,673 DEBUG findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,673 DEBUG findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,673 DEBUG findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,673 DEBUG findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,673 DEBUG findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,673 DEBUG findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,673 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2023-01-07 15:29:34,673 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,673 DEBUG findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,673 DEBUG findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,673 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,674 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,674 DEBUG findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,674 DEBUG findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,674 DEBUG findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,674 DEBUG findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2023-01-07 15:29:34,674 DEBUG findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,674 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,674 DEBUG findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,674 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,697 DEBUG findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,697 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,697 DEBUG findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,697 DEBUG findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,697 DEBUG findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,697 DEBUG findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,697 DEBUG findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,697 DEBUG findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,698 DEBUG findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,698 DEBUG findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,698 DEBUG findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,698 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2023-01-07 15:29:34,698 DEBUG findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2023-01-07 15:29:34,698 DEBUG findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,698 DEBUG findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,698 DEBUG findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,698 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,698 DEBUG findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2023-01-07 15:29:34,698 DEBUG findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,698 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,698 DEBUG findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,698 DEBUG findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,698 DEBUG findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,698 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,698 DEBUG findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,698 DEBUG findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,698 DEBUG findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,698 DEBUG findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,699 DEBUG findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,699 DEBUG findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,699 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,699 DEBUG findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,699 DEBUG findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,699 DEBUG findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,699 DEBUG findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,699 DEBUG findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2023-01-07 15:29:34,699 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2023-01-07 15:29:34,699 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,699 DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,699 DEBUG findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,699 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2023-01-07 15:29:34,699 DEBUG findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,699 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,699 DEBUG findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,699 DEBUG findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,699 DEBUG findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,699 DEBUG findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,700 DEBUG findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,700 DEBUG findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,700 DEBUG findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,700 DEBUG findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,700 DEBUG findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,700 DEBUG findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,700 DEBUG findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,700 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2023-01-07 15:29:34,700 DEBUG findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,700 DEBUG findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,700 DEBUG findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,700 DEBUG findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,700 DEBUG findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,700 DEBUG findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,700 DEBUG findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,700 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2023-01-07 15:29:34,700 DEBUG findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,700 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2023-01-07 15:29:34,701 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,701 DEBUG findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,701 DEBUG findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,701 DEBUG findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,701 DEBUG findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,701 DEBUG findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,701 DEBUG findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,701 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,701 DEBUG findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,701 DEBUG findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,701 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,701 DEBUG findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,701 DEBUG findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,701 DEBUG findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,701 DEBUG findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,701 DEBUG findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,701 DEBUG findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,701 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,701 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,701 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,702 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2023-01-07 15:29:34,702 DEBUG findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,702 DEBUG findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,702 DEBUG findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,702 DEBUG findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,702 DEBUG findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,702 DEBUG findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,702 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,702 DEBUG findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,702 DEBUG findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,702 DEBUG findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,702 DEBUG findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,702 DEBUG findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,702 DEBUG findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,702 DEBUG findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,702 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,702 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,703 DEBUG findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,703 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 0.05
2023-01-07 15:29:34,703 DEBUG findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,703 DEBUG findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,703 DEBUG findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,703 DEBUG findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,703 DEBUG findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,703 DEBUG findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,703 DEBUG findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,703 DEBUG findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,703 DEBUG findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,703 DEBUG findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,703 DEBUG findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,703 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,703 DEBUG findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,703 DEBUG findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,703 DEBUG findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2023-01-07 15:29:34,703 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,703 DEBUG findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,703 DEBUG findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,704 DEBUG findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,704 DEBUG findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,704 DEBUG findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,704 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,704 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,704 DEBUG findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,704 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,704 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,704 DEBUG findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,704 DEBUG findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,704 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,704 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,704 DEBUG findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,704 DEBUG findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,704 DEBUG findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,704 DEBUG findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,704 DEBUG findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,704 DEBUG findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,704 DEBUG findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2023-01-07 15:29:34,704 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,705 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,705 DEBUG findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,705 DEBUG findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,705 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,705 DEBUG findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,705 DEBUG findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,705 DEBUG findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,705 DEBUG findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,705 DEBUG findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,705 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,705 DEBUG findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,705 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,705 DEBUG findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,705 DEBUG findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,705 DEBUG findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,705 DEBUG findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,705 DEBUG findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,705 DEBUG findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,705 DEBUG findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,705 DEBUG findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,706 DEBUG findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,706 DEBUG findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,706 DEBUG findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,706 DEBUG findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,706 DEBUG findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,706 DEBUG findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,706 DEBUG findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2023-01-07 15:29:34,706 DEBUG findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,706 DEBUG findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,706 DEBUG findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,706 DEBUG findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,706 DEBUG findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,706 DEBUG findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,706 DEBUG findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,706 DEBUG findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,706 DEBUG findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,707 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,707 DEBUG findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,707 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,707 DEBUG findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,707 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,707 DEBUG findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,707 DEBUG findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,707 DEBUG findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,707 DEBUG findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,707 DEBUG findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,707 DEBUG findfont: Matching STIXSizeFiveSym:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0 to STIXSizeFiveSym ('/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf') with score of 0.050000.
2023-01-07 15:29:34,709 DEBUG findfont: Matching cmsy10:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0.
2023-01-07 15:29:34,709 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,709 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,709 DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,709 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,709 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,709 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,709 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,709 DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,709 DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,709 DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 0.05
2023-01-07 15:29:34,709 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-07 15:29:34,710 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,710 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,710 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,710 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,710 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-07 15:29:34,710 DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,710 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,710 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,710 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,710 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,710 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,710 DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,710 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-07 15:29:34,710 DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,710 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,710 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,710 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,710 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,710 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,710 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,711 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-07 15:29:34,711 DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,711 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,711 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,711 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,711 DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,711 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,711 DEBUG findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,711 DEBUG findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,711 DEBUG findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,711 DEBUG findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,711 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,711 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,711 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,711 DEBUG findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,711 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,711 DEBUG findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,711 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,712 DEBUG findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,712 DEBUG findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,712 DEBUG findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,712 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,712 DEBUG findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,712 DEBUG findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,712 DEBUG findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,712 DEBUG findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,712 DEBUG findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,712 DEBUG findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,712 DEBUG findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,712 DEBUG findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,712 DEBUG findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,712 DEBUG findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,712 DEBUG findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,712 DEBUG findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,712 DEBUG findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,712 DEBUG findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,712 DEBUG findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,713 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2023-01-07 15:29:34,713 DEBUG findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,713 DEBUG findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,713 DEBUG findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,713 DEBUG findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,713 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,713 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,713 DEBUG findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,713 DEBUG findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,713 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,713 DEBUG findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,713 DEBUG findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,713 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,713 DEBUG findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,713 DEBUG findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,713 DEBUG findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,714 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,714 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,714 DEBUG findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,714 DEBUG findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,714 DEBUG findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,714 DEBUG findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,714 DEBUG findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,714 DEBUG findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,714 DEBUG findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,714 DEBUG findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2023-01-07 15:29:34,714 DEBUG findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,714 DEBUG findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,714 DEBUG findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,714 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2023-01-07 15:29:34,714 DEBUG findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,714 DEBUG findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,715 DEBUG findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,715 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,715 DEBUG findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,715 DEBUG findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,715 DEBUG findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,715 DEBUG findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,715 DEBUG findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,715 DEBUG findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,715 DEBUG findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,715 DEBUG findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,715 DEBUG findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,715 DEBUG findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,715 DEBUG findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,715 DEBUG findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,716 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,716 DEBUG findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,716 DEBUG findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,716 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,716 DEBUG findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,716 DEBUG findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,716 DEBUG findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,716 DEBUG findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,716 DEBUG findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,716 DEBUG findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,716 DEBUG findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,716 DEBUG findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,716 DEBUG findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,716 DEBUG findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,716 DEBUG findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,716 DEBUG findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,716 DEBUG findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,716 DEBUG findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,717 DEBUG findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,717 DEBUG findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,717 DEBUG findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,717 DEBUG findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,717 DEBUG findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,717 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,717 DEBUG findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,717 DEBUG findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,717 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,717 DEBUG findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,717 DEBUG findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,717 DEBUG findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,717 DEBUG findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,717 DEBUG findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,717 DEBUG findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,717 DEBUG findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,717 DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,717 DEBUG findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,717 DEBUG findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,718 DEBUG findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,718 DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,718 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2023-01-07 15:29:34,718 DEBUG findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,718 DEBUG findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,718 DEBUG findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,718 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,718 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,718 DEBUG findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,718 DEBUG findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,718 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,718 DEBUG findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,718 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,718 DEBUG findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,718 DEBUG findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,718 DEBUG findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,719 DEBUG findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,719 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,719 DEBUG findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,719 DEBUG findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,719 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,719 DEBUG findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,719 DEBUG findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2023-01-07 15:29:34,719 DEBUG findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,719 DEBUG findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,719 DEBUG findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,719 DEBUG findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,719 DEBUG findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,719 DEBUG findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,719 DEBUG findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,719 DEBUG findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,719 DEBUG findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,719 DEBUG findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,719 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2023-01-07 15:29:34,719 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,720 DEBUG findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,720 DEBUG findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,720 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,720 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,720 DEBUG findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,720 DEBUG findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,720 DEBUG findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,720 DEBUG findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2023-01-07 15:29:34,720 DEBUG findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,720 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,720 DEBUG findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,720 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,720 DEBUG findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,720 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,720 DEBUG findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,720 DEBUG findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,720 DEBUG findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,721 DEBUG findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,721 DEBUG findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,721 DEBUG findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,721 DEBUG findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,721 DEBUG findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,721 DEBUG findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,721 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2023-01-07 15:29:34,721 DEBUG findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2023-01-07 15:29:34,721 DEBUG findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,721 DEBUG findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,721 DEBUG findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,721 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,721 DEBUG findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2023-01-07 15:29:34,721 DEBUG findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,721 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,721 DEBUG findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,721 DEBUG findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,721 DEBUG findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,721 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,721 DEBUG findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,722 DEBUG findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,722 DEBUG findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,722 DEBUG findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,722 DEBUG findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,722 DEBUG findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,722 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,722 DEBUG findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,722 DEBUG findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,722 DEBUG findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,722 DEBUG findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,722 DEBUG findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2023-01-07 15:29:34,722 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2023-01-07 15:29:34,722 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,722 DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,722 DEBUG findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,722 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2023-01-07 15:29:34,722 DEBUG findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,722 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,722 DEBUG findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,723 DEBUG findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,723 DEBUG findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,723 DEBUG findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,723 DEBUG findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,723 DEBUG findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,723 DEBUG findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,723 DEBUG findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,723 DEBUG findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,723 DEBUG findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,723 DEBUG findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,723 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2023-01-07 15:29:34,723 DEBUG findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,723 DEBUG findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,723 DEBUG findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,723 DEBUG findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,723 DEBUG findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,723 DEBUG findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,723 DEBUG findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,723 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2023-01-07 15:29:34,724 DEBUG findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,724 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2023-01-07 15:29:34,724 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,724 DEBUG findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,724 DEBUG findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,724 DEBUG findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,724 DEBUG findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,724 DEBUG findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,724 DEBUG findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,724 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,724 DEBUG findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,724 DEBUG findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,724 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,724 DEBUG findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,724 DEBUG findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,724 DEBUG findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,724 DEBUG findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,724 DEBUG findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,724 DEBUG findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,725 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,725 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,725 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,725 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2023-01-07 15:29:34,725 DEBUG findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,725 DEBUG findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,725 DEBUG findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,725 DEBUG findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,725 DEBUG findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,725 DEBUG findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,725 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,725 DEBUG findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,725 DEBUG findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,725 DEBUG findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,725 DEBUG findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,725 DEBUG findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,725 DEBUG findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,725 DEBUG findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,725 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,726 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,726 DEBUG findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,726 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,726 DEBUG findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,726 DEBUG findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,726 DEBUG findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,726 DEBUG findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,726 DEBUG findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,726 DEBUG findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,726 DEBUG findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,726 DEBUG findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,726 DEBUG findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,726 DEBUG findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,726 DEBUG findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,726 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,726 DEBUG findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,726 DEBUG findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,726 DEBUG findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2023-01-07 15:29:34,726 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,726 DEBUG findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,726 DEBUG findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,727 DEBUG findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,727 DEBUG findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,727 DEBUG findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,727 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,727 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,727 DEBUG findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,727 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,727 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,727 DEBUG findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,727 DEBUG findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,727 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,727 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,727 DEBUG findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,727 DEBUG findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,727 DEBUG findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,727 DEBUG findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,727 DEBUG findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,727 DEBUG findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,727 DEBUG findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2023-01-07 15:29:34,728 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,728 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,728 DEBUG findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,728 DEBUG findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,728 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,728 DEBUG findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,728 DEBUG findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,728 DEBUG findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,728 DEBUG findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,728 DEBUG findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,728 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,728 DEBUG findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,728 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,728 DEBUG findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,728 DEBUG findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,728 DEBUG findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,728 DEBUG findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,728 DEBUG findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,728 DEBUG findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,728 DEBUG findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,729 DEBUG findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,729 DEBUG findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,729 DEBUG findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,729 DEBUG findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,729 DEBUG findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,729 DEBUG findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,729 DEBUG findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,729 DEBUG findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2023-01-07 15:29:34,729 DEBUG findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,729 DEBUG findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,729 DEBUG findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,729 DEBUG findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,729 DEBUG findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,729 DEBUG findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,729 DEBUG findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,729 DEBUG findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,729 DEBUG findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,729 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,729 DEBUG findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,730 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,730 DEBUG findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,730 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,730 DEBUG findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,730 DEBUG findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,730 DEBUG findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,730 DEBUG findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,730 DEBUG findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,730 DEBUG findfont: Matching cmsy10:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0 to cmsy10 ('/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf') with score of 0.050000.
2023-01-07 15:29:34,731 DEBUG findfont: Matching cmr10:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0.
2023-01-07 15:29:34,731 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,731 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,731 DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 0.05
2023-01-07 15:29:34,731 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,731 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,731 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,731 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,731 DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,731 DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,731 DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,731 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-07 15:29:34,731 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,731 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,731 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,732 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,732 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-07 15:29:34,732 DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,732 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,732 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,732 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,732 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,732 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,732 DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,732 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-07 15:29:34,732 DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,732 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,732 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,732 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,732 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,732 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,732 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,732 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-07 15:29:34,733 DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,733 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,733 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,733 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,733 DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,733 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,733 DEBUG findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,733 DEBUG findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,733 DEBUG findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,733 DEBUG findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,733 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,733 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,733 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,733 DEBUG findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,733 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,733 DEBUG findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,733 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,733 DEBUG findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,733 DEBUG findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,734 DEBUG findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,734 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,734 DEBUG findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,734 DEBUG findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,734 DEBUG findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,734 DEBUG findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,734 DEBUG findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,734 DEBUG findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,734 DEBUG findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,734 DEBUG findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,734 DEBUG findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,734 DEBUG findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,734 DEBUG findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,734 DEBUG findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,734 DEBUG findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,734 DEBUG findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,735 DEBUG findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,735 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2023-01-07 15:29:34,735 DEBUG findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,735 DEBUG findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,735 DEBUG findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,735 DEBUG findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,735 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,735 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,735 DEBUG findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,735 DEBUG findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,735 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,735 DEBUG findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,735 DEBUG findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,735 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,735 DEBUG findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,735 DEBUG findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,735 DEBUG findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,735 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,735 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,736 DEBUG findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,736 DEBUG findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,736 DEBUG findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,736 DEBUG findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,736 DEBUG findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,736 DEBUG findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,736 DEBUG findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,736 DEBUG findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2023-01-07 15:29:34,736 DEBUG findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,736 DEBUG findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,736 DEBUG findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,736 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2023-01-07 15:29:34,736 DEBUG findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,736 DEBUG findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,736 DEBUG findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,736 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,736 DEBUG findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,736 DEBUG findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,737 DEBUG findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,737 DEBUG findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,737 DEBUG findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,737 DEBUG findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,737 DEBUG findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,737 DEBUG findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,737 DEBUG findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,737 DEBUG findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,737 DEBUG findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,737 DEBUG findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,737 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,737 DEBUG findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,737 DEBUG findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,737 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,737 DEBUG findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,737 DEBUG findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,737 DEBUG findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,737 DEBUG findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,737 DEBUG findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,738 DEBUG findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,738 DEBUG findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,738 DEBUG findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,738 DEBUG findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,738 DEBUG findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,738 DEBUG findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,738 DEBUG findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,738 DEBUG findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,738 DEBUG findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,738 DEBUG findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,738 DEBUG findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,738 DEBUG findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,738 DEBUG findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,738 DEBUG findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,739 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,739 DEBUG findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,739 DEBUG findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,739 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,739 DEBUG findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,739 DEBUG findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,739 DEBUG findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,739 DEBUG findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,739 DEBUG findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,739 DEBUG findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,739 DEBUG findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,739 DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,739 DEBUG findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,739 DEBUG findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,739 DEBUG findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,739 DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,739 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2023-01-07 15:29:34,739 DEBUG findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,739 DEBUG findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,740 DEBUG findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,740 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,740 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,740 DEBUG findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,740 DEBUG findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,740 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,740 DEBUG findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,740 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,740 DEBUG findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,740 DEBUG findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,740 DEBUG findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,740 DEBUG findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,741 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,741 DEBUG findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,741 DEBUG findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,741 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,741 DEBUG findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,741 DEBUG findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2023-01-07 15:29:34,741 DEBUG findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,741 DEBUG findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,741 DEBUG findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,741 DEBUG findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,741 DEBUG findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,741 DEBUG findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,741 DEBUG findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,741 DEBUG findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,741 DEBUG findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,741 DEBUG findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,741 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2023-01-07 15:29:34,742 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,742 DEBUG findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,742 DEBUG findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,742 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,742 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,742 DEBUG findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,742 DEBUG findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,742 DEBUG findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,742 DEBUG findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2023-01-07 15:29:34,742 DEBUG findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,742 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,742 DEBUG findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,742 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,742 DEBUG findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,742 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,742 DEBUG findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,742 DEBUG findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,742 DEBUG findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,742 DEBUG findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,743 DEBUG findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,743 DEBUG findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,743 DEBUG findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,743 DEBUG findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,743 DEBUG findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,743 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2023-01-07 15:29:34,743 DEBUG findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2023-01-07 15:29:34,743 DEBUG findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,743 DEBUG findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,743 DEBUG findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,743 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,743 DEBUG findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2023-01-07 15:29:34,743 DEBUG findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,743 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,743 DEBUG findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,743 DEBUG findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,743 DEBUG findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,743 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,743 DEBUG findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,743 DEBUG findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,744 DEBUG findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,744 DEBUG findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,744 DEBUG findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,744 DEBUG findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,744 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,744 DEBUG findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,744 DEBUG findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,744 DEBUG findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,744 DEBUG findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,744 DEBUG findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2023-01-07 15:29:34,744 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2023-01-07 15:29:34,744 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,744 DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,744 DEBUG findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,744 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2023-01-07 15:29:34,744 DEBUG findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,744 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,744 DEBUG findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,745 DEBUG findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,745 DEBUG findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,745 DEBUG findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,745 DEBUG findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,745 DEBUG findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,745 DEBUG findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,745 DEBUG findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,745 DEBUG findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,745 DEBUG findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,745 DEBUG findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,745 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2023-01-07 15:29:34,745 DEBUG findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,745 DEBUG findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,745 DEBUG findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,745 DEBUG findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,745 DEBUG findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,745 DEBUG findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,745 DEBUG findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,745 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2023-01-07 15:29:34,745 DEBUG findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,746 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2023-01-07 15:29:34,746 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,746 DEBUG findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,746 DEBUG findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,746 DEBUG findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,746 DEBUG findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,746 DEBUG findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,746 DEBUG findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,746 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,746 DEBUG findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,746 DEBUG findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,746 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,746 DEBUG findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,746 DEBUG findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,746 DEBUG findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,746 DEBUG findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,746 DEBUG findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,746 DEBUG findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,746 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,747 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,747 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,747 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2023-01-07 15:29:34,747 DEBUG findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,747 DEBUG findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,747 DEBUG findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,747 DEBUG findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,747 DEBUG findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,747 DEBUG findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,747 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,747 DEBUG findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,747 DEBUG findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,747 DEBUG findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,747 DEBUG findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,747 DEBUG findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,747 DEBUG findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,747 DEBUG findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,747 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,748 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,748 DEBUG findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,748 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,748 DEBUG findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,748 DEBUG findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,748 DEBUG findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,748 DEBUG findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,748 DEBUG findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,748 DEBUG findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,748 DEBUG findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,748 DEBUG findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,748 DEBUG findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,748 DEBUG findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,748 DEBUG findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,748 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,748 DEBUG findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,748 DEBUG findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,748 DEBUG findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2023-01-07 15:29:34,749 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,749 DEBUG findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,749 DEBUG findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,749 DEBUG findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,749 DEBUG findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,749 DEBUG findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,749 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,749 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,749 DEBUG findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,749 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,749 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,749 DEBUG findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,749 DEBUG findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,749 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,749 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,749 DEBUG findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,749 DEBUG findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,749 DEBUG findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,750 DEBUG findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,750 DEBUG findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,750 DEBUG findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,750 DEBUG findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2023-01-07 15:29:34,750 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,750 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,750 DEBUG findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,750 DEBUG findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,750 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,750 DEBUG findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,750 DEBUG findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,751 DEBUG findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,751 DEBUG findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,751 DEBUG findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,751 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,751 DEBUG findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,751 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,751 DEBUG findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,751 DEBUG findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,751 DEBUG findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,752 DEBUG findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,752 DEBUG findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,752 DEBUG findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,752 DEBUG findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,752 DEBUG findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,752 DEBUG findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,752 DEBUG findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,752 DEBUG findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,752 DEBUG findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,753 DEBUG findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,753 DEBUG findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,753 DEBUG findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2023-01-07 15:29:34,753 DEBUG findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,753 DEBUG findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,753 DEBUG findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,753 DEBUG findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,753 DEBUG findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,753 DEBUG findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,753 DEBUG findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,754 DEBUG findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,754 DEBUG findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,754 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,754 DEBUG findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,754 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,754 DEBUG findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,754 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,754 DEBUG findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,754 DEBUG findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,754 DEBUG findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,754 DEBUG findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,754 DEBUG findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,754 DEBUG findfont: Matching cmr10:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0 to cmr10 ('/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf') with score of 0.050000.
2023-01-07 15:29:34,755 DEBUG findfont: Matching cmtt10:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0.
2023-01-07 15:29:34,755 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,755 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,756 DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,756 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,756 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,756 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,756 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,756 DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,756 DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,756 DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,756 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-07 15:29:34,756 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,756 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,756 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,756 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,756 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-07 15:29:34,756 DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,756 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,756 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,757 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,757 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,757 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,757 DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,757 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-07 15:29:34,757 DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 0.05
2023-01-07 15:29:34,757 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,757 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,757 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,757 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,757 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,757 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,757 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-07 15:29:34,757 DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,757 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,757 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,757 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,758 DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,758 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,758 DEBUG findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,758 DEBUG findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,758 DEBUG findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,758 DEBUG findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,758 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,758 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,758 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,758 DEBUG findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,758 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,758 DEBUG findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,758 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,759 DEBUG findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,759 DEBUG findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,759 DEBUG findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,759 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,759 DEBUG findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,759 DEBUG findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,759 DEBUG findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,759 DEBUG findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,759 DEBUG findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,759 DEBUG findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,759 DEBUG findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,759 DEBUG findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,759 DEBUG findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,759 DEBUG findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,759 DEBUG findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,760 DEBUG findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,760 DEBUG findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,760 DEBUG findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,760 DEBUG findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,760 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2023-01-07 15:29:34,760 DEBUG findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,760 DEBUG findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,760 DEBUG findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,760 DEBUG findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,760 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,760 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,760 DEBUG findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,760 DEBUG findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,760 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,761 DEBUG findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,761 DEBUG findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,761 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,761 DEBUG findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,761 DEBUG findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,761 DEBUG findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,761 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,761 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,761 DEBUG findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,761 DEBUG findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,761 DEBUG findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,761 DEBUG findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,761 DEBUG findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,761 DEBUG findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,761 DEBUG findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,762 DEBUG findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2023-01-07 15:29:34,762 DEBUG findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,762 DEBUG findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,762 DEBUG findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,762 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2023-01-07 15:29:34,762 DEBUG findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,762 DEBUG findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,762 DEBUG findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,762 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,762 DEBUG findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,762 DEBUG findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,762 DEBUG findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,762 DEBUG findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,762 DEBUG findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,762 DEBUG findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,762 DEBUG findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,762 DEBUG findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,762 DEBUG findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,762 DEBUG findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,763 DEBUG findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,763 DEBUG findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,763 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,763 DEBUG findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,763 DEBUG findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,763 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,763 DEBUG findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,763 DEBUG findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,763 DEBUG findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,763 DEBUG findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,763 DEBUG findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,763 DEBUG findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,763 DEBUG findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,763 DEBUG findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,763 DEBUG findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,763 DEBUG findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,763 DEBUG findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,763 DEBUG findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,763 DEBUG findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,763 DEBUG findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,764 DEBUG findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,764 DEBUG findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,764 DEBUG findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,764 DEBUG findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,764 DEBUG findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,764 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,764 DEBUG findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,764 DEBUG findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,764 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,764 DEBUG findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,764 DEBUG findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,764 DEBUG findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,764 DEBUG findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,764 DEBUG findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,764 DEBUG findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,764 DEBUG findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,764 DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,764 DEBUG findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,764 DEBUG findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,764 DEBUG findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,765 DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,765 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2023-01-07 15:29:34,765 DEBUG findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,765 DEBUG findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,765 DEBUG findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,765 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,765 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,765 DEBUG findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,765 DEBUG findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,765 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,765 DEBUG findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,765 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,765 DEBUG findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,765 DEBUG findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,765 DEBUG findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,765 DEBUG findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,765 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,765 DEBUG findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,765 DEBUG findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,766 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,766 DEBUG findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,766 DEBUG findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2023-01-07 15:29:34,766 DEBUG findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,766 DEBUG findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,766 DEBUG findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,766 DEBUG findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,766 DEBUG findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,766 DEBUG findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,766 DEBUG findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,766 DEBUG findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,766 DEBUG findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,766 DEBUG findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,766 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2023-01-07 15:29:34,766 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,766 DEBUG findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,766 DEBUG findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,766 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,766 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,767 DEBUG findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,767 DEBUG findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,767 DEBUG findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,767 DEBUG findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2023-01-07 15:29:34,767 DEBUG findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,767 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,767 DEBUG findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,767 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,767 DEBUG findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,767 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,767 DEBUG findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,767 DEBUG findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,767 DEBUG findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,767 DEBUG findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,767 DEBUG findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,767 DEBUG findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,767 DEBUG findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,767 DEBUG findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,767 DEBUG findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,768 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2023-01-07 15:29:34,768 DEBUG findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2023-01-07 15:29:34,768 DEBUG findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,768 DEBUG findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,768 DEBUG findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,768 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,768 DEBUG findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2023-01-07 15:29:34,768 DEBUG findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,768 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,768 DEBUG findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,768 DEBUG findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,768 DEBUG findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,768 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,768 DEBUG findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,768 DEBUG findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,768 DEBUG findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,768 DEBUG findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,768 DEBUG findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,768 DEBUG findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,769 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,769 DEBUG findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,769 DEBUG findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,769 DEBUG findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,769 DEBUG findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,769 DEBUG findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2023-01-07 15:29:34,769 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2023-01-07 15:29:34,769 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,769 DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,769 DEBUG findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,769 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2023-01-07 15:29:34,769 DEBUG findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,769 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,769 DEBUG findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,769 DEBUG findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,769 DEBUG findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,769 DEBUG findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,769 DEBUG findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,769 DEBUG findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,769 DEBUG findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,770 DEBUG findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,770 DEBUG findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,770 DEBUG findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,770 DEBUG findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,770 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2023-01-07 15:29:34,770 DEBUG findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,770 DEBUG findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,770 DEBUG findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,770 DEBUG findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,770 DEBUG findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,770 DEBUG findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,770 DEBUG findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,770 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2023-01-07 15:29:34,770 DEBUG findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,770 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2023-01-07 15:29:34,770 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,770 DEBUG findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,770 DEBUG findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,770 DEBUG findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,771 DEBUG findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,771 DEBUG findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,771 DEBUG findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,771 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,771 DEBUG findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,771 DEBUG findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,771 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,771 DEBUG findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,771 DEBUG findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,771 DEBUG findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,771 DEBUG findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,771 DEBUG findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,771 DEBUG findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,771 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,771 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,771 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,772 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2023-01-07 15:29:34,772 DEBUG findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,772 DEBUG findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,772 DEBUG findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,772 DEBUG findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,772 DEBUG findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,772 DEBUG findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,772 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,772 DEBUG findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,772 DEBUG findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,772 DEBUG findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,772 DEBUG findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,772 DEBUG findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,772 DEBUG findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,772 DEBUG findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,772 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,772 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,772 DEBUG findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,772 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,772 DEBUG findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,773 DEBUG findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,773 DEBUG findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,773 DEBUG findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,773 DEBUG findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,773 DEBUG findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,773 DEBUG findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,773 DEBUG findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,773 DEBUG findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,773 DEBUG findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,773 DEBUG findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,773 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,773 DEBUG findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,773 DEBUG findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,773 DEBUG findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2023-01-07 15:29:34,773 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,773 DEBUG findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,773 DEBUG findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,773 DEBUG findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,773 DEBUG findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,774 DEBUG findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,774 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,774 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,774 DEBUG findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,774 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,774 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,774 DEBUG findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,774 DEBUG findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,774 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,774 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,774 DEBUG findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,774 DEBUG findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,774 DEBUG findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,774 DEBUG findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,774 DEBUG findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,774 DEBUG findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,774 DEBUG findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2023-01-07 15:29:34,774 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,774 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,775 DEBUG findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,775 DEBUG findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,775 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,775 DEBUG findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,775 DEBUG findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,775 DEBUG findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,775 DEBUG findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,775 DEBUG findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,775 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,775 DEBUG findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,775 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,775 DEBUG findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,775 DEBUG findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,775 DEBUG findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,775 DEBUG findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,775 DEBUG findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,775 DEBUG findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,775 DEBUG findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,775 DEBUG findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,775 DEBUG findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,775 DEBUG findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,776 DEBUG findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,776 DEBUG findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,776 DEBUG findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,776 DEBUG findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,776 DEBUG findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2023-01-07 15:29:34,776 DEBUG findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,776 DEBUG findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,776 DEBUG findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,776 DEBUG findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,776 DEBUG findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,776 DEBUG findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,776 DEBUG findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,776 DEBUG findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,776 DEBUG findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,776 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,776 DEBUG findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,776 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,776 DEBUG findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,776 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,776 DEBUG findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,777 DEBUG findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,777 DEBUG findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,777 DEBUG findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,777 DEBUG findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,777 DEBUG findfont: Matching cmtt10:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0 to cmtt10 ('/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf') with score of 0.050000.
2023-01-07 15:29:34,777 DEBUG findfont: Matching cmmi10:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0.
2023-01-07 15:29:34,777 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,777 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,777 DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,778 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,778 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,778 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,778 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,778 DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,778 DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,778 DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,778 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-07 15:29:34,778 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,778 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,778 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,778 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,778 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-07 15:29:34,778 DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,778 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,778 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,778 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,778 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,778 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,778 DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,779 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-07 15:29:34,779 DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,779 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,779 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,779 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,779 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,779 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,779 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,779 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-07 15:29:34,779 DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 0.05
2023-01-07 15:29:34,779 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,779 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,779 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,779 DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,779 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,779 DEBUG findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,779 DEBUG findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,779 DEBUG findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,779 DEBUG findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,779 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,780 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,780 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,780 DEBUG findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,780 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,780 DEBUG findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,780 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,780 DEBUG findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,780 DEBUG findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,780 DEBUG findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,780 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,780 DEBUG findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,780 DEBUG findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,780 DEBUG findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,780 DEBUG findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,780 DEBUG findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,780 DEBUG findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,780 DEBUG findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,780 DEBUG findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,780 DEBUG findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,780 DEBUG findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,781 DEBUG findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,781 DEBUG findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,781 DEBUG findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,781 DEBUG findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,781 DEBUG findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,781 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2023-01-07 15:29:34,781 DEBUG findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,781 DEBUG findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,781 DEBUG findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,781 DEBUG findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,781 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,781 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,781 DEBUG findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,781 DEBUG findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,781 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,781 DEBUG findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,781 DEBUG findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,781 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,781 DEBUG findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,782 DEBUG findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,782 DEBUG findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,782 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,782 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,782 DEBUG findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,782 DEBUG findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,782 DEBUG findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,782 DEBUG findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,782 DEBUG findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,782 DEBUG findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,782 DEBUG findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,782 DEBUG findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2023-01-07 15:29:34,782 DEBUG findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,782 DEBUG findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,782 DEBUG findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,782 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2023-01-07 15:29:34,782 DEBUG findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,782 DEBUG findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,782 DEBUG findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,782 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,783 DEBUG findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,783 DEBUG findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,783 DEBUG findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,783 DEBUG findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,783 DEBUG findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,783 DEBUG findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,783 DEBUG findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,783 DEBUG findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,783 DEBUG findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,783 DEBUG findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,783 DEBUG findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,783 DEBUG findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,783 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,783 DEBUG findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,783 DEBUG findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,783 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,783 DEBUG findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,783 DEBUG findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,783 DEBUG findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,783 DEBUG findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,783 DEBUG findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,784 DEBUG findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,784 DEBUG findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,784 DEBUG findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,784 DEBUG findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,784 DEBUG findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,784 DEBUG findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,784 DEBUG findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,784 DEBUG findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,784 DEBUG findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,784 DEBUG findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,784 DEBUG findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,784 DEBUG findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,784 DEBUG findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,784 DEBUG findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,784 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,784 DEBUG findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,784 DEBUG findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,784 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,784 DEBUG findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,785 DEBUG findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,785 DEBUG findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,785 DEBUG findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,785 DEBUG findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,785 DEBUG findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,785 DEBUG findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,785 DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,785 DEBUG findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,785 DEBUG findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,785 DEBUG findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,785 DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,785 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2023-01-07 15:29:34,785 DEBUG findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,785 DEBUG findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,785 DEBUG findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,785 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,785 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,785 DEBUG findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,785 DEBUG findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,785 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,786 DEBUG findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,786 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,786 DEBUG findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,786 DEBUG findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,786 DEBUG findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,786 DEBUG findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,786 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,786 DEBUG findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,786 DEBUG findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,786 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,786 DEBUG findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,786 DEBUG findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2023-01-07 15:29:34,786 DEBUG findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,786 DEBUG findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,786 DEBUG findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,786 DEBUG findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,786 DEBUG findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,786 DEBUG findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,786 DEBUG findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,786 DEBUG findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,787 DEBUG findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,787 DEBUG findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,787 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2023-01-07 15:29:34,787 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,787 DEBUG findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,787 DEBUG findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,787 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,787 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,787 DEBUG findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,787 DEBUG findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,787 DEBUG findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,787 DEBUG findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2023-01-07 15:29:34,787 DEBUG findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,787 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,787 DEBUG findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,787 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,787 DEBUG findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,787 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,787 DEBUG findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,787 DEBUG findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,788 DEBUG findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,788 DEBUG findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,788 DEBUG findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,788 DEBUG findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,788 DEBUG findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,788 DEBUG findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,788 DEBUG findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,788 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2023-01-07 15:29:34,788 DEBUG findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2023-01-07 15:29:34,788 DEBUG findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,788 DEBUG findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,788 DEBUG findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,788 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,788 DEBUG findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2023-01-07 15:29:34,788 DEBUG findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,788 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,788 DEBUG findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,788 DEBUG findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,788 DEBUG findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,788 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,789 DEBUG findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,789 DEBUG findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,789 DEBUG findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,789 DEBUG findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,789 DEBUG findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,789 DEBUG findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,789 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,789 DEBUG findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,789 DEBUG findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,789 DEBUG findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,789 DEBUG findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,789 DEBUG findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2023-01-07 15:29:34,789 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2023-01-07 15:29:34,789 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,789 DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,789 DEBUG findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,789 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2023-01-07 15:29:34,789 DEBUG findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,790 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,790 DEBUG findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,790 DEBUG findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,790 DEBUG findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,790 DEBUG findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,790 DEBUG findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,790 DEBUG findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,790 DEBUG findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,790 DEBUG findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,790 DEBUG findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,790 DEBUG findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,790 DEBUG findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,790 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2023-01-07 15:29:34,790 DEBUG findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,790 DEBUG findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,790 DEBUG findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,790 DEBUG findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,790 DEBUG findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,790 DEBUG findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,791 DEBUG findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,791 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2023-01-07 15:29:34,791 DEBUG findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,791 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2023-01-07 15:29:34,791 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,791 DEBUG findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,791 DEBUG findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,791 DEBUG findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,791 DEBUG findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,791 DEBUG findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,791 DEBUG findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,791 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,791 DEBUG findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,791 DEBUG findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,791 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,791 DEBUG findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,791 DEBUG findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,791 DEBUG findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,791 DEBUG findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,791 DEBUG findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,792 DEBUG findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,792 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,792 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,792 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,792 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2023-01-07 15:29:34,792 DEBUG findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,792 DEBUG findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,792 DEBUG findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,792 DEBUG findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,792 DEBUG findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,792 DEBUG findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,792 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,792 DEBUG findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,792 DEBUG findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,792 DEBUG findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,792 DEBUG findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,792 DEBUG findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,792 DEBUG findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,792 DEBUG findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,793 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,793 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,793 DEBUG findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,793 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,793 DEBUG findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,793 DEBUG findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,793 DEBUG findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,793 DEBUG findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,793 DEBUG findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,793 DEBUG findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,793 DEBUG findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,793 DEBUG findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,793 DEBUG findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,793 DEBUG findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,793 DEBUG findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,793 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,793 DEBUG findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,793 DEBUG findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,793 DEBUG findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2023-01-07 15:29:34,794 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,794 DEBUG findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,794 DEBUG findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,794 DEBUG findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,794 DEBUG findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,794 DEBUG findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,794 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,794 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,794 DEBUG findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,794 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,794 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,794 DEBUG findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,794 DEBUG findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,794 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,794 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,794 DEBUG findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,794 DEBUG findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,794 DEBUG findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,794 DEBUG findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,794 DEBUG findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,795 DEBUG findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,795 DEBUG findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2023-01-07 15:29:34,795 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,795 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,795 DEBUG findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,795 DEBUG findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,795 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,795 DEBUG findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,795 DEBUG findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,795 DEBUG findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,795 DEBUG findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,795 DEBUG findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,795 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,795 DEBUG findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,795 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,795 DEBUG findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,795 DEBUG findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,796 DEBUG findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,796 DEBUG findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,796 DEBUG findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,796 DEBUG findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,796 DEBUG findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,796 DEBUG findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,796 DEBUG findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,796 DEBUG findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,796 DEBUG findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,796 DEBUG findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,796 DEBUG findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,796 DEBUG findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,796 DEBUG findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2023-01-07 15:29:34,796 DEBUG findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,796 DEBUG findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,796 DEBUG findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,796 DEBUG findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,796 DEBUG findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,796 DEBUG findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,797 DEBUG findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,797 DEBUG findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,797 DEBUG findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,797 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,797 DEBUG findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,797 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,797 DEBUG findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,797 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,797 DEBUG findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,797 DEBUG findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,797 DEBUG findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,797 DEBUG findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,797 DEBUG findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,797 DEBUG findfont: Matching cmmi10:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0 to cmmi10 ('/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf') with score of 0.050000.
2023-01-07 15:29:34,798 DEBUG findfont: Matching cmb10:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0.
2023-01-07 15:29:34,798 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,798 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,798 DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,798 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,798 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,798 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,798 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,798 DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,798 DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,798 DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,798 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-07 15:29:34,798 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,798 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,799 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,799 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,799 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-07 15:29:34,799 DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 0.05
2023-01-07 15:29:34,799 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,799 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,799 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,799 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,799 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,799 DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,799 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-07 15:29:34,799 DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,799 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,799 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,799 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,799 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,799 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,799 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,799 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-07 15:29:34,800 DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,800 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,800 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,800 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,800 DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,800 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,800 DEBUG findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,800 DEBUG findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,800 DEBUG findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,800 DEBUG findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,800 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,800 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,800 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,800 DEBUG findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,800 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,800 DEBUG findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,800 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,800 DEBUG findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,800 DEBUG findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,801 DEBUG findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,801 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,801 DEBUG findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,801 DEBUG findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,801 DEBUG findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,801 DEBUG findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,801 DEBUG findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,801 DEBUG findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,801 DEBUG findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,801 DEBUG findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,801 DEBUG findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,801 DEBUG findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,801 DEBUG findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,801 DEBUG findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,801 DEBUG findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,801 DEBUG findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,801 DEBUG findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,801 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2023-01-07 15:29:34,801 DEBUG findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,802 DEBUG findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,802 DEBUG findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,802 DEBUG findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,802 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,802 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,802 DEBUG findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,802 DEBUG findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,802 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,802 DEBUG findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,802 DEBUG findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,802 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,802 DEBUG findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,802 DEBUG findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,802 DEBUG findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,802 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,802 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,802 DEBUG findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,802 DEBUG findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,803 DEBUG findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,803 DEBUG findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,803 DEBUG findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,803 DEBUG findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,803 DEBUG findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,803 DEBUG findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2023-01-07 15:29:34,803 DEBUG findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,803 DEBUG findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,803 DEBUG findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,803 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2023-01-07 15:29:34,803 DEBUG findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,803 DEBUG findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,803 DEBUG findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,803 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,803 DEBUG findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,803 DEBUG findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,803 DEBUG findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,804 DEBUG findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,804 DEBUG findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,804 DEBUG findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,804 DEBUG findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,804 DEBUG findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,804 DEBUG findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,804 DEBUG findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,804 DEBUG findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,804 DEBUG findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,804 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,805 DEBUG findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,805 DEBUG findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,805 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,805 DEBUG findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,805 DEBUG findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,805 DEBUG findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,805 DEBUG findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,805 DEBUG findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,805 DEBUG findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,805 DEBUG findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,805 DEBUG findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,805 DEBUG findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,805 DEBUG findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,805 DEBUG findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,805 DEBUG findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,805 DEBUG findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,805 DEBUG findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,805 DEBUG findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,805 DEBUG findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,805 DEBUG findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,806 DEBUG findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,806 DEBUG findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,806 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,806 DEBUG findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,806 DEBUG findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,806 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,806 DEBUG findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,806 DEBUG findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,806 DEBUG findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,806 DEBUG findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,806 DEBUG findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,806 DEBUG findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,806 DEBUG findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,806 DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,806 DEBUG findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,806 DEBUG findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,806 DEBUG findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,806 DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,806 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2023-01-07 15:29:34,807 DEBUG findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,807 DEBUG findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,807 DEBUG findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,807 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,807 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,807 DEBUG findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,807 DEBUG findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,807 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,807 DEBUG findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,807 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,807 DEBUG findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,807 DEBUG findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,807 DEBUG findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,807 DEBUG findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,807 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,807 DEBUG findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,807 DEBUG findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,807 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,808 DEBUG findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,808 DEBUG findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2023-01-07 15:29:34,808 DEBUG findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,808 DEBUG findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,808 DEBUG findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,808 DEBUG findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,808 DEBUG findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,808 DEBUG findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,808 DEBUG findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,808 DEBUG findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,808 DEBUG findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,808 DEBUG findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,808 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2023-01-07 15:29:34,808 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,808 DEBUG findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,808 DEBUG findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,808 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,808 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,808 DEBUG findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,809 DEBUG findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,809 DEBUG findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,809 DEBUG findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2023-01-07 15:29:34,809 DEBUG findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,809 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,809 DEBUG findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,809 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,809 DEBUG findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,809 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,809 DEBUG findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,809 DEBUG findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,809 DEBUG findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,809 DEBUG findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,809 DEBUG findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,809 DEBUG findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,809 DEBUG findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,809 DEBUG findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,809 DEBUG findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,809 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2023-01-07 15:29:34,810 DEBUG findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2023-01-07 15:29:34,810 DEBUG findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,810 DEBUG findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,810 DEBUG findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,810 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,810 DEBUG findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2023-01-07 15:29:34,810 DEBUG findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,810 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,810 DEBUG findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,810 DEBUG findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,810 DEBUG findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,810 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,810 DEBUG findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,810 DEBUG findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,810 DEBUG findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,810 DEBUG findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,810 DEBUG findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,810 DEBUG findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,811 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,811 DEBUG findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,811 DEBUG findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,811 DEBUG findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,811 DEBUG findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,811 DEBUG findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2023-01-07 15:29:34,811 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2023-01-07 15:29:34,811 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,811 DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,811 DEBUG findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,811 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2023-01-07 15:29:34,811 DEBUG findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,811 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,811 DEBUG findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,811 DEBUG findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,811 DEBUG findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,811 DEBUG findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,811 DEBUG findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,811 DEBUG findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,812 DEBUG findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,812 DEBUG findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,812 DEBUG findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,812 DEBUG findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,812 DEBUG findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,812 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2023-01-07 15:29:34,812 DEBUG findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,812 DEBUG findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,812 DEBUG findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,812 DEBUG findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,812 DEBUG findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,812 DEBUG findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,812 DEBUG findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,812 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2023-01-07 15:29:34,812 DEBUG findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,812 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2023-01-07 15:29:34,812 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,812 DEBUG findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,812 DEBUG findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,813 DEBUG findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,813 DEBUG findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,813 DEBUG findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,813 DEBUG findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,813 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,813 DEBUG findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,813 DEBUG findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,813 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,813 DEBUG findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,813 DEBUG findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,813 DEBUG findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,813 DEBUG findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,813 DEBUG findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,813 DEBUG findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,813 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,813 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,813 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,813 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2023-01-07 15:29:34,813 DEBUG findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,814 DEBUG findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,814 DEBUG findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,814 DEBUG findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,814 DEBUG findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,814 DEBUG findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,814 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,814 DEBUG findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,814 DEBUG findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,814 DEBUG findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,814 DEBUG findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,814 DEBUG findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,814 DEBUG findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,814 DEBUG findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,814 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,814 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,814 DEBUG findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,814 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,814 DEBUG findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,815 DEBUG findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,815 DEBUG findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,815 DEBUG findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,815 DEBUG findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,815 DEBUG findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,815 DEBUG findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,815 DEBUG findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,815 DEBUG findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,815 DEBUG findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,815 DEBUG findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,815 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,815 DEBUG findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,815 DEBUG findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,815 DEBUG findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2023-01-07 15:29:34,815 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,815 DEBUG findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,816 DEBUG findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,816 DEBUG findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,816 DEBUG findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,816 DEBUG findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,816 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,816 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,816 DEBUG findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,816 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,816 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,816 DEBUG findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,816 DEBUG findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,816 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,816 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,816 DEBUG findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,816 DEBUG findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,816 DEBUG findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,816 DEBUG findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,816 DEBUG findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,816 DEBUG findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,816 DEBUG findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2023-01-07 15:29:34,817 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,817 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,817 DEBUG findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,817 DEBUG findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,817 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,817 DEBUG findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,817 DEBUG findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,817 DEBUG findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,817 DEBUG findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,817 DEBUG findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,817 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,817 DEBUG findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,817 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,817 DEBUG findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,817 DEBUG findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,817 DEBUG findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,817 DEBUG findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,817 DEBUG findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,817 DEBUG findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,817 DEBUG findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,818 DEBUG findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,818 DEBUG findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,818 DEBUG findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,818 DEBUG findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,818 DEBUG findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,818 DEBUG findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,818 DEBUG findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,818 DEBUG findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2023-01-07 15:29:34,818 DEBUG findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,818 DEBUG findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,818 DEBUG findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,818 DEBUG findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,818 DEBUG findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,818 DEBUG findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,818 DEBUG findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,818 DEBUG findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,818 DEBUG findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,818 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,818 DEBUG findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,819 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,819 DEBUG findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,819 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,819 DEBUG findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,819 DEBUG findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,819 DEBUG findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,819 DEBUG findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,819 DEBUG findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,819 DEBUG findfont: Matching cmb10:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0 to cmb10 ('/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf') with score of 0.050000.
2023-01-07 15:29:34,820 DEBUG findfont: Matching cmss10:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0.
2023-01-07 15:29:34,820 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,820 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,820 DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,820 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,820 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,820 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,820 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,820 DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,820 DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,820 DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,820 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-07 15:29:34,820 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,820 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,820 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,820 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,820 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-07 15:29:34,820 DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,820 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,821 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,821 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,821 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,821 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,821 DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 0.05
2023-01-07 15:29:34,821 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-07 15:29:34,821 DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,821 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,821 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,821 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,821 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,821 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,821 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,821 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-07 15:29:34,821 DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,821 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,821 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,822 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,822 DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,822 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,822 DEBUG findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,822 DEBUG findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,822 DEBUG findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,822 DEBUG findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,822 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,822 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,822 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,822 DEBUG findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,822 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,822 DEBUG findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,822 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,822 DEBUG findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,822 DEBUG findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,822 DEBUG findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,822 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,822 DEBUG findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,823 DEBUG findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,823 DEBUG findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,823 DEBUG findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,823 DEBUG findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,823 DEBUG findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,823 DEBUG findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,823 DEBUG findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,823 DEBUG findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,823 DEBUG findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,823 DEBUG findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,823 DEBUG findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,823 DEBUG findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,823 DEBUG findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,823 DEBUG findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,823 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2023-01-07 15:29:34,823 DEBUG findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,823 DEBUG findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,823 DEBUG findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,824 DEBUG findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,824 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,824 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,824 DEBUG findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,824 DEBUG findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,824 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,824 DEBUG findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,824 DEBUG findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,824 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,824 DEBUG findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,824 DEBUG findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,824 DEBUG findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,824 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,824 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,824 DEBUG findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,824 DEBUG findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,824 DEBUG findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,824 DEBUG findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,824 DEBUG findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,825 DEBUG findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,825 DEBUG findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,825 DEBUG findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2023-01-07 15:29:34,825 DEBUG findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,825 DEBUG findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,825 DEBUG findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,825 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2023-01-07 15:29:34,825 DEBUG findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,825 DEBUG findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,825 DEBUG findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,825 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,825 DEBUG findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,825 DEBUG findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,825 DEBUG findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,825 DEBUG findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,825 DEBUG findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,825 DEBUG findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,825 DEBUG findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,825 DEBUG findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,825 DEBUG findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,826 DEBUG findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,826 DEBUG findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,826 DEBUG findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,826 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,826 DEBUG findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,826 DEBUG findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,826 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,826 DEBUG findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,826 DEBUG findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,826 DEBUG findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,826 DEBUG findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,826 DEBUG findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,826 DEBUG findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,826 DEBUG findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,826 DEBUG findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,826 DEBUG findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,826 DEBUG findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,826 DEBUG findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,826 DEBUG findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,826 DEBUG findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,826 DEBUG findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,827 DEBUG findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,827 DEBUG findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,827 DEBUG findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,827 DEBUG findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,827 DEBUG findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,827 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,827 DEBUG findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,827 DEBUG findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,827 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,827 DEBUG findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,827 DEBUG findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,827 DEBUG findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,827 DEBUG findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,828 DEBUG findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,828 DEBUG findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,828 DEBUG findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,828 DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,828 DEBUG findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,828 DEBUG findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,828 DEBUG findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,828 DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,828 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2023-01-07 15:29:34,828 DEBUG findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,828 DEBUG findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,828 DEBUG findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,828 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,828 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,828 DEBUG findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,829 DEBUG findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,829 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,829 DEBUG findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,829 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,829 DEBUG findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,829 DEBUG findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,829 DEBUG findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,829 DEBUG findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,829 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,829 DEBUG findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,829 DEBUG findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,829 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,829 DEBUG findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,829 DEBUG findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2023-01-07 15:29:34,829 DEBUG findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,829 DEBUG findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,829 DEBUG findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,829 DEBUG findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,829 DEBUG findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,830 DEBUG findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,830 DEBUG findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,830 DEBUG findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,830 DEBUG findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,830 DEBUG findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,830 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2023-01-07 15:29:34,830 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,830 DEBUG findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,830 DEBUG findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,830 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,830 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,830 DEBUG findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,830 DEBUG findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,830 DEBUG findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,830 DEBUG findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2023-01-07 15:29:34,830 DEBUG findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,830 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,830 DEBUG findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,830 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,830 DEBUG findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,831 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,831 DEBUG findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,831 DEBUG findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,831 DEBUG findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,831 DEBUG findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,831 DEBUG findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,831 DEBUG findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,831 DEBUG findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,831 DEBUG findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,831 DEBUG findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,831 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2023-01-07 15:29:34,831 DEBUG findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2023-01-07 15:29:34,831 DEBUG findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,831 DEBUG findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,831 DEBUG findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,831 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,831 DEBUG findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2023-01-07 15:29:34,831 DEBUG findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,831 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,832 DEBUG findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,832 DEBUG findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,832 DEBUG findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,832 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,832 DEBUG findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,832 DEBUG findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,832 DEBUG findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,832 DEBUG findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,832 DEBUG findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,832 DEBUG findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,832 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,832 DEBUG findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,832 DEBUG findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,832 DEBUG findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,832 DEBUG findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,832 DEBUG findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2023-01-07 15:29:34,832 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2023-01-07 15:29:34,832 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,832 DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,833 DEBUG findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,833 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2023-01-07 15:29:34,833 DEBUG findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,833 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,833 DEBUG findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,833 DEBUG findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,833 DEBUG findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,833 DEBUG findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,833 DEBUG findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,833 DEBUG findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,833 DEBUG findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,833 DEBUG findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,833 DEBUG findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,833 DEBUG findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,833 DEBUG findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,833 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2023-01-07 15:29:34,833 DEBUG findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,833 DEBUG findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,834 DEBUG findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,834 DEBUG findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,834 DEBUG findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,834 DEBUG findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,834 DEBUG findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,834 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2023-01-07 15:29:34,834 DEBUG findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,834 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2023-01-07 15:29:34,834 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,834 DEBUG findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,834 DEBUG findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,834 DEBUG findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,834 DEBUG findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,834 DEBUG findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,834 DEBUG findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,834 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,834 DEBUG findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,834 DEBUG findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,834 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,834 DEBUG findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,835 DEBUG findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,835 DEBUG findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,835 DEBUG findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,835 DEBUG findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,835 DEBUG findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,835 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,835 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,835 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,835 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2023-01-07 15:29:34,835 DEBUG findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,835 DEBUG findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,835 DEBUG findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,835 DEBUG findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,835 DEBUG findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,835 DEBUG findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,835 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,835 DEBUG findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,835 DEBUG findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,835 DEBUG findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,836 DEBUG findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,836 DEBUG findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,836 DEBUG findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,836 DEBUG findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,836 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,836 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,836 DEBUG findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,836 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,836 DEBUG findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,836 DEBUG findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,836 DEBUG findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,836 DEBUG findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,836 DEBUG findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,836 DEBUG findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,836 DEBUG findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,836 DEBUG findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,836 DEBUG findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,836 DEBUG findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,836 DEBUG findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,837 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,837 DEBUG findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,837 DEBUG findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,837 DEBUG findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2023-01-07 15:29:34,837 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,837 DEBUG findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,837 DEBUG findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,837 DEBUG findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,837 DEBUG findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,837 DEBUG findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,837 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,837 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,837 DEBUG findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,837 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,837 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,837 DEBUG findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,837 DEBUG findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,837 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,838 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,838 DEBUG findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,838 DEBUG findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,838 DEBUG findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,838 DEBUG findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,838 DEBUG findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,838 DEBUG findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,838 DEBUG findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2023-01-07 15:29:34,838 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,838 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,838 DEBUG findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,838 DEBUG findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,838 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,838 DEBUG findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,838 DEBUG findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,838 DEBUG findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,838 DEBUG findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,838 DEBUG findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,838 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,838 DEBUG findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,839 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,839 DEBUG findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,839 DEBUG findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,839 DEBUG findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,839 DEBUG findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,839 DEBUG findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,839 DEBUG findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,839 DEBUG findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,839 DEBUG findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,839 DEBUG findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,839 DEBUG findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,839 DEBUG findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,839 DEBUG findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,839 DEBUG findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,839 DEBUG findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,839 DEBUG findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2023-01-07 15:29:34,839 DEBUG findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,839 DEBUG findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,839 DEBUG findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,840 DEBUG findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,840 DEBUG findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,840 DEBUG findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,840 DEBUG findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,840 DEBUG findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,840 DEBUG findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,840 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,840 DEBUG findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,840 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,840 DEBUG findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,840 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,840 DEBUG findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,840 DEBUG findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,840 DEBUG findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,840 DEBUG findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,840 DEBUG findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,840 DEBUG findfont: Matching cmss10:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0 to cmss10 ('/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf') with score of 0.050000.
2023-01-07 15:29:34,841 DEBUG findfont: Matching cmex10:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0.
2023-01-07 15:29:34,841 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,841 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,841 DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,841 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,841 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,841 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,841 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,842 DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 0.05
2023-01-07 15:29:34,842 DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,842 DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,842 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-07 15:29:34,842 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,842 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,842 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,842 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,842 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-07 15:29:34,842 DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,842 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,842 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,842 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,842 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,842 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,842 DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,842 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-07 15:29:34,842 DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,842 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,843 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,843 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,843 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,843 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,843 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,843 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-07 15:29:34,843 DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,843 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,843 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,843 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,843 DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,843 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,843 DEBUG findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,843 DEBUG findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,843 DEBUG findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,843 DEBUG findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,843 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,843 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,843 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,843 DEBUG findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,844 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,844 DEBUG findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,844 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,844 DEBUG findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,844 DEBUG findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,844 DEBUG findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,844 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,844 DEBUG findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,844 DEBUG findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,844 DEBUG findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,844 DEBUG findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,844 DEBUG findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,844 DEBUG findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,844 DEBUG findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,844 DEBUG findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,844 DEBUG findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,844 DEBUG findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,844 DEBUG findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,844 DEBUG findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,844 DEBUG findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,845 DEBUG findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,845 DEBUG findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,845 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2023-01-07 15:29:34,845 DEBUG findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,845 DEBUG findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,845 DEBUG findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,845 DEBUG findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,845 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,845 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,845 DEBUG findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,845 DEBUG findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,845 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,845 DEBUG findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,845 DEBUG findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,845 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,845 DEBUG findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,845 DEBUG findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,845 DEBUG findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,845 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,845 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,846 DEBUG findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,846 DEBUG findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,846 DEBUG findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,846 DEBUG findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,846 DEBUG findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,846 DEBUG findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,846 DEBUG findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,846 DEBUG findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2023-01-07 15:29:34,846 DEBUG findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,846 DEBUG findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,846 DEBUG findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,846 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2023-01-07 15:29:34,846 DEBUG findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,846 DEBUG findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,846 DEBUG findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,846 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,846 DEBUG findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,846 DEBUG findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,846 DEBUG findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,846 DEBUG findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,847 DEBUG findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,847 DEBUG findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,847 DEBUG findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,847 DEBUG findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,847 DEBUG findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,847 DEBUG findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,847 DEBUG findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,847 DEBUG findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,847 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,847 DEBUG findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,847 DEBUG findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,847 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,847 DEBUG findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,847 DEBUG findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,847 DEBUG findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,847 DEBUG findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,847 DEBUG findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,847 DEBUG findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,848 DEBUG findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,848 DEBUG findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,848 DEBUG findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,848 DEBUG findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,848 DEBUG findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,848 DEBUG findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,848 DEBUG findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,848 DEBUG findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,848 DEBUG findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,848 DEBUG findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,848 DEBUG findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,848 DEBUG findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,848 DEBUG findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,848 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,848 DEBUG findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,848 DEBUG findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,848 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,848 DEBUG findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,848 DEBUG findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,848 DEBUG findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,849 DEBUG findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,849 DEBUG findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,849 DEBUG findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,849 DEBUG findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,849 DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,849 DEBUG findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,849 DEBUG findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,849 DEBUG findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,849 DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,849 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2023-01-07 15:29:34,849 DEBUG findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,849 DEBUG findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,849 DEBUG findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,849 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,849 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,849 DEBUG findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,849 DEBUG findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,849 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,849 DEBUG findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,849 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,850 DEBUG findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,850 DEBUG findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,850 DEBUG findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,850 DEBUG findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,850 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,850 DEBUG findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,850 DEBUG findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,850 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,850 DEBUG findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,850 DEBUG findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2023-01-07 15:29:34,850 DEBUG findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,850 DEBUG findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,850 DEBUG findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,850 DEBUG findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,850 DEBUG findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,850 DEBUG findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,851 DEBUG findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,851 DEBUG findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,851 DEBUG findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,851 DEBUG findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,851 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2023-01-07 15:29:34,851 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,851 DEBUG findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,851 DEBUG findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,851 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,851 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,851 DEBUG findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,851 DEBUG findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,851 DEBUG findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,851 DEBUG findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2023-01-07 15:29:34,851 DEBUG findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,851 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,851 DEBUG findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,851 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,852 DEBUG findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,852 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,852 DEBUG findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,852 DEBUG findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,852 DEBUG findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,852 DEBUG findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,852 DEBUG findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,852 DEBUG findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,852 DEBUG findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,852 DEBUG findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,852 DEBUG findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,852 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2023-01-07 15:29:34,852 DEBUG findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2023-01-07 15:29:34,852 DEBUG findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,852 DEBUG findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,852 DEBUG findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,852 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,852 DEBUG findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2023-01-07 15:29:34,852 DEBUG findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,852 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,853 DEBUG findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,853 DEBUG findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,853 DEBUG findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,853 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,853 DEBUG findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,853 DEBUG findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,853 DEBUG findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,853 DEBUG findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,853 DEBUG findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,853 DEBUG findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,853 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,853 DEBUG findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,853 DEBUG findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,853 DEBUG findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,853 DEBUG findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,853 DEBUG findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2023-01-07 15:29:34,853 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2023-01-07 15:29:34,853 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,853 DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,854 DEBUG findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,854 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2023-01-07 15:29:34,854 DEBUG findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,854 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,854 DEBUG findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,854 DEBUG findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,854 DEBUG findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,854 DEBUG findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,854 DEBUG findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,854 DEBUG findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,854 DEBUG findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,854 DEBUG findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,854 DEBUG findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,854 DEBUG findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,854 DEBUG findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,854 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2023-01-07 15:29:34,854 DEBUG findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,854 DEBUG findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,854 DEBUG findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,854 DEBUG findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,855 DEBUG findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,855 DEBUG findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,855 DEBUG findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,855 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2023-01-07 15:29:34,855 DEBUG findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,855 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2023-01-07 15:29:34,855 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,855 DEBUG findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,855 DEBUG findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,855 DEBUG findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,855 DEBUG findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,855 DEBUG findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,855 DEBUG findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,855 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,855 DEBUG findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,855 DEBUG findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,855 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,855 DEBUG findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,855 DEBUG findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,855 DEBUG findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,856 DEBUG findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,856 DEBUG findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,856 DEBUG findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,856 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,856 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,856 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,856 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2023-01-07 15:29:34,856 DEBUG findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,856 DEBUG findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,856 DEBUG findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,856 DEBUG findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,856 DEBUG findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,856 DEBUG findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,856 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,856 DEBUG findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,856 DEBUG findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,856 DEBUG findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,856 DEBUG findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,856 DEBUG findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,857 DEBUG findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,857 DEBUG findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,857 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,857 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,857 DEBUG findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,857 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,857 DEBUG findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,857 DEBUG findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,857 DEBUG findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,857 DEBUG findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,857 DEBUG findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,857 DEBUG findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,857 DEBUG findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,857 DEBUG findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,857 DEBUG findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,857 DEBUG findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,857 DEBUG findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,857 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,857 DEBUG findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,858 DEBUG findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,858 DEBUG findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2023-01-07 15:29:34,858 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,858 DEBUG findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,858 DEBUG findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,858 DEBUG findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,858 DEBUG findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,858 DEBUG findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,858 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,858 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,858 DEBUG findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,858 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,858 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,858 DEBUG findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,858 DEBUG findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,858 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,858 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,858 DEBUG findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,858 DEBUG findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,858 DEBUG findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,859 DEBUG findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,859 DEBUG findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,859 DEBUG findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,859 DEBUG findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2023-01-07 15:29:34,859 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,859 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,859 DEBUG findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,859 DEBUG findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,859 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,859 DEBUG findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,859 DEBUG findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,859 DEBUG findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,859 DEBUG findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,859 DEBUG findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,859 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,859 DEBUG findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,859 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,860 DEBUG findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,860 DEBUG findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,860 DEBUG findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,860 DEBUG findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,860 DEBUG findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,860 DEBUG findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,860 DEBUG findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,860 DEBUG findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,860 DEBUG findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,860 DEBUG findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,860 DEBUG findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,860 DEBUG findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,860 DEBUG findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,860 DEBUG findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,860 DEBUG findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2023-01-07 15:29:34,860 DEBUG findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,860 DEBUG findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,860 DEBUG findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,860 DEBUG findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,861 DEBUG findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,861 DEBUG findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,861 DEBUG findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,861 DEBUG findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,861 DEBUG findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,861 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,861 DEBUG findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,861 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,861 DEBUG findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,861 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,861 DEBUG findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,861 DEBUG findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,861 DEBUG findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,861 DEBUG findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,861 DEBUG findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,862 DEBUG findfont: Matching cmex10:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0 to cmex10 ('/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf') with score of 0.050000.
2023-01-07 15:29:34,862 DEBUG findfont: Matching DejaVu Sans:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0.
2023-01-07 15:29:34,862 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,863 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,863 DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,863 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,863 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,863 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2023-01-07 15:29:34,863 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,863 DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,863 DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,863 DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,863 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2023-01-07 15:29:34,863 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,863 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,863 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,863 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,863 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-07 15:29:34,863 DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,863 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,863 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,863 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,864 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,864 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,864 DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,864 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-07 15:29:34,864 DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,864 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,864 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,864 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,864 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,864 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,864 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,864 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2023-01-07 15:29:34,864 DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,864 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2023-01-07 15:29:34,864 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,864 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,864 DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,864 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,864 DEBUG findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,864 DEBUG findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,865 DEBUG findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,865 DEBUG findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,865 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,865 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,865 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,865 DEBUG findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,865 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,865 DEBUG findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,865 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,865 DEBUG findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,865 DEBUG findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,865 DEBUG findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,865 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,865 DEBUG findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,865 DEBUG findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,865 DEBUG findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,865 DEBUG findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,866 DEBUG findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,866 DEBUG findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,866 DEBUG findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,866 DEBUG findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,866 DEBUG findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,866 DEBUG findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,866 DEBUG findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,866 DEBUG findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,866 DEBUG findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,866 DEBUG findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,866 DEBUG findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,866 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2023-01-07 15:29:34,866 DEBUG findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,866 DEBUG findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,866 DEBUG findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,866 DEBUG findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,866 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,866 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,866 DEBUG findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,867 DEBUG findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,867 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,867 DEBUG findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,867 DEBUG findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,867 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,867 DEBUG findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,867 DEBUG findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,867 DEBUG findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,867 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,867 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,867 DEBUG findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,867 DEBUG findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,867 DEBUG findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,867 DEBUG findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,867 DEBUG findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,867 DEBUG findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,867 DEBUG findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,867 DEBUG findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2023-01-07 15:29:34,868 DEBUG findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,868 DEBUG findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,868 DEBUG findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,868 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2023-01-07 15:29:34,868 DEBUG findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,868 DEBUG findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,868 DEBUG findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,868 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,868 DEBUG findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,868 DEBUG findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,868 DEBUG findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,868 DEBUG findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,868 DEBUG findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,868 DEBUG findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,868 DEBUG findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,868 DEBUG findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,868 DEBUG findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,868 DEBUG findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,868 DEBUG findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,868 DEBUG findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,869 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,869 DEBUG findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,869 DEBUG findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,869 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,869 DEBUG findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,869 DEBUG findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,869 DEBUG findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,869 DEBUG findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,869 DEBUG findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,869 DEBUG findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,869 DEBUG findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,869 DEBUG findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,869 DEBUG findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,869 DEBUG findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,869 DEBUG findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,869 DEBUG findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,869 DEBUG findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,869 DEBUG findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,869 DEBUG findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,870 DEBUG findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,870 DEBUG findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,870 DEBUG findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,870 DEBUG findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,870 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,870 DEBUG findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,870 DEBUG findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,870 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,870 DEBUG findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,870 DEBUG findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,870 DEBUG findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,870 DEBUG findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,870 DEBUG findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,870 DEBUG findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,870 DEBUG findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,870 DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,870 DEBUG findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,870 DEBUG findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,870 DEBUG findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,870 DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,871 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2023-01-07 15:29:34,871 DEBUG findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,871 DEBUG findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,871 DEBUG findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,871 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,871 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,871 DEBUG findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,871 DEBUG findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,871 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,871 DEBUG findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,871 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,871 DEBUG findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,871 DEBUG findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,871 DEBUG findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,871 DEBUG findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,871 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,871 DEBUG findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,871 DEBUG findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,872 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,872 DEBUG findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,872 DEBUG findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2023-01-07 15:29:34,872 DEBUG findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,872 DEBUG findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,872 DEBUG findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,872 DEBUG findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,872 DEBUG findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,872 DEBUG findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,872 DEBUG findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,872 DEBUG findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,872 DEBUG findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,872 DEBUG findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,872 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2023-01-07 15:29:34,872 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,872 DEBUG findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,872 DEBUG findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,872 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,873 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,873 DEBUG findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,873 DEBUG findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,873 DEBUG findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,873 DEBUG findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2023-01-07 15:29:34,873 DEBUG findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,873 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,873 DEBUG findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,873 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,873 DEBUG findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,873 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,873 DEBUG findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,873 DEBUG findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,873 DEBUG findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,873 DEBUG findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,873 DEBUG findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,873 DEBUG findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,873 DEBUG findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,873 DEBUG findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,874 DEBUG findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,874 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2023-01-07 15:29:34,874 DEBUG findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2023-01-07 15:29:34,874 DEBUG findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,874 DEBUG findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,874 DEBUG findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,874 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,874 DEBUG findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2023-01-07 15:29:34,874 DEBUG findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,874 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,874 DEBUG findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,874 DEBUG findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,874 DEBUG findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,874 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,874 DEBUG findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,874 DEBUG findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,874 DEBUG findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,874 DEBUG findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,874 DEBUG findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,874 DEBUG findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,875 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,875 DEBUG findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,875 DEBUG findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,875 DEBUG findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,875 DEBUG findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,875 DEBUG findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2023-01-07 15:29:34,875 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2023-01-07 15:29:34,875 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,875 DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,875 DEBUG findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,875 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2023-01-07 15:29:34,875 DEBUG findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,875 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,875 DEBUG findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,875 DEBUG findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,875 DEBUG findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,875 DEBUG findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,875 DEBUG findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,875 DEBUG findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,876 DEBUG findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,876 DEBUG findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,876 DEBUG findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,876 DEBUG findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,876 DEBUG findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,876 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2023-01-07 15:29:34,876 DEBUG findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,876 DEBUG findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,876 DEBUG findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,876 DEBUG findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,876 DEBUG findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,876 DEBUG findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,876 DEBUG findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,876 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2023-01-07 15:29:34,876 DEBUG findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,876 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2023-01-07 15:29:34,876 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,876 DEBUG findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,876 DEBUG findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,877 DEBUG findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,877 DEBUG findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,877 DEBUG findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,877 DEBUG findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,877 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,877 DEBUG findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,877 DEBUG findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,877 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,877 DEBUG findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,877 DEBUG findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,877 DEBUG findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,877 DEBUG findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,877 DEBUG findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,877 DEBUG findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,877 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,877 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,877 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,877 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2023-01-07 15:29:34,878 DEBUG findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,878 DEBUG findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,878 DEBUG findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,878 DEBUG findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,878 DEBUG findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,878 DEBUG findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,878 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,878 DEBUG findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,878 DEBUG findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,878 DEBUG findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,878 DEBUG findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,878 DEBUG findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,878 DEBUG findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,878 DEBUG findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,878 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,878 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,878 DEBUG findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,878 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,878 DEBUG findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,878 DEBUG findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,878 DEBUG findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,879 DEBUG findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,879 DEBUG findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,879 DEBUG findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,879 DEBUG findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,879 DEBUG findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,879 DEBUG findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,879 DEBUG findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,879 DEBUG findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,879 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,879 DEBUG findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,879 DEBUG findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,879 DEBUG findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2023-01-07 15:29:34,879 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,879 DEBUG findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,879 DEBUG findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,879 DEBUG findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,879 DEBUG findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,879 DEBUG findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,879 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,880 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,880 DEBUG findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,880 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,880 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,880 DEBUG findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,880 DEBUG findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,880 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,880 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,880 DEBUG findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,880 DEBUG findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,880 DEBUG findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,880 DEBUG findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,880 DEBUG findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,880 DEBUG findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,880 DEBUG findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2023-01-07 15:29:34,880 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,880 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,880 DEBUG findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,880 DEBUG findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,880 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,881 DEBUG findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,881 DEBUG findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,881 DEBUG findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,881 DEBUG findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,881 DEBUG findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,881 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,881 DEBUG findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,881 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,881 DEBUG findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,881 DEBUG findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,881 DEBUG findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,881 DEBUG findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,881 DEBUG findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,881 DEBUG findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,881 DEBUG findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,881 DEBUG findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,881 DEBUG findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,881 DEBUG findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,881 DEBUG findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,881 DEBUG findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,882 DEBUG findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,882 DEBUG findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,882 DEBUG findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2023-01-07 15:29:34,882 DEBUG findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,882 DEBUG findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,882 DEBUG findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,882 DEBUG findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,882 DEBUG findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,882 DEBUG findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,882 DEBUG findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,882 DEBUG findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,882 DEBUG findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,882 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,882 DEBUG findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,882 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,882 DEBUG findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,882 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,882 DEBUG findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,882 DEBUG findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,883 DEBUG findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,883 DEBUG findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,883 DEBUG findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,883 DEBUG findfont: Matching DejaVu Sans:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0 to DejaVu Sans ('/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2023-01-07 15:29:34,883 DEBUG findfont: Matching DejaVu Sans:style=italic:variant=normal:weight=normal:stretch=normal:size=18.0.
2023-01-07 15:29:34,884 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,884 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,884 DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,884 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 10.335
2023-01-07 15:29:34,884 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,884 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 1.335
2023-01-07 15:29:34,884 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,884 DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,884 DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,884 DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,884 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 0.15000000000000002
2023-01-07 15:29:34,884 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,884 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,884 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 10.05
2023-01-07 15:29:34,884 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 10.335
2023-01-07 15:29:34,885 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-01-07 15:29:34,885 DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,885 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 10.05
2023-01-07 15:29:34,885 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,885 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,885 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,885 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,885 DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,885 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-01-07 15:29:34,885 DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,885 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,885 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 10.05
2023-01-07 15:29:34,885 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,885 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,885 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,885 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,885 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 0.43499999999999994
2023-01-07 15:29:34,885 DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,886 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 1.05
2023-01-07 15:29:34,886 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-01-07 15:29:34,886 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,886 DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,886 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,886 DEBUG findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,886 DEBUG findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,886 DEBUG findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,886 DEBUG findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,886 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,886 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,886 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,886 DEBUG findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,886 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 10.335
2023-01-07 15:29:34,886 DEBUG findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,886 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 10.335
2023-01-07 15:29:34,886 DEBUG findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 11.525
2023-01-07 15:29:34,886 DEBUG findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,886 DEBUG findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 10.335
2023-01-07 15:29:34,887 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,887 DEBUG findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,887 DEBUG findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,887 DEBUG findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,887 DEBUG findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,887 DEBUG findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,887 DEBUG findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,887 DEBUG findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,887 DEBUG findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,887 DEBUG findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,887 DEBUG findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,887 DEBUG findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,887 DEBUG findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,887 DEBUG findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,887 DEBUG findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,887 DEBUG findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,887 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 11.14975
2023-01-07 15:29:34,887 DEBUG findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,887 DEBUG findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,887 DEBUG findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,888 DEBUG findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,888 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,888 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 10.05
2023-01-07 15:29:34,888 DEBUG findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,888 DEBUG findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,888 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,888 DEBUG findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,888 DEBUG findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,888 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,888 DEBUG findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,888 DEBUG findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,888 DEBUG findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,888 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,888 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,888 DEBUG findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,888 DEBUG findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,888 DEBUG findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,888 DEBUG findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,888 DEBUG findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,889 DEBUG findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,889 DEBUG findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,889 DEBUG findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 11.43
2023-01-07 15:29:34,889 DEBUG findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,889 DEBUG findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,889 DEBUG findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,889 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 10.14975
2023-01-07 15:29:34,889 DEBUG findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,889 DEBUG findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,889 DEBUG findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,889 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,889 DEBUG findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 11.145
2023-01-07 15:29:34,889 DEBUG findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,889 DEBUG findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,889 DEBUG findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,889 DEBUG findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,889 DEBUG findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,889 DEBUG findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 10.05
2023-01-07 15:29:34,889 DEBUG findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 11.145
2023-01-07 15:29:34,889 DEBUG findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,889 DEBUG findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,890 DEBUG findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 11.525
2023-01-07 15:29:34,890 DEBUG findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,890 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,890 DEBUG findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,890 DEBUG findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,890 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,890 DEBUG findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,890 DEBUG findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 11.145
2023-01-07 15:29:34,890 DEBUG findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,890 DEBUG findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,890 DEBUG findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,890 DEBUG findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 10.05
2023-01-07 15:29:34,890 DEBUG findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,890 DEBUG findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,890 DEBUG findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,890 DEBUG findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,890 DEBUG findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,890 DEBUG findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,890 DEBUG findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,891 DEBUG findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,891 DEBUG findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 11.145
2023-01-07 15:29:34,891 DEBUG findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,891 DEBUG findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,891 DEBUG findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,891 DEBUG findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,891 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 11.145
2023-01-07 15:29:34,891 DEBUG findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,891 DEBUG findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,891 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 11.525
2023-01-07 15:29:34,891 DEBUG findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,891 DEBUG findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,891 DEBUG findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,891 DEBUG findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,891 DEBUG findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,891 DEBUG findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,891 DEBUG findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,891 DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,891 DEBUG findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 10.05
2023-01-07 15:29:34,892 DEBUG findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,892 DEBUG findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,892 DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,892 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 10.535
2023-01-07 15:29:34,892 DEBUG findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,892 DEBUG findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,892 DEBUG findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,892 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,892 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,892 DEBUG findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,892 DEBUG findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,892 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,892 DEBUG findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,892 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 11.145
2023-01-07 15:29:34,892 DEBUG findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,892 DEBUG findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,892 DEBUG findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,892 DEBUG findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,892 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,892 DEBUG findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,893 DEBUG findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,893 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,893 DEBUG findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,893 DEBUG findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 11.42525
2023-01-07 15:29:34,893 DEBUG findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,893 DEBUG findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,893 DEBUG findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,893 DEBUG findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,893 DEBUG findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,893 DEBUG findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,893 DEBUG findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,893 DEBUG findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,893 DEBUG findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 11.145
2023-01-07 15:29:34,893 DEBUG findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,893 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 11.43
2023-01-07 15:29:34,893 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,893 DEBUG findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,893 DEBUG findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,893 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 10.335
2023-01-07 15:29:34,894 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,894 DEBUG findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,894 DEBUG findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,894 DEBUG findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,894 DEBUG findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 11.25
2023-01-07 15:29:34,894 DEBUG findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,894 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,894 DEBUG findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 10.05
2023-01-07 15:29:34,894 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,894 DEBUG findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 10.05
2023-01-07 15:29:34,894 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,894 DEBUG findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,894 DEBUG findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,894 DEBUG findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,895 DEBUG findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,895 DEBUG findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,895 DEBUG findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 10.05
2023-01-07 15:29:34,895 DEBUG findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,895 DEBUG findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 11.525
2023-01-07 15:29:34,895 DEBUG findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,895 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 11.1925
2023-01-07 15:29:34,895 DEBUG findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 11.535
2023-01-07 15:29:34,895 DEBUG findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,895 DEBUG findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,895 DEBUG findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,895 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 10.05
2023-01-07 15:29:34,895 DEBUG findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 11.62
2023-01-07 15:29:34,895 DEBUG findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,895 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,895 DEBUG findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,895 DEBUG findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,895 DEBUG findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,896 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,896 DEBUG findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,896 DEBUG findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,896 DEBUG findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 11.525
2023-01-07 15:29:34,896 DEBUG findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,896 DEBUG findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,896 DEBUG findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,896 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,896 DEBUG findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,896 DEBUG findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,896 DEBUG findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,896 DEBUG findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,896 DEBUG findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 11.535
2023-01-07 15:29:34,896 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 11.25
2023-01-07 15:29:34,896 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,896 DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 11.525
2023-01-07 15:29:34,896 DEBUG findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,896 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 11.24
2023-01-07 15:29:34,896 DEBUG findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,896 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,897 DEBUG findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,897 DEBUG findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,897 DEBUG findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,897 DEBUG findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,897 DEBUG findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,897 DEBUG findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,897 DEBUG findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,897 DEBUG findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 10.05
2023-01-07 15:29:34,897 DEBUG findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,897 DEBUG findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,897 DEBUG findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,897 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 11.24
2023-01-07 15:29:34,897 DEBUG findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,897 DEBUG findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,897 DEBUG findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,897 DEBUG findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,897 DEBUG findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,897 DEBUG findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,897 DEBUG findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,898 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 11.335
2023-01-07 15:29:34,898 DEBUG findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,898 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 11.535
2023-01-07 15:29:34,898 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,898 DEBUG findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,898 DEBUG findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,898 DEBUG findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,898 DEBUG findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,898 DEBUG findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,898 DEBUG findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,898 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,898 DEBUG findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,898 DEBUG findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 11.145
2023-01-07 15:29:34,898 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,898 DEBUG findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,898 DEBUG findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,898 DEBUG findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,898 DEBUG findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,898 DEBUG findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,899 DEBUG findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,899 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,899 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 10.05
2023-01-07 15:29:34,899 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,899 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 10.25
2023-01-07 15:29:34,899 DEBUG findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,899 DEBUG findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,899 DEBUG findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,899 DEBUG findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,899 DEBUG findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,899 DEBUG findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,899 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 10.335
2023-01-07 15:29:34,899 DEBUG findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,899 DEBUG findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,899 DEBUG findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 11.145
2023-01-07 15:29:34,899 DEBUG findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,899 DEBUG findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,899 DEBUG findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,899 DEBUG findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,899 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 11.145
2023-01-07 15:29:34,900 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,900 DEBUG findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,900 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,900 DEBUG findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,900 DEBUG findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,900 DEBUG findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,900 DEBUG findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,900 DEBUG findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,900 DEBUG findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,900 DEBUG findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,900 DEBUG findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,900 DEBUG findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,900 DEBUG findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,900 DEBUG findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,900 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,900 DEBUG findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,900 DEBUG findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,900 DEBUG findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 11.335
2023-01-07 15:29:34,900 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,900 DEBUG findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 10.05
2023-01-07 15:29:34,901 DEBUG findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,901 DEBUG findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,901 DEBUG findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,901 DEBUG findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,901 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,901 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 10.335
2023-01-07 15:29:34,901 DEBUG findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,901 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,901 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,901 DEBUG findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,901 DEBUG findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,901 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 10.05
2023-01-07 15:29:34,901 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,901 DEBUG findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,901 DEBUG findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,901 DEBUG findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,901 DEBUG findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,901 DEBUG findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,901 DEBUG findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,901 DEBUG findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 10.62
2023-01-07 15:29:34,902 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,902 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,902 DEBUG findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,902 DEBUG findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,902 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,902 DEBUG findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,902 DEBUG findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,902 DEBUG findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,902 DEBUG findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,902 DEBUG findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,902 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,902 DEBUG findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,902 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 10.335
2023-01-07 15:29:34,902 DEBUG findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,902 DEBUG findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,902 DEBUG findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 11.145
2023-01-07 15:29:34,902 DEBUG findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,902 DEBUG findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,902 DEBUG findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,903 DEBUG findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,903 DEBUG findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 11.145
2023-01-07 15:29:34,903 DEBUG findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,903 DEBUG findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,903 DEBUG findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,903 DEBUG findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 11.145
2023-01-07 15:29:34,903 DEBUG findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 11.525
2023-01-07 15:29:34,903 DEBUG findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,903 DEBUG findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 11.1925
2023-01-07 15:29:34,903 DEBUG findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,903 DEBUG findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,903 DEBUG findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,903 DEBUG findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,903 DEBUG findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,903 DEBUG findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,903 DEBUG findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,903 DEBUG findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,903 DEBUG findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,903 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 10.335
2023-01-07 15:29:34,904 DEBUG findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,904 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,904 DEBUG findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,904 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 11.335
2023-01-07 15:29:34,904 DEBUG findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 11.525
2023-01-07 15:29:34,904 DEBUG findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,904 DEBUG findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,904 DEBUG findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,904 DEBUG findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 11.05
2023-01-07 15:29:34,904 DEBUG findfont: Matching DejaVu Sans:style=italic:variant=normal:weight=normal:stretch=normal:size=18.0 to DejaVu Sans ('/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf') with score of 0.150000.
2023-01-07 15:29:34,905 DEBUG findfont: Matching DejaVu Sans:style=normal:variant=normal:weight=bold:stretch=normal:size=18.0.
2023-01-07 15:29:34,905 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,905 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,905 DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,905 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.05
2023-01-07 15:29:34,905 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,905 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.05
2023-01-07 15:29:34,905 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,905 DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,905 DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,905 DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,905 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.335
2023-01-07 15:29:34,905 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,905 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,906 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.335
2023-01-07 15:29:34,906 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.05
2023-01-07 15:29:34,906 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-01-07 15:29:34,906 DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,906 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.335
2023-01-07 15:29:34,906 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,906 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,906 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,906 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,906 DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,906 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-01-07 15:29:34,906 DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,906 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,906 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.335
2023-01-07 15:29:34,906 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,906 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,906 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,906 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,906 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.05
2023-01-07 15:29:34,907 DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,907 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.33499999999999996
2023-01-07 15:29:34,907 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-01-07 15:29:34,907 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,907 DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,907 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,907 DEBUG findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,907 DEBUG findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,907 DEBUG findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,907 DEBUG findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,907 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,907 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,907 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,907 DEBUG findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,907 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 11.05
2023-01-07 15:29:34,907 DEBUG findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,907 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.05
2023-01-07 15:29:34,907 DEBUG findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.24
2023-01-07 15:29:34,907 DEBUG findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,907 DEBUG findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 11.05
2023-01-07 15:29:34,908 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,908 DEBUG findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,908 DEBUG findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,908 DEBUG findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,908 DEBUG findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,908 DEBUG findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,908 DEBUG findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,908 DEBUG findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,908 DEBUG findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,908 DEBUG findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,908 DEBUG findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,908 DEBUG findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,908 DEBUG findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,908 DEBUG findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,908 DEBUG findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,908 DEBUG findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,908 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.43475
2023-01-07 15:29:34,908 DEBUG findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,908 DEBUG findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,908 DEBUG findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,909 DEBUG findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,909 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,909 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.335
2023-01-07 15:29:34,909 DEBUG findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,909 DEBUG findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,909 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,909 DEBUG findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,909 DEBUG findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,909 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,909 DEBUG findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,909 DEBUG findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,909 DEBUG findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,909 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,909 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,909 DEBUG findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,909 DEBUG findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,909 DEBUG findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,909 DEBUG findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,909 DEBUG findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,910 DEBUG findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,910 DEBUG findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,910 DEBUG findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.715
2023-01-07 15:29:34,910 DEBUG findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,910 DEBUG findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,910 DEBUG findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,910 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.43475
2023-01-07 15:29:34,910 DEBUG findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,910 DEBUG findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,910 DEBUG findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,910 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,910 DEBUG findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.43
2023-01-07 15:29:34,910 DEBUG findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,910 DEBUG findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,910 DEBUG findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,910 DEBUG findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,910 DEBUG findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,910 DEBUG findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.335
2023-01-07 15:29:34,910 DEBUG findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.43
2023-01-07 15:29:34,910 DEBUG findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,910 DEBUG findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,911 DEBUG findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.24
2023-01-07 15:29:34,911 DEBUG findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,911 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,911 DEBUG findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,911 DEBUG findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,911 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,911 DEBUG findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,911 DEBUG findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.43
2023-01-07 15:29:34,911 DEBUG findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,911 DEBUG findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,911 DEBUG findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,911 DEBUG findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.335
2023-01-07 15:29:34,911 DEBUG findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,911 DEBUG findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,911 DEBUG findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,911 DEBUG findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,911 DEBUG findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,911 DEBUG findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,911 DEBUG findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,912 DEBUG findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,912 DEBUG findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.24
2023-01-07 15:29:34,912 DEBUG findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,912 DEBUG findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,912 DEBUG findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,912 DEBUG findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,912 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.43
2023-01-07 15:29:34,912 DEBUG findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,912 DEBUG findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,912 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.24
2023-01-07 15:29:34,912 DEBUG findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,912 DEBUG findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,912 DEBUG findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,912 DEBUG findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,912 DEBUG findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,912 DEBUG findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,912 DEBUG findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,912 DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,912 DEBUG findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.335
2023-01-07 15:29:34,912 DEBUG findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,913 DEBUG findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,913 DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,913 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.25
2023-01-07 15:29:34,913 DEBUG findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,913 DEBUG findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,913 DEBUG findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,913 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,913 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,913 DEBUG findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,913 DEBUG findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,913 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,913 DEBUG findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,913 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.43
2023-01-07 15:29:34,913 DEBUG findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,913 DEBUG findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,913 DEBUG findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,913 DEBUG findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,913 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,913 DEBUG findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,913 DEBUG findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,913 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,914 DEBUG findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,914 DEBUG findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.71025
2023-01-07 15:29:34,914 DEBUG findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,914 DEBUG findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,914 DEBUG findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,914 DEBUG findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,914 DEBUG findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,914 DEBUG findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,914 DEBUG findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,914 DEBUG findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,914 DEBUG findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.43
2023-01-07 15:29:34,914 DEBUG findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,914 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.145
2023-01-07 15:29:34,914 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,914 DEBUG findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,914 DEBUG findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,914 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.05
2023-01-07 15:29:34,914 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,914 DEBUG findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,915 DEBUG findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,915 DEBUG findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,915 DEBUG findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.535
2023-01-07 15:29:34,915 DEBUG findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,915 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,915 DEBUG findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.335
2023-01-07 15:29:34,915 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,915 DEBUG findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 11.335
2023-01-07 15:29:34,915 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,915 DEBUG findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,915 DEBUG findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,915 DEBUG findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,915 DEBUG findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,915 DEBUG findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,915 DEBUG findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.335
2023-01-07 15:29:34,915 DEBUG findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,915 DEBUG findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.24
2023-01-07 15:29:34,915 DEBUG findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,915 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.4775
2023-01-07 15:29:34,915 DEBUG findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.25
2023-01-07 15:29:34,916 DEBUG findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,916 DEBUG findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,916 DEBUG findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,916 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.335
2023-01-07 15:29:34,916 DEBUG findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.335
2023-01-07 15:29:34,916 DEBUG findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,916 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,916 DEBUG findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,916 DEBUG findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,916 DEBUG findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,916 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,916 DEBUG findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,916 DEBUG findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,916 DEBUG findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.24
2023-01-07 15:29:34,916 DEBUG findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,916 DEBUG findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,916 DEBUG findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,916 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,916 DEBUG findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,916 DEBUG findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,917 DEBUG findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,917 DEBUG findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,917 DEBUG findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.25
2023-01-07 15:29:34,917 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.535
2023-01-07 15:29:34,917 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,917 DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.24
2023-01-07 15:29:34,917 DEBUG findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,917 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.145
2023-01-07 15:29:34,917 DEBUG findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,917 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,917 DEBUG findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,917 DEBUG findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,917 DEBUG findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,918 DEBUG findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,918 DEBUG findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,918 DEBUG findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,918 DEBUG findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,918 DEBUG findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.335
2023-01-07 15:29:34,918 DEBUG findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,918 DEBUG findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,918 DEBUG findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,918 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.525
2023-01-07 15:29:34,918 DEBUG findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,918 DEBUG findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,918 DEBUG findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,918 DEBUG findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,918 DEBUG findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,918 DEBUG findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,918 DEBUG findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,918 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.62
2023-01-07 15:29:34,918 DEBUG findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,918 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.25
2023-01-07 15:29:34,919 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,919 DEBUG findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,919 DEBUG findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,919 DEBUG findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,919 DEBUG findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,919 DEBUG findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,919 DEBUG findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,919 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,919 DEBUG findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,919 DEBUG findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.24
2023-01-07 15:29:34,919 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,919 DEBUG findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,919 DEBUG findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,919 DEBUG findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,919 DEBUG findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,919 DEBUG findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,919 DEBUG findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,919 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,919 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.335
2023-01-07 15:29:34,919 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,920 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.535
2023-01-07 15:29:34,920 DEBUG findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,920 DEBUG findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,920 DEBUG findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,920 DEBUG findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,920 DEBUG findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,920 DEBUG findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,920 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.05
2023-01-07 15:29:34,920 DEBUG findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,920 DEBUG findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,920 DEBUG findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.24
2023-01-07 15:29:34,920 DEBUG findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,920 DEBUG findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,920 DEBUG findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,920 DEBUG findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,920 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.24
2023-01-07 15:29:34,920 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,920 DEBUG findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,921 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,921 DEBUG findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,921 DEBUG findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,921 DEBUG findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,921 DEBUG findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,921 DEBUG findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,921 DEBUG findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,921 DEBUG findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,921 DEBUG findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,921 DEBUG findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,921 DEBUG findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,921 DEBUG findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,921 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,921 DEBUG findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,921 DEBUG findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,921 DEBUG findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.62
2023-01-07 15:29:34,921 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,921 DEBUG findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 11.335
2023-01-07 15:29:34,922 DEBUG findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,922 DEBUG findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,922 DEBUG findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,922 DEBUG findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,922 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,922 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.05
2023-01-07 15:29:34,922 DEBUG findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,922 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,922 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,922 DEBUG findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,922 DEBUG findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,922 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.335
2023-01-07 15:29:34,922 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,922 DEBUG findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,922 DEBUG findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,922 DEBUG findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,922 DEBUG findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,922 DEBUG findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,922 DEBUG findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,923 DEBUG findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.335
2023-01-07 15:29:34,923 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,923 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,923 DEBUG findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,923 DEBUG findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,923 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,923 DEBUG findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,923 DEBUG findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,923 DEBUG findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,923 DEBUG findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,923 DEBUG findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,923 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,923 DEBUG findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,923 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.05
2023-01-07 15:29:34,923 DEBUG findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,923 DEBUG findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,923 DEBUG findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 10.24
2023-01-07 15:29:34,923 DEBUG findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,923 DEBUG findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,923 DEBUG findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,923 DEBUG findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,924 DEBUG findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.24
2023-01-07 15:29:34,924 DEBUG findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,924 DEBUG findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,924 DEBUG findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,924 DEBUG findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.24
2023-01-07 15:29:34,924 DEBUG findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.24
2023-01-07 15:29:34,924 DEBUG findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,924 DEBUG findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.4775
2023-01-07 15:29:34,924 DEBUG findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,924 DEBUG findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,924 DEBUG findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,924 DEBUG findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,924 DEBUG findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,924 DEBUG findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,924 DEBUG findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,924 DEBUG findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,924 DEBUG findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,924 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.05
2023-01-07 15:29:34,924 DEBUG findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,925 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,925 DEBUG findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,925 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.05
2023-01-07 15:29:34,925 DEBUG findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.24
2023-01-07 15:29:34,925 DEBUG findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,925 DEBUG findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,925 DEBUG findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,925 DEBUG findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.335
2023-01-07 15:29:34,925 DEBUG findfont: Matching DejaVu Sans:style=normal:variant=normal:weight=bold:stretch=normal:size=18.0 to DejaVu Sans ('/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf') with score of 0.050000.
2023-01-07 15:29:34,925 DEBUG findfont: Matching DejaVu Sans Mono:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0.
2023-01-07 15:29:34,926 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,926 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,926 DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,926 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,926 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,926 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,926 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,926 DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,926 DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,926 DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,926 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-07 15:29:34,926 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,926 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,926 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,926 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,926 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 1.05
2023-01-07 15:29:34,926 DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,926 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,927 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,927 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,927 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,927 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,927 DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,927 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2023-01-07 15:29:34,927 DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,927 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,927 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,927 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,927 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,927 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,927 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,927 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-07 15:29:34,927 DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,927 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,927 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,927 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 0.05
2023-01-07 15:29:34,927 DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,927 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2023-01-07 15:29:34,928 DEBUG findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,928 DEBUG findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,928 DEBUG findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,928 DEBUG findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,928 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,928 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,928 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,928 DEBUG findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,928 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,928 DEBUG findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,928 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,928 DEBUG findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,928 DEBUG findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,928 DEBUG findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,928 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,928 DEBUG findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,928 DEBUG findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,928 DEBUG findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,928 DEBUG findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,928 DEBUG findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,929 DEBUG findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,929 DEBUG findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,929 DEBUG findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,929 DEBUG findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,929 DEBUG findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,929 DEBUG findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,929 DEBUG findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,929 DEBUG findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,929 DEBUG findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,929 DEBUG findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,929 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2023-01-07 15:29:34,929 DEBUG findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,929 DEBUG findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,929 DEBUG findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,929 DEBUG findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,929 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,929 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,929 DEBUG findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,929 DEBUG findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,929 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,930 DEBUG findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,930 DEBUG findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,930 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,930 DEBUG findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,930 DEBUG findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,930 DEBUG findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,930 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,930 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,930 DEBUG findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,930 DEBUG findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,930 DEBUG findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,930 DEBUG findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,930 DEBUG findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,930 DEBUG findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,930 DEBUG findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,930 DEBUG findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2023-01-07 15:29:34,930 DEBUG findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,930 DEBUG findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,930 DEBUG findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,930 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2023-01-07 15:29:34,931 DEBUG findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,931 DEBUG findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,931 DEBUG findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,931 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,931 DEBUG findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,931 DEBUG findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,931 DEBUG findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,931 DEBUG findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,931 DEBUG findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,931 DEBUG findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,931 DEBUG findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,931 DEBUG findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,931 DEBUG findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,931 DEBUG findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,931 DEBUG findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,931 DEBUG findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,931 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,931 DEBUG findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,931 DEBUG findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,931 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,932 DEBUG findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,932 DEBUG findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,932 DEBUG findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,932 DEBUG findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,932 DEBUG findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,932 DEBUG findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,932 DEBUG findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,932 DEBUG findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,932 DEBUG findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,932 DEBUG findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,932 DEBUG findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,932 DEBUG findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,932 DEBUG findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,932 DEBUG findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,932 DEBUG findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,932 DEBUG findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,932 DEBUG findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,932 DEBUG findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,932 DEBUG findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,932 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,933 DEBUG findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,933 DEBUG findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,933 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,933 DEBUG findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,933 DEBUG findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,933 DEBUG findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,933 DEBUG findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,933 DEBUG findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,933 DEBUG findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,933 DEBUG findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,933 DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,933 DEBUG findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,933 DEBUG findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,933 DEBUG findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,933 DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,933 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2023-01-07 15:29:34,933 DEBUG findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,933 DEBUG findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,933 DEBUG findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,934 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,934 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,934 DEBUG findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,934 DEBUG findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,934 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,934 DEBUG findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,934 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,934 DEBUG findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,934 DEBUG findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,934 DEBUG findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,934 DEBUG findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,934 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,934 DEBUG findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,934 DEBUG findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,934 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,935 DEBUG findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,935 DEBUG findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2023-01-07 15:29:34,935 DEBUG findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,935 DEBUG findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,935 DEBUG findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,935 DEBUG findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,935 DEBUG findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,935 DEBUG findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,935 DEBUG findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,935 DEBUG findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,935 DEBUG findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,935 DEBUG findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,935 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2023-01-07 15:29:34,935 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,935 DEBUG findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,936 DEBUG findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,936 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,936 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,936 DEBUG findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,936 DEBUG findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,936 DEBUG findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,936 DEBUG findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2023-01-07 15:29:34,936 DEBUG findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,936 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,936 DEBUG findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,936 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,936 DEBUG findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,936 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,936 DEBUG findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,936 DEBUG findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,936 DEBUG findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,937 DEBUG findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,937 DEBUG findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,937 DEBUG findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,937 DEBUG findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,937 DEBUG findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,937 DEBUG findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,937 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2023-01-07 15:29:34,937 DEBUG findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2023-01-07 15:29:34,937 DEBUG findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,937 DEBUG findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,937 DEBUG findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,937 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,937 DEBUG findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2023-01-07 15:29:34,937 DEBUG findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,937 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,937 DEBUG findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,937 DEBUG findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,938 DEBUG findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,938 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,938 DEBUG findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,938 DEBUG findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,938 DEBUG findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,938 DEBUG findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,938 DEBUG findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,938 DEBUG findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,938 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,938 DEBUG findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,938 DEBUG findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,938 DEBUG findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,938 DEBUG findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,938 DEBUG findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2023-01-07 15:29:34,938 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2023-01-07 15:29:34,938 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,938 DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,938 DEBUG findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,938 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2023-01-07 15:29:34,939 DEBUG findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,939 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,939 DEBUG findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,939 DEBUG findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,939 DEBUG findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,939 DEBUG findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,939 DEBUG findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,939 DEBUG findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,939 DEBUG findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,939 DEBUG findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,939 DEBUG findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,939 DEBUG findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,939 DEBUG findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,939 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2023-01-07 15:29:34,939 DEBUG findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,939 DEBUG findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,939 DEBUG findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,939 DEBUG findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,940 DEBUG findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,940 DEBUG findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,940 DEBUG findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,940 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2023-01-07 15:29:34,940 DEBUG findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,940 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2023-01-07 15:29:34,940 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,940 DEBUG findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,940 DEBUG findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,940 DEBUG findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,940 DEBUG findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,940 DEBUG findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,940 DEBUG findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,940 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,940 DEBUG findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,940 DEBUG findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,940 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,941 DEBUG findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,941 DEBUG findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,941 DEBUG findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,941 DEBUG findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,941 DEBUG findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,941 DEBUG findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,941 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,941 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,941 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,941 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2023-01-07 15:29:34,941 DEBUG findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,941 DEBUG findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,941 DEBUG findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,941 DEBUG findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,941 DEBUG findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,941 DEBUG findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,941 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,941 DEBUG findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,941 DEBUG findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,942 DEBUG findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,942 DEBUG findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,942 DEBUG findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,942 DEBUG findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,942 DEBUG findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,942 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,942 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,942 DEBUG findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,942 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,942 DEBUG findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,942 DEBUG findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,942 DEBUG findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,942 DEBUG findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,942 DEBUG findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,942 DEBUG findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,942 DEBUG findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,942 DEBUG findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,942 DEBUG findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,942 DEBUG findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,943 DEBUG findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,943 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,943 DEBUG findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,943 DEBUG findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,943 DEBUG findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2023-01-07 15:29:34,943 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,943 DEBUG findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,943 DEBUG findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,943 DEBUG findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,943 DEBUG findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,943 DEBUG findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,943 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,943 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,943 DEBUG findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,943 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,943 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,943 DEBUG findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,943 DEBUG findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,943 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,943 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,944 DEBUG findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,944 DEBUG findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,944 DEBUG findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,944 DEBUG findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,944 DEBUG findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,944 DEBUG findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,944 DEBUG findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2023-01-07 15:29:34,944 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,944 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,944 DEBUG findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,944 DEBUG findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,944 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,944 DEBUG findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,944 DEBUG findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,944 DEBUG findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,944 DEBUG findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,944 DEBUG findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,945 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,945 DEBUG findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,945 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,945 DEBUG findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,945 DEBUG findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,945 DEBUG findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,945 DEBUG findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,945 DEBUG findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,945 DEBUG findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,945 DEBUG findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,945 DEBUG findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,945 DEBUG findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,945 DEBUG findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,945 DEBUG findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,945 DEBUG findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,945 DEBUG findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,945 DEBUG findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,945 DEBUG findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2023-01-07 15:29:34,945 DEBUG findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,946 DEBUG findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,946 DEBUG findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,946 DEBUG findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,946 DEBUG findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,946 DEBUG findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,946 DEBUG findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,946 DEBUG findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,946 DEBUG findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,946 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,946 DEBUG findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,946 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,946 DEBUG findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,946 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,946 DEBUG findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,946 DEBUG findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,946 DEBUG findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,946 DEBUG findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,946 DEBUG findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,946 DEBUG findfont: Matching DejaVu Sans Mono:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0 to DejaVu Sans Mono ('/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf') with score of 0.050000.
2023-01-07 15:29:34,947 DEBUG findfont: Matching DejaVu Sans Display:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0.
2023-01-07 15:29:34,947 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,947 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,947 DEBUG findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,947 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,947 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,947 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,947 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,947 DEBUG findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,947 DEBUG findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 0.05
2023-01-07 15:29:34,948 DEBUG findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,948 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-07 15:29:34,948 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,948 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,948 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,948 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,948 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-07 15:29:34,948 DEBUG findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,948 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,948 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,948 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,948 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,948 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,948 DEBUG findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,948 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-07 15:29:34,948 DEBUG findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,948 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,948 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,949 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,949 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,949 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,949 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,949 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-07 15:29:34,949 DEBUG findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,949 DEBUG findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,949 DEBUG findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,949 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,949 DEBUG findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,949 DEBUG findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,949 DEBUG findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,949 DEBUG findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,949 DEBUG findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,949 DEBUG findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,949 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,949 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,950 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,950 DEBUG findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,950 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,950 DEBUG findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,950 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,950 DEBUG findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,950 DEBUG findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,950 DEBUG findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,950 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,950 DEBUG findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,950 DEBUG findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,950 DEBUG findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,950 DEBUG findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,951 DEBUG findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,951 DEBUG findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,951 DEBUG findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,951 DEBUG findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,951 DEBUG findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,951 DEBUG findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,951 DEBUG findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,951 DEBUG findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,951 DEBUG findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,951 DEBUG findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,951 DEBUG findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,951 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal 295 normal>) = 10.14975
2023-01-07 15:29:34,951 DEBUG findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,951 DEBUG findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,951 DEBUG findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,951 DEBUG findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,951 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,951 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,952 DEBUG findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,952 DEBUG findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,952 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,952 DEBUG findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,952 DEBUG findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,952 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,952 DEBUG findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,952 DEBUG findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,952 DEBUG findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,952 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,952 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,952 DEBUG findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,952 DEBUG findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,952 DEBUG findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,952 DEBUG findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,952 DEBUG findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,952 DEBUG findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,953 DEBUG findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,953 DEBUG findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2023-01-07 15:29:34,953 DEBUG findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,953 DEBUG findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,953 DEBUG findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,953 DEBUG findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal 295 normal>) = 11.14975
2023-01-07 15:29:34,953 DEBUG findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,953 DEBUG findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,953 DEBUG findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,953 DEBUG findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,953 DEBUG findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,953 DEBUG findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,953 DEBUG findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,953 DEBUG findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,953 DEBUG findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,953 DEBUG findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,953 DEBUG findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,953 DEBUG findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,954 DEBUG findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,954 DEBUG findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,954 DEBUG findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,954 DEBUG findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,954 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,954 DEBUG findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,954 DEBUG findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,954 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,954 DEBUG findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,954 DEBUG findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,954 DEBUG findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,954 DEBUG findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,954 DEBUG findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,954 DEBUG findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,954 DEBUG findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,954 DEBUG findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,954 DEBUG findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,954 DEBUG findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,954 DEBUG findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,954 DEBUG findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,954 DEBUG findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,955 DEBUG findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,955 DEBUG findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,955 DEBUG findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,955 DEBUG findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,955 DEBUG findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,955 DEBUG findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,955 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,955 DEBUG findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,955 DEBUG findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,955 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,955 DEBUG findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,955 DEBUG findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,955 DEBUG findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,955 DEBUG findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,955 DEBUG findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,955 DEBUG findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,955 DEBUG findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,955 DEBUG findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,956 DEBUG findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,956 DEBUG findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,956 DEBUG findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,956 DEBUG findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,956 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2023-01-07 15:29:34,956 DEBUG findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,956 DEBUG findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,956 DEBUG findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,956 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,956 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,956 DEBUG findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,956 DEBUG findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,956 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,956 DEBUG findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,956 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,956 DEBUG findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,956 DEBUG findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,956 DEBUG findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,956 DEBUG findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,957 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,957 DEBUG findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,957 DEBUG findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,957 DEBUG findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,957 DEBUG findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,957 DEBUG findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2023-01-07 15:29:34,957 DEBUG findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,957 DEBUG findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,957 DEBUG findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,957 DEBUG findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,957 DEBUG findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,957 DEBUG findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,957 DEBUG findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,957 DEBUG findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,957 DEBUG findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 300 normal>) = 10.145
2023-01-07 15:29:34,957 DEBUG findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,957 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2023-01-07 15:29:34,957 DEBUG findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,958 DEBUG findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,958 DEBUG findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,958 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,958 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,958 DEBUG findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,958 DEBUG findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,958 DEBUG findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,958 DEBUG findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2023-01-07 15:29:34,958 DEBUG findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,958 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,958 DEBUG findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,958 DEBUG findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,958 DEBUG findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,958 DEBUG findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,958 DEBUG findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,958 DEBUG findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,958 DEBUG findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,958 DEBUG findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,958 DEBUG findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,958 DEBUG findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,959 DEBUG findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,959 DEBUG findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,959 DEBUG findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,959 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2023-01-07 15:29:34,959 DEBUG findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2023-01-07 15:29:34,959 DEBUG findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,959 DEBUG findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,959 DEBUG findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,959 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,959 DEBUG findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 1000 normal>) = 10.62
2023-01-07 15:29:34,959 DEBUG findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,959 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,959 DEBUG findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,959 DEBUG findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,959 DEBUG findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,959 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,959 DEBUG findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,959 DEBUG findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,959 DEBUG findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,960 DEBUG findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,960 DEBUG findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,960 DEBUG findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,960 DEBUG findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,960 DEBUG findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,960 DEBUG findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,960 DEBUG findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,960 DEBUG findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,960 DEBUG findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2023-01-07 15:29:34,960 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2023-01-07 15:29:34,960 DEBUG findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,960 DEBUG findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,960 DEBUG findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,960 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2023-01-07 15:29:34,960 DEBUG findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,960 DEBUG findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,961 DEBUG findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,961 DEBUG findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,961 DEBUG findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,961 DEBUG findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,961 DEBUG findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,961 DEBUG findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,961 DEBUG findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,961 DEBUG findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,961 DEBUG findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,961 DEBUG findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,961 DEBUG findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,961 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2023-01-07 15:29:34,961 DEBUG findfont: score(<Font 'Times' (Times.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,961 DEBUG findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,961 DEBUG findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,961 DEBUG findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,962 DEBUG findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,962 DEBUG findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,962 DEBUG findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,962 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2023-01-07 15:29:34,962 DEBUG findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,962 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2023-01-07 15:29:34,962 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,962 DEBUG findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,962 DEBUG findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,962 DEBUG findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,962 DEBUG findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,962 DEBUG findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,962 DEBUG findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,962 DEBUG findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,962 DEBUG findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,962 DEBUG findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,962 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,962 DEBUG findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,963 DEBUG findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,963 DEBUG findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,963 DEBUG findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,963 DEBUG findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,963 DEBUG findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,963 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,963 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,963 DEBUG findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,963 DEBUG findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2023-01-07 15:29:34,963 DEBUG findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,963 DEBUG findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,963 DEBUG findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,963 DEBUG findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,963 DEBUG findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,963 DEBUG findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,963 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,963 DEBUG findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,963 DEBUG findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,963 DEBUG findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,964 DEBUG findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,964 DEBUG findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,964 DEBUG findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,964 DEBUG findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,964 DEBUG findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,964 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,964 DEBUG findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,964 DEBUG findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,964 DEBUG findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,964 DEBUG findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,964 DEBUG findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,964 DEBUG findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,964 DEBUG findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,964 DEBUG findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,964 DEBUG findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,964 DEBUG findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,964 DEBUG findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,964 DEBUG findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,965 DEBUG findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,965 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,965 DEBUG findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,965 DEBUG findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,965 DEBUG findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2023-01-07 15:29:34,965 DEBUG findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,965 DEBUG findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,965 DEBUG findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,965 DEBUG findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,965 DEBUG findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,965 DEBUG findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,965 DEBUG findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,965 DEBUG findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,965 DEBUG findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,965 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,965 DEBUG findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,965 DEBUG findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,965 DEBUG findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,965 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2023-01-07 15:29:34,965 DEBUG findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,966 DEBUG findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,966 DEBUG findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,966 DEBUG findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,966 DEBUG findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,966 DEBUG findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,966 DEBUG findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,966 DEBUG findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 1000 normal>) = 11.62
2023-01-07 15:29:34,966 DEBUG findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,966 DEBUG findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,966 DEBUG findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,966 DEBUG findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,966 DEBUG findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,966 DEBUG findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,966 DEBUG findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,966 DEBUG findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,966 DEBUG findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,966 DEBUG findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,966 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,966 DEBUG findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,967 DEBUG findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,967 DEBUG findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,967 DEBUG findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,967 DEBUG findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,967 DEBUG findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,967 DEBUG findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,967 DEBUG findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,967 DEBUG findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,967 DEBUG findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,967 DEBUG findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,967 DEBUG findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,967 DEBUG findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,967 DEBUG findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2023-01-07 15:29:34,967 DEBUG findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,967 DEBUG findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,967 DEBUG findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2023-01-07 15:29:34,967 DEBUG findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,967 DEBUG findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,968 DEBUG findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,968 DEBUG findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,968 DEBUG findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,968 DEBUG findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,968 DEBUG findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,968 DEBUG findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,968 DEBUG findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,968 DEBUG findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2023-01-07 15:29:34,968 DEBUG findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,968 DEBUG findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,968 DEBUG findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,968 DEBUG findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-07 15:29:34,968 DEBUG findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2023-01-07 15:29:34,968 DEBUG findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,968 DEBUG findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,968 DEBUG findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,968 DEBUG findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal 400 normal>) = 10.05
2023-01-07 15:29:34,968 DEBUG findfont: Matching DejaVu Sans Display:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0 to DejaVu Sans Display ('/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf') with score of 0.050000.
2023-01-07 15:29:37,321 INFO MSE deviation of the 1:th estimated GD-refined rotations using register_rotations : 1.1251611242420774
2023-01-07 15:29:38,250 DEBUG locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f75cdff2a20>
2023-01-07 15:29:38,250 DEBUG Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f75cdff2a20> on colorbar
2023-01-07 15:29:38,250 DEBUG Setting pcolormesh
2023-01-07 15:29:40,834 INFO MSE deviation of the 2:th estimated GD-refined rotations using register_rotations : 0.019934905338683195
2023-01-07 15:29:41,754 DEBUG locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f75cefabf60>
2023-01-07 15:29:41,754 DEBUG Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f75cefabf60> on colorbar
2023-01-07 15:29:41,754 DEBUG Setting pcolormesh
2023-01-07 15:29:44,141 INFO MSE deviation of the 3:th estimated GD-refined rotations using register_rotations : 0.005791241919531335
2023-01-07 15:29:45,024 DEBUG locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f75ceb37be0>
2023-01-07 15:29:45,024 DEBUG Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f75ceb37be0> on colorbar
2023-01-07 15:29:45,024 DEBUG Setting pcolormesh
2023-01-07 15:29:47,576 INFO MSE deviation of the 4:th estimated GD-refined rotations using register_rotations : 0.002866493105053003
2023-01-07 15:29:48,469 DEBUG locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f75cf06de48>
2023-01-07 15:29:48,469 DEBUG Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f75cf06de48> on colorbar
2023-01-07 15:29:48,469 DEBUG Setting pcolormesh
2023-01-07 15:29:50,833 INFO MSE deviation of the 5:th estimated GD-refined rotations using register_rotations : 0.001996690953887245
2023-01-07 15:29:51,734 DEBUG locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f75ce31b748>
2023-01-07 15:29:51,734 DEBUG Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f75ce31b748> on colorbar
2023-01-07 15:29:51,734 DEBUG Setting pcolormesh
2023-01-07 15:29:54,091 INFO MSE deviation of the 6:th estimated GD-refined rotations using register_rotations : 0.0016906802207806051
2023-01-07 15:29:55,207 DEBUG locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f75cf07c358>
2023-01-07 15:29:55,207 DEBUG Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f75cf07c358> on colorbar
2023-01-07 15:29:55,207 DEBUG Setting pcolormesh
2023-01-07 15:29:57,542 INFO MSE deviation of the 7:th estimated GD-refined rotations using register_rotations : 0.0015835660980789293
2023-01-07 15:29:58,437 DEBUG locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f75cde4f748>
2023-01-07 15:29:58,437 DEBUG Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f75cde4f748> on colorbar
2023-01-07 15:29:58,437 DEBUG Setting pcolormesh
2023-01-07 15:30:00,632 INFO MSE deviation of the 8:th estimated GD-refined rotations using register_rotations : 0.0015396235474428868
2023-01-07 15:30:01,539 DEBUG locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f75ce9fbeb8>
2023-01-07 15:30:01,539 DEBUG Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f75ce9fbeb8> on colorbar
2023-01-07 15:30:01,539 DEBUG Setting pcolormesh
2023-01-07 15:30:04,121 INFO MSE deviation of the 9:th estimated GD-refined rotations using register_rotations : 0.0015208800640146014
2023-01-07 15:30:05,239 DEBUG locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f75cec34748>
2023-01-07 15:30:05,239 DEBUG Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f75cec34748> on colorbar
2023-01-07 15:30:05,239 DEBUG Setting pcolormesh
2023-01-07 15:30:08,289 INFO MSE deviation of the 10:th estimated GD-refined rotations using register_rotations : 0.001512703051081481
2023-01-07 15:30:09,412 WARNING The PostScript backend does not support transparency; partially transparent artists will be rendered opaque.
2023-01-07 15:30:09,413 WARNING The PostScript backend does not support transparency; partially transparent artists will be rendered opaque.
2023-01-07 15:30:09,780 WARNING The PostScript backend does not support transparency; partially transparent artists will be rendered opaque.
2023-01-07 15:30:09,782 WARNING The PostScript backend does not support transparency; partially transparent artists will be rendered opaque.
2023-01-07 15:30:09,783 WARNING The PostScript backend does not support transparency; partially transparent artists will be rendered opaque.
