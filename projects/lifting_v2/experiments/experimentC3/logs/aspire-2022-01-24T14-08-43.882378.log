2022-01-24 14:08:52,502 DEBUG (private) matplotlib data path: /Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data
2022-01-24 14:08:52,502 DEBUG matplotlib data path: /Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/matplotlib/mpl-data
2022-01-24 14:08:52,508 DEBUG CONFIGDIR=/Users/wdiepeveen/.matplotlib
2022-01-24 14:08:52,512 DEBUG matplotlib version 3.3.4
2022-01-24 14:08:52,512 DEBUG interactive is False
2022-01-24 14:08:52,512 DEBUG platform is darwin
2022-01-24 14:08:52,512 DEBUG loaded modules: ['builtins', 'sys', '_frozen_importlib', '_imp', '_warnings', '_thread', '_weakref', '_frozen_importlib_external', '_io', 'marshal', 'posix', 'zipimport', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_weakrefset', '_bootlocale', '_locale', 'site', 'os', 'errno', 'stat', '_stat', 'posixpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', 'types', 'functools', '_functools', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'weakref', 'collections.abc', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'mpl_toolkits', 'sphinxcontrib', 'sysconfig', '_sysconfigdata_m_darwin_darwin', '_osx_support', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'runpy', 'pkgutil', 'ipykernel', 'ipykernel._version', 'ipykernel.connect', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'subprocess', 'time', 'signal', '_posixsubprocess', 'select', 'selectors', 'math', 'threading', 'traceback', 'linecache', 'tokenize', 'token', 'IPython', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'IPython.core.application', 'atexit', 'copy', 'glob', 'fnmatch', 'logging', 'string', '_string', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'pwd', 'grp', 'traitlets', 'traitlets.traitlets', 'inspect', 'ast', '_ast', 'dis', 'opcode', '_opcode', 'six', '__future__', 'struct', '_struct', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'ipython_genutils', 'ipython_genutils._version', 'ipython_genutils.py3compat', 'ipython_genutils.encoding', 'locale', 'platform', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets._version', 'traitlets.config', 'traitlets.config.application', 'decorator', 'traitlets.config.configurable', 'traitlets.config.loader', 'argparse', 'textwrap', 'gettext', 'ipython_genutils.path', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'ipython_genutils.text', 'ipython_genutils.importstring', 'IPython.core.crashhandler', 'pprint', 'IPython.core.ultratb', 'pydoc', 'urllib', 'urllib.parse', 'IPython.core.debugger', 'bdb', 'IPython.utils', 'IPython.utils.PyColorize', 'IPython.utils.coloransi', 'IPython.utils.ipstruct', 'IPython.utils.colorable', 'pygments', 'IPython.utils.py3compat', 'IPython.utils.encoding', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'pdb', 'cmd', 'code', 'codeop', 'IPython.core.display_trap', 'IPython.utils.path', 'IPython.utils.process', 'IPython.utils._process_posix', 'pexpect', 'pexpect.exceptions', 'pexpect.utils', 'pexpect.expect', 'pexpect.pty_spawn', 'pty', 'tty', 'termios', 'ptyprocess', 'ptyprocess.ptyprocess', 'fcntl', 'resource', 'ptyprocess.util', 'pexpect.spawnbase', 'pexpect.run', 'IPython.utils._process_common', 'shlex', 'IPython.utils.decorators', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.utils.sysinfo', 'IPython.utils._sysinfo', 'IPython.core.profiledir', 'IPython.paths', 'tempfile', 'IPython.utils.importstring', 'IPython.terminal', 'IPython.terminal.embed', 'IPython.core.compilerop', 'IPython.core.magic_arguments', 'IPython.core.error', 'IPython.utils.text', 'pathlib', 'ntpath', 'IPython.core.magic', 'getopt', 'IPython.core.oinspect', 'typing', 'typing.io', 'typing.re', 'IPython.core.page', 'IPython.core.display', 'binascii', 'mimetypes', 'IPython.lib', 'IPython.lib.security', 'getpass', 'IPython.lib.pretty', 'datetime', '_datetime', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.python', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.unistring', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'IPython.core.inputtransformer2', 'IPython.core.interactiveshell', 'pickleshare', 'pickle', '_compat_pickle', '_pickle', 'IPython.core.prefilter', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.alias', 'IPython.core.builtin_trap', 'IPython.core.events', 'backcall', 'backcall.backcall', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.core.formatters', 'IPython.utils.sentinel', 'IPython.core.history', 'sqlite3', 'sqlite3.dbapi2', '_sqlite3', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.display', 'IPython.lib.display', 'html', 'html.entities', 'IPython.utils.io', 'IPython.utils.capture', 'IPython.utils.strdispatch', 'IPython.core.hooks', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.terminal.interactiveshell', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'concurrent.futures.process', 'queue', 'multiprocessing', 'multiprocessing.context', 'multiprocessing.process', 'multiprocessing.reduction', 'socket', '_socket', 'array', '__mp_main__', 'multiprocessing.connection', '_multiprocessing', 'multiprocessing.util', 'concurrent.futures.thread', 'asyncio.compat', 'asyncio.coroutines', 'asyncio.constants', 'asyncio.events', 'asyncio.base_futures', 'asyncio.log', 'asyncio.futures', 'asyncio.base_tasks', '_asyncio', 'asyncio.tasks', 'asyncio.locks', 'asyncio.protocols', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.transports', 'asyncio.unix_events', 'asyncio.base_subprocess', 'asyncio.selector_events', 'ssl', 'ipaddress', '_ssl', 'base64', 'asyncio.sslproto', 'prompt_toolkit', 'prompt_toolkit.application', 'prompt_toolkit.application.application', 'prompt_toolkit.buffer', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop', 'prompt_toolkit.eventloop.async_generator', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.dummy_contextvars', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.utils', 'wcwidth', 'wcwidth.wcwidth', 'wcwidth.table_wide', 'wcwidth.table_zero', 'wcwidth.unicode_versions', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.eventloop.async_context_manager', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.document', 'prompt_toolkit.clipboard', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.filters', 'prompt_toolkit.filters.app', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.completion', 'prompt_toolkit.completion.base', 'prompt_toolkit.formatted_text', 'prompt_toolkit.formatted_text.ansi', 'prompt_toolkit.output', 'prompt_toolkit.output.base', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.pygments', 'prompt_toolkit.styles.style_transformation', 'colorsys', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output.vt100', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.html', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.history', 'prompt_toolkit.search', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.validation', 'prompt_toolkit.input', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.layout', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.controls', 'prompt_toolkit.lexers', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.dummy', 'prompt_toolkit.shortcuts', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.patch_stdout', 'pygments.style', 'IPython.terminal.debugger', 'IPython.core.completer', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'jedi', 'jedi.api', 'parso', 'parso.parser', 'parso.tree', 'parso.utils', 'parso.pgen2', 'parso.pgen2.generator', 'parso.pgen2.grammar_parser', 'parso.python', 'parso.python.tokenize', 'parso.python.token', 'parso.grammar', 'parso._compatibility', 'parso.python.diff', 'difflib', 'parso.python.parser', 'parso.python.tree', 'parso.python.prefix', 'parso.cache', 'gc', 'parso.python.errors', 'parso.normalizer', 'parso.python.pep8', 'parso.file_io', 'jedi._compatibility', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.file_io', 'jedi.api.classes', 'jedi.inference', 'jedi.inference.imports', 'jedi.inference.sys_path', 'jedi.inference.cache', 'jedi.inference.base_value', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.inference.compiled', 'jedi.inference.compiled.value', 'jedi.inference.filters', 'jedi.inference.flow_analysis', 'jedi.inference.recursion', 'jedi.inference.names', 'jedi.inference.docstrings', 'jedi.common', 'jedi.inference.lazy_value', 'jedi.plugins', 'jedi.inference.compiled.access', 'jedi.inference.compiled.getattr_static', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.gradual.typeshed', 'jedi.inference.gradual.stub_value', 'jedi.inference.value', 'jedi.inference.value.module', 'jedi.inference.value.klass', 'jedi.inference.arguments', 'jedi.inference.value.iterable', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.function', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.instance', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.compiled.subprocess', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.inference.syntax_tree', 'jedi.inference.gradual.annotation', 'jedi.inference.param', 'jedi.inference.value.decorator', 'jedi.inference.compiled.mixed', 'jedi.inference.gradual.conversion', 'jedi.api.keywords', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.interpreter', 'jedi.api.completion', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.api.environment', 'filecmp', 'jedi.api.project', 'jedi.inference.references', 'jedi.api.errors', 'jedi.api.refactoring', 'jedi.api.refactoring.extract', 'jedi.inference.gradual.utils', 'jedi.plugins.registry', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'jedi.plugins.django', 'IPython.terminal.ptutils', 'IPython.terminal.shortcuts', 'IPython.terminal.magics', 'IPython.lib.clipboard', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.ipapp', 'IPython.core.magics', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'IPython.core.magics.code', 'urllib.request', 'email', 'http', 'http.client', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'urllib.error', 'urllib.response', '_scproxy', 'IPython.core.magics.config', 'IPython.core.magics.display', 'IPython.core.magics.execution', 'timeit', 'cProfile', '_lsprof', 'profile', 'optparse', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.magics.pylab', 'IPython.core.pylabtools', 'IPython.core.magics.script', 'IPython.lib.backgroundjobs', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.utils.frame', 'jupyter_client', 'jupyter_client._version', 'jupyter_client.connect', 'zmq', 'ctypes', '_ctypes', 'ctypes._endian', 'zmq.backend', 'zmq.backend.select', 'zmq.backend.cython', 'zmq.backend.cython.constants', 'cython_runtime', 'zmq.backend.cython.error', '_cython_0_29_21', 'zmq.backend.cython.message', 'zmq.error', 'zmq.backend.cython.context', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.sugar', 'zmq.sugar.constants', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.context', 'zmq.sugar.attrsettr', 'zmq.sugar.socket', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'jupyter_client.localinterfaces', 'jupyter_core', 'jupyter_core.version', 'jupyter_core.paths', 'jupyter_client.launcher', 'traitlets.log', 'jupyter_client.client', 'jupyter_client.channels', 'jupyter_client.channelsabc', 'jupyter_client.clientabc', 'jupyter_client.manager', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.blocking', 'jupyter_client.blocking.client', 'jupyter_client.blocking.channels', 'jupyter_client.asynchronous', 'jupyter_client.asynchronous.client', 'zmq.asyncio', 'zmq._future', 'jupyter_client.asynchronous.channels', 'jupyter_client.multikernelmanager', 'uuid', 'ctypes.util', 'ctypes.macholib', 'ctypes.macholib.dyld', 'ctypes.macholib.framework', 'ctypes.macholib.dylib', 'ipykernel.kernelapp', 'tornado', 'tornado.ioloop', 'numbers', 'tornado.concurrent', 'tornado.log', 'logging.handlers', 'tornado.escape', 'tornado.util', 'tornado.speedups', 'curses', '_curses', 'zmq.eventloop', 'zmq.eventloop.ioloop', 'tornado.platform', 'tornado.platform.asyncio', 'tornado.gen', 'zmq.eventloop.zmqstream', 'ipykernel.iostream', 'imp', 'jupyter_client.session', 'hmac', 'jupyter_client.jsonutil', 'dateutil', 'dateutil._version', 'dateutil.parser', 'dateutil.parser._parser', 'decimal', '_decimal', 'dateutil.relativedelta', 'dateutil._common', 'dateutil.tz', 'dateutil.tz.tz', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.parser.isoparser', '_strptime', 'jupyter_client.adapter', 'ipykernel.heartbeat', 'ipykernel.ipkernel', 'IPython.utils.tokenutil', 'ipykernel.comm', 'ipykernel.comm.manager', 'ipykernel.comm.comm', 'ipykernel.kernelbase', 'tornado.queues', 'tornado.locks', 'ipykernel.jsonutil', 'ipykernel.zmqshell', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.datapub', 'ipykernel.serialize', 'ipykernel.pickleutil', 'ipykernel.codeutil', 'ipykernel.eventloops', 'distutils', 'distutils.version', 'ipykernel.parentpoller', 'faulthandler', 'IPython.core.completerlib', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'appnope', 'appnope._nope', 'storemagic', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'numpy.core', 'numpy.core.info', 'numpy.core.multiarray', 'numpy.core.overrides', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core._internal', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.shape_base', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.info', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.info', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.utils', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.mixins', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.scimath', 'numpy.lib.polynomial', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft.info', 'numpy.fft.fftpack', 'numpy.fft.fftpack_lite', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random.mtrand', 'mtrand', 'numpy.ctypeslib', 'numpy.core._dtype_ctypes', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.testing', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'numpy.testing._private', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'projects', 'projects.lifting_v2', 'projects.lifting_v2.experiments', 'projects.lifting_v2.experiments.experimentC2', 'projects.lifting_v2.experiments.experimentC2.E1_run', 'mrcfile', 'mrcfile.load_functions', 'mrcfile.bzip2mrcfile', 'mrcfile.mrcfile', 'mrcfile.mrcinterpreter', 'mrcfile.utils', 'mrcfile.constants', 'mrcfile.dtypes', 'mrcfile.mrcobject', 'mrcfile.future_mrcfile', 'mrcfile.gzipmrcfile', 'gzip', 'mrcfile.mrcmemmap', 'mrcfile.validator', 'mrcfile.version', 'scipy', 'scipy._lib', 'scipy._lib._testutils', 'scipy._lib.deprecation', 'scipy._distributor_init', 'scipy.__config__', 'scipy.version', 'scipy._lib._version', 'scipy._lib.six', 'scipy._lib._ccallback', 'scipy._lib._ccallback_c', 'scipy.fft', 'scipy.fft._basic', 'scipy._lib.uarray', 'scipy._lib._uarray', 'scipy._lib._uarray._backend', 'scipy._lib._uarray._uarray', 'scipy.fft._realtransforms', 'scipy.fft._helper', 'scipy.fft._pocketfft', 'scipy.fft._pocketfft.basic', 'scipy.fft._pocketfft.pypocketfft', 'scipy.fft._pocketfft.helper', 'scipy.fft._pocketfft.realtransforms', 'scipy.fft._backend', 'numpy.dual', 'scipy.ndimage', 'scipy.ndimage.filters', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy.ndimage._ni_docstrings', 'scipy._lib.doccer', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', 'scipy.ndimage.measurements', 'scipy.ndimage._ni_label', '_cython_0_29_13', '_ni_label', 'scipy.ndimage.morphology', 'aspire', 'logging.config', 'socketserver', 'importlib_resources', 'importlib_resources._common', 'importlib_resources.abc', 'importlib_resources._compat', 'zipfile', 'zipp', 'importlib_resources._py3', 'aspire.config', 'configparser', 'aspire.exceptions', 'aspire.operators', 'aspire.operators.blk_diag_matrix', 'scipy.linalg', 'scipy.linalg.linalg_version', 'scipy.linalg.misc', 'scipy.linalg.blas', 'scipy.linalg._fblas', 'scipy.linalg.lapack', 'scipy.linalg._flapack', 'scipy._lib._util', 'scipy.linalg.basic', 'scipy.linalg.flinalg', 'scipy.linalg._flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.matfuncs', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg._decomp_update', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._sketches', 'scipy.sparse', 'scipy.sparse.base', 'scipy._lib._numpy_compat', 'scipy.sparse.sputils', 'scipy.sparse.csr', 'scipy.sparse._sparsetools', 'scipy.sparse.compressed', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.csc', 'scipy.sparse.lil', 'scipy.sparse._csparsetools', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'aspire.utils', 'aspire.utils.misc', 'aspire.utils.matrix', 'aspire.utils.matlab_compat', 'aspire.utils.rotation', 'scipy.spatial', 'scipy.spatial.kdtree', 'scipy.spatial.ckdtree', 'scipy.spatial.qhull', 'scipy._lib.messagestream', 'scipy.spatial._spherical_voronoi', 'scipy.spatial._voronoi', 'scipy.spatial._plotutils', 'scipy._lib.decorator', 'scipy.spatial._procrustes', 'scipy.spatial.distance', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.special', 'scipy.special.sf_error', 'scipy.special._ufuncs', 'scipy.special._ufuncs_cxx', 'scipy.special._basic', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm', 'scipy.special._ellip_harm_2', 'scipy.special.lambertw', 'scipy.special._spherical_bessel', 'scipy.spatial.transform', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_groups', 'scipy.constants', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.spatial.transform._rotation_spline', 'aspire.utils.random', 'aspire.utils.types', 'aspire.utils.cell', 'aspire.operators.filters', 'scipy.interpolate', 'scipy.interpolate.interpolate', 'scipy.interpolate.fitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._bsplines', 'scipy.interpolate._bspl', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.rbf', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'aspire.utils.coor_trans', 'aspire.utils.filter_to_fb_mat', 'aspire.basis', 'aspire.basis.basis', 'scipy.sparse.linalg', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.matfuncs', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'aspire.basis.basis_utils', 'aspire.basis.dirac', 'aspire.basis.fb_2d', 'aspire.basis.fb_3d', 'aspire.basis.ffb_2d', 'aspire.image', 'aspire.image.image', 'aspire.volume', 'aspire.nufft', 'aspire.numeric', 'aspire.numeric.numpy', 'aspire.numeric.pyfftw_fft', 'pyfftw', 'pyfftw.pyfftw', 'pyfftw.config', 'pyfftw.builders', 'pyfftw.builders.builders', 'pyfftw.builders._utils', 'pyfftw.interfaces', 'pyfftw.interfaces.numpy_fft', 'pyfftw.interfaces._utils', 'pyfftw.interfaces.cache', 'scipy.fftpack', 'scipy.fftpack.basic', 'scipy.fftpack.helper', 'scipy.fftpack.pseudo_diffs', 'scipy.fftpack.convolve', 'scipy.fftpack.realtransforms', 'pyfftw.interfaces.scipy_fftpack', 'pyfftw.interfaces.scipy_fft', 'pyfftw._version', 'aspire.numeric.base_fft', 'aspire.image.preprocess', 'aspire.basis.ffb_3d', 'aspire.basis.fpswf_2d', 'scipy.optimize', 'scipy.optimize.optimize', 'scipy.optimize.linesearch', 'scipy.optimize.minpack2', 'scipy.optimize._minimize', 'scipy.optimize._trustregion_dogleg', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trlib', 'scipy.optimize._trlib._trlib', 'scipy.optimize._trustregion_exact', 'scipy.optimize._trustregion_constr', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.optimize._differentiable_functions', 'scipy.optimize._numdiff', 'scipy.optimize._group_columns', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._constraints', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize.lbfgsb', 'scipy.optimize._lbfgsb', 'scipy.optimize.tnc', 'scipy.optimize.moduleTNC', 'scipy.optimize.cobyla', 'scipy.optimize._cobyla', 'scipy.optimize.slsqp', 'scipy.optimize._slsqp', 'scipy.optimize._root', 'scipy.optimize.minpack', 'scipy.optimize._minpack', 'scipy.optimize._lsq', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.bvls', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root_scalar', 'scipy.optimize.zeros', 'scipy.optimize._zeros', 'scipy.optimize.nnls', 'scipy.optimize._nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._linprog', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_util', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_simplex', 'scipy.optimize._linprog_rs', 'scipy.optimize._bglu_dense', 'scipy.optimize._lsap', 'scipy.optimize._lsap_module', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.sobol_seq', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._dual_annealing', 'aspire.basis.pswf_2d', 'aspire.basis.pswf_utils', 'aspire.basis.fpswf_3d', 'aspire.basis.pswf_3d', 'aspire.basis.polar_2d', 'aspire.source', 'pandas', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pandas.compat', 'pandas.compat.numpy', 'pandas._libs', 'pandas._libs.tslibs', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.c_timestamp', 'pandas._libs.tslibs.nattype', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.tzconversion', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.ccalendar', 'pandas._config', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.frequencies', 'pandas._libs.tslibs.timestamps', 'pandas._libs.tslibs.resolution', 'pandas._libs.hashtable', 'pandas._libs.missing', 'pandas._libs.lib', 'fractions', 'pandas._libs.tslib', 'pandas.core', 'pandas.core.config_init', 'pandas.core.api', 'pandas.core.arrays', 'pandas.core.arrays.array_', 'pandas.core.dtypes', 'pandas.core.dtypes.common', 'pandas._libs.algos', 'pandas.core.dtypes.dtypes', 'pandas._libs.interval', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.errors', 'pandas.core.dtypes.inference', 'pandas._typing', 'pandas.core.arrays.base', 'pandas.compat.numpy.function', 'pandas.util', 'pandas.util._decorators', 'pandas._libs.properties', 'pandas.core.util', 'pandas.core.util.hashing', 'pandas._libs.hashing', 'pandas.core.dtypes.cast', 'pandas.core.dtypes.missing', 'pandas.util._validators', 'pandas.core.ops', 'pandas._libs.ops', 'pandas.core.common', 'pandas.core.ops.missing', 'pandas.core.ops.roperator', 'pandas.core.ops.docstrings', 'pandas.core.sorting', 'pandas.core.algorithms', 'pandas.core.indexers', 'pandas.core.arrays.categorical', 'pandas.core.accessor', 'pandas.core.base', 'pandas.core.nanops', 'pandas.compat._optional', 'pandas.core.missing', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.datetimelike', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.tseries.offsets', 'dateutil.easter', 'pandas.core.tools', 'pandas.core.tools.datetimes', 'pandas.core.arrays._ranges', 'pandas.core.arrays.integer', 'pandas.core.tools.numeric', 'pandas.core.arrays.interval', 'pandas.core.indexes', 'pandas.core.indexes.base', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.dtypes.concat', 'pandas.core.indexes.frozen', 'pandas.io.formats.printing', 'pandas.core.strings', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.sparse', 'pandas._libs.sparse', 'pandas.core.arrays.timedeltas', 'pandas.core.groupby', 'pandas.core.groupby.generic', 'pandas.core.frame', 'pandas.core.generic', 'pandas.core.index', 'pandas.core.indexes.api', 'pandas.core.indexes.category', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.numeric', 'pandas.core.indexes.interval', 'pandas.util._exceptions', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexing', 'pandas._libs.indexing', 'pandas.core.internals', 'pandas.core.internals.blocks', 'pandas._libs.internals', 'pandas.core.internals.arrays', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.io.formats.format', 'pandas.io.common', 'csv', '_csv', 'mmap', 'pandas.core.internals.construction', 'pandas.core.series', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.plotting', 'pandas.plotting._core', 'pandas.plotting._matplotlib', 'pandas.plotting._matplotlib.boxplot', 'matplotlib', 'matplotlib.cbook', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.animation', 'matplotlib._animation_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'matplotlib._version', 'matplotlib.ft2font', 'kiwisolver']
2022-01-24 14:08:52,600 DEBUG CACHEDIR=/Users/wdiepeveen/.matplotlib
2022-01-24 14:08:52,604 DEBUG Using fontManager instance from /Users/wdiepeveen/.matplotlib/fontlist-v330.json
2022-01-24 14:08:54,349 DEBUG Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2022-01-24 14:08:54,354 DEBUG Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2022-01-24 14:08:56,118 DEBUG label 0:
    q1 = arg(0, name=q1)                     ['q1']
    q2 = arg(1, name=q2)                     ['q2']
    out = arg(2, name=out)                   ['out']
    $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$0.1']
    $0.2 = getattr(value=$0.1, attr=empty)   ['$0.1', '$0.2']
    $const0.3 = const(int, 4)                ['$const0.3']
    qtemp = call $0.2($const0.3, func=$0.2, args=[Var($const0.3, distance.py:44)], kws=(), vararg=None) ['$0.2', '$const0.3', 'qtemp']
    $0.5 = global(_divide: CPUDispatcher(<function divide at 0x7f94eaaf89d8>)) ['$0.5']
    $0.9 = call $0.5(q1, q2, qtemp, func=$0.5, args=[Var(q1, distance.py:44), Var(q2, distance.py:44), Var(qtemp, distance.py:44)], kws=(), vararg=None) ['$0.5', '$0.9', 'q1', 'q2', 'qtemp']
    $0.10 = global(_log: CPUDispatcher(<function log at 0x7f94eab04048>)) ['$0.10']
    $0.13 = call $0.10(qtemp, qtemp, func=$0.10, args=[Var(qtemp, distance.py:44), Var(qtemp, distance.py:44)], kws=(), vararg=None) ['$0.10', '$0.13', 'qtemp', 'qtemp']
    $0.14 = global(_absolute: CPUDispatcher(<function absolute at 0x7f94eaaf8e18>)) ['$0.14']
    $0.17 = call $0.14(qtemp, out, func=$0.14, args=[Var(qtemp, distance.py:44), Var(out, distance.py:44)], kws=(), vararg=None) ['$0.14', '$0.17', 'out', 'qtemp']
    $const0.19 = const(int, 0)               ['$const0.19']
    $0.22 = getitem(value=out, index=$const0.19, fn=<built-in function getitem>) ['$0.22', '$const0.19', 'out']
    $const0.23 = const(int, 2)               ['$const0.23']
    $0.24 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=$0.22, rhs=$const0.23, static_lhs=Undefined, static_rhs=Undefined) ['$0.22', '$0.24', '$const0.23']
    out[$const0.19] = $0.24                  ['$0.24', '$const0.19', 'out']
    $const0.25 = const(NoneType, None)       ['$const0.25']
    $0.26 = cast(value=$const0.25)           ['$0.26', '$const0.25']
    return $0.26                             ['$0.26']

2022-01-24 14:08:56,122 DEBUG ==== SSA block analysis pass on 0
2022-01-24 14:08:56,123 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb230908>
2022-01-24 14:08:56,123 DEBUG on stmt: q1 = arg(0, name=q1)
2022-01-24 14:08:56,124 DEBUG on stmt: q2 = arg(1, name=q2)
2022-01-24 14:08:56,124 DEBUG on stmt: out = arg(2, name=out)
2022-01-24 14:08:56,124 DEBUG on stmt: $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:08:56,124 DEBUG on stmt: $0.2 = getattr(value=$0.1, attr=empty)
2022-01-24 14:08:56,124 DEBUG on stmt: $const0.3 = const(int, 4)
2022-01-24 14:08:56,124 DEBUG on stmt: qtemp = call $0.2($const0.3, func=$0.2, args=[Var($const0.3, distance.py:44)], kws=(), vararg=None)
2022-01-24 14:08:56,124 DEBUG on stmt: $0.5 = global(_divide: CPUDispatcher(<function divide at 0x7f94eaaf89d8>))
2022-01-24 14:08:56,124 DEBUG on stmt: $0.9 = call $0.5(q1, q2, qtemp, func=$0.5, args=[Var(q1, distance.py:44), Var(q2, distance.py:44), Var(qtemp, distance.py:44)], kws=(), vararg=None)
2022-01-24 14:08:56,124 DEBUG on stmt: $0.10 = global(_log: CPUDispatcher(<function log at 0x7f94eab04048>))
2022-01-24 14:08:56,124 DEBUG on stmt: $0.13 = call $0.10(qtemp, qtemp, func=$0.10, args=[Var(qtemp, distance.py:44), Var(qtemp, distance.py:44)], kws=(), vararg=None)
2022-01-24 14:08:56,124 DEBUG on stmt: $0.14 = global(_absolute: CPUDispatcher(<function absolute at 0x7f94eaaf8e18>))
2022-01-24 14:08:56,124 DEBUG on stmt: $0.17 = call $0.14(qtemp, out, func=$0.14, args=[Var(qtemp, distance.py:44), Var(out, distance.py:44)], kws=(), vararg=None)
2022-01-24 14:08:56,124 DEBUG on stmt: $const0.19 = const(int, 0)
2022-01-24 14:08:56,124 DEBUG on stmt: $0.22 = static_getitem(value=out, index=0, index_var=$const0.19, fn=<built-in function getitem>)
2022-01-24 14:08:56,125 DEBUG on stmt: $const0.23 = const(int, 2)
2022-01-24 14:08:56,125 DEBUG on stmt: $0.24 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=$0.22, rhs=$const0.23, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:56,125 DEBUG on stmt: out[0] = $0.24
2022-01-24 14:08:56,125 DEBUG on stmt: $const0.25 = const(NoneType, None)
2022-01-24 14:08:56,125 DEBUG on stmt: $0.26 = cast(value=$const0.25)
2022-01-24 14:08:56,125 DEBUG on stmt: return $0.26
2022-01-24 14:08:56,126 DEBUG defs defaultdict(<class 'list'>,
            {'$0.1': [<numba.core.ir.Assign object at 0x7f94eb240780>],
             '$0.10': [<numba.core.ir.Assign object at 0x7f94eb240f60>],
             '$0.13': [<numba.core.ir.Assign object at 0x7f94eb2511d0>],
             '$0.14': [<numba.core.ir.Assign object at 0x7f94eb2512b0>],
             '$0.17': [<numba.core.ir.Assign object at 0x7f94eb2514e0>],
             '$0.2': [<numba.core.ir.Assign object at 0x7f94eb240860>],
             '$0.22': [<numba.core.ir.Assign object at 0x7f94eb251e10>],
             '$0.24': [<numba.core.ir.Assign object at 0x7f94eb251a20>],
             '$0.26': [<numba.core.ir.Assign object at 0x7f94eb251c50>],
             '$0.5': [<numba.core.ir.Assign object at 0x7f94eb240ba8>],
             '$0.9': [<numba.core.ir.Assign object at 0x7f94eb240e80>],
             '$const0.19': [<numba.core.ir.Assign object at 0x7f94eb251668>],
             '$const0.23': [<numba.core.ir.Assign object at 0x7f94eb251940>],
             '$const0.25': [<numba.core.ir.Assign object at 0x7f94eb251b70>],
             '$const0.3': [<numba.core.ir.Assign object at 0x7f94eb240940>],
             'out': [<numba.core.ir.Assign object at 0x7f94eb2406a0>],
             'q1': [<numba.core.ir.Assign object at 0x7f94eb240550>],
             'q2': [<numba.core.ir.Assign object at 0x7f94eb2405f8>],
             'qtemp': [<numba.core.ir.Assign object at 0x7f94eb240a20>]})
2022-01-24 14:08:56,126 DEBUG SSA violators set()
2022-01-24 14:08:56,139 DEBUG label 0:
    q1 = arg(0, name=q1)                     ['q1']
    q2 = arg(1, name=q2)                     ['q2']
    qout = arg(2, name=qout)                 ['qout']
    $const0.2 = const(int, 0)                ['$const0.2']
    $0.3 = getitem(value=q2, index=$const0.2, fn=<built-in function getitem>) ['$0.3', '$const0.2', 'q2']
    $const0.4 = const(int, 2)                ['$const0.4']
    $0.5 = $0.3 ** $const0.4                 ['$0.3', '$0.5', '$const0.4']
    $const0.7 = const(int, 1)                ['$const0.7']
    $0.8 = getitem(value=q2, index=$const0.7, fn=<built-in function getitem>) ['$0.8', '$const0.7', 'q2']
    $const0.9 = const(int, 2)                ['$const0.9']
    $0.10 = $0.8 ** $const0.9                ['$0.10', '$0.8', '$const0.9']
    $0.11 = $0.5 + $0.10                     ['$0.10', '$0.11', '$0.5']
    $const0.13 = const(int, 2)               ['$const0.13']
    $0.14 = getitem(value=q2, index=$const0.13, fn=<built-in function getitem>) ['$0.14', '$const0.13', 'q2']
    $const0.15 = const(int, 2)               ['$const0.15']
    $0.16 = $0.14 ** $const0.15              ['$0.14', '$0.16', '$const0.15']
    $0.17 = $0.11 + $0.16                    ['$0.11', '$0.16', '$0.17']
    $const0.19 = const(int, 3)               ['$const0.19']
    $0.20 = getitem(value=q2, index=$const0.19, fn=<built-in function getitem>) ['$0.20', '$const0.19', 'q2']
    $const0.21 = const(int, 2)               ['$const0.21']
    $0.22 = $0.20 ** $const0.21              ['$0.20', '$0.22', '$const0.21']
    q2norm = $0.17 + $0.22                   ['$0.17', '$0.22', 'q2norm']
    $const0.25 = const(int, 0)               ['$const0.25']
    $0.26 = getitem(value=q1, index=$const0.25, fn=<built-in function getitem>) ['$0.26', '$const0.25', 'q1']
    $0.27 = unary(fn=<built-in function pos>, value=$0.26) ['$0.26', '$0.27']
    $const0.29 = const(int, 0)               ['$const0.29']
    $0.30 = getitem(value=q2, index=$const0.29, fn=<built-in function getitem>) ['$0.30', '$const0.29', 'q2']
    $0.31 = $0.27 * $0.30                    ['$0.27', '$0.30', '$0.31']
    $const0.33 = const(int, 1)               ['$const0.33']
    $0.34 = getitem(value=q1, index=$const0.33, fn=<built-in function getitem>) ['$0.34', '$const0.33', 'q1']
    $const0.36 = const(int, 1)               ['$const0.36']
    $0.37 = getitem(value=q2, index=$const0.36, fn=<built-in function getitem>) ['$0.37', '$const0.36', 'q2']
    $0.38 = $0.34 * $0.37                    ['$0.34', '$0.37', '$0.38']
    $0.39 = $0.31 + $0.38                    ['$0.31', '$0.38', '$0.39']
    $const0.41 = const(int, 2)               ['$const0.41']
    $0.42 = getitem(value=q1, index=$const0.41, fn=<built-in function getitem>) ['$0.42', '$const0.41', 'q1']
    $const0.44 = const(int, 2)               ['$const0.44']
    $0.45 = getitem(value=q2, index=$const0.44, fn=<built-in function getitem>) ['$0.45', '$const0.44', 'q2']
    $0.46 = $0.42 * $0.45                    ['$0.42', '$0.45', '$0.46']
    $0.47 = $0.39 + $0.46                    ['$0.39', '$0.46', '$0.47']
    $const0.49 = const(int, 3)               ['$const0.49']
    $0.50 = getitem(value=q1, index=$const0.49, fn=<built-in function getitem>) ['$0.50', '$const0.49', 'q1']
    $const0.52 = const(int, 3)               ['$const0.52']
    $0.53 = getitem(value=q2, index=$const0.52, fn=<built-in function getitem>) ['$0.53', '$const0.52', 'q2']
    $0.54 = $0.50 * $0.53                    ['$0.50', '$0.53', '$0.54']
    $0.55 = $0.47 + $0.54                    ['$0.47', '$0.54', '$0.55']
    $0.57 = $0.55 / q2norm                   ['$0.55', '$0.57', 'q2norm']
    $const0.59 = const(int, 0)               ['$const0.59']
    qout[$const0.59] = $0.57                 ['$0.57', '$const0.59', 'qout']
    $const0.61 = const(int, 0)               ['$const0.61']
    $0.62 = getitem(value=q1, index=$const0.61, fn=<built-in function getitem>) ['$0.62', '$const0.61', 'q1']
    $0.63 = unary(fn=<built-in function neg>, value=$0.62) ['$0.62', '$0.63']
    $const0.65 = const(int, 1)               ['$const0.65']
    $0.66 = getitem(value=q2, index=$const0.65, fn=<built-in function getitem>) ['$0.66', '$const0.65', 'q2']
    $0.67 = $0.63 * $0.66                    ['$0.63', '$0.66', '$0.67']
    $const0.69 = const(int, 1)               ['$const0.69']
    $0.70 = getitem(value=q1, index=$const0.69, fn=<built-in function getitem>) ['$0.70', '$const0.69', 'q1']
    $const0.72 = const(int, 0)               ['$const0.72']
    $0.73 = getitem(value=q2, index=$const0.72, fn=<built-in function getitem>) ['$0.73', '$const0.72', 'q2']
    $0.74 = $0.70 * $0.73                    ['$0.70', '$0.73', '$0.74']
    $0.75 = $0.67 + $0.74                    ['$0.67', '$0.74', '$0.75']
    $const0.77 = const(int, 2)               ['$const0.77']
    $0.78 = getitem(value=q1, index=$const0.77, fn=<built-in function getitem>) ['$0.78', '$const0.77', 'q1']
    $const0.80 = const(int, 3)               ['$const0.80']
    $0.81 = getitem(value=q2, index=$const0.80, fn=<built-in function getitem>) ['$0.81', '$const0.80', 'q2']
    $0.82 = $0.78 * $0.81                    ['$0.78', '$0.81', '$0.82']
    $0.83 = $0.75 - $0.82                    ['$0.75', '$0.82', '$0.83']
    $const0.85 = const(int, 3)               ['$const0.85']
    $0.86 = getitem(value=q1, index=$const0.85, fn=<built-in function getitem>) ['$0.86', '$const0.85', 'q1']
    $const0.88 = const(int, 2)               ['$const0.88']
    $0.89 = getitem(value=q2, index=$const0.88, fn=<built-in function getitem>) ['$0.89', '$const0.88', 'q2']
    $0.90 = $0.86 * $0.89                    ['$0.86', '$0.89', '$0.90']
    $0.91 = $0.83 + $0.90                    ['$0.83', '$0.90', '$0.91']
    $0.93 = $0.91 / q2norm                   ['$0.91', '$0.93', 'q2norm']
    $const0.95 = const(int, 1)               ['$const0.95']
    qout[$const0.95] = $0.93                 ['$0.93', '$const0.95', 'qout']
    $const0.97 = const(int, 0)               ['$const0.97']
    $0.98 = getitem(value=q1, index=$const0.97, fn=<built-in function getitem>) ['$0.98', '$const0.97', 'q1']
    $0.99 = unary(fn=<built-in function neg>, value=$0.98) ['$0.98', '$0.99']
    $const0.101 = const(int, 2)              ['$const0.101']
    $0.102 = getitem(value=q2, index=$const0.101, fn=<built-in function getitem>) ['$0.102', '$const0.101', 'q2']
    $0.103 = $0.99 * $0.102                  ['$0.102', '$0.103', '$0.99']
    $const0.105 = const(int, 1)              ['$const0.105']
    $0.106 = getitem(value=q1, index=$const0.105, fn=<built-in function getitem>) ['$0.106', '$const0.105', 'q1']
    $const0.108 = const(int, 3)              ['$const0.108']
    $0.109 = getitem(value=q2, index=$const0.108, fn=<built-in function getitem>) ['$0.109', '$const0.108', 'q2']
    $0.110 = $0.106 * $0.109                 ['$0.106', '$0.109', '$0.110']
    $0.111 = $0.103 + $0.110                 ['$0.103', '$0.110', '$0.111']
    $const0.113 = const(int, 2)              ['$const0.113']
    $0.114 = getitem(value=q1, index=$const0.113, fn=<built-in function getitem>) ['$0.114', '$const0.113', 'q1']
    $const0.116 = const(int, 0)              ['$const0.116']
    $0.117 = getitem(value=q2, index=$const0.116, fn=<built-in function getitem>) ['$0.117', '$const0.116', 'q2']
    $0.118 = $0.114 * $0.117                 ['$0.114', '$0.117', '$0.118']
    $0.119 = $0.111 + $0.118                 ['$0.111', '$0.118', '$0.119']
    $const0.121 = const(int, 3)              ['$const0.121']
    $0.122 = getitem(value=q1, index=$const0.121, fn=<built-in function getitem>) ['$0.122', '$const0.121', 'q1']
    $const0.124 = const(int, 1)              ['$const0.124']
    $0.125 = getitem(value=q2, index=$const0.124, fn=<built-in function getitem>) ['$0.125', '$const0.124', 'q2']
    $0.126 = $0.122 * $0.125                 ['$0.122', '$0.125', '$0.126']
    $0.127 = $0.119 - $0.126                 ['$0.119', '$0.126', '$0.127']
    $0.129 = $0.127 / q2norm                 ['$0.127', '$0.129', 'q2norm']
    $const0.131 = const(int, 2)              ['$const0.131']
    qout[$const0.131] = $0.129               ['$0.129', '$const0.131', 'qout']
    $const0.133 = const(int, 0)              ['$const0.133']
    $0.134 = getitem(value=q1, index=$const0.133, fn=<built-in function getitem>) ['$0.134', '$const0.133', 'q1']
    $0.135 = unary(fn=<built-in function neg>, value=$0.134) ['$0.134', '$0.135']
    $const0.137 = const(int, 3)              ['$const0.137']
    $0.138 = getitem(value=q2, index=$const0.137, fn=<built-in function getitem>) ['$0.138', '$const0.137', 'q2']
    $0.139 = $0.135 * $0.138                 ['$0.135', '$0.138', '$0.139']
    $const0.141 = const(int, 1)              ['$const0.141']
    $0.142 = getitem(value=q1, index=$const0.141, fn=<built-in function getitem>) ['$0.142', '$const0.141', 'q1']
    $const0.144 = const(int, 2)              ['$const0.144']
    $0.145 = getitem(value=q2, index=$const0.144, fn=<built-in function getitem>) ['$0.145', '$const0.144', 'q2']
    $0.146 = $0.142 * $0.145                 ['$0.142', '$0.145', '$0.146']
    $0.147 = $0.139 - $0.146                 ['$0.139', '$0.146', '$0.147']
    $const0.149 = const(int, 2)              ['$const0.149']
    $0.150 = getitem(value=q1, index=$const0.149, fn=<built-in function getitem>) ['$0.150', '$const0.149', 'q1']
    $const0.152 = const(int, 1)              ['$const0.152']
    $0.153 = getitem(value=q2, index=$const0.152, fn=<built-in function getitem>) ['$0.153', '$const0.152', 'q2']
    $0.154 = $0.150 * $0.153                 ['$0.150', '$0.153', '$0.154']
    $0.155 = $0.147 + $0.154                 ['$0.147', '$0.154', '$0.155']
    $const0.157 = const(int, 3)              ['$const0.157']
    $0.158 = getitem(value=q1, index=$const0.157, fn=<built-in function getitem>) ['$0.158', '$const0.157', 'q1']
    $const0.160 = const(int, 0)              ['$const0.160']
    $0.161 = getitem(value=q2, index=$const0.160, fn=<built-in function getitem>) ['$0.161', '$const0.160', 'q2']
    $0.162 = $0.158 * $0.161                 ['$0.158', '$0.161', '$0.162']
    $0.163 = $0.155 + $0.162                 ['$0.155', '$0.162', '$0.163']
    $0.165 = $0.163 / q2norm                 ['$0.163', '$0.165', 'q2norm']
    $const0.167 = const(int, 3)              ['$const0.167']
    qout[$const0.167] = $0.165               ['$0.165', '$const0.167', 'qout']
    $const0.168 = const(NoneType, None)      ['$const0.168']
    $0.169 = cast(value=$const0.168)         ['$0.169', '$const0.168']
    return $0.169                            ['$0.169']

2022-01-24 14:08:56,148 DEBUG ==== SSA block analysis pass on 0
2022-01-24 14:08:56,149 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb2a4048>
2022-01-24 14:08:56,149 DEBUG on stmt: q1 = arg(0, name=q1)
2022-01-24 14:08:56,149 DEBUG on stmt: q2 = arg(1, name=q2)
2022-01-24 14:08:56,149 DEBUG on stmt: qout = arg(2, name=qout)
2022-01-24 14:08:56,149 DEBUG on stmt: $const0.2 = const(int, 0)
2022-01-24 14:08:56,149 DEBUG on stmt: $0.3 = static_getitem(value=q2, index=0, index_var=$const0.2, fn=<built-in function getitem>)
2022-01-24 14:08:56,149 DEBUG on stmt: $const0.4 = const(int, 2)
2022-01-24 14:08:56,149 DEBUG on stmt: $0.5 = $0.3 ** $const0.4
2022-01-24 14:08:56,149 DEBUG on stmt: $const0.7 = const(int, 1)
2022-01-24 14:08:56,149 DEBUG on stmt: $0.8 = static_getitem(value=q2, index=1, index_var=$const0.7, fn=<built-in function getitem>)
2022-01-24 14:08:56,149 DEBUG on stmt: $const0.9 = const(int, 2)
2022-01-24 14:08:56,149 DEBUG on stmt: $0.10 = $0.8 ** $const0.9
2022-01-24 14:08:56,149 DEBUG on stmt: $0.11 = $0.5 + $0.10
2022-01-24 14:08:56,149 DEBUG on stmt: $const0.13 = const(int, 2)
2022-01-24 14:08:56,149 DEBUG on stmt: $0.14 = static_getitem(value=q2, index=2, index_var=$const0.13, fn=<built-in function getitem>)
2022-01-24 14:08:56,149 DEBUG on stmt: $const0.15 = const(int, 2)
2022-01-24 14:08:56,149 DEBUG on stmt: $0.16 = $0.14 ** $const0.15
2022-01-24 14:08:56,149 DEBUG on stmt: $0.17 = $0.11 + $0.16
2022-01-24 14:08:56,149 DEBUG on stmt: $const0.19 = const(int, 3)
2022-01-24 14:08:56,150 DEBUG on stmt: $0.20 = static_getitem(value=q2, index=3, index_var=$const0.19, fn=<built-in function getitem>)
2022-01-24 14:08:56,150 DEBUG on stmt: $const0.21 = const(int, 2)
2022-01-24 14:08:56,150 DEBUG on stmt: $0.22 = $0.20 ** $const0.21
2022-01-24 14:08:56,150 DEBUG on stmt: q2norm = $0.17 + $0.22
2022-01-24 14:08:56,150 DEBUG on stmt: $const0.25 = const(int, 0)
2022-01-24 14:08:56,150 DEBUG on stmt: $0.26 = static_getitem(value=q1, index=0, index_var=$const0.25, fn=<built-in function getitem>)
2022-01-24 14:08:56,150 DEBUG on stmt: $0.27 = unary(fn=<built-in function pos>, value=$0.26)
2022-01-24 14:08:56,150 DEBUG on stmt: $const0.29 = const(int, 0)
2022-01-24 14:08:56,150 DEBUG on stmt: $0.30 = static_getitem(value=q2, index=0, index_var=$const0.29, fn=<built-in function getitem>)
2022-01-24 14:08:56,150 DEBUG on stmt: $0.31 = $0.27 * $0.30
2022-01-24 14:08:56,150 DEBUG on stmt: $const0.33 = const(int, 1)
2022-01-24 14:08:56,150 DEBUG on stmt: $0.34 = static_getitem(value=q1, index=1, index_var=$const0.33, fn=<built-in function getitem>)
2022-01-24 14:08:56,150 DEBUG on stmt: $const0.36 = const(int, 1)
2022-01-24 14:08:56,150 DEBUG on stmt: $0.37 = static_getitem(value=q2, index=1, index_var=$const0.36, fn=<built-in function getitem>)
2022-01-24 14:08:56,150 DEBUG on stmt: $0.38 = $0.34 * $0.37
2022-01-24 14:08:56,150 DEBUG on stmt: $0.39 = $0.31 + $0.38
2022-01-24 14:08:56,150 DEBUG on stmt: $const0.41 = const(int, 2)
2022-01-24 14:08:56,150 DEBUG on stmt: $0.42 = static_getitem(value=q1, index=2, index_var=$const0.41, fn=<built-in function getitem>)
2022-01-24 14:08:56,150 DEBUG on stmt: $const0.44 = const(int, 2)
2022-01-24 14:08:56,150 DEBUG on stmt: $0.45 = static_getitem(value=q2, index=2, index_var=$const0.44, fn=<built-in function getitem>)
2022-01-24 14:08:56,150 DEBUG on stmt: $0.46 = $0.42 * $0.45
2022-01-24 14:08:56,150 DEBUG on stmt: $0.47 = $0.39 + $0.46
2022-01-24 14:08:56,151 DEBUG on stmt: $const0.49 = const(int, 3)
2022-01-24 14:08:56,151 DEBUG on stmt: $0.50 = static_getitem(value=q1, index=3, index_var=$const0.49, fn=<built-in function getitem>)
2022-01-24 14:08:56,151 DEBUG on stmt: $const0.52 = const(int, 3)
2022-01-24 14:08:56,151 DEBUG on stmt: $0.53 = static_getitem(value=q2, index=3, index_var=$const0.52, fn=<built-in function getitem>)
2022-01-24 14:08:56,151 DEBUG on stmt: $0.54 = $0.50 * $0.53
2022-01-24 14:08:56,151 DEBUG on stmt: $0.55 = $0.47 + $0.54
2022-01-24 14:08:56,151 DEBUG on stmt: $0.57 = $0.55 / q2norm
2022-01-24 14:08:56,151 DEBUG on stmt: $const0.59 = const(int, 0)
2022-01-24 14:08:56,151 DEBUG on stmt: qout[0] = $0.57
2022-01-24 14:08:56,151 DEBUG on stmt: $const0.61 = const(int, 0)
2022-01-24 14:08:56,151 DEBUG on stmt: $0.62 = static_getitem(value=q1, index=0, index_var=$const0.61, fn=<built-in function getitem>)
2022-01-24 14:08:56,151 DEBUG on stmt: $0.63 = unary(fn=<built-in function neg>, value=$0.62)
2022-01-24 14:08:56,151 DEBUG on stmt: $const0.65 = const(int, 1)
2022-01-24 14:08:56,151 DEBUG on stmt: $0.66 = static_getitem(value=q2, index=1, index_var=$const0.65, fn=<built-in function getitem>)
2022-01-24 14:08:56,151 DEBUG on stmt: $0.67 = $0.63 * $0.66
2022-01-24 14:08:56,151 DEBUG on stmt: $const0.69 = const(int, 1)
2022-01-24 14:08:56,151 DEBUG on stmt: $0.70 = static_getitem(value=q1, index=1, index_var=$const0.69, fn=<built-in function getitem>)
2022-01-24 14:08:56,151 DEBUG on stmt: $const0.72 = const(int, 0)
2022-01-24 14:08:56,151 DEBUG on stmt: $0.73 = static_getitem(value=q2, index=0, index_var=$const0.72, fn=<built-in function getitem>)
2022-01-24 14:08:56,151 DEBUG on stmt: $0.74 = $0.70 * $0.73
2022-01-24 14:08:56,151 DEBUG on stmt: $0.75 = $0.67 + $0.74
2022-01-24 14:08:56,151 DEBUG on stmt: $const0.77 = const(int, 2)
2022-01-24 14:08:56,151 DEBUG on stmt: $0.78 = static_getitem(value=q1, index=2, index_var=$const0.77, fn=<built-in function getitem>)
2022-01-24 14:08:56,151 DEBUG on stmt: $const0.80 = const(int, 3)
2022-01-24 14:08:56,151 DEBUG on stmt: $0.81 = static_getitem(value=q2, index=3, index_var=$const0.80, fn=<built-in function getitem>)
2022-01-24 14:08:56,152 DEBUG on stmt: $0.82 = $0.78 * $0.81
2022-01-24 14:08:56,152 DEBUG on stmt: $0.83 = $0.75 - $0.82
2022-01-24 14:08:56,152 DEBUG on stmt: $const0.85 = const(int, 3)
2022-01-24 14:08:56,152 DEBUG on stmt: $0.86 = static_getitem(value=q1, index=3, index_var=$const0.85, fn=<built-in function getitem>)
2022-01-24 14:08:56,152 DEBUG on stmt: $const0.88 = const(int, 2)
2022-01-24 14:08:56,152 DEBUG on stmt: $0.89 = static_getitem(value=q2, index=2, index_var=$const0.88, fn=<built-in function getitem>)
2022-01-24 14:08:56,152 DEBUG on stmt: $0.90 = $0.86 * $0.89
2022-01-24 14:08:56,152 DEBUG on stmt: $0.91 = $0.83 + $0.90
2022-01-24 14:08:56,152 DEBUG on stmt: $0.93 = $0.91 / q2norm
2022-01-24 14:08:56,152 DEBUG on stmt: $const0.95 = const(int, 1)
2022-01-24 14:08:56,152 DEBUG on stmt: qout[1] = $0.93
2022-01-24 14:08:56,152 DEBUG on stmt: $const0.97 = const(int, 0)
2022-01-24 14:08:56,152 DEBUG on stmt: $0.98 = static_getitem(value=q1, index=0, index_var=$const0.97, fn=<built-in function getitem>)
2022-01-24 14:08:56,152 DEBUG on stmt: $0.99 = unary(fn=<built-in function neg>, value=$0.98)
2022-01-24 14:08:56,152 DEBUG on stmt: $const0.101 = const(int, 2)
2022-01-24 14:08:56,152 DEBUG on stmt: $0.102 = static_getitem(value=q2, index=2, index_var=$const0.101, fn=<built-in function getitem>)
2022-01-24 14:08:56,152 DEBUG on stmt: $0.103 = $0.99 * $0.102
2022-01-24 14:08:56,152 DEBUG on stmt: $const0.105 = const(int, 1)
2022-01-24 14:08:56,152 DEBUG on stmt: $0.106 = static_getitem(value=q1, index=1, index_var=$const0.105, fn=<built-in function getitem>)
2022-01-24 14:08:56,152 DEBUG on stmt: $const0.108 = const(int, 3)
2022-01-24 14:08:56,152 DEBUG on stmt: $0.109 = static_getitem(value=q2, index=3, index_var=$const0.108, fn=<built-in function getitem>)
2022-01-24 14:08:56,152 DEBUG on stmt: $0.110 = $0.106 * $0.109
2022-01-24 14:08:56,152 DEBUG on stmt: $0.111 = $0.103 + $0.110
2022-01-24 14:08:56,152 DEBUG on stmt: $const0.113 = const(int, 2)
2022-01-24 14:08:56,153 DEBUG on stmt: $0.114 = static_getitem(value=q1, index=2, index_var=$const0.113, fn=<built-in function getitem>)
2022-01-24 14:08:56,153 DEBUG on stmt: $const0.116 = const(int, 0)
2022-01-24 14:08:56,153 DEBUG on stmt: $0.117 = static_getitem(value=q2, index=0, index_var=$const0.116, fn=<built-in function getitem>)
2022-01-24 14:08:56,153 DEBUG on stmt: $0.118 = $0.114 * $0.117
2022-01-24 14:08:56,153 DEBUG on stmt: $0.119 = $0.111 + $0.118
2022-01-24 14:08:56,153 DEBUG on stmt: $const0.121 = const(int, 3)
2022-01-24 14:08:56,153 DEBUG on stmt: $0.122 = static_getitem(value=q1, index=3, index_var=$const0.121, fn=<built-in function getitem>)
2022-01-24 14:08:56,153 DEBUG on stmt: $const0.124 = const(int, 1)
2022-01-24 14:08:56,153 DEBUG on stmt: $0.125 = static_getitem(value=q2, index=1, index_var=$const0.124, fn=<built-in function getitem>)
2022-01-24 14:08:56,153 DEBUG on stmt: $0.126 = $0.122 * $0.125
2022-01-24 14:08:56,153 DEBUG on stmt: $0.127 = $0.119 - $0.126
2022-01-24 14:08:56,153 DEBUG on stmt: $0.129 = $0.127 / q2norm
2022-01-24 14:08:56,153 DEBUG on stmt: $const0.131 = const(int, 2)
2022-01-24 14:08:56,153 DEBUG on stmt: qout[2] = $0.129
2022-01-24 14:08:56,153 DEBUG on stmt: $const0.133 = const(int, 0)
2022-01-24 14:08:56,153 DEBUG on stmt: $0.134 = static_getitem(value=q1, index=0, index_var=$const0.133, fn=<built-in function getitem>)
2022-01-24 14:08:56,153 DEBUG on stmt: $0.135 = unary(fn=<built-in function neg>, value=$0.134)
2022-01-24 14:08:56,153 DEBUG on stmt: $const0.137 = const(int, 3)
2022-01-24 14:08:56,153 DEBUG on stmt: $0.138 = static_getitem(value=q2, index=3, index_var=$const0.137, fn=<built-in function getitem>)
2022-01-24 14:08:56,153 DEBUG on stmt: $0.139 = $0.135 * $0.138
2022-01-24 14:08:56,153 DEBUG on stmt: $const0.141 = const(int, 1)
2022-01-24 14:08:56,153 DEBUG on stmt: $0.142 = static_getitem(value=q1, index=1, index_var=$const0.141, fn=<built-in function getitem>)
2022-01-24 14:08:56,154 DEBUG on stmt: $const0.144 = const(int, 2)
2022-01-24 14:08:56,154 DEBUG on stmt: $0.145 = static_getitem(value=q2, index=2, index_var=$const0.144, fn=<built-in function getitem>)
2022-01-24 14:08:56,154 DEBUG on stmt: $0.146 = $0.142 * $0.145
2022-01-24 14:08:56,154 DEBUG on stmt: $0.147 = $0.139 - $0.146
2022-01-24 14:08:56,154 DEBUG on stmt: $const0.149 = const(int, 2)
2022-01-24 14:08:56,154 DEBUG on stmt: $0.150 = static_getitem(value=q1, index=2, index_var=$const0.149, fn=<built-in function getitem>)
2022-01-24 14:08:56,154 DEBUG on stmt: $const0.152 = const(int, 1)
2022-01-24 14:08:56,154 DEBUG on stmt: $0.153 = static_getitem(value=q2, index=1, index_var=$const0.152, fn=<built-in function getitem>)
2022-01-24 14:08:56,154 DEBUG on stmt: $0.154 = $0.150 * $0.153
2022-01-24 14:08:56,154 DEBUG on stmt: $0.155 = $0.147 + $0.154
2022-01-24 14:08:56,154 DEBUG on stmt: $const0.157 = const(int, 3)
2022-01-24 14:08:56,154 DEBUG on stmt: $0.158 = static_getitem(value=q1, index=3, index_var=$const0.157, fn=<built-in function getitem>)
2022-01-24 14:08:56,154 DEBUG on stmt: $const0.160 = const(int, 0)
2022-01-24 14:08:56,154 DEBUG on stmt: $0.161 = static_getitem(value=q2, index=0, index_var=$const0.160, fn=<built-in function getitem>)
2022-01-24 14:08:56,154 DEBUG on stmt: $0.162 = $0.158 * $0.161
2022-01-24 14:08:56,154 DEBUG on stmt: $0.163 = $0.155 + $0.162
2022-01-24 14:08:56,154 DEBUG on stmt: $0.165 = $0.163 / q2norm
2022-01-24 14:08:56,154 DEBUG on stmt: $const0.167 = const(int, 3)
2022-01-24 14:08:56,154 DEBUG on stmt: qout[3] = $0.165
2022-01-24 14:08:56,154 DEBUG on stmt: $const0.168 = const(NoneType, None)
2022-01-24 14:08:56,154 DEBUG on stmt: $0.169 = cast(value=$const0.168)
2022-01-24 14:08:56,154 DEBUG on stmt: return $0.169
2022-01-24 14:08:56,155 DEBUG defs defaultdict(<class 'list'>,
            {'$0.10': [<numba.core.ir.Assign object at 0x7f94eb2c0748>],
             '$0.102': [<numba.core.ir.Assign object at 0x7f94eb2ae2e8>],
             '$0.103': [<numba.core.ir.Assign object at 0x7f94eb2d5630>],
             '$0.106': [<numba.core.ir.Assign object at 0x7f94eb2ae358>],
             '$0.109': [<numba.core.ir.Assign object at 0x7f94eb2ae3c8>],
             '$0.11': [<numba.core.ir.Assign object at 0x7f94eb2c0828>],
             '$0.110': [<numba.core.ir.Assign object at 0x7f94eb2d5be0>],
             '$0.111': [<numba.core.ir.Assign object at 0x7f94eb2d5cc0>],
             '$0.114': [<numba.core.ir.Assign object at 0x7f94eb2ae438>],
             '$0.117': [<numba.core.ir.Assign object at 0x7f94eb2ae4a8>],
             '$0.118': [<numba.core.ir.Assign object at 0x7f94eb2d82b0>],
             '$0.119': [<numba.core.ir.Assign object at 0x7f94eb2d8390>],
             '$0.122': [<numba.core.ir.Assign object at 0x7f94eb2ae518>],
             '$0.125': [<numba.core.ir.Assign object at 0x7f94eb2ae588>],
             '$0.126': [<numba.core.ir.Assign object at 0x7f94eb2d8940>],
             '$0.127': [<numba.core.ir.Assign object at 0x7f94eb2d8a20>],
             '$0.129': [<numba.core.ir.Assign object at 0x7f94eb2d8ba8>],
             '$0.134': [<numba.core.ir.Assign object at 0x7f94eb2ae5f8>],
             '$0.135': [<numba.core.ir.Assign object at 0x7f94eb2dc128>],
             '$0.138': [<numba.core.ir.Assign object at 0x7f94eb2ae668>],
             '$0.139': [<numba.core.ir.Assign object at 0x7f94eb2dc470>],
             '$0.14': [<numba.core.ir.Assign object at 0x7f94eb2dc518>],
             '$0.142': [<numba.core.ir.Assign object at 0x7f94eb2ae6d8>],
             '$0.145': [<numba.core.ir.Assign object at 0x7f94eb2ae748>],
             '$0.146': [<numba.core.ir.Assign object at 0x7f94eb2dca20>],
             '$0.147': [<numba.core.ir.Assign object at 0x7f94eb2dcb00>],
             '$0.150': [<numba.core.ir.Assign object at 0x7f94eb2ae7b8>],
             '$0.153': [<numba.core.ir.Assign object at 0x7f94eb2ae828>],
             '$0.154': [<numba.core.ir.Assign object at 0x7f94eb2e00f0>],
             '$0.155': [<numba.core.ir.Assign object at 0x7f94eb2e01d0>],
             '$0.158': [<numba.core.ir.Assign object at 0x7f94eb2ae898>],
             '$0.16': [<numba.core.ir.Assign object at 0x7f94eb2c0c50>],
             '$0.161': [<numba.core.ir.Assign object at 0x7f94eb2ae908>],
             '$0.162': [<numba.core.ir.Assign object at 0x7f94eb2e0780>],
             '$0.163': [<numba.core.ir.Assign object at 0x7f94eb2e0860>],
             '$0.165': [<numba.core.ir.Assign object at 0x7f94eb2e09e8>],
             '$0.169': [<numba.core.ir.Assign object at 0x7f94eb2e0da0>],
             '$0.17': [<numba.core.ir.Assign object at 0x7f94eb2c0d30>],
             '$0.20': [<numba.core.ir.Assign object at 0x7f94eb2dcba8>],
             '$0.22': [<numba.core.ir.Assign object at 0x7f94eb2c3198>],
             '$0.26': [<numba.core.ir.Assign object at 0x7f94eb2b6c88>],
             '$0.27': [<numba.core.ir.Assign object at 0x7f94eb2c3668>],
             '$0.3': [<numba.core.ir.Assign object at 0x7f94eb2d8ac8>],
             '$0.30': [<numba.core.ir.Assign object at 0x7f94eb2b6f60>],
             '$0.31': [<numba.core.ir.Assign object at 0x7f94eb2c39b0>],
             '$0.34': [<numba.core.ir.Assign object at 0x7f94eb2e0278>],
             '$0.37': [<numba.core.ir.Assign object at 0x7f94eb2e0908>],
             '$0.38': [<numba.core.ir.Assign object at 0x7f94eb2c3f60>],
             '$0.39': [<numba.core.ir.Assign object at 0x7f94eb2c9080>],
             '$0.42': [<numba.core.ir.Assign object at 0x7f94eb2e0e10>],
             '$0.45': [<numba.core.ir.Assign object at 0x7f94eb2e0e80>],
             '$0.46': [<numba.core.ir.Assign object at 0x7f94eb2c9630>],
             '$0.47': [<numba.core.ir.Assign object at 0x7f94eb2c9710>],
             '$0.5': [<numba.core.ir.Assign object at 0x7f94eb2c0320>],
             '$0.50': [<numba.core.ir.Assign object at 0x7f94eb2e0ef0>],
             '$0.53': [<numba.core.ir.Assign object at 0x7f94eb2e0f60>],
             '$0.54': [<numba.core.ir.Assign object at 0x7f94eb2c9cc0>],
             '$0.55': [<numba.core.ir.Assign object at 0x7f94eb2c9da0>],
             '$0.57': [<numba.core.ir.Assign object at 0x7f94eb2c9f28>],
             '$0.62': [<numba.core.ir.Assign object at 0x7f94eb2e0fd0>],
             '$0.63': [<numba.core.ir.Assign object at 0x7f94eb2cd4a8>],
             '$0.66': [<numba.core.ir.Assign object at 0x7f94eb2d1860>],
             '$0.67': [<numba.core.ir.Assign object at 0x7f94eb2cd7f0>],
             '$0.70': [<numba.core.ir.Assign object at 0x7f94eb2d1e10>],
             '$0.73': [<numba.core.ir.Assign object at 0x7f94eb2ae048>],
             '$0.74': [<numba.core.ir.Assign object at 0x7f94eb2cdda0>],
             '$0.75': [<numba.core.ir.Assign object at 0x7f94eb2cde80>],
             '$0.78': [<numba.core.ir.Assign object at 0x7f94eb2ae0b8>],
             '$0.8': [<numba.core.ir.Assign object at 0x7f94eb2d8e48>],
             '$0.81': [<numba.core.ir.Assign object at 0x7f94eb2ae128>],
             '$0.82': [<numba.core.ir.Assign object at 0x7f94eb2d1470>],
             '$0.83': [<numba.core.ir.Assign object at 0x7f94eb2d1550>],
             '$0.86': [<numba.core.ir.Assign object at 0x7f94eb2ae198>],
             '$0.89': [<numba.core.ir.Assign object at 0x7f94eb2ae208>],
             '$0.90': [<numba.core.ir.Assign object at 0x7f94eb2d1b00>],
             '$0.91': [<numba.core.ir.Assign object at 0x7f94eb2d1be0>],
             '$0.93': [<numba.core.ir.Assign object at 0x7f94eb2d1d68>],
             '$0.98': [<numba.core.ir.Assign object at 0x7f94eb2ae278>],
             '$0.99': [<numba.core.ir.Assign object at 0x7f94eb2d52e8>],
             '$const0.101': [<numba.core.ir.Assign object at 0x7f94eb2d5470>],
             '$const0.105': [<numba.core.ir.Assign object at 0x7f94eb2d57b8>],
             '$const0.108': [<numba.core.ir.Assign object at 0x7f94eb2d5a20>],
             '$const0.113': [<numba.core.ir.Assign object at 0x7f94eb2d5e48>],
             '$const0.116': [<numba.core.ir.Assign object at 0x7f94eb2d80f0>],
             '$const0.121': [<numba.core.ir.Assign object at 0x7f94eb2d8518>],
             '$const0.124': [<numba.core.ir.Assign object at 0x7f94eb2d8780>],
             '$const0.13': [<numba.core.ir.Assign object at 0x7f94eb2c09b0>],
             '$const0.131': [<numba.core.ir.Assign object at 0x7f94eb2d8d30>],
             '$const0.133': [<numba.core.ir.Assign object at 0x7f94eb2d8f28>],
             '$const0.137': [<numba.core.ir.Assign object at 0x7f94eb2dc2b0>],
             '$const0.141': [<numba.core.ir.Assign object at 0x7f94eb2dc5f8>],
             '$const0.144': [<numba.core.ir.Assign object at 0x7f94eb2dc860>],
             '$const0.149': [<numba.core.ir.Assign object at 0x7f94eb2dcc88>],
             '$const0.15': [<numba.core.ir.Assign object at 0x7f94eb2c0b70>],
             '$const0.152': [<numba.core.ir.Assign object at 0x7f94eb2dcef0>],
             '$const0.157': [<numba.core.ir.Assign object at 0x7f94eb2e0358>],
             '$const0.160': [<numba.core.ir.Assign object at 0x7f94eb2e05c0>],
             '$const0.167': [<numba.core.ir.Assign object at 0x7f94eb2e0b70>],
             '$const0.168': [<numba.core.ir.Assign object at 0x7f94eb2e0cc0>],
             '$const0.19': [<numba.core.ir.Assign object at 0x7f94eb2c0eb8>],
             '$const0.2': [<numba.core.ir.Assign object at 0x7f94eb2c0080>],
             '$const0.21': [<numba.core.ir.Assign object at 0x7f94eb2c30b8>],
             '$const0.25': [<numba.core.ir.Assign object at 0x7f94eb2c34a8>],
             '$const0.29': [<numba.core.ir.Assign object at 0x7f94eb2c37f0>],
             '$const0.33': [<numba.core.ir.Assign object at 0x7f94eb2c3b38>],
             '$const0.36': [<numba.core.ir.Assign object at 0x7f94eb2c3da0>],
             '$const0.4': [<numba.core.ir.Assign object at 0x7f94eb2c0240>],
             '$const0.41': [<numba.core.ir.Assign object at 0x7f94eb2c9208>],
             '$const0.44': [<numba.core.ir.Assign object at 0x7f94eb2c9470>],
             '$const0.49': [<numba.core.ir.Assign object at 0x7f94eb2c9898>],
             '$const0.52': [<numba.core.ir.Assign object at 0x7f94eb2c9b00>],
             '$const0.59': [<numba.core.ir.Assign object at 0x7f94eb2cd0f0>],
             '$const0.61': [<numba.core.ir.Assign object at 0x7f94eb2cd2e8>],
             '$const0.65': [<numba.core.ir.Assign object at 0x7f94eb2cd630>],
             '$const0.69': [<numba.core.ir.Assign object at 0x7f94eb2cd978>],
             '$const0.7': [<numba.core.ir.Assign object at 0x7f94eb2c04a8>],
             '$const0.72': [<numba.core.ir.Assign object at 0x7f94eb2cdbe0>],
             '$const0.77': [<numba.core.ir.Assign object at 0x7f94eb2d1048>],
             '$const0.80': [<numba.core.ir.Assign object at 0x7f94eb2d12b0>],
             '$const0.85': [<numba.core.ir.Assign object at 0x7f94eb2d16d8>],
             '$const0.88': [<numba.core.ir.Assign object at 0x7f94eb2d1940>],
             '$const0.9': [<numba.core.ir.Assign object at 0x7f94eb2c0668>],
             '$const0.95': [<numba.core.ir.Assign object at 0x7f94eb2d1ef0>],
             '$const0.97': [<numba.core.ir.Assign object at 0x7f94eb2d5128>],
             'q1': [<numba.core.ir.Assign object at 0x7f94eb2b6d68>],
             'q2': [<numba.core.ir.Assign object at 0x7f94eb2b6e10>],
             'q2norm': [<numba.core.ir.Assign object at 0x7f94eb2c3278>],
             'qout': [<numba.core.ir.Assign object at 0x7f94eb2b6eb8>]})
2022-01-24 14:08:56,156 DEBUG SSA violators set()
2022-01-24 14:08:56,267 DEBUG label 0:
    a = arg(0, name=a)                       ['a']
    b = arg(1, name=b)                       ['b']
    $0.1 = freevar(tp: float64)              ['$0.1']
    $const0.2 = const(int, 1)                ['$const0.2']
    r = call $0.1($const0.2, func=$0.1, args=[Var($const0.2, numbers.py:217)], kws=(), vararg=None) ['$0.1', '$const0.2', 'r']
    $0.4 = freevar(tp: float64)              ['$0.4']
    a.1 = call $0.4(a, func=$0.4, args=[Var(a, numbers.py:217)], kws=(), vararg=None) ['$0.4', 'a', 'a.1']
    $const0.8 = const(int, 0)                ['$const0.8']
    $0.9 = b < $const0.8                     ['$0.9', '$const0.8', 'b']
    bool24 = global(bool: <class 'bool'>)    ['bool24']
    $24pred = call bool24($0.9, func=bool24, args=(Var($0.9, numbers.py:219),), kws=(), vararg=None) ['$0.9', '$24pred', 'bool24']
    branch $24pred, 26, 98                   ['$24pred']
label 26:
    invert = const(bool, True)               ['invert']
    exp = unary(fn=<built-in function neg>, value=b) ['b', 'exp']
    $const26.5 = const(int, 0)               ['$const26.5']
    $26.6 = exp < $const26.5                 ['$26.6', '$const26.5', 'exp']
    bool42 = global(bool: <class 'bool'>)    ['bool42']
    $42pred = call bool42($26.6, func=bool42, args=(Var($26.6, numbers.py:222),), kws=(), vararg=None) ['$26.6', '$42pred', 'bool42']
    branch $42pred, 44, 48                   ['$42pred']
label 44:
    $44.1 = global(OverflowError: <class 'OverflowError'>) ['$44.1']
    raise $44.1                              ['$44.1']
label 48:
    $48.1 = freevar(is_integer: False)       ['$48.1']
    bool50 = global(bool: <class 'bool'>)    ['bool50']
    $50pred = call bool50($48.1, func=bool50, args=(Var($48.1, numbers.py:224),), kws=(), vararg=None) ['$48.1', '$50pred', 'bool50']
    branch $50pred, 52, 106                  ['$50pred']
label 52:
    $const52.2 = const(int, 0)               ['$const52.2']
    $52.3 = a.1 == $const52.2                ['$52.3', '$const52.2', 'a.1']
    bool58 = global(bool: <class 'bool'>)    ['bool58']
    $58pred = call bool58($52.3, func=bool58, args=(Var($52.3, numbers.py:225),), kws=(), vararg=None) ['$52.3', '$58pred', 'bool58']
    branch $58pred, 60, 76                   ['$58pred']
label 60:
    $60.1 = freevar(zerodiv_return: False)   ['$60.1']
    bool62 = global(bool: <class 'bool'>)    ['bool62']
    $62pred = call bool62($60.1, func=bool62, args=(Var($60.1, numbers.py:226),), kws=(), vararg=None) ['$60.1', '$62pred', 'bool62']
    branch $62pred, 64, 68                   ['$62pred']
label 64:
    $64.1 = freevar(zerodiv_return: False)   ['$64.1']
    $64.2 = cast(value=$64.1)                ['$64.1', '$64.2']
    return $64.2                             ['$64.2']
label 68:
    $68.1 = global(ZeroDivisionError: <class 'ZeroDivisionError'>) ['$68.1']
    $const68.2 = const(str, 0 cannot be raised to a negative power) ['$const68.2']
    $68.3 = call $68.1($const68.2, func=$68.1, args=[Var($const68.2, numbers.py:229)], kws=(), vararg=None) ['$68.1', '$68.3', '$const68.2']
    raise $68.3                              ['$68.3']
label 76:
    $const76.2 = const(int, 1)               ['$const76.2']
    $76.3 = a.1 != $const76.2                ['$76.3', '$const76.2', 'a.1']
    bool82 = global(bool: <class 'bool'>)    ['bool82']
    $82pred = call bool82($76.3, func=bool82, args=(Var($76.3, numbers.py:230),), kws=(), vararg=None) ['$76.3', '$82pred', 'bool82']
    branch $82pred, 84, 106                  ['$82pred']
label 84:
    $const84.2 = const(int, -1)              ['$const84.2']
    $84.3 = a.1 != $const84.2                ['$84.3', '$const84.2', 'a.1']
    bool90 = global(bool: <class 'bool'>)    ['bool90']
    $90pred = call bool90($84.3, func=bool90, args=(Var($84.3, numbers.py:230),), kws=(), vararg=None) ['$84.3', '$90pred', 'bool90']
    branch $90pred, 92, 106                  ['$90pred']
label 92:
    $const92.1 = const(int, 0)               ['$const92.1']
    $92.2 = cast(value=$const92.1)           ['$92.2', '$const92.1']
    return $92.2                             ['$92.2']
label 98:
    invert = const(bool, False)              ['invert']
    exp = b                                  ['b', 'exp']
    jump 106                                 []
label 106:
    $const106.2 = const(int, 65536)          ['$const106.2']
    $106.3 = exp > $const106.2               ['$106.3', '$const106.2', 'exp']
    bool112 = global(bool: <class 'bool'>)   ['bool112']
    $112pred = call bool112($106.3, func=bool112, args=(Var($106.3, numbers.py:235),), kws=(), vararg=None) ['$106.3', '$112pred', 'bool112']
    branch $112pred, 114, 130                ['$112pred']
label 114:
    $114.1 = global(math: <module 'math' from '/Users/wdiepeveen/anaconda3/envs/aspire_env/lib/python3.6/lib-dynload/math.cpython-36m-darwin.so'>) ['$114.1']
    $114.2 = getattr(value=$114.1, attr=pow) ['$114.1', '$114.2']
    $114.4 = global(float: <class 'float'>)  ['$114.4']
    $114.6 = call $114.4(b, func=$114.4, args=[Var(b, numbers.py:217)], kws=(), vararg=None) ['$114.4', '$114.6', 'b']
    $114.7 = call $114.2(a.1, $114.6, func=$114.2, args=[Var(a.1, numbers.py:218), Var($114.6, numbers.py:237)], kws=(), vararg=None) ['$114.2', '$114.6', '$114.7', 'a.1']
    $114.8 = cast(value=$114.7)              ['$114.7', '$114.8']
    return $114.8                            ['$114.8']
label 130:
    jump 132                                 []
label 132:
    $const132.2 = const(int, 0)              ['$const132.2']
    $132.3 = exp != $const132.2              ['$132.3', '$const132.2', 'exp']
    bool138 = global(bool: <class 'bool'>)   ['bool138']
    $138pred = call bool138($132.3, func=bool138, args=(Var($132.3, numbers.py:238),), kws=(), vararg=None) ['$132.3', '$138pred', 'bool138']
    branch $138pred, 140, 174                ['$138pred']
label 140:
    $const140.2 = const(int, 1)              ['$const140.2']
    $140.3 = exp & $const140.2               ['$140.3', '$const140.2', 'exp']
    bool146 = global(bool: <class 'bool'>)   ['bool146']
    $146pred = call bool146($140.3, func=bool146, args=(Var($140.3, numbers.py:239),), kws=(), vararg=None) ['$140.3', '$146pred', 'bool146']
    branch $146pred, 148, 156                ['$146pred']
label 148:
    $148.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$148.3', 'a.1', 'r']
    r = $148.3                               ['$148.3', 'r']
    jump 156                                 []
label 156:
    $const156.2 = const(int, 1)              ['$const156.2']
    $156.3 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.2, static_lhs=Undefined, static_rhs=Undefined) ['$156.3', '$const156.2', 'exp']
    exp = $156.3                             ['$156.3', 'exp']
    $156.6 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$156.6', 'a.1', 'a.1']
    a.1 = $156.6                             ['$156.6', 'a.1']
    jump 132                                 []
label 174:
    jump 176                                 []
label 176:
    bool178 = global(bool: <class 'bool'>)   ['bool178']
    $178pred = call bool178(invert, func=bool178, args=(Var(invert, numbers.py:220),), kws=(), vararg=None) ['$178pred', 'bool178', 'invert']
    branch $178pred, 180, 188                ['$178pred']
label 180:
    $const180.1 = const(float, 1.0)          ['$const180.1']
    $180.3 = $const180.1 / r                 ['$180.3', '$const180.1', 'r']
    $180.4 = cast(value=$180.3)              ['$180.3', '$180.4']
    return $180.4                            ['$180.4']
label 188:
    $188.2 = cast(value=r)                   ['$188.2', 'r']
    return $188.2                            ['$188.2']

2022-01-24 14:08:56,284 DEBUG ==== SSA block analysis pass on 0
2022-01-24 14:08:56,284 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb37be10>
2022-01-24 14:08:56,284 DEBUG on stmt: a = arg(0, name=a)
2022-01-24 14:08:56,284 DEBUG on stmt: b = arg(1, name=b)
2022-01-24 14:08:56,284 DEBUG on stmt: $0.1 = freevar(tp: float64)
2022-01-24 14:08:56,284 DEBUG on stmt: $const0.2 = const(int, 1)
2022-01-24 14:08:56,284 DEBUG on stmt: r = call $0.1($const0.2, func=$0.1, args=[Var($const0.2, numbers.py:217)], kws=(), vararg=None)
2022-01-24 14:08:56,284 DEBUG on stmt: $0.4 = freevar(tp: float64)
2022-01-24 14:08:56,284 DEBUG on stmt: a.1 = call $0.4(a, func=$0.4, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
2022-01-24 14:08:56,284 DEBUG on stmt: $const0.8 = const(int, 0)
2022-01-24 14:08:56,284 DEBUG on stmt: $0.9 = b < $const0.8
2022-01-24 14:08:56,284 DEBUG on stmt: bool24 = global(bool: <class 'bool'>)
2022-01-24 14:08:56,284 DEBUG on stmt: $24pred = call bool24($0.9, func=bool24, args=(Var($0.9, numbers.py:219),), kws=(), vararg=None)
2022-01-24 14:08:56,284 DEBUG on stmt: branch $24pred, 26, 98
2022-01-24 14:08:56,285 DEBUG ==== SSA block analysis pass on 26
2022-01-24 14:08:56,285 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb37be10>
2022-01-24 14:08:56,285 DEBUG on stmt: invert = const(bool, True)
2022-01-24 14:08:56,285 DEBUG on stmt: exp = unary(fn=<built-in function neg>, value=b)
2022-01-24 14:08:56,285 DEBUG on stmt: $const26.5 = const(int, 0)
2022-01-24 14:08:56,285 DEBUG on stmt: $26.6 = exp < $const26.5
2022-01-24 14:08:56,285 DEBUG on stmt: bool42 = global(bool: <class 'bool'>)
2022-01-24 14:08:56,285 DEBUG on stmt: $42pred = call bool42($26.6, func=bool42, args=(Var($26.6, numbers.py:222),), kws=(), vararg=None)
2022-01-24 14:08:56,285 DEBUG on stmt: branch $42pred, 44, 48
2022-01-24 14:08:56,285 DEBUG ==== SSA block analysis pass on 44
2022-01-24 14:08:56,285 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb37be10>
2022-01-24 14:08:56,285 DEBUG on stmt: $44.1 = global(OverflowError: <class 'OverflowError'>)
2022-01-24 14:08:56,285 DEBUG on stmt: <static> raise <class 'OverflowError'>
2022-01-24 14:08:56,286 DEBUG ==== SSA block analysis pass on 48
2022-01-24 14:08:56,286 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb37be10>
2022-01-24 14:08:56,286 DEBUG on stmt: $48.1 = freevar(is_integer: False)
2022-01-24 14:08:56,286 DEBUG on stmt: bool50 = global(bool: <class 'bool'>)
2022-01-24 14:08:56,286 DEBUG on stmt: $50pred = call bool50($48.1, func=bool50, args=(Var($48.1, numbers.py:224),), kws=(), vararg=None)
2022-01-24 14:08:56,286 DEBUG on stmt: jump 106
2022-01-24 14:08:56,287 DEBUG ==== SSA block analysis pass on 98
2022-01-24 14:08:56,287 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb37be10>
2022-01-24 14:08:56,287 DEBUG on stmt: invert = const(bool, False)
2022-01-24 14:08:56,287 DEBUG on stmt: exp = b
2022-01-24 14:08:56,287 DEBUG on stmt: jump 106
2022-01-24 14:08:56,287 DEBUG ==== SSA block analysis pass on 106
2022-01-24 14:08:56,287 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb37be10>
2022-01-24 14:08:56,287 DEBUG on stmt: $const106.2 = const(int, 65536)
2022-01-24 14:08:56,287 DEBUG on stmt: $106.3 = exp > $const106.2
2022-01-24 14:08:56,287 DEBUG on stmt: bool112 = global(bool: <class 'bool'>)
2022-01-24 14:08:56,287 DEBUG on stmt: $112pred = call bool112($106.3, func=bool112, args=(Var($106.3, numbers.py:235),), kws=(), vararg=None)
2022-01-24 14:08:56,287 DEBUG on stmt: branch $112pred, 114, 130
2022-01-24 14:08:56,287 DEBUG ==== SSA block analysis pass on 114
2022-01-24 14:08:56,287 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb37be10>
2022-01-24 14:08:56,287 DEBUG on stmt: $114.1 = global(math: <module 'math' from '/Users/wdiepeveen/anaconda3/envs/aspire_env/lib/python3.6/lib-dynload/math.cpython-36m-darwin.so'>)
2022-01-24 14:08:56,288 DEBUG on stmt: $114.2 = getattr(value=$114.1, attr=pow)
2022-01-24 14:08:56,288 DEBUG on stmt: $114.4 = global(float: <class 'float'>)
2022-01-24 14:08:56,288 DEBUG on stmt: $114.6 = call $114.4(b, func=$114.4, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
2022-01-24 14:08:56,288 DEBUG on stmt: $114.7 = call $114.2(a.1, $114.6, func=$114.2, args=[Var(a.1, numbers.py:218), Var($114.6, numbers.py:237)], kws=(), vararg=None)
2022-01-24 14:08:56,288 DEBUG on stmt: $114.8 = cast(value=$114.7)
2022-01-24 14:08:56,288 DEBUG on stmt: return $114.8
2022-01-24 14:08:56,288 DEBUG ==== SSA block analysis pass on 130
2022-01-24 14:08:56,288 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb37be10>
2022-01-24 14:08:56,288 DEBUG on stmt: jump 132
2022-01-24 14:08:56,288 DEBUG ==== SSA block analysis pass on 132
2022-01-24 14:08:56,288 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb37be10>
2022-01-24 14:08:56,288 DEBUG on stmt: $const132.2 = const(int, 0)
2022-01-24 14:08:56,288 DEBUG on stmt: $132.3 = exp != $const132.2
2022-01-24 14:08:56,288 DEBUG on stmt: bool138 = global(bool: <class 'bool'>)
2022-01-24 14:08:56,288 DEBUG on stmt: $138pred = call bool138($132.3, func=bool138, args=(Var($132.3, numbers.py:238),), kws=(), vararg=None)
2022-01-24 14:08:56,289 DEBUG on stmt: branch $138pred, 140, 174
2022-01-24 14:08:56,289 DEBUG ==== SSA block analysis pass on 140
2022-01-24 14:08:56,289 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb37be10>
2022-01-24 14:08:56,289 DEBUG on stmt: $const140.2 = const(int, 1)
2022-01-24 14:08:56,289 DEBUG on stmt: $140.3 = exp & $const140.2
2022-01-24 14:08:56,289 DEBUG on stmt: bool146 = global(bool: <class 'bool'>)
2022-01-24 14:08:56,289 DEBUG on stmt: $146pred = call bool146($140.3, func=bool146, args=(Var($140.3, numbers.py:239),), kws=(), vararg=None)
2022-01-24 14:08:56,289 DEBUG on stmt: branch $146pred, 148, 156
2022-01-24 14:08:56,289 DEBUG ==== SSA block analysis pass on 148
2022-01-24 14:08:56,289 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb37be10>
2022-01-24 14:08:56,289 DEBUG on stmt: $148.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:56,289 DEBUG on stmt: r = $148.3
2022-01-24 14:08:56,289 DEBUG on stmt: jump 156
2022-01-24 14:08:56,289 DEBUG ==== SSA block analysis pass on 156
2022-01-24 14:08:56,289 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb37be10>
2022-01-24 14:08:56,289 DEBUG on stmt: $const156.2 = const(int, 1)
2022-01-24 14:08:56,289 DEBUG on stmt: $156.3 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.2, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:56,289 DEBUG on stmt: exp = $156.3
2022-01-24 14:08:56,289 DEBUG on stmt: $156.6 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:56,289 DEBUG on stmt: a.1 = $156.6
2022-01-24 14:08:56,289 DEBUG on stmt: jump 132
2022-01-24 14:08:56,289 DEBUG ==== SSA block analysis pass on 174
2022-01-24 14:08:56,289 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb37be10>
2022-01-24 14:08:56,290 DEBUG on stmt: jump 176
2022-01-24 14:08:56,290 DEBUG ==== SSA block analysis pass on 176
2022-01-24 14:08:56,290 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb37be10>
2022-01-24 14:08:56,290 DEBUG on stmt: bool178 = global(bool: <class 'bool'>)
2022-01-24 14:08:56,290 DEBUG on stmt: $178pred = call bool178(invert, func=bool178, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
2022-01-24 14:08:56,290 DEBUG on stmt: branch $178pred, 180, 188
2022-01-24 14:08:56,290 DEBUG ==== SSA block analysis pass on 180
2022-01-24 14:08:56,290 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb37be10>
2022-01-24 14:08:56,290 DEBUG on stmt: $const180.1 = const(float, 1.0)
2022-01-24 14:08:56,290 DEBUG on stmt: $180.3 = $const180.1 / r
2022-01-24 14:08:56,290 DEBUG on stmt: $180.4 = cast(value=$180.3)
2022-01-24 14:08:56,290 DEBUG on stmt: return $180.4
2022-01-24 14:08:56,290 DEBUG ==== SSA block analysis pass on 188
2022-01-24 14:08:56,290 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb37be10>
2022-01-24 14:08:56,291 DEBUG on stmt: $188.2 = cast(value=r)
2022-01-24 14:08:56,291 DEBUG on stmt: return $188.2
2022-01-24 14:08:56,291 DEBUG defs defaultdict(<class 'list'>,
            {'$0.1': [<numba.core.ir.Assign object at 0x7f94eb35cc88>],
             '$0.4': [<numba.core.ir.Assign object at 0x7f94eb35cfd0>],
             '$0.9': [<numba.core.ir.Assign object at 0x7f94eb3644e0>],
             '$106.3': [<numba.core.ir.Assign object at 0x7f94eb371390>],
             '$112pred': [<numba.core.ir.Assign object at 0x7f94eb371550>],
             '$114.1': [<numba.core.ir.Assign object at 0x7f94eb3716a0>],
             '$114.2': [<numba.core.ir.Assign object at 0x7f94eb371780>],
             '$114.4': [<numba.core.ir.Assign object at 0x7f94eb371908>],
             '$114.6': [<numba.core.ir.Assign object at 0x7f94eb371a90>],
             '$114.7': [<numba.core.ir.Assign object at 0x7f94eb371b70>],
             '$114.8': [<numba.core.ir.Assign object at 0x7f94eb371c50>],
             '$132.3': [<numba.core.ir.Assign object at 0x7f94eb371fd0>],
             '$138pred': [<numba.core.ir.Assign object at 0x7f94eb3771d0>],
             '$140.3': [<numba.core.ir.Assign object at 0x7f94eb3774a8>],
             '$146pred': [<numba.core.ir.Assign object at 0x7f94eb377668>],
             '$148.3': [<numba.core.ir.Assign object at 0x7f94eb377908>],
             '$156.3': [<numba.core.ir.Assign object at 0x7f94eb377c18>],
             '$156.6': [<numba.core.ir.Assign object at 0x7f94eb377eb8>],
             '$178pred': [<numba.core.ir.Assign object at 0x7f94eb37b278>],
             '$180.3': [<numba.core.ir.Assign object at 0x7f94eb37b550>],
             '$180.4': [<numba.core.ir.Assign object at 0x7f94eb37b630>],
             '$188.2': [<numba.core.ir.Assign object at 0x7f94eb37b828>],
             '$24pred': [<numba.core.ir.Assign object at 0x7f94eb3646d8>],
             '$26.6': [<numba.core.ir.Assign object at 0x7f94eb364cc0>],
             '$42pred': [<numba.core.ir.Assign object at 0x7f94eb364eb8>],
             '$44.1': [<numba.core.ir.Assign object at 0x7f94eb364f60>],
             '$48.1': [<numba.core.ir.Assign object at 0x7f94eb36a160>],
             '$50pred': [<numba.core.ir.Assign object at 0x7f94eb36a358>],
             '$const0.2': [<numba.core.ir.Assign object at 0x7f94eb35cd68>],
             '$const0.8': [<numba.core.ir.Assign object at 0x7f94eb364400>],
             '$const106.2': [<numba.core.ir.Assign object at 0x7f94eb3712b0>],
             '$const132.2': [<numba.core.ir.Assign object at 0x7f94eb371ef0>],
             '$const140.2': [<numba.core.ir.Assign object at 0x7f94eb3773c8>],
             '$const156.2': [<numba.core.ir.Assign object at 0x7f94eb377b38>],
             '$const180.1': [<numba.core.ir.Assign object at 0x7f94eb37b3c8>],
             '$const26.5': [<numba.core.ir.Assign object at 0x7f94eb364be0>],
             'a': [<numba.core.ir.Assign object at 0x7f94eb35cb00>],
             'a.1': [<numba.core.ir.Assign object at 0x7f94eb364198>,
                     <numba.core.ir.Assign object at 0x7f94eb377f28>],
             'b': [<numba.core.ir.Assign object at 0x7f94eb35cba8>],
             'bool112': [<numba.core.ir.Assign object at 0x7f94eb3714a8>],
             'bool138': [<numba.core.ir.Assign object at 0x7f94eb377128>],
             'bool146': [<numba.core.ir.Assign object at 0x7f94eb3775c0>],
             'bool178': [<numba.core.ir.Assign object at 0x7f94eb37b1d0>],
             'bool24': [<numba.core.ir.Assign object at 0x7f94eb3645f8>],
             'bool42': [<numba.core.ir.Assign object at 0x7f94eb364dd8>],
             'bool50': [<numba.core.ir.Assign object at 0x7f94eb36a278>],
             'exp': [<numba.core.ir.Assign object at 0x7f94eb3649b0>,
                     <numba.core.ir.Assign object at 0x7f94eb371128>,
                     <numba.core.ir.Assign object at 0x7f94eb377c88>],
             'invert': [<numba.core.ir.Assign object at 0x7f94eb364780>,
                        <numba.core.ir.Assign object at 0x7f94eb36df60>],
             'r': [<numba.core.ir.Assign object at 0x7f94eb35ce48>,
                   <numba.core.ir.Assign object at 0x7f94eb377978>]})
2022-01-24 14:08:56,291 DEBUG SSA violators {'r', 'invert', 'exp', 'a.1'}
2022-01-24 14:08:56,291 DEBUG Fix SSA violator on var r
2022-01-24 14:08:56,291 DEBUG ==== SSA block rewrite pass on 0
2022-01-24 14:08:56,291 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb37be10>
2022-01-24 14:08:56,292 DEBUG on stmt: a = arg(0, name=a)
2022-01-24 14:08:56,292 DEBUG on stmt: b = arg(1, name=b)
2022-01-24 14:08:56,292 DEBUG on stmt: $0.1 = freevar(tp: float64)
2022-01-24 14:08:56,292 DEBUG on stmt: $const0.2 = const(int, 1)
2022-01-24 14:08:56,292 DEBUG on stmt: r = call $0.1($const0.2, func=$0.1, args=[Var($const0.2, numbers.py:217)], kws=(), vararg=None)
2022-01-24 14:08:56,292 DEBUG first assign: r
2022-01-24 14:08:56,293 DEBUG replaced with: r = call $0.1($const0.2, func=$0.1, args=[Var($const0.2, numbers.py:217)], kws=(), vararg=None)
2022-01-24 14:08:56,293 DEBUG on stmt: $0.4 = freevar(tp: float64)
2022-01-24 14:08:56,293 DEBUG on stmt: a.1 = call $0.4(a, func=$0.4, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
2022-01-24 14:08:56,293 DEBUG on stmt: $const0.8 = const(int, 0)
2022-01-24 14:08:56,293 DEBUG on stmt: $0.9 = b < $const0.8
2022-01-24 14:08:56,293 DEBUG on stmt: bool24 = global(bool: <class 'bool'>)
2022-01-24 14:08:56,293 DEBUG on stmt: $24pred = call bool24($0.9, func=bool24, args=(Var($0.9, numbers.py:219),), kws=(), vararg=None)
2022-01-24 14:08:56,293 DEBUG on stmt: branch $24pred, 26, 98
2022-01-24 14:08:56,293 DEBUG ==== SSA block rewrite pass on 26
2022-01-24 14:08:56,293 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb37be10>
2022-01-24 14:08:56,293 DEBUG on stmt: invert = const(bool, True)
2022-01-24 14:08:56,293 DEBUG on stmt: exp = unary(fn=<built-in function neg>, value=b)
2022-01-24 14:08:56,293 DEBUG on stmt: $const26.5 = const(int, 0)
2022-01-24 14:08:56,293 DEBUG on stmt: $26.6 = exp < $const26.5
2022-01-24 14:08:56,293 DEBUG on stmt: bool42 = global(bool: <class 'bool'>)
2022-01-24 14:08:56,293 DEBUG on stmt: $42pred = call bool42($26.6, func=bool42, args=(Var($26.6, numbers.py:222),), kws=(), vararg=None)
2022-01-24 14:08:56,293 DEBUG on stmt: branch $42pred, 44, 48
2022-01-24 14:08:56,293 DEBUG ==== SSA block rewrite pass on 44
2022-01-24 14:08:56,293 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb37be10>
2022-01-24 14:08:56,293 DEBUG on stmt: $44.1 = global(OverflowError: <class 'OverflowError'>)
2022-01-24 14:08:56,293 DEBUG on stmt: <static> raise <class 'OverflowError'>
2022-01-24 14:08:56,293 DEBUG ==== SSA block rewrite pass on 48
2022-01-24 14:08:56,293 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb37be10>
2022-01-24 14:08:56,293 DEBUG on stmt: $48.1 = freevar(is_integer: False)
2022-01-24 14:08:56,293 DEBUG on stmt: bool50 = global(bool: <class 'bool'>)
2022-01-24 14:08:56,293 DEBUG on stmt: $50pred = call bool50($48.1, func=bool50, args=(Var($48.1, numbers.py:224),), kws=(), vararg=None)
2022-01-24 14:08:56,294 DEBUG on stmt: jump 106
2022-01-24 14:08:56,294 DEBUG ==== SSA block rewrite pass on 98
2022-01-24 14:08:56,294 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb37be10>
2022-01-24 14:08:56,294 DEBUG on stmt: invert = const(bool, False)
2022-01-24 14:08:56,294 DEBUG on stmt: exp = b
2022-01-24 14:08:56,294 DEBUG on stmt: jump 106
2022-01-24 14:08:56,294 DEBUG ==== SSA block rewrite pass on 106
2022-01-24 14:08:56,294 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb37be10>
2022-01-24 14:08:56,294 DEBUG on stmt: $const106.2 = const(int, 65536)
2022-01-24 14:08:56,294 DEBUG on stmt: $106.3 = exp > $const106.2
2022-01-24 14:08:56,294 DEBUG on stmt: bool112 = global(bool: <class 'bool'>)
2022-01-24 14:08:56,294 DEBUG on stmt: $112pred = call bool112($106.3, func=bool112, args=(Var($106.3, numbers.py:235),), kws=(), vararg=None)
2022-01-24 14:08:56,294 DEBUG on stmt: branch $112pred, 114, 130
2022-01-24 14:08:56,294 DEBUG ==== SSA block rewrite pass on 114
2022-01-24 14:08:56,294 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb37be10>
2022-01-24 14:08:56,294 DEBUG on stmt: $114.1 = global(math: <module 'math' from '/Users/wdiepeveen/anaconda3/envs/aspire_env/lib/python3.6/lib-dynload/math.cpython-36m-darwin.so'>)
2022-01-24 14:08:56,295 DEBUG on stmt: $114.2 = getattr(value=$114.1, attr=pow)
2022-01-24 14:08:56,295 DEBUG on stmt: $114.4 = global(float: <class 'float'>)
2022-01-24 14:08:56,295 DEBUG on stmt: $114.6 = call $114.4(b, func=$114.4, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
2022-01-24 14:08:56,295 DEBUG on stmt: $114.7 = call $114.2(a.1, $114.6, func=$114.2, args=[Var(a.1, numbers.py:218), Var($114.6, numbers.py:237)], kws=(), vararg=None)
2022-01-24 14:08:56,295 DEBUG on stmt: $114.8 = cast(value=$114.7)
2022-01-24 14:08:56,295 DEBUG on stmt: return $114.8
2022-01-24 14:08:56,295 DEBUG ==== SSA block rewrite pass on 130
2022-01-24 14:08:56,295 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb37be10>
2022-01-24 14:08:56,295 DEBUG on stmt: jump 132
2022-01-24 14:08:56,295 DEBUG ==== SSA block rewrite pass on 132
2022-01-24 14:08:56,295 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb37be10>
2022-01-24 14:08:56,295 DEBUG on stmt: $const132.2 = const(int, 0)
2022-01-24 14:08:56,295 DEBUG on stmt: $132.3 = exp != $const132.2
2022-01-24 14:08:56,295 DEBUG on stmt: bool138 = global(bool: <class 'bool'>)
2022-01-24 14:08:56,295 DEBUG on stmt: $138pred = call bool138($132.3, func=bool138, args=(Var($132.3, numbers.py:238),), kws=(), vararg=None)
2022-01-24 14:08:56,295 DEBUG on stmt: branch $138pred, 140, 174
2022-01-24 14:08:56,296 DEBUG ==== SSA block rewrite pass on 140
2022-01-24 14:08:56,296 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb37be10>
2022-01-24 14:08:56,296 DEBUG on stmt: $const140.2 = const(int, 1)
2022-01-24 14:08:56,296 DEBUG on stmt: $140.3 = exp & $const140.2
2022-01-24 14:08:56,296 DEBUG on stmt: bool146 = global(bool: <class 'bool'>)
2022-01-24 14:08:56,296 DEBUG on stmt: $146pred = call bool146($140.3, func=bool146, args=(Var($140.3, numbers.py:239),), kws=(), vararg=None)
2022-01-24 14:08:56,296 DEBUG on stmt: branch $146pred, 148, 156
2022-01-24 14:08:56,296 DEBUG ==== SSA block rewrite pass on 148
2022-01-24 14:08:56,296 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb37be10>
2022-01-24 14:08:56,296 DEBUG on stmt: $148.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:56,296 DEBUG on stmt: r = $148.3
2022-01-24 14:08:56,296 DEBUG replaced with: r.1 = $148.3
2022-01-24 14:08:56,296 DEBUG on stmt: jump 156
2022-01-24 14:08:56,296 DEBUG ==== SSA block rewrite pass on 156
2022-01-24 14:08:56,296 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb37be10>
2022-01-24 14:08:56,296 DEBUG on stmt: $const156.2 = const(int, 1)
2022-01-24 14:08:56,296 DEBUG on stmt: $156.3 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.2, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:56,296 DEBUG on stmt: exp = $156.3
2022-01-24 14:08:56,296 DEBUG on stmt: $156.6 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:56,296 DEBUG on stmt: a.1 = $156.6
2022-01-24 14:08:56,296 DEBUG on stmt: jump 132
2022-01-24 14:08:56,296 DEBUG ==== SSA block rewrite pass on 174
2022-01-24 14:08:56,296 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb37be10>
2022-01-24 14:08:56,297 DEBUG on stmt: jump 176
2022-01-24 14:08:56,297 DEBUG ==== SSA block rewrite pass on 176
2022-01-24 14:08:56,297 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb37be10>
2022-01-24 14:08:56,297 DEBUG on stmt: bool178 = global(bool: <class 'bool'>)
2022-01-24 14:08:56,297 DEBUG on stmt: $178pred = call bool178(invert, func=bool178, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
2022-01-24 14:08:56,297 DEBUG on stmt: branch $178pred, 180, 188
2022-01-24 14:08:56,297 DEBUG ==== SSA block rewrite pass on 180
2022-01-24 14:08:56,297 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb37be10>
2022-01-24 14:08:56,297 DEBUG on stmt: $const180.1 = const(float, 1.0)
2022-01-24 14:08:56,297 DEBUG on stmt: $180.3 = $const180.1 / r
2022-01-24 14:08:56,297 DEBUG on stmt: $180.4 = cast(value=$180.3)
2022-01-24 14:08:56,297 DEBUG on stmt: return $180.4
2022-01-24 14:08:56,297 DEBUG ==== SSA block rewrite pass on 188
2022-01-24 14:08:56,297 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb37be10>
2022-01-24 14:08:56,297 DEBUG on stmt: $188.2 = cast(value=r)
2022-01-24 14:08:56,298 DEBUG on stmt: return $188.2
2022-01-24 14:08:56,298 DEBUG Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f94eb37bcc0>],
             148: [<numba.core.ir.Assign object at 0x7f94eb37ba58>]})
2022-01-24 14:08:56,298 DEBUG ==== SSA block rewrite pass on 0
2022-01-24 14:08:56,298 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb37b2e8>
2022-01-24 14:08:56,299 DEBUG on stmt: a = arg(0, name=a)
2022-01-24 14:08:56,299 DEBUG on stmt: b = arg(1, name=b)
2022-01-24 14:08:56,299 DEBUG on stmt: $0.1 = freevar(tp: float64)
2022-01-24 14:08:56,300 DEBUG on stmt: $const0.2 = const(int, 1)
2022-01-24 14:08:56,300 DEBUG on stmt: r = call $0.1($const0.2, func=$0.1, args=[Var($const0.2, numbers.py:217)], kws=(), vararg=None)
2022-01-24 14:08:56,300 DEBUG on stmt: $0.4 = freevar(tp: float64)
2022-01-24 14:08:56,300 DEBUG on stmt: a.1 = call $0.4(a, func=$0.4, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
2022-01-24 14:08:56,300 DEBUG on stmt: $const0.8 = const(int, 0)
2022-01-24 14:08:56,300 DEBUG on stmt: $0.9 = b < $const0.8
2022-01-24 14:08:56,300 DEBUG on stmt: bool24 = global(bool: <class 'bool'>)
2022-01-24 14:08:56,300 DEBUG on stmt: $24pred = call bool24($0.9, func=bool24, args=(Var($0.9, numbers.py:219),), kws=(), vararg=None)
2022-01-24 14:08:56,300 DEBUG on stmt: branch $24pred, 26, 98
2022-01-24 14:08:56,300 DEBUG ==== SSA block rewrite pass on 26
2022-01-24 14:08:56,300 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb37b2e8>
2022-01-24 14:08:56,300 DEBUG on stmt: invert = const(bool, True)
2022-01-24 14:08:56,300 DEBUG on stmt: exp = unary(fn=<built-in function neg>, value=b)
2022-01-24 14:08:56,300 DEBUG on stmt: $const26.5 = const(int, 0)
2022-01-24 14:08:56,301 DEBUG on stmt: $26.6 = exp < $const26.5
2022-01-24 14:08:56,301 DEBUG on stmt: bool42 = global(bool: <class 'bool'>)
2022-01-24 14:08:56,301 DEBUG on stmt: $42pred = call bool42($26.6, func=bool42, args=(Var($26.6, numbers.py:222),), kws=(), vararg=None)
2022-01-24 14:08:56,301 DEBUG on stmt: branch $42pred, 44, 48
2022-01-24 14:08:56,301 DEBUG ==== SSA block rewrite pass on 44
2022-01-24 14:08:56,301 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb37b2e8>
2022-01-24 14:08:56,301 DEBUG on stmt: $44.1 = global(OverflowError: <class 'OverflowError'>)
2022-01-24 14:08:56,301 DEBUG on stmt: <static> raise <class 'OverflowError'>
2022-01-24 14:08:56,301 DEBUG ==== SSA block rewrite pass on 48
2022-01-24 14:08:56,301 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb37b2e8>
2022-01-24 14:08:56,301 DEBUG on stmt: $48.1 = freevar(is_integer: False)
2022-01-24 14:08:56,301 DEBUG on stmt: bool50 = global(bool: <class 'bool'>)
2022-01-24 14:08:56,301 DEBUG on stmt: $50pred = call bool50($48.1, func=bool50, args=(Var($48.1, numbers.py:224),), kws=(), vararg=None)
2022-01-24 14:08:56,301 DEBUG on stmt: jump 106
2022-01-24 14:08:56,301 DEBUG ==== SSA block rewrite pass on 98
2022-01-24 14:08:56,301 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb37b2e8>
2022-01-24 14:08:56,301 DEBUG on stmt: invert = const(bool, False)
2022-01-24 14:08:56,301 DEBUG on stmt: exp = b
2022-01-24 14:08:56,301 DEBUG on stmt: jump 106
2022-01-24 14:08:56,301 DEBUG ==== SSA block rewrite pass on 106
2022-01-24 14:08:56,301 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb37b2e8>
2022-01-24 14:08:56,301 DEBUG on stmt: $const106.2 = const(int, 65536)
2022-01-24 14:08:56,301 DEBUG on stmt: $106.3 = exp > $const106.2
2022-01-24 14:08:56,301 DEBUG on stmt: bool112 = global(bool: <class 'bool'>)
2022-01-24 14:08:56,301 DEBUG on stmt: $112pred = call bool112($106.3, func=bool112, args=(Var($106.3, numbers.py:235),), kws=(), vararg=None)
2022-01-24 14:08:56,302 DEBUG on stmt: branch $112pred, 114, 130
2022-01-24 14:08:56,302 DEBUG ==== SSA block rewrite pass on 114
2022-01-24 14:08:56,302 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb37b2e8>
2022-01-24 14:08:56,302 DEBUG on stmt: $114.1 = global(math: <module 'math' from '/Users/wdiepeveen/anaconda3/envs/aspire_env/lib/python3.6/lib-dynload/math.cpython-36m-darwin.so'>)
2022-01-24 14:08:56,302 DEBUG on stmt: $114.2 = getattr(value=$114.1, attr=pow)
2022-01-24 14:08:56,302 DEBUG on stmt: $114.4 = global(float: <class 'float'>)
2022-01-24 14:08:56,302 DEBUG on stmt: $114.6 = call $114.4(b, func=$114.4, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
2022-01-24 14:08:56,302 DEBUG on stmt: $114.7 = call $114.2(a.1, $114.6, func=$114.2, args=[Var(a.1, numbers.py:218), Var($114.6, numbers.py:237)], kws=(), vararg=None)
2022-01-24 14:08:56,303 DEBUG on stmt: $114.8 = cast(value=$114.7)
2022-01-24 14:08:56,303 DEBUG on stmt: return $114.8
2022-01-24 14:08:56,303 DEBUG ==== SSA block rewrite pass on 130
2022-01-24 14:08:56,303 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb37b2e8>
2022-01-24 14:08:56,303 DEBUG on stmt: jump 132
2022-01-24 14:08:56,303 DEBUG ==== SSA block rewrite pass on 132
2022-01-24 14:08:56,303 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb37b2e8>
2022-01-24 14:08:56,303 DEBUG on stmt: $const132.2 = const(int, 0)
2022-01-24 14:08:56,303 DEBUG on stmt: $132.3 = exp != $const132.2
2022-01-24 14:08:56,303 DEBUG on stmt: bool138 = global(bool: <class 'bool'>)
2022-01-24 14:08:56,303 DEBUG on stmt: $138pred = call bool138($132.3, func=bool138, args=(Var($132.3, numbers.py:238),), kws=(), vararg=None)
2022-01-24 14:08:56,303 DEBUG on stmt: branch $138pred, 140, 174
2022-01-24 14:08:56,303 DEBUG ==== SSA block rewrite pass on 140
2022-01-24 14:08:56,303 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb37b2e8>
2022-01-24 14:08:56,303 DEBUG on stmt: $const140.2 = const(int, 1)
2022-01-24 14:08:56,303 DEBUG on stmt: $140.3 = exp & $const140.2
2022-01-24 14:08:56,303 DEBUG on stmt: bool146 = global(bool: <class 'bool'>)
2022-01-24 14:08:56,303 DEBUG on stmt: $146pred = call bool146($140.3, func=bool146, args=(Var($140.3, numbers.py:239),), kws=(), vararg=None)
2022-01-24 14:08:56,303 DEBUG on stmt: branch $146pred, 148, 156
2022-01-24 14:08:56,303 DEBUG ==== SSA block rewrite pass on 148
2022-01-24 14:08:56,304 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb37b2e8>
2022-01-24 14:08:56,304 DEBUG on stmt: $148.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:56,304 DEBUG find_def var='r' stmt=$148.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:56,304 DEBUG find_def_from_top label 148
2022-01-24 14:08:56,304 DEBUG idom 140 from label 148
2022-01-24 14:08:56,304 DEBUG find_def_from_bottom label 140
2022-01-24 14:08:56,304 DEBUG find_def_from_top label 140
2022-01-24 14:08:56,304 DEBUG idom 132 from label 140
2022-01-24 14:08:56,304 DEBUG find_def_from_bottom label 132
2022-01-24 14:08:56,304 DEBUG find_def_from_top label 132
2022-01-24 14:08:56,304 DEBUG insert phi node r.2 = phi(incoming_values=[], incoming_blocks=[]) at 132
2022-01-24 14:08:56,304 DEBUG find_def_from_bottom label 130
2022-01-24 14:08:56,304 DEBUG find_def_from_top label 130
2022-01-24 14:08:56,304 DEBUG idom 106 from label 130
2022-01-24 14:08:56,304 DEBUG find_def_from_bottom label 106
2022-01-24 14:08:56,304 DEBUG find_def_from_top label 106
2022-01-24 14:08:56,304 DEBUG idom 0 from label 106
2022-01-24 14:08:56,304 DEBUG find_def_from_bottom label 0
2022-01-24 14:08:56,304 DEBUG incoming_def r = call $0.1($const0.2, func=$0.1, args=[Var($const0.2, numbers.py:217)], kws=(), vararg=None)
2022-01-24 14:08:56,305 DEBUG find_def_from_bottom label 156
2022-01-24 14:08:56,305 DEBUG find_def_from_top label 156
2022-01-24 14:08:56,305 DEBUG insert phi node r.3 = phi(incoming_values=[], incoming_blocks=[]) at 156
2022-01-24 14:08:56,305 DEBUG find_def_from_bottom label 148
2022-01-24 14:08:56,305 DEBUG incoming_def r.1 = $148.3
2022-01-24 14:08:56,305 DEBUG find_def_from_bottom label 140
2022-01-24 14:08:56,305 DEBUG find_def_from_top label 140
2022-01-24 14:08:56,305 DEBUG idom 132 from label 140
2022-01-24 14:08:56,305 DEBUG find_def_from_bottom label 132
2022-01-24 14:08:56,305 DEBUG incoming_def r.2 = phi(incoming_values=[Var(r, numbers.py:217)], incoming_blocks=[130])
2022-01-24 14:08:56,305 DEBUG incoming_def r.3 = phi(incoming_values=[Var(r.1, numbers.py:240), Var(r.2, numbers.py:240)], incoming_blocks=[148, 140])
2022-01-24 14:08:56,305 DEBUG replaced with: $148.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:56,305 DEBUG on stmt: r.1 = $148.3
2022-01-24 14:08:56,305 DEBUG on stmt: jump 156
2022-01-24 14:08:56,305 DEBUG ==== SSA block rewrite pass on 156
2022-01-24 14:08:56,305 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb37b2e8>
2022-01-24 14:08:56,305 DEBUG on stmt: $const156.2 = const(int, 1)
2022-01-24 14:08:56,305 DEBUG on stmt: $156.3 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.2, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:56,305 DEBUG on stmt: exp = $156.3
2022-01-24 14:08:56,305 DEBUG on stmt: $156.6 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:56,305 DEBUG on stmt: a.1 = $156.6
2022-01-24 14:08:56,306 DEBUG on stmt: jump 132
2022-01-24 14:08:56,306 DEBUG ==== SSA block rewrite pass on 174
2022-01-24 14:08:56,306 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb37b2e8>
2022-01-24 14:08:56,306 DEBUG on stmt: jump 176
2022-01-24 14:08:56,306 DEBUG ==== SSA block rewrite pass on 176
2022-01-24 14:08:56,306 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb37b2e8>
2022-01-24 14:08:56,306 DEBUG on stmt: bool178 = global(bool: <class 'bool'>)
2022-01-24 14:08:56,306 DEBUG on stmt: $178pred = call bool178(invert, func=bool178, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
2022-01-24 14:08:56,306 DEBUG on stmt: branch $178pred, 180, 188
2022-01-24 14:08:56,306 DEBUG ==== SSA block rewrite pass on 180
2022-01-24 14:08:56,306 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb37b2e8>
2022-01-24 14:08:56,306 DEBUG on stmt: $const180.1 = const(float, 1.0)
2022-01-24 14:08:56,306 DEBUG on stmt: $180.3 = $const180.1 / r
2022-01-24 14:08:56,306 DEBUG find_def var='r' stmt=$180.3 = $const180.1 / r
2022-01-24 14:08:56,306 DEBUG find_def_from_top label 180
2022-01-24 14:08:56,306 DEBUG idom 176 from label 180
2022-01-24 14:08:56,306 DEBUG find_def_from_bottom label 176
2022-01-24 14:08:56,306 DEBUG find_def_from_top label 176
2022-01-24 14:08:56,306 DEBUG idom 174 from label 176
2022-01-24 14:08:56,306 DEBUG find_def_from_bottom label 174
2022-01-24 14:08:56,306 DEBUG find_def_from_top label 174
2022-01-24 14:08:56,306 DEBUG idom 132 from label 174
2022-01-24 14:08:56,306 DEBUG find_def_from_bottom label 132
2022-01-24 14:08:56,306 DEBUG replaced with: $180.3 = $const180.1 / r.2
2022-01-24 14:08:56,306 DEBUG on stmt: $180.4 = cast(value=$180.3)
2022-01-24 14:08:56,306 DEBUG on stmt: return $180.4
2022-01-24 14:08:56,306 DEBUG ==== SSA block rewrite pass on 188
2022-01-24 14:08:56,307 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb37b2e8>
2022-01-24 14:08:56,307 DEBUG on stmt: $188.2 = cast(value=r)
2022-01-24 14:08:56,307 DEBUG find_def var='r' stmt=$188.2 = cast(value=r)
2022-01-24 14:08:56,307 DEBUG find_def_from_top label 188
2022-01-24 14:08:56,307 DEBUG idom 176 from label 188
2022-01-24 14:08:56,307 DEBUG find_def_from_bottom label 176
2022-01-24 14:08:56,307 DEBUG find_def_from_top label 176
2022-01-24 14:08:56,307 DEBUG idom 174 from label 176
2022-01-24 14:08:56,307 DEBUG find_def_from_bottom label 174
2022-01-24 14:08:56,307 DEBUG find_def_from_top label 174
2022-01-24 14:08:56,307 DEBUG idom 132 from label 174
2022-01-24 14:08:56,307 DEBUG find_def_from_bottom label 132
2022-01-24 14:08:56,307 DEBUG replaced with: $188.2 = cast(value=r.2)
2022-01-24 14:08:56,307 DEBUG on stmt: return $188.2
2022-01-24 14:08:56,307 DEBUG Fix SSA violator on var invert
2022-01-24 14:08:56,307 DEBUG ==== SSA block rewrite pass on 0
2022-01-24 14:08:56,307 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb37b898>
2022-01-24 14:08:56,307 DEBUG on stmt: a = arg(0, name=a)
2022-01-24 14:08:56,307 DEBUG on stmt: b = arg(1, name=b)
2022-01-24 14:08:56,307 DEBUG on stmt: $0.1 = freevar(tp: float64)
2022-01-24 14:08:56,307 DEBUG on stmt: $const0.2 = const(int, 1)
2022-01-24 14:08:56,307 DEBUG on stmt: r = call $0.1($const0.2, func=$0.1, args=[Var($const0.2, numbers.py:217)], kws=(), vararg=None)
2022-01-24 14:08:56,307 DEBUG on stmt: $0.4 = freevar(tp: float64)
2022-01-24 14:08:56,307 DEBUG on stmt: a.1 = call $0.4(a, func=$0.4, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
2022-01-24 14:08:56,307 DEBUG on stmt: $const0.8 = const(int, 0)
2022-01-24 14:08:56,308 DEBUG on stmt: $0.9 = b < $const0.8
2022-01-24 14:08:56,308 DEBUG on stmt: bool24 = global(bool: <class 'bool'>)
2022-01-24 14:08:56,308 DEBUG on stmt: $24pred = call bool24($0.9, func=bool24, args=(Var($0.9, numbers.py:219),), kws=(), vararg=None)
2022-01-24 14:08:56,308 DEBUG on stmt: branch $24pred, 26, 98
2022-01-24 14:08:56,308 DEBUG ==== SSA block rewrite pass on 26
2022-01-24 14:08:56,308 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb37b898>
2022-01-24 14:08:56,308 DEBUG on stmt: invert = const(bool, True)
2022-01-24 14:08:56,308 DEBUG first assign: invert
2022-01-24 14:08:56,308 DEBUG replaced with: invert = const(bool, True)
2022-01-24 14:08:56,308 DEBUG on stmt: exp = unary(fn=<built-in function neg>, value=b)
2022-01-24 14:08:56,308 DEBUG on stmt: $const26.5 = const(int, 0)
2022-01-24 14:08:56,308 DEBUG on stmt: $26.6 = exp < $const26.5
2022-01-24 14:08:56,308 DEBUG on stmt: bool42 = global(bool: <class 'bool'>)
2022-01-24 14:08:56,308 DEBUG on stmt: $42pred = call bool42($26.6, func=bool42, args=(Var($26.6, numbers.py:222),), kws=(), vararg=None)
2022-01-24 14:08:56,308 DEBUG on stmt: branch $42pred, 44, 48
2022-01-24 14:08:56,308 DEBUG ==== SSA block rewrite pass on 44
2022-01-24 14:08:56,308 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb37b898>
2022-01-24 14:08:56,308 DEBUG on stmt: $44.1 = global(OverflowError: <class 'OverflowError'>)
2022-01-24 14:08:56,308 DEBUG on stmt: <static> raise <class 'OverflowError'>
2022-01-24 14:08:56,308 DEBUG ==== SSA block rewrite pass on 48
2022-01-24 14:08:56,308 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb37b898>
2022-01-24 14:08:56,308 DEBUG on stmt: $48.1 = freevar(is_integer: False)
2022-01-24 14:08:56,308 DEBUG on stmt: bool50 = global(bool: <class 'bool'>)
2022-01-24 14:08:56,308 DEBUG on stmt: $50pred = call bool50($48.1, func=bool50, args=(Var($48.1, numbers.py:224),), kws=(), vararg=None)
2022-01-24 14:08:56,308 DEBUG on stmt: jump 106
2022-01-24 14:08:56,308 DEBUG ==== SSA block rewrite pass on 98
2022-01-24 14:08:56,308 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb37b898>
2022-01-24 14:08:56,308 DEBUG on stmt: invert = const(bool, False)
2022-01-24 14:08:56,309 DEBUG replaced with: invert.1 = const(bool, False)
2022-01-24 14:08:56,309 DEBUG on stmt: exp = b
2022-01-24 14:08:56,309 DEBUG on stmt: jump 106
2022-01-24 14:08:56,309 DEBUG ==== SSA block rewrite pass on 106
2022-01-24 14:08:56,309 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb37b898>
2022-01-24 14:08:56,309 DEBUG on stmt: $const106.2 = const(int, 65536)
2022-01-24 14:08:56,309 DEBUG on stmt: $106.3 = exp > $const106.2
2022-01-24 14:08:56,309 DEBUG on stmt: bool112 = global(bool: <class 'bool'>)
2022-01-24 14:08:56,309 DEBUG on stmt: $112pred = call bool112($106.3, func=bool112, args=(Var($106.3, numbers.py:235),), kws=(), vararg=None)
2022-01-24 14:08:56,309 DEBUG on stmt: branch $112pred, 114, 130
2022-01-24 14:08:56,309 DEBUG ==== SSA block rewrite pass on 114
2022-01-24 14:08:56,309 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb37b898>
2022-01-24 14:08:56,309 DEBUG on stmt: $114.1 = global(math: <module 'math' from '/Users/wdiepeveen/anaconda3/envs/aspire_env/lib/python3.6/lib-dynload/math.cpython-36m-darwin.so'>)
2022-01-24 14:08:56,309 DEBUG on stmt: $114.2 = getattr(value=$114.1, attr=pow)
2022-01-24 14:08:56,309 DEBUG on stmt: $114.4 = global(float: <class 'float'>)
2022-01-24 14:08:56,309 DEBUG on stmt: $114.6 = call $114.4(b, func=$114.4, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
2022-01-24 14:08:56,309 DEBUG on stmt: $114.7 = call $114.2(a.1, $114.6, func=$114.2, args=[Var(a.1, numbers.py:218), Var($114.6, numbers.py:237)], kws=(), vararg=None)
2022-01-24 14:08:56,309 DEBUG on stmt: $114.8 = cast(value=$114.7)
2022-01-24 14:08:56,309 DEBUG on stmt: return $114.8
2022-01-24 14:08:56,309 DEBUG ==== SSA block rewrite pass on 130
2022-01-24 14:08:56,309 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb37b898>
2022-01-24 14:08:56,309 DEBUG on stmt: jump 132
2022-01-24 14:08:56,309 DEBUG ==== SSA block rewrite pass on 132
2022-01-24 14:08:56,309 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb37b898>
2022-01-24 14:08:56,309 DEBUG on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:217), Var(r.3, numbers.py:240)], incoming_blocks=[130, 156])
2022-01-24 14:08:56,309 DEBUG on stmt: $const132.2 = const(int, 0)
2022-01-24 14:08:56,310 DEBUG on stmt: $132.3 = exp != $const132.2
2022-01-24 14:08:56,310 DEBUG on stmt: bool138 = global(bool: <class 'bool'>)
2022-01-24 14:08:56,310 DEBUG on stmt: $138pred = call bool138($132.3, func=bool138, args=(Var($132.3, numbers.py:238),), kws=(), vararg=None)
2022-01-24 14:08:56,310 DEBUG on stmt: branch $138pred, 140, 174
2022-01-24 14:08:56,310 DEBUG ==== SSA block rewrite pass on 140
2022-01-24 14:08:56,310 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb37b898>
2022-01-24 14:08:56,310 DEBUG on stmt: $const140.2 = const(int, 1)
2022-01-24 14:08:56,310 DEBUG on stmt: $140.3 = exp & $const140.2
2022-01-24 14:08:56,310 DEBUG on stmt: bool146 = global(bool: <class 'bool'>)
2022-01-24 14:08:56,310 DEBUG on stmt: $146pred = call bool146($140.3, func=bool146, args=(Var($140.3, numbers.py:239),), kws=(), vararg=None)
2022-01-24 14:08:56,310 DEBUG on stmt: branch $146pred, 148, 156
2022-01-24 14:08:56,310 DEBUG ==== SSA block rewrite pass on 148
2022-01-24 14:08:56,310 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb37b898>
2022-01-24 14:08:56,310 DEBUG on stmt: $148.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:56,311 DEBUG on stmt: r.1 = $148.3
2022-01-24 14:08:56,311 DEBUG on stmt: jump 156
2022-01-24 14:08:56,311 DEBUG ==== SSA block rewrite pass on 156
2022-01-24 14:08:56,311 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb37b898>
2022-01-24 14:08:56,311 DEBUG on stmt: r.3 = phi(incoming_values=[Var(r.1, numbers.py:240), Var(r.2, numbers.py:240)], incoming_blocks=[148, 140])
2022-01-24 14:08:56,311 DEBUG on stmt: $const156.2 = const(int, 1)
2022-01-24 14:08:56,311 DEBUG on stmt: $156.3 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.2, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:56,311 DEBUG on stmt: exp = $156.3
2022-01-24 14:08:56,311 DEBUG on stmt: $156.6 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:56,311 DEBUG on stmt: a.1 = $156.6
2022-01-24 14:08:56,311 DEBUG on stmt: jump 132
2022-01-24 14:08:56,311 DEBUG ==== SSA block rewrite pass on 174
2022-01-24 14:08:56,311 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb37b898>
2022-01-24 14:08:56,311 DEBUG on stmt: jump 176
2022-01-24 14:08:56,311 DEBUG ==== SSA block rewrite pass on 176
2022-01-24 14:08:56,311 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb37b898>
2022-01-24 14:08:56,311 DEBUG on stmt: bool178 = global(bool: <class 'bool'>)
2022-01-24 14:08:56,311 DEBUG on stmt: $178pred = call bool178(invert, func=bool178, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
2022-01-24 14:08:56,311 DEBUG on stmt: branch $178pred, 180, 188
2022-01-24 14:08:56,311 DEBUG ==== SSA block rewrite pass on 180
2022-01-24 14:08:56,312 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb37b898>
2022-01-24 14:08:56,312 DEBUG on stmt: $const180.1 = const(float, 1.0)
2022-01-24 14:08:56,312 DEBUG on stmt: $180.3 = $const180.1 / r.2
2022-01-24 14:08:56,312 DEBUG on stmt: $180.4 = cast(value=$180.3)
2022-01-24 14:08:56,312 DEBUG on stmt: return $180.4
2022-01-24 14:08:56,312 DEBUG ==== SSA block rewrite pass on 188
2022-01-24 14:08:56,312 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb37b898>
2022-01-24 14:08:56,312 DEBUG on stmt: $188.2 = cast(value=r.2)
2022-01-24 14:08:56,312 DEBUG on stmt: return $188.2
2022-01-24 14:08:56,312 DEBUG Replaced assignments: defaultdict(<class 'list'>,
            {26: [<numba.core.ir.Assign object at 0x7f94eb37bac8>],
             98: [<numba.core.ir.Assign object at 0x7f94eb37bfd0>]})
2022-01-24 14:08:56,313 DEBUG ==== SSA block rewrite pass on 0
2022-01-24 14:08:56,313 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb35c7b8>
2022-01-24 14:08:56,313 DEBUG on stmt: a = arg(0, name=a)
2022-01-24 14:08:56,313 DEBUG on stmt: b = arg(1, name=b)
2022-01-24 14:08:56,313 DEBUG on stmt: $0.1 = freevar(tp: float64)
2022-01-24 14:08:56,313 DEBUG on stmt: $const0.2 = const(int, 1)
2022-01-24 14:08:56,313 DEBUG on stmt: r = call $0.1($const0.2, func=$0.1, args=[Var($const0.2, numbers.py:217)], kws=(), vararg=None)
2022-01-24 14:08:56,313 DEBUG on stmt: $0.4 = freevar(tp: float64)
2022-01-24 14:08:56,313 DEBUG on stmt: a.1 = call $0.4(a, func=$0.4, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
2022-01-24 14:08:56,313 DEBUG on stmt: $const0.8 = const(int, 0)
2022-01-24 14:08:56,313 DEBUG on stmt: $0.9 = b < $const0.8
2022-01-24 14:08:56,313 DEBUG on stmt: bool24 = global(bool: <class 'bool'>)
2022-01-24 14:08:56,314 DEBUG on stmt: $24pred = call bool24($0.9, func=bool24, args=(Var($0.9, numbers.py:219),), kws=(), vararg=None)
2022-01-24 14:08:56,314 DEBUG on stmt: branch $24pred, 26, 98
2022-01-24 14:08:56,314 DEBUG ==== SSA block rewrite pass on 26
2022-01-24 14:08:56,314 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb35c7b8>
2022-01-24 14:08:56,314 DEBUG on stmt: invert = const(bool, True)
2022-01-24 14:08:56,314 DEBUG on stmt: exp = unary(fn=<built-in function neg>, value=b)
2022-01-24 14:08:56,314 DEBUG on stmt: $const26.5 = const(int, 0)
2022-01-24 14:08:56,314 DEBUG on stmt: $26.6 = exp < $const26.5
2022-01-24 14:08:56,314 DEBUG on stmt: bool42 = global(bool: <class 'bool'>)
2022-01-24 14:08:56,314 DEBUG on stmt: $42pred = call bool42($26.6, func=bool42, args=(Var($26.6, numbers.py:222),), kws=(), vararg=None)
2022-01-24 14:08:56,314 DEBUG on stmt: branch $42pred, 44, 48
2022-01-24 14:08:56,314 DEBUG ==== SSA block rewrite pass on 44
2022-01-24 14:08:56,314 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb35c7b8>
2022-01-24 14:08:56,314 DEBUG on stmt: $44.1 = global(OverflowError: <class 'OverflowError'>)
2022-01-24 14:08:56,314 DEBUG on stmt: <static> raise <class 'OverflowError'>
2022-01-24 14:08:56,314 DEBUG ==== SSA block rewrite pass on 48
2022-01-24 14:08:56,314 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb35c7b8>
2022-01-24 14:08:56,314 DEBUG on stmt: $48.1 = freevar(is_integer: False)
2022-01-24 14:08:56,314 DEBUG on stmt: bool50 = global(bool: <class 'bool'>)
2022-01-24 14:08:56,314 DEBUG on stmt: $50pred = call bool50($48.1, func=bool50, args=(Var($48.1, numbers.py:224),), kws=(), vararg=None)
2022-01-24 14:08:56,315 DEBUG on stmt: jump 106
2022-01-24 14:08:56,315 DEBUG ==== SSA block rewrite pass on 98
2022-01-24 14:08:56,315 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb35c7b8>
2022-01-24 14:08:56,315 DEBUG on stmt: invert.1 = const(bool, False)
2022-01-24 14:08:56,315 DEBUG on stmt: exp = b
2022-01-24 14:08:56,315 DEBUG on stmt: jump 106
2022-01-24 14:08:56,315 DEBUG ==== SSA block rewrite pass on 106
2022-01-24 14:08:56,315 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb35c7b8>
2022-01-24 14:08:56,315 DEBUG on stmt: $const106.2 = const(int, 65536)
2022-01-24 14:08:56,315 DEBUG on stmt: $106.3 = exp > $const106.2
2022-01-24 14:08:56,315 DEBUG on stmt: bool112 = global(bool: <class 'bool'>)
2022-01-24 14:08:56,315 DEBUG on stmt: $112pred = call bool112($106.3, func=bool112, args=(Var($106.3, numbers.py:235),), kws=(), vararg=None)
2022-01-24 14:08:56,315 DEBUG on stmt: branch $112pred, 114, 130
2022-01-24 14:08:56,315 DEBUG ==== SSA block rewrite pass on 114
2022-01-24 14:08:56,315 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb35c7b8>
2022-01-24 14:08:56,315 DEBUG on stmt: $114.1 = global(math: <module 'math' from '/Users/wdiepeveen/anaconda3/envs/aspire_env/lib/python3.6/lib-dynload/math.cpython-36m-darwin.so'>)
2022-01-24 14:08:56,315 DEBUG on stmt: $114.2 = getattr(value=$114.1, attr=pow)
2022-01-24 14:08:56,315 DEBUG on stmt: $114.4 = global(float: <class 'float'>)
2022-01-24 14:08:56,315 DEBUG on stmt: $114.6 = call $114.4(b, func=$114.4, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
2022-01-24 14:08:56,315 DEBUG on stmt: $114.7 = call $114.2(a.1, $114.6, func=$114.2, args=[Var(a.1, numbers.py:218), Var($114.6, numbers.py:237)], kws=(), vararg=None)
2022-01-24 14:08:56,315 DEBUG on stmt: $114.8 = cast(value=$114.7)
2022-01-24 14:08:56,315 DEBUG on stmt: return $114.8
2022-01-24 14:08:56,315 DEBUG ==== SSA block rewrite pass on 130
2022-01-24 14:08:56,315 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb35c7b8>
2022-01-24 14:08:56,315 DEBUG on stmt: jump 132
2022-01-24 14:08:56,316 DEBUG ==== SSA block rewrite pass on 132
2022-01-24 14:08:56,316 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb35c7b8>
2022-01-24 14:08:56,316 DEBUG on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:217), Var(r.3, numbers.py:240)], incoming_blocks=[130, 156])
2022-01-24 14:08:56,316 DEBUG on stmt: $const132.2 = const(int, 0)
2022-01-24 14:08:56,316 DEBUG on stmt: $132.3 = exp != $const132.2
2022-01-24 14:08:56,316 DEBUG on stmt: bool138 = global(bool: <class 'bool'>)
2022-01-24 14:08:56,316 DEBUG on stmt: $138pred = call bool138($132.3, func=bool138, args=(Var($132.3, numbers.py:238),), kws=(), vararg=None)
2022-01-24 14:08:56,316 DEBUG on stmt: branch $138pred, 140, 174
2022-01-24 14:08:56,316 DEBUG ==== SSA block rewrite pass on 140
2022-01-24 14:08:56,316 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb35c7b8>
2022-01-24 14:08:56,316 DEBUG on stmt: $const140.2 = const(int, 1)
2022-01-24 14:08:56,316 DEBUG on stmt: $140.3 = exp & $const140.2
2022-01-24 14:08:56,316 DEBUG on stmt: bool146 = global(bool: <class 'bool'>)
2022-01-24 14:08:56,316 DEBUG on stmt: $146pred = call bool146($140.3, func=bool146, args=(Var($140.3, numbers.py:239),), kws=(), vararg=None)
2022-01-24 14:08:56,316 DEBUG on stmt: branch $146pred, 148, 156
2022-01-24 14:08:56,316 DEBUG ==== SSA block rewrite pass on 148
2022-01-24 14:08:56,316 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb35c7b8>
2022-01-24 14:08:56,316 DEBUG on stmt: $148.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:56,316 DEBUG on stmt: r.1 = $148.3
2022-01-24 14:08:56,316 DEBUG on stmt: jump 156
2022-01-24 14:08:56,316 DEBUG ==== SSA block rewrite pass on 156
2022-01-24 14:08:56,317 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb35c7b8>
2022-01-24 14:08:56,317 DEBUG on stmt: r.3 = phi(incoming_values=[Var(r.1, numbers.py:240), Var(r.2, numbers.py:240)], incoming_blocks=[148, 140])
2022-01-24 14:08:56,317 DEBUG on stmt: $const156.2 = const(int, 1)
2022-01-24 14:08:56,317 DEBUG on stmt: $156.3 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.2, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:56,317 DEBUG on stmt: exp = $156.3
2022-01-24 14:08:56,317 DEBUG on stmt: $156.6 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:56,317 DEBUG on stmt: a.1 = $156.6
2022-01-24 14:08:56,317 DEBUG on stmt: jump 132
2022-01-24 14:08:56,317 DEBUG ==== SSA block rewrite pass on 174
2022-01-24 14:08:56,317 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb35c7b8>
2022-01-24 14:08:56,317 DEBUG on stmt: jump 176
2022-01-24 14:08:56,317 DEBUG ==== SSA block rewrite pass on 176
2022-01-24 14:08:56,317 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb35c7b8>
2022-01-24 14:08:56,317 DEBUG on stmt: bool178 = global(bool: <class 'bool'>)
2022-01-24 14:08:56,317 DEBUG on stmt: $178pred = call bool178(invert, func=bool178, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
2022-01-24 14:08:56,317 DEBUG find_def var='invert' stmt=$178pred = call bool178(invert, func=bool178, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
2022-01-24 14:08:56,317 DEBUG find_def_from_top label 176
2022-01-24 14:08:56,317 DEBUG idom 174 from label 176
2022-01-24 14:08:56,317 DEBUG find_def_from_bottom label 174
2022-01-24 14:08:56,317 DEBUG find_def_from_top label 174
2022-01-24 14:08:56,317 DEBUG idom 132 from label 174
2022-01-24 14:08:56,317 DEBUG find_def_from_bottom label 132
2022-01-24 14:08:56,317 DEBUG find_def_from_top label 132
2022-01-24 14:08:56,317 DEBUG idom 130 from label 132
2022-01-24 14:08:56,317 DEBUG find_def_from_bottom label 130
2022-01-24 14:08:56,317 DEBUG find_def_from_top label 130
2022-01-24 14:08:56,317 DEBUG idom 106 from label 130
2022-01-24 14:08:56,318 DEBUG find_def_from_bottom label 106
2022-01-24 14:08:56,318 DEBUG find_def_from_top label 106
2022-01-24 14:08:56,318 DEBUG insert phi node invert.2 = phi(incoming_values=[], incoming_blocks=[]) at 106
2022-01-24 14:08:56,318 DEBUG find_def_from_bottom label 48
2022-01-24 14:08:56,318 DEBUG find_def_from_top label 48
2022-01-24 14:08:56,318 DEBUG idom 26 from label 48
2022-01-24 14:08:56,318 DEBUG find_def_from_bottom label 26
2022-01-24 14:08:56,318 DEBUG incoming_def invert = const(bool, True)
2022-01-24 14:08:56,318 DEBUG find_def_from_bottom label 98
2022-01-24 14:08:56,318 DEBUG incoming_def invert.1 = const(bool, False)
2022-01-24 14:08:56,319 DEBUG replaced with: $178pred = call bool178(invert.2, func=bool178, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
2022-01-24 14:08:56,319 DEBUG on stmt: branch $178pred, 180, 188
2022-01-24 14:08:56,319 DEBUG ==== SSA block rewrite pass on 180
2022-01-24 14:08:56,319 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb35c7b8>
2022-01-24 14:08:56,319 DEBUG on stmt: $const180.1 = const(float, 1.0)
2022-01-24 14:08:56,319 DEBUG on stmt: $180.3 = $const180.1 / r.2
2022-01-24 14:08:56,319 DEBUG on stmt: $180.4 = cast(value=$180.3)
2022-01-24 14:08:56,319 DEBUG on stmt: return $180.4
2022-01-24 14:08:56,319 DEBUG ==== SSA block rewrite pass on 188
2022-01-24 14:08:56,319 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb35c7b8>
2022-01-24 14:08:56,319 DEBUG on stmt: $188.2 = cast(value=r.2)
2022-01-24 14:08:56,319 DEBUG on stmt: return $188.2
2022-01-24 14:08:56,319 DEBUG Fix SSA violator on var exp
2022-01-24 14:08:56,319 DEBUG ==== SSA block rewrite pass on 0
2022-01-24 14:08:56,319 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb37be10>
2022-01-24 14:08:56,319 DEBUG on stmt: a = arg(0, name=a)
2022-01-24 14:08:56,319 DEBUG on stmt: b = arg(1, name=b)
2022-01-24 14:08:56,319 DEBUG on stmt: $0.1 = freevar(tp: float64)
2022-01-24 14:08:56,319 DEBUG on stmt: $const0.2 = const(int, 1)
2022-01-24 14:08:56,319 DEBUG on stmt: r = call $0.1($const0.2, func=$0.1, args=[Var($const0.2, numbers.py:217)], kws=(), vararg=None)
2022-01-24 14:08:56,320 DEBUG on stmt: $0.4 = freevar(tp: float64)
2022-01-24 14:08:56,320 DEBUG on stmt: a.1 = call $0.4(a, func=$0.4, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
2022-01-24 14:08:56,320 DEBUG on stmt: $const0.8 = const(int, 0)
2022-01-24 14:08:56,320 DEBUG on stmt: $0.9 = b < $const0.8
2022-01-24 14:08:56,320 DEBUG on stmt: bool24 = global(bool: <class 'bool'>)
2022-01-24 14:08:56,320 DEBUG on stmt: $24pred = call bool24($0.9, func=bool24, args=(Var($0.9, numbers.py:219),), kws=(), vararg=None)
2022-01-24 14:08:56,320 DEBUG on stmt: branch $24pred, 26, 98
2022-01-24 14:08:56,320 DEBUG ==== SSA block rewrite pass on 26
2022-01-24 14:08:56,320 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb37be10>
2022-01-24 14:08:56,320 DEBUG on stmt: invert = const(bool, True)
2022-01-24 14:08:56,320 DEBUG on stmt: exp = unary(fn=<built-in function neg>, value=b)
2022-01-24 14:08:56,320 DEBUG first assign: exp
2022-01-24 14:08:56,320 DEBUG replaced with: exp = unary(fn=<built-in function neg>, value=b)
2022-01-24 14:08:56,320 DEBUG on stmt: $const26.5 = const(int, 0)
2022-01-24 14:08:56,320 DEBUG on stmt: $26.6 = exp < $const26.5
2022-01-24 14:08:56,320 DEBUG on stmt: bool42 = global(bool: <class 'bool'>)
2022-01-24 14:08:56,320 DEBUG on stmt: $42pred = call bool42($26.6, func=bool42, args=(Var($26.6, numbers.py:222),), kws=(), vararg=None)
2022-01-24 14:08:56,320 DEBUG on stmt: branch $42pred, 44, 48
2022-01-24 14:08:56,321 DEBUG ==== SSA block rewrite pass on 44
2022-01-24 14:08:56,321 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb37be10>
2022-01-24 14:08:56,321 DEBUG on stmt: $44.1 = global(OverflowError: <class 'OverflowError'>)
2022-01-24 14:08:56,321 DEBUG on stmt: <static> raise <class 'OverflowError'>
2022-01-24 14:08:56,321 DEBUG ==== SSA block rewrite pass on 48
2022-01-24 14:08:56,321 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb37be10>
2022-01-24 14:08:56,321 DEBUG on stmt: $48.1 = freevar(is_integer: False)
2022-01-24 14:08:56,321 DEBUG on stmt: bool50 = global(bool: <class 'bool'>)
2022-01-24 14:08:56,321 DEBUG on stmt: $50pred = call bool50($48.1, func=bool50, args=(Var($48.1, numbers.py:224),), kws=(), vararg=None)
2022-01-24 14:08:56,321 DEBUG on stmt: jump 106
2022-01-24 14:08:56,321 DEBUG ==== SSA block rewrite pass on 98
2022-01-24 14:08:56,321 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb37be10>
2022-01-24 14:08:56,321 DEBUG on stmt: invert.1 = const(bool, False)
2022-01-24 14:08:56,321 DEBUG on stmt: exp = b
2022-01-24 14:08:56,321 DEBUG replaced with: exp.1 = b
2022-01-24 14:08:56,321 DEBUG on stmt: jump 106
2022-01-24 14:08:56,321 DEBUG ==== SSA block rewrite pass on 106
2022-01-24 14:08:56,321 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb37be10>
2022-01-24 14:08:56,321 DEBUG on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:220), Var(invert.1, numbers.py:233)], incoming_blocks=[48, 98])
2022-01-24 14:08:56,321 DEBUG on stmt: $const106.2 = const(int, 65536)
2022-01-24 14:08:56,321 DEBUG on stmt: $106.3 = exp > $const106.2
2022-01-24 14:08:56,321 DEBUG on stmt: bool112 = global(bool: <class 'bool'>)
2022-01-24 14:08:56,321 DEBUG on stmt: $112pred = call bool112($106.3, func=bool112, args=(Var($106.3, numbers.py:235),), kws=(), vararg=None)
2022-01-24 14:08:56,322 DEBUG on stmt: branch $112pred, 114, 130
2022-01-24 14:08:56,322 DEBUG ==== SSA block rewrite pass on 114
2022-01-24 14:08:56,322 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb37be10>
2022-01-24 14:08:56,322 DEBUG on stmt: $114.1 = global(math: <module 'math' from '/Users/wdiepeveen/anaconda3/envs/aspire_env/lib/python3.6/lib-dynload/math.cpython-36m-darwin.so'>)
2022-01-24 14:08:56,322 DEBUG on stmt: $114.2 = getattr(value=$114.1, attr=pow)
2022-01-24 14:08:56,322 DEBUG on stmt: $114.4 = global(float: <class 'float'>)
2022-01-24 14:08:56,322 DEBUG on stmt: $114.6 = call $114.4(b, func=$114.4, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
2022-01-24 14:08:56,323 DEBUG on stmt: $114.7 = call $114.2(a.1, $114.6, func=$114.2, args=[Var(a.1, numbers.py:218), Var($114.6, numbers.py:237)], kws=(), vararg=None)
2022-01-24 14:08:56,323 DEBUG on stmt: $114.8 = cast(value=$114.7)
2022-01-24 14:08:56,323 DEBUG on stmt: return $114.8
2022-01-24 14:08:56,323 DEBUG ==== SSA block rewrite pass on 130
2022-01-24 14:08:56,323 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb37be10>
2022-01-24 14:08:56,323 DEBUG on stmt: jump 132
2022-01-24 14:08:56,323 DEBUG ==== SSA block rewrite pass on 132
2022-01-24 14:08:56,323 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb37be10>
2022-01-24 14:08:56,323 DEBUG on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:217), Var(r.3, numbers.py:240)], incoming_blocks=[130, 156])
2022-01-24 14:08:56,323 DEBUG on stmt: $const132.2 = const(int, 0)
2022-01-24 14:08:56,323 DEBUG on stmt: $132.3 = exp != $const132.2
2022-01-24 14:08:56,323 DEBUG on stmt: bool138 = global(bool: <class 'bool'>)
2022-01-24 14:08:56,323 DEBUG on stmt: $138pred = call bool138($132.3, func=bool138, args=(Var($132.3, numbers.py:238),), kws=(), vararg=None)
2022-01-24 14:08:56,323 DEBUG on stmt: branch $138pred, 140, 174
2022-01-24 14:08:56,323 DEBUG ==== SSA block rewrite pass on 140
2022-01-24 14:08:56,323 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb37be10>
2022-01-24 14:08:56,323 DEBUG on stmt: $const140.2 = const(int, 1)
2022-01-24 14:08:56,323 DEBUG on stmt: $140.3 = exp & $const140.2
2022-01-24 14:08:56,324 DEBUG on stmt: bool146 = global(bool: <class 'bool'>)
2022-01-24 14:08:56,324 DEBUG on stmt: $146pred = call bool146($140.3, func=bool146, args=(Var($140.3, numbers.py:239),), kws=(), vararg=None)
2022-01-24 14:08:56,324 DEBUG on stmt: branch $146pred, 148, 156
2022-01-24 14:08:56,324 DEBUG ==== SSA block rewrite pass on 148
2022-01-24 14:08:56,324 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb37be10>
2022-01-24 14:08:56,324 DEBUG on stmt: $148.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:56,324 DEBUG on stmt: r.1 = $148.3
2022-01-24 14:08:56,324 DEBUG on stmt: jump 156
2022-01-24 14:08:56,324 DEBUG ==== SSA block rewrite pass on 156
2022-01-24 14:08:56,324 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb37be10>
2022-01-24 14:08:56,324 DEBUG on stmt: r.3 = phi(incoming_values=[Var(r.1, numbers.py:240), Var(r.2, numbers.py:240)], incoming_blocks=[148, 140])
2022-01-24 14:08:56,324 DEBUG on stmt: $const156.2 = const(int, 1)
2022-01-24 14:08:56,324 DEBUG on stmt: $156.3 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.2, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:56,324 DEBUG on stmt: exp = $156.3
2022-01-24 14:08:56,324 DEBUG replaced with: exp.2 = $156.3
2022-01-24 14:08:56,324 DEBUG on stmt: $156.6 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:56,324 DEBUG on stmt: a.1 = $156.6
2022-01-24 14:08:56,324 DEBUG on stmt: jump 132
2022-01-24 14:08:56,324 DEBUG ==== SSA block rewrite pass on 174
2022-01-24 14:08:56,324 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb37be10>
2022-01-24 14:08:56,324 DEBUG on stmt: jump 176
2022-01-24 14:08:56,324 DEBUG ==== SSA block rewrite pass on 176
2022-01-24 14:08:56,324 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb37be10>
2022-01-24 14:08:56,324 DEBUG on stmt: bool178 = global(bool: <class 'bool'>)
2022-01-24 14:08:56,324 DEBUG on stmt: $178pred = call bool178(invert.2, func=bool178, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
2022-01-24 14:08:56,324 DEBUG on stmt: branch $178pred, 180, 188
2022-01-24 14:08:56,325 DEBUG ==== SSA block rewrite pass on 180
2022-01-24 14:08:56,325 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb37be10>
2022-01-24 14:08:56,325 DEBUG on stmt: $const180.1 = const(float, 1.0)
2022-01-24 14:08:56,325 DEBUG on stmt: $180.3 = $const180.1 / r.2
2022-01-24 14:08:56,325 DEBUG on stmt: $180.4 = cast(value=$180.3)
2022-01-24 14:08:56,325 DEBUG on stmt: return $180.4
2022-01-24 14:08:56,325 DEBUG ==== SSA block rewrite pass on 188
2022-01-24 14:08:56,325 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb37be10>
2022-01-24 14:08:56,325 DEBUG on stmt: $188.2 = cast(value=r.2)
2022-01-24 14:08:56,325 DEBUG on stmt: return $188.2
2022-01-24 14:08:56,325 DEBUG Replaced assignments: defaultdict(<class 'list'>,
            {26: [<numba.core.ir.Assign object at 0x7f94eb37bb00>],
             98: [<numba.core.ir.Assign object at 0x7f94eb37b6a0>],
             156: [<numba.core.ir.Assign object at 0x7f94eb348f98>]})
2022-01-24 14:08:56,325 DEBUG ==== SSA block rewrite pass on 0
2022-01-24 14:08:56,325 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb35c7f0>
2022-01-24 14:08:56,325 DEBUG on stmt: a = arg(0, name=a)
2022-01-24 14:08:56,325 DEBUG on stmt: b = arg(1, name=b)
2022-01-24 14:08:56,325 DEBUG on stmt: $0.1 = freevar(tp: float64)
2022-01-24 14:08:56,325 DEBUG on stmt: $const0.2 = const(int, 1)
2022-01-24 14:08:56,325 DEBUG on stmt: r = call $0.1($const0.2, func=$0.1, args=[Var($const0.2, numbers.py:217)], kws=(), vararg=None)
2022-01-24 14:08:56,325 DEBUG on stmt: $0.4 = freevar(tp: float64)
2022-01-24 14:08:56,326 DEBUG on stmt: a.1 = call $0.4(a, func=$0.4, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
2022-01-24 14:08:56,326 DEBUG on stmt: $const0.8 = const(int, 0)
2022-01-24 14:08:56,326 DEBUG on stmt: $0.9 = b < $const0.8
2022-01-24 14:08:56,326 DEBUG on stmt: bool24 = global(bool: <class 'bool'>)
2022-01-24 14:08:56,326 DEBUG on stmt: $24pred = call bool24($0.9, func=bool24, args=(Var($0.9, numbers.py:219),), kws=(), vararg=None)
2022-01-24 14:08:56,326 DEBUG on stmt: branch $24pred, 26, 98
2022-01-24 14:08:56,326 DEBUG ==== SSA block rewrite pass on 26
2022-01-24 14:08:56,326 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb35c7f0>
2022-01-24 14:08:56,326 DEBUG on stmt: invert = const(bool, True)
2022-01-24 14:08:56,326 DEBUG on stmt: exp = unary(fn=<built-in function neg>, value=b)
2022-01-24 14:08:56,326 DEBUG on stmt: $const26.5 = const(int, 0)
2022-01-24 14:08:56,326 DEBUG on stmt: $26.6 = exp < $const26.5
2022-01-24 14:08:56,327 DEBUG find_def var='exp' stmt=$26.6 = exp < $const26.5
2022-01-24 14:08:56,327 DEBUG on stmt: bool42 = global(bool: <class 'bool'>)
2022-01-24 14:08:56,327 DEBUG on stmt: $42pred = call bool42($26.6, func=bool42, args=(Var($26.6, numbers.py:222),), kws=(), vararg=None)
2022-01-24 14:08:56,327 DEBUG on stmt: branch $42pred, 44, 48
2022-01-24 14:08:56,327 DEBUG ==== SSA block rewrite pass on 44
2022-01-24 14:08:56,327 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb35c7f0>
2022-01-24 14:08:56,327 DEBUG on stmt: $44.1 = global(OverflowError: <class 'OverflowError'>)
2022-01-24 14:08:56,327 DEBUG on stmt: <static> raise <class 'OverflowError'>
2022-01-24 14:08:56,327 DEBUG ==== SSA block rewrite pass on 48
2022-01-24 14:08:56,327 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb35c7f0>
2022-01-24 14:08:56,327 DEBUG on stmt: $48.1 = freevar(is_integer: False)
2022-01-24 14:08:56,327 DEBUG on stmt: bool50 = global(bool: <class 'bool'>)
2022-01-24 14:08:56,327 DEBUG on stmt: $50pred = call bool50($48.1, func=bool50, args=(Var($48.1, numbers.py:224),), kws=(), vararg=None)
2022-01-24 14:08:56,327 DEBUG on stmt: jump 106
2022-01-24 14:08:56,327 DEBUG ==== SSA block rewrite pass on 98
2022-01-24 14:08:56,327 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb35c7f0>
2022-01-24 14:08:56,327 DEBUG on stmt: invert.1 = const(bool, False)
2022-01-24 14:08:56,327 DEBUG on stmt: exp.1 = b
2022-01-24 14:08:56,327 DEBUG on stmt: jump 106
2022-01-24 14:08:56,327 DEBUG ==== SSA block rewrite pass on 106
2022-01-24 14:08:56,328 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb35c7f0>
2022-01-24 14:08:56,328 DEBUG on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:220), Var(invert.1, numbers.py:233)], incoming_blocks=[48, 98])
2022-01-24 14:08:56,328 DEBUG on stmt: $const106.2 = const(int, 65536)
2022-01-24 14:08:56,328 DEBUG on stmt: $106.3 = exp > $const106.2
2022-01-24 14:08:56,328 DEBUG find_def var='exp' stmt=$106.3 = exp > $const106.2
2022-01-24 14:08:56,328 DEBUG find_def_from_top label 106
2022-01-24 14:08:56,328 DEBUG insert phi node exp.3 = phi(incoming_values=[], incoming_blocks=[]) at 106
2022-01-24 14:08:56,328 DEBUG find_def_from_bottom label 48
2022-01-24 14:08:56,328 DEBUG find_def_from_top label 48
2022-01-24 14:08:56,328 DEBUG idom 26 from label 48
2022-01-24 14:08:56,328 DEBUG find_def_from_bottom label 26
2022-01-24 14:08:56,328 DEBUG incoming_def exp = unary(fn=<built-in function neg>, value=b)
2022-01-24 14:08:56,329 DEBUG find_def_from_bottom label 98
2022-01-24 14:08:56,329 DEBUG incoming_def exp.1 = b
2022-01-24 14:08:56,329 DEBUG replaced with: $106.3 = exp.3 > $const106.2
2022-01-24 14:08:56,329 DEBUG on stmt: bool112 = global(bool: <class 'bool'>)
2022-01-24 14:08:56,329 DEBUG on stmt: $112pred = call bool112($106.3, func=bool112, args=(Var($106.3, numbers.py:235),), kws=(), vararg=None)
2022-01-24 14:08:56,329 DEBUG on stmt: branch $112pred, 114, 130
2022-01-24 14:08:56,329 DEBUG ==== SSA block rewrite pass on 114
2022-01-24 14:08:56,329 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb35c7f0>
2022-01-24 14:08:56,329 DEBUG on stmt: $114.1 = global(math: <module 'math' from '/Users/wdiepeveen/anaconda3/envs/aspire_env/lib/python3.6/lib-dynload/math.cpython-36m-darwin.so'>)
2022-01-24 14:08:56,329 DEBUG on stmt: $114.2 = getattr(value=$114.1, attr=pow)
2022-01-24 14:08:56,329 DEBUG on stmt: $114.4 = global(float: <class 'float'>)
2022-01-24 14:08:56,329 DEBUG on stmt: $114.6 = call $114.4(b, func=$114.4, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
2022-01-24 14:08:56,329 DEBUG on stmt: $114.7 = call $114.2(a.1, $114.6, func=$114.2, args=[Var(a.1, numbers.py:218), Var($114.6, numbers.py:237)], kws=(), vararg=None)
2022-01-24 14:08:56,330 DEBUG on stmt: $114.8 = cast(value=$114.7)
2022-01-24 14:08:56,330 DEBUG on stmt: return $114.8
2022-01-24 14:08:56,330 DEBUG ==== SSA block rewrite pass on 130
2022-01-24 14:08:56,330 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb35c7f0>
2022-01-24 14:08:56,330 DEBUG on stmt: jump 132
2022-01-24 14:08:56,330 DEBUG ==== SSA block rewrite pass on 132
2022-01-24 14:08:56,330 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb35c7f0>
2022-01-24 14:08:56,330 DEBUG on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:217), Var(r.3, numbers.py:240)], incoming_blocks=[130, 156])
2022-01-24 14:08:56,330 DEBUG on stmt: $const132.2 = const(int, 0)
2022-01-24 14:08:56,330 DEBUG on stmt: $132.3 = exp != $const132.2
2022-01-24 14:08:56,330 DEBUG find_def var='exp' stmt=$132.3 = exp != $const132.2
2022-01-24 14:08:56,330 DEBUG find_def_from_top label 132
2022-01-24 14:08:56,330 DEBUG insert phi node exp.4 = phi(incoming_values=[], incoming_blocks=[]) at 132
2022-01-24 14:08:56,330 DEBUG find_def_from_bottom label 130
2022-01-24 14:08:56,330 DEBUG find_def_from_top label 130
2022-01-24 14:08:56,330 DEBUG idom 106 from label 130
2022-01-24 14:08:56,330 DEBUG find_def_from_bottom label 106
2022-01-24 14:08:56,330 DEBUG incoming_def exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
2022-01-24 14:08:56,330 DEBUG find_def_from_bottom label 156
2022-01-24 14:08:56,330 DEBUG incoming_def exp.2 = $156.3
2022-01-24 14:08:56,330 DEBUG replaced with: $132.3 = exp.4 != $const132.2
2022-01-24 14:08:56,331 DEBUG on stmt: bool138 = global(bool: <class 'bool'>)
2022-01-24 14:08:56,331 DEBUG on stmt: $138pred = call bool138($132.3, func=bool138, args=(Var($132.3, numbers.py:238),), kws=(), vararg=None)
2022-01-24 14:08:56,331 DEBUG on stmt: branch $138pred, 140, 174
2022-01-24 14:08:56,331 DEBUG ==== SSA block rewrite pass on 140
2022-01-24 14:08:56,331 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb35c7f0>
2022-01-24 14:08:56,331 DEBUG on stmt: $const140.2 = const(int, 1)
2022-01-24 14:08:56,331 DEBUG on stmt: $140.3 = exp & $const140.2
2022-01-24 14:08:56,331 DEBUG find_def var='exp' stmt=$140.3 = exp & $const140.2
2022-01-24 14:08:56,331 DEBUG find_def_from_top label 140
2022-01-24 14:08:56,331 DEBUG idom 132 from label 140
2022-01-24 14:08:56,331 DEBUG find_def_from_bottom label 132
2022-01-24 14:08:56,331 DEBUG replaced with: $140.3 = exp.4 & $const140.2
2022-01-24 14:08:56,331 DEBUG on stmt: bool146 = global(bool: <class 'bool'>)
2022-01-24 14:08:56,331 DEBUG on stmt: $146pred = call bool146($140.3, func=bool146, args=(Var($140.3, numbers.py:239),), kws=(), vararg=None)
2022-01-24 14:08:56,331 DEBUG on stmt: branch $146pred, 148, 156
2022-01-24 14:08:56,331 DEBUG ==== SSA block rewrite pass on 148
2022-01-24 14:08:56,331 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb35c7f0>
2022-01-24 14:08:56,331 DEBUG on stmt: $148.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:56,331 DEBUG on stmt: r.1 = $148.3
2022-01-24 14:08:56,331 DEBUG on stmt: jump 156
2022-01-24 14:08:56,331 DEBUG ==== SSA block rewrite pass on 156
2022-01-24 14:08:56,331 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb35c7f0>
2022-01-24 14:08:56,331 DEBUG on stmt: r.3 = phi(incoming_values=[Var(r.1, numbers.py:240), Var(r.2, numbers.py:240)], incoming_blocks=[148, 140])
2022-01-24 14:08:56,332 DEBUG on stmt: $const156.2 = const(int, 1)
2022-01-24 14:08:56,332 DEBUG on stmt: $156.3 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.2, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:56,332 DEBUG find_def var='exp' stmt=$156.3 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.2, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:56,332 DEBUG find_def_from_top label 156
2022-01-24 14:08:56,332 DEBUG idom 140 from label 156
2022-01-24 14:08:56,332 DEBUG find_def_from_bottom label 140
2022-01-24 14:08:56,332 DEBUG find_def_from_top label 140
2022-01-24 14:08:56,332 DEBUG idom 132 from label 140
2022-01-24 14:08:56,332 DEBUG find_def_from_bottom label 132
2022-01-24 14:08:56,332 DEBUG replaced with: $156.3 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.2, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:56,332 DEBUG on stmt: exp.2 = $156.3
2022-01-24 14:08:56,332 DEBUG on stmt: $156.6 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:56,332 DEBUG on stmt: a.1 = $156.6
2022-01-24 14:08:56,332 DEBUG on stmt: jump 132
2022-01-24 14:08:56,332 DEBUG ==== SSA block rewrite pass on 174
2022-01-24 14:08:56,332 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb35c7f0>
2022-01-24 14:08:56,332 DEBUG on stmt: jump 176
2022-01-24 14:08:56,332 DEBUG ==== SSA block rewrite pass on 176
2022-01-24 14:08:56,332 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb35c7f0>
2022-01-24 14:08:56,332 DEBUG on stmt: bool178 = global(bool: <class 'bool'>)
2022-01-24 14:08:56,332 DEBUG on stmt: $178pred = call bool178(invert.2, func=bool178, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
2022-01-24 14:08:56,332 DEBUG on stmt: branch $178pred, 180, 188
2022-01-24 14:08:56,332 DEBUG ==== SSA block rewrite pass on 180
2022-01-24 14:08:56,332 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb35c7f0>
2022-01-24 14:08:56,332 DEBUG on stmt: $const180.1 = const(float, 1.0)
2022-01-24 14:08:56,332 DEBUG on stmt: $180.3 = $const180.1 / r.2
2022-01-24 14:08:56,333 DEBUG on stmt: $180.4 = cast(value=$180.3)
2022-01-24 14:08:56,333 DEBUG on stmt: return $180.4
2022-01-24 14:08:56,333 DEBUG ==== SSA block rewrite pass on 188
2022-01-24 14:08:56,333 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb35c7f0>
2022-01-24 14:08:56,333 DEBUG on stmt: $188.2 = cast(value=r.2)
2022-01-24 14:08:56,333 DEBUG on stmt: return $188.2
2022-01-24 14:08:56,333 DEBUG Fix SSA violator on var a.1
2022-01-24 14:08:56,333 DEBUG ==== SSA block rewrite pass on 0
2022-01-24 14:08:56,333 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb348940>
2022-01-24 14:08:56,333 DEBUG on stmt: a = arg(0, name=a)
2022-01-24 14:08:56,333 DEBUG on stmt: b = arg(1, name=b)
2022-01-24 14:08:56,333 DEBUG on stmt: $0.1 = freevar(tp: float64)
2022-01-24 14:08:56,333 DEBUG on stmt: $const0.2 = const(int, 1)
2022-01-24 14:08:56,333 DEBUG on stmt: r = call $0.1($const0.2, func=$0.1, args=[Var($const0.2, numbers.py:217)], kws=(), vararg=None)
2022-01-24 14:08:56,333 DEBUG on stmt: $0.4 = freevar(tp: float64)
2022-01-24 14:08:56,333 DEBUG on stmt: a.1 = call $0.4(a, func=$0.4, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
2022-01-24 14:08:56,333 DEBUG first assign: a.1
2022-01-24 14:08:56,333 DEBUG replaced with: a.1 = call $0.4(a, func=$0.4, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
2022-01-24 14:08:56,333 DEBUG on stmt: $const0.8 = const(int, 0)
2022-01-24 14:08:56,333 DEBUG on stmt: $0.9 = b < $const0.8
2022-01-24 14:08:56,333 DEBUG on stmt: bool24 = global(bool: <class 'bool'>)
2022-01-24 14:08:56,333 DEBUG on stmt: $24pred = call bool24($0.9, func=bool24, args=(Var($0.9, numbers.py:219),), kws=(), vararg=None)
2022-01-24 14:08:56,333 DEBUG on stmt: branch $24pred, 26, 98
2022-01-24 14:08:56,334 DEBUG ==== SSA block rewrite pass on 26
2022-01-24 14:08:56,334 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb348940>
2022-01-24 14:08:56,334 DEBUG on stmt: invert = const(bool, True)
2022-01-24 14:08:56,334 DEBUG on stmt: exp = unary(fn=<built-in function neg>, value=b)
2022-01-24 14:08:56,334 DEBUG on stmt: $const26.5 = const(int, 0)
2022-01-24 14:08:56,334 DEBUG on stmt: $26.6 = exp < $const26.5
2022-01-24 14:08:56,334 DEBUG on stmt: bool42 = global(bool: <class 'bool'>)
2022-01-24 14:08:56,334 DEBUG on stmt: $42pred = call bool42($26.6, func=bool42, args=(Var($26.6, numbers.py:222),), kws=(), vararg=None)
2022-01-24 14:08:56,334 DEBUG on stmt: branch $42pred, 44, 48
2022-01-24 14:08:56,334 DEBUG ==== SSA block rewrite pass on 44
2022-01-24 14:08:56,334 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb348940>
2022-01-24 14:08:56,334 DEBUG on stmt: $44.1 = global(OverflowError: <class 'OverflowError'>)
2022-01-24 14:08:56,334 DEBUG on stmt: <static> raise <class 'OverflowError'>
2022-01-24 14:08:56,334 DEBUG ==== SSA block rewrite pass on 48
2022-01-24 14:08:56,334 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb348940>
2022-01-24 14:08:56,334 DEBUG on stmt: $48.1 = freevar(is_integer: False)
2022-01-24 14:08:56,334 DEBUG on stmt: bool50 = global(bool: <class 'bool'>)
2022-01-24 14:08:56,334 DEBUG on stmt: $50pred = call bool50($48.1, func=bool50, args=(Var($48.1, numbers.py:224),), kws=(), vararg=None)
2022-01-24 14:08:56,335 DEBUG on stmt: jump 106
2022-01-24 14:08:56,335 DEBUG ==== SSA block rewrite pass on 98
2022-01-24 14:08:56,335 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb348940>
2022-01-24 14:08:56,335 DEBUG on stmt: invert.1 = const(bool, False)
2022-01-24 14:08:56,335 DEBUG on stmt: exp.1 = b
2022-01-24 14:08:56,335 DEBUG on stmt: jump 106
2022-01-24 14:08:56,335 DEBUG ==== SSA block rewrite pass on 106
2022-01-24 14:08:56,335 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb348940>
2022-01-24 14:08:56,335 DEBUG on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
2022-01-24 14:08:56,335 DEBUG on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:220), Var(invert.1, numbers.py:233)], incoming_blocks=[48, 98])
2022-01-24 14:08:56,335 DEBUG on stmt: $const106.2 = const(int, 65536)
2022-01-24 14:08:56,335 DEBUG on stmt: $106.3 = exp.3 > $const106.2
2022-01-24 14:08:56,335 DEBUG on stmt: bool112 = global(bool: <class 'bool'>)
2022-01-24 14:08:56,335 DEBUG on stmt: $112pred = call bool112($106.3, func=bool112, args=(Var($106.3, numbers.py:235),), kws=(), vararg=None)
2022-01-24 14:08:56,335 DEBUG on stmt: branch $112pred, 114, 130
2022-01-24 14:08:56,336 DEBUG ==== SSA block rewrite pass on 114
2022-01-24 14:08:56,336 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb348940>
2022-01-24 14:08:56,336 DEBUG on stmt: $114.1 = global(math: <module 'math' from '/Users/wdiepeveen/anaconda3/envs/aspire_env/lib/python3.6/lib-dynload/math.cpython-36m-darwin.so'>)
2022-01-24 14:08:56,336 DEBUG on stmt: $114.2 = getattr(value=$114.1, attr=pow)
2022-01-24 14:08:56,336 DEBUG on stmt: $114.4 = global(float: <class 'float'>)
2022-01-24 14:08:56,336 DEBUG on stmt: $114.6 = call $114.4(b, func=$114.4, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
2022-01-24 14:08:56,336 DEBUG on stmt: $114.7 = call $114.2(a.1, $114.6, func=$114.2, args=[Var(a.1, numbers.py:218), Var($114.6, numbers.py:237)], kws=(), vararg=None)
2022-01-24 14:08:56,336 DEBUG on stmt: $114.8 = cast(value=$114.7)
2022-01-24 14:08:56,336 DEBUG on stmt: return $114.8
2022-01-24 14:08:56,336 DEBUG ==== SSA block rewrite pass on 130
2022-01-24 14:08:56,336 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb348940>
2022-01-24 14:08:56,336 DEBUG on stmt: jump 132
2022-01-24 14:08:56,336 DEBUG ==== SSA block rewrite pass on 132
2022-01-24 14:08:56,336 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb348940>
2022-01-24 14:08:56,337 DEBUG on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[130, 156])
2022-01-24 14:08:56,337 DEBUG on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:217), Var(r.3, numbers.py:240)], incoming_blocks=[130, 156])
2022-01-24 14:08:56,337 DEBUG on stmt: $const132.2 = const(int, 0)
2022-01-24 14:08:56,337 DEBUG on stmt: $132.3 = exp.4 != $const132.2
2022-01-24 14:08:56,337 DEBUG on stmt: bool138 = global(bool: <class 'bool'>)
2022-01-24 14:08:56,337 DEBUG on stmt: $138pred = call bool138($132.3, func=bool138, args=(Var($132.3, numbers.py:238),), kws=(), vararg=None)
2022-01-24 14:08:56,337 DEBUG on stmt: branch $138pred, 140, 174
2022-01-24 14:08:56,337 DEBUG ==== SSA block rewrite pass on 140
2022-01-24 14:08:56,337 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb348940>
2022-01-24 14:08:56,337 DEBUG on stmt: $const140.2 = const(int, 1)
2022-01-24 14:08:56,337 DEBUG on stmt: $140.3 = exp.4 & $const140.2
2022-01-24 14:08:56,337 DEBUG on stmt: bool146 = global(bool: <class 'bool'>)
2022-01-24 14:08:56,337 DEBUG on stmt: $146pred = call bool146($140.3, func=bool146, args=(Var($140.3, numbers.py:239),), kws=(), vararg=None)
2022-01-24 14:08:56,337 DEBUG on stmt: branch $146pred, 148, 156
2022-01-24 14:08:56,338 DEBUG ==== SSA block rewrite pass on 148
2022-01-24 14:08:56,338 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb348940>
2022-01-24 14:08:56,338 DEBUG on stmt: $148.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:56,338 DEBUG on stmt: r.1 = $148.3
2022-01-24 14:08:56,338 DEBUG on stmt: jump 156
2022-01-24 14:08:56,338 DEBUG ==== SSA block rewrite pass on 156
2022-01-24 14:08:56,338 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb348940>
2022-01-24 14:08:56,338 DEBUG on stmt: r.3 = phi(incoming_values=[Var(r.1, numbers.py:240), Var(r.2, numbers.py:240)], incoming_blocks=[148, 140])
2022-01-24 14:08:56,338 DEBUG on stmt: $const156.2 = const(int, 1)
2022-01-24 14:08:56,338 DEBUG on stmt: $156.3 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.2, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:56,338 DEBUG on stmt: exp.2 = $156.3
2022-01-24 14:08:56,338 DEBUG on stmt: $156.6 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:56,338 DEBUG on stmt: a.1 = $156.6
2022-01-24 14:08:56,338 DEBUG replaced with: a.1.1 = $156.6
2022-01-24 14:08:56,338 DEBUG on stmt: jump 132
2022-01-24 14:08:56,339 DEBUG ==== SSA block rewrite pass on 174
2022-01-24 14:08:56,339 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb348940>
2022-01-24 14:08:56,339 DEBUG on stmt: jump 176
2022-01-24 14:08:56,339 DEBUG ==== SSA block rewrite pass on 176
2022-01-24 14:08:56,339 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb348940>
2022-01-24 14:08:56,339 DEBUG on stmt: bool178 = global(bool: <class 'bool'>)
2022-01-24 14:08:56,339 DEBUG on stmt: $178pred = call bool178(invert.2, func=bool178, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
2022-01-24 14:08:56,339 DEBUG on stmt: branch $178pred, 180, 188
2022-01-24 14:08:56,339 DEBUG ==== SSA block rewrite pass on 180
2022-01-24 14:08:56,339 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb348940>
2022-01-24 14:08:56,339 DEBUG on stmt: $const180.1 = const(float, 1.0)
2022-01-24 14:08:56,339 DEBUG on stmt: $180.3 = $const180.1 / r.2
2022-01-24 14:08:56,339 DEBUG on stmt: $180.4 = cast(value=$180.3)
2022-01-24 14:08:56,339 DEBUG on stmt: return $180.4
2022-01-24 14:08:56,339 DEBUG ==== SSA block rewrite pass on 188
2022-01-24 14:08:56,339 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb348940>
2022-01-24 14:08:56,339 DEBUG on stmt: $188.2 = cast(value=r.2)
2022-01-24 14:08:56,339 DEBUG on stmt: return $188.2
2022-01-24 14:08:56,339 DEBUG Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f94eb348320>],
             156: [<numba.core.ir.Assign object at 0x7f94eb38d400>]})
2022-01-24 14:08:56,340 DEBUG ==== SSA block rewrite pass on 0
2022-01-24 14:08:56,340 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb37b978>
2022-01-24 14:08:56,340 DEBUG on stmt: a = arg(0, name=a)
2022-01-24 14:08:56,340 DEBUG on stmt: b = arg(1, name=b)
2022-01-24 14:08:56,340 DEBUG on stmt: $0.1 = freevar(tp: float64)
2022-01-24 14:08:56,340 DEBUG on stmt: $const0.2 = const(int, 1)
2022-01-24 14:08:56,340 DEBUG on stmt: r = call $0.1($const0.2, func=$0.1, args=[Var($const0.2, numbers.py:217)], kws=(), vararg=None)
2022-01-24 14:08:56,340 DEBUG on stmt: $0.4 = freevar(tp: float64)
2022-01-24 14:08:56,340 DEBUG on stmt: a.1 = call $0.4(a, func=$0.4, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
2022-01-24 14:08:56,340 DEBUG on stmt: $const0.8 = const(int, 0)
2022-01-24 14:08:56,340 DEBUG on stmt: $0.9 = b < $const0.8
2022-01-24 14:08:56,340 DEBUG on stmt: bool24 = global(bool: <class 'bool'>)
2022-01-24 14:08:56,340 DEBUG on stmt: $24pred = call bool24($0.9, func=bool24, args=(Var($0.9, numbers.py:219),), kws=(), vararg=None)
2022-01-24 14:08:56,340 DEBUG on stmt: branch $24pred, 26, 98
2022-01-24 14:08:56,340 DEBUG ==== SSA block rewrite pass on 26
2022-01-24 14:08:56,340 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb37b978>
2022-01-24 14:08:56,340 DEBUG on stmt: invert = const(bool, True)
2022-01-24 14:08:56,340 DEBUG on stmt: exp = unary(fn=<built-in function neg>, value=b)
2022-01-24 14:08:56,340 DEBUG on stmt: $const26.5 = const(int, 0)
2022-01-24 14:08:56,340 DEBUG on stmt: $26.6 = exp < $const26.5
2022-01-24 14:08:56,340 DEBUG on stmt: bool42 = global(bool: <class 'bool'>)
2022-01-24 14:08:56,341 DEBUG on stmt: $42pred = call bool42($26.6, func=bool42, args=(Var($26.6, numbers.py:222),), kws=(), vararg=None)
2022-01-24 14:08:56,341 DEBUG on stmt: branch $42pred, 44, 48
2022-01-24 14:08:56,341 DEBUG ==== SSA block rewrite pass on 44
2022-01-24 14:08:56,341 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb37b978>
2022-01-24 14:08:56,341 DEBUG on stmt: $44.1 = global(OverflowError: <class 'OverflowError'>)
2022-01-24 14:08:56,341 DEBUG on stmt: <static> raise <class 'OverflowError'>
2022-01-24 14:08:56,341 DEBUG ==== SSA block rewrite pass on 48
2022-01-24 14:08:56,341 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb37b978>
2022-01-24 14:08:56,341 DEBUG on stmt: $48.1 = freevar(is_integer: False)
2022-01-24 14:08:56,341 DEBUG on stmt: bool50 = global(bool: <class 'bool'>)
2022-01-24 14:08:56,341 DEBUG on stmt: $50pred = call bool50($48.1, func=bool50, args=(Var($48.1, numbers.py:224),), kws=(), vararg=None)
2022-01-24 14:08:56,341 DEBUG on stmt: jump 106
2022-01-24 14:08:56,341 DEBUG ==== SSA block rewrite pass on 98
2022-01-24 14:08:56,341 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb37b978>
2022-01-24 14:08:56,341 DEBUG on stmt: invert.1 = const(bool, False)
2022-01-24 14:08:56,341 DEBUG on stmt: exp.1 = b
2022-01-24 14:08:56,341 DEBUG on stmt: jump 106
2022-01-24 14:08:56,341 DEBUG ==== SSA block rewrite pass on 106
2022-01-24 14:08:56,341 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb37b978>
2022-01-24 14:08:56,341 DEBUG on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
2022-01-24 14:08:56,341 DEBUG on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:220), Var(invert.1, numbers.py:233)], incoming_blocks=[48, 98])
2022-01-24 14:08:56,341 DEBUG on stmt: $const106.2 = const(int, 65536)
2022-01-24 14:08:56,341 DEBUG on stmt: $106.3 = exp.3 > $const106.2
2022-01-24 14:08:56,341 DEBUG on stmt: bool112 = global(bool: <class 'bool'>)
2022-01-24 14:08:56,341 DEBUG on stmt: $112pred = call bool112($106.3, func=bool112, args=(Var($106.3, numbers.py:235),), kws=(), vararg=None)
2022-01-24 14:08:56,342 DEBUG on stmt: branch $112pred, 114, 130
2022-01-24 14:08:56,342 DEBUG ==== SSA block rewrite pass on 114
2022-01-24 14:08:56,342 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb37b978>
2022-01-24 14:08:56,342 DEBUG on stmt: $114.1 = global(math: <module 'math' from '/Users/wdiepeveen/anaconda3/envs/aspire_env/lib/python3.6/lib-dynload/math.cpython-36m-darwin.so'>)
2022-01-24 14:08:56,342 DEBUG on stmt: $114.2 = getattr(value=$114.1, attr=pow)
2022-01-24 14:08:56,342 DEBUG on stmt: $114.4 = global(float: <class 'float'>)
2022-01-24 14:08:56,342 DEBUG on stmt: $114.6 = call $114.4(b, func=$114.4, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
2022-01-24 14:08:56,342 DEBUG on stmt: $114.7 = call $114.2(a.1, $114.6, func=$114.2, args=[Var(a.1, numbers.py:218), Var($114.6, numbers.py:237)], kws=(), vararg=None)
2022-01-24 14:08:56,342 DEBUG find_def var='a.1' stmt=$114.7 = call $114.2(a.1, $114.6, func=$114.2, args=[Var(a.1, numbers.py:218), Var($114.6, numbers.py:237)], kws=(), vararg=None)
2022-01-24 14:08:56,342 DEBUG find_def_from_top label 114
2022-01-24 14:08:56,342 DEBUG idom 106 from label 114
2022-01-24 14:08:56,342 DEBUG find_def_from_bottom label 106
2022-01-24 14:08:56,343 DEBUG find_def_from_top label 106
2022-01-24 14:08:56,343 DEBUG idom 0 from label 106
2022-01-24 14:08:56,343 DEBUG find_def_from_bottom label 0
2022-01-24 14:08:56,343 DEBUG on stmt: $114.8 = cast(value=$114.7)
2022-01-24 14:08:56,343 DEBUG on stmt: return $114.8
2022-01-24 14:08:56,343 DEBUG ==== SSA block rewrite pass on 130
2022-01-24 14:08:56,343 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb37b978>
2022-01-24 14:08:56,343 DEBUG on stmt: jump 132
2022-01-24 14:08:56,343 DEBUG ==== SSA block rewrite pass on 132
2022-01-24 14:08:56,343 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb37b978>
2022-01-24 14:08:56,343 DEBUG on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[130, 156])
2022-01-24 14:08:56,343 DEBUG on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:217), Var(r.3, numbers.py:240)], incoming_blocks=[130, 156])
2022-01-24 14:08:56,343 DEBUG on stmt: $const132.2 = const(int, 0)
2022-01-24 14:08:56,343 DEBUG on stmt: $132.3 = exp.4 != $const132.2
2022-01-24 14:08:56,343 DEBUG on stmt: bool138 = global(bool: <class 'bool'>)
2022-01-24 14:08:56,343 DEBUG on stmt: $138pred = call bool138($132.3, func=bool138, args=(Var($132.3, numbers.py:238),), kws=(), vararg=None)
2022-01-24 14:08:56,343 DEBUG on stmt: branch $138pred, 140, 174
2022-01-24 14:08:56,343 DEBUG ==== SSA block rewrite pass on 140
2022-01-24 14:08:56,343 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb37b978>
2022-01-24 14:08:56,344 DEBUG on stmt: $const140.2 = const(int, 1)
2022-01-24 14:08:56,344 DEBUG on stmt: $140.3 = exp.4 & $const140.2
2022-01-24 14:08:56,344 DEBUG on stmt: bool146 = global(bool: <class 'bool'>)
2022-01-24 14:08:56,344 DEBUG on stmt: $146pred = call bool146($140.3, func=bool146, args=(Var($140.3, numbers.py:239),), kws=(), vararg=None)
2022-01-24 14:08:56,344 DEBUG on stmt: branch $146pred, 148, 156
2022-01-24 14:08:56,344 DEBUG ==== SSA block rewrite pass on 148
2022-01-24 14:08:56,344 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb37b978>
2022-01-24 14:08:56,344 DEBUG on stmt: $148.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:56,344 DEBUG find_def var='a.1' stmt=$148.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:56,344 DEBUG find_def_from_top label 148
2022-01-24 14:08:56,344 DEBUG idom 140 from label 148
2022-01-24 14:08:56,344 DEBUG find_def_from_bottom label 140
2022-01-24 14:08:56,344 DEBUG find_def_from_top label 140
2022-01-24 14:08:56,344 DEBUG idom 132 from label 140
2022-01-24 14:08:56,344 DEBUG find_def_from_bottom label 132
2022-01-24 14:08:56,345 DEBUG find_def_from_top label 132
2022-01-24 14:08:56,345 DEBUG insert phi node a.1.2 = phi(incoming_values=[], incoming_blocks=[]) at 132
2022-01-24 14:08:56,345 DEBUG find_def_from_bottom label 130
2022-01-24 14:08:56,345 DEBUG find_def_from_top label 130
2022-01-24 14:08:56,345 DEBUG idom 106 from label 130
2022-01-24 14:08:56,345 DEBUG find_def_from_bottom label 106
2022-01-24 14:08:56,345 DEBUG find_def_from_top label 106
2022-01-24 14:08:56,345 DEBUG idom 0 from label 106
2022-01-24 14:08:56,345 DEBUG find_def_from_bottom label 0
2022-01-24 14:08:56,345 DEBUG incoming_def a.1 = call $0.4(a, func=$0.4, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
2022-01-24 14:08:56,345 DEBUG find_def_from_bottom label 156
2022-01-24 14:08:56,345 DEBUG incoming_def a.1.1 = $156.6
2022-01-24 14:08:56,345 DEBUG replaced with: $148.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:56,345 DEBUG on stmt: r.1 = $148.3
2022-01-24 14:08:56,345 DEBUG on stmt: jump 156
2022-01-24 14:08:56,345 DEBUG ==== SSA block rewrite pass on 156
2022-01-24 14:08:56,345 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb37b978>
2022-01-24 14:08:56,346 DEBUG on stmt: r.3 = phi(incoming_values=[Var(r.1, numbers.py:240), Var(r.2, numbers.py:240)], incoming_blocks=[148, 140])
2022-01-24 14:08:56,346 DEBUG on stmt: $const156.2 = const(int, 1)
2022-01-24 14:08:56,346 DEBUG on stmt: $156.3 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.2, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:56,346 DEBUG on stmt: exp.2 = $156.3
2022-01-24 14:08:56,346 DEBUG on stmt: $156.6 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:56,346 DEBUG find_def var='a.1' stmt=$156.6 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:56,346 DEBUG find_def_from_top label 156
2022-01-24 14:08:56,346 DEBUG idom 140 from label 156
2022-01-24 14:08:56,346 DEBUG find_def_from_bottom label 140
2022-01-24 14:08:56,346 DEBUG find_def_from_top label 140
2022-01-24 14:08:56,346 DEBUG idom 132 from label 140
2022-01-24 14:08:56,346 DEBUG find_def_from_bottom label 132
2022-01-24 14:08:56,346 DEBUG replaced with: $156.6 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:56,346 DEBUG on stmt: a.1.1 = $156.6
2022-01-24 14:08:56,346 DEBUG on stmt: jump 132
2022-01-24 14:08:56,346 DEBUG ==== SSA block rewrite pass on 174
2022-01-24 14:08:56,346 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb37b978>
2022-01-24 14:08:56,346 DEBUG on stmt: jump 176
2022-01-24 14:08:56,346 DEBUG ==== SSA block rewrite pass on 176
2022-01-24 14:08:56,346 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb37b978>
2022-01-24 14:08:56,346 DEBUG on stmt: bool178 = global(bool: <class 'bool'>)
2022-01-24 14:08:56,346 DEBUG on stmt: $178pred = call bool178(invert.2, func=bool178, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
2022-01-24 14:08:56,346 DEBUG on stmt: branch $178pred, 180, 188
2022-01-24 14:08:56,346 DEBUG ==== SSA block rewrite pass on 180
2022-01-24 14:08:56,346 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb37b978>
2022-01-24 14:08:56,346 DEBUG on stmt: $const180.1 = const(float, 1.0)
2022-01-24 14:08:56,347 DEBUG on stmt: $180.3 = $const180.1 / r.2
2022-01-24 14:08:56,347 DEBUG on stmt: $180.4 = cast(value=$180.3)
2022-01-24 14:08:56,347 DEBUG on stmt: return $180.4
2022-01-24 14:08:56,347 DEBUG ==== SSA block rewrite pass on 188
2022-01-24 14:08:56,347 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb37b978>
2022-01-24 14:08:56,347 DEBUG on stmt: $188.2 = cast(value=r.2)
2022-01-24 14:08:56,347 DEBUG on stmt: return $188.2
2022-01-24 14:08:56,584 DEBUG label 0:
    q = arg(0, name=q)                       ['q']
    qout = arg(1, name=qout)                 ['qout']
    $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$0.1']
    $0.2 = getattr(value=$0.1, attr=sqrt)    ['$0.1', '$0.2']
    $const0.4 = const(int, 1)                ['$const0.4']
    $0.5 = getitem(value=q, index=$const0.4, fn=<built-in function getitem>) ['$0.5', '$const0.4', 'q']
    $const0.6 = const(int, 2)                ['$const0.6']
    $0.7 = $0.5 ** $const0.6                 ['$0.5', '$0.7', '$const0.6']
    $const0.9 = const(int, 2)                ['$const0.9']
    $0.10 = getitem(value=q, index=$const0.9, fn=<built-in function getitem>) ['$0.10', '$const0.9', 'q']
    $const0.11 = const(int, 2)               ['$const0.11']
    $0.12 = $0.10 ** $const0.11              ['$0.10', '$0.12', '$const0.11']
    $0.13 = $0.7 + $0.12                     ['$0.12', '$0.13', '$0.7']
    $const0.15 = const(int, 3)               ['$const0.15']
    $0.16 = getitem(value=q, index=$const0.15, fn=<built-in function getitem>) ['$0.16', '$const0.15', 'q']
    $const0.17 = const(int, 2)               ['$const0.17']
    $0.18 = $0.16 ** $const0.17              ['$0.16', '$0.18', '$const0.17']
    $0.19 = $0.13 + $0.18                    ['$0.13', '$0.18', '$0.19']
    b = call $0.2($0.19, func=$0.2, args=[Var($0.19, algebra.py:227)], kws=(), vararg=None) ['$0.19', '$0.2', 'b']
    $0.22 = global(_quaternion_resolution: 1.0000000000000002e-14) ['$0.22']
    $0.23 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$0.23']
    $0.24 = getattr(value=$0.23, attr=abs)   ['$0.23', '$0.24']
    $const0.26 = const(int, 0)               ['$const0.26']
    $0.27 = getitem(value=q, index=$const0.26, fn=<built-in function getitem>) ['$0.27', '$const0.26', 'q']
    $0.28 = call $0.24($0.27, func=$0.24, args=[Var($0.27, algebra.py:228)], kws=(), vararg=None) ['$0.24', '$0.27', '$0.28']
    $0.29 = $0.22 * $0.28                    ['$0.22', '$0.28', '$0.29']
    $0.30 = b <= $0.29                       ['$0.29', '$0.30', 'b']
    bool64 = global(bool: <class 'bool'>)    ['bool64']
    $64pred = call bool64($0.30, func=bool64, args=(Var($0.30, algebra.py:228),), kws=(), vararg=None) ['$0.30', '$64pred', 'bool64']
    branch $64pred, 66, 228                  ['$64pred']
label 66:
    $const66.2 = const(int, 0)               ['$const66.2']
    $66.3 = getitem(value=q, index=$const66.2, fn=<built-in function getitem>) ['$66.3', '$const66.2', 'q']
    $const66.4 = const(float, 0.0)           ['$const66.4']
    $66.5 = $66.3 < $const66.4               ['$66.3', '$66.5', '$const66.4']
    bool76 = global(bool: <class 'bool'>)    ['bool76']
    $76pred = call bool76($66.5, func=bool76, args=(Var($66.5, algebra.py:229),), kws=(), vararg=None) ['$66.5', '$76pred', 'bool76']
    branch $76pred, 78, 184                  ['$76pred']
label 78:
    $78.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$78.1']
    $78.2 = getattr(value=$78.1, attr=abs)   ['$78.1', '$78.2']
    $const78.4 = const(int, 0)               ['$const78.4']
    $78.5 = getitem(value=q, index=$const78.4, fn=<built-in function getitem>) ['$78.5', '$const78.4', 'q']
    $const78.6 = const(int, 1)               ['$const78.6']
    $78.7 = $78.5 + $const78.6               ['$78.5', '$78.7', '$const78.6']
    $78.8 = call $78.2($78.7, func=$78.2, args=[Var($78.7, algebra.py:230)], kws=(), vararg=None) ['$78.2', '$78.7', '$78.8']
    $78.9 = global(_quaternion_resolution: 1.0000000000000002e-14) ['$78.9']
    $78.10 = $78.8 > $78.9                   ['$78.10', '$78.8', '$78.9']
    bool98 = global(bool: <class 'bool'>)    ['bool98']
    $98pred = call bool98($78.10, func=bool98, args=(Var($78.10, algebra.py:230),), kws=(), vararg=None) ['$78.10', '$98pred', 'bool98']
    branch $98pred, 100, 148                 ['$98pred']
label 100:
    $100.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$100.1']
    $100.2 = getattr(value=$100.1, attr=log) ['$100.1', '$100.2']
    $const100.4 = const(int, 0)              ['$const100.4']
    $100.5 = getitem(value=q, index=$const100.4, fn=<built-in function getitem>) ['$100.5', '$const100.4', 'q']
    $100.6 = unary(fn=<built-in function neg>, value=$100.5) ['$100.5', '$100.6']
    $100.7 = call $100.2($100.6, func=$100.2, args=[Var($100.6, algebra.py:231)], kws=(), vararg=None) ['$100.2', '$100.6', '$100.7']
    $const100.9 = const(int, 0)              ['$const100.9']
    qout[$const100.9] = $100.7               ['$100.7', '$const100.9', 'qout']
    $100.10 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$100.10']
    $100.11 = getattr(value=$100.10, attr=pi) ['$100.10', '$100.11']
    $const100.13 = const(int, 1)             ['$const100.13']
    qout[$const100.13] = $100.11             ['$100.11', '$const100.13', 'qout']
    $const100.14 = const(float, 0.0)         ['$const100.14']
    $const100.16 = const(int, 2)             ['$const100.16']
    qout[$const100.16] = $const100.14        ['$const100.14', '$const100.16', 'qout']
    $const100.17 = const(float, 0.0)         ['$const100.17']
    $const100.19 = const(int, 3)             ['$const100.19']
    qout[$const100.19] = $const100.17        ['$const100.17', '$const100.19', 'qout']
    jump 226                                 []
label 148:
    $const148.1 = const(float, 0.0)          ['$const148.1']
    $const148.3 = const(int, 0)              ['$const148.3']
    qout[$const148.3] = $const148.1          ['$const148.1', '$const148.3', 'qout']
    $148.4 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$148.4']
    $148.5 = getattr(value=$148.4, attr=pi)  ['$148.4', '$148.5']
    $const148.7 = const(int, 1)              ['$const148.7']
    qout[$const148.7] = $148.5               ['$148.5', '$const148.7', 'qout']
    $const148.8 = const(float, 0.0)          ['$const148.8']
    $const148.10 = const(int, 2)             ['$const148.10']
    qout[$const148.10] = $const148.8         ['$const148.10', '$const148.8', 'qout']
    $const148.11 = const(float, 0.0)         ['$const148.11']
    $const148.13 = const(int, 3)             ['$const148.13']
    qout[$const148.13] = $const148.11        ['$const148.11', '$const148.13', 'qout']
    jump 226                                 []
label 184:
    $184.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$184.1']
    $184.2 = getattr(value=$184.1, attr=log) ['$184.1', '$184.2']
    $const184.4 = const(int, 0)              ['$const184.4']
    $184.5 = getitem(value=q, index=$const184.4, fn=<built-in function getitem>) ['$184.5', '$const184.4', 'q']
    $184.6 = call $184.2($184.5, func=$184.2, args=[Var($184.5, algebra.py:241)], kws=(), vararg=None) ['$184.2', '$184.5', '$184.6']
    $const184.8 = const(int, 0)              ['$const184.8']
    qout[$const184.8] = $184.6               ['$184.6', '$const184.8', 'qout']
    $const184.9 = const(float, 0.0)          ['$const184.9']
    $const184.11 = const(int, 1)             ['$const184.11']
    qout[$const184.11] = $const184.9         ['$const184.11', '$const184.9', 'qout']
    $const184.12 = const(float, 0.0)         ['$const184.12']
    $const184.14 = const(int, 2)             ['$const184.14']
    qout[$const184.14] = $const184.12        ['$const184.12', '$const184.14', 'qout']
    $const184.15 = const(float, 0.0)         ['$const184.15']
    $const184.17 = const(int, 3)             ['$const184.17']
    qout[$const184.17] = $const184.15        ['$const184.15', '$const184.17', 'qout']
    jump 226                                 []
label 226:
    jump 338                                 []
label 228:
    $228.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$228.1']
    $228.2 = getattr(value=$228.1, attr=arctan2) ['$228.1', '$228.2']
    $const228.5 = const(int, 0)              ['$const228.5']
    $228.6 = getitem(value=q, index=$const228.5, fn=<built-in function getitem>) ['$228.6', '$const228.5', 'q']
    v = call $228.2(b, $228.6, func=$228.2, args=[Var(b, algebra.py:227), Var($228.6, algebra.py:246)], kws=(), vararg=None) ['$228.2', '$228.6', 'b', 'v']
    f = v / b                                ['b', 'f', 'v']
    $228.11 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$228.11']
    $228.12 = getattr(value=$228.11, attr=log) ['$228.11', '$228.12']
    $const228.14 = const(int, 0)             ['$const228.14']
    $228.15 = getitem(value=q, index=$const228.14, fn=<built-in function getitem>) ['$228.15', '$const228.14', 'q']
    $const228.17 = const(int, 0)             ['$const228.17']
    $228.18 = getitem(value=q, index=$const228.17, fn=<built-in function getitem>) ['$228.18', '$const228.17', 'q']
    $228.19 = $228.15 * $228.18              ['$228.15', '$228.18', '$228.19']
    $228.22 = b * b                          ['$228.22', 'b', 'b']
    $228.23 = $228.19 + $228.22              ['$228.19', '$228.22', '$228.23']
    $228.24 = call $228.12($228.23, func=$228.12, args=[Var($228.23, algebra.py:248)], kws=(), vararg=None) ['$228.12', '$228.23', '$228.24']
    $const228.25 = const(float, 2.0)         ['$const228.25']
    $228.26 = $228.24 / $const228.25         ['$228.24', '$228.26', '$const228.25']
    $const228.28 = const(int, 0)             ['$const228.28']
    qout[$const228.28] = $228.26             ['$228.26', '$const228.28', 'qout']
    $const228.31 = const(int, 1)             ['$const228.31']
    $228.32 = getitem(value=q, index=$const228.31, fn=<built-in function getitem>) ['$228.32', '$const228.31', 'q']
    $228.33 = f * $228.32                    ['$228.32', '$228.33', 'f']
    $const228.35 = const(int, 1)             ['$const228.35']
    qout[$const228.35] = $228.33             ['$228.33', '$const228.35', 'qout']
    $const228.38 = const(int, 2)             ['$const228.38']
    $228.39 = getitem(value=q, index=$const228.38, fn=<built-in function getitem>) ['$228.39', '$const228.38', 'q']
    $228.40 = f * $228.39                    ['$228.39', '$228.40', 'f']
    $const228.42 = const(int, 2)             ['$const228.42']
    qout[$const228.42] = $228.40             ['$228.40', '$const228.42', 'qout']
    $const228.45 = const(int, 3)             ['$const228.45']
    $228.46 = getitem(value=q, index=$const228.45, fn=<built-in function getitem>) ['$228.46', '$const228.45', 'q']
    $228.47 = f * $228.46                    ['$228.46', '$228.47', 'f']
    $const228.49 = const(int, 3)             ['$const228.49']
    qout[$const228.49] = $228.47             ['$228.47', '$const228.49', 'qout']
    jump 338                                 []
label 338:
    $const338.1 = const(NoneType, None)      ['$const338.1']
    $338.2 = cast(value=$const338.1)         ['$338.2', '$const338.1']
    return $338.2                            ['$338.2']

2022-01-24 14:08:56,597 DEBUG ==== SSA block analysis pass on 0
2022-01-24 14:08:56,597 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb2c9978>
2022-01-24 14:08:56,597 DEBUG on stmt: q = arg(0, name=q)
2022-01-24 14:08:56,597 DEBUG on stmt: qout = arg(1, name=qout)
2022-01-24 14:08:56,597 DEBUG on stmt: $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:08:56,597 DEBUG on stmt: $0.2 = getattr(value=$0.1, attr=sqrt)
2022-01-24 14:08:56,597 DEBUG on stmt: $const0.4 = const(int, 1)
2022-01-24 14:08:56,597 DEBUG on stmt: $0.5 = static_getitem(value=q, index=1, index_var=$const0.4, fn=<built-in function getitem>)
2022-01-24 14:08:56,598 DEBUG on stmt: $const0.6 = const(int, 2)
2022-01-24 14:08:56,598 DEBUG on stmt: $0.7 = $0.5 ** $const0.6
2022-01-24 14:08:56,598 DEBUG on stmt: $const0.9 = const(int, 2)
2022-01-24 14:08:56,598 DEBUG on stmt: $0.10 = static_getitem(value=q, index=2, index_var=$const0.9, fn=<built-in function getitem>)
2022-01-24 14:08:56,598 DEBUG on stmt: $const0.11 = const(int, 2)
2022-01-24 14:08:56,598 DEBUG on stmt: $0.12 = $0.10 ** $const0.11
2022-01-24 14:08:56,598 DEBUG on stmt: $0.13 = $0.7 + $0.12
2022-01-24 14:08:56,598 DEBUG on stmt: $const0.15 = const(int, 3)
2022-01-24 14:08:56,598 DEBUG on stmt: $0.16 = static_getitem(value=q, index=3, index_var=$const0.15, fn=<built-in function getitem>)
2022-01-24 14:08:56,598 DEBUG on stmt: $const0.17 = const(int, 2)
2022-01-24 14:08:56,598 DEBUG on stmt: $0.18 = $0.16 ** $const0.17
2022-01-24 14:08:56,598 DEBUG on stmt: $0.19 = $0.13 + $0.18
2022-01-24 14:08:56,598 DEBUG on stmt: b = call $0.2($0.19, func=$0.2, args=[Var($0.19, algebra.py:227)], kws=(), vararg=None)
2022-01-24 14:08:56,598 DEBUG on stmt: $0.22 = global(_quaternion_resolution: 1.0000000000000002e-14)
2022-01-24 14:08:56,598 DEBUG on stmt: $0.23 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:08:56,598 DEBUG on stmt: $0.24 = getattr(value=$0.23, attr=abs)
2022-01-24 14:08:56,598 DEBUG on stmt: $const0.26 = const(int, 0)
2022-01-24 14:08:56,598 DEBUG on stmt: $0.27 = static_getitem(value=q, index=0, index_var=$const0.26, fn=<built-in function getitem>)
2022-01-24 14:08:56,598 DEBUG on stmt: $0.28 = call $0.24($0.27, func=$0.24, args=[Var($0.27, algebra.py:228)], kws=(), vararg=None)
2022-01-24 14:08:56,598 DEBUG on stmt: $0.29 = $0.22 * $0.28
2022-01-24 14:08:56,598 DEBUG on stmt: $0.30 = b <= $0.29
2022-01-24 14:08:56,598 DEBUG on stmt: bool64 = global(bool: <class 'bool'>)
2022-01-24 14:08:56,598 DEBUG on stmt: $64pred = call bool64($0.30, func=bool64, args=(Var($0.30, algebra.py:228),), kws=(), vararg=None)
2022-01-24 14:08:56,598 DEBUG on stmt: branch $64pred, 66, 228
2022-01-24 14:08:56,598 DEBUG ==== SSA block analysis pass on 66
2022-01-24 14:08:56,598 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb2c9978>
2022-01-24 14:08:56,599 DEBUG on stmt: $const66.2 = const(int, 0)
2022-01-24 14:08:56,599 DEBUG on stmt: $66.3 = static_getitem(value=q, index=0, index_var=$const66.2, fn=<built-in function getitem>)
2022-01-24 14:08:56,599 DEBUG on stmt: $const66.4 = const(float, 0.0)
2022-01-24 14:08:56,599 DEBUG on stmt: $66.5 = $66.3 < $const66.4
2022-01-24 14:08:56,599 DEBUG on stmt: bool76 = global(bool: <class 'bool'>)
2022-01-24 14:08:56,599 DEBUG on stmt: $76pred = call bool76($66.5, func=bool76, args=(Var($66.5, algebra.py:229),), kws=(), vararg=None)
2022-01-24 14:08:56,599 DEBUG on stmt: branch $76pred, 78, 184
2022-01-24 14:08:56,599 DEBUG ==== SSA block analysis pass on 78
2022-01-24 14:08:56,599 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb2c9978>
2022-01-24 14:08:56,599 DEBUG on stmt: $78.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:08:56,599 DEBUG on stmt: $78.2 = getattr(value=$78.1, attr=abs)
2022-01-24 14:08:56,599 DEBUG on stmt: $const78.4 = const(int, 0)
2022-01-24 14:08:56,599 DEBUG on stmt: $78.5 = static_getitem(value=q, index=0, index_var=$const78.4, fn=<built-in function getitem>)
2022-01-24 14:08:56,599 DEBUG on stmt: $const78.6 = const(int, 1)
2022-01-24 14:08:56,599 DEBUG on stmt: $78.7 = $78.5 + $const78.6
2022-01-24 14:08:56,599 DEBUG on stmt: $78.8 = call $78.2($78.7, func=$78.2, args=[Var($78.7, algebra.py:230)], kws=(), vararg=None)
2022-01-24 14:08:56,599 DEBUG on stmt: $78.9 = global(_quaternion_resolution: 1.0000000000000002e-14)
2022-01-24 14:08:56,599 DEBUG on stmt: $78.10 = $78.8 > $78.9
2022-01-24 14:08:56,599 DEBUG on stmt: bool98 = global(bool: <class 'bool'>)
2022-01-24 14:08:56,599 DEBUG on stmt: $98pred = call bool98($78.10, func=bool98, args=(Var($78.10, algebra.py:230),), kws=(), vararg=None)
2022-01-24 14:08:56,599 DEBUG on stmt: branch $98pred, 100, 148
2022-01-24 14:08:56,599 DEBUG ==== SSA block analysis pass on 100
2022-01-24 14:08:56,600 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb2c9978>
2022-01-24 14:08:56,600 DEBUG on stmt: $100.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:08:56,600 DEBUG on stmt: $100.2 = getattr(value=$100.1, attr=log)
2022-01-24 14:08:56,600 DEBUG on stmt: $const100.4 = const(int, 0)
2022-01-24 14:08:56,600 DEBUG on stmt: $100.5 = static_getitem(value=q, index=0, index_var=$const100.4, fn=<built-in function getitem>)
2022-01-24 14:08:56,600 DEBUG on stmt: $100.6 = unary(fn=<built-in function neg>, value=$100.5)
2022-01-24 14:08:56,600 DEBUG on stmt: $100.7 = call $100.2($100.6, func=$100.2, args=[Var($100.6, algebra.py:231)], kws=(), vararg=None)
2022-01-24 14:08:56,600 DEBUG on stmt: $const100.9 = const(int, 0)
2022-01-24 14:08:56,600 DEBUG on stmt: qout[0] = $100.7
2022-01-24 14:08:56,600 DEBUG on stmt: $100.10 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:08:56,600 DEBUG on stmt: $100.11 = getattr(value=$100.10, attr=pi)
2022-01-24 14:08:56,600 DEBUG on stmt: $const100.13 = const(int, 1)
2022-01-24 14:08:56,600 DEBUG on stmt: qout[1] = $100.11
2022-01-24 14:08:56,600 DEBUG on stmt: $const100.14 = const(float, 0.0)
2022-01-24 14:08:56,600 DEBUG on stmt: $const100.16 = const(int, 2)
2022-01-24 14:08:56,600 DEBUG on stmt: qout[2] = $const100.14
2022-01-24 14:08:56,600 DEBUG on stmt: $const100.17 = const(float, 0.0)
2022-01-24 14:08:56,600 DEBUG on stmt: $const100.19 = const(int, 3)
2022-01-24 14:08:56,600 DEBUG on stmt: qout[3] = $const100.17
2022-01-24 14:08:56,600 DEBUG on stmt: jump 226
2022-01-24 14:08:56,600 DEBUG ==== SSA block analysis pass on 148
2022-01-24 14:08:56,600 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb2c9978>
2022-01-24 14:08:56,600 DEBUG on stmt: $const148.1 = const(float, 0.0)
2022-01-24 14:08:56,600 DEBUG on stmt: $const148.3 = const(int, 0)
2022-01-24 14:08:56,600 DEBUG on stmt: qout[0] = $const148.1
2022-01-24 14:08:56,600 DEBUG on stmt: $148.4 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:08:56,600 DEBUG on stmt: $148.5 = getattr(value=$148.4, attr=pi)
2022-01-24 14:08:56,600 DEBUG on stmt: $const148.7 = const(int, 1)
2022-01-24 14:08:56,601 DEBUG on stmt: qout[1] = $148.5
2022-01-24 14:08:56,601 DEBUG on stmt: $const148.8 = const(float, 0.0)
2022-01-24 14:08:56,601 DEBUG on stmt: $const148.10 = const(int, 2)
2022-01-24 14:08:56,601 DEBUG on stmt: qout[2] = $const148.8
2022-01-24 14:08:56,601 DEBUG on stmt: $const148.11 = const(float, 0.0)
2022-01-24 14:08:56,601 DEBUG on stmt: $const148.13 = const(int, 3)
2022-01-24 14:08:56,601 DEBUG on stmt: qout[3] = $const148.11
2022-01-24 14:08:56,601 DEBUG on stmt: jump 226
2022-01-24 14:08:56,601 DEBUG ==== SSA block analysis pass on 184
2022-01-24 14:08:56,601 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb2c9978>
2022-01-24 14:08:56,601 DEBUG on stmt: $184.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:08:56,601 DEBUG on stmt: $184.2 = getattr(value=$184.1, attr=log)
2022-01-24 14:08:56,601 DEBUG on stmt: $const184.4 = const(int, 0)
2022-01-24 14:08:56,601 DEBUG on stmt: $184.5 = static_getitem(value=q, index=0, index_var=$const184.4, fn=<built-in function getitem>)
2022-01-24 14:08:56,601 DEBUG on stmt: $184.6 = call $184.2($184.5, func=$184.2, args=[Var($184.5, algebra.py:241)], kws=(), vararg=None)
2022-01-24 14:08:56,601 DEBUG on stmt: $const184.8 = const(int, 0)
2022-01-24 14:08:56,601 DEBUG on stmt: qout[0] = $184.6
2022-01-24 14:08:56,601 DEBUG on stmt: $const184.9 = const(float, 0.0)
2022-01-24 14:08:56,601 DEBUG on stmt: $const184.11 = const(int, 1)
2022-01-24 14:08:56,601 DEBUG on stmt: qout[1] = $const184.9
2022-01-24 14:08:56,601 DEBUG on stmt: $const184.12 = const(float, 0.0)
2022-01-24 14:08:56,601 DEBUG on stmt: $const184.14 = const(int, 2)
2022-01-24 14:08:56,601 DEBUG on stmt: qout[2] = $const184.12
2022-01-24 14:08:56,601 DEBUG on stmt: $const184.15 = const(float, 0.0)
2022-01-24 14:08:56,601 DEBUG on stmt: $const184.17 = const(int, 3)
2022-01-24 14:08:56,601 DEBUG on stmt: qout[3] = $const184.15
2022-01-24 14:08:56,601 DEBUG on stmt: jump 226
2022-01-24 14:08:56,601 DEBUG ==== SSA block analysis pass on 226
2022-01-24 14:08:56,601 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb2c9978>
2022-01-24 14:08:56,602 DEBUG on stmt: jump 338
2022-01-24 14:08:56,602 DEBUG ==== SSA block analysis pass on 228
2022-01-24 14:08:56,602 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb2c9978>
2022-01-24 14:08:56,602 DEBUG on stmt: $228.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:08:56,602 DEBUG on stmt: $228.2 = getattr(value=$228.1, attr=arctan2)
2022-01-24 14:08:56,602 DEBUG on stmt: $const228.5 = const(int, 0)
2022-01-24 14:08:56,602 DEBUG on stmt: $228.6 = static_getitem(value=q, index=0, index_var=$const228.5, fn=<built-in function getitem>)
2022-01-24 14:08:56,602 DEBUG on stmt: v = call $228.2(b, $228.6, func=$228.2, args=[Var(b, algebra.py:227), Var($228.6, algebra.py:246)], kws=(), vararg=None)
2022-01-24 14:08:56,602 DEBUG on stmt: f = v / b
2022-01-24 14:08:56,602 DEBUG on stmt: $228.11 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:08:56,602 DEBUG on stmt: $228.12 = getattr(value=$228.11, attr=log)
2022-01-24 14:08:56,602 DEBUG on stmt: $const228.14 = const(int, 0)
2022-01-24 14:08:56,602 DEBUG on stmt: $228.15 = static_getitem(value=q, index=0, index_var=$const228.14, fn=<built-in function getitem>)
2022-01-24 14:08:56,602 DEBUG on stmt: $const228.17 = const(int, 0)
2022-01-24 14:08:56,602 DEBUG on stmt: $228.18 = static_getitem(value=q, index=0, index_var=$const228.17, fn=<built-in function getitem>)
2022-01-24 14:08:56,602 DEBUG on stmt: $228.19 = $228.15 * $228.18
2022-01-24 14:08:56,602 DEBUG on stmt: $228.22 = b * b
2022-01-24 14:08:56,602 DEBUG on stmt: $228.23 = $228.19 + $228.22
2022-01-24 14:08:56,602 DEBUG on stmt: $228.24 = call $228.12($228.23, func=$228.12, args=[Var($228.23, algebra.py:248)], kws=(), vararg=None)
2022-01-24 14:08:56,602 DEBUG on stmt: $const228.25 = const(float, 2.0)
2022-01-24 14:08:56,602 DEBUG on stmt: $228.26 = $228.24 / $const228.25
2022-01-24 14:08:56,602 DEBUG on stmt: $const228.28 = const(int, 0)
2022-01-24 14:08:56,602 DEBUG on stmt: qout[0] = $228.26
2022-01-24 14:08:56,602 DEBUG on stmt: $const228.31 = const(int, 1)
2022-01-24 14:08:56,602 DEBUG on stmt: $228.32 = static_getitem(value=q, index=1, index_var=$const228.31, fn=<built-in function getitem>)
2022-01-24 14:08:56,602 DEBUG on stmt: $228.33 = f * $228.32
2022-01-24 14:08:56,603 DEBUG on stmt: $const228.35 = const(int, 1)
2022-01-24 14:08:56,603 DEBUG on stmt: qout[1] = $228.33
2022-01-24 14:08:56,603 DEBUG on stmt: $const228.38 = const(int, 2)
2022-01-24 14:08:56,603 DEBUG on stmt: $228.39 = static_getitem(value=q, index=2, index_var=$const228.38, fn=<built-in function getitem>)
2022-01-24 14:08:56,603 DEBUG on stmt: $228.40 = f * $228.39
2022-01-24 14:08:56,603 DEBUG on stmt: $const228.42 = const(int, 2)
2022-01-24 14:08:56,603 DEBUG on stmt: qout[2] = $228.40
2022-01-24 14:08:56,603 DEBUG on stmt: $const228.45 = const(int, 3)
2022-01-24 14:08:56,603 DEBUG on stmt: $228.46 = static_getitem(value=q, index=3, index_var=$const228.45, fn=<built-in function getitem>)
2022-01-24 14:08:56,603 DEBUG on stmt: $228.47 = f * $228.46
2022-01-24 14:08:56,603 DEBUG on stmt: $const228.49 = const(int, 3)
2022-01-24 14:08:56,603 DEBUG on stmt: qout[3] = $228.47
2022-01-24 14:08:56,603 DEBUG on stmt: jump 338
2022-01-24 14:08:56,603 DEBUG ==== SSA block analysis pass on 338
2022-01-24 14:08:56,603 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb2c9978>
2022-01-24 14:08:56,603 DEBUG on stmt: $const338.1 = const(NoneType, None)
2022-01-24 14:08:56,603 DEBUG on stmt: $338.2 = cast(value=$const338.1)
2022-01-24 14:08:56,603 DEBUG on stmt: return $338.2
2022-01-24 14:08:56,604 DEBUG defs defaultdict(<class 'list'>,
            {'$0.1': [<numba.core.ir.Assign object at 0x7f94eb2c0f98>],
             '$0.10': [<numba.core.ir.Assign object at 0x7f94eb74eeb8>],
             '$0.12': [<numba.core.ir.Assign object at 0x7f94eb30a470>],
             '$0.13': [<numba.core.ir.Assign object at 0x7f94eb30a550>],
             '$0.16': [<numba.core.ir.Assign object at 0x7f94eb74ef28>],
             '$0.18': [<numba.core.ir.Assign object at 0x7f94eb30a978>],
             '$0.19': [<numba.core.ir.Assign object at 0x7f94eb30aa58>],
             '$0.2': [<numba.core.ir.Assign object at 0x7f94eb2a4748>],
             '$0.22': [<numba.core.ir.Assign object at 0x7f94eb30aef0>],
             '$0.23': [<numba.core.ir.Assign object at 0x7f94eb70d048>],
             '$0.24': [<numba.core.ir.Assign object at 0x7f94eb71c128>],
             '$0.27': [<numba.core.ir.Assign object at 0x7f94eb74ef98>],
             '$0.28': [<numba.core.ir.Assign object at 0x7f94eb7205f8>],
             '$0.29': [<numba.core.ir.Assign object at 0x7f94eb7206d8>],
             '$0.30': [<numba.core.ir.Assign object at 0x7f94eb7207b8>],
             '$0.5': [<numba.core.ir.Assign object at 0x7f94eb74ee48>],
             '$0.7': [<numba.core.ir.Assign object at 0x7f94eb30a048>],
             '$100.1': [<numba.core.ir.Assign object at 0x7f94eb737ba8>],
             '$100.10': [<numba.core.ir.Assign object at 0x7f94eb73a3c8>],
             '$100.11': [<numba.core.ir.Assign object at 0x7f94eb73a4a8>],
             '$100.2': [<numba.core.ir.Assign object at 0x7f94eb737c88>],
             '$100.5': [<numba.core.ir.Assign object at 0x7f94eb7418d0>],
             '$100.6': [<numba.core.ir.Assign object at 0x7f94eb737fd0>],
             '$100.7': [<numba.core.ir.Assign object at 0x7f94eb73a0f0>],
             '$148.4': [<numba.core.ir.Assign object at 0x7f94eb73afd0>],
             '$148.5': [<numba.core.ir.Assign object at 0x7f94eb73d0f0>],
             '$184.1': [<numba.core.ir.Assign object at 0x7f94eb73d978>],
             '$184.2': [<numba.core.ir.Assign object at 0x7f94eb73da58>],
             '$184.5': [<numba.core.ir.Assign object at 0x7f94eb2c94e0>],
             '$184.6': [<numba.core.ir.Assign object at 0x7f94eb73dda0>],
             '$228.1': [<numba.core.ir.Assign object at 0x7f94eb7419b0>],
             '$228.11': [<numba.core.ir.Assign object at 0x7f94eb745320>],
             '$228.12': [<numba.core.ir.Assign object at 0x7f94eb745400>],
             '$228.15': [<numba.core.ir.Assign object at 0x7f94eb2d5550>],
             '$228.18': [<numba.core.ir.Assign object at 0x7f94eb2d1748>],
             '$228.19': [<numba.core.ir.Assign object at 0x7f94eb7459b0>],
             '$228.2': [<numba.core.ir.Assign object at 0x7f94eb741a90>],
             '$228.22': [<numba.core.ir.Assign object at 0x7f94eb745be0>],
             '$228.23': [<numba.core.ir.Assign object at 0x7f94eb745cc0>],
             '$228.24': [<numba.core.ir.Assign object at 0x7f94eb745da0>],
             '$228.26': [<numba.core.ir.Assign object at 0x7f94eb745f60>],
             '$228.32': [<numba.core.ir.Assign object at 0x7f94eb2d17b8>],
             '$228.33': [<numba.core.ir.Assign object at 0x7f94eb749588>],
             '$228.39': [<numba.core.ir.Assign object at 0x7f94eb2c9278>],
             '$228.40': [<numba.core.ir.Assign object at 0x7f94eb749b70>],
             '$228.46': [<numba.core.ir.Assign object at 0x7f94eb2c92e8>],
             '$228.47': [<numba.core.ir.Assign object at 0x7f94eb74e198>],
             '$228.6': [<numba.core.ir.Assign object at 0x7f94eb300668>],
             '$338.2': [<numba.core.ir.Assign object at 0x7f94eb749c18>],
             '$64pred': [<numba.core.ir.Assign object at 0x7f94eb7209b0>],
             '$66.3': [<numba.core.ir.Assign object at 0x7f94eb741160>],
             '$66.5': [<numba.core.ir.Assign object at 0x7f94eb720d30>],
             '$76pred': [<numba.core.ir.Assign object at 0x7f94eb720f28>],
             '$78.1': [<numba.core.ir.Assign object at 0x7f94eb7370b8>],
             '$78.10': [<numba.core.ir.Assign object at 0x7f94eb737860>],
             '$78.2': [<numba.core.ir.Assign object at 0x7f94eb737198>],
             '$78.5': [<numba.core.ir.Assign object at 0x7f94eb741b38>],
             '$78.7': [<numba.core.ir.Assign object at 0x7f94eb7375c0>],
             '$78.8': [<numba.core.ir.Assign object at 0x7f94eb7376a0>],
             '$78.9': [<numba.core.ir.Assign object at 0x7f94eb737780>],
             '$98pred': [<numba.core.ir.Assign object at 0x7f94eb737a58>],
             '$const0.11': [<numba.core.ir.Assign object at 0x7f94eb30a390>],
             '$const0.15': [<numba.core.ir.Assign object at 0x7f94eb30a6d8>],
             '$const0.17': [<numba.core.ir.Assign object at 0x7f94eb30a898>],
             '$const0.26': [<numba.core.ir.Assign object at 0x7f94eb720438>],
             '$const0.4': [<numba.core.ir.Assign object at 0x7f94eb2cd3c8>],
             '$const0.6': [<numba.core.ir.Assign object at 0x7f94eb2cd898>],
             '$const0.9': [<numba.core.ir.Assign object at 0x7f94eb30a1d0>],
             '$const100.13': [<numba.core.ir.Assign object at 0x7f94eb73a630>],
             '$const100.14': [<numba.core.ir.Assign object at 0x7f94eb73a780>],
             '$const100.16': [<numba.core.ir.Assign object at 0x7f94eb73a908>],
             '$const100.17': [<numba.core.ir.Assign object at 0x7f94eb73aa58>],
             '$const100.19': [<numba.core.ir.Assign object at 0x7f94eb73abe0>],
             '$const100.4': [<numba.core.ir.Assign object at 0x7f94eb737e10>],
             '$const100.9': [<numba.core.ir.Assign object at 0x7f94eb73a278>],
             '$const148.1': [<numba.core.ir.Assign object at 0x7f94eb73acf8>],
             '$const148.10': [<numba.core.ir.Assign object at 0x7f94eb73d550>],
             '$const148.11': [<numba.core.ir.Assign object at 0x7f94eb73d6a0>],
             '$const148.13': [<numba.core.ir.Assign object at 0x7f94eb73d828>],
             '$const148.3': [<numba.core.ir.Assign object at 0x7f94eb73ae80>],
             '$const148.7': [<numba.core.ir.Assign object at 0x7f94eb73d278>],
             '$const148.8': [<numba.core.ir.Assign object at 0x7f94eb73d3c8>],
             '$const184.11': [<numba.core.ir.Assign object at 0x7f94eb741240>],
             '$const184.12': [<numba.core.ir.Assign object at 0x7f94eb741390>],
             '$const184.14': [<numba.core.ir.Assign object at 0x7f94eb741518>],
             '$const184.15': [<numba.core.ir.Assign object at 0x7f94eb741668>],
             '$const184.17': [<numba.core.ir.Assign object at 0x7f94eb7417f0>],
             '$const184.4': [<numba.core.ir.Assign object at 0x7f94eb73dbe0>],
             '$const184.8': [<numba.core.ir.Assign object at 0x7f94eb73df28>],
             '$const184.9': [<numba.core.ir.Assign object at 0x7f94eb7410b8>],
             '$const228.14': [<numba.core.ir.Assign object at 0x7f94eb745588>],
             '$const228.17': [<numba.core.ir.Assign object at 0x7f94eb7457f0>],
             '$const228.25': [<numba.core.ir.Assign object at 0x7f94eb745e80>],
             '$const228.28': [<numba.core.ir.Assign object at 0x7f94eb749128>],
             '$const228.31': [<numba.core.ir.Assign object at 0x7f94eb7493c8>],
             '$const228.35': [<numba.core.ir.Assign object at 0x7f94eb749710>],
             '$const228.38': [<numba.core.ir.Assign object at 0x7f94eb7499b0>],
             '$const228.42': [<numba.core.ir.Assign object at 0x7f94eb749cf8>],
             '$const228.45': [<numba.core.ir.Assign object at 0x7f94eb749f98>],
             '$const228.49': [<numba.core.ir.Assign object at 0x7f94eb74e320>],
             '$const228.5': [<numba.core.ir.Assign object at 0x7f94eb741cc0>],
             '$const338.1': [<numba.core.ir.Assign object at 0x7f94eb7492e8>],
             '$const66.2': [<numba.core.ir.Assign object at 0x7f94eb720a90>],
             '$const66.4': [<numba.core.ir.Assign object at 0x7f94eb720c50>],
             '$const78.4': [<numba.core.ir.Assign object at 0x7f94eb737320>],
             '$const78.6': [<numba.core.ir.Assign object at 0x7f94eb7374e0>],
             'b': [<numba.core.ir.Assign object at 0x7f94eb30ab38>],
             'bool64': [<numba.core.ir.Assign object at 0x7f94eb7208d0>],
             'bool76': [<numba.core.ir.Assign object at 0x7f94eb720e48>],
             'bool98': [<numba.core.ir.Assign object at 0x7f94eb737978>],
             'f': [<numba.core.ir.Assign object at 0x7f94eb745198>],
             'q': [<numba.core.ir.Assign object at 0x7f94eb2c03c8>],
             'qout': [<numba.core.ir.Assign object at 0x7f94eb2c0588>],
             'v': [<numba.core.ir.Assign object at 0x7f94eb741e80>]})
2022-01-24 14:08:56,604 DEBUG SSA violators set()
2022-01-24 14:08:56,860 DEBUG label 0:
    q = arg(0, name=q)                       ['q']
    qout = arg(1, name=qout)                 ['qout']
    $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$0.1']
    $0.2 = getattr(value=$0.1, attr=sqrt)    ['$0.1', '$0.2']
    $const0.4 = const(int, 0)                ['$const0.4']
    $0.5 = getitem(value=q, index=$const0.4, fn=<built-in function getitem>) ['$0.5', '$const0.4', 'q']
    $const0.6 = const(int, 2)                ['$const0.6']
    $0.7 = $0.5 ** $const0.6                 ['$0.5', '$0.7', '$const0.6']
    $const0.9 = const(int, 1)                ['$const0.9']
    $0.10 = getitem(value=q, index=$const0.9, fn=<built-in function getitem>) ['$0.10', '$const0.9', 'q']
    $const0.11 = const(int, 2)               ['$const0.11']
    $0.12 = $0.10 ** $const0.11              ['$0.10', '$0.12', '$const0.11']
    $0.13 = $0.7 + $0.12                     ['$0.12', '$0.13', '$0.7']
    $const0.15 = const(int, 2)               ['$const0.15']
    $0.16 = getitem(value=q, index=$const0.15, fn=<built-in function getitem>) ['$0.16', '$const0.15', 'q']
    $const0.17 = const(int, 2)               ['$const0.17']
    $0.18 = $0.16 ** $const0.17              ['$0.16', '$0.18', '$const0.17']
    $0.19 = $0.13 + $0.18                    ['$0.13', '$0.18', '$0.19']
    $const0.21 = const(int, 3)               ['$const0.21']
    $0.22 = getitem(value=q, index=$const0.21, fn=<built-in function getitem>) ['$0.22', '$const0.21', 'q']
    $const0.23 = const(int, 2)               ['$const0.23']
    $0.24 = $0.22 ** $const0.23              ['$0.22', '$0.24', '$const0.23']
    $0.25 = $0.19 + $0.24                    ['$0.19', '$0.24', '$0.25']
    $0.26 = call $0.2($0.25, func=$0.2, args=[Var($0.25, algebra.py:191)], kws=(), vararg=None) ['$0.2', '$0.25', '$0.26']
    $const0.28 = const(int, 0)               ['$const0.28']
    qout[$const0.28] = $0.26                 ['$0.26', '$const0.28', 'qout']
    $const0.29 = const(NoneType, None)       ['$const0.29']
    $0.30 = cast(value=$const0.29)           ['$0.30', '$const0.29']
    return $0.30                             ['$0.30']

2022-01-24 14:08:56,864 DEBUG ==== SSA block analysis pass on 0
2022-01-24 14:08:56,864 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb769a58>
2022-01-24 14:08:56,864 DEBUG on stmt: q = arg(0, name=q)
2022-01-24 14:08:56,864 DEBUG on stmt: qout = arg(1, name=qout)
2022-01-24 14:08:56,864 DEBUG on stmt: $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:08:56,864 DEBUG on stmt: $0.2 = getattr(value=$0.1, attr=sqrt)
2022-01-24 14:08:56,864 DEBUG on stmt: $const0.4 = const(int, 0)
2022-01-24 14:08:56,864 DEBUG on stmt: $0.5 = static_getitem(value=q, index=0, index_var=$const0.4, fn=<built-in function getitem>)
2022-01-24 14:08:56,864 DEBUG on stmt: $const0.6 = const(int, 2)
2022-01-24 14:08:56,864 DEBUG on stmt: $0.7 = $0.5 ** $const0.6
2022-01-24 14:08:56,864 DEBUG on stmt: $const0.9 = const(int, 1)
2022-01-24 14:08:56,864 DEBUG on stmt: $0.10 = static_getitem(value=q, index=1, index_var=$const0.9, fn=<built-in function getitem>)
2022-01-24 14:08:56,864 DEBUG on stmt: $const0.11 = const(int, 2)
2022-01-24 14:08:56,865 DEBUG on stmt: $0.12 = $0.10 ** $const0.11
2022-01-24 14:08:56,865 DEBUG on stmt: $0.13 = $0.7 + $0.12
2022-01-24 14:08:56,865 DEBUG on stmt: $const0.15 = const(int, 2)
2022-01-24 14:08:56,865 DEBUG on stmt: $0.16 = static_getitem(value=q, index=2, index_var=$const0.15, fn=<built-in function getitem>)
2022-01-24 14:08:56,865 DEBUG on stmt: $const0.17 = const(int, 2)
2022-01-24 14:08:56,865 DEBUG on stmt: $0.18 = $0.16 ** $const0.17
2022-01-24 14:08:56,865 DEBUG on stmt: $0.19 = $0.13 + $0.18
2022-01-24 14:08:56,865 DEBUG on stmt: $const0.21 = const(int, 3)
2022-01-24 14:08:56,865 DEBUG on stmt: $0.22 = static_getitem(value=q, index=3, index_var=$const0.21, fn=<built-in function getitem>)
2022-01-24 14:08:56,865 DEBUG on stmt: $const0.23 = const(int, 2)
2022-01-24 14:08:56,865 DEBUG on stmt: $0.24 = $0.22 ** $const0.23
2022-01-24 14:08:56,865 DEBUG on stmt: $0.25 = $0.19 + $0.24
2022-01-24 14:08:56,865 DEBUG on stmt: $0.26 = call $0.2($0.25, func=$0.2, args=[Var($0.25, algebra.py:191)], kws=(), vararg=None)
2022-01-24 14:08:56,865 DEBUG on stmt: $const0.28 = const(int, 0)
2022-01-24 14:08:56,865 DEBUG on stmt: qout[0] = $0.26
2022-01-24 14:08:56,865 DEBUG on stmt: $const0.29 = const(NoneType, None)
2022-01-24 14:08:56,865 DEBUG on stmt: $0.30 = cast(value=$const0.29)
2022-01-24 14:08:56,865 DEBUG on stmt: return $0.30
2022-01-24 14:08:56,865 DEBUG defs defaultdict(<class 'list'>,
            {'$0.1': [<numba.core.ir.Assign object at 0x7f94eb761198>],
             '$0.10': [<numba.core.ir.Assign object at 0x7f94eb75b0b8>],
             '$0.12': [<numba.core.ir.Assign object at 0x7f94eb737e80>],
             '$0.13': [<numba.core.ir.Assign object at 0x7f94eb2cda58>],
             '$0.16': [<numba.core.ir.Assign object at 0x7f94eb75b978>],
             '$0.18': [<numba.core.ir.Assign object at 0x7f94eb745860>],
             '$0.19': [<numba.core.ir.Assign object at 0x7f94eb2c3860>],
             '$0.2': [<numba.core.ir.Assign object at 0x7f94eb761cc0>],
             '$0.22': [<numba.core.ir.Assign object at 0x7f94eb75b358>],
             '$0.24': [<numba.core.ir.Assign object at 0x7f94eb75b908>],
             '$0.25': [<numba.core.ir.Assign object at 0x7f94eb75bfd0>],
             '$0.26': [<numba.core.ir.Assign object at 0x7f94eb75bcc0>],
             '$0.30': [<numba.core.ir.Assign object at 0x7f94eb75b710>],
             '$0.5': [<numba.core.ir.Assign object at 0x7f94eb75b630>],
             '$0.7': [<numba.core.ir.Assign object at 0x7f94eb741d30>],
             '$const0.11': [<numba.core.ir.Assign object at 0x7f94eb73ac50>],
             '$const0.15': [<numba.core.ir.Assign object at 0x7f94eb30a748>],
             '$const0.17': [<numba.core.ir.Assign object at 0x7f94eb745240>],
             '$const0.21': [<numba.core.ir.Assign object at 0x7f94eb2c9b70>],
             '$const0.23': [<numba.core.ir.Assign object at 0x7f94eb75b7b8>],
             '$const0.28': [<numba.core.ir.Assign object at 0x7f94eb75bf60>],
             '$const0.29': [<numba.core.ir.Assign object at 0x7f94eb75b9b0>],
             '$const0.4': [<numba.core.ir.Assign object at 0x7f94eb749780>],
             '$const0.6': [<numba.core.ir.Assign object at 0x7f94eb74e390>],
             '$const0.9': [<numba.core.ir.Assign object at 0x7f94eb73df98>],
             'q': [<numba.core.ir.Assign object at 0x7f94eb761748>],
             'qout': [<numba.core.ir.Assign object at 0x7f94eb761080>]})
2022-01-24 14:08:56,866 DEBUG SSA violators set()
2022-01-24 14:08:57,038 DEBUG label 0:
    q1 = arg(0, name=q1)                     ['q1']
    q2 = arg(1, name=q2)                     ['q2']
    out = arg(2, name=out)                   ['out']
    $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$0.1']
    $0.2 = getattr(value=$0.1, attr=sqrt)    ['$0.1', '$0.2']
    $const0.4 = const(int, 0)                ['$const0.4']
    $0.5 = getitem(value=q1, index=$const0.4, fn=<built-in function getitem>) ['$0.5', '$const0.4', 'q1']
    $const0.7 = const(int, 0)                ['$const0.7']
    $0.8 = getitem(value=q2, index=$const0.7, fn=<built-in function getitem>) ['$0.8', '$const0.7', 'q2']
    $0.9 = $0.5 - $0.8                       ['$0.5', '$0.8', '$0.9']
    $const0.10 = const(int, 2)               ['$const0.10']
    $0.11 = $0.9 ** $const0.10               ['$0.11', '$0.9', '$const0.10']
    $const0.13 = const(int, 1)               ['$const0.13']
    $0.14 = getitem(value=q1, index=$const0.13, fn=<built-in function getitem>) ['$0.14', '$const0.13', 'q1']
    $const0.16 = const(int, 1)               ['$const0.16']
    $0.17 = getitem(value=q2, index=$const0.16, fn=<built-in function getitem>) ['$0.17', '$const0.16', 'q2']
    $0.18 = $0.14 - $0.17                    ['$0.14', '$0.17', '$0.18']
    $const0.19 = const(int, 2)               ['$const0.19']
    $0.20 = $0.18 ** $const0.19              ['$0.18', '$0.20', '$const0.19']
    $0.21 = $0.11 + $0.20                    ['$0.11', '$0.20', '$0.21']
    $const0.23 = const(int, 2)               ['$const0.23']
    $0.24 = getitem(value=q1, index=$const0.23, fn=<built-in function getitem>) ['$0.24', '$const0.23', 'q1']
    $const0.26 = const(int, 2)               ['$const0.26']
    $0.27 = getitem(value=q2, index=$const0.26, fn=<built-in function getitem>) ['$0.27', '$const0.26', 'q2']
    $0.28 = $0.24 - $0.27                    ['$0.24', '$0.27', '$0.28']
    $const0.29 = const(int, 2)               ['$const0.29']
    $0.30 = $0.28 ** $const0.29              ['$0.28', '$0.30', '$const0.29']
    $0.31 = $0.21 + $0.30                    ['$0.21', '$0.30', '$0.31']
    $const0.33 = const(int, 3)               ['$const0.33']
    $0.34 = getitem(value=q1, index=$const0.33, fn=<built-in function getitem>) ['$0.34', '$const0.33', 'q1']
    $const0.36 = const(int, 3)               ['$const0.36']
    $0.37 = getitem(value=q2, index=$const0.36, fn=<built-in function getitem>) ['$0.37', '$const0.36', 'q2']
    $0.38 = $0.34 - $0.37                    ['$0.34', '$0.37', '$0.38']
    $const0.39 = const(int, 2)               ['$const0.39']
    $0.40 = $0.38 ** $const0.39              ['$0.38', '$0.40', '$const0.39']
    $0.41 = $0.31 + $0.40                    ['$0.31', '$0.40', '$0.41']
    $0.42 = call $0.2($0.41, func=$0.2, args=[Var($0.41, distance.py:76)], kws=(), vararg=None) ['$0.2', '$0.41', '$0.42']
    $const0.44 = const(int, 0)               ['$const0.44']
    out[$const0.44] = $0.42                  ['$0.42', '$const0.44', 'out']
    $const0.45 = const(NoneType, None)       ['$const0.45']
    $0.46 = cast(value=$const0.45)           ['$0.46', '$const0.45']
    return $0.46                             ['$0.46']

2022-01-24 14:08:57,042 DEBUG ==== SSA block analysis pass on 0
2022-01-24 14:08:57,042 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ec2ac7b8>
2022-01-24 14:08:57,042 DEBUG on stmt: q1 = arg(0, name=q1)
2022-01-24 14:08:57,042 DEBUG on stmt: q2 = arg(1, name=q2)
2022-01-24 14:08:57,042 DEBUG on stmt: out = arg(2, name=out)
2022-01-24 14:08:57,042 DEBUG on stmt: $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:08:57,042 DEBUG on stmt: $0.2 = getattr(value=$0.1, attr=sqrt)
2022-01-24 14:08:57,042 DEBUG on stmt: $const0.4 = const(int, 0)
2022-01-24 14:08:57,042 DEBUG on stmt: $0.5 = static_getitem(value=q1, index=0, index_var=$const0.4, fn=<built-in function getitem>)
2022-01-24 14:08:57,042 DEBUG on stmt: $const0.7 = const(int, 0)
2022-01-24 14:08:57,042 DEBUG on stmt: $0.8 = static_getitem(value=q2, index=0, index_var=$const0.7, fn=<built-in function getitem>)
2022-01-24 14:08:57,042 DEBUG on stmt: $0.9 = $0.5 - $0.8
2022-01-24 14:08:57,042 DEBUG on stmt: $const0.10 = const(int, 2)
2022-01-24 14:08:57,042 DEBUG on stmt: $0.11 = $0.9 ** $const0.10
2022-01-24 14:08:57,042 DEBUG on stmt: $const0.13 = const(int, 1)
2022-01-24 14:08:57,042 DEBUG on stmt: $0.14 = static_getitem(value=q1, index=1, index_var=$const0.13, fn=<built-in function getitem>)
2022-01-24 14:08:57,042 DEBUG on stmt: $const0.16 = const(int, 1)
2022-01-24 14:08:57,042 DEBUG on stmt: $0.17 = static_getitem(value=q2, index=1, index_var=$const0.16, fn=<built-in function getitem>)
2022-01-24 14:08:57,043 DEBUG on stmt: $0.18 = $0.14 - $0.17
2022-01-24 14:08:57,043 DEBUG on stmt: $const0.19 = const(int, 2)
2022-01-24 14:08:57,043 DEBUG on stmt: $0.20 = $0.18 ** $const0.19
2022-01-24 14:08:57,043 DEBUG on stmt: $0.21 = $0.11 + $0.20
2022-01-24 14:08:57,043 DEBUG on stmt: $const0.23 = const(int, 2)
2022-01-24 14:08:57,043 DEBUG on stmt: $0.24 = static_getitem(value=q1, index=2, index_var=$const0.23, fn=<built-in function getitem>)
2022-01-24 14:08:57,043 DEBUG on stmt: $const0.26 = const(int, 2)
2022-01-24 14:08:57,043 DEBUG on stmt: $0.27 = static_getitem(value=q2, index=2, index_var=$const0.26, fn=<built-in function getitem>)
2022-01-24 14:08:57,043 DEBUG on stmt: $0.28 = $0.24 - $0.27
2022-01-24 14:08:57,043 DEBUG on stmt: $const0.29 = const(int, 2)
2022-01-24 14:08:57,043 DEBUG on stmt: $0.30 = $0.28 ** $const0.29
2022-01-24 14:08:57,043 DEBUG on stmt: $0.31 = $0.21 + $0.30
2022-01-24 14:08:57,043 DEBUG on stmt: $const0.33 = const(int, 3)
2022-01-24 14:08:57,043 DEBUG on stmt: $0.34 = static_getitem(value=q1, index=3, index_var=$const0.33, fn=<built-in function getitem>)
2022-01-24 14:08:57,043 DEBUG on stmt: $const0.36 = const(int, 3)
2022-01-24 14:08:57,043 DEBUG on stmt: $0.37 = static_getitem(value=q2, index=3, index_var=$const0.36, fn=<built-in function getitem>)
2022-01-24 14:08:57,043 DEBUG on stmt: $0.38 = $0.34 - $0.37
2022-01-24 14:08:57,043 DEBUG on stmt: $const0.39 = const(int, 2)
2022-01-24 14:08:57,043 DEBUG on stmt: $0.40 = $0.38 ** $const0.39
2022-01-24 14:08:57,043 DEBUG on stmt: $0.41 = $0.31 + $0.40
2022-01-24 14:08:57,043 DEBUG on stmt: $0.42 = call $0.2($0.41, func=$0.2, args=[Var($0.41, distance.py:76)], kws=(), vararg=None)
2022-01-24 14:08:57,043 DEBUG on stmt: $const0.44 = const(int, 0)
2022-01-24 14:08:57,043 DEBUG on stmt: out[0] = $0.42
2022-01-24 14:08:57,043 DEBUG on stmt: $const0.45 = const(NoneType, None)
2022-01-24 14:08:57,043 DEBUG on stmt: $0.46 = cast(value=$const0.45)
2022-01-24 14:08:57,044 DEBUG on stmt: return $0.46
2022-01-24 14:08:57,044 DEBUG defs defaultdict(<class 'list'>,
            {'$0.1': [<numba.core.ir.Assign object at 0x7f94ec2f6dd8>],
             '$0.11': [<numba.core.ir.Assign object at 0x7f94ec2ea668>],
             '$0.14': [<numba.core.ir.Assign object at 0x7f94ec362908>],
             '$0.17': [<numba.core.ir.Assign object at 0x7f94ec362978>],
             '$0.18': [<numba.core.ir.Assign object at 0x7f94ec2eac18>],
             '$0.2': [<numba.core.ir.Assign object at 0x7f94ec2f6eb8>],
             '$0.20': [<numba.core.ir.Assign object at 0x7f94ec2eadd8>],
             '$0.21': [<numba.core.ir.Assign object at 0x7f94ec2eaeb8>],
             '$0.24': [<numba.core.ir.Assign object at 0x7f94ec3629e8>],
             '$0.27': [<numba.core.ir.Assign object at 0x7f94ec362a58>],
             '$0.28': [<numba.core.ir.Assign object at 0x7f94ec2e22b0>],
             '$0.30': [<numba.core.ir.Assign object at 0x7f94ec2e2470>],
             '$0.31': [<numba.core.ir.Assign object at 0x7f94ec2e2518>],
             '$0.34': [<numba.core.ir.Assign object at 0x7f94ec362ac8>],
             '$0.37': [<numba.core.ir.Assign object at 0x7f94ec362b38>],
             '$0.38': [<numba.core.ir.Assign object at 0x7f94ec2e2b00>],
             '$0.40': [<numba.core.ir.Assign object at 0x7f94ec2e2c88>],
             '$0.41': [<numba.core.ir.Assign object at 0x7f94ec2e2eb8>],
             '$0.42': [<numba.core.ir.Assign object at 0x7f94ec3620b8>],
             '$0.46': [<numba.core.ir.Assign object at 0x7f94ec362470>],
             '$0.5': [<numba.core.ir.Assign object at 0x7f94ec362828>],
             '$0.8': [<numba.core.ir.Assign object at 0x7f94ec362898>],
             '$0.9': [<numba.core.ir.Assign object at 0x7f94ec2ea4a8>],
             '$const0.10': [<numba.core.ir.Assign object at 0x7f94ec2ea588>],
             '$const0.13': [<numba.core.ir.Assign object at 0x7f94ec2ea7f0>],
             '$const0.16': [<numba.core.ir.Assign object at 0x7f94ec2eaa58>],
             '$const0.19': [<numba.core.ir.Assign object at 0x7f94ec2eacf8>],
             '$const0.23': [<numba.core.ir.Assign object at 0x7f94ec2e2e48>],
             '$const0.26': [<numba.core.ir.Assign object at 0x7f94ec2e20b8>],
             '$const0.29': [<numba.core.ir.Assign object at 0x7f94ec2e23c8>],
             '$const0.33': [<numba.core.ir.Assign object at 0x7f94ec2e26a0>],
             '$const0.36': [<numba.core.ir.Assign object at 0x7f94ec2e2940>],
             '$const0.39': [<numba.core.ir.Assign object at 0x7f94ec2e2b70>],
             '$const0.4': [<numba.core.ir.Assign object at 0x7f94ec2ea080>],
             '$const0.44': [<numba.core.ir.Assign object at 0x7f94ec362240>],
             '$const0.45': [<numba.core.ir.Assign object at 0x7f94ec362390>],
             '$const0.7': [<numba.core.ir.Assign object at 0x7f94ec2ea2e8>],
             'out': [<numba.core.ir.Assign object at 0x7f94ec2f6cf8>],
             'q1': [<numba.core.ir.Assign object at 0x7f94ec2f6ba8>],
             'q2': [<numba.core.ir.Assign object at 0x7f94ec2f6c50>]})
2022-01-24 14:08:57,044 DEBUG SSA violators set()
2022-01-24 14:08:57,130 DEBUG label 0:
    a = arg(0, name=a)                       ['a']
    b = arg(1, name=b)                       ['b']
    $0.1 = freevar(tp: float64)              ['$0.1']
    $const0.2 = const(int, 1)                ['$const0.2']
    r = call $0.1($const0.2, func=$0.1, args=[Var($const0.2, numbers.py:217)], kws=(), vararg=None) ['$0.1', '$const0.2', 'r']
    $0.4 = freevar(tp: float64)              ['$0.4']
    a.1 = call $0.4(a, func=$0.4, args=[Var(a, numbers.py:217)], kws=(), vararg=None) ['$0.4', 'a', 'a.1']
    $const0.8 = const(int, 0)                ['$const0.8']
    $0.9 = b < $const0.8                     ['$0.9', '$const0.8', 'b']
    bool24 = global(bool: <class 'bool'>)    ['bool24']
    $24pred = call bool24($0.9, func=bool24, args=(Var($0.9, numbers.py:219),), kws=(), vararg=None) ['$0.9', '$24pred', 'bool24']
    branch $24pred, 26, 98                   ['$24pred']
label 26:
    invert = const(bool, True)               ['invert']
    exp = unary(fn=<built-in function neg>, value=b) ['b', 'exp']
    $const26.5 = const(int, 0)               ['$const26.5']
    $26.6 = exp < $const26.5                 ['$26.6', '$const26.5', 'exp']
    bool42 = global(bool: <class 'bool'>)    ['bool42']
    $42pred = call bool42($26.6, func=bool42, args=(Var($26.6, numbers.py:222),), kws=(), vararg=None) ['$26.6', '$42pred', 'bool42']
    branch $42pred, 44, 48                   ['$42pred']
label 44:
    $44.1 = global(OverflowError: <class 'OverflowError'>) ['$44.1']
    raise $44.1                              ['$44.1']
label 48:
    $48.1 = freevar(is_integer: False)       ['$48.1']
    bool50 = global(bool: <class 'bool'>)    ['bool50']
    $50pred = call bool50($48.1, func=bool50, args=(Var($48.1, numbers.py:224),), kws=(), vararg=None) ['$48.1', '$50pred', 'bool50']
    branch $50pred, 52, 106                  ['$50pred']
label 52:
    $const52.2 = const(int, 0)               ['$const52.2']
    $52.3 = a.1 == $const52.2                ['$52.3', '$const52.2', 'a.1']
    bool58 = global(bool: <class 'bool'>)    ['bool58']
    $58pred = call bool58($52.3, func=bool58, args=(Var($52.3, numbers.py:225),), kws=(), vararg=None) ['$52.3', '$58pred', 'bool58']
    branch $58pred, 60, 76                   ['$58pred']
label 60:
    $60.1 = freevar(zerodiv_return: False)   ['$60.1']
    bool62 = global(bool: <class 'bool'>)    ['bool62']
    $62pred = call bool62($60.1, func=bool62, args=(Var($60.1, numbers.py:226),), kws=(), vararg=None) ['$60.1', '$62pred', 'bool62']
    branch $62pred, 64, 68                   ['$62pred']
label 64:
    $64.1 = freevar(zerodiv_return: False)   ['$64.1']
    $64.2 = cast(value=$64.1)                ['$64.1', '$64.2']
    return $64.2                             ['$64.2']
label 68:
    $68.1 = global(ZeroDivisionError: <class 'ZeroDivisionError'>) ['$68.1']
    $const68.2 = const(str, 0 cannot be raised to a negative power) ['$const68.2']
    $68.3 = call $68.1($const68.2, func=$68.1, args=[Var($const68.2, numbers.py:229)], kws=(), vararg=None) ['$68.1', '$68.3', '$const68.2']
    raise $68.3                              ['$68.3']
label 76:
    $const76.2 = const(int, 1)               ['$const76.2']
    $76.3 = a.1 != $const76.2                ['$76.3', '$const76.2', 'a.1']
    bool82 = global(bool: <class 'bool'>)    ['bool82']
    $82pred = call bool82($76.3, func=bool82, args=(Var($76.3, numbers.py:230),), kws=(), vararg=None) ['$76.3', '$82pred', 'bool82']
    branch $82pred, 84, 106                  ['$82pred']
label 84:
    $const84.2 = const(int, -1)              ['$const84.2']
    $84.3 = a.1 != $const84.2                ['$84.3', '$const84.2', 'a.1']
    bool90 = global(bool: <class 'bool'>)    ['bool90']
    $90pred = call bool90($84.3, func=bool90, args=(Var($84.3, numbers.py:230),), kws=(), vararg=None) ['$84.3', '$90pred', 'bool90']
    branch $90pred, 92, 106                  ['$90pred']
label 92:
    $const92.1 = const(int, 0)               ['$const92.1']
    $92.2 = cast(value=$const92.1)           ['$92.2', '$const92.1']
    return $92.2                             ['$92.2']
label 98:
    invert = const(bool, False)              ['invert']
    exp = b                                  ['b', 'exp']
    jump 106                                 []
label 106:
    $const106.2 = const(int, 65536)          ['$const106.2']
    $106.3 = exp > $const106.2               ['$106.3', '$const106.2', 'exp']
    bool112 = global(bool: <class 'bool'>)   ['bool112']
    $112pred = call bool112($106.3, func=bool112, args=(Var($106.3, numbers.py:235),), kws=(), vararg=None) ['$106.3', '$112pred', 'bool112']
    branch $112pred, 114, 130                ['$112pred']
label 114:
    $114.1 = global(math: <module 'math' from '/Users/wdiepeveen/anaconda3/envs/aspire_env/lib/python3.6/lib-dynload/math.cpython-36m-darwin.so'>) ['$114.1']
    $114.2 = getattr(value=$114.1, attr=pow) ['$114.1', '$114.2']
    $114.4 = global(float: <class 'float'>)  ['$114.4']
    $114.6 = call $114.4(b, func=$114.4, args=[Var(b, numbers.py:217)], kws=(), vararg=None) ['$114.4', '$114.6', 'b']
    $114.7 = call $114.2(a.1, $114.6, func=$114.2, args=[Var(a.1, numbers.py:218), Var($114.6, numbers.py:237)], kws=(), vararg=None) ['$114.2', '$114.6', '$114.7', 'a.1']
    $114.8 = cast(value=$114.7)              ['$114.7', '$114.8']
    return $114.8                            ['$114.8']
label 130:
    jump 132                                 []
label 132:
    $const132.2 = const(int, 0)              ['$const132.2']
    $132.3 = exp != $const132.2              ['$132.3', '$const132.2', 'exp']
    bool138 = global(bool: <class 'bool'>)   ['bool138']
    $138pred = call bool138($132.3, func=bool138, args=(Var($132.3, numbers.py:238),), kws=(), vararg=None) ['$132.3', '$138pred', 'bool138']
    branch $138pred, 140, 174                ['$138pred']
label 140:
    $const140.2 = const(int, 1)              ['$const140.2']
    $140.3 = exp & $const140.2               ['$140.3', '$const140.2', 'exp']
    bool146 = global(bool: <class 'bool'>)   ['bool146']
    $146pred = call bool146($140.3, func=bool146, args=(Var($140.3, numbers.py:239),), kws=(), vararg=None) ['$140.3', '$146pred', 'bool146']
    branch $146pred, 148, 156                ['$146pred']
label 148:
    $148.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$148.3', 'a.1', 'r']
    r = $148.3                               ['$148.3', 'r']
    jump 156                                 []
label 156:
    $const156.2 = const(int, 1)              ['$const156.2']
    $156.3 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.2, static_lhs=Undefined, static_rhs=Undefined) ['$156.3', '$const156.2', 'exp']
    exp = $156.3                             ['$156.3', 'exp']
    $156.6 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$156.6', 'a.1', 'a.1']
    a.1 = $156.6                             ['$156.6', 'a.1']
    jump 132                                 []
label 174:
    jump 176                                 []
label 176:
    bool178 = global(bool: <class 'bool'>)   ['bool178']
    $178pred = call bool178(invert, func=bool178, args=(Var(invert, numbers.py:220),), kws=(), vararg=None) ['$178pred', 'bool178', 'invert']
    branch $178pred, 180, 188                ['$178pred']
label 180:
    $const180.1 = const(float, 1.0)          ['$const180.1']
    $180.3 = $const180.1 / r                 ['$180.3', '$const180.1', 'r']
    $180.4 = cast(value=$180.3)              ['$180.3', '$180.4']
    return $180.4                            ['$180.4']
label 188:
    $188.2 = cast(value=r)                   ['$188.2', 'r']
    return $188.2                            ['$188.2']

2022-01-24 14:08:57,142 DEBUG ==== SSA block analysis pass on 0
2022-01-24 14:08:57,142 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94e78fcd68>
2022-01-24 14:08:57,142 DEBUG on stmt: a = arg(0, name=a)
2022-01-24 14:08:57,142 DEBUG on stmt: b = arg(1, name=b)
2022-01-24 14:08:57,142 DEBUG on stmt: $0.1 = freevar(tp: float64)
2022-01-24 14:08:57,142 DEBUG on stmt: $const0.2 = const(int, 1)
2022-01-24 14:08:57,142 DEBUG on stmt: r = call $0.1($const0.2, func=$0.1, args=[Var($const0.2, numbers.py:217)], kws=(), vararg=None)
2022-01-24 14:08:57,142 DEBUG on stmt: $0.4 = freevar(tp: float64)
2022-01-24 14:08:57,142 DEBUG on stmt: a.1 = call $0.4(a, func=$0.4, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
2022-01-24 14:08:57,142 DEBUG on stmt: $const0.8 = const(int, 0)
2022-01-24 14:08:57,142 DEBUG on stmt: $0.9 = b < $const0.8
2022-01-24 14:08:57,142 DEBUG on stmt: bool24 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,142 DEBUG on stmt: $24pred = call bool24($0.9, func=bool24, args=(Var($0.9, numbers.py:219),), kws=(), vararg=None)
2022-01-24 14:08:57,143 DEBUG on stmt: branch $24pred, 26, 98
2022-01-24 14:08:57,143 DEBUG ==== SSA block analysis pass on 26
2022-01-24 14:08:57,143 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94e78fcd68>
2022-01-24 14:08:57,143 DEBUG on stmt: invert = const(bool, True)
2022-01-24 14:08:57,143 DEBUG on stmt: exp = unary(fn=<built-in function neg>, value=b)
2022-01-24 14:08:57,143 DEBUG on stmt: $const26.5 = const(int, 0)
2022-01-24 14:08:57,143 DEBUG on stmt: $26.6 = exp < $const26.5
2022-01-24 14:08:57,143 DEBUG on stmt: bool42 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,143 DEBUG on stmt: $42pred = call bool42($26.6, func=bool42, args=(Var($26.6, numbers.py:222),), kws=(), vararg=None)
2022-01-24 14:08:57,143 DEBUG on stmt: branch $42pred, 44, 48
2022-01-24 14:08:57,143 DEBUG ==== SSA block analysis pass on 44
2022-01-24 14:08:57,143 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94e78fcd68>
2022-01-24 14:08:57,143 DEBUG on stmt: $44.1 = global(OverflowError: <class 'OverflowError'>)
2022-01-24 14:08:57,143 DEBUG on stmt: <static> raise <class 'OverflowError'>
2022-01-24 14:08:57,143 DEBUG ==== SSA block analysis pass on 48
2022-01-24 14:08:57,143 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94e78fcd68>
2022-01-24 14:08:57,143 DEBUG on stmt: $48.1 = freevar(is_integer: False)
2022-01-24 14:08:57,143 DEBUG on stmt: bool50 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,143 DEBUG on stmt: $50pred = call bool50($48.1, func=bool50, args=(Var($48.1, numbers.py:224),), kws=(), vararg=None)
2022-01-24 14:08:57,143 DEBUG on stmt: jump 106
2022-01-24 14:08:57,143 DEBUG ==== SSA block analysis pass on 98
2022-01-24 14:08:57,143 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94e78fcd68>
2022-01-24 14:08:57,143 DEBUG on stmt: invert = const(bool, False)
2022-01-24 14:08:57,143 DEBUG on stmt: exp = b
2022-01-24 14:08:57,143 DEBUG on stmt: jump 106
2022-01-24 14:08:57,143 DEBUG ==== SSA block analysis pass on 106
2022-01-24 14:08:57,143 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94e78fcd68>
2022-01-24 14:08:57,143 DEBUG on stmt: $const106.2 = const(int, 65536)
2022-01-24 14:08:57,143 DEBUG on stmt: $106.3 = exp > $const106.2
2022-01-24 14:08:57,144 DEBUG on stmt: bool112 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,144 DEBUG on stmt: $112pred = call bool112($106.3, func=bool112, args=(Var($106.3, numbers.py:235),), kws=(), vararg=None)
2022-01-24 14:08:57,144 DEBUG on stmt: branch $112pred, 114, 130
2022-01-24 14:08:57,144 DEBUG ==== SSA block analysis pass on 114
2022-01-24 14:08:57,144 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94e78fcd68>
2022-01-24 14:08:57,144 DEBUG on stmt: $114.1 = global(math: <module 'math' from '/Users/wdiepeveen/anaconda3/envs/aspire_env/lib/python3.6/lib-dynload/math.cpython-36m-darwin.so'>)
2022-01-24 14:08:57,144 DEBUG on stmt: $114.2 = getattr(value=$114.1, attr=pow)
2022-01-24 14:08:57,144 DEBUG on stmt: $114.4 = global(float: <class 'float'>)
2022-01-24 14:08:57,144 DEBUG on stmt: $114.6 = call $114.4(b, func=$114.4, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
2022-01-24 14:08:57,144 DEBUG on stmt: $114.7 = call $114.2(a.1, $114.6, func=$114.2, args=[Var(a.1, numbers.py:218), Var($114.6, numbers.py:237)], kws=(), vararg=None)
2022-01-24 14:08:57,144 DEBUG on stmt: $114.8 = cast(value=$114.7)
2022-01-24 14:08:57,144 DEBUG on stmt: return $114.8
2022-01-24 14:08:57,144 DEBUG ==== SSA block analysis pass on 130
2022-01-24 14:08:57,144 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94e78fcd68>
2022-01-24 14:08:57,144 DEBUG on stmt: jump 132
2022-01-24 14:08:57,144 DEBUG ==== SSA block analysis pass on 132
2022-01-24 14:08:57,144 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94e78fcd68>
2022-01-24 14:08:57,144 DEBUG on stmt: $const132.2 = const(int, 0)
2022-01-24 14:08:57,144 DEBUG on stmt: $132.3 = exp != $const132.2
2022-01-24 14:08:57,144 DEBUG on stmt: bool138 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,144 DEBUG on stmt: $138pred = call bool138($132.3, func=bool138, args=(Var($132.3, numbers.py:238),), kws=(), vararg=None)
2022-01-24 14:08:57,144 DEBUG on stmt: branch $138pred, 140, 174
2022-01-24 14:08:57,144 DEBUG ==== SSA block analysis pass on 140
2022-01-24 14:08:57,144 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94e78fcd68>
2022-01-24 14:08:57,144 DEBUG on stmt: $const140.2 = const(int, 1)
2022-01-24 14:08:57,144 DEBUG on stmt: $140.3 = exp & $const140.2
2022-01-24 14:08:57,144 DEBUG on stmt: bool146 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,145 DEBUG on stmt: $146pred = call bool146($140.3, func=bool146, args=(Var($140.3, numbers.py:239),), kws=(), vararg=None)
2022-01-24 14:08:57,145 DEBUG on stmt: branch $146pred, 148, 156
2022-01-24 14:08:57,145 DEBUG ==== SSA block analysis pass on 148
2022-01-24 14:08:57,145 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94e78fcd68>
2022-01-24 14:08:57,145 DEBUG on stmt: $148.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:57,145 DEBUG on stmt: r = $148.3
2022-01-24 14:08:57,145 DEBUG on stmt: jump 156
2022-01-24 14:08:57,145 DEBUG ==== SSA block analysis pass on 156
2022-01-24 14:08:57,146 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94e78fcd68>
2022-01-24 14:08:57,146 DEBUG on stmt: $const156.2 = const(int, 1)
2022-01-24 14:08:57,146 DEBUG on stmt: $156.3 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.2, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:57,146 DEBUG on stmt: exp = $156.3
2022-01-24 14:08:57,146 DEBUG on stmt: $156.6 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:57,146 DEBUG on stmt: a.1 = $156.6
2022-01-24 14:08:57,146 DEBUG on stmt: jump 132
2022-01-24 14:08:57,146 DEBUG ==== SSA block analysis pass on 174
2022-01-24 14:08:57,146 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94e78fcd68>
2022-01-24 14:08:57,146 DEBUG on stmt: jump 176
2022-01-24 14:08:57,146 DEBUG ==== SSA block analysis pass on 176
2022-01-24 14:08:57,146 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94e78fcd68>
2022-01-24 14:08:57,146 DEBUG on stmt: bool178 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,146 DEBUG on stmt: $178pred = call bool178(invert, func=bool178, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
2022-01-24 14:08:57,146 DEBUG on stmt: branch $178pred, 180, 188
2022-01-24 14:08:57,146 DEBUG ==== SSA block analysis pass on 180
2022-01-24 14:08:57,146 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94e78fcd68>
2022-01-24 14:08:57,146 DEBUG on stmt: $const180.1 = const(float, 1.0)
2022-01-24 14:08:57,146 DEBUG on stmt: $180.3 = $const180.1 / r
2022-01-24 14:08:57,146 DEBUG on stmt: $180.4 = cast(value=$180.3)
2022-01-24 14:08:57,146 DEBUG on stmt: return $180.4
2022-01-24 14:08:57,146 DEBUG ==== SSA block analysis pass on 188
2022-01-24 14:08:57,147 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94e78fcd68>
2022-01-24 14:08:57,147 DEBUG on stmt: $188.2 = cast(value=r)
2022-01-24 14:08:57,147 DEBUG on stmt: return $188.2
2022-01-24 14:08:57,147 DEBUG defs defaultdict(<class 'list'>,
            {'$0.1': [<numba.core.ir.Assign object at 0x7f94eb76a828>],
             '$0.4': [<numba.core.ir.Assign object at 0x7f94eb2b1a20>],
             '$0.9': [<numba.core.ir.Assign object at 0x7f94eb2b1f60>],
             '$106.3': [<numba.core.ir.Assign object at 0x7f94ec34fc18>],
             '$112pred': [<numba.core.ir.Assign object at 0x7f94ec215358>],
             '$114.1': [<numba.core.ir.Assign object at 0x7f94ec215438>],
             '$114.2': [<numba.core.ir.Assign object at 0x7f94ec215550>],
             '$114.4': [<numba.core.ir.Assign object at 0x7f94ec215710>],
             '$114.6': [<numba.core.ir.Assign object at 0x7f94ec215828>],
             '$114.7': [<numba.core.ir.Assign object at 0x7f94ec215908>],
             '$114.8': [<numba.core.ir.Assign object at 0x7f94ec215a20>],
             '$132.3': [<numba.core.ir.Assign object at 0x7f94ec215eb8>],
             '$138pred': [<numba.core.ir.Assign object at 0x7f94ec215da0>],
             '$140.3': [<numba.core.ir.Assign object at 0x7f94ec27def0>],
             '$146pred': [<numba.core.ir.Assign object at 0x7f94ec27d2b0>],
             '$148.3': [<numba.core.ir.Assign object at 0x7f94ec27d1d0>],
             '$156.3': [<numba.core.ir.Assign object at 0x7f94ec27d940>],
             '$156.6': [<numba.core.ir.Assign object at 0x7f94ec27dbe0>],
             '$178pred': [<numba.core.ir.Assign object at 0x7f94ec27d5c0>],
             '$180.3': [<numba.core.ir.Assign object at 0x7f94ec3260b8>],
             '$180.4': [<numba.core.ir.Assign object at 0x7f94ec326748>],
             '$188.2': [<numba.core.ir.Assign object at 0x7f94ec326dd8>],
             '$24pred': [<numba.core.ir.Assign object at 0x7f94eb251780>],
             '$26.6': [<numba.core.ir.Assign object at 0x7f94eb2652b0>],
             '$42pred': [<numba.core.ir.Assign object at 0x7f94eb265828>],
             '$44.1': [<numba.core.ir.Assign object at 0x7f94eb2657b8>],
             '$48.1': [<numba.core.ir.Assign object at 0x7f94eb265860>],
             '$50pred': [<numba.core.ir.Assign object at 0x7f94eb265278>],
             '$const0.2': [<numba.core.ir.Assign object at 0x7f94eb76a9e8>],
             '$const0.8': [<numba.core.ir.Assign object at 0x7f94eb2b12e8>],
             '$const106.2': [<numba.core.ir.Assign object at 0x7f94ec34f860>],
             '$const132.2': [<numba.core.ir.Assign object at 0x7f94ec215ba8>],
             '$const140.2': [<numba.core.ir.Assign object at 0x7f94ec27df98>],
             '$const156.2': [<numba.core.ir.Assign object at 0x7f94ec27d860>],
             '$const180.1': [<numba.core.ir.Assign object at 0x7f94eb2c9e48>],
             '$const26.5': [<numba.core.ir.Assign object at 0x7f94eb265cc0>],
             'a': [<numba.core.ir.Assign object at 0x7f94eb76a470>],
             'a.1': [<numba.core.ir.Assign object at 0x7f94eb2b1be0>,
                     <numba.core.ir.Assign object at 0x7f94ec27ddd8>],
             'b': [<numba.core.ir.Assign object at 0x7f94eb76a320>],
             'bool112': [<numba.core.ir.Assign object at 0x7f94ec215128>],
             'bool138': [<numba.core.ir.Assign object at 0x7f94ec215f28>],
             'bool146': [<numba.core.ir.Assign object at 0x7f94ec27d710>],
             'bool178': [<numba.core.ir.Assign object at 0x7f94ec27d4e0>],
             'bool24': [<numba.core.ir.Assign object at 0x7f94eb300160>],
             'bool42': [<numba.core.ir.Assign object at 0x7f94eb265e48>],
             'bool50': [<numba.core.ir.Assign object at 0x7f94eb265550>],
             'exp': [<numba.core.ir.Assign object at 0x7f94eb2aeba8>,
                     <numba.core.ir.Assign object at 0x7f94ec34fac8>,
                     <numba.core.ir.Assign object at 0x7f94ec27da20>],
             'invert': [<numba.core.ir.Assign object at 0x7f94eb251cf8>,
                        <numba.core.ir.Assign object at 0x7f94ec34f8d0>],
             'r': [<numba.core.ir.Assign object at 0x7f94eb76a8d0>,
                   <numba.core.ir.Assign object at 0x7f94ec27d3c8>]})
2022-01-24 14:08:57,147 DEBUG SSA violators {'r', 'invert', 'exp', 'a.1'}
2022-01-24 14:08:57,147 DEBUG Fix SSA violator on var r
2022-01-24 14:08:57,148 DEBUG ==== SSA block rewrite pass on 0
2022-01-24 14:08:57,148 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94e78fcd68>
2022-01-24 14:08:57,148 DEBUG on stmt: a = arg(0, name=a)
2022-01-24 14:08:57,148 DEBUG on stmt: b = arg(1, name=b)
2022-01-24 14:08:57,148 DEBUG on stmt: $0.1 = freevar(tp: float64)
2022-01-24 14:08:57,148 DEBUG on stmt: $const0.2 = const(int, 1)
2022-01-24 14:08:57,148 DEBUG on stmt: r = call $0.1($const0.2, func=$0.1, args=[Var($const0.2, numbers.py:217)], kws=(), vararg=None)
2022-01-24 14:08:57,148 DEBUG first assign: r
2022-01-24 14:08:57,148 DEBUG replaced with: r = call $0.1($const0.2, func=$0.1, args=[Var($const0.2, numbers.py:217)], kws=(), vararg=None)
2022-01-24 14:08:57,148 DEBUG on stmt: $0.4 = freevar(tp: float64)
2022-01-24 14:08:57,148 DEBUG on stmt: a.1 = call $0.4(a, func=$0.4, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
2022-01-24 14:08:57,148 DEBUG on stmt: $const0.8 = const(int, 0)
2022-01-24 14:08:57,148 DEBUG on stmt: $0.9 = b < $const0.8
2022-01-24 14:08:57,148 DEBUG on stmt: bool24 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,148 DEBUG on stmt: $24pred = call bool24($0.9, func=bool24, args=(Var($0.9, numbers.py:219),), kws=(), vararg=None)
2022-01-24 14:08:57,148 DEBUG on stmt: branch $24pred, 26, 98
2022-01-24 14:08:57,148 DEBUG ==== SSA block rewrite pass on 26
2022-01-24 14:08:57,148 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94e78fcd68>
2022-01-24 14:08:57,148 DEBUG on stmt: invert = const(bool, True)
2022-01-24 14:08:57,148 DEBUG on stmt: exp = unary(fn=<built-in function neg>, value=b)
2022-01-24 14:08:57,149 DEBUG on stmt: $const26.5 = const(int, 0)
2022-01-24 14:08:57,149 DEBUG on stmt: $26.6 = exp < $const26.5
2022-01-24 14:08:57,149 DEBUG on stmt: bool42 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,149 DEBUG on stmt: $42pred = call bool42($26.6, func=bool42, args=(Var($26.6, numbers.py:222),), kws=(), vararg=None)
2022-01-24 14:08:57,149 DEBUG on stmt: branch $42pred, 44, 48
2022-01-24 14:08:57,149 DEBUG ==== SSA block rewrite pass on 44
2022-01-24 14:08:57,149 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94e78fcd68>
2022-01-24 14:08:57,149 DEBUG on stmt: $44.1 = global(OverflowError: <class 'OverflowError'>)
2022-01-24 14:08:57,149 DEBUG on stmt: <static> raise <class 'OverflowError'>
2022-01-24 14:08:57,149 DEBUG ==== SSA block rewrite pass on 48
2022-01-24 14:08:57,149 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94e78fcd68>
2022-01-24 14:08:57,149 DEBUG on stmt: $48.1 = freevar(is_integer: False)
2022-01-24 14:08:57,149 DEBUG on stmt: bool50 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,149 DEBUG on stmt: $50pred = call bool50($48.1, func=bool50, args=(Var($48.1, numbers.py:224),), kws=(), vararg=None)
2022-01-24 14:08:57,150 DEBUG on stmt: jump 106
2022-01-24 14:08:57,150 DEBUG ==== SSA block rewrite pass on 98
2022-01-24 14:08:57,150 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94e78fcd68>
2022-01-24 14:08:57,150 DEBUG on stmt: invert = const(bool, False)
2022-01-24 14:08:57,150 DEBUG on stmt: exp = b
2022-01-24 14:08:57,150 DEBUG on stmt: jump 106
2022-01-24 14:08:57,150 DEBUG ==== SSA block rewrite pass on 106
2022-01-24 14:08:57,150 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94e78fcd68>
2022-01-24 14:08:57,150 DEBUG on stmt: $const106.2 = const(int, 65536)
2022-01-24 14:08:57,150 DEBUG on stmt: $106.3 = exp > $const106.2
2022-01-24 14:08:57,150 DEBUG on stmt: bool112 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,150 DEBUG on stmt: $112pred = call bool112($106.3, func=bool112, args=(Var($106.3, numbers.py:235),), kws=(), vararg=None)
2022-01-24 14:08:57,150 DEBUG on stmt: branch $112pred, 114, 130
2022-01-24 14:08:57,150 DEBUG ==== SSA block rewrite pass on 114
2022-01-24 14:08:57,150 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94e78fcd68>
2022-01-24 14:08:57,150 DEBUG on stmt: $114.1 = global(math: <module 'math' from '/Users/wdiepeveen/anaconda3/envs/aspire_env/lib/python3.6/lib-dynload/math.cpython-36m-darwin.so'>)
2022-01-24 14:08:57,150 DEBUG on stmt: $114.2 = getattr(value=$114.1, attr=pow)
2022-01-24 14:08:57,150 DEBUG on stmt: $114.4 = global(float: <class 'float'>)
2022-01-24 14:08:57,150 DEBUG on stmt: $114.6 = call $114.4(b, func=$114.4, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
2022-01-24 14:08:57,150 DEBUG on stmt: $114.7 = call $114.2(a.1, $114.6, func=$114.2, args=[Var(a.1, numbers.py:218), Var($114.6, numbers.py:237)], kws=(), vararg=None)
2022-01-24 14:08:57,151 DEBUG on stmt: $114.8 = cast(value=$114.7)
2022-01-24 14:08:57,151 DEBUG on stmt: return $114.8
2022-01-24 14:08:57,151 DEBUG ==== SSA block rewrite pass on 130
2022-01-24 14:08:57,151 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94e78fcd68>
2022-01-24 14:08:57,151 DEBUG on stmt: jump 132
2022-01-24 14:08:57,151 DEBUG ==== SSA block rewrite pass on 132
2022-01-24 14:08:57,151 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94e78fcd68>
2022-01-24 14:08:57,151 DEBUG on stmt: $const132.2 = const(int, 0)
2022-01-24 14:08:57,151 DEBUG on stmt: $132.3 = exp != $const132.2
2022-01-24 14:08:57,151 DEBUG on stmt: bool138 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,151 DEBUG on stmt: $138pred = call bool138($132.3, func=bool138, args=(Var($132.3, numbers.py:238),), kws=(), vararg=None)
2022-01-24 14:08:57,151 DEBUG on stmt: branch $138pred, 140, 174
2022-01-24 14:08:57,151 DEBUG ==== SSA block rewrite pass on 140
2022-01-24 14:08:57,151 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94e78fcd68>
2022-01-24 14:08:57,151 DEBUG on stmt: $const140.2 = const(int, 1)
2022-01-24 14:08:57,151 DEBUG on stmt: $140.3 = exp & $const140.2
2022-01-24 14:08:57,151 DEBUG on stmt: bool146 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,151 DEBUG on stmt: $146pred = call bool146($140.3, func=bool146, args=(Var($140.3, numbers.py:239),), kws=(), vararg=None)
2022-01-24 14:08:57,151 DEBUG on stmt: branch $146pred, 148, 156
2022-01-24 14:08:57,151 DEBUG ==== SSA block rewrite pass on 148
2022-01-24 14:08:57,151 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94e78fcd68>
2022-01-24 14:08:57,151 DEBUG on stmt: $148.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:57,151 DEBUG on stmt: r = $148.3
2022-01-24 14:08:57,151 DEBUG replaced with: r.1 = $148.3
2022-01-24 14:08:57,151 DEBUG on stmt: jump 156
2022-01-24 14:08:57,151 DEBUG ==== SSA block rewrite pass on 156
2022-01-24 14:08:57,151 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94e78fcd68>
2022-01-24 14:08:57,151 DEBUG on stmt: $const156.2 = const(int, 1)
2022-01-24 14:08:57,152 DEBUG on stmt: $156.3 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.2, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:57,152 DEBUG on stmt: exp = $156.3
2022-01-24 14:08:57,152 DEBUG on stmt: $156.6 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:57,152 DEBUG on stmt: a.1 = $156.6
2022-01-24 14:08:57,152 DEBUG on stmt: jump 132
2022-01-24 14:08:57,152 DEBUG ==== SSA block rewrite pass on 174
2022-01-24 14:08:57,152 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94e78fcd68>
2022-01-24 14:08:57,152 DEBUG on stmt: jump 176
2022-01-24 14:08:57,152 DEBUG ==== SSA block rewrite pass on 176
2022-01-24 14:08:57,152 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94e78fcd68>
2022-01-24 14:08:57,152 DEBUG on stmt: bool178 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,152 DEBUG on stmt: $178pred = call bool178(invert, func=bool178, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
2022-01-24 14:08:57,152 DEBUG on stmt: branch $178pred, 180, 188
2022-01-24 14:08:57,152 DEBUG ==== SSA block rewrite pass on 180
2022-01-24 14:08:57,152 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94e78fcd68>
2022-01-24 14:08:57,152 DEBUG on stmt: $const180.1 = const(float, 1.0)
2022-01-24 14:08:57,152 DEBUG on stmt: $180.3 = $const180.1 / r
2022-01-24 14:08:57,152 DEBUG on stmt: $180.4 = cast(value=$180.3)
2022-01-24 14:08:57,152 DEBUG on stmt: return $180.4
2022-01-24 14:08:57,152 DEBUG ==== SSA block rewrite pass on 188
2022-01-24 14:08:57,152 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94e78fcd68>
2022-01-24 14:08:57,152 DEBUG on stmt: $188.2 = cast(value=r)
2022-01-24 14:08:57,152 DEBUG on stmt: return $188.2
2022-01-24 14:08:57,152 DEBUG Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f94ec362da0>],
             148: [<numba.core.ir.Assign object at 0x7f94ec362cf8>]})
2022-01-24 14:08:57,153 DEBUG ==== SSA block rewrite pass on 0
2022-01-24 14:08:57,153 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94ec3626d8>
2022-01-24 14:08:57,153 DEBUG on stmt: a = arg(0, name=a)
2022-01-24 14:08:57,153 DEBUG on stmt: b = arg(1, name=b)
2022-01-24 14:08:57,153 DEBUG on stmt: $0.1 = freevar(tp: float64)
2022-01-24 14:08:57,153 DEBUG on stmt: $const0.2 = const(int, 1)
2022-01-24 14:08:57,153 DEBUG on stmt: r = call $0.1($const0.2, func=$0.1, args=[Var($const0.2, numbers.py:217)], kws=(), vararg=None)
2022-01-24 14:08:57,153 DEBUG on stmt: $0.4 = freevar(tp: float64)
2022-01-24 14:08:57,153 DEBUG on stmt: a.1 = call $0.4(a, func=$0.4, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
2022-01-24 14:08:57,154 DEBUG on stmt: $const0.8 = const(int, 0)
2022-01-24 14:08:57,154 DEBUG on stmt: $0.9 = b < $const0.8
2022-01-24 14:08:57,154 DEBUG on stmt: bool24 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,154 DEBUG on stmt: $24pred = call bool24($0.9, func=bool24, args=(Var($0.9, numbers.py:219),), kws=(), vararg=None)
2022-01-24 14:08:57,154 DEBUG on stmt: branch $24pred, 26, 98
2022-01-24 14:08:57,154 DEBUG ==== SSA block rewrite pass on 26
2022-01-24 14:08:57,154 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94ec3626d8>
2022-01-24 14:08:57,154 DEBUG on stmt: invert = const(bool, True)
2022-01-24 14:08:57,154 DEBUG on stmt: exp = unary(fn=<built-in function neg>, value=b)
2022-01-24 14:08:57,154 DEBUG on stmt: $const26.5 = const(int, 0)
2022-01-24 14:08:57,154 DEBUG on stmt: $26.6 = exp < $const26.5
2022-01-24 14:08:57,154 DEBUG on stmt: bool42 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,154 DEBUG on stmt: $42pred = call bool42($26.6, func=bool42, args=(Var($26.6, numbers.py:222),), kws=(), vararg=None)
2022-01-24 14:08:57,154 DEBUG on stmt: branch $42pred, 44, 48
2022-01-24 14:08:57,154 DEBUG ==== SSA block rewrite pass on 44
2022-01-24 14:08:57,154 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94ec3626d8>
2022-01-24 14:08:57,154 DEBUG on stmt: $44.1 = global(OverflowError: <class 'OverflowError'>)
2022-01-24 14:08:57,155 DEBUG on stmt: <static> raise <class 'OverflowError'>
2022-01-24 14:08:57,155 DEBUG ==== SSA block rewrite pass on 48
2022-01-24 14:08:57,155 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94ec3626d8>
2022-01-24 14:08:57,155 DEBUG on stmt: $48.1 = freevar(is_integer: False)
2022-01-24 14:08:57,155 DEBUG on stmt: bool50 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,155 DEBUG on stmt: $50pred = call bool50($48.1, func=bool50, args=(Var($48.1, numbers.py:224),), kws=(), vararg=None)
2022-01-24 14:08:57,155 DEBUG on stmt: jump 106
2022-01-24 14:08:57,155 DEBUG ==== SSA block rewrite pass on 98
2022-01-24 14:08:57,155 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94ec3626d8>
2022-01-24 14:08:57,155 DEBUG on stmt: invert = const(bool, False)
2022-01-24 14:08:57,155 DEBUG on stmt: exp = b
2022-01-24 14:08:57,155 DEBUG on stmt: jump 106
2022-01-24 14:08:57,155 DEBUG ==== SSA block rewrite pass on 106
2022-01-24 14:08:57,155 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94ec3626d8>
2022-01-24 14:08:57,155 DEBUG on stmt: $const106.2 = const(int, 65536)
2022-01-24 14:08:57,155 DEBUG on stmt: $106.3 = exp > $const106.2
2022-01-24 14:08:57,156 DEBUG on stmt: bool112 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,156 DEBUG on stmt: $112pred = call bool112($106.3, func=bool112, args=(Var($106.3, numbers.py:235),), kws=(), vararg=None)
2022-01-24 14:08:57,156 DEBUG on stmt: branch $112pred, 114, 130
2022-01-24 14:08:57,156 DEBUG ==== SSA block rewrite pass on 114
2022-01-24 14:08:57,156 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94ec3626d8>
2022-01-24 14:08:57,156 DEBUG on stmt: $114.1 = global(math: <module 'math' from '/Users/wdiepeveen/anaconda3/envs/aspire_env/lib/python3.6/lib-dynload/math.cpython-36m-darwin.so'>)
2022-01-24 14:08:57,156 DEBUG on stmt: $114.2 = getattr(value=$114.1, attr=pow)
2022-01-24 14:08:57,156 DEBUG on stmt: $114.4 = global(float: <class 'float'>)
2022-01-24 14:08:57,156 DEBUG on stmt: $114.6 = call $114.4(b, func=$114.4, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
2022-01-24 14:08:57,156 DEBUG on stmt: $114.7 = call $114.2(a.1, $114.6, func=$114.2, args=[Var(a.1, numbers.py:218), Var($114.6, numbers.py:237)], kws=(), vararg=None)
2022-01-24 14:08:57,156 DEBUG on stmt: $114.8 = cast(value=$114.7)
2022-01-24 14:08:57,156 DEBUG on stmt: return $114.8
2022-01-24 14:08:57,156 DEBUG ==== SSA block rewrite pass on 130
2022-01-24 14:08:57,156 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94ec3626d8>
2022-01-24 14:08:57,156 DEBUG on stmt: jump 132
2022-01-24 14:08:57,156 DEBUG ==== SSA block rewrite pass on 132
2022-01-24 14:08:57,156 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94ec3626d8>
2022-01-24 14:08:57,156 DEBUG on stmt: $const132.2 = const(int, 0)
2022-01-24 14:08:57,156 DEBUG on stmt: $132.3 = exp != $const132.2
2022-01-24 14:08:57,156 DEBUG on stmt: bool138 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,156 DEBUG on stmt: $138pred = call bool138($132.3, func=bool138, args=(Var($132.3, numbers.py:238),), kws=(), vararg=None)
2022-01-24 14:08:57,157 DEBUG on stmt: branch $138pred, 140, 174
2022-01-24 14:08:57,157 DEBUG ==== SSA block rewrite pass on 140
2022-01-24 14:08:57,157 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94ec3626d8>
2022-01-24 14:08:57,157 DEBUG on stmt: $const140.2 = const(int, 1)
2022-01-24 14:08:57,157 DEBUG on stmt: $140.3 = exp & $const140.2
2022-01-24 14:08:57,157 DEBUG on stmt: bool146 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,157 DEBUG on stmt: $146pred = call bool146($140.3, func=bool146, args=(Var($140.3, numbers.py:239),), kws=(), vararg=None)
2022-01-24 14:08:57,157 DEBUG on stmt: branch $146pred, 148, 156
2022-01-24 14:08:57,157 DEBUG ==== SSA block rewrite pass on 148
2022-01-24 14:08:57,157 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94ec3626d8>
2022-01-24 14:08:57,157 DEBUG on stmt: $148.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:57,158 DEBUG find_def var='r' stmt=$148.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:57,158 DEBUG find_def_from_top label 148
2022-01-24 14:08:57,158 DEBUG idom 140 from label 148
2022-01-24 14:08:57,158 DEBUG find_def_from_bottom label 140
2022-01-24 14:08:57,158 DEBUG find_def_from_top label 140
2022-01-24 14:08:57,158 DEBUG idom 132 from label 140
2022-01-24 14:08:57,158 DEBUG find_def_from_bottom label 132
2022-01-24 14:08:57,158 DEBUG find_def_from_top label 132
2022-01-24 14:08:57,158 DEBUG insert phi node r.2 = phi(incoming_values=[], incoming_blocks=[]) at 132
2022-01-24 14:08:57,158 DEBUG find_def_from_bottom label 130
2022-01-24 14:08:57,158 DEBUG find_def_from_top label 130
2022-01-24 14:08:57,158 DEBUG idom 106 from label 130
2022-01-24 14:08:57,158 DEBUG find_def_from_bottom label 106
2022-01-24 14:08:57,158 DEBUG find_def_from_top label 106
2022-01-24 14:08:57,158 DEBUG idom 0 from label 106
2022-01-24 14:08:57,158 DEBUG find_def_from_bottom label 0
2022-01-24 14:08:57,158 DEBUG incoming_def r = call $0.1($const0.2, func=$0.1, args=[Var($const0.2, numbers.py:217)], kws=(), vararg=None)
2022-01-24 14:08:57,158 DEBUG find_def_from_bottom label 156
2022-01-24 14:08:57,159 DEBUG find_def_from_top label 156
2022-01-24 14:08:57,159 DEBUG insert phi node r.3 = phi(incoming_values=[], incoming_blocks=[]) at 156
2022-01-24 14:08:57,159 DEBUG find_def_from_bottom label 148
2022-01-24 14:08:57,159 DEBUG incoming_def r.1 = $148.3
2022-01-24 14:08:57,159 DEBUG find_def_from_bottom label 140
2022-01-24 14:08:57,159 DEBUG find_def_from_top label 140
2022-01-24 14:08:57,159 DEBUG idom 132 from label 140
2022-01-24 14:08:57,159 DEBUG find_def_from_bottom label 132
2022-01-24 14:08:57,159 DEBUG incoming_def r.2 = phi(incoming_values=[Var(r, numbers.py:217)], incoming_blocks=[130])
2022-01-24 14:08:57,159 DEBUG incoming_def r.3 = phi(incoming_values=[Var(r.1, numbers.py:240), Var(r.2, numbers.py:240)], incoming_blocks=[148, 140])
2022-01-24 14:08:57,159 DEBUG replaced with: $148.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:57,159 DEBUG on stmt: r.1 = $148.3
2022-01-24 14:08:57,159 DEBUG on stmt: jump 156
2022-01-24 14:08:57,159 DEBUG ==== SSA block rewrite pass on 156
2022-01-24 14:08:57,159 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94ec3626d8>
2022-01-24 14:08:57,159 DEBUG on stmt: $const156.2 = const(int, 1)
2022-01-24 14:08:57,159 DEBUG on stmt: $156.3 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.2, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:57,159 DEBUG on stmt: exp = $156.3
2022-01-24 14:08:57,159 DEBUG on stmt: $156.6 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:57,159 DEBUG on stmt: a.1 = $156.6
2022-01-24 14:08:57,159 DEBUG on stmt: jump 132
2022-01-24 14:08:57,159 DEBUG ==== SSA block rewrite pass on 174
2022-01-24 14:08:57,160 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94ec3626d8>
2022-01-24 14:08:57,160 DEBUG on stmt: jump 176
2022-01-24 14:08:57,160 DEBUG ==== SSA block rewrite pass on 176
2022-01-24 14:08:57,160 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94ec3626d8>
2022-01-24 14:08:57,160 DEBUG on stmt: bool178 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,160 DEBUG on stmt: $178pred = call bool178(invert, func=bool178, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
2022-01-24 14:08:57,160 DEBUG on stmt: branch $178pred, 180, 188
2022-01-24 14:08:57,160 DEBUG ==== SSA block rewrite pass on 180
2022-01-24 14:08:57,160 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94ec3626d8>
2022-01-24 14:08:57,160 DEBUG on stmt: $const180.1 = const(float, 1.0)
2022-01-24 14:08:57,160 DEBUG on stmt: $180.3 = $const180.1 / r
2022-01-24 14:08:57,160 DEBUG find_def var='r' stmt=$180.3 = $const180.1 / r
2022-01-24 14:08:57,160 DEBUG find_def_from_top label 180
2022-01-24 14:08:57,160 DEBUG idom 176 from label 180
2022-01-24 14:08:57,160 DEBUG find_def_from_bottom label 176
2022-01-24 14:08:57,160 DEBUG find_def_from_top label 176
2022-01-24 14:08:57,160 DEBUG idom 174 from label 176
2022-01-24 14:08:57,160 DEBUG find_def_from_bottom label 174
2022-01-24 14:08:57,160 DEBUG find_def_from_top label 174
2022-01-24 14:08:57,161 DEBUG idom 132 from label 174
2022-01-24 14:08:57,161 DEBUG find_def_from_bottom label 132
2022-01-24 14:08:57,161 DEBUG replaced with: $180.3 = $const180.1 / r.2
2022-01-24 14:08:57,161 DEBUG on stmt: $180.4 = cast(value=$180.3)
2022-01-24 14:08:57,161 DEBUG on stmt: return $180.4
2022-01-24 14:08:57,161 DEBUG ==== SSA block rewrite pass on 188
2022-01-24 14:08:57,161 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94ec3626d8>
2022-01-24 14:08:57,161 DEBUG on stmt: $188.2 = cast(value=r)
2022-01-24 14:08:57,162 DEBUG find_def var='r' stmt=$188.2 = cast(value=r)
2022-01-24 14:08:57,162 DEBUG find_def_from_top label 188
2022-01-24 14:08:57,162 DEBUG idom 176 from label 188
2022-01-24 14:08:57,162 DEBUG find_def_from_bottom label 176
2022-01-24 14:08:57,162 DEBUG find_def_from_top label 176
2022-01-24 14:08:57,162 DEBUG idom 174 from label 176
2022-01-24 14:08:57,162 DEBUG find_def_from_bottom label 174
2022-01-24 14:08:57,162 DEBUG find_def_from_top label 174
2022-01-24 14:08:57,162 DEBUG idom 132 from label 174
2022-01-24 14:08:57,162 DEBUG find_def_from_bottom label 132
2022-01-24 14:08:57,162 DEBUG replaced with: $188.2 = cast(value=r.2)
2022-01-24 14:08:57,162 DEBUG on stmt: return $188.2
2022-01-24 14:08:57,162 DEBUG Fix SSA violator on var invert
2022-01-24 14:08:57,162 DEBUG ==== SSA block rewrite pass on 0
2022-01-24 14:08:57,162 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94ea99a748>
2022-01-24 14:08:57,162 DEBUG on stmt: a = arg(0, name=a)
2022-01-24 14:08:57,163 DEBUG on stmt: b = arg(1, name=b)
2022-01-24 14:08:57,163 DEBUG on stmt: $0.1 = freevar(tp: float64)
2022-01-24 14:08:57,163 DEBUG on stmt: $const0.2 = const(int, 1)
2022-01-24 14:08:57,163 DEBUG on stmt: r = call $0.1($const0.2, func=$0.1, args=[Var($const0.2, numbers.py:217)], kws=(), vararg=None)
2022-01-24 14:08:57,163 DEBUG on stmt: $0.4 = freevar(tp: float64)
2022-01-24 14:08:57,163 DEBUG on stmt: a.1 = call $0.4(a, func=$0.4, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
2022-01-24 14:08:57,163 DEBUG on stmt: $const0.8 = const(int, 0)
2022-01-24 14:08:57,163 DEBUG on stmt: $0.9 = b < $const0.8
2022-01-24 14:08:57,163 DEBUG on stmt: bool24 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,163 DEBUG on stmt: $24pred = call bool24($0.9, func=bool24, args=(Var($0.9, numbers.py:219),), kws=(), vararg=None)
2022-01-24 14:08:57,163 DEBUG on stmt: branch $24pred, 26, 98
2022-01-24 14:08:57,163 DEBUG ==== SSA block rewrite pass on 26
2022-01-24 14:08:57,163 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94ea99a748>
2022-01-24 14:08:57,163 DEBUG on stmt: invert = const(bool, True)
2022-01-24 14:08:57,163 DEBUG first assign: invert
2022-01-24 14:08:57,163 DEBUG replaced with: invert = const(bool, True)
2022-01-24 14:08:57,163 DEBUG on stmt: exp = unary(fn=<built-in function neg>, value=b)
2022-01-24 14:08:57,163 DEBUG on stmt: $const26.5 = const(int, 0)
2022-01-24 14:08:57,163 DEBUG on stmt: $26.6 = exp < $const26.5
2022-01-24 14:08:57,163 DEBUG on stmt: bool42 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,164 DEBUG on stmt: $42pred = call bool42($26.6, func=bool42, args=(Var($26.6, numbers.py:222),), kws=(), vararg=None)
2022-01-24 14:08:57,164 DEBUG on stmt: branch $42pred, 44, 48
2022-01-24 14:08:57,164 DEBUG ==== SSA block rewrite pass on 44
2022-01-24 14:08:57,164 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94ea99a748>
2022-01-24 14:08:57,164 DEBUG on stmt: $44.1 = global(OverflowError: <class 'OverflowError'>)
2022-01-24 14:08:57,164 DEBUG on stmt: <static> raise <class 'OverflowError'>
2022-01-24 14:08:57,164 DEBUG ==== SSA block rewrite pass on 48
2022-01-24 14:08:57,164 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94ea99a748>
2022-01-24 14:08:57,164 DEBUG on stmt: $48.1 = freevar(is_integer: False)
2022-01-24 14:08:57,164 DEBUG on stmt: bool50 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,164 DEBUG on stmt: $50pred = call bool50($48.1, func=bool50, args=(Var($48.1, numbers.py:224),), kws=(), vararg=None)
2022-01-24 14:08:57,164 DEBUG on stmt: jump 106
2022-01-24 14:08:57,164 DEBUG ==== SSA block rewrite pass on 98
2022-01-24 14:08:57,164 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94ea99a748>
2022-01-24 14:08:57,164 DEBUG on stmt: invert = const(bool, False)
2022-01-24 14:08:57,165 DEBUG replaced with: invert.1 = const(bool, False)
2022-01-24 14:08:57,165 DEBUG on stmt: exp = b
2022-01-24 14:08:57,165 DEBUG on stmt: jump 106
2022-01-24 14:08:57,165 DEBUG ==== SSA block rewrite pass on 106
2022-01-24 14:08:57,165 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94ea99a748>
2022-01-24 14:08:57,165 DEBUG on stmt: $const106.2 = const(int, 65536)
2022-01-24 14:08:57,165 DEBUG on stmt: $106.3 = exp > $const106.2
2022-01-24 14:08:57,165 DEBUG on stmt: bool112 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,165 DEBUG on stmt: $112pred = call bool112($106.3, func=bool112, args=(Var($106.3, numbers.py:235),), kws=(), vararg=None)
2022-01-24 14:08:57,165 DEBUG on stmt: branch $112pred, 114, 130
2022-01-24 14:08:57,165 DEBUG ==== SSA block rewrite pass on 114
2022-01-24 14:08:57,165 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94ea99a748>
2022-01-24 14:08:57,165 DEBUG on stmt: $114.1 = global(math: <module 'math' from '/Users/wdiepeveen/anaconda3/envs/aspire_env/lib/python3.6/lib-dynload/math.cpython-36m-darwin.so'>)
2022-01-24 14:08:57,166 DEBUG on stmt: $114.2 = getattr(value=$114.1, attr=pow)
2022-01-24 14:08:57,166 DEBUG on stmt: $114.4 = global(float: <class 'float'>)
2022-01-24 14:08:57,166 DEBUG on stmt: $114.6 = call $114.4(b, func=$114.4, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
2022-01-24 14:08:57,166 DEBUG on stmt: $114.7 = call $114.2(a.1, $114.6, func=$114.2, args=[Var(a.1, numbers.py:218), Var($114.6, numbers.py:237)], kws=(), vararg=None)
2022-01-24 14:08:57,166 DEBUG on stmt: $114.8 = cast(value=$114.7)
2022-01-24 14:08:57,166 DEBUG on stmt: return $114.8
2022-01-24 14:08:57,166 DEBUG ==== SSA block rewrite pass on 130
2022-01-24 14:08:57,166 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94ea99a748>
2022-01-24 14:08:57,166 DEBUG on stmt: jump 132
2022-01-24 14:08:57,166 DEBUG ==== SSA block rewrite pass on 132
2022-01-24 14:08:57,166 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94ea99a748>
2022-01-24 14:08:57,166 DEBUG on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:217), Var(r.3, numbers.py:240)], incoming_blocks=[130, 156])
2022-01-24 14:08:57,166 DEBUG on stmt: $const132.2 = const(int, 0)
2022-01-24 14:08:57,166 DEBUG on stmt: $132.3 = exp != $const132.2
2022-01-24 14:08:57,166 DEBUG on stmt: bool138 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,166 DEBUG on stmt: $138pred = call bool138($132.3, func=bool138, args=(Var($132.3, numbers.py:238),), kws=(), vararg=None)
2022-01-24 14:08:57,166 DEBUG on stmt: branch $138pred, 140, 174
2022-01-24 14:08:57,166 DEBUG ==== SSA block rewrite pass on 140
2022-01-24 14:08:57,166 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94ea99a748>
2022-01-24 14:08:57,166 DEBUG on stmt: $const140.2 = const(int, 1)
2022-01-24 14:08:57,166 DEBUG on stmt: $140.3 = exp & $const140.2
2022-01-24 14:08:57,166 DEBUG on stmt: bool146 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,166 DEBUG on stmt: $146pred = call bool146($140.3, func=bool146, args=(Var($140.3, numbers.py:239),), kws=(), vararg=None)
2022-01-24 14:08:57,166 DEBUG on stmt: branch $146pred, 148, 156
2022-01-24 14:08:57,166 DEBUG ==== SSA block rewrite pass on 148
2022-01-24 14:08:57,167 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94ea99a748>
2022-01-24 14:08:57,167 DEBUG on stmt: $148.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:57,167 DEBUG on stmt: r.1 = $148.3
2022-01-24 14:08:57,167 DEBUG on stmt: jump 156
2022-01-24 14:08:57,167 DEBUG ==== SSA block rewrite pass on 156
2022-01-24 14:08:57,167 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94ea99a748>
2022-01-24 14:08:57,167 DEBUG on stmt: r.3 = phi(incoming_values=[Var(r.1, numbers.py:240), Var(r.2, numbers.py:240)], incoming_blocks=[148, 140])
2022-01-24 14:08:57,167 DEBUG on stmt: $const156.2 = const(int, 1)
2022-01-24 14:08:57,167 DEBUG on stmt: $156.3 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.2, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:57,167 DEBUG on stmt: exp = $156.3
2022-01-24 14:08:57,167 DEBUG on stmt: $156.6 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:57,167 DEBUG on stmt: a.1 = $156.6
2022-01-24 14:08:57,167 DEBUG on stmt: jump 132
2022-01-24 14:08:57,167 DEBUG ==== SSA block rewrite pass on 174
2022-01-24 14:08:57,167 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94ea99a748>
2022-01-24 14:08:57,167 DEBUG on stmt: jump 176
2022-01-24 14:08:57,167 DEBUG ==== SSA block rewrite pass on 176
2022-01-24 14:08:57,167 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94ea99a748>
2022-01-24 14:08:57,167 DEBUG on stmt: bool178 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,167 DEBUG on stmt: $178pred = call bool178(invert, func=bool178, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
2022-01-24 14:08:57,167 DEBUG on stmt: branch $178pred, 180, 188
2022-01-24 14:08:57,167 DEBUG ==== SSA block rewrite pass on 180
2022-01-24 14:08:57,167 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94ea99a748>
2022-01-24 14:08:57,167 DEBUG on stmt: $const180.1 = const(float, 1.0)
2022-01-24 14:08:57,167 DEBUG on stmt: $180.3 = $const180.1 / r.2
2022-01-24 14:08:57,167 DEBUG on stmt: $180.4 = cast(value=$180.3)
2022-01-24 14:08:57,167 DEBUG on stmt: return $180.4
2022-01-24 14:08:57,167 DEBUG ==== SSA block rewrite pass on 188
2022-01-24 14:08:57,167 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94ea99a748>
2022-01-24 14:08:57,168 DEBUG on stmt: $188.2 = cast(value=r.2)
2022-01-24 14:08:57,168 DEBUG on stmt: return $188.2
2022-01-24 14:08:57,168 DEBUG Replaced assignments: defaultdict(<class 'list'>,
            {26: [<numba.core.ir.Assign object at 0x7f94ec362d30>],
             98: [<numba.core.ir.Assign object at 0x7f94ec362748>]})
2022-01-24 14:08:57,168 DEBUG ==== SSA block rewrite pass on 0
2022-01-24 14:08:57,168 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94e51aa780>
2022-01-24 14:08:57,168 DEBUG on stmt: a = arg(0, name=a)
2022-01-24 14:08:57,168 DEBUG on stmt: b = arg(1, name=b)
2022-01-24 14:08:57,168 DEBUG on stmt: $0.1 = freevar(tp: float64)
2022-01-24 14:08:57,168 DEBUG on stmt: $const0.2 = const(int, 1)
2022-01-24 14:08:57,168 DEBUG on stmt: r = call $0.1($const0.2, func=$0.1, args=[Var($const0.2, numbers.py:217)], kws=(), vararg=None)
2022-01-24 14:08:57,168 DEBUG on stmt: $0.4 = freevar(tp: float64)
2022-01-24 14:08:57,168 DEBUG on stmt: a.1 = call $0.4(a, func=$0.4, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
2022-01-24 14:08:57,168 DEBUG on stmt: $const0.8 = const(int, 0)
2022-01-24 14:08:57,168 DEBUG on stmt: $0.9 = b < $const0.8
2022-01-24 14:08:57,168 DEBUG on stmt: bool24 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,168 DEBUG on stmt: $24pred = call bool24($0.9, func=bool24, args=(Var($0.9, numbers.py:219),), kws=(), vararg=None)
2022-01-24 14:08:57,168 DEBUG on stmt: branch $24pred, 26, 98
2022-01-24 14:08:57,168 DEBUG ==== SSA block rewrite pass on 26
2022-01-24 14:08:57,169 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94e51aa780>
2022-01-24 14:08:57,169 DEBUG on stmt: invert = const(bool, True)
2022-01-24 14:08:57,169 DEBUG on stmt: exp = unary(fn=<built-in function neg>, value=b)
2022-01-24 14:08:57,169 DEBUG on stmt: $const26.5 = const(int, 0)
2022-01-24 14:08:57,169 DEBUG on stmt: $26.6 = exp < $const26.5
2022-01-24 14:08:57,169 DEBUG on stmt: bool42 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,169 DEBUG on stmt: $42pred = call bool42($26.6, func=bool42, args=(Var($26.6, numbers.py:222),), kws=(), vararg=None)
2022-01-24 14:08:57,169 DEBUG on stmt: branch $42pred, 44, 48
2022-01-24 14:08:57,169 DEBUG ==== SSA block rewrite pass on 44
2022-01-24 14:08:57,169 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94e51aa780>
2022-01-24 14:08:57,169 DEBUG on stmt: $44.1 = global(OverflowError: <class 'OverflowError'>)
2022-01-24 14:08:57,169 DEBUG on stmt: <static> raise <class 'OverflowError'>
2022-01-24 14:08:57,170 DEBUG ==== SSA block rewrite pass on 48
2022-01-24 14:08:57,170 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94e51aa780>
2022-01-24 14:08:57,170 DEBUG on stmt: $48.1 = freevar(is_integer: False)
2022-01-24 14:08:57,170 DEBUG on stmt: bool50 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,170 DEBUG on stmt: $50pred = call bool50($48.1, func=bool50, args=(Var($48.1, numbers.py:224),), kws=(), vararg=None)
2022-01-24 14:08:57,170 DEBUG on stmt: jump 106
2022-01-24 14:08:57,170 DEBUG ==== SSA block rewrite pass on 98
2022-01-24 14:08:57,170 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94e51aa780>
2022-01-24 14:08:57,170 DEBUG on stmt: invert.1 = const(bool, False)
2022-01-24 14:08:57,170 DEBUG on stmt: exp = b
2022-01-24 14:08:57,170 DEBUG on stmt: jump 106
2022-01-24 14:08:57,170 DEBUG ==== SSA block rewrite pass on 106
2022-01-24 14:08:57,170 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94e51aa780>
2022-01-24 14:08:57,170 DEBUG on stmt: $const106.2 = const(int, 65536)
2022-01-24 14:08:57,170 DEBUG on stmt: $106.3 = exp > $const106.2
2022-01-24 14:08:57,170 DEBUG on stmt: bool112 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,170 DEBUG on stmt: $112pred = call bool112($106.3, func=bool112, args=(Var($106.3, numbers.py:235),), kws=(), vararg=None)
2022-01-24 14:08:57,170 DEBUG on stmt: branch $112pred, 114, 130
2022-01-24 14:08:57,170 DEBUG ==== SSA block rewrite pass on 114
2022-01-24 14:08:57,171 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94e51aa780>
2022-01-24 14:08:57,171 DEBUG on stmt: $114.1 = global(math: <module 'math' from '/Users/wdiepeveen/anaconda3/envs/aspire_env/lib/python3.6/lib-dynload/math.cpython-36m-darwin.so'>)
2022-01-24 14:08:57,171 DEBUG on stmt: $114.2 = getattr(value=$114.1, attr=pow)
2022-01-24 14:08:57,171 DEBUG on stmt: $114.4 = global(float: <class 'float'>)
2022-01-24 14:08:57,171 DEBUG on stmt: $114.6 = call $114.4(b, func=$114.4, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
2022-01-24 14:08:57,171 DEBUG on stmt: $114.7 = call $114.2(a.1, $114.6, func=$114.2, args=[Var(a.1, numbers.py:218), Var($114.6, numbers.py:237)], kws=(), vararg=None)
2022-01-24 14:08:57,171 DEBUG on stmt: $114.8 = cast(value=$114.7)
2022-01-24 14:08:57,171 DEBUG on stmt: return $114.8
2022-01-24 14:08:57,171 DEBUG ==== SSA block rewrite pass on 130
2022-01-24 14:08:57,171 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94e51aa780>
2022-01-24 14:08:57,171 DEBUG on stmt: jump 132
2022-01-24 14:08:57,171 DEBUG ==== SSA block rewrite pass on 132
2022-01-24 14:08:57,172 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94e51aa780>
2022-01-24 14:08:57,172 DEBUG on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:217), Var(r.3, numbers.py:240)], incoming_blocks=[130, 156])
2022-01-24 14:08:57,172 DEBUG on stmt: $const132.2 = const(int, 0)
2022-01-24 14:08:57,172 DEBUG on stmt: $132.3 = exp != $const132.2
2022-01-24 14:08:57,172 DEBUG on stmt: bool138 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,172 DEBUG on stmt: $138pred = call bool138($132.3, func=bool138, args=(Var($132.3, numbers.py:238),), kws=(), vararg=None)
2022-01-24 14:08:57,172 DEBUG on stmt: branch $138pred, 140, 174
2022-01-24 14:08:57,172 DEBUG ==== SSA block rewrite pass on 140
2022-01-24 14:08:57,172 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94e51aa780>
2022-01-24 14:08:57,172 DEBUG on stmt: $const140.2 = const(int, 1)
2022-01-24 14:08:57,172 DEBUG on stmt: $140.3 = exp & $const140.2
2022-01-24 14:08:57,172 DEBUG on stmt: bool146 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,172 DEBUG on stmt: $146pred = call bool146($140.3, func=bool146, args=(Var($140.3, numbers.py:239),), kws=(), vararg=None)
2022-01-24 14:08:57,172 DEBUG on stmt: branch $146pred, 148, 156
2022-01-24 14:08:57,172 DEBUG ==== SSA block rewrite pass on 148
2022-01-24 14:08:57,172 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94e51aa780>
2022-01-24 14:08:57,173 DEBUG on stmt: $148.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:57,173 DEBUG on stmt: r.1 = $148.3
2022-01-24 14:08:57,173 DEBUG on stmt: jump 156
2022-01-24 14:08:57,173 DEBUG ==== SSA block rewrite pass on 156
2022-01-24 14:08:57,173 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94e51aa780>
2022-01-24 14:08:57,173 DEBUG on stmt: r.3 = phi(incoming_values=[Var(r.1, numbers.py:240), Var(r.2, numbers.py:240)], incoming_blocks=[148, 140])
2022-01-24 14:08:57,173 DEBUG on stmt: $const156.2 = const(int, 1)
2022-01-24 14:08:57,173 DEBUG on stmt: $156.3 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.2, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:57,173 DEBUG on stmt: exp = $156.3
2022-01-24 14:08:57,173 DEBUG on stmt: $156.6 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:57,173 DEBUG on stmt: a.1 = $156.6
2022-01-24 14:08:57,173 DEBUG on stmt: jump 132
2022-01-24 14:08:57,173 DEBUG ==== SSA block rewrite pass on 174
2022-01-24 14:08:57,173 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94e51aa780>
2022-01-24 14:08:57,173 DEBUG on stmt: jump 176
2022-01-24 14:08:57,173 DEBUG ==== SSA block rewrite pass on 176
2022-01-24 14:08:57,173 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94e51aa780>
2022-01-24 14:08:57,173 DEBUG on stmt: bool178 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,173 DEBUG on stmt: $178pred = call bool178(invert, func=bool178, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
2022-01-24 14:08:57,173 DEBUG find_def var='invert' stmt=$178pred = call bool178(invert, func=bool178, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
2022-01-24 14:08:57,174 DEBUG find_def_from_top label 176
2022-01-24 14:08:57,174 DEBUG idom 174 from label 176
2022-01-24 14:08:57,174 DEBUG find_def_from_bottom label 174
2022-01-24 14:08:57,174 DEBUG find_def_from_top label 174
2022-01-24 14:08:57,174 DEBUG idom 132 from label 174
2022-01-24 14:08:57,174 DEBUG find_def_from_bottom label 132
2022-01-24 14:08:57,174 DEBUG find_def_from_top label 132
2022-01-24 14:08:57,174 DEBUG idom 130 from label 132
2022-01-24 14:08:57,174 DEBUG find_def_from_bottom label 130
2022-01-24 14:08:57,174 DEBUG find_def_from_top label 130
2022-01-24 14:08:57,174 DEBUG idom 106 from label 130
2022-01-24 14:08:57,174 DEBUG find_def_from_bottom label 106
2022-01-24 14:08:57,174 DEBUG find_def_from_top label 106
2022-01-24 14:08:57,174 DEBUG insert phi node invert.2 = phi(incoming_values=[], incoming_blocks=[]) at 106
2022-01-24 14:08:57,174 DEBUG find_def_from_bottom label 48
2022-01-24 14:08:57,174 DEBUG find_def_from_top label 48
2022-01-24 14:08:57,174 DEBUG idom 26 from label 48
2022-01-24 14:08:57,174 DEBUG find_def_from_bottom label 26
2022-01-24 14:08:57,174 DEBUG incoming_def invert = const(bool, True)
2022-01-24 14:08:57,174 DEBUG find_def_from_bottom label 98
2022-01-24 14:08:57,174 DEBUG incoming_def invert.1 = const(bool, False)
2022-01-24 14:08:57,174 DEBUG replaced with: $178pred = call bool178(invert.2, func=bool178, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
2022-01-24 14:08:57,174 DEBUG on stmt: branch $178pred, 180, 188
2022-01-24 14:08:57,174 DEBUG ==== SSA block rewrite pass on 180
2022-01-24 14:08:57,174 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94e51aa780>
2022-01-24 14:08:57,174 DEBUG on stmt: $const180.1 = const(float, 1.0)
2022-01-24 14:08:57,174 DEBUG on stmt: $180.3 = $const180.1 / r.2
2022-01-24 14:08:57,175 DEBUG on stmt: $180.4 = cast(value=$180.3)
2022-01-24 14:08:57,175 DEBUG on stmt: return $180.4
2022-01-24 14:08:57,175 DEBUG ==== SSA block rewrite pass on 188
2022-01-24 14:08:57,175 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94e51aa780>
2022-01-24 14:08:57,175 DEBUG on stmt: $188.2 = cast(value=r.2)
2022-01-24 14:08:57,175 DEBUG on stmt: return $188.2
2022-01-24 14:08:57,175 DEBUG Fix SSA violator on var exp
2022-01-24 14:08:57,175 DEBUG ==== SSA block rewrite pass on 0
2022-01-24 14:08:57,175 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94e78fcd68>
2022-01-24 14:08:57,175 DEBUG on stmt: a = arg(0, name=a)
2022-01-24 14:08:57,175 DEBUG on stmt: b = arg(1, name=b)
2022-01-24 14:08:57,175 DEBUG on stmt: $0.1 = freevar(tp: float64)
2022-01-24 14:08:57,175 DEBUG on stmt: $const0.2 = const(int, 1)
2022-01-24 14:08:57,175 DEBUG on stmt: r = call $0.1($const0.2, func=$0.1, args=[Var($const0.2, numbers.py:217)], kws=(), vararg=None)
2022-01-24 14:08:57,175 DEBUG on stmt: $0.4 = freevar(tp: float64)
2022-01-24 14:08:57,175 DEBUG on stmt: a.1 = call $0.4(a, func=$0.4, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
2022-01-24 14:08:57,175 DEBUG on stmt: $const0.8 = const(int, 0)
2022-01-24 14:08:57,175 DEBUG on stmt: $0.9 = b < $const0.8
2022-01-24 14:08:57,175 DEBUG on stmt: bool24 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,175 DEBUG on stmt: $24pred = call bool24($0.9, func=bool24, args=(Var($0.9, numbers.py:219),), kws=(), vararg=None)
2022-01-24 14:08:57,175 DEBUG on stmt: branch $24pred, 26, 98
2022-01-24 14:08:57,175 DEBUG ==== SSA block rewrite pass on 26
2022-01-24 14:08:57,175 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94e78fcd68>
2022-01-24 14:08:57,175 DEBUG on stmt: invert = const(bool, True)
2022-01-24 14:08:57,175 DEBUG on stmt: exp = unary(fn=<built-in function neg>, value=b)
2022-01-24 14:08:57,175 DEBUG first assign: exp
2022-01-24 14:08:57,176 DEBUG replaced with: exp = unary(fn=<built-in function neg>, value=b)
2022-01-24 14:08:57,176 DEBUG on stmt: $const26.5 = const(int, 0)
2022-01-24 14:08:57,176 DEBUG on stmt: $26.6 = exp < $const26.5
2022-01-24 14:08:57,176 DEBUG on stmt: bool42 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,176 DEBUG on stmt: $42pred = call bool42($26.6, func=bool42, args=(Var($26.6, numbers.py:222),), kws=(), vararg=None)
2022-01-24 14:08:57,176 DEBUG on stmt: branch $42pred, 44, 48
2022-01-24 14:08:57,176 DEBUG ==== SSA block rewrite pass on 44
2022-01-24 14:08:57,176 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94e78fcd68>
2022-01-24 14:08:57,176 DEBUG on stmt: $44.1 = global(OverflowError: <class 'OverflowError'>)
2022-01-24 14:08:57,176 DEBUG on stmt: <static> raise <class 'OverflowError'>
2022-01-24 14:08:57,176 DEBUG ==== SSA block rewrite pass on 48
2022-01-24 14:08:57,176 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94e78fcd68>
2022-01-24 14:08:57,176 DEBUG on stmt: $48.1 = freevar(is_integer: False)
2022-01-24 14:08:57,176 DEBUG on stmt: bool50 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,176 DEBUG on stmt: $50pred = call bool50($48.1, func=bool50, args=(Var($48.1, numbers.py:224),), kws=(), vararg=None)
2022-01-24 14:08:57,176 DEBUG on stmt: jump 106
2022-01-24 14:08:57,176 DEBUG ==== SSA block rewrite pass on 98
2022-01-24 14:08:57,176 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94e78fcd68>
2022-01-24 14:08:57,176 DEBUG on stmt: invert.1 = const(bool, False)
2022-01-24 14:08:57,176 DEBUG on stmt: exp = b
2022-01-24 14:08:57,176 DEBUG replaced with: exp.1 = b
2022-01-24 14:08:57,176 DEBUG on stmt: jump 106
2022-01-24 14:08:57,176 DEBUG ==== SSA block rewrite pass on 106
2022-01-24 14:08:57,176 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94e78fcd68>
2022-01-24 14:08:57,176 DEBUG on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:220), Var(invert.1, numbers.py:233)], incoming_blocks=[48, 98])
2022-01-24 14:08:57,176 DEBUG on stmt: $const106.2 = const(int, 65536)
2022-01-24 14:08:57,176 DEBUG on stmt: $106.3 = exp > $const106.2
2022-01-24 14:08:57,176 DEBUG on stmt: bool112 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,177 DEBUG on stmt: $112pred = call bool112($106.3, func=bool112, args=(Var($106.3, numbers.py:235),), kws=(), vararg=None)
2022-01-24 14:08:57,177 DEBUG on stmt: branch $112pred, 114, 130
2022-01-24 14:08:57,177 DEBUG ==== SSA block rewrite pass on 114
2022-01-24 14:08:57,177 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94e78fcd68>
2022-01-24 14:08:57,177 DEBUG on stmt: $114.1 = global(math: <module 'math' from '/Users/wdiepeveen/anaconda3/envs/aspire_env/lib/python3.6/lib-dynload/math.cpython-36m-darwin.so'>)
2022-01-24 14:08:57,177 DEBUG on stmt: $114.2 = getattr(value=$114.1, attr=pow)
2022-01-24 14:08:57,177 DEBUG on stmt: $114.4 = global(float: <class 'float'>)
2022-01-24 14:08:57,177 DEBUG on stmt: $114.6 = call $114.4(b, func=$114.4, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
2022-01-24 14:08:57,177 DEBUG on stmt: $114.7 = call $114.2(a.1, $114.6, func=$114.2, args=[Var(a.1, numbers.py:218), Var($114.6, numbers.py:237)], kws=(), vararg=None)
2022-01-24 14:08:57,177 DEBUG on stmt: $114.8 = cast(value=$114.7)
2022-01-24 14:08:57,177 DEBUG on stmt: return $114.8
2022-01-24 14:08:57,177 DEBUG ==== SSA block rewrite pass on 130
2022-01-24 14:08:57,177 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94e78fcd68>
2022-01-24 14:08:57,177 DEBUG on stmt: jump 132
2022-01-24 14:08:57,177 DEBUG ==== SSA block rewrite pass on 132
2022-01-24 14:08:57,178 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94e78fcd68>
2022-01-24 14:08:57,178 DEBUG on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:217), Var(r.3, numbers.py:240)], incoming_blocks=[130, 156])
2022-01-24 14:08:57,178 DEBUG on stmt: $const132.2 = const(int, 0)
2022-01-24 14:08:57,178 DEBUG on stmt: $132.3 = exp != $const132.2
2022-01-24 14:08:57,178 DEBUG on stmt: bool138 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,178 DEBUG on stmt: $138pred = call bool138($132.3, func=bool138, args=(Var($132.3, numbers.py:238),), kws=(), vararg=None)
2022-01-24 14:08:57,178 DEBUG on stmt: branch $138pred, 140, 174
2022-01-24 14:08:57,178 DEBUG ==== SSA block rewrite pass on 140
2022-01-24 14:08:57,178 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94e78fcd68>
2022-01-24 14:08:57,178 DEBUG on stmt: $const140.2 = const(int, 1)
2022-01-24 14:08:57,178 DEBUG on stmt: $140.3 = exp & $const140.2
2022-01-24 14:08:57,178 DEBUG on stmt: bool146 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,178 DEBUG on stmt: $146pred = call bool146($140.3, func=bool146, args=(Var($140.3, numbers.py:239),), kws=(), vararg=None)
2022-01-24 14:08:57,178 DEBUG on stmt: branch $146pred, 148, 156
2022-01-24 14:08:57,178 DEBUG ==== SSA block rewrite pass on 148
2022-01-24 14:08:57,179 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94e78fcd68>
2022-01-24 14:08:57,179 DEBUG on stmt: $148.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:57,179 DEBUG on stmt: r.1 = $148.3
2022-01-24 14:08:57,179 DEBUG on stmt: jump 156
2022-01-24 14:08:57,179 DEBUG ==== SSA block rewrite pass on 156
2022-01-24 14:08:57,179 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94e78fcd68>
2022-01-24 14:08:57,179 DEBUG on stmt: r.3 = phi(incoming_values=[Var(r.1, numbers.py:240), Var(r.2, numbers.py:240)], incoming_blocks=[148, 140])
2022-01-24 14:08:57,179 DEBUG on stmt: $const156.2 = const(int, 1)
2022-01-24 14:08:57,179 DEBUG on stmt: $156.3 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.2, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:57,179 DEBUG on stmt: exp = $156.3
2022-01-24 14:08:57,179 DEBUG replaced with: exp.2 = $156.3
2022-01-24 14:08:57,179 DEBUG on stmt: $156.6 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:57,179 DEBUG on stmt: a.1 = $156.6
2022-01-24 14:08:57,179 DEBUG on stmt: jump 132
2022-01-24 14:08:57,179 DEBUG ==== SSA block rewrite pass on 174
2022-01-24 14:08:57,179 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94e78fcd68>
2022-01-24 14:08:57,179 DEBUG on stmt: jump 176
2022-01-24 14:08:57,179 DEBUG ==== SSA block rewrite pass on 176
2022-01-24 14:08:57,179 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94e78fcd68>
2022-01-24 14:08:57,179 DEBUG on stmt: bool178 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,179 DEBUG on stmt: $178pred = call bool178(invert.2, func=bool178, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
2022-01-24 14:08:57,179 DEBUG on stmt: branch $178pred, 180, 188
2022-01-24 14:08:57,180 DEBUG ==== SSA block rewrite pass on 180
2022-01-24 14:08:57,180 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94e78fcd68>
2022-01-24 14:08:57,180 DEBUG on stmt: $const180.1 = const(float, 1.0)
2022-01-24 14:08:57,180 DEBUG on stmt: $180.3 = $const180.1 / r.2
2022-01-24 14:08:57,180 DEBUG on stmt: $180.4 = cast(value=$180.3)
2022-01-24 14:08:57,180 DEBUG on stmt: return $180.4
2022-01-24 14:08:57,180 DEBUG ==== SSA block rewrite pass on 188
2022-01-24 14:08:57,180 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94e78fcd68>
2022-01-24 14:08:57,180 DEBUG on stmt: $188.2 = cast(value=r.2)
2022-01-24 14:08:57,180 DEBUG on stmt: return $188.2
2022-01-24 14:08:57,180 DEBUG Replaced assignments: defaultdict(<class 'list'>,
            {26: [<numba.core.ir.Assign object at 0x7f94ec362b70>],
             98: [<numba.core.ir.Assign object at 0x7f94ec3625c0>],
             156: [<numba.core.ir.Assign object at 0x7f94ec326550>]})
2022-01-24 14:08:57,181 DEBUG ==== SSA block rewrite pass on 0
2022-01-24 14:08:57,181 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94ec3626a0>
2022-01-24 14:08:57,181 DEBUG on stmt: a = arg(0, name=a)
2022-01-24 14:08:57,181 DEBUG on stmt: b = arg(1, name=b)
2022-01-24 14:08:57,181 DEBUG on stmt: $0.1 = freevar(tp: float64)
2022-01-24 14:08:57,181 DEBUG on stmt: $const0.2 = const(int, 1)
2022-01-24 14:08:57,181 DEBUG on stmt: r = call $0.1($const0.2, func=$0.1, args=[Var($const0.2, numbers.py:217)], kws=(), vararg=None)
2022-01-24 14:08:57,181 DEBUG on stmt: $0.4 = freevar(tp: float64)
2022-01-24 14:08:57,181 DEBUG on stmt: a.1 = call $0.4(a, func=$0.4, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
2022-01-24 14:08:57,181 DEBUG on stmt: $const0.8 = const(int, 0)
2022-01-24 14:08:57,181 DEBUG on stmt: $0.9 = b < $const0.8
2022-01-24 14:08:57,181 DEBUG on stmt: bool24 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,182 DEBUG on stmt: $24pred = call bool24($0.9, func=bool24, args=(Var($0.9, numbers.py:219),), kws=(), vararg=None)
2022-01-24 14:08:57,182 DEBUG on stmt: branch $24pred, 26, 98
2022-01-24 14:08:57,182 DEBUG ==== SSA block rewrite pass on 26
2022-01-24 14:08:57,182 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94ec3626a0>
2022-01-24 14:08:57,182 DEBUG on stmt: invert = const(bool, True)
2022-01-24 14:08:57,182 DEBUG on stmt: exp = unary(fn=<built-in function neg>, value=b)
2022-01-24 14:08:57,182 DEBUG on stmt: $const26.5 = const(int, 0)
2022-01-24 14:08:57,182 DEBUG on stmt: $26.6 = exp < $const26.5
2022-01-24 14:08:57,182 DEBUG find_def var='exp' stmt=$26.6 = exp < $const26.5
2022-01-24 14:08:57,182 DEBUG on stmt: bool42 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,182 DEBUG on stmt: $42pred = call bool42($26.6, func=bool42, args=(Var($26.6, numbers.py:222),), kws=(), vararg=None)
2022-01-24 14:08:57,182 DEBUG on stmt: branch $42pred, 44, 48
2022-01-24 14:08:57,182 DEBUG ==== SSA block rewrite pass on 44
2022-01-24 14:08:57,182 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94ec3626a0>
2022-01-24 14:08:57,182 DEBUG on stmt: $44.1 = global(OverflowError: <class 'OverflowError'>)
2022-01-24 14:08:57,182 DEBUG on stmt: <static> raise <class 'OverflowError'>
2022-01-24 14:08:57,182 DEBUG ==== SSA block rewrite pass on 48
2022-01-24 14:08:57,183 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94ec3626a0>
2022-01-24 14:08:57,183 DEBUG on stmt: $48.1 = freevar(is_integer: False)
2022-01-24 14:08:57,183 DEBUG on stmt: bool50 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,183 DEBUG on stmt: $50pred = call bool50($48.1, func=bool50, args=(Var($48.1, numbers.py:224),), kws=(), vararg=None)
2022-01-24 14:08:57,183 DEBUG on stmt: jump 106
2022-01-24 14:08:57,183 DEBUG ==== SSA block rewrite pass on 98
2022-01-24 14:08:57,183 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94ec3626a0>
2022-01-24 14:08:57,183 DEBUG on stmt: invert.1 = const(bool, False)
2022-01-24 14:08:57,183 DEBUG on stmt: exp.1 = b
2022-01-24 14:08:57,183 DEBUG on stmt: jump 106
2022-01-24 14:08:57,183 DEBUG ==== SSA block rewrite pass on 106
2022-01-24 14:08:57,183 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94ec3626a0>
2022-01-24 14:08:57,183 DEBUG on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:220), Var(invert.1, numbers.py:233)], incoming_blocks=[48, 98])
2022-01-24 14:08:57,183 DEBUG on stmt: $const106.2 = const(int, 65536)
2022-01-24 14:08:57,183 DEBUG on stmt: $106.3 = exp > $const106.2
2022-01-24 14:08:57,183 DEBUG find_def var='exp' stmt=$106.3 = exp > $const106.2
2022-01-24 14:08:57,183 DEBUG find_def_from_top label 106
2022-01-24 14:08:57,183 DEBUG insert phi node exp.3 = phi(incoming_values=[], incoming_blocks=[]) at 106
2022-01-24 14:08:57,183 DEBUG find_def_from_bottom label 48
2022-01-24 14:08:57,183 DEBUG find_def_from_top label 48
2022-01-24 14:08:57,183 DEBUG idom 26 from label 48
2022-01-24 14:08:57,183 DEBUG find_def_from_bottom label 26
2022-01-24 14:08:57,183 DEBUG incoming_def exp = unary(fn=<built-in function neg>, value=b)
2022-01-24 14:08:57,183 DEBUG find_def_from_bottom label 98
2022-01-24 14:08:57,183 DEBUG incoming_def exp.1 = b
2022-01-24 14:08:57,183 DEBUG replaced with: $106.3 = exp.3 > $const106.2
2022-01-24 14:08:57,184 DEBUG on stmt: bool112 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,184 DEBUG on stmt: $112pred = call bool112($106.3, func=bool112, args=(Var($106.3, numbers.py:235),), kws=(), vararg=None)
2022-01-24 14:08:57,184 DEBUG on stmt: branch $112pred, 114, 130
2022-01-24 14:08:57,184 DEBUG ==== SSA block rewrite pass on 114
2022-01-24 14:08:57,184 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94ec3626a0>
2022-01-24 14:08:57,184 DEBUG on stmt: $114.1 = global(math: <module 'math' from '/Users/wdiepeveen/anaconda3/envs/aspire_env/lib/python3.6/lib-dynload/math.cpython-36m-darwin.so'>)
2022-01-24 14:08:57,184 DEBUG on stmt: $114.2 = getattr(value=$114.1, attr=pow)
2022-01-24 14:08:57,184 DEBUG on stmt: $114.4 = global(float: <class 'float'>)
2022-01-24 14:08:57,184 DEBUG on stmt: $114.6 = call $114.4(b, func=$114.4, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
2022-01-24 14:08:57,184 DEBUG on stmt: $114.7 = call $114.2(a.1, $114.6, func=$114.2, args=[Var(a.1, numbers.py:218), Var($114.6, numbers.py:237)], kws=(), vararg=None)
2022-01-24 14:08:57,184 DEBUG on stmt: $114.8 = cast(value=$114.7)
2022-01-24 14:08:57,184 DEBUG on stmt: return $114.8
2022-01-24 14:08:57,184 DEBUG ==== SSA block rewrite pass on 130
2022-01-24 14:08:57,184 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94ec3626a0>
2022-01-24 14:08:57,184 DEBUG on stmt: jump 132
2022-01-24 14:08:57,184 DEBUG ==== SSA block rewrite pass on 132
2022-01-24 14:08:57,184 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94ec3626a0>
2022-01-24 14:08:57,184 DEBUG on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:217), Var(r.3, numbers.py:240)], incoming_blocks=[130, 156])
2022-01-24 14:08:57,184 DEBUG on stmt: $const132.2 = const(int, 0)
2022-01-24 14:08:57,184 DEBUG on stmt: $132.3 = exp != $const132.2
2022-01-24 14:08:57,184 DEBUG find_def var='exp' stmt=$132.3 = exp != $const132.2
2022-01-24 14:08:57,184 DEBUG find_def_from_top label 132
2022-01-24 14:08:57,184 DEBUG insert phi node exp.4 = phi(incoming_values=[], incoming_blocks=[]) at 132
2022-01-24 14:08:57,184 DEBUG find_def_from_bottom label 130
2022-01-24 14:08:57,185 DEBUG find_def_from_top label 130
2022-01-24 14:08:57,185 DEBUG idom 106 from label 130
2022-01-24 14:08:57,185 DEBUG find_def_from_bottom label 106
2022-01-24 14:08:57,185 DEBUG incoming_def exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
2022-01-24 14:08:57,185 DEBUG find_def_from_bottom label 156
2022-01-24 14:08:57,185 DEBUG incoming_def exp.2 = $156.3
2022-01-24 14:08:57,185 DEBUG replaced with: $132.3 = exp.4 != $const132.2
2022-01-24 14:08:57,185 DEBUG on stmt: bool138 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,185 DEBUG on stmt: $138pred = call bool138($132.3, func=bool138, args=(Var($132.3, numbers.py:238),), kws=(), vararg=None)
2022-01-24 14:08:57,185 DEBUG on stmt: branch $138pred, 140, 174
2022-01-24 14:08:57,185 DEBUG ==== SSA block rewrite pass on 140
2022-01-24 14:08:57,185 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94ec3626a0>
2022-01-24 14:08:57,185 DEBUG on stmt: $const140.2 = const(int, 1)
2022-01-24 14:08:57,185 DEBUG on stmt: $140.3 = exp & $const140.2
2022-01-24 14:08:57,185 DEBUG find_def var='exp' stmt=$140.3 = exp & $const140.2
2022-01-24 14:08:57,186 DEBUG find_def_from_top label 140
2022-01-24 14:08:57,186 DEBUG idom 132 from label 140
2022-01-24 14:08:57,186 DEBUG find_def_from_bottom label 132
2022-01-24 14:08:57,186 DEBUG replaced with: $140.3 = exp.4 & $const140.2
2022-01-24 14:08:57,186 DEBUG on stmt: bool146 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,186 DEBUG on stmt: $146pred = call bool146($140.3, func=bool146, args=(Var($140.3, numbers.py:239),), kws=(), vararg=None)
2022-01-24 14:08:57,186 DEBUG on stmt: branch $146pred, 148, 156
2022-01-24 14:08:57,186 DEBUG ==== SSA block rewrite pass on 148
2022-01-24 14:08:57,186 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94ec3626a0>
2022-01-24 14:08:57,186 DEBUG on stmt: $148.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:57,186 DEBUG on stmt: r.1 = $148.3
2022-01-24 14:08:57,186 DEBUG on stmt: jump 156
2022-01-24 14:08:57,186 DEBUG ==== SSA block rewrite pass on 156
2022-01-24 14:08:57,186 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94ec3626a0>
2022-01-24 14:08:57,186 DEBUG on stmt: r.3 = phi(incoming_values=[Var(r.1, numbers.py:240), Var(r.2, numbers.py:240)], incoming_blocks=[148, 140])
2022-01-24 14:08:57,186 DEBUG on stmt: $const156.2 = const(int, 1)
2022-01-24 14:08:57,186 DEBUG on stmt: $156.3 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.2, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:57,187 DEBUG find_def var='exp' stmt=$156.3 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.2, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:57,187 DEBUG find_def_from_top label 156
2022-01-24 14:08:57,187 DEBUG idom 140 from label 156
2022-01-24 14:08:57,187 DEBUG find_def_from_bottom label 140
2022-01-24 14:08:57,187 DEBUG find_def_from_top label 140
2022-01-24 14:08:57,187 DEBUG idom 132 from label 140
2022-01-24 14:08:57,187 DEBUG find_def_from_bottom label 132
2022-01-24 14:08:57,187 DEBUG replaced with: $156.3 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.2, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:57,187 DEBUG on stmt: exp.2 = $156.3
2022-01-24 14:08:57,187 DEBUG on stmt: $156.6 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:57,187 DEBUG on stmt: a.1 = $156.6
2022-01-24 14:08:57,187 DEBUG on stmt: jump 132
2022-01-24 14:08:57,187 DEBUG ==== SSA block rewrite pass on 174
2022-01-24 14:08:57,187 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94ec3626a0>
2022-01-24 14:08:57,187 DEBUG on stmt: jump 176
2022-01-24 14:08:57,188 DEBUG ==== SSA block rewrite pass on 176
2022-01-24 14:08:57,188 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94ec3626a0>
2022-01-24 14:08:57,188 DEBUG on stmt: bool178 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,188 DEBUG on stmt: $178pred = call bool178(invert.2, func=bool178, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
2022-01-24 14:08:57,188 DEBUG on stmt: branch $178pred, 180, 188
2022-01-24 14:08:57,188 DEBUG ==== SSA block rewrite pass on 180
2022-01-24 14:08:57,188 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94ec3626a0>
2022-01-24 14:08:57,188 DEBUG on stmt: $const180.1 = const(float, 1.0)
2022-01-24 14:08:57,188 DEBUG on stmt: $180.3 = $const180.1 / r.2
2022-01-24 14:08:57,188 DEBUG on stmt: $180.4 = cast(value=$180.3)
2022-01-24 14:08:57,188 DEBUG on stmt: return $180.4
2022-01-24 14:08:57,188 DEBUG ==== SSA block rewrite pass on 188
2022-01-24 14:08:57,188 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94ec3626a0>
2022-01-24 14:08:57,188 DEBUG on stmt: $188.2 = cast(value=r.2)
2022-01-24 14:08:57,188 DEBUG on stmt: return $188.2
2022-01-24 14:08:57,188 DEBUG Fix SSA violator on var a.1
2022-01-24 14:08:57,188 DEBUG ==== SSA block rewrite pass on 0
2022-01-24 14:08:57,188 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94e51aa780>
2022-01-24 14:08:57,188 DEBUG on stmt: a = arg(0, name=a)
2022-01-24 14:08:57,188 DEBUG on stmt: b = arg(1, name=b)
2022-01-24 14:08:57,188 DEBUG on stmt: $0.1 = freevar(tp: float64)
2022-01-24 14:08:57,188 DEBUG on stmt: $const0.2 = const(int, 1)
2022-01-24 14:08:57,188 DEBUG on stmt: r = call $0.1($const0.2, func=$0.1, args=[Var($const0.2, numbers.py:217)], kws=(), vararg=None)
2022-01-24 14:08:57,188 DEBUG on stmt: $0.4 = freevar(tp: float64)
2022-01-24 14:08:57,189 DEBUG on stmt: a.1 = call $0.4(a, func=$0.4, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
2022-01-24 14:08:57,189 DEBUG first assign: a.1
2022-01-24 14:08:57,189 DEBUG replaced with: a.1 = call $0.4(a, func=$0.4, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
2022-01-24 14:08:57,189 DEBUG on stmt: $const0.8 = const(int, 0)
2022-01-24 14:08:57,189 DEBUG on stmt: $0.9 = b < $const0.8
2022-01-24 14:08:57,189 DEBUG on stmt: bool24 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,189 DEBUG on stmt: $24pred = call bool24($0.9, func=bool24, args=(Var($0.9, numbers.py:219),), kws=(), vararg=None)
2022-01-24 14:08:57,189 DEBUG on stmt: branch $24pred, 26, 98
2022-01-24 14:08:57,189 DEBUG ==== SSA block rewrite pass on 26
2022-01-24 14:08:57,189 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94e51aa780>
2022-01-24 14:08:57,190 DEBUG on stmt: invert = const(bool, True)
2022-01-24 14:08:57,190 DEBUG on stmt: exp = unary(fn=<built-in function neg>, value=b)
2022-01-24 14:08:57,190 DEBUG on stmt: $const26.5 = const(int, 0)
2022-01-24 14:08:57,190 DEBUG on stmt: $26.6 = exp < $const26.5
2022-01-24 14:08:57,190 DEBUG on stmt: bool42 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,190 DEBUG on stmt: $42pred = call bool42($26.6, func=bool42, args=(Var($26.6, numbers.py:222),), kws=(), vararg=None)
2022-01-24 14:08:57,190 DEBUG on stmt: branch $42pred, 44, 48
2022-01-24 14:08:57,190 DEBUG ==== SSA block rewrite pass on 44
2022-01-24 14:08:57,190 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94e51aa780>
2022-01-24 14:08:57,190 DEBUG on stmt: $44.1 = global(OverflowError: <class 'OverflowError'>)
2022-01-24 14:08:57,190 DEBUG on stmt: <static> raise <class 'OverflowError'>
2022-01-24 14:08:57,190 DEBUG ==== SSA block rewrite pass on 48
2022-01-24 14:08:57,190 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94e51aa780>
2022-01-24 14:08:57,190 DEBUG on stmt: $48.1 = freevar(is_integer: False)
2022-01-24 14:08:57,190 DEBUG on stmt: bool50 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,190 DEBUG on stmt: $50pred = call bool50($48.1, func=bool50, args=(Var($48.1, numbers.py:224),), kws=(), vararg=None)
2022-01-24 14:08:57,190 DEBUG on stmt: jump 106
2022-01-24 14:08:57,190 DEBUG ==== SSA block rewrite pass on 98
2022-01-24 14:08:57,191 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94e51aa780>
2022-01-24 14:08:57,191 DEBUG on stmt: invert.1 = const(bool, False)
2022-01-24 14:08:57,191 DEBUG on stmt: exp.1 = b
2022-01-24 14:08:57,191 DEBUG on stmt: jump 106
2022-01-24 14:08:57,191 DEBUG ==== SSA block rewrite pass on 106
2022-01-24 14:08:57,191 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94e51aa780>
2022-01-24 14:08:57,191 DEBUG on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
2022-01-24 14:08:57,191 DEBUG on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:220), Var(invert.1, numbers.py:233)], incoming_blocks=[48, 98])
2022-01-24 14:08:57,191 DEBUG on stmt: $const106.2 = const(int, 65536)
2022-01-24 14:08:57,191 DEBUG on stmt: $106.3 = exp.3 > $const106.2
2022-01-24 14:08:57,191 DEBUG on stmt: bool112 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,191 DEBUG on stmt: $112pred = call bool112($106.3, func=bool112, args=(Var($106.3, numbers.py:235),), kws=(), vararg=None)
2022-01-24 14:08:57,191 DEBUG on stmt: branch $112pred, 114, 130
2022-01-24 14:08:57,191 DEBUG ==== SSA block rewrite pass on 114
2022-01-24 14:08:57,191 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94e51aa780>
2022-01-24 14:08:57,191 DEBUG on stmt: $114.1 = global(math: <module 'math' from '/Users/wdiepeveen/anaconda3/envs/aspire_env/lib/python3.6/lib-dynload/math.cpython-36m-darwin.so'>)
2022-01-24 14:08:57,191 DEBUG on stmt: $114.2 = getattr(value=$114.1, attr=pow)
2022-01-24 14:08:57,191 DEBUG on stmt: $114.4 = global(float: <class 'float'>)
2022-01-24 14:08:57,191 DEBUG on stmt: $114.6 = call $114.4(b, func=$114.4, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
2022-01-24 14:08:57,191 DEBUG on stmt: $114.7 = call $114.2(a.1, $114.6, func=$114.2, args=[Var(a.1, numbers.py:218), Var($114.6, numbers.py:237)], kws=(), vararg=None)
2022-01-24 14:08:57,191 DEBUG on stmt: $114.8 = cast(value=$114.7)
2022-01-24 14:08:57,191 DEBUG on stmt: return $114.8
2022-01-24 14:08:57,191 DEBUG ==== SSA block rewrite pass on 130
2022-01-24 14:08:57,191 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94e51aa780>
2022-01-24 14:08:57,191 DEBUG on stmt: jump 132
2022-01-24 14:08:57,191 DEBUG ==== SSA block rewrite pass on 132
2022-01-24 14:08:57,192 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94e51aa780>
2022-01-24 14:08:57,192 DEBUG on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[130, 156])
2022-01-24 14:08:57,192 DEBUG on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:217), Var(r.3, numbers.py:240)], incoming_blocks=[130, 156])
2022-01-24 14:08:57,192 DEBUG on stmt: $const132.2 = const(int, 0)
2022-01-24 14:08:57,192 DEBUG on stmt: $132.3 = exp.4 != $const132.2
2022-01-24 14:08:57,192 DEBUG on stmt: bool138 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,192 DEBUG on stmt: $138pred = call bool138($132.3, func=bool138, args=(Var($132.3, numbers.py:238),), kws=(), vararg=None)
2022-01-24 14:08:57,192 DEBUG on stmt: branch $138pred, 140, 174
2022-01-24 14:08:57,192 DEBUG ==== SSA block rewrite pass on 140
2022-01-24 14:08:57,192 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94e51aa780>
2022-01-24 14:08:57,192 DEBUG on stmt: $const140.2 = const(int, 1)
2022-01-24 14:08:57,192 DEBUG on stmt: $140.3 = exp.4 & $const140.2
2022-01-24 14:08:57,192 DEBUG on stmt: bool146 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,192 DEBUG on stmt: $146pred = call bool146($140.3, func=bool146, args=(Var($140.3, numbers.py:239),), kws=(), vararg=None)
2022-01-24 14:08:57,192 DEBUG on stmt: branch $146pred, 148, 156
2022-01-24 14:08:57,192 DEBUG ==== SSA block rewrite pass on 148
2022-01-24 14:08:57,192 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94e51aa780>
2022-01-24 14:08:57,192 DEBUG on stmt: $148.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:57,192 DEBUG on stmt: r.1 = $148.3
2022-01-24 14:08:57,192 DEBUG on stmt: jump 156
2022-01-24 14:08:57,192 DEBUG ==== SSA block rewrite pass on 156
2022-01-24 14:08:57,192 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94e51aa780>
2022-01-24 14:08:57,192 DEBUG on stmt: r.3 = phi(incoming_values=[Var(r.1, numbers.py:240), Var(r.2, numbers.py:240)], incoming_blocks=[148, 140])
2022-01-24 14:08:57,192 DEBUG on stmt: $const156.2 = const(int, 1)
2022-01-24 14:08:57,192 DEBUG on stmt: $156.3 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.2, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:57,192 DEBUG on stmt: exp.2 = $156.3
2022-01-24 14:08:57,192 DEBUG on stmt: $156.6 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:57,193 DEBUG on stmt: a.1 = $156.6
2022-01-24 14:08:57,193 DEBUG replaced with: a.1.1 = $156.6
2022-01-24 14:08:57,193 DEBUG on stmt: jump 132
2022-01-24 14:08:57,193 DEBUG ==== SSA block rewrite pass on 174
2022-01-24 14:08:57,193 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94e51aa780>
2022-01-24 14:08:57,193 DEBUG on stmt: jump 176
2022-01-24 14:08:57,193 DEBUG ==== SSA block rewrite pass on 176
2022-01-24 14:08:57,193 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94e51aa780>
2022-01-24 14:08:57,193 DEBUG on stmt: bool178 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,193 DEBUG on stmt: $178pred = call bool178(invert.2, func=bool178, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
2022-01-24 14:08:57,193 DEBUG on stmt: branch $178pred, 180, 188
2022-01-24 14:08:57,193 DEBUG ==== SSA block rewrite pass on 180
2022-01-24 14:08:57,193 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94e51aa780>
2022-01-24 14:08:57,193 DEBUG on stmt: $const180.1 = const(float, 1.0)
2022-01-24 14:08:57,193 DEBUG on stmt: $180.3 = $const180.1 / r.2
2022-01-24 14:08:57,193 DEBUG on stmt: $180.4 = cast(value=$180.3)
2022-01-24 14:08:57,193 DEBUG on stmt: return $180.4
2022-01-24 14:08:57,194 DEBUG ==== SSA block rewrite pass on 188
2022-01-24 14:08:57,194 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94e51aa780>
2022-01-24 14:08:57,194 DEBUG on stmt: $188.2 = cast(value=r.2)
2022-01-24 14:08:57,194 DEBUG on stmt: return $188.2
2022-01-24 14:08:57,194 DEBUG Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f94ec362ef0>],
             156: [<numba.core.ir.Assign object at 0x7f94ec326390>]})
2022-01-24 14:08:57,194 DEBUG ==== SSA block rewrite pass on 0
2022-01-24 14:08:57,194 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb7615f8>
2022-01-24 14:08:57,194 DEBUG on stmt: a = arg(0, name=a)
2022-01-24 14:08:57,194 DEBUG on stmt: b = arg(1, name=b)
2022-01-24 14:08:57,194 DEBUG on stmt: $0.1 = freevar(tp: float64)
2022-01-24 14:08:57,195 DEBUG on stmt: $const0.2 = const(int, 1)
2022-01-24 14:08:57,195 DEBUG on stmt: r = call $0.1($const0.2, func=$0.1, args=[Var($const0.2, numbers.py:217)], kws=(), vararg=None)
2022-01-24 14:08:57,195 DEBUG on stmt: $0.4 = freevar(tp: float64)
2022-01-24 14:08:57,195 DEBUG on stmt: a.1 = call $0.4(a, func=$0.4, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
2022-01-24 14:08:57,195 DEBUG on stmt: $const0.8 = const(int, 0)
2022-01-24 14:08:57,195 DEBUG on stmt: $0.9 = b < $const0.8
2022-01-24 14:08:57,195 DEBUG on stmt: bool24 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,195 DEBUG on stmt: $24pred = call bool24($0.9, func=bool24, args=(Var($0.9, numbers.py:219),), kws=(), vararg=None)
2022-01-24 14:08:57,195 DEBUG on stmt: branch $24pred, 26, 98
2022-01-24 14:08:57,195 DEBUG ==== SSA block rewrite pass on 26
2022-01-24 14:08:57,195 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb7615f8>
2022-01-24 14:08:57,195 DEBUG on stmt: invert = const(bool, True)
2022-01-24 14:08:57,195 DEBUG on stmt: exp = unary(fn=<built-in function neg>, value=b)
2022-01-24 14:08:57,195 DEBUG on stmt: $const26.5 = const(int, 0)
2022-01-24 14:08:57,195 DEBUG on stmt: $26.6 = exp < $const26.5
2022-01-24 14:08:57,196 DEBUG on stmt: bool42 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,196 DEBUG on stmt: $42pred = call bool42($26.6, func=bool42, args=(Var($26.6, numbers.py:222),), kws=(), vararg=None)
2022-01-24 14:08:57,196 DEBUG on stmt: branch $42pred, 44, 48
2022-01-24 14:08:57,196 DEBUG ==== SSA block rewrite pass on 44
2022-01-24 14:08:57,196 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb7615f8>
2022-01-24 14:08:57,196 DEBUG on stmt: $44.1 = global(OverflowError: <class 'OverflowError'>)
2022-01-24 14:08:57,196 DEBUG on stmt: <static> raise <class 'OverflowError'>
2022-01-24 14:08:57,196 DEBUG ==== SSA block rewrite pass on 48
2022-01-24 14:08:57,196 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb7615f8>
2022-01-24 14:08:57,196 DEBUG on stmt: $48.1 = freevar(is_integer: False)
2022-01-24 14:08:57,196 DEBUG on stmt: bool50 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,196 DEBUG on stmt: $50pred = call bool50($48.1, func=bool50, args=(Var($48.1, numbers.py:224),), kws=(), vararg=None)
2022-01-24 14:08:57,196 DEBUG on stmt: jump 106
2022-01-24 14:08:57,196 DEBUG ==== SSA block rewrite pass on 98
2022-01-24 14:08:57,196 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb7615f8>
2022-01-24 14:08:57,196 DEBUG on stmt: invert.1 = const(bool, False)
2022-01-24 14:08:57,196 DEBUG on stmt: exp.1 = b
2022-01-24 14:08:57,196 DEBUG on stmt: jump 106
2022-01-24 14:08:57,197 DEBUG ==== SSA block rewrite pass on 106
2022-01-24 14:08:57,197 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb7615f8>
2022-01-24 14:08:57,197 DEBUG on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
2022-01-24 14:08:57,197 DEBUG on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:220), Var(invert.1, numbers.py:233)], incoming_blocks=[48, 98])
2022-01-24 14:08:57,197 DEBUG on stmt: $const106.2 = const(int, 65536)
2022-01-24 14:08:57,197 DEBUG on stmt: $106.3 = exp.3 > $const106.2
2022-01-24 14:08:57,197 DEBUG on stmt: bool112 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,197 DEBUG on stmt: $112pred = call bool112($106.3, func=bool112, args=(Var($106.3, numbers.py:235),), kws=(), vararg=None)
2022-01-24 14:08:57,197 DEBUG on stmt: branch $112pred, 114, 130
2022-01-24 14:08:57,197 DEBUG ==== SSA block rewrite pass on 114
2022-01-24 14:08:57,197 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb7615f8>
2022-01-24 14:08:57,197 DEBUG on stmt: $114.1 = global(math: <module 'math' from '/Users/wdiepeveen/anaconda3/envs/aspire_env/lib/python3.6/lib-dynload/math.cpython-36m-darwin.so'>)
2022-01-24 14:08:57,197 DEBUG on stmt: $114.2 = getattr(value=$114.1, attr=pow)
2022-01-24 14:08:57,197 DEBUG on stmt: $114.4 = global(float: <class 'float'>)
2022-01-24 14:08:57,197 DEBUG on stmt: $114.6 = call $114.4(b, func=$114.4, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
2022-01-24 14:08:57,197 DEBUG on stmt: $114.7 = call $114.2(a.1, $114.6, func=$114.2, args=[Var(a.1, numbers.py:218), Var($114.6, numbers.py:237)], kws=(), vararg=None)
2022-01-24 14:08:57,197 DEBUG find_def var='a.1' stmt=$114.7 = call $114.2(a.1, $114.6, func=$114.2, args=[Var(a.1, numbers.py:218), Var($114.6, numbers.py:237)], kws=(), vararg=None)
2022-01-24 14:08:57,198 DEBUG find_def_from_top label 114
2022-01-24 14:08:57,198 DEBUG idom 106 from label 114
2022-01-24 14:08:57,198 DEBUG find_def_from_bottom label 106
2022-01-24 14:08:57,198 DEBUG find_def_from_top label 106
2022-01-24 14:08:57,198 DEBUG idom 0 from label 106
2022-01-24 14:08:57,198 DEBUG find_def_from_bottom label 0
2022-01-24 14:08:57,198 DEBUG on stmt: $114.8 = cast(value=$114.7)
2022-01-24 14:08:57,198 DEBUG on stmt: return $114.8
2022-01-24 14:08:57,198 DEBUG ==== SSA block rewrite pass on 130
2022-01-24 14:08:57,198 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb7615f8>
2022-01-24 14:08:57,198 DEBUG on stmt: jump 132
2022-01-24 14:08:57,198 DEBUG ==== SSA block rewrite pass on 132
2022-01-24 14:08:57,198 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb7615f8>
2022-01-24 14:08:57,198 DEBUG on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[130, 156])
2022-01-24 14:08:57,198 DEBUG on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:217), Var(r.3, numbers.py:240)], incoming_blocks=[130, 156])
2022-01-24 14:08:57,198 DEBUG on stmt: $const132.2 = const(int, 0)
2022-01-24 14:08:57,198 DEBUG on stmt: $132.3 = exp.4 != $const132.2
2022-01-24 14:08:57,198 DEBUG on stmt: bool138 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,199 DEBUG on stmt: $138pred = call bool138($132.3, func=bool138, args=(Var($132.3, numbers.py:238),), kws=(), vararg=None)
2022-01-24 14:08:57,199 DEBUG on stmt: branch $138pred, 140, 174
2022-01-24 14:08:57,199 DEBUG ==== SSA block rewrite pass on 140
2022-01-24 14:08:57,199 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb7615f8>
2022-01-24 14:08:57,199 DEBUG on stmt: $const140.2 = const(int, 1)
2022-01-24 14:08:57,199 DEBUG on stmt: $140.3 = exp.4 & $const140.2
2022-01-24 14:08:57,199 DEBUG on stmt: bool146 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,199 DEBUG on stmt: $146pred = call bool146($140.3, func=bool146, args=(Var($140.3, numbers.py:239),), kws=(), vararg=None)
2022-01-24 14:08:57,199 DEBUG on stmt: branch $146pred, 148, 156
2022-01-24 14:08:57,199 DEBUG ==== SSA block rewrite pass on 148
2022-01-24 14:08:57,199 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb7615f8>
2022-01-24 14:08:57,199 DEBUG on stmt: $148.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:57,200 DEBUG find_def var='a.1' stmt=$148.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:57,200 DEBUG find_def_from_top label 148
2022-01-24 14:08:57,200 DEBUG idom 140 from label 148
2022-01-24 14:08:57,200 DEBUG find_def_from_bottom label 140
2022-01-24 14:08:57,200 DEBUG find_def_from_top label 140
2022-01-24 14:08:57,200 DEBUG idom 132 from label 140
2022-01-24 14:08:57,200 DEBUG find_def_from_bottom label 132
2022-01-24 14:08:57,200 DEBUG find_def_from_top label 132
2022-01-24 14:08:57,200 DEBUG insert phi node a.1.2 = phi(incoming_values=[], incoming_blocks=[]) at 132
2022-01-24 14:08:57,200 DEBUG find_def_from_bottom label 130
2022-01-24 14:08:57,200 DEBUG find_def_from_top label 130
2022-01-24 14:08:57,200 DEBUG idom 106 from label 130
2022-01-24 14:08:57,200 DEBUG find_def_from_bottom label 106
2022-01-24 14:08:57,201 DEBUG find_def_from_top label 106
2022-01-24 14:08:57,201 DEBUG idom 0 from label 106
2022-01-24 14:08:57,201 DEBUG find_def_from_bottom label 0
2022-01-24 14:08:57,201 DEBUG incoming_def a.1 = call $0.4(a, func=$0.4, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
2022-01-24 14:08:57,201 DEBUG find_def_from_bottom label 156
2022-01-24 14:08:57,201 DEBUG incoming_def a.1.1 = $156.6
2022-01-24 14:08:57,201 DEBUG replaced with: $148.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:57,201 DEBUG on stmt: r.1 = $148.3
2022-01-24 14:08:57,201 DEBUG on stmt: jump 156
2022-01-24 14:08:57,201 DEBUG ==== SSA block rewrite pass on 156
2022-01-24 14:08:57,201 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb7615f8>
2022-01-24 14:08:57,201 DEBUG on stmt: r.3 = phi(incoming_values=[Var(r.1, numbers.py:240), Var(r.2, numbers.py:240)], incoming_blocks=[148, 140])
2022-01-24 14:08:57,201 DEBUG on stmt: $const156.2 = const(int, 1)
2022-01-24 14:08:57,201 DEBUG on stmt: $156.3 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.2, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:57,202 DEBUG on stmt: exp.2 = $156.3
2022-01-24 14:08:57,202 DEBUG on stmt: $156.6 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:57,202 DEBUG find_def var='a.1' stmt=$156.6 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:57,202 DEBUG find_def_from_top label 156
2022-01-24 14:08:57,202 DEBUG idom 140 from label 156
2022-01-24 14:08:57,202 DEBUG find_def_from_bottom label 140
2022-01-24 14:08:57,202 DEBUG find_def_from_top label 140
2022-01-24 14:08:57,202 DEBUG idom 132 from label 140
2022-01-24 14:08:57,202 DEBUG find_def_from_bottom label 132
2022-01-24 14:08:57,202 DEBUG replaced with: $156.6 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:57,202 DEBUG on stmt: a.1.1 = $156.6
2022-01-24 14:08:57,202 DEBUG on stmt: jump 132
2022-01-24 14:08:57,202 DEBUG ==== SSA block rewrite pass on 174
2022-01-24 14:08:57,202 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb7615f8>
2022-01-24 14:08:57,202 DEBUG on stmt: jump 176
2022-01-24 14:08:57,202 DEBUG ==== SSA block rewrite pass on 176
2022-01-24 14:08:57,202 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb7615f8>
2022-01-24 14:08:57,203 DEBUG on stmt: bool178 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,203 DEBUG on stmt: $178pred = call bool178(invert.2, func=bool178, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
2022-01-24 14:08:57,203 DEBUG on stmt: branch $178pred, 180, 188
2022-01-24 14:08:57,203 DEBUG ==== SSA block rewrite pass on 180
2022-01-24 14:08:57,203 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb7615f8>
2022-01-24 14:08:57,203 DEBUG on stmt: $const180.1 = const(float, 1.0)
2022-01-24 14:08:57,203 DEBUG on stmt: $180.3 = $const180.1 / r.2
2022-01-24 14:08:57,203 DEBUG on stmt: $180.4 = cast(value=$180.3)
2022-01-24 14:08:57,203 DEBUG on stmt: return $180.4
2022-01-24 14:08:57,203 DEBUG ==== SSA block rewrite pass on 188
2022-01-24 14:08:57,203 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb7615f8>
2022-01-24 14:08:57,203 DEBUG on stmt: $188.2 = cast(value=r.2)
2022-01-24 14:08:57,203 DEBUG on stmt: return $188.2
2022-01-24 14:08:57,373 DEBUG label 0:
    q1 = arg(0, name=q1)                     ['q1']
    q2 = arg(1, name=q2)                     ['q2']
    out = arg(2, name=out)                   ['out']
    $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$0.1']
    $0.2 = getattr(value=$0.1, attr=empty)   ['$0.1', '$0.2']
    $const0.3 = const(int, 4)                ['$const0.3']
    qtemp = call $0.2($const0.3, func=$0.2, args=[Var($const0.3, distance.py:111)], kws=(), vararg=None) ['$0.2', '$const0.3', 'qtemp']
    $const0.6 = const(int, 0)                ['$const0.6']
    $0.7 = getitem(value=q1, index=$const0.6, fn=<built-in function getitem>) ['$0.7', '$const0.6', 'q1']
    $const0.9 = const(int, 0)                ['$const0.9']
    $0.10 = getitem(value=q2, index=$const0.9, fn=<built-in function getitem>) ['$0.10', '$const0.9', 'q2']
    $0.11 = $0.7 - $0.10                     ['$0.10', '$0.11', '$0.7']
    $const0.12 = const(int, 2)               ['$const0.12']
    $0.13 = $0.11 ** $const0.12              ['$0.11', '$0.13', '$const0.12']
    $const0.15 = const(int, 1)               ['$const0.15']
    $0.16 = getitem(value=q1, index=$const0.15, fn=<built-in function getitem>) ['$0.16', '$const0.15', 'q1']
    $const0.18 = const(int, 1)               ['$const0.18']
    $0.19 = getitem(value=q2, index=$const0.18, fn=<built-in function getitem>) ['$0.19', '$const0.18', 'q2']
    $0.20 = $0.16 - $0.19                    ['$0.16', '$0.19', '$0.20']
    $const0.21 = const(int, 2)               ['$const0.21']
    $0.22 = $0.20 ** $const0.21              ['$0.20', '$0.22', '$const0.21']
    $0.23 = $0.13 + $0.22                    ['$0.13', '$0.22', '$0.23']
    $const0.25 = const(int, 2)               ['$const0.25']
    $0.26 = getitem(value=q1, index=$const0.25, fn=<built-in function getitem>) ['$0.26', '$const0.25', 'q1']
    $const0.28 = const(int, 2)               ['$const0.28']
    $0.29 = getitem(value=q2, index=$const0.28, fn=<built-in function getitem>) ['$0.29', '$const0.28', 'q2']
    $0.30 = $0.26 - $0.29                    ['$0.26', '$0.29', '$0.30']
    $const0.31 = const(int, 2)               ['$const0.31']
    $0.32 = $0.30 ** $const0.31              ['$0.30', '$0.32', '$const0.31']
    $0.33 = $0.23 + $0.32                    ['$0.23', '$0.32', '$0.33']
    $const0.35 = const(int, 3)               ['$const0.35']
    $0.36 = getitem(value=q1, index=$const0.35, fn=<built-in function getitem>) ['$0.36', '$const0.35', 'q1']
    $const0.38 = const(int, 3)               ['$const0.38']
    $0.39 = getitem(value=q2, index=$const0.38, fn=<built-in function getitem>) ['$0.39', '$const0.38', 'q2']
    $0.40 = $0.36 - $0.39                    ['$0.36', '$0.39', '$0.40']
    $const0.41 = const(int, 2)               ['$const0.41']
    $0.42 = $0.40 ** $const0.41              ['$0.40', '$0.42', '$const0.41']
    a = $0.33 + $0.42                        ['$0.33', '$0.42', 'a']
    $const0.45 = const(int, 0)               ['$const0.45']
    $0.46 = getitem(value=q1, index=$const0.45, fn=<built-in function getitem>) ['$0.46', '$const0.45', 'q1']
    $const0.48 = const(int, 0)               ['$const0.48']
    $0.49 = getitem(value=q2, index=$const0.48, fn=<built-in function getitem>) ['$0.49', '$const0.48', 'q2']
    $0.50 = $0.46 + $0.49                    ['$0.46', '$0.49', '$0.50']
    $const0.51 = const(int, 2)               ['$const0.51']
    $0.52 = $0.50 ** $const0.51              ['$0.50', '$0.52', '$const0.51']
    $const0.54 = const(int, 1)               ['$const0.54']
    $0.55 = getitem(value=q1, index=$const0.54, fn=<built-in function getitem>) ['$0.55', '$const0.54', 'q1']
    $const0.57 = const(int, 1)               ['$const0.57']
    $0.58 = getitem(value=q2, index=$const0.57, fn=<built-in function getitem>) ['$0.58', '$const0.57', 'q2']
    $0.59 = $0.55 + $0.58                    ['$0.55', '$0.58', '$0.59']
    $const0.60 = const(int, 2)               ['$const0.60']
    $0.61 = $0.59 ** $const0.60              ['$0.59', '$0.61', '$const0.60']
    $0.62 = $0.52 + $0.61                    ['$0.52', '$0.61', '$0.62']
    $const0.64 = const(int, 2)               ['$const0.64']
    $0.65 = getitem(value=q1, index=$const0.64, fn=<built-in function getitem>) ['$0.65', '$const0.64', 'q1']
    $const0.67 = const(int, 2)               ['$const0.67']
    $0.68 = getitem(value=q2, index=$const0.67, fn=<built-in function getitem>) ['$0.68', '$const0.67', 'q2']
    $0.69 = $0.65 + $0.68                    ['$0.65', '$0.68', '$0.69']
    $const0.70 = const(int, 2)               ['$const0.70']
    $0.71 = $0.69 ** $const0.70              ['$0.69', '$0.71', '$const0.70']
    $0.72 = $0.62 + $0.71                    ['$0.62', '$0.71', '$0.72']
    $const0.74 = const(int, 3)               ['$const0.74']
    $0.75 = getitem(value=q1, index=$const0.74, fn=<built-in function getitem>) ['$0.75', '$const0.74', 'q1']
    $const0.77 = const(int, 3)               ['$const0.77']
    $0.78 = getitem(value=q2, index=$const0.77, fn=<built-in function getitem>) ['$0.78', '$const0.77', 'q2']
    $0.79 = $0.75 + $0.78                    ['$0.75', '$0.78', '$0.79']
    $const0.80 = const(int, 2)               ['$const0.80']
    $0.81 = $0.79 ** $const0.80              ['$0.79', '$0.81', '$const0.80']
    b = $0.72 + $0.81                        ['$0.72', '$0.81', 'b']
    $0.85 = b > a                            ['$0.85', 'a', 'b']
    bool178 = global(bool: <class 'bool'>)   ['bool178']
    $178pred = call bool178($0.85, func=bool178, args=(Var($0.85, distance.py:114),), kws=(), vararg=None) ['$0.85', '$178pred', 'bool178']
    branch $178pred, 180, 194                ['$178pred']
label 180:
    $180.1 = global(_divide: CPUDispatcher(<function divide at 0x7f94eaaf89d8>)) ['$180.1']
    $180.5 = call $180.1(q1, q2, qtemp, func=$180.1, args=[Var(q1, distance.py:111), Var(q2, distance.py:111), Var(qtemp, distance.py:111)], kws=(), vararg=None) ['$180.1', '$180.5', 'q1', 'q2', 'qtemp']
    jump 208                                 []
label 194:
    $194.1 = global(_divide: CPUDispatcher(<function divide at 0x7f94eaaf89d8>)) ['$194.1']
    $194.4 = unary(fn=<built-in function neg>, value=q2) ['$194.4', 'q2']
    $194.6 = call $194.1(q1, $194.4, qtemp, func=$194.1, args=[Var(q1, distance.py:111), Var($194.4, distance.py:117), Var(qtemp, distance.py:111)], kws=(), vararg=None) ['$194.1', '$194.4', '$194.6', 'q1', 'qtemp']
    jump 208                                 []
label 208:
    $208.1 = global(_log: CPUDispatcher(<function log at 0x7f94eab04048>)) ['$208.1']
    $208.4 = call $208.1(qtemp, qtemp, func=$208.1, args=[Var(qtemp, distance.py:111), Var(qtemp, distance.py:111)], kws=(), vararg=None) ['$208.1', '$208.4', 'qtemp', 'qtemp']
    $208.5 = global(_absolute: CPUDispatcher(<function absolute at 0x7f94eaaf8e18>)) ['$208.5']
    $208.8 = call $208.5(qtemp, out, func=$208.5, args=[Var(qtemp, distance.py:111), Var(out, distance.py:111)], kws=(), vararg=None) ['$208.5', '$208.8', 'out', 'qtemp']
    $const208.10 = const(int, 0)             ['$const208.10']
    $208.13 = getitem(value=out, index=$const208.10, fn=<built-in function getitem>) ['$208.13', '$const208.10', 'out']
    $const208.14 = const(int, 2)             ['$const208.14']
    $208.15 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=$208.13, rhs=$const208.14, static_lhs=Undefined, static_rhs=Undefined) ['$208.13', '$208.15', '$const208.14']
    out[$const208.10] = $208.15              ['$208.15', '$const208.10', 'out']
    $const208.16 = const(NoneType, None)     ['$const208.16']
    $208.17 = cast(value=$const208.16)       ['$208.17', '$const208.16']
    return $208.17                           ['$208.17']

2022-01-24 14:08:57,381 DEBUG ==== SSA block analysis pass on 0
2022-01-24 14:08:57,381 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ec398d68>
2022-01-24 14:08:57,381 DEBUG on stmt: q1 = arg(0, name=q1)
2022-01-24 14:08:57,381 DEBUG on stmt: q2 = arg(1, name=q2)
2022-01-24 14:08:57,381 DEBUG on stmt: out = arg(2, name=out)
2022-01-24 14:08:57,381 DEBUG on stmt: $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:08:57,381 DEBUG on stmt: $0.2 = getattr(value=$0.1, attr=empty)
2022-01-24 14:08:57,381 DEBUG on stmt: $const0.3 = const(int, 4)
2022-01-24 14:08:57,381 DEBUG on stmt: qtemp = call $0.2($const0.3, func=$0.2, args=[Var($const0.3, distance.py:111)], kws=(), vararg=None)
2022-01-24 14:08:57,382 DEBUG on stmt: $const0.6 = const(int, 0)
2022-01-24 14:08:57,382 DEBUG on stmt: $0.7 = static_getitem(value=q1, index=0, index_var=$const0.6, fn=<built-in function getitem>)
2022-01-24 14:08:57,382 DEBUG on stmt: $const0.9 = const(int, 0)
2022-01-24 14:08:57,382 DEBUG on stmt: $0.10 = static_getitem(value=q2, index=0, index_var=$const0.9, fn=<built-in function getitem>)
2022-01-24 14:08:57,382 DEBUG on stmt: $0.11 = $0.7 - $0.10
2022-01-24 14:08:57,382 DEBUG on stmt: $const0.12 = const(int, 2)
2022-01-24 14:08:57,382 DEBUG on stmt: $0.13 = $0.11 ** $const0.12
2022-01-24 14:08:57,382 DEBUG on stmt: $const0.15 = const(int, 1)
2022-01-24 14:08:57,382 DEBUG on stmt: $0.16 = static_getitem(value=q1, index=1, index_var=$const0.15, fn=<built-in function getitem>)
2022-01-24 14:08:57,382 DEBUG on stmt: $const0.18 = const(int, 1)
2022-01-24 14:08:57,382 DEBUG on stmt: $0.19 = static_getitem(value=q2, index=1, index_var=$const0.18, fn=<built-in function getitem>)
2022-01-24 14:08:57,382 DEBUG on stmt: $0.20 = $0.16 - $0.19
2022-01-24 14:08:57,382 DEBUG on stmt: $const0.21 = const(int, 2)
2022-01-24 14:08:57,382 DEBUG on stmt: $0.22 = $0.20 ** $const0.21
2022-01-24 14:08:57,382 DEBUG on stmt: $0.23 = $0.13 + $0.22
2022-01-24 14:08:57,382 DEBUG on stmt: $const0.25 = const(int, 2)
2022-01-24 14:08:57,382 DEBUG on stmt: $0.26 = static_getitem(value=q1, index=2, index_var=$const0.25, fn=<built-in function getitem>)
2022-01-24 14:08:57,382 DEBUG on stmt: $const0.28 = const(int, 2)
2022-01-24 14:08:57,382 DEBUG on stmt: $0.29 = static_getitem(value=q2, index=2, index_var=$const0.28, fn=<built-in function getitem>)
2022-01-24 14:08:57,382 DEBUG on stmt: $0.30 = $0.26 - $0.29
2022-01-24 14:08:57,382 DEBUG on stmt: $const0.31 = const(int, 2)
2022-01-24 14:08:57,382 DEBUG on stmt: $0.32 = $0.30 ** $const0.31
2022-01-24 14:08:57,382 DEBUG on stmt: $0.33 = $0.23 + $0.32
2022-01-24 14:08:57,382 DEBUG on stmt: $const0.35 = const(int, 3)
2022-01-24 14:08:57,382 DEBUG on stmt: $0.36 = static_getitem(value=q1, index=3, index_var=$const0.35, fn=<built-in function getitem>)
2022-01-24 14:08:57,382 DEBUG on stmt: $const0.38 = const(int, 3)
2022-01-24 14:08:57,383 DEBUG on stmt: $0.39 = static_getitem(value=q2, index=3, index_var=$const0.38, fn=<built-in function getitem>)
2022-01-24 14:08:57,383 DEBUG on stmt: $0.40 = $0.36 - $0.39
2022-01-24 14:08:57,383 DEBUG on stmt: $const0.41 = const(int, 2)
2022-01-24 14:08:57,383 DEBUG on stmt: $0.42 = $0.40 ** $const0.41
2022-01-24 14:08:57,383 DEBUG on stmt: a = $0.33 + $0.42
2022-01-24 14:08:57,383 DEBUG on stmt: $const0.45 = const(int, 0)
2022-01-24 14:08:57,383 DEBUG on stmt: $0.46 = static_getitem(value=q1, index=0, index_var=$const0.45, fn=<built-in function getitem>)
2022-01-24 14:08:57,383 DEBUG on stmt: $const0.48 = const(int, 0)
2022-01-24 14:08:57,383 DEBUG on stmt: $0.49 = static_getitem(value=q2, index=0, index_var=$const0.48, fn=<built-in function getitem>)
2022-01-24 14:08:57,383 DEBUG on stmt: $0.50 = $0.46 + $0.49
2022-01-24 14:08:57,383 DEBUG on stmt: $const0.51 = const(int, 2)
2022-01-24 14:08:57,383 DEBUG on stmt: $0.52 = $0.50 ** $const0.51
2022-01-24 14:08:57,383 DEBUG on stmt: $const0.54 = const(int, 1)
2022-01-24 14:08:57,383 DEBUG on stmt: $0.55 = static_getitem(value=q1, index=1, index_var=$const0.54, fn=<built-in function getitem>)
2022-01-24 14:08:57,383 DEBUG on stmt: $const0.57 = const(int, 1)
2022-01-24 14:08:57,383 DEBUG on stmt: $0.58 = static_getitem(value=q2, index=1, index_var=$const0.57, fn=<built-in function getitem>)
2022-01-24 14:08:57,383 DEBUG on stmt: $0.59 = $0.55 + $0.58
2022-01-24 14:08:57,383 DEBUG on stmt: $const0.60 = const(int, 2)
2022-01-24 14:08:57,383 DEBUG on stmt: $0.61 = $0.59 ** $const0.60
2022-01-24 14:08:57,383 DEBUG on stmt: $0.62 = $0.52 + $0.61
2022-01-24 14:08:57,383 DEBUG on stmt: $const0.64 = const(int, 2)
2022-01-24 14:08:57,383 DEBUG on stmt: $0.65 = static_getitem(value=q1, index=2, index_var=$const0.64, fn=<built-in function getitem>)
2022-01-24 14:08:57,383 DEBUG on stmt: $const0.67 = const(int, 2)
2022-01-24 14:08:57,383 DEBUG on stmt: $0.68 = static_getitem(value=q2, index=2, index_var=$const0.67, fn=<built-in function getitem>)
2022-01-24 14:08:57,383 DEBUG on stmt: $0.69 = $0.65 + $0.68
2022-01-24 14:08:57,383 DEBUG on stmt: $const0.70 = const(int, 2)
2022-01-24 14:08:57,383 DEBUG on stmt: $0.71 = $0.69 ** $const0.70
2022-01-24 14:08:57,383 DEBUG on stmt: $0.72 = $0.62 + $0.71
2022-01-24 14:08:57,384 DEBUG on stmt: $const0.74 = const(int, 3)
2022-01-24 14:08:57,384 DEBUG on stmt: $0.75 = static_getitem(value=q1, index=3, index_var=$const0.74, fn=<built-in function getitem>)
2022-01-24 14:08:57,384 DEBUG on stmt: $const0.77 = const(int, 3)
2022-01-24 14:08:57,384 DEBUG on stmt: $0.78 = static_getitem(value=q2, index=3, index_var=$const0.77, fn=<built-in function getitem>)
2022-01-24 14:08:57,384 DEBUG on stmt: $0.79 = $0.75 + $0.78
2022-01-24 14:08:57,384 DEBUG on stmt: $const0.80 = const(int, 2)
2022-01-24 14:08:57,384 DEBUG on stmt: $0.81 = $0.79 ** $const0.80
2022-01-24 14:08:57,384 DEBUG on stmt: b = $0.72 + $0.81
2022-01-24 14:08:57,384 DEBUG on stmt: $0.85 = b > a
2022-01-24 14:08:57,384 DEBUG on stmt: bool178 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,384 DEBUG on stmt: $178pred = call bool178($0.85, func=bool178, args=(Var($0.85, distance.py:114),), kws=(), vararg=None)
2022-01-24 14:08:57,384 DEBUG on stmt: branch $178pred, 180, 194
2022-01-24 14:08:57,384 DEBUG ==== SSA block analysis pass on 180
2022-01-24 14:08:57,384 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ec398d68>
2022-01-24 14:08:57,384 DEBUG on stmt: $180.1 = global(_divide: CPUDispatcher(<function divide at 0x7f94eaaf89d8>))
2022-01-24 14:08:57,384 DEBUG on stmt: $180.5 = call $180.1(q1, q2, qtemp, func=$180.1, args=[Var(q1, distance.py:111), Var(q2, distance.py:111), Var(qtemp, distance.py:111)], kws=(), vararg=None)
2022-01-24 14:08:57,384 DEBUG on stmt: jump 208
2022-01-24 14:08:57,384 DEBUG ==== SSA block analysis pass on 194
2022-01-24 14:08:57,384 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ec398d68>
2022-01-24 14:08:57,384 DEBUG on stmt: $194.1 = global(_divide: CPUDispatcher(<function divide at 0x7f94eaaf89d8>))
2022-01-24 14:08:57,384 DEBUG on stmt: $194.4 = unary(fn=<built-in function neg>, value=q2)
2022-01-24 14:08:57,384 DEBUG on stmt: $194.6 = call $194.1(q1, $194.4, qtemp, func=$194.1, args=[Var(q1, distance.py:111), Var($194.4, distance.py:117), Var(qtemp, distance.py:111)], kws=(), vararg=None)
2022-01-24 14:08:57,384 DEBUG on stmt: jump 208
2022-01-24 14:08:57,384 DEBUG ==== SSA block analysis pass on 208
2022-01-24 14:08:57,384 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ec398d68>
2022-01-24 14:08:57,384 DEBUG on stmt: $208.1 = global(_log: CPUDispatcher(<function log at 0x7f94eab04048>))
2022-01-24 14:08:57,384 DEBUG on stmt: $208.4 = call $208.1(qtemp, qtemp, func=$208.1, args=[Var(qtemp, distance.py:111), Var(qtemp, distance.py:111)], kws=(), vararg=None)
2022-01-24 14:08:57,385 DEBUG on stmt: $208.5 = global(_absolute: CPUDispatcher(<function absolute at 0x7f94eaaf8e18>))
2022-01-24 14:08:57,385 DEBUG on stmt: $208.8 = call $208.5(qtemp, out, func=$208.5, args=[Var(qtemp, distance.py:111), Var(out, distance.py:111)], kws=(), vararg=None)
2022-01-24 14:08:57,385 DEBUG on stmt: $const208.10 = const(int, 0)
2022-01-24 14:08:57,385 DEBUG on stmt: $208.13 = static_getitem(value=out, index=0, index_var=$const208.10, fn=<built-in function getitem>)
2022-01-24 14:08:57,385 DEBUG on stmt: $const208.14 = const(int, 2)
2022-01-24 14:08:57,385 DEBUG on stmt: $208.15 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=$208.13, rhs=$const208.14, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:57,385 DEBUG on stmt: out[0] = $208.15
2022-01-24 14:08:57,385 DEBUG on stmt: $const208.16 = const(NoneType, None)
2022-01-24 14:08:57,385 DEBUG on stmt: $208.17 = cast(value=$const208.16)
2022-01-24 14:08:57,385 DEBUG on stmt: return $208.17
2022-01-24 14:08:57,386 DEBUG defs defaultdict(<class 'list'>,
            {'$0.1': [<numba.core.ir.Assign object at 0x7f94ec39b748>],
             '$0.10': [<numba.core.ir.Assign object at 0x7f94ec3987f0>],
             '$0.11': [<numba.core.ir.Assign object at 0x7f94ec399080>],
             '$0.13': [<numba.core.ir.Assign object at 0x7f94ec399240>],
             '$0.16': [<numba.core.ir.Assign object at 0x7f94ec39e588>],
             '$0.19': [<numba.core.ir.Assign object at 0x7f94ec39eba8>],
             '$0.2': [<numba.core.ir.Assign object at 0x7f94ec39b828>],
             '$0.20': [<numba.core.ir.Assign object at 0x7f94ec3997f0>],
             '$0.22': [<numba.core.ir.Assign object at 0x7f94ec3999b0>],
             '$0.23': [<numba.core.ir.Assign object at 0x7f94ec399a90>],
             '$0.26': [<numba.core.ir.Assign object at 0x7f94ec39ef28>],
             '$0.29': [<numba.core.ir.Assign object at 0x7f94ec39de48>],
             '$0.30': [<numba.core.ir.Assign object at 0x7f94ec396080>],
             '$0.32': [<numba.core.ir.Assign object at 0x7f94ec396240>],
             '$0.33': [<numba.core.ir.Assign object at 0x7f94ec396320>],
             '$0.36': [<numba.core.ir.Assign object at 0x7f94eb3fe4e0>],
             '$0.39': [<numba.core.ir.Assign object at 0x7f94eb3fe550>],
             '$0.40': [<numba.core.ir.Assign object at 0x7f94ec3968d0>],
             '$0.42': [<numba.core.ir.Assign object at 0x7f94ec396a90>],
             '$0.46': [<numba.core.ir.Assign object at 0x7f94eb3fe5c0>],
             '$0.49': [<numba.core.ir.Assign object at 0x7f94eb3fe630>],
             '$0.50': [<numba.core.ir.Assign object at 0x7f94ec39c208>],
             '$0.52': [<numba.core.ir.Assign object at 0x7f94ec39c3c8>],
             '$0.55': [<numba.core.ir.Assign object at 0x7f94eb3fe6a0>],
             '$0.58': [<numba.core.ir.Assign object at 0x7f94eb3fe710>],
             '$0.59': [<numba.core.ir.Assign object at 0x7f94ec39c978>],
             '$0.61': [<numba.core.ir.Assign object at 0x7f94ec39cb38>],
             '$0.62': [<numba.core.ir.Assign object at 0x7f94ec39cc18>],
             '$0.65': [<numba.core.ir.Assign object at 0x7f94eb3fe780>],
             '$0.68': [<numba.core.ir.Assign object at 0x7f94eb3fe7f0>],
             '$0.69': [<numba.core.ir.Assign object at 0x7f94ec39d208>],
             '$0.7': [<numba.core.ir.Assign object at 0x7f94ec398c88>],
             '$0.71': [<numba.core.ir.Assign object at 0x7f94ec39d3c8>],
             '$0.72': [<numba.core.ir.Assign object at 0x7f94ec39d4a8>],
             '$0.75': [<numba.core.ir.Assign object at 0x7f94eb3fe860>],
             '$0.78': [<numba.core.ir.Assign object at 0x7f94eb3fe8d0>],
             '$0.79': [<numba.core.ir.Assign object at 0x7f94ec39da58>],
             '$0.81': [<numba.core.ir.Assign object at 0x7f94ec39dc18>],
             '$0.85': [<numba.core.ir.Assign object at 0x7f94ec39dfd0>],
             '$178pred': [<numba.core.ir.Assign object at 0x7f94ec39e1d0>],
             '$180.1': [<numba.core.ir.Assign object at 0x7f94ec396cc0>],
             '$180.5': [<numba.core.ir.Assign object at 0x7f94ec39bb38>],
             '$194.1': [<numba.core.ir.Assign object at 0x7f94ec39e2b0>],
             '$194.4': [<numba.core.ir.Assign object at 0x7f94ec39e4e0>],
             '$194.6': [<numba.core.ir.Assign object at 0x7f94ec39e668>],
             '$208.1': [<numba.core.ir.Assign object at 0x7f94ec39e748>],
             '$208.13': [<numba.core.ir.Assign object at 0x7f94ec398b70>],
             '$208.15': [<numba.core.ir.Assign object at 0x7f94eb3fe208>],
             '$208.17': [<numba.core.ir.Assign object at 0x7f94eb3fe438>],
             '$208.4': [<numba.core.ir.Assign object at 0x7f94ec39e978>],
             '$208.5': [<numba.core.ir.Assign object at 0x7f94ec39ea58>],
             '$208.8': [<numba.core.ir.Assign object at 0x7f94ec39ec88>],
             '$const0.12': [<numba.core.ir.Assign object at 0x7f94ec399160>],
             '$const0.15': [<numba.core.ir.Assign object at 0x7f94ec3993c8>],
             '$const0.18': [<numba.core.ir.Assign object at 0x7f94ec399630>],
             '$const0.21': [<numba.core.ir.Assign object at 0x7f94ec3998d0>],
             '$const0.25': [<numba.core.ir.Assign object at 0x7f94ec399c18>],
             '$const0.28': [<numba.core.ir.Assign object at 0x7f94ec399e80>],
             '$const0.3': [<numba.core.ir.Assign object at 0x7f94ec39b908>],
             '$const0.31': [<numba.core.ir.Assign object at 0x7f94ec396160>],
             '$const0.35': [<numba.core.ir.Assign object at 0x7f94ec3964a8>],
             '$const0.38': [<numba.core.ir.Assign object at 0x7f94ec396710>],
             '$const0.41': [<numba.core.ir.Assign object at 0x7f94ec3969b0>],
             '$const0.45': [<numba.core.ir.Assign object at 0x7f94ec396da0>],
             '$const0.48': [<numba.core.ir.Assign object at 0x7f94ec39c048>],
             '$const0.51': [<numba.core.ir.Assign object at 0x7f94ec39c2e8>],
             '$const0.54': [<numba.core.ir.Assign object at 0x7f94ec39c550>],
             '$const0.57': [<numba.core.ir.Assign object at 0x7f94ec39c7b8>],
             '$const0.6': [<numba.core.ir.Assign object at 0x7f94ec39bc18>],
             '$const0.60': [<numba.core.ir.Assign object at 0x7f94ec39ca58>],
             '$const0.64': [<numba.core.ir.Assign object at 0x7f94ec39cda0>],
             '$const0.67': [<numba.core.ir.Assign object at 0x7f94ec39d048>],
             '$const0.70': [<numba.core.ir.Assign object at 0x7f94ec39d2e8>],
             '$const0.74': [<numba.core.ir.Assign object at 0x7f94ec39d630>],
             '$const0.77': [<numba.core.ir.Assign object at 0x7f94ec39d898>],
             '$const0.80': [<numba.core.ir.Assign object at 0x7f94ec39db38>],
             '$const0.9': [<numba.core.ir.Assign object at 0x7f94ec39be80>],
             '$const208.10': [<numba.core.ir.Assign object at 0x7f94ec39ee10>],
             '$const208.14': [<numba.core.ir.Assign object at 0x7f94eb3fe128>],
             '$const208.16': [<numba.core.ir.Assign object at 0x7f94eb3fe358>],
             'a': [<numba.core.ir.Assign object at 0x7f94ec396b70>],
             'b': [<numba.core.ir.Assign object at 0x7f94ec39dcf8>],
             'bool178': [<numba.core.ir.Assign object at 0x7f94ec39e128>],
             'out': [<numba.core.ir.Assign object at 0x7f94ec39b668>],
             'q1': [<numba.core.ir.Assign object at 0x7f94ec39b518>],
             'q2': [<numba.core.ir.Assign object at 0x7f94ec39b5c0>],
             'qtemp': [<numba.core.ir.Assign object at 0x7f94ec39b9e8>]})
2022-01-24 14:08:57,386 DEBUG SSA violators set()
2022-01-24 14:08:57,409 DEBUG label 0:
    q1 = arg(0, name=q1)                     ['q1']
    q2 = arg(1, name=q2)                     ['q2']
    qout = arg(2, name=qout)                 ['qout']
    $const0.2 = const(int, 0)                ['$const0.2']
    $0.3 = getitem(value=q2, index=$const0.2, fn=<built-in function getitem>) ['$0.3', '$const0.2', 'q2']
    $const0.4 = const(int, 2)                ['$const0.4']
    $0.5 = $0.3 ** $const0.4                 ['$0.3', '$0.5', '$const0.4']
    $const0.7 = const(int, 1)                ['$const0.7']
    $0.8 = getitem(value=q2, index=$const0.7, fn=<built-in function getitem>) ['$0.8', '$const0.7', 'q2']
    $const0.9 = const(int, 2)                ['$const0.9']
    $0.10 = $0.8 ** $const0.9                ['$0.10', '$0.8', '$const0.9']
    $0.11 = $0.5 + $0.10                     ['$0.10', '$0.11', '$0.5']
    $const0.13 = const(int, 2)               ['$const0.13']
    $0.14 = getitem(value=q2, index=$const0.13, fn=<built-in function getitem>) ['$0.14', '$const0.13', 'q2']
    $const0.15 = const(int, 2)               ['$const0.15']
    $0.16 = $0.14 ** $const0.15              ['$0.14', '$0.16', '$const0.15']
    $0.17 = $0.11 + $0.16                    ['$0.11', '$0.16', '$0.17']
    $const0.19 = const(int, 3)               ['$const0.19']
    $0.20 = getitem(value=q2, index=$const0.19, fn=<built-in function getitem>) ['$0.20', '$const0.19', 'q2']
    $const0.21 = const(int, 2)               ['$const0.21']
    $0.22 = $0.20 ** $const0.21              ['$0.20', '$0.22', '$const0.21']
    q2norm = $0.17 + $0.22                   ['$0.17', '$0.22', 'q2norm']
    $const0.25 = const(int, 0)               ['$const0.25']
    $0.26 = getitem(value=q1, index=$const0.25, fn=<built-in function getitem>) ['$0.26', '$const0.25', 'q1']
    $0.27 = unary(fn=<built-in function pos>, value=$0.26) ['$0.26', '$0.27']
    $const0.29 = const(int, 0)               ['$const0.29']
    $0.30 = getitem(value=q2, index=$const0.29, fn=<built-in function getitem>) ['$0.30', '$const0.29', 'q2']
    $0.31 = $0.27 * $0.30                    ['$0.27', '$0.30', '$0.31']
    $const0.33 = const(int, 1)               ['$const0.33']
    $0.34 = getitem(value=q1, index=$const0.33, fn=<built-in function getitem>) ['$0.34', '$const0.33', 'q1']
    $const0.36 = const(int, 1)               ['$const0.36']
    $0.37 = getitem(value=q2, index=$const0.36, fn=<built-in function getitem>) ['$0.37', '$const0.36', 'q2']
    $0.38 = $0.34 * $0.37                    ['$0.34', '$0.37', '$0.38']
    $0.39 = $0.31 + $0.38                    ['$0.31', '$0.38', '$0.39']
    $const0.41 = const(int, 2)               ['$const0.41']
    $0.42 = getitem(value=q1, index=$const0.41, fn=<built-in function getitem>) ['$0.42', '$const0.41', 'q1']
    $const0.44 = const(int, 2)               ['$const0.44']
    $0.45 = getitem(value=q2, index=$const0.44, fn=<built-in function getitem>) ['$0.45', '$const0.44', 'q2']
    $0.46 = $0.42 * $0.45                    ['$0.42', '$0.45', '$0.46']
    $0.47 = $0.39 + $0.46                    ['$0.39', '$0.46', '$0.47']
    $const0.49 = const(int, 3)               ['$const0.49']
    $0.50 = getitem(value=q1, index=$const0.49, fn=<built-in function getitem>) ['$0.50', '$const0.49', 'q1']
    $const0.52 = const(int, 3)               ['$const0.52']
    $0.53 = getitem(value=q2, index=$const0.52, fn=<built-in function getitem>) ['$0.53', '$const0.52', 'q2']
    $0.54 = $0.50 * $0.53                    ['$0.50', '$0.53', '$0.54']
    $0.55 = $0.47 + $0.54                    ['$0.47', '$0.54', '$0.55']
    $0.57 = $0.55 / q2norm                   ['$0.55', '$0.57', 'q2norm']
    $const0.59 = const(int, 0)               ['$const0.59']
    qout[$const0.59] = $0.57                 ['$0.57', '$const0.59', 'qout']
    $const0.61 = const(int, 0)               ['$const0.61']
    $0.62 = getitem(value=q1, index=$const0.61, fn=<built-in function getitem>) ['$0.62', '$const0.61', 'q1']
    $0.63 = unary(fn=<built-in function neg>, value=$0.62) ['$0.62', '$0.63']
    $const0.65 = const(int, 1)               ['$const0.65']
    $0.66 = getitem(value=q2, index=$const0.65, fn=<built-in function getitem>) ['$0.66', '$const0.65', 'q2']
    $0.67 = $0.63 * $0.66                    ['$0.63', '$0.66', '$0.67']
    $const0.69 = const(int, 1)               ['$const0.69']
    $0.70 = getitem(value=q1, index=$const0.69, fn=<built-in function getitem>) ['$0.70', '$const0.69', 'q1']
    $const0.72 = const(int, 0)               ['$const0.72']
    $0.73 = getitem(value=q2, index=$const0.72, fn=<built-in function getitem>) ['$0.73', '$const0.72', 'q2']
    $0.74 = $0.70 * $0.73                    ['$0.70', '$0.73', '$0.74']
    $0.75 = $0.67 + $0.74                    ['$0.67', '$0.74', '$0.75']
    $const0.77 = const(int, 2)               ['$const0.77']
    $0.78 = getitem(value=q1, index=$const0.77, fn=<built-in function getitem>) ['$0.78', '$const0.77', 'q1']
    $const0.80 = const(int, 3)               ['$const0.80']
    $0.81 = getitem(value=q2, index=$const0.80, fn=<built-in function getitem>) ['$0.81', '$const0.80', 'q2']
    $0.82 = $0.78 * $0.81                    ['$0.78', '$0.81', '$0.82']
    $0.83 = $0.75 - $0.82                    ['$0.75', '$0.82', '$0.83']
    $const0.85 = const(int, 3)               ['$const0.85']
    $0.86 = getitem(value=q1, index=$const0.85, fn=<built-in function getitem>) ['$0.86', '$const0.85', 'q1']
    $const0.88 = const(int, 2)               ['$const0.88']
    $0.89 = getitem(value=q2, index=$const0.88, fn=<built-in function getitem>) ['$0.89', '$const0.88', 'q2']
    $0.90 = $0.86 * $0.89                    ['$0.86', '$0.89', '$0.90']
    $0.91 = $0.83 + $0.90                    ['$0.83', '$0.90', '$0.91']
    $0.93 = $0.91 / q2norm                   ['$0.91', '$0.93', 'q2norm']
    $const0.95 = const(int, 1)               ['$const0.95']
    qout[$const0.95] = $0.93                 ['$0.93', '$const0.95', 'qout']
    $const0.97 = const(int, 0)               ['$const0.97']
    $0.98 = getitem(value=q1, index=$const0.97, fn=<built-in function getitem>) ['$0.98', '$const0.97', 'q1']
    $0.99 = unary(fn=<built-in function neg>, value=$0.98) ['$0.98', '$0.99']
    $const0.101 = const(int, 2)              ['$const0.101']
    $0.102 = getitem(value=q2, index=$const0.101, fn=<built-in function getitem>) ['$0.102', '$const0.101', 'q2']
    $0.103 = $0.99 * $0.102                  ['$0.102', '$0.103', '$0.99']
    $const0.105 = const(int, 1)              ['$const0.105']
    $0.106 = getitem(value=q1, index=$const0.105, fn=<built-in function getitem>) ['$0.106', '$const0.105', 'q1']
    $const0.108 = const(int, 3)              ['$const0.108']
    $0.109 = getitem(value=q2, index=$const0.108, fn=<built-in function getitem>) ['$0.109', '$const0.108', 'q2']
    $0.110 = $0.106 * $0.109                 ['$0.106', '$0.109', '$0.110']
    $0.111 = $0.103 + $0.110                 ['$0.103', '$0.110', '$0.111']
    $const0.113 = const(int, 2)              ['$const0.113']
    $0.114 = getitem(value=q1, index=$const0.113, fn=<built-in function getitem>) ['$0.114', '$const0.113', 'q1']
    $const0.116 = const(int, 0)              ['$const0.116']
    $0.117 = getitem(value=q2, index=$const0.116, fn=<built-in function getitem>) ['$0.117', '$const0.116', 'q2']
    $0.118 = $0.114 * $0.117                 ['$0.114', '$0.117', '$0.118']
    $0.119 = $0.111 + $0.118                 ['$0.111', '$0.118', '$0.119']
    $const0.121 = const(int, 3)              ['$const0.121']
    $0.122 = getitem(value=q1, index=$const0.121, fn=<built-in function getitem>) ['$0.122', '$const0.121', 'q1']
    $const0.124 = const(int, 1)              ['$const0.124']
    $0.125 = getitem(value=q2, index=$const0.124, fn=<built-in function getitem>) ['$0.125', '$const0.124', 'q2']
    $0.126 = $0.122 * $0.125                 ['$0.122', '$0.125', '$0.126']
    $0.127 = $0.119 - $0.126                 ['$0.119', '$0.126', '$0.127']
    $0.129 = $0.127 / q2norm                 ['$0.127', '$0.129', 'q2norm']
    $const0.131 = const(int, 2)              ['$const0.131']
    qout[$const0.131] = $0.129               ['$0.129', '$const0.131', 'qout']
    $const0.133 = const(int, 0)              ['$const0.133']
    $0.134 = getitem(value=q1, index=$const0.133, fn=<built-in function getitem>) ['$0.134', '$const0.133', 'q1']
    $0.135 = unary(fn=<built-in function neg>, value=$0.134) ['$0.134', '$0.135']
    $const0.137 = const(int, 3)              ['$const0.137']
    $0.138 = getitem(value=q2, index=$const0.137, fn=<built-in function getitem>) ['$0.138', '$const0.137', 'q2']
    $0.139 = $0.135 * $0.138                 ['$0.135', '$0.138', '$0.139']
    $const0.141 = const(int, 1)              ['$const0.141']
    $0.142 = getitem(value=q1, index=$const0.141, fn=<built-in function getitem>) ['$0.142', '$const0.141', 'q1']
    $const0.144 = const(int, 2)              ['$const0.144']
    $0.145 = getitem(value=q2, index=$const0.144, fn=<built-in function getitem>) ['$0.145', '$const0.144', 'q2']
    $0.146 = $0.142 * $0.145                 ['$0.142', '$0.145', '$0.146']
    $0.147 = $0.139 - $0.146                 ['$0.139', '$0.146', '$0.147']
    $const0.149 = const(int, 2)              ['$const0.149']
    $0.150 = getitem(value=q1, index=$const0.149, fn=<built-in function getitem>) ['$0.150', '$const0.149', 'q1']
    $const0.152 = const(int, 1)              ['$const0.152']
    $0.153 = getitem(value=q2, index=$const0.152, fn=<built-in function getitem>) ['$0.153', '$const0.152', 'q2']
    $0.154 = $0.150 * $0.153                 ['$0.150', '$0.153', '$0.154']
    $0.155 = $0.147 + $0.154                 ['$0.147', '$0.154', '$0.155']
    $const0.157 = const(int, 3)              ['$const0.157']
    $0.158 = getitem(value=q1, index=$const0.157, fn=<built-in function getitem>) ['$0.158', '$const0.157', 'q1']
    $const0.160 = const(int, 0)              ['$const0.160']
    $0.161 = getitem(value=q2, index=$const0.160, fn=<built-in function getitem>) ['$0.161', '$const0.160', 'q2']
    $0.162 = $0.158 * $0.161                 ['$0.158', '$0.161', '$0.162']
    $0.163 = $0.155 + $0.162                 ['$0.155', '$0.162', '$0.163']
    $0.165 = $0.163 / q2norm                 ['$0.163', '$0.165', 'q2norm']
    $const0.167 = const(int, 3)              ['$const0.167']
    qout[$const0.167] = $0.165               ['$0.165', '$const0.167', 'qout']
    $const0.168 = const(NoneType, None)      ['$const0.168']
    $0.169 = cast(value=$const0.168)         ['$0.169', '$const0.168']
    return $0.169                            ['$0.169']

2022-01-24 14:08:57,418 DEBUG ==== SSA block analysis pass on 0
2022-01-24 14:08:57,418 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb3c72b0>
2022-01-24 14:08:57,418 DEBUG on stmt: q1 = arg(0, name=q1)
2022-01-24 14:08:57,418 DEBUG on stmt: q2 = arg(1, name=q2)
2022-01-24 14:08:57,418 DEBUG on stmt: qout = arg(2, name=qout)
2022-01-24 14:08:57,418 DEBUG on stmt: $const0.2 = const(int, 0)
2022-01-24 14:08:57,418 DEBUG on stmt: $0.3 = static_getitem(value=q2, index=0, index_var=$const0.2, fn=<built-in function getitem>)
2022-01-24 14:08:57,418 DEBUG on stmt: $const0.4 = const(int, 2)
2022-01-24 14:08:57,418 DEBUG on stmt: $0.5 = $0.3 ** $const0.4
2022-01-24 14:08:57,418 DEBUG on stmt: $const0.7 = const(int, 1)
2022-01-24 14:08:57,418 DEBUG on stmt: $0.8 = static_getitem(value=q2, index=1, index_var=$const0.7, fn=<built-in function getitem>)
2022-01-24 14:08:57,419 DEBUG on stmt: $const0.9 = const(int, 2)
2022-01-24 14:08:57,419 DEBUG on stmt: $0.10 = $0.8 ** $const0.9
2022-01-24 14:08:57,419 DEBUG on stmt: $0.11 = $0.5 + $0.10
2022-01-24 14:08:57,419 DEBUG on stmt: $const0.13 = const(int, 2)
2022-01-24 14:08:57,419 DEBUG on stmt: $0.14 = static_getitem(value=q2, index=2, index_var=$const0.13, fn=<built-in function getitem>)
2022-01-24 14:08:57,419 DEBUG on stmt: $const0.15 = const(int, 2)
2022-01-24 14:08:57,419 DEBUG on stmt: $0.16 = $0.14 ** $const0.15
2022-01-24 14:08:57,419 DEBUG on stmt: $0.17 = $0.11 + $0.16
2022-01-24 14:08:57,419 DEBUG on stmt: $const0.19 = const(int, 3)
2022-01-24 14:08:57,419 DEBUG on stmt: $0.20 = static_getitem(value=q2, index=3, index_var=$const0.19, fn=<built-in function getitem>)
2022-01-24 14:08:57,419 DEBUG on stmt: $const0.21 = const(int, 2)
2022-01-24 14:08:57,419 DEBUG on stmt: $0.22 = $0.20 ** $const0.21
2022-01-24 14:08:57,419 DEBUG on stmt: q2norm = $0.17 + $0.22
2022-01-24 14:08:57,419 DEBUG on stmt: $const0.25 = const(int, 0)
2022-01-24 14:08:57,419 DEBUG on stmt: $0.26 = static_getitem(value=q1, index=0, index_var=$const0.25, fn=<built-in function getitem>)
2022-01-24 14:08:57,419 DEBUG on stmt: $0.27 = unary(fn=<built-in function pos>, value=$0.26)
2022-01-24 14:08:57,419 DEBUG on stmt: $const0.29 = const(int, 0)
2022-01-24 14:08:57,419 DEBUG on stmt: $0.30 = static_getitem(value=q2, index=0, index_var=$const0.29, fn=<built-in function getitem>)
2022-01-24 14:08:57,419 DEBUG on stmt: $0.31 = $0.27 * $0.30
2022-01-24 14:08:57,419 DEBUG on stmt: $const0.33 = const(int, 1)
2022-01-24 14:08:57,419 DEBUG on stmt: $0.34 = static_getitem(value=q1, index=1, index_var=$const0.33, fn=<built-in function getitem>)
2022-01-24 14:08:57,419 DEBUG on stmt: $const0.36 = const(int, 1)
2022-01-24 14:08:57,419 DEBUG on stmt: $0.37 = static_getitem(value=q2, index=1, index_var=$const0.36, fn=<built-in function getitem>)
2022-01-24 14:08:57,419 DEBUG on stmt: $0.38 = $0.34 * $0.37
2022-01-24 14:08:57,419 DEBUG on stmt: $0.39 = $0.31 + $0.38
2022-01-24 14:08:57,419 DEBUG on stmt: $const0.41 = const(int, 2)
2022-01-24 14:08:57,419 DEBUG on stmt: $0.42 = static_getitem(value=q1, index=2, index_var=$const0.41, fn=<built-in function getitem>)
2022-01-24 14:08:57,420 DEBUG on stmt: $const0.44 = const(int, 2)
2022-01-24 14:08:57,420 DEBUG on stmt: $0.45 = static_getitem(value=q2, index=2, index_var=$const0.44, fn=<built-in function getitem>)
2022-01-24 14:08:57,420 DEBUG on stmt: $0.46 = $0.42 * $0.45
2022-01-24 14:08:57,420 DEBUG on stmt: $0.47 = $0.39 + $0.46
2022-01-24 14:08:57,420 DEBUG on stmt: $const0.49 = const(int, 3)
2022-01-24 14:08:57,420 DEBUG on stmt: $0.50 = static_getitem(value=q1, index=3, index_var=$const0.49, fn=<built-in function getitem>)
2022-01-24 14:08:57,420 DEBUG on stmt: $const0.52 = const(int, 3)
2022-01-24 14:08:57,420 DEBUG on stmt: $0.53 = static_getitem(value=q2, index=3, index_var=$const0.52, fn=<built-in function getitem>)
2022-01-24 14:08:57,420 DEBUG on stmt: $0.54 = $0.50 * $0.53
2022-01-24 14:08:57,420 DEBUG on stmt: $0.55 = $0.47 + $0.54
2022-01-24 14:08:57,420 DEBUG on stmt: $0.57 = $0.55 / q2norm
2022-01-24 14:08:57,420 DEBUG on stmt: $const0.59 = const(int, 0)
2022-01-24 14:08:57,420 DEBUG on stmt: qout[0] = $0.57
2022-01-24 14:08:57,420 DEBUG on stmt: $const0.61 = const(int, 0)
2022-01-24 14:08:57,420 DEBUG on stmt: $0.62 = static_getitem(value=q1, index=0, index_var=$const0.61, fn=<built-in function getitem>)
2022-01-24 14:08:57,420 DEBUG on stmt: $0.63 = unary(fn=<built-in function neg>, value=$0.62)
2022-01-24 14:08:57,420 DEBUG on stmt: $const0.65 = const(int, 1)
2022-01-24 14:08:57,420 DEBUG on stmt: $0.66 = static_getitem(value=q2, index=1, index_var=$const0.65, fn=<built-in function getitem>)
2022-01-24 14:08:57,420 DEBUG on stmt: $0.67 = $0.63 * $0.66
2022-01-24 14:08:57,420 DEBUG on stmt: $const0.69 = const(int, 1)
2022-01-24 14:08:57,420 DEBUG on stmt: $0.70 = static_getitem(value=q1, index=1, index_var=$const0.69, fn=<built-in function getitem>)
2022-01-24 14:08:57,420 DEBUG on stmt: $const0.72 = const(int, 0)
2022-01-24 14:08:57,420 DEBUG on stmt: $0.73 = static_getitem(value=q2, index=0, index_var=$const0.72, fn=<built-in function getitem>)
2022-01-24 14:08:57,420 DEBUG on stmt: $0.74 = $0.70 * $0.73
2022-01-24 14:08:57,420 DEBUG on stmt: $0.75 = $0.67 + $0.74
2022-01-24 14:08:57,420 DEBUG on stmt: $const0.77 = const(int, 2)
2022-01-24 14:08:57,420 DEBUG on stmt: $0.78 = static_getitem(value=q1, index=2, index_var=$const0.77, fn=<built-in function getitem>)
2022-01-24 14:08:57,420 DEBUG on stmt: $const0.80 = const(int, 3)
2022-01-24 14:08:57,421 DEBUG on stmt: $0.81 = static_getitem(value=q2, index=3, index_var=$const0.80, fn=<built-in function getitem>)
2022-01-24 14:08:57,421 DEBUG on stmt: $0.82 = $0.78 * $0.81
2022-01-24 14:08:57,421 DEBUG on stmt: $0.83 = $0.75 - $0.82
2022-01-24 14:08:57,421 DEBUG on stmt: $const0.85 = const(int, 3)
2022-01-24 14:08:57,421 DEBUG on stmt: $0.86 = static_getitem(value=q1, index=3, index_var=$const0.85, fn=<built-in function getitem>)
2022-01-24 14:08:57,421 DEBUG on stmt: $const0.88 = const(int, 2)
2022-01-24 14:08:57,421 DEBUG on stmt: $0.89 = static_getitem(value=q2, index=2, index_var=$const0.88, fn=<built-in function getitem>)
2022-01-24 14:08:57,421 DEBUG on stmt: $0.90 = $0.86 * $0.89
2022-01-24 14:08:57,421 DEBUG on stmt: $0.91 = $0.83 + $0.90
2022-01-24 14:08:57,421 DEBUG on stmt: $0.93 = $0.91 / q2norm
2022-01-24 14:08:57,421 DEBUG on stmt: $const0.95 = const(int, 1)
2022-01-24 14:08:57,421 DEBUG on stmt: qout[1] = $0.93
2022-01-24 14:08:57,421 DEBUG on stmt: $const0.97 = const(int, 0)
2022-01-24 14:08:57,421 DEBUG on stmt: $0.98 = static_getitem(value=q1, index=0, index_var=$const0.97, fn=<built-in function getitem>)
2022-01-24 14:08:57,421 DEBUG on stmt: $0.99 = unary(fn=<built-in function neg>, value=$0.98)
2022-01-24 14:08:57,421 DEBUG on stmt: $const0.101 = const(int, 2)
2022-01-24 14:08:57,421 DEBUG on stmt: $0.102 = static_getitem(value=q2, index=2, index_var=$const0.101, fn=<built-in function getitem>)
2022-01-24 14:08:57,421 DEBUG on stmt: $0.103 = $0.99 * $0.102
2022-01-24 14:08:57,421 DEBUG on stmt: $const0.105 = const(int, 1)
2022-01-24 14:08:57,421 DEBUG on stmt: $0.106 = static_getitem(value=q1, index=1, index_var=$const0.105, fn=<built-in function getitem>)
2022-01-24 14:08:57,421 DEBUG on stmt: $const0.108 = const(int, 3)
2022-01-24 14:08:57,421 DEBUG on stmt: $0.109 = static_getitem(value=q2, index=3, index_var=$const0.108, fn=<built-in function getitem>)
2022-01-24 14:08:57,421 DEBUG on stmt: $0.110 = $0.106 * $0.109
2022-01-24 14:08:57,421 DEBUG on stmt: $0.111 = $0.103 + $0.110
2022-01-24 14:08:57,421 DEBUG on stmt: $const0.113 = const(int, 2)
2022-01-24 14:08:57,421 DEBUG on stmt: $0.114 = static_getitem(value=q1, index=2, index_var=$const0.113, fn=<built-in function getitem>)
2022-01-24 14:08:57,421 DEBUG on stmt: $const0.116 = const(int, 0)
2022-01-24 14:08:57,421 DEBUG on stmt: $0.117 = static_getitem(value=q2, index=0, index_var=$const0.116, fn=<built-in function getitem>)
2022-01-24 14:08:57,421 DEBUG on stmt: $0.118 = $0.114 * $0.117
2022-01-24 14:08:57,421 DEBUG on stmt: $0.119 = $0.111 + $0.118
2022-01-24 14:08:57,422 DEBUG on stmt: $const0.121 = const(int, 3)
2022-01-24 14:08:57,422 DEBUG on stmt: $0.122 = static_getitem(value=q1, index=3, index_var=$const0.121, fn=<built-in function getitem>)
2022-01-24 14:08:57,422 DEBUG on stmt: $const0.124 = const(int, 1)
2022-01-24 14:08:57,422 DEBUG on stmt: $0.125 = static_getitem(value=q2, index=1, index_var=$const0.124, fn=<built-in function getitem>)
2022-01-24 14:08:57,422 DEBUG on stmt: $0.126 = $0.122 * $0.125
2022-01-24 14:08:57,422 DEBUG on stmt: $0.127 = $0.119 - $0.126
2022-01-24 14:08:57,422 DEBUG on stmt: $0.129 = $0.127 / q2norm
2022-01-24 14:08:57,422 DEBUG on stmt: $const0.131 = const(int, 2)
2022-01-24 14:08:57,422 DEBUG on stmt: qout[2] = $0.129
2022-01-24 14:08:57,422 DEBUG on stmt: $const0.133 = const(int, 0)
2022-01-24 14:08:57,422 DEBUG on stmt: $0.134 = static_getitem(value=q1, index=0, index_var=$const0.133, fn=<built-in function getitem>)
2022-01-24 14:08:57,422 DEBUG on stmt: $0.135 = unary(fn=<built-in function neg>, value=$0.134)
2022-01-24 14:08:57,422 DEBUG on stmt: $const0.137 = const(int, 3)
2022-01-24 14:08:57,422 DEBUG on stmt: $0.138 = static_getitem(value=q2, index=3, index_var=$const0.137, fn=<built-in function getitem>)
2022-01-24 14:08:57,422 DEBUG on stmt: $0.139 = $0.135 * $0.138
2022-01-24 14:08:57,422 DEBUG on stmt: $const0.141 = const(int, 1)
2022-01-24 14:08:57,422 DEBUG on stmt: $0.142 = static_getitem(value=q1, index=1, index_var=$const0.141, fn=<built-in function getitem>)
2022-01-24 14:08:57,422 DEBUG on stmt: $const0.144 = const(int, 2)
2022-01-24 14:08:57,422 DEBUG on stmt: $0.145 = static_getitem(value=q2, index=2, index_var=$const0.144, fn=<built-in function getitem>)
2022-01-24 14:08:57,422 DEBUG on stmt: $0.146 = $0.142 * $0.145
2022-01-24 14:08:57,422 DEBUG on stmt: $0.147 = $0.139 - $0.146
2022-01-24 14:08:57,422 DEBUG on stmt: $const0.149 = const(int, 2)
2022-01-24 14:08:57,422 DEBUG on stmt: $0.150 = static_getitem(value=q1, index=2, index_var=$const0.149, fn=<built-in function getitem>)
2022-01-24 14:08:57,422 DEBUG on stmt: $const0.152 = const(int, 1)
2022-01-24 14:08:57,422 DEBUG on stmt: $0.153 = static_getitem(value=q2, index=1, index_var=$const0.152, fn=<built-in function getitem>)
2022-01-24 14:08:57,422 DEBUG on stmt: $0.154 = $0.150 * $0.153
2022-01-24 14:08:57,422 DEBUG on stmt: $0.155 = $0.147 + $0.154
2022-01-24 14:08:57,422 DEBUG on stmt: $const0.157 = const(int, 3)
2022-01-24 14:08:57,422 DEBUG on stmt: $0.158 = static_getitem(value=q1, index=3, index_var=$const0.157, fn=<built-in function getitem>)
2022-01-24 14:08:57,422 DEBUG on stmt: $const0.160 = const(int, 0)
2022-01-24 14:08:57,423 DEBUG on stmt: $0.161 = static_getitem(value=q2, index=0, index_var=$const0.160, fn=<built-in function getitem>)
2022-01-24 14:08:57,423 DEBUG on stmt: $0.162 = $0.158 * $0.161
2022-01-24 14:08:57,423 DEBUG on stmt: $0.163 = $0.155 + $0.162
2022-01-24 14:08:57,423 DEBUG on stmt: $0.165 = $0.163 / q2norm
2022-01-24 14:08:57,423 DEBUG on stmt: $const0.167 = const(int, 3)
2022-01-24 14:08:57,423 DEBUG on stmt: qout[3] = $0.165
2022-01-24 14:08:57,423 DEBUG on stmt: $const0.168 = const(NoneType, None)
2022-01-24 14:08:57,423 DEBUG on stmt: $0.169 = cast(value=$const0.168)
2022-01-24 14:08:57,423 DEBUG on stmt: return $0.169
2022-01-24 14:08:57,424 DEBUG defs defaultdict(<class 'list'>,
            {'$0.10': [<numba.core.ir.Assign object at 0x7f94eb3e7a90>],
             '$0.102': [<numba.core.ir.Assign object at 0x7f94eb3f6b38>],
             '$0.103': [<numba.core.ir.Assign object at 0x7f94ec37a7f0>],
             '$0.106': [<numba.core.ir.Assign object at 0x7f94eb3f6908>],
             '$0.109': [<numba.core.ir.Assign object at 0x7f94eb3f6a20>],
             '$0.11': [<numba.core.ir.Assign object at 0x7f94eb3e7b70>],
             '$0.110': [<numba.core.ir.Assign object at 0x7f94ec37a710>],
             '$0.111': [<numba.core.ir.Assign object at 0x7f94ec37a550>],
             '$0.114': [<numba.core.ir.Assign object at 0x7f94eb3f6cc0>],
             '$0.117': [<numba.core.ir.Assign object at 0x7f94eb3f6d30>],
             '$0.118': [<numba.core.ir.Assign object at 0x7f94ec393208>],
             '$0.119': [<numba.core.ir.Assign object at 0x7f94ec393b00>],
             '$0.122': [<numba.core.ir.Assign object at 0x7f94eb3f6e10>],
             '$0.125': [<numba.core.ir.Assign object at 0x7f94eb3f60f0>],
             '$0.126': [<numba.core.ir.Assign object at 0x7f94ec393c18>],
             '$0.127': [<numba.core.ir.Assign object at 0x7f94ec393ba8>],
             '$0.129': [<numba.core.ir.Assign object at 0x7f94ec393438>],
             '$0.134': [<numba.core.ir.Assign object at 0x7f94eb3f6470>],
             '$0.135': [<numba.core.ir.Assign object at 0x7f94ec36db38>],
             '$0.138': [<numba.core.ir.Assign object at 0x7f94eb3f6828>],
             '$0.139': [<numba.core.ir.Assign object at 0x7f94ec36d2e8>],
             '$0.14': [<numba.core.ir.Assign object at 0x7f94ec36d5f8>],
             '$0.142': [<numba.core.ir.Assign object at 0x7f94eb3f6b70>],
             '$0.145': [<numba.core.ir.Assign object at 0x7f94eb3f6ba8>],
             '$0.146': [<numba.core.ir.Assign object at 0x7f94ec36d9e8>],
             '$0.147': [<numba.core.ir.Assign object at 0x7f94ec2ea860>],
             '$0.150': [<numba.core.ir.Assign object at 0x7f94eb3f68d0>],
             '$0.153': [<numba.core.ir.Assign object at 0x7f94eb3f6128>],
             '$0.154': [<numba.core.ir.Assign object at 0x7f94eb33a048>],
             '$0.155': [<numba.core.ir.Assign object at 0x7f94eb335da0>],
             '$0.158': [<numba.core.ir.Assign object at 0x7f94eb3f6dd8>],
             '$0.16': [<numba.core.ir.Assign object at 0x7f94eb3e7f98>],
             '$0.161': [<numba.core.ir.Assign object at 0x7f94eb3f69b0>],
             '$0.162': [<numba.core.ir.Assign object at 0x7f94eb335470>],
             '$0.163': [<numba.core.ir.Assign object at 0x7f94eb335630>],
             '$0.165': [<numba.core.ir.Assign object at 0x7f94eb335208>],
             '$0.169': [<numba.core.ir.Assign object at 0x7f94eb335a90>],
             '$0.17': [<numba.core.ir.Assign object at 0x7f94eb3f00b8>],
             '$0.20': [<numba.core.ir.Assign object at 0x7f94ec362d68>],
             '$0.22': [<numba.core.ir.Assign object at 0x7f94eb3f04e0>],
             '$0.26': [<numba.core.ir.Assign object at 0x7f94eb3e7710>],
             '$0.27': [<numba.core.ir.Assign object at 0x7f94eb3f09b0>],
             '$0.3': [<numba.core.ir.Assign object at 0x7f94ec3934e0>],
             '$0.30': [<numba.core.ir.Assign object at 0x7f94eb3e7048>],
             '$0.31': [<numba.core.ir.Assign object at 0x7f94eb3f0cf8>],
             '$0.34': [<numba.core.ir.Assign object at 0x7f94eb335e10>],
             '$0.37': [<numba.core.ir.Assign object at 0x7f94eb335128>],
             '$0.38': [<numba.core.ir.Assign object at 0x7f94eb3cd160>],
             '$0.39': [<numba.core.ir.Assign object at 0x7f94eb3cd2b0>],
             '$0.42': [<numba.core.ir.Assign object at 0x7f94eb335b00>],
             '$0.45': [<numba.core.ir.Assign object at 0x7f94eb335d68>],
             '$0.46': [<numba.core.ir.Assign object at 0x7f94eb3cdc18>],
             '$0.47': [<numba.core.ir.Assign object at 0x7f94eb3cdcf8>],
             '$0.5': [<numba.core.ir.Assign object at 0x7f94eb3e7668>],
             '$0.50': [<numba.core.ir.Assign object at 0x7f94eb335c18>],
             '$0.53': [<numba.core.ir.Assign object at 0x7f94eb335710>],
             '$0.54': [<numba.core.ir.Assign object at 0x7f94eb6f7048>],
             '$0.55': [<numba.core.ir.Assign object at 0x7f94eb6f7128>],
             '$0.57': [<numba.core.ir.Assign object at 0x7f94eb6f72b0>],
             '$0.62': [<numba.core.ir.Assign object at 0x7f94eb3356d8>],
             '$0.63': [<numba.core.ir.Assign object at 0x7f94eb6f77f0>],
             '$0.66': [<numba.core.ir.Assign object at 0x7f94eb3359b0>],
             '$0.67': [<numba.core.ir.Assign object at 0x7f94eb6f7b38>],
             '$0.70': [<numba.core.ir.Assign object at 0x7f94eb3f6a90>],
             '$0.73': [<numba.core.ir.Assign object at 0x7f94eb3f61d0>],
             '$0.74': [<numba.core.ir.Assign object at 0x7f94eb700128>],
             '$0.75': [<numba.core.ir.Assign object at 0x7f94eb700208>],
             '$0.78': [<numba.core.ir.Assign object at 0x7f94eb3f6da0>],
             '$0.8': [<numba.core.ir.Assign object at 0x7f94ec36d048>],
             '$0.81': [<numba.core.ir.Assign object at 0x7f94eb3f6550>],
             '$0.82': [<numba.core.ir.Assign object at 0x7f94eb7007b8>],
             '$0.83': [<numba.core.ir.Assign object at 0x7f94eb700898>],
             '$0.86': [<numba.core.ir.Assign object at 0x7f94eb3f6668>],
             '$0.89': [<numba.core.ir.Assign object at 0x7f94eb3f6b00>],
             '$0.90': [<numba.core.ir.Assign object at 0x7f94ec2a2e48>],
             '$0.91': [<numba.core.ir.Assign object at 0x7f94ec398518>],
             '$0.93': [<numba.core.ir.Assign object at 0x7f94ec398470>],
             '$0.98': [<numba.core.ir.Assign object at 0x7f94eb3f6be0>],
             '$0.99': [<numba.core.ir.Assign object at 0x7f94ec37ac88>],
             '$const0.101': [<numba.core.ir.Assign object at 0x7f94ec37ad68>],
             '$const0.105': [<numba.core.ir.Assign object at 0x7f94ec37af28>],
             '$const0.108': [<numba.core.ir.Assign object at 0x7f94ec37aa20>],
             '$const0.113': [<numba.core.ir.Assign object at 0x7f94ec37a208>],
             '$const0.116': [<numba.core.ir.Assign object at 0x7f94ec2e2978>],
             '$const0.121': [<numba.core.ir.Assign object at 0x7f94ec393f60>],
             '$const0.124': [<numba.core.ir.Assign object at 0x7f94ec393a58>],
             '$const0.13': [<numba.core.ir.Assign object at 0x7f94eb3e7cf8>],
             '$const0.131': [<numba.core.ir.Assign object at 0x7f94ec3935c0>],
             '$const0.133': [<numba.core.ir.Assign object at 0x7f94ec3937b8>],
             '$const0.137': [<numba.core.ir.Assign object at 0x7f94ec36d128>],
             '$const0.141': [<numba.core.ir.Assign object at 0x7f94ec36d470>],
             '$const0.144': [<numba.core.ir.Assign object at 0x7f94ec36d6d8>],
             '$const0.149': [<numba.core.ir.Assign object at 0x7f94ec2ea3c8>],
             '$const0.15': [<numba.core.ir.Assign object at 0x7f94eb3e7eb8>],
             '$const0.152': [<numba.core.ir.Assign object at 0x7f94eb33aef0>],
             '$const0.157': [<numba.core.ir.Assign object at 0x7f94eb335f98>],
             '$const0.160': [<numba.core.ir.Assign object at 0x7f94eb3354a8>],
             '$const0.167': [<numba.core.ir.Assign object at 0x7f94eb3357f0>],
             '$const0.168': [<numba.core.ir.Assign object at 0x7f94eb3350f0>],
             '$const0.19': [<numba.core.ir.Assign object at 0x7f94eb3f0240>],
             '$const0.2': [<numba.core.ir.Assign object at 0x7f94eb3e73c8>],
             '$const0.21': [<numba.core.ir.Assign object at 0x7f94eb3f0400>],
             '$const0.25': [<numba.core.ir.Assign object at 0x7f94eb3f07f0>],
             '$const0.29': [<numba.core.ir.Assign object at 0x7f94eb3f0b38>],
             '$const0.33': [<numba.core.ir.Assign object at 0x7f94eb3f0e80>],
             '$const0.36': [<numba.core.ir.Assign object at 0x7f94eb3cdfd0>],
             '$const0.4': [<numba.core.ir.Assign object at 0x7f94eb3e7588>],
             '$const0.41': [<numba.core.ir.Assign object at 0x7f94eb3cd320>],
             '$const0.44': [<numba.core.ir.Assign object at 0x7f94eb3cd898>],
             '$const0.49': [<numba.core.ir.Assign object at 0x7f94eb3cdeb8>],
             '$const0.52': [<numba.core.ir.Assign object at 0x7f94eb3cd6d8>],
             '$const0.59': [<numba.core.ir.Assign object at 0x7f94eb6f7438>],
             '$const0.61': [<numba.core.ir.Assign object at 0x7f94eb6f7630>],
             '$const0.65': [<numba.core.ir.Assign object at 0x7f94eb6f7978>],
             '$const0.69': [<numba.core.ir.Assign object at 0x7f94eb6f7cc0>],
             '$const0.7': [<numba.core.ir.Assign object at 0x7f94eb3e77f0>],
             '$const0.72': [<numba.core.ir.Assign object at 0x7f94eb6f7f28>],
             '$const0.77': [<numba.core.ir.Assign object at 0x7f94eb700390>],
             '$const0.80': [<numba.core.ir.Assign object at 0x7f94eb7005f8>],
             '$const0.85': [<numba.core.ir.Assign object at 0x7f94eb700a20>],
             '$const0.88': [<numba.core.ir.Assign object at 0x7f94eb700c88>],
             '$const0.9': [<numba.core.ir.Assign object at 0x7f94eb3e79b0>],
             '$const0.95': [<numba.core.ir.Assign object at 0x7f94ec398240>],
             '$const0.97': [<numba.core.ir.Assign object at 0x7f94ec3980b8>],
             'q1': [<numba.core.ir.Assign object at 0x7f94eb3e70f0>],
             'q2': [<numba.core.ir.Assign object at 0x7f94eb3e7198>],
             'q2norm': [<numba.core.ir.Assign object at 0x7f94eb3f05c0>],
             'qout': [<numba.core.ir.Assign object at 0x7f94eb3e7240>]})
2022-01-24 14:08:57,424 DEBUG SSA violators set()
2022-01-24 14:08:57,704 DEBUG label 0:
    q2_1 = arg(0, name=q2_1)                 ['q2_1']
    $0.2 = unary(fn=<built-in function neg>, value=q2_1) ['$0.2', 'q2_1']
    $0.3 = cast(value=$0.2)                  ['$0.2', '$0.3']
    return $0.3                              ['$0.3']

2022-01-24 14:08:57,705 DEBUG ==== SSA block analysis pass on 0
2022-01-24 14:08:57,705 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ec009630>
2022-01-24 14:08:57,705 DEBUG on stmt: q2_1 = arg(0, name=q2_1)
2022-01-24 14:08:57,705 DEBUG on stmt: $0.2 = unary(fn=<built-in function neg>, value=q2_1)
2022-01-24 14:08:57,705 DEBUG on stmt: $0.3 = cast(value=$0.2)
2022-01-24 14:08:57,705 DEBUG on stmt: return $0.3
2022-01-24 14:08:57,705 DEBUG defs defaultdict(<class 'list'>,
            {'$0.2': [<numba.core.ir.Assign object at 0x7f94ec009860>],
             '$0.3': [<numba.core.ir.Assign object at 0x7f94ec009940>],
             'q2_1': [<numba.core.ir.Assign object at 0x7f94ec0096d8>]})
2022-01-24 14:08:57,705 DEBUG SSA violators set()
2022-01-24 14:08:57,715 DEBUG label 0:
    src_ndim = arg(0, name=src_ndim)         ['src_ndim']
    src_shape = arg(1, name=src_shape)       ['src_shape']
    dest_ndim = arg(2, name=dest_ndim)       ['dest_ndim']
    dest_shape = arg(3, name=dest_shape)     ['dest_shape']
    $0.3 = src_ndim > dest_ndim              ['$0.3', 'dest_ndim', 'src_ndim']
    bool8 = global(bool: <class 'bool'>)     ['bool8']
    $8pred = call bool8($0.3, func=bool8, args=(Var($0.3, npyimpl.py:205),), kws=(), vararg=None) ['$0.3', '$8pred', 'bool8']
    branch $8pred, 10, 14                    ['$8pred']
label 10:
    $const10.1 = const(int, 0)               ['$const10.1']
    $10.2 = cast(value=$const10.1)           ['$10.2', '$const10.1']
    return $10.2                             ['$10.2']
label 14:
    src_index = const(int, 0)                ['src_index']
    dest_index = dest_ndim - src_ndim        ['dest_index', 'dest_ndim', 'src_ndim']
    jump 26                                  []
label 26:
    jump 28                                  []
label 28:
    $28.3 = src_index < src_ndim             ['$28.3', 'src_index', 'src_ndim']
    bool34 = global(bool: <class 'bool'>)    ['bool34']
    $34pred = call bool34($28.3, func=bool34, args=(Var($28.3, npyimpl.py:212),), kws=(), vararg=None) ['$28.3', '$34pred', 'bool34']
    branch $34pred, 36, 122                  ['$34pred']
label 36:
    src_dim_size = getitem(value=src_shape, index=src_index, fn=<built-in function getitem>) ['src_dim_size', 'src_index', 'src_shape']
    dest_dim_size = getitem(value=dest_shape, index=dest_index, fn=<built-in function getitem>) ['dest_dim_size', 'dest_index', 'dest_shape']
    $const36.8 = const(int, 1)               ['$const36.8']
    $36.9 = dest_dim_size != $const36.8      ['$36.9', '$const36.8', 'dest_dim_size']
    bool58 = global(bool: <class 'bool'>)    ['bool58']
    $58pred = call bool58($36.9, func=bool58, args=(Var($36.9, npyimpl.py:217),), kws=(), vararg=None) ['$36.9', '$58pred', 'bool58']
    branch $58pred, 60, 88                   ['$58pred']
label 60:
    $60.3 = src_dim_size != dest_dim_size    ['$60.3', 'dest_dim_size', 'src_dim_size']
    bool66 = global(bool: <class 'bool'>)    ['bool66']
    $66pred = call bool66($60.3, func=bool66, args=(Var($60.3, npyimpl.py:221),), kws=(), vararg=None) ['$60.3', '$66pred', 'bool66']
    branch $66pred, 68, 104                  ['$66pred']
label 68:
    $const68.2 = const(int, 1)               ['$const68.2']
    $68.3 = src_dim_size != $const68.2       ['$68.3', '$const68.2', 'src_dim_size']
    bool74 = global(bool: <class 'bool'>)    ['bool74']
    $74pred = call bool74($68.3, func=bool74, args=(Var($68.3, npyimpl.py:221),), kws=(), vararg=None) ['$68.3', '$74pred', 'bool74']
    branch $74pred, 76, 104                  ['$74pred']
label 76:
    $const76.2 = const(int, 1)               ['$const76.2']
    $76.3 = dest_index + $const76.2          ['$76.3', '$const76.2', 'dest_index']
    $76.4 = unary(fn=<built-in function neg>, value=$76.3) ['$76.3', '$76.4']
    $76.5 = cast(value=$76.4)                ['$76.4', '$76.5']
    return $76.5                             ['$76.5']
label 88:
    $const88.2 = const(int, 1)               ['$const88.2']
    $88.3 = src_dim_size != $const88.2       ['$88.3', '$const88.2', 'src_dim_size']
    bool94 = global(bool: <class 'bool'>)    ['bool94']
    $94pred = call bool94($88.3, func=bool94, args=(Var($88.3, npyimpl.py:223),), kws=(), vararg=None) ['$88.3', '$94pred', 'bool94']
    branch $94pred, 96, 104                  ['$94pred']
label 96:
    dest_shape[dest_index] = src_dim_size    ['dest_index', 'dest_shape', 'src_dim_size']
    jump 104                                 []
label 104:
    $const104.2 = const(int, 1)              ['$const104.2']
    $104.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=src_index, rhs=$const104.2, static_lhs=Undefined, static_rhs=Undefined) ['$104.3', '$const104.2', 'src_index']
    src_index = $104.3                       ['$104.3', 'src_index']
    $const104.5 = const(int, 1)              ['$const104.5']
    $104.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dest_index, rhs=$const104.5, static_lhs=Undefined, static_rhs=Undefined) ['$104.6', '$const104.5', 'dest_index']
    dest_index = $104.6                      ['$104.6', 'dest_index']
    jump 28                                  []
label 122:
    jump 124                                 []
label 124:
    $124.2 = cast(value=dest_index)          ['$124.2', 'dest_index']
    return $124.2                            ['$124.2']

2022-01-24 14:08:57,721 DEBUG ==== SSA block analysis pass on 0
2022-01-24 14:08:57,721 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb526f60>
2022-01-24 14:08:57,722 DEBUG on stmt: src_ndim = arg(0, name=src_ndim)
2022-01-24 14:08:57,722 DEBUG on stmt: src_shape = arg(1, name=src_shape)
2022-01-24 14:08:57,722 DEBUG on stmt: dest_ndim = arg(2, name=dest_ndim)
2022-01-24 14:08:57,722 DEBUG on stmt: dest_shape = arg(3, name=dest_shape)
2022-01-24 14:08:57,722 DEBUG on stmt: $0.3 = src_ndim > dest_ndim
2022-01-24 14:08:57,722 DEBUG on stmt: bool8 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,722 DEBUG on stmt: $8pred = call bool8($0.3, func=bool8, args=(Var($0.3, npyimpl.py:205),), kws=(), vararg=None)
2022-01-24 14:08:57,722 DEBUG on stmt: branch $8pred, 10, 14
2022-01-24 14:08:57,722 DEBUG ==== SSA block analysis pass on 10
2022-01-24 14:08:57,722 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb526f60>
2022-01-24 14:08:57,722 DEBUG on stmt: $const10.1 = const(int, 0)
2022-01-24 14:08:57,722 DEBUG on stmt: $10.2 = cast(value=$const10.1)
2022-01-24 14:08:57,722 DEBUG on stmt: return $10.2
2022-01-24 14:08:57,722 DEBUG ==== SSA block analysis pass on 14
2022-01-24 14:08:57,722 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb526f60>
2022-01-24 14:08:57,722 DEBUG on stmt: src_index = const(int, 0)
2022-01-24 14:08:57,722 DEBUG on stmt: dest_index = dest_ndim - src_ndim
2022-01-24 14:08:57,722 DEBUG on stmt: jump 26
2022-01-24 14:08:57,722 DEBUG ==== SSA block analysis pass on 26
2022-01-24 14:08:57,722 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb526f60>
2022-01-24 14:08:57,722 DEBUG on stmt: jump 28
2022-01-24 14:08:57,722 DEBUG ==== SSA block analysis pass on 28
2022-01-24 14:08:57,722 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb526f60>
2022-01-24 14:08:57,722 DEBUG on stmt: $28.3 = src_index < src_ndim
2022-01-24 14:08:57,722 DEBUG on stmt: bool34 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,722 DEBUG on stmt: $34pred = call bool34($28.3, func=bool34, args=(Var($28.3, npyimpl.py:212),), kws=(), vararg=None)
2022-01-24 14:08:57,722 DEBUG on stmt: branch $34pred, 36, 122
2022-01-24 14:08:57,723 DEBUG ==== SSA block analysis pass on 36
2022-01-24 14:08:57,723 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb526f60>
2022-01-24 14:08:57,723 DEBUG on stmt: src_dim_size = getitem(value=src_shape, index=src_index, fn=<built-in function getitem>)
2022-01-24 14:08:57,723 DEBUG on stmt: dest_dim_size = getitem(value=dest_shape, index=dest_index, fn=<built-in function getitem>)
2022-01-24 14:08:57,723 DEBUG on stmt: $const36.8 = const(int, 1)
2022-01-24 14:08:57,723 DEBUG on stmt: $36.9 = dest_dim_size != $const36.8
2022-01-24 14:08:57,723 DEBUG on stmt: bool58 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,723 DEBUG on stmt: $58pred = call bool58($36.9, func=bool58, args=(Var($36.9, npyimpl.py:217),), kws=(), vararg=None)
2022-01-24 14:08:57,723 DEBUG on stmt: branch $58pred, 60, 88
2022-01-24 14:08:57,723 DEBUG ==== SSA block analysis pass on 60
2022-01-24 14:08:57,723 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb526f60>
2022-01-24 14:08:57,723 DEBUG on stmt: $60.3 = src_dim_size != dest_dim_size
2022-01-24 14:08:57,723 DEBUG on stmt: bool66 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,723 DEBUG on stmt: $66pred = call bool66($60.3, func=bool66, args=(Var($60.3, npyimpl.py:221),), kws=(), vararg=None)
2022-01-24 14:08:57,723 DEBUG on stmt: branch $66pred, 68, 104
2022-01-24 14:08:57,723 DEBUG ==== SSA block analysis pass on 68
2022-01-24 14:08:57,723 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb526f60>
2022-01-24 14:08:57,723 DEBUG on stmt: $const68.2 = const(int, 1)
2022-01-24 14:08:57,723 DEBUG on stmt: $68.3 = src_dim_size != $const68.2
2022-01-24 14:08:57,723 DEBUG on stmt: bool74 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,723 DEBUG on stmt: $74pred = call bool74($68.3, func=bool74, args=(Var($68.3, npyimpl.py:221),), kws=(), vararg=None)
2022-01-24 14:08:57,723 DEBUG on stmt: branch $74pred, 76, 104
2022-01-24 14:08:57,724 DEBUG ==== SSA block analysis pass on 76
2022-01-24 14:08:57,724 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb526f60>
2022-01-24 14:08:57,724 DEBUG on stmt: $const76.2 = const(int, 1)
2022-01-24 14:08:57,724 DEBUG on stmt: $76.3 = dest_index + $const76.2
2022-01-24 14:08:57,724 DEBUG on stmt: $76.4 = unary(fn=<built-in function neg>, value=$76.3)
2022-01-24 14:08:57,724 DEBUG on stmt: $76.5 = cast(value=$76.4)
2022-01-24 14:08:57,724 DEBUG on stmt: return $76.5
2022-01-24 14:08:57,724 DEBUG ==== SSA block analysis pass on 88
2022-01-24 14:08:57,724 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb526f60>
2022-01-24 14:08:57,724 DEBUG on stmt: $const88.2 = const(int, 1)
2022-01-24 14:08:57,724 DEBUG on stmt: $88.3 = src_dim_size != $const88.2
2022-01-24 14:08:57,724 DEBUG on stmt: bool94 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,724 DEBUG on stmt: $94pred = call bool94($88.3, func=bool94, args=(Var($88.3, npyimpl.py:223),), kws=(), vararg=None)
2022-01-24 14:08:57,724 DEBUG on stmt: branch $94pred, 96, 104
2022-01-24 14:08:57,724 DEBUG ==== SSA block analysis pass on 96
2022-01-24 14:08:57,724 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb526f60>
2022-01-24 14:08:57,724 DEBUG on stmt: dest_shape[dest_index] = src_dim_size
2022-01-24 14:08:57,724 DEBUG on stmt: jump 104
2022-01-24 14:08:57,724 DEBUG ==== SSA block analysis pass on 104
2022-01-24 14:08:57,725 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb526f60>
2022-01-24 14:08:57,725 DEBUG on stmt: $const104.2 = const(int, 1)
2022-01-24 14:08:57,725 DEBUG on stmt: $104.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=src_index, rhs=$const104.2, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:57,725 DEBUG on stmt: src_index = $104.3
2022-01-24 14:08:57,725 DEBUG on stmt: $const104.5 = const(int, 1)
2022-01-24 14:08:57,725 DEBUG on stmt: $104.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dest_index, rhs=$const104.5, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:57,725 DEBUG on stmt: dest_index = $104.6
2022-01-24 14:08:57,725 DEBUG on stmt: jump 28
2022-01-24 14:08:57,725 DEBUG ==== SSA block analysis pass on 122
2022-01-24 14:08:57,725 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb526f60>
2022-01-24 14:08:57,725 DEBUG on stmt: jump 124
2022-01-24 14:08:57,725 DEBUG ==== SSA block analysis pass on 124
2022-01-24 14:08:57,725 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb526f60>
2022-01-24 14:08:57,725 DEBUG on stmt: $124.2 = cast(value=dest_index)
2022-01-24 14:08:57,725 DEBUG on stmt: return $124.2
2022-01-24 14:08:57,725 DEBUG defs defaultdict(<class 'list'>,
            {'$0.3': [<numba.core.ir.Assign object at 0x7f94eb5315f8>],
             '$10.2': [<numba.core.ir.Assign object at 0x7f94eb531a90>],
             '$104.3': [<numba.core.ir.Assign object at 0x7f94eb526550>],
             '$104.6': [<numba.core.ir.Assign object at 0x7f94eb526828>],
             '$124.2': [<numba.core.ir.Assign object at 0x7f94eb526b00>],
             '$28.3': [<numba.core.ir.Assign object at 0x7f94eb539208>],
             '$34pred': [<numba.core.ir.Assign object at 0x7f94eb539400>],
             '$36.9': [<numba.core.ir.Assign object at 0x7f94eb539c50>],
             '$58pred': [<numba.core.ir.Assign object at 0x7f94eb539e48>],
             '$60.3': [<numba.core.ir.Assign object at 0x7f94eb539f98>],
             '$66pred': [<numba.core.ir.Assign object at 0x7f94eb53e1d0>],
             '$68.3': [<numba.core.ir.Assign object at 0x7f94eb53e470>],
             '$74pred': [<numba.core.ir.Assign object at 0x7f94eb53e668>],
             '$76.3': [<numba.core.ir.Assign object at 0x7f94eb53e940>],
             '$76.4': [<numba.core.ir.Assign object at 0x7f94eb53ea20>],
             '$76.5': [<numba.core.ir.Assign object at 0x7f94eb53eb00>],
             '$88.3': [<numba.core.ir.Assign object at 0x7f94eb53edd8>],
             '$8pred': [<numba.core.ir.Assign object at 0x7f94eb5317f0>],
             '$94pred': [<numba.core.ir.Assign object at 0x7f94eb53efd0>],
             '$const10.1': [<numba.core.ir.Assign object at 0x7f94eb531908>],
             '$const104.2': [<numba.core.ir.Assign object at 0x7f94eb526470>],
             '$const104.5': [<numba.core.ir.Assign object at 0x7f94eb526748>],
             '$const36.8': [<numba.core.ir.Assign object at 0x7f94eb539b70>],
             '$const68.2': [<numba.core.ir.Assign object at 0x7f94eb53e390>],
             '$const76.2': [<numba.core.ir.Assign object at 0x7f94eb53e860>],
             '$const88.2': [<numba.core.ir.Assign object at 0x7f94eb53ecf8>],
             'bool34': [<numba.core.ir.Assign object at 0x7f94eb539320>],
             'bool58': [<numba.core.ir.Assign object at 0x7f94eb539d68>],
             'bool66': [<numba.core.ir.Assign object at 0x7f94eb53e0f0>],
             'bool74': [<numba.core.ir.Assign object at 0x7f94eb53e588>],
             'bool8': [<numba.core.ir.Assign object at 0x7f94eb531710>],
             'bool94': [<numba.core.ir.Assign object at 0x7f94eb53eef0>],
             'dest_dim_size': [<numba.core.ir.Assign object at 0x7f94eb539940>],
             'dest_index': [<numba.core.ir.Assign object at 0x7f94eb531f60>,
                            <numba.core.ir.Assign object at 0x7f94eb526898>],
             'dest_ndim': [<numba.core.ir.Assign object at 0x7f94eb531320>],
             'dest_shape': [<numba.core.ir.Assign object at 0x7f94eb531390>],
             'src_dim_size': [<numba.core.ir.Assign object at 0x7f94eb539668>],
             'src_index': [<numba.core.ir.Assign object at 0x7f94eb531b70>,
                           <numba.core.ir.Assign object at 0x7f94eb5265c0>],
             'src_ndim': [<numba.core.ir.Assign object at 0x7f94eb531208>],
             'src_shape': [<numba.core.ir.Assign object at 0x7f94eb5312b0>]})
2022-01-24 14:08:57,725 DEBUG SSA violators {'dest_index', 'src_index'}
2022-01-24 14:08:57,725 DEBUG Fix SSA violator on var dest_index
2022-01-24 14:08:57,725 DEBUG ==== SSA block rewrite pass on 0
2022-01-24 14:08:57,725 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb503400>
2022-01-24 14:08:57,725 DEBUG on stmt: src_ndim = arg(0, name=src_ndim)
2022-01-24 14:08:57,725 DEBUG on stmt: src_shape = arg(1, name=src_shape)
2022-01-24 14:08:57,726 DEBUG on stmt: dest_ndim = arg(2, name=dest_ndim)
2022-01-24 14:08:57,726 DEBUG on stmt: dest_shape = arg(3, name=dest_shape)
2022-01-24 14:08:57,726 DEBUG on stmt: $0.3 = src_ndim > dest_ndim
2022-01-24 14:08:57,726 DEBUG on stmt: bool8 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,726 DEBUG on stmt: $8pred = call bool8($0.3, func=bool8, args=(Var($0.3, npyimpl.py:205),), kws=(), vararg=None)
2022-01-24 14:08:57,726 DEBUG on stmt: branch $8pred, 10, 14
2022-01-24 14:08:57,726 DEBUG ==== SSA block rewrite pass on 10
2022-01-24 14:08:57,726 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb503400>
2022-01-24 14:08:57,726 DEBUG on stmt: $const10.1 = const(int, 0)
2022-01-24 14:08:57,726 DEBUG on stmt: $10.2 = cast(value=$const10.1)
2022-01-24 14:08:57,726 DEBUG on stmt: return $10.2
2022-01-24 14:08:57,726 DEBUG ==== SSA block rewrite pass on 14
2022-01-24 14:08:57,726 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb503400>
2022-01-24 14:08:57,726 DEBUG on stmt: src_index = const(int, 0)
2022-01-24 14:08:57,726 DEBUG on stmt: dest_index = dest_ndim - src_ndim
2022-01-24 14:08:57,726 DEBUG first assign: dest_index
2022-01-24 14:08:57,726 DEBUG replaced with: dest_index = dest_ndim - src_ndim
2022-01-24 14:08:57,726 DEBUG on stmt: jump 26
2022-01-24 14:08:57,726 DEBUG ==== SSA block rewrite pass on 26
2022-01-24 14:08:57,726 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb503400>
2022-01-24 14:08:57,726 DEBUG on stmt: jump 28
2022-01-24 14:08:57,726 DEBUG ==== SSA block rewrite pass on 28
2022-01-24 14:08:57,726 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb503400>
2022-01-24 14:08:57,726 DEBUG on stmt: $28.3 = src_index < src_ndim
2022-01-24 14:08:57,726 DEBUG on stmt: bool34 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,726 DEBUG on stmt: $34pred = call bool34($28.3, func=bool34, args=(Var($28.3, npyimpl.py:212),), kws=(), vararg=None)
2022-01-24 14:08:57,726 DEBUG on stmt: branch $34pred, 36, 122
2022-01-24 14:08:57,726 DEBUG ==== SSA block rewrite pass on 36
2022-01-24 14:08:57,726 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb503400>
2022-01-24 14:08:57,726 DEBUG on stmt: src_dim_size = getitem(value=src_shape, index=src_index, fn=<built-in function getitem>)
2022-01-24 14:08:57,726 DEBUG on stmt: dest_dim_size = getitem(value=dest_shape, index=dest_index, fn=<built-in function getitem>)
2022-01-24 14:08:57,726 DEBUG on stmt: $const36.8 = const(int, 1)
2022-01-24 14:08:57,727 DEBUG on stmt: $36.9 = dest_dim_size != $const36.8
2022-01-24 14:08:57,727 DEBUG on stmt: bool58 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,727 DEBUG on stmt: $58pred = call bool58($36.9, func=bool58, args=(Var($36.9, npyimpl.py:217),), kws=(), vararg=None)
2022-01-24 14:08:57,727 DEBUG on stmt: branch $58pred, 60, 88
2022-01-24 14:08:57,727 DEBUG ==== SSA block rewrite pass on 60
2022-01-24 14:08:57,727 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb503400>
2022-01-24 14:08:57,727 DEBUG on stmt: $60.3 = src_dim_size != dest_dim_size
2022-01-24 14:08:57,727 DEBUG on stmt: bool66 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,727 DEBUG on stmt: $66pred = call bool66($60.3, func=bool66, args=(Var($60.3, npyimpl.py:221),), kws=(), vararg=None)
2022-01-24 14:08:57,727 DEBUG on stmt: branch $66pred, 68, 104
2022-01-24 14:08:57,727 DEBUG ==== SSA block rewrite pass on 68
2022-01-24 14:08:57,727 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb503400>
2022-01-24 14:08:57,727 DEBUG on stmt: $const68.2 = const(int, 1)
2022-01-24 14:08:57,727 DEBUG on stmt: $68.3 = src_dim_size != $const68.2
2022-01-24 14:08:57,727 DEBUG on stmt: bool74 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,727 DEBUG on stmt: $74pred = call bool74($68.3, func=bool74, args=(Var($68.3, npyimpl.py:221),), kws=(), vararg=None)
2022-01-24 14:08:57,727 DEBUG on stmt: branch $74pred, 76, 104
2022-01-24 14:08:57,727 DEBUG ==== SSA block rewrite pass on 76
2022-01-24 14:08:57,727 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb503400>
2022-01-24 14:08:57,727 DEBUG on stmt: $const76.2 = const(int, 1)
2022-01-24 14:08:57,727 DEBUG on stmt: $76.3 = dest_index + $const76.2
2022-01-24 14:08:57,727 DEBUG on stmt: $76.4 = unary(fn=<built-in function neg>, value=$76.3)
2022-01-24 14:08:57,727 DEBUG on stmt: $76.5 = cast(value=$76.4)
2022-01-24 14:08:57,727 DEBUG on stmt: return $76.5
2022-01-24 14:08:57,727 DEBUG ==== SSA block rewrite pass on 88
2022-01-24 14:08:57,727 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb503400>
2022-01-24 14:08:57,727 DEBUG on stmt: $const88.2 = const(int, 1)
2022-01-24 14:08:57,727 DEBUG on stmt: $88.3 = src_dim_size != $const88.2
2022-01-24 14:08:57,727 DEBUG on stmt: bool94 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,727 DEBUG on stmt: $94pred = call bool94($88.3, func=bool94, args=(Var($88.3, npyimpl.py:223),), kws=(), vararg=None)
2022-01-24 14:08:57,727 DEBUG on stmt: branch $94pred, 96, 104
2022-01-24 14:08:57,727 DEBUG ==== SSA block rewrite pass on 96
2022-01-24 14:08:57,727 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb503400>
2022-01-24 14:08:57,728 DEBUG on stmt: dest_shape[dest_index] = src_dim_size
2022-01-24 14:08:57,728 DEBUG on stmt: jump 104
2022-01-24 14:08:57,728 DEBUG ==== SSA block rewrite pass on 104
2022-01-24 14:08:57,728 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb503400>
2022-01-24 14:08:57,728 DEBUG on stmt: $const104.2 = const(int, 1)
2022-01-24 14:08:57,728 DEBUG on stmt: $104.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=src_index, rhs=$const104.2, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:57,728 DEBUG on stmt: src_index = $104.3
2022-01-24 14:08:57,728 DEBUG on stmt: $const104.5 = const(int, 1)
2022-01-24 14:08:57,728 DEBUG on stmt: $104.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dest_index, rhs=$const104.5, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:57,728 DEBUG on stmt: dest_index = $104.6
2022-01-24 14:08:57,728 DEBUG replaced with: dest_index.1 = $104.6
2022-01-24 14:08:57,728 DEBUG on stmt: jump 28
2022-01-24 14:08:57,728 DEBUG ==== SSA block rewrite pass on 122
2022-01-24 14:08:57,728 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb503400>
2022-01-24 14:08:57,728 DEBUG on stmt: jump 124
2022-01-24 14:08:57,728 DEBUG ==== SSA block rewrite pass on 124
2022-01-24 14:08:57,728 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb503400>
2022-01-24 14:08:57,728 DEBUG on stmt: $124.2 = cast(value=dest_index)
2022-01-24 14:08:57,728 DEBUG on stmt: return $124.2
2022-01-24 14:08:57,728 DEBUG Replaced assignments: defaultdict(<class 'list'>,
            {14: [<numba.core.ir.Assign object at 0x7f94eb526e48>],
             104: [<numba.core.ir.Assign object at 0x7f94eb526d68>]})
2022-01-24 14:08:57,728 DEBUG ==== SSA block rewrite pass on 0
2022-01-24 14:08:57,728 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb526ba8>
2022-01-24 14:08:57,728 DEBUG on stmt: src_ndim = arg(0, name=src_ndim)
2022-01-24 14:08:57,728 DEBUG on stmt: src_shape = arg(1, name=src_shape)
2022-01-24 14:08:57,728 DEBUG on stmt: dest_ndim = arg(2, name=dest_ndim)
2022-01-24 14:08:57,728 DEBUG on stmt: dest_shape = arg(3, name=dest_shape)
2022-01-24 14:08:57,728 DEBUG on stmt: $0.3 = src_ndim > dest_ndim
2022-01-24 14:08:57,729 DEBUG on stmt: bool8 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,729 DEBUG on stmt: $8pred = call bool8($0.3, func=bool8, args=(Var($0.3, npyimpl.py:205),), kws=(), vararg=None)
2022-01-24 14:08:57,729 DEBUG on stmt: branch $8pred, 10, 14
2022-01-24 14:08:57,729 DEBUG ==== SSA block rewrite pass on 10
2022-01-24 14:08:57,729 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb526ba8>
2022-01-24 14:08:57,729 DEBUG on stmt: $const10.1 = const(int, 0)
2022-01-24 14:08:57,729 DEBUG on stmt: $10.2 = cast(value=$const10.1)
2022-01-24 14:08:57,729 DEBUG on stmt: return $10.2
2022-01-24 14:08:57,729 DEBUG ==== SSA block rewrite pass on 14
2022-01-24 14:08:57,729 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb526ba8>
2022-01-24 14:08:57,729 DEBUG on stmt: src_index = const(int, 0)
2022-01-24 14:08:57,729 DEBUG on stmt: dest_index = dest_ndim - src_ndim
2022-01-24 14:08:57,729 DEBUG on stmt: jump 26
2022-01-24 14:08:57,729 DEBUG ==== SSA block rewrite pass on 26
2022-01-24 14:08:57,729 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb526ba8>
2022-01-24 14:08:57,729 DEBUG on stmt: jump 28
2022-01-24 14:08:57,729 DEBUG ==== SSA block rewrite pass on 28
2022-01-24 14:08:57,729 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb526ba8>
2022-01-24 14:08:57,729 DEBUG on stmt: $28.3 = src_index < src_ndim
2022-01-24 14:08:57,729 DEBUG on stmt: bool34 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,729 DEBUG on stmt: $34pred = call bool34($28.3, func=bool34, args=(Var($28.3, npyimpl.py:212),), kws=(), vararg=None)
2022-01-24 14:08:57,729 DEBUG on stmt: branch $34pred, 36, 122
2022-01-24 14:08:57,729 DEBUG ==== SSA block rewrite pass on 36
2022-01-24 14:08:57,729 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb526ba8>
2022-01-24 14:08:57,729 DEBUG on stmt: src_dim_size = getitem(value=src_shape, index=src_index, fn=<built-in function getitem>)
2022-01-24 14:08:57,729 DEBUG on stmt: dest_dim_size = getitem(value=dest_shape, index=dest_index, fn=<built-in function getitem>)
2022-01-24 14:08:57,729 DEBUG find_def var='dest_index' stmt=dest_dim_size = getitem(value=dest_shape, index=dest_index, fn=<built-in function getitem>)
2022-01-24 14:08:57,729 DEBUG find_def_from_top label 36
2022-01-24 14:08:57,729 DEBUG idom 28 from label 36
2022-01-24 14:08:57,729 DEBUG find_def_from_bottom label 28
2022-01-24 14:08:57,730 DEBUG find_def_from_top label 28
2022-01-24 14:08:57,730 DEBUG insert phi node dest_index.2 = phi(incoming_values=[], incoming_blocks=[]) at 28
2022-01-24 14:08:57,730 DEBUG find_def_from_bottom label 104
2022-01-24 14:08:57,730 DEBUG incoming_def dest_index.1 = $104.6
2022-01-24 14:08:57,730 DEBUG find_def_from_bottom label 26
2022-01-24 14:08:57,730 DEBUG find_def_from_top label 26
2022-01-24 14:08:57,730 DEBUG idom 14 from label 26
2022-01-24 14:08:57,730 DEBUG find_def_from_bottom label 14
2022-01-24 14:08:57,730 DEBUG incoming_def dest_index = dest_ndim - src_ndim
2022-01-24 14:08:57,730 DEBUG replaced with: dest_dim_size = getitem(value=dest_shape, index=dest_index.2, fn=<built-in function getitem>)
2022-01-24 14:08:57,730 DEBUG on stmt: $const36.8 = const(int, 1)
2022-01-24 14:08:57,730 DEBUG on stmt: $36.9 = dest_dim_size != $const36.8
2022-01-24 14:08:57,730 DEBUG on stmt: bool58 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,730 DEBUG on stmt: $58pred = call bool58($36.9, func=bool58, args=(Var($36.9, npyimpl.py:217),), kws=(), vararg=None)
2022-01-24 14:08:57,730 DEBUG on stmt: branch $58pred, 60, 88
2022-01-24 14:08:57,730 DEBUG ==== SSA block rewrite pass on 60
2022-01-24 14:08:57,730 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb526ba8>
2022-01-24 14:08:57,730 DEBUG on stmt: $60.3 = src_dim_size != dest_dim_size
2022-01-24 14:08:57,730 DEBUG on stmt: bool66 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,730 DEBUG on stmt: $66pred = call bool66($60.3, func=bool66, args=(Var($60.3, npyimpl.py:221),), kws=(), vararg=None)
2022-01-24 14:08:57,730 DEBUG on stmt: branch $66pred, 68, 104
2022-01-24 14:08:57,730 DEBUG ==== SSA block rewrite pass on 68
2022-01-24 14:08:57,730 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb526ba8>
2022-01-24 14:08:57,730 DEBUG on stmt: $const68.2 = const(int, 1)
2022-01-24 14:08:57,730 DEBUG on stmt: $68.3 = src_dim_size != $const68.2
2022-01-24 14:08:57,730 DEBUG on stmt: bool74 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,730 DEBUG on stmt: $74pred = call bool74($68.3, func=bool74, args=(Var($68.3, npyimpl.py:221),), kws=(), vararg=None)
2022-01-24 14:08:57,730 DEBUG on stmt: branch $74pred, 76, 104
2022-01-24 14:08:57,730 DEBUG ==== SSA block rewrite pass on 76
2022-01-24 14:08:57,731 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb526ba8>
2022-01-24 14:08:57,731 DEBUG on stmt: $const76.2 = const(int, 1)
2022-01-24 14:08:57,731 DEBUG on stmt: $76.3 = dest_index + $const76.2
2022-01-24 14:08:57,731 DEBUG find_def var='dest_index' stmt=$76.3 = dest_index + $const76.2
2022-01-24 14:08:57,731 DEBUG find_def_from_top label 76
2022-01-24 14:08:57,731 DEBUG idom 68 from label 76
2022-01-24 14:08:57,731 DEBUG find_def_from_bottom label 68
2022-01-24 14:08:57,731 DEBUG find_def_from_top label 68
2022-01-24 14:08:57,731 DEBUG idom 60 from label 68
2022-01-24 14:08:57,731 DEBUG find_def_from_bottom label 60
2022-01-24 14:08:57,731 DEBUG find_def_from_top label 60
2022-01-24 14:08:57,731 DEBUG idom 36 from label 60
2022-01-24 14:08:57,731 DEBUG find_def_from_bottom label 36
2022-01-24 14:08:57,731 DEBUG find_def_from_top label 36
2022-01-24 14:08:57,731 DEBUG idom 28 from label 36
2022-01-24 14:08:57,731 DEBUG find_def_from_bottom label 28
2022-01-24 14:08:57,731 DEBUG replaced with: $76.3 = dest_index.2 + $const76.2
2022-01-24 14:08:57,731 DEBUG on stmt: $76.4 = unary(fn=<built-in function neg>, value=$76.3)
2022-01-24 14:08:57,731 DEBUG on stmt: $76.5 = cast(value=$76.4)
2022-01-24 14:08:57,731 DEBUG on stmt: return $76.5
2022-01-24 14:08:57,731 DEBUG ==== SSA block rewrite pass on 88
2022-01-24 14:08:57,731 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb526ba8>
2022-01-24 14:08:57,731 DEBUG on stmt: $const88.2 = const(int, 1)
2022-01-24 14:08:57,731 DEBUG on stmt: $88.3 = src_dim_size != $const88.2
2022-01-24 14:08:57,731 DEBUG on stmt: bool94 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,731 DEBUG on stmt: $94pred = call bool94($88.3, func=bool94, args=(Var($88.3, npyimpl.py:223),), kws=(), vararg=None)
2022-01-24 14:08:57,731 DEBUG on stmt: branch $94pred, 96, 104
2022-01-24 14:08:57,731 DEBUG ==== SSA block rewrite pass on 96
2022-01-24 14:08:57,731 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb526ba8>
2022-01-24 14:08:57,731 DEBUG on stmt: dest_shape[dest_index] = src_dim_size
2022-01-24 14:08:57,731 DEBUG find_def var='dest_index' stmt=dest_shape[dest_index] = src_dim_size
2022-01-24 14:08:57,731 DEBUG find_def_from_top label 96
2022-01-24 14:08:57,731 DEBUG idom 88 from label 96
2022-01-24 14:08:57,732 DEBUG find_def_from_bottom label 88
2022-01-24 14:08:57,732 DEBUG find_def_from_top label 88
2022-01-24 14:08:57,732 DEBUG idom 36 from label 88
2022-01-24 14:08:57,732 DEBUG find_def_from_bottom label 36
2022-01-24 14:08:57,732 DEBUG find_def_from_top label 36
2022-01-24 14:08:57,732 DEBUG idom 28 from label 36
2022-01-24 14:08:57,732 DEBUG find_def_from_bottom label 28
2022-01-24 14:08:57,732 DEBUG replaced with: dest_shape[dest_index.2] = src_dim_size
2022-01-24 14:08:57,732 DEBUG on stmt: jump 104
2022-01-24 14:08:57,732 DEBUG ==== SSA block rewrite pass on 104
2022-01-24 14:08:57,732 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb526ba8>
2022-01-24 14:08:57,732 DEBUG on stmt: $const104.2 = const(int, 1)
2022-01-24 14:08:57,732 DEBUG on stmt: $104.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=src_index, rhs=$const104.2, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:57,732 DEBUG on stmt: src_index = $104.3
2022-01-24 14:08:57,732 DEBUG on stmt: $const104.5 = const(int, 1)
2022-01-24 14:08:57,732 DEBUG on stmt: $104.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dest_index, rhs=$const104.5, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:57,732 DEBUG find_def var='dest_index' stmt=$104.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dest_index, rhs=$const104.5, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:57,732 DEBUG find_def_from_top label 104
2022-01-24 14:08:57,732 DEBUG idom 36 from label 104
2022-01-24 14:08:57,732 DEBUG find_def_from_bottom label 36
2022-01-24 14:08:57,732 DEBUG find_def_from_top label 36
2022-01-24 14:08:57,732 DEBUG idom 28 from label 36
2022-01-24 14:08:57,732 DEBUG find_def_from_bottom label 28
2022-01-24 14:08:57,732 DEBUG replaced with: $104.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dest_index.2, rhs=$const104.5, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:57,732 DEBUG on stmt: dest_index.1 = $104.6
2022-01-24 14:08:57,732 DEBUG on stmt: jump 28
2022-01-24 14:08:57,732 DEBUG ==== SSA block rewrite pass on 122
2022-01-24 14:08:57,732 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb526ba8>
2022-01-24 14:08:57,732 DEBUG on stmt: jump 124
2022-01-24 14:08:57,732 DEBUG ==== SSA block rewrite pass on 124
2022-01-24 14:08:57,732 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb526ba8>
2022-01-24 14:08:57,732 DEBUG on stmt: $124.2 = cast(value=dest_index)
2022-01-24 14:08:57,733 DEBUG find_def var='dest_index' stmt=$124.2 = cast(value=dest_index)
2022-01-24 14:08:57,733 DEBUG find_def_from_top label 124
2022-01-24 14:08:57,733 DEBUG idom 122 from label 124
2022-01-24 14:08:57,733 DEBUG find_def_from_bottom label 122
2022-01-24 14:08:57,733 DEBUG find_def_from_top label 122
2022-01-24 14:08:57,733 DEBUG idom 28 from label 122
2022-01-24 14:08:57,733 DEBUG find_def_from_bottom label 28
2022-01-24 14:08:57,733 DEBUG replaced with: $124.2 = cast(value=dest_index.2)
2022-01-24 14:08:57,733 DEBUG on stmt: return $124.2
2022-01-24 14:08:57,733 DEBUG Fix SSA violator on var src_index
2022-01-24 14:08:57,733 DEBUG ==== SSA block rewrite pass on 0
2022-01-24 14:08:57,733 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb526978>
2022-01-24 14:08:57,733 DEBUG on stmt: src_ndim = arg(0, name=src_ndim)
2022-01-24 14:08:57,733 DEBUG on stmt: src_shape = arg(1, name=src_shape)
2022-01-24 14:08:57,733 DEBUG on stmt: dest_ndim = arg(2, name=dest_ndim)
2022-01-24 14:08:57,733 DEBUG on stmt: dest_shape = arg(3, name=dest_shape)
2022-01-24 14:08:57,733 DEBUG on stmt: $0.3 = src_ndim > dest_ndim
2022-01-24 14:08:57,733 DEBUG on stmt: bool8 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,733 DEBUG on stmt: $8pred = call bool8($0.3, func=bool8, args=(Var($0.3, npyimpl.py:205),), kws=(), vararg=None)
2022-01-24 14:08:57,733 DEBUG on stmt: branch $8pred, 10, 14
2022-01-24 14:08:57,733 DEBUG ==== SSA block rewrite pass on 10
2022-01-24 14:08:57,733 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb526978>
2022-01-24 14:08:57,733 DEBUG on stmt: $const10.1 = const(int, 0)
2022-01-24 14:08:57,733 DEBUG on stmt: $10.2 = cast(value=$const10.1)
2022-01-24 14:08:57,733 DEBUG on stmt: return $10.2
2022-01-24 14:08:57,733 DEBUG ==== SSA block rewrite pass on 14
2022-01-24 14:08:57,733 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb526978>
2022-01-24 14:08:57,733 DEBUG on stmt: src_index = const(int, 0)
2022-01-24 14:08:57,733 DEBUG first assign: src_index
2022-01-24 14:08:57,733 DEBUG replaced with: src_index = const(int, 0)
2022-01-24 14:08:57,733 DEBUG on stmt: dest_index = dest_ndim - src_ndim
2022-01-24 14:08:57,733 DEBUG on stmt: jump 26
2022-01-24 14:08:57,733 DEBUG ==== SSA block rewrite pass on 26
2022-01-24 14:08:57,734 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb526978>
2022-01-24 14:08:57,734 DEBUG on stmt: jump 28
2022-01-24 14:08:57,734 DEBUG ==== SSA block rewrite pass on 28
2022-01-24 14:08:57,734 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb526978>
2022-01-24 14:08:57,734 DEBUG on stmt: dest_index.2 = phi(incoming_values=[Var(dest_index.1, npyimpl.py:227), Var(dest_index, npyimpl.py:211)], incoming_blocks=[104, 26])
2022-01-24 14:08:57,734 DEBUG on stmt: $28.3 = src_index < src_ndim
2022-01-24 14:08:57,734 DEBUG on stmt: bool34 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,734 DEBUG on stmt: $34pred = call bool34($28.3, func=bool34, args=(Var($28.3, npyimpl.py:212),), kws=(), vararg=None)
2022-01-24 14:08:57,734 DEBUG on stmt: branch $34pred, 36, 122
2022-01-24 14:08:57,734 DEBUG ==== SSA block rewrite pass on 36
2022-01-24 14:08:57,734 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb526978>
2022-01-24 14:08:57,734 DEBUG on stmt: src_dim_size = getitem(value=src_shape, index=src_index, fn=<built-in function getitem>)
2022-01-24 14:08:57,734 DEBUG on stmt: dest_dim_size = getitem(value=dest_shape, index=dest_index.2, fn=<built-in function getitem>)
2022-01-24 14:08:57,734 DEBUG on stmt: $const36.8 = const(int, 1)
2022-01-24 14:08:57,734 DEBUG on stmt: $36.9 = dest_dim_size != $const36.8
2022-01-24 14:08:57,734 DEBUG on stmt: bool58 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,734 DEBUG on stmt: $58pred = call bool58($36.9, func=bool58, args=(Var($36.9, npyimpl.py:217),), kws=(), vararg=None)
2022-01-24 14:08:57,734 DEBUG on stmt: branch $58pred, 60, 88
2022-01-24 14:08:57,734 DEBUG ==== SSA block rewrite pass on 60
2022-01-24 14:08:57,734 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb526978>
2022-01-24 14:08:57,734 DEBUG on stmt: $60.3 = src_dim_size != dest_dim_size
2022-01-24 14:08:57,734 DEBUG on stmt: bool66 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,734 DEBUG on stmt: $66pred = call bool66($60.3, func=bool66, args=(Var($60.3, npyimpl.py:221),), kws=(), vararg=None)
2022-01-24 14:08:57,734 DEBUG on stmt: branch $66pred, 68, 104
2022-01-24 14:08:57,734 DEBUG ==== SSA block rewrite pass on 68
2022-01-24 14:08:57,734 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb526978>
2022-01-24 14:08:57,734 DEBUG on stmt: $const68.2 = const(int, 1)
2022-01-24 14:08:57,734 DEBUG on stmt: $68.3 = src_dim_size != $const68.2
2022-01-24 14:08:57,734 DEBUG on stmt: bool74 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,734 DEBUG on stmt: $74pred = call bool74($68.3, func=bool74, args=(Var($68.3, npyimpl.py:221),), kws=(), vararg=None)
2022-01-24 14:08:57,734 DEBUG on stmt: branch $74pred, 76, 104
2022-01-24 14:08:57,734 DEBUG ==== SSA block rewrite pass on 76
2022-01-24 14:08:57,735 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb526978>
2022-01-24 14:08:57,735 DEBUG on stmt: $const76.2 = const(int, 1)
2022-01-24 14:08:57,735 DEBUG on stmt: $76.3 = dest_index.2 + $const76.2
2022-01-24 14:08:57,735 DEBUG on stmt: $76.4 = unary(fn=<built-in function neg>, value=$76.3)
2022-01-24 14:08:57,735 DEBUG on stmt: $76.5 = cast(value=$76.4)
2022-01-24 14:08:57,735 DEBUG on stmt: return $76.5
2022-01-24 14:08:57,735 DEBUG ==== SSA block rewrite pass on 88
2022-01-24 14:08:57,735 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb526978>
2022-01-24 14:08:57,735 DEBUG on stmt: $const88.2 = const(int, 1)
2022-01-24 14:08:57,735 DEBUG on stmt: $88.3 = src_dim_size != $const88.2
2022-01-24 14:08:57,735 DEBUG on stmt: bool94 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,735 DEBUG on stmt: $94pred = call bool94($88.3, func=bool94, args=(Var($88.3, npyimpl.py:223),), kws=(), vararg=None)
2022-01-24 14:08:57,735 DEBUG on stmt: branch $94pred, 96, 104
2022-01-24 14:08:57,735 DEBUG ==== SSA block rewrite pass on 96
2022-01-24 14:08:57,735 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb526978>
2022-01-24 14:08:57,735 DEBUG on stmt: dest_shape[dest_index.2] = src_dim_size
2022-01-24 14:08:57,735 DEBUG on stmt: jump 104
2022-01-24 14:08:57,735 DEBUG ==== SSA block rewrite pass on 104
2022-01-24 14:08:57,735 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb526978>
2022-01-24 14:08:57,735 DEBUG on stmt: $const104.2 = const(int, 1)
2022-01-24 14:08:57,735 DEBUG on stmt: $104.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=src_index, rhs=$const104.2, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:57,735 DEBUG on stmt: src_index = $104.3
2022-01-24 14:08:57,735 DEBUG replaced with: src_index.1 = $104.3
2022-01-24 14:08:57,735 DEBUG on stmt: $const104.5 = const(int, 1)
2022-01-24 14:08:57,735 DEBUG on stmt: $104.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dest_index.2, rhs=$const104.5, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:57,735 DEBUG on stmt: dest_index.1 = $104.6
2022-01-24 14:08:57,735 DEBUG on stmt: jump 28
2022-01-24 14:08:57,735 DEBUG ==== SSA block rewrite pass on 122
2022-01-24 14:08:57,735 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb526978>
2022-01-24 14:08:57,735 DEBUG on stmt: jump 124
2022-01-24 14:08:57,735 DEBUG ==== SSA block rewrite pass on 124
2022-01-24 14:08:57,735 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb526978>
2022-01-24 14:08:57,735 DEBUG on stmt: $124.2 = cast(value=dest_index.2)
2022-01-24 14:08:57,735 DEBUG on stmt: return $124.2
2022-01-24 14:08:57,736 DEBUG Replaced assignments: defaultdict(<class 'list'>,
            {14: [<numba.core.ir.Assign object at 0x7f94eb526cc0>],
             104: [<numba.core.ir.Assign object at 0x7f94eb535940>]})
2022-01-24 14:08:57,736 DEBUG ==== SSA block rewrite pass on 0
2022-01-24 14:08:57,736 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb5356d8>
2022-01-24 14:08:57,736 DEBUG on stmt: src_ndim = arg(0, name=src_ndim)
2022-01-24 14:08:57,736 DEBUG on stmt: src_shape = arg(1, name=src_shape)
2022-01-24 14:08:57,736 DEBUG on stmt: dest_ndim = arg(2, name=dest_ndim)
2022-01-24 14:08:57,736 DEBUG on stmt: dest_shape = arg(3, name=dest_shape)
2022-01-24 14:08:57,736 DEBUG on stmt: $0.3 = src_ndim > dest_ndim
2022-01-24 14:08:57,736 DEBUG on stmt: bool8 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,736 DEBUG on stmt: $8pred = call bool8($0.3, func=bool8, args=(Var($0.3, npyimpl.py:205),), kws=(), vararg=None)
2022-01-24 14:08:57,736 DEBUG on stmt: branch $8pred, 10, 14
2022-01-24 14:08:57,736 DEBUG ==== SSA block rewrite pass on 10
2022-01-24 14:08:57,736 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb5356d8>
2022-01-24 14:08:57,736 DEBUG on stmt: $const10.1 = const(int, 0)
2022-01-24 14:08:57,736 DEBUG on stmt: $10.2 = cast(value=$const10.1)
2022-01-24 14:08:57,736 DEBUG on stmt: return $10.2
2022-01-24 14:08:57,736 DEBUG ==== SSA block rewrite pass on 14
2022-01-24 14:08:57,736 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb5356d8>
2022-01-24 14:08:57,736 DEBUG on stmt: src_index = const(int, 0)
2022-01-24 14:08:57,736 DEBUG on stmt: dest_index = dest_ndim - src_ndim
2022-01-24 14:08:57,736 DEBUG on stmt: jump 26
2022-01-24 14:08:57,736 DEBUG ==== SSA block rewrite pass on 26
2022-01-24 14:08:57,736 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb5356d8>
2022-01-24 14:08:57,736 DEBUG on stmt: jump 28
2022-01-24 14:08:57,736 DEBUG ==== SSA block rewrite pass on 28
2022-01-24 14:08:57,736 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb5356d8>
2022-01-24 14:08:57,737 DEBUG on stmt: dest_index.2 = phi(incoming_values=[Var(dest_index.1, npyimpl.py:227), Var(dest_index, npyimpl.py:211)], incoming_blocks=[104, 26])
2022-01-24 14:08:57,737 DEBUG on stmt: $28.3 = src_index < src_ndim
2022-01-24 14:08:57,737 DEBUG find_def var='src_index' stmt=$28.3 = src_index < src_ndim
2022-01-24 14:08:57,737 DEBUG find_def_from_top label 28
2022-01-24 14:08:57,737 DEBUG insert phi node src_index.2 = phi(incoming_values=[], incoming_blocks=[]) at 28
2022-01-24 14:08:57,737 DEBUG find_def_from_bottom label 104
2022-01-24 14:08:57,737 DEBUG incoming_def src_index.1 = $104.3
2022-01-24 14:08:57,737 DEBUG find_def_from_bottom label 26
2022-01-24 14:08:57,737 DEBUG find_def_from_top label 26
2022-01-24 14:08:57,737 DEBUG idom 14 from label 26
2022-01-24 14:08:57,737 DEBUG find_def_from_bottom label 14
2022-01-24 14:08:57,737 DEBUG incoming_def src_index = const(int, 0)
2022-01-24 14:08:57,737 DEBUG replaced with: $28.3 = src_index.2 < src_ndim
2022-01-24 14:08:57,737 DEBUG on stmt: bool34 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,737 DEBUG on stmt: $34pred = call bool34($28.3, func=bool34, args=(Var($28.3, npyimpl.py:212),), kws=(), vararg=None)
2022-01-24 14:08:57,737 DEBUG on stmt: branch $34pred, 36, 122
2022-01-24 14:08:57,737 DEBUG ==== SSA block rewrite pass on 36
2022-01-24 14:08:57,737 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb5356d8>
2022-01-24 14:08:57,737 DEBUG on stmt: src_dim_size = getitem(value=src_shape, index=src_index, fn=<built-in function getitem>)
2022-01-24 14:08:57,737 DEBUG find_def var='src_index' stmt=src_dim_size = getitem(value=src_shape, index=src_index, fn=<built-in function getitem>)
2022-01-24 14:08:57,737 DEBUG find_def_from_top label 36
2022-01-24 14:08:57,737 DEBUG idom 28 from label 36
2022-01-24 14:08:57,737 DEBUG find_def_from_bottom label 28
2022-01-24 14:08:57,737 DEBUG replaced with: src_dim_size = getitem(value=src_shape, index=src_index.2, fn=<built-in function getitem>)
2022-01-24 14:08:57,737 DEBUG on stmt: dest_dim_size = getitem(value=dest_shape, index=dest_index.2, fn=<built-in function getitem>)
2022-01-24 14:08:57,737 DEBUG on stmt: $const36.8 = const(int, 1)
2022-01-24 14:08:57,737 DEBUG on stmt: $36.9 = dest_dim_size != $const36.8
2022-01-24 14:08:57,737 DEBUG on stmt: bool58 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,737 DEBUG on stmt: $58pred = call bool58($36.9, func=bool58, args=(Var($36.9, npyimpl.py:217),), kws=(), vararg=None)
2022-01-24 14:08:57,738 DEBUG on stmt: branch $58pred, 60, 88
2022-01-24 14:08:57,738 DEBUG ==== SSA block rewrite pass on 60
2022-01-24 14:08:57,738 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb5356d8>
2022-01-24 14:08:57,738 DEBUG on stmt: $60.3 = src_dim_size != dest_dim_size
2022-01-24 14:08:57,738 DEBUG on stmt: bool66 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,738 DEBUG on stmt: $66pred = call bool66($60.3, func=bool66, args=(Var($60.3, npyimpl.py:221),), kws=(), vararg=None)
2022-01-24 14:08:57,738 DEBUG on stmt: branch $66pred, 68, 104
2022-01-24 14:08:57,738 DEBUG ==== SSA block rewrite pass on 68
2022-01-24 14:08:57,738 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb5356d8>
2022-01-24 14:08:57,738 DEBUG on stmt: $const68.2 = const(int, 1)
2022-01-24 14:08:57,738 DEBUG on stmt: $68.3 = src_dim_size != $const68.2
2022-01-24 14:08:57,738 DEBUG on stmt: bool74 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,738 DEBUG on stmt: $74pred = call bool74($68.3, func=bool74, args=(Var($68.3, npyimpl.py:221),), kws=(), vararg=None)
2022-01-24 14:08:57,738 DEBUG on stmt: branch $74pred, 76, 104
2022-01-24 14:08:57,738 DEBUG ==== SSA block rewrite pass on 76
2022-01-24 14:08:57,738 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb5356d8>
2022-01-24 14:08:57,738 DEBUG on stmt: $const76.2 = const(int, 1)
2022-01-24 14:08:57,738 DEBUG on stmt: $76.3 = dest_index.2 + $const76.2
2022-01-24 14:08:57,738 DEBUG on stmt: $76.4 = unary(fn=<built-in function neg>, value=$76.3)
2022-01-24 14:08:57,738 DEBUG on stmt: $76.5 = cast(value=$76.4)
2022-01-24 14:08:57,738 DEBUG on stmt: return $76.5
2022-01-24 14:08:57,738 DEBUG ==== SSA block rewrite pass on 88
2022-01-24 14:08:57,738 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb5356d8>
2022-01-24 14:08:57,739 DEBUG on stmt: $const88.2 = const(int, 1)
2022-01-24 14:08:57,739 DEBUG on stmt: $88.3 = src_dim_size != $const88.2
2022-01-24 14:08:57,739 DEBUG on stmt: bool94 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,739 DEBUG on stmt: $94pred = call bool94($88.3, func=bool94, args=(Var($88.3, npyimpl.py:223),), kws=(), vararg=None)
2022-01-24 14:08:57,739 DEBUG on stmt: branch $94pred, 96, 104
2022-01-24 14:08:57,739 DEBUG ==== SSA block rewrite pass on 96
2022-01-24 14:08:57,739 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb5356d8>
2022-01-24 14:08:57,739 DEBUG on stmt: dest_shape[dest_index.2] = src_dim_size
2022-01-24 14:08:57,739 DEBUG on stmt: jump 104
2022-01-24 14:08:57,739 DEBUG ==== SSA block rewrite pass on 104
2022-01-24 14:08:57,739 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb5356d8>
2022-01-24 14:08:57,739 DEBUG on stmt: $const104.2 = const(int, 1)
2022-01-24 14:08:57,739 DEBUG on stmt: $104.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=src_index, rhs=$const104.2, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:57,739 DEBUG find_def var='src_index' stmt=$104.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=src_index, rhs=$const104.2, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:57,739 DEBUG find_def_from_top label 104
2022-01-24 14:08:57,739 DEBUG idom 36 from label 104
2022-01-24 14:08:57,739 DEBUG find_def_from_bottom label 36
2022-01-24 14:08:57,739 DEBUG find_def_from_top label 36
2022-01-24 14:08:57,739 DEBUG idom 28 from label 36
2022-01-24 14:08:57,739 DEBUG find_def_from_bottom label 28
2022-01-24 14:08:57,739 DEBUG replaced with: $104.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=src_index.2, rhs=$const104.2, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:57,739 DEBUG on stmt: src_index.1 = $104.3
2022-01-24 14:08:57,739 DEBUG on stmt: $const104.5 = const(int, 1)
2022-01-24 14:08:57,739 DEBUG on stmt: $104.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dest_index.2, rhs=$const104.5, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:57,739 DEBUG on stmt: dest_index.1 = $104.6
2022-01-24 14:08:57,739 DEBUG on stmt: jump 28
2022-01-24 14:08:57,739 DEBUG ==== SSA block rewrite pass on 122
2022-01-24 14:08:57,739 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb5356d8>
2022-01-24 14:08:57,740 DEBUG on stmt: jump 124
2022-01-24 14:08:57,740 DEBUG ==== SSA block rewrite pass on 124
2022-01-24 14:08:57,740 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94eb5356d8>
2022-01-24 14:08:57,740 DEBUG on stmt: $124.2 = cast(value=dest_index.2)
2022-01-24 14:08:57,740 DEBUG on stmt: return $124.2
2022-01-24 14:08:57,941 DEBUG label 0:
    q1 = arg(0, name=q1)                     ['q1']
    q2 = arg(1, name=q2)                     ['q2']
    out = arg(2, name=out)                   ['out']
    $const0.2 = const(int, 0)                ['$const0.2']
    $0.3 = getitem(value=q1, index=$const0.2, fn=<built-in function getitem>) ['$0.3', '$const0.2', 'q1']
    $const0.5 = const(int, 0)                ['$const0.5']
    $0.6 = getitem(value=q2, index=$const0.5, fn=<built-in function getitem>) ['$0.6', '$const0.5', 'q2']
    $0.7 = $0.3 - $0.6                       ['$0.3', '$0.6', '$0.7']
    $const0.8 = const(int, 2)                ['$const0.8']
    $0.9 = $0.7 ** $const0.8                 ['$0.7', '$0.9', '$const0.8']
    $const0.11 = const(int, 1)               ['$const0.11']
    $0.12 = getitem(value=q1, index=$const0.11, fn=<built-in function getitem>) ['$0.12', '$const0.11', 'q1']
    $const0.14 = const(int, 1)               ['$const0.14']
    $0.15 = getitem(value=q2, index=$const0.14, fn=<built-in function getitem>) ['$0.15', '$const0.14', 'q2']
    $0.16 = $0.12 - $0.15                    ['$0.12', '$0.15', '$0.16']
    $const0.17 = const(int, 2)               ['$const0.17']
    $0.18 = $0.16 ** $const0.17              ['$0.16', '$0.18', '$const0.17']
    $0.19 = $0.9 + $0.18                     ['$0.18', '$0.19', '$0.9']
    $const0.21 = const(int, 2)               ['$const0.21']
    $0.22 = getitem(value=q1, index=$const0.21, fn=<built-in function getitem>) ['$0.22', '$const0.21', 'q1']
    $const0.24 = const(int, 2)               ['$const0.24']
    $0.25 = getitem(value=q2, index=$const0.24, fn=<built-in function getitem>) ['$0.25', '$const0.24', 'q2']
    $0.26 = $0.22 - $0.25                    ['$0.22', '$0.25', '$0.26']
    $const0.27 = const(int, 2)               ['$const0.27']
    $0.28 = $0.26 ** $const0.27              ['$0.26', '$0.28', '$const0.27']
    $0.29 = $0.19 + $0.28                    ['$0.19', '$0.28', '$0.29']
    $const0.31 = const(int, 3)               ['$const0.31']
    $0.32 = getitem(value=q1, index=$const0.31, fn=<built-in function getitem>) ['$0.32', '$const0.31', 'q1']
    $const0.34 = const(int, 3)               ['$const0.34']
    $0.35 = getitem(value=q2, index=$const0.34, fn=<built-in function getitem>) ['$0.35', '$const0.34', 'q2']
    $0.36 = $0.32 - $0.35                    ['$0.32', '$0.35', '$0.36']
    $const0.37 = const(int, 2)               ['$const0.37']
    $0.38 = $0.36 ** $const0.37              ['$0.36', '$0.38', '$const0.37']
    a = $0.29 + $0.38                        ['$0.29', '$0.38', 'a']
    $const0.41 = const(int, 0)               ['$const0.41']
    $0.42 = getitem(value=q1, index=$const0.41, fn=<built-in function getitem>) ['$0.42', '$const0.41', 'q1']
    $const0.44 = const(int, 0)               ['$const0.44']
    $0.45 = getitem(value=q2, index=$const0.44, fn=<built-in function getitem>) ['$0.45', '$const0.44', 'q2']
    $0.46 = $0.42 + $0.45                    ['$0.42', '$0.45', '$0.46']
    $const0.47 = const(int, 2)               ['$const0.47']
    $0.48 = $0.46 ** $const0.47              ['$0.46', '$0.48', '$const0.47']
    $const0.50 = const(int, 1)               ['$const0.50']
    $0.51 = getitem(value=q1, index=$const0.50, fn=<built-in function getitem>) ['$0.51', '$const0.50', 'q1']
    $const0.53 = const(int, 1)               ['$const0.53']
    $0.54 = getitem(value=q2, index=$const0.53, fn=<built-in function getitem>) ['$0.54', '$const0.53', 'q2']
    $0.55 = $0.51 + $0.54                    ['$0.51', '$0.54', '$0.55']
    $const0.56 = const(int, 2)               ['$const0.56']
    $0.57 = $0.55 ** $const0.56              ['$0.55', '$0.57', '$const0.56']
    $0.58 = $0.48 + $0.57                    ['$0.48', '$0.57', '$0.58']
    $const0.60 = const(int, 2)               ['$const0.60']
    $0.61 = getitem(value=q1, index=$const0.60, fn=<built-in function getitem>) ['$0.61', '$const0.60', 'q1']
    $const0.63 = const(int, 2)               ['$const0.63']
    $0.64 = getitem(value=q2, index=$const0.63, fn=<built-in function getitem>) ['$0.64', '$const0.63', 'q2']
    $0.65 = $0.61 + $0.64                    ['$0.61', '$0.64', '$0.65']
    $const0.66 = const(int, 2)               ['$const0.66']
    $0.67 = $0.65 ** $const0.66              ['$0.65', '$0.67', '$const0.66']
    $0.68 = $0.58 + $0.67                    ['$0.58', '$0.67', '$0.68']
    $const0.70 = const(int, 3)               ['$const0.70']
    $0.71 = getitem(value=q1, index=$const0.70, fn=<built-in function getitem>) ['$0.71', '$const0.70', 'q1']
    $const0.73 = const(int, 3)               ['$const0.73']
    $0.74 = getitem(value=q2, index=$const0.73, fn=<built-in function getitem>) ['$0.74', '$const0.73', 'q2']
    $0.75 = $0.71 + $0.74                    ['$0.71', '$0.74', '$0.75']
    $const0.76 = const(int, 2)               ['$const0.76']
    $0.77 = $0.75 ** $const0.76              ['$0.75', '$0.77', '$const0.76']
    b = $0.68 + $0.77                        ['$0.68', '$0.77', 'b']
    $0.81 = b > a                            ['$0.81', 'a', 'b']
    bool168 = global(bool: <class 'bool'>)   ['bool168']
    $168pred = call bool168($0.81, func=bool168, args=(Var($0.81, distance.py:153),), kws=(), vararg=None) ['$0.81', '$168pred', 'bool168']
    branch $168pred, 170, 186                ['$168pred']
label 170:
    $170.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$170.1']
    $170.2 = getattr(value=$170.1, attr=sqrt) ['$170.1', '$170.2']
    $170.4 = call $170.2(a, func=$170.2, args=[Var(a, distance.py:151)], kws=(), vararg=None) ['$170.2', '$170.4', 'a']
    $const170.6 = const(int, 0)              ['$const170.6']
    out[$const170.6] = $170.4                ['$170.4', '$const170.6', 'out']
    jump 200                                 []
label 186:
    $186.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$186.1']
    $186.2 = getattr(value=$186.1, attr=sqrt) ['$186.1', '$186.2']
    $186.4 = call $186.2(b, func=$186.2, args=[Var(b, distance.py:152)], kws=(), vararg=None) ['$186.2', '$186.4', 'b']
    $const186.6 = const(int, 0)              ['$const186.6']
    out[$const186.6] = $186.4                ['$186.4', '$const186.6', 'out']
    jump 200                                 []
label 200:
    $const200.1 = const(NoneType, None)      ['$const200.1']
    $200.2 = cast(value=$const200.1)         ['$200.2', '$const200.1']
    return $200.2                            ['$200.2']

2022-01-24 14:08:57,948 DEBUG ==== SSA block analysis pass on 0
2022-01-24 14:08:57,948 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ec3a2e80>
2022-01-24 14:08:57,948 DEBUG on stmt: q1 = arg(0, name=q1)
2022-01-24 14:08:57,948 DEBUG on stmt: q2 = arg(1, name=q2)
2022-01-24 14:08:57,949 DEBUG on stmt: out = arg(2, name=out)
2022-01-24 14:08:57,949 DEBUG on stmt: $const0.2 = const(int, 0)
2022-01-24 14:08:57,949 DEBUG on stmt: $0.3 = static_getitem(value=q1, index=0, index_var=$const0.2, fn=<built-in function getitem>)
2022-01-24 14:08:57,949 DEBUG on stmt: $const0.5 = const(int, 0)
2022-01-24 14:08:57,949 DEBUG on stmt: $0.6 = static_getitem(value=q2, index=0, index_var=$const0.5, fn=<built-in function getitem>)
2022-01-24 14:08:57,949 DEBUG on stmt: $0.7 = $0.3 - $0.6
2022-01-24 14:08:57,949 DEBUG on stmt: $const0.8 = const(int, 2)
2022-01-24 14:08:57,949 DEBUG on stmt: $0.9 = $0.7 ** $const0.8
2022-01-24 14:08:57,949 DEBUG on stmt: $const0.11 = const(int, 1)
2022-01-24 14:08:57,949 DEBUG on stmt: $0.12 = static_getitem(value=q1, index=1, index_var=$const0.11, fn=<built-in function getitem>)
2022-01-24 14:08:57,949 DEBUG on stmt: $const0.14 = const(int, 1)
2022-01-24 14:08:57,949 DEBUG on stmt: $0.15 = static_getitem(value=q2, index=1, index_var=$const0.14, fn=<built-in function getitem>)
2022-01-24 14:08:57,949 DEBUG on stmt: $0.16 = $0.12 - $0.15
2022-01-24 14:08:57,949 DEBUG on stmt: $const0.17 = const(int, 2)
2022-01-24 14:08:57,949 DEBUG on stmt: $0.18 = $0.16 ** $const0.17
2022-01-24 14:08:57,949 DEBUG on stmt: $0.19 = $0.9 + $0.18
2022-01-24 14:08:57,949 DEBUG on stmt: $const0.21 = const(int, 2)
2022-01-24 14:08:57,949 DEBUG on stmt: $0.22 = static_getitem(value=q1, index=2, index_var=$const0.21, fn=<built-in function getitem>)
2022-01-24 14:08:57,949 DEBUG on stmt: $const0.24 = const(int, 2)
2022-01-24 14:08:57,949 DEBUG on stmt: $0.25 = static_getitem(value=q2, index=2, index_var=$const0.24, fn=<built-in function getitem>)
2022-01-24 14:08:57,949 DEBUG on stmt: $0.26 = $0.22 - $0.25
2022-01-24 14:08:57,949 DEBUG on stmt: $const0.27 = const(int, 2)
2022-01-24 14:08:57,949 DEBUG on stmt: $0.28 = $0.26 ** $const0.27
2022-01-24 14:08:57,949 DEBUG on stmt: $0.29 = $0.19 + $0.28
2022-01-24 14:08:57,949 DEBUG on stmt: $const0.31 = const(int, 3)
2022-01-24 14:08:57,949 DEBUG on stmt: $0.32 = static_getitem(value=q1, index=3, index_var=$const0.31, fn=<built-in function getitem>)
2022-01-24 14:08:57,949 DEBUG on stmt: $const0.34 = const(int, 3)
2022-01-24 14:08:57,949 DEBUG on stmt: $0.35 = static_getitem(value=q2, index=3, index_var=$const0.34, fn=<built-in function getitem>)
2022-01-24 14:08:57,949 DEBUG on stmt: $0.36 = $0.32 - $0.35
2022-01-24 14:08:57,949 DEBUG on stmt: $const0.37 = const(int, 2)
2022-01-24 14:08:57,950 DEBUG on stmt: $0.38 = $0.36 ** $const0.37
2022-01-24 14:08:57,950 DEBUG on stmt: a = $0.29 + $0.38
2022-01-24 14:08:57,950 DEBUG on stmt: $const0.41 = const(int, 0)
2022-01-24 14:08:57,950 DEBUG on stmt: $0.42 = static_getitem(value=q1, index=0, index_var=$const0.41, fn=<built-in function getitem>)
2022-01-24 14:08:57,950 DEBUG on stmt: $const0.44 = const(int, 0)
2022-01-24 14:08:57,950 DEBUG on stmt: $0.45 = static_getitem(value=q2, index=0, index_var=$const0.44, fn=<built-in function getitem>)
2022-01-24 14:08:57,950 DEBUG on stmt: $0.46 = $0.42 + $0.45
2022-01-24 14:08:57,950 DEBUG on stmt: $const0.47 = const(int, 2)
2022-01-24 14:08:57,950 DEBUG on stmt: $0.48 = $0.46 ** $const0.47
2022-01-24 14:08:57,950 DEBUG on stmt: $const0.50 = const(int, 1)
2022-01-24 14:08:57,950 DEBUG on stmt: $0.51 = static_getitem(value=q1, index=1, index_var=$const0.50, fn=<built-in function getitem>)
2022-01-24 14:08:57,950 DEBUG on stmt: $const0.53 = const(int, 1)
2022-01-24 14:08:57,950 DEBUG on stmt: $0.54 = static_getitem(value=q2, index=1, index_var=$const0.53, fn=<built-in function getitem>)
2022-01-24 14:08:57,950 DEBUG on stmt: $0.55 = $0.51 + $0.54
2022-01-24 14:08:57,950 DEBUG on stmt: $const0.56 = const(int, 2)
2022-01-24 14:08:57,950 DEBUG on stmt: $0.57 = $0.55 ** $const0.56
2022-01-24 14:08:57,950 DEBUG on stmt: $0.58 = $0.48 + $0.57
2022-01-24 14:08:57,950 DEBUG on stmt: $const0.60 = const(int, 2)
2022-01-24 14:08:57,950 DEBUG on stmt: $0.61 = static_getitem(value=q1, index=2, index_var=$const0.60, fn=<built-in function getitem>)
2022-01-24 14:08:57,950 DEBUG on stmt: $const0.63 = const(int, 2)
2022-01-24 14:08:57,950 DEBUG on stmt: $0.64 = static_getitem(value=q2, index=2, index_var=$const0.63, fn=<built-in function getitem>)
2022-01-24 14:08:57,950 DEBUG on stmt: $0.65 = $0.61 + $0.64
2022-01-24 14:08:57,950 DEBUG on stmt: $const0.66 = const(int, 2)
2022-01-24 14:08:57,950 DEBUG on stmt: $0.67 = $0.65 ** $const0.66
2022-01-24 14:08:57,950 DEBUG on stmt: $0.68 = $0.58 + $0.67
2022-01-24 14:08:57,950 DEBUG on stmt: $const0.70 = const(int, 3)
2022-01-24 14:08:57,950 DEBUG on stmt: $0.71 = static_getitem(value=q1, index=3, index_var=$const0.70, fn=<built-in function getitem>)
2022-01-24 14:08:57,950 DEBUG on stmt: $const0.73 = const(int, 3)
2022-01-24 14:08:57,950 DEBUG on stmt: $0.74 = static_getitem(value=q2, index=3, index_var=$const0.73, fn=<built-in function getitem>)
2022-01-24 14:08:57,950 DEBUG on stmt: $0.75 = $0.71 + $0.74
2022-01-24 14:08:57,950 DEBUG on stmt: $const0.76 = const(int, 2)
2022-01-24 14:08:57,950 DEBUG on stmt: $0.77 = $0.75 ** $const0.76
2022-01-24 14:08:57,951 DEBUG on stmt: b = $0.68 + $0.77
2022-01-24 14:08:57,951 DEBUG on stmt: $0.81 = b > a
2022-01-24 14:08:57,951 DEBUG on stmt: bool168 = global(bool: <class 'bool'>)
2022-01-24 14:08:57,951 DEBUG on stmt: $168pred = call bool168($0.81, func=bool168, args=(Var($0.81, distance.py:153),), kws=(), vararg=None)
2022-01-24 14:08:57,951 DEBUG on stmt: branch $168pred, 170, 186
2022-01-24 14:08:57,951 DEBUG ==== SSA block analysis pass on 170
2022-01-24 14:08:57,951 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ec3a2e80>
2022-01-24 14:08:57,951 DEBUG on stmt: $170.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:08:57,951 DEBUG on stmt: $170.2 = getattr(value=$170.1, attr=sqrt)
2022-01-24 14:08:57,951 DEBUG on stmt: $170.4 = call $170.2(a, func=$170.2, args=[Var(a, distance.py:151)], kws=(), vararg=None)
2022-01-24 14:08:57,951 DEBUG on stmt: $const170.6 = const(int, 0)
2022-01-24 14:08:57,951 DEBUG on stmt: out[0] = $170.4
2022-01-24 14:08:57,951 DEBUG on stmt: jump 200
2022-01-24 14:08:57,951 DEBUG ==== SSA block analysis pass on 186
2022-01-24 14:08:57,951 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ec3a2e80>
2022-01-24 14:08:57,951 DEBUG on stmt: $186.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:08:57,951 DEBUG on stmt: $186.2 = getattr(value=$186.1, attr=sqrt)
2022-01-24 14:08:57,951 DEBUG on stmt: $186.4 = call $186.2(b, func=$186.2, args=[Var(b, distance.py:152)], kws=(), vararg=None)
2022-01-24 14:08:57,951 DEBUG on stmt: $const186.6 = const(int, 0)
2022-01-24 14:08:57,951 DEBUG on stmt: out[0] = $186.4
2022-01-24 14:08:57,951 DEBUG on stmt: jump 200
2022-01-24 14:08:57,951 DEBUG ==== SSA block analysis pass on 200
2022-01-24 14:08:57,951 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ec3a2e80>
2022-01-24 14:08:57,951 DEBUG on stmt: $const200.1 = const(NoneType, None)
2022-01-24 14:08:57,951 DEBUG on stmt: $200.2 = cast(value=$const200.1)
2022-01-24 14:08:57,951 DEBUG on stmt: return $200.2
2022-01-24 14:08:57,952 DEBUG defs defaultdict(<class 'list'>,
            {'$0.12': [<numba.core.ir.Assign object at 0x7f94eb7e1eb8>],
             '$0.15': [<numba.core.ir.Assign object at 0x7f94ec3be2e8>],
             '$0.16': [<numba.core.ir.Assign object at 0x7f94ec3ae198>],
             '$0.18': [<numba.core.ir.Assign object at 0x7f94ec3ae358>],
             '$0.19': [<numba.core.ir.Assign object at 0x7f94ec3ae438>],
             '$0.22': [<numba.core.ir.Assign object at 0x7f94ec3be518>],
             '$0.25': [<numba.core.ir.Assign object at 0x7f94ec3be5c0>],
             '$0.26': [<numba.core.ir.Assign object at 0x7f94ec3ae9e8>],
             '$0.28': [<numba.core.ir.Assign object at 0x7f94ec3aeba8>],
             '$0.29': [<numba.core.ir.Assign object at 0x7f94ec3aec88>],
             '$0.3': [<numba.core.ir.Assign object at 0x7f94eb7e1f60>],
             '$0.32': [<numba.core.ir.Assign object at 0x7f94ec3be630>],
             '$0.35': [<numba.core.ir.Assign object at 0x7f94ec3be6a0>],
             '$0.36': [<numba.core.ir.Assign object at 0x7f94ec3b3278>],
             '$0.38': [<numba.core.ir.Assign object at 0x7f94ec3b3438>],
             '$0.42': [<numba.core.ir.Assign object at 0x7f94ec3be710>],
             '$0.45': [<numba.core.ir.Assign object at 0x7f94ec3be780>],
             '$0.46': [<numba.core.ir.Assign object at 0x7f94ec3b3b70>],
             '$0.48': [<numba.core.ir.Assign object at 0x7f94ec3b3d30>],
             '$0.51': [<numba.core.ir.Assign object at 0x7f94ec3be7f0>],
             '$0.54': [<numba.core.ir.Assign object at 0x7f94ec3be860>],
             '$0.55': [<numba.core.ir.Assign object at 0x7f94ec3b5320>],
             '$0.57': [<numba.core.ir.Assign object at 0x7f94ec3b54e0>],
             '$0.58': [<numba.core.ir.Assign object at 0x7f94ec3b55c0>],
             '$0.6': [<numba.core.ir.Assign object at 0x7f94eb7e1ef0>],
             '$0.61': [<numba.core.ir.Assign object at 0x7f94ec3be8d0>],
             '$0.64': [<numba.core.ir.Assign object at 0x7f94ec3be940>],
             '$0.65': [<numba.core.ir.Assign object at 0x7f94ec3b5b70>],
             '$0.67': [<numba.core.ir.Assign object at 0x7f94ec3b5d30>],
             '$0.68': [<numba.core.ir.Assign object at 0x7f94ec3b5e10>],
             '$0.7': [<numba.core.ir.Assign object at 0x7f94ec3a99e8>],
             '$0.71': [<numba.core.ir.Assign object at 0x7f94ec3be9b0>],
             '$0.74': [<numba.core.ir.Assign object at 0x7f94ec3bea20>],
             '$0.75': [<numba.core.ir.Assign object at 0x7f94ec3b9400>],
             '$0.77': [<numba.core.ir.Assign object at 0x7f94ec3b95c0>],
             '$0.81': [<numba.core.ir.Assign object at 0x7f94ec3b9978>],
             '$0.9': [<numba.core.ir.Assign object at 0x7f94ec3a9ba8>],
             '$168pred': [<numba.core.ir.Assign object at 0x7f94ec3b9b38>],
             '$170.1': [<numba.core.ir.Assign object at 0x7f94ec3b3dd8>],
             '$170.2': [<numba.core.ir.Assign object at 0x7f94ec3b5eb8>],
             '$170.4': [<numba.core.ir.Assign object at 0x7f94ec3b9160>],
             '$186.1': [<numba.core.ir.Assign object at 0x7f94ec3b9e10>],
             '$186.2': [<numba.core.ir.Assign object at 0x7f94ec3b9ef0>],
             '$186.4': [<numba.core.ir.Assign object at 0x7f94ec3be0b8>],
             '$200.2': [<numba.core.ir.Assign object at 0x7f94ec3be4a8>],
             '$const0.11': [<numba.core.ir.Assign object at 0x7f94ec3a9d30>],
             '$const0.14': [<numba.core.ir.Assign object at 0x7f94ec3a9f98>],
             '$const0.17': [<numba.core.ir.Assign object at 0x7f94ec3ae278>],
             '$const0.2': [<numba.core.ir.Assign object at 0x7f94ec3a95c0>],
             '$const0.21': [<numba.core.ir.Assign object at 0x7f94ec3ae5c0>],
             '$const0.24': [<numba.core.ir.Assign object at 0x7f94ec3ae828>],
             '$const0.27': [<numba.core.ir.Assign object at 0x7f94ec3aeac8>],
             '$const0.31': [<numba.core.ir.Assign object at 0x7f94ec3aee10>],
             '$const0.34': [<numba.core.ir.Assign object at 0x7f94ec3b30b8>],
             '$const0.37': [<numba.core.ir.Assign object at 0x7f94ec3b3358>],
             '$const0.41': [<numba.core.ir.Assign object at 0x7f94ec3b3748>],
             '$const0.44': [<numba.core.ir.Assign object at 0x7f94ec3b39b0>],
             '$const0.47': [<numba.core.ir.Assign object at 0x7f94ec3b3c50>],
             '$const0.5': [<numba.core.ir.Assign object at 0x7f94ec3a9828>],
             '$const0.50': [<numba.core.ir.Assign object at 0x7f94ec3b3eb8>],
             '$const0.53': [<numba.core.ir.Assign object at 0x7f94ec3b5160>],
             '$const0.56': [<numba.core.ir.Assign object at 0x7f94ec3b5400>],
             '$const0.60': [<numba.core.ir.Assign object at 0x7f94ec3b5748>],
             '$const0.63': [<numba.core.ir.Assign object at 0x7f94ec3b59b0>],
             '$const0.66': [<numba.core.ir.Assign object at 0x7f94ec3b5c50>],
             '$const0.70': [<numba.core.ir.Assign object at 0x7f94ec3b5f98>],
             '$const0.73': [<numba.core.ir.Assign object at 0x7f94ec3b9240>],
             '$const0.76': [<numba.core.ir.Assign object at 0x7f94ec3b94e0>],
             '$const0.8': [<numba.core.ir.Assign object at 0x7f94ec3a9ac8>],
             '$const170.6': [<numba.core.ir.Assign object at 0x7f94ec3b9c50>],
             '$const186.6': [<numba.core.ir.Assign object at 0x7f94ec3be240>],
             '$const200.1': [<numba.core.ir.Assign object at 0x7f94ec3be3c8>],
             'a': [<numba.core.ir.Assign object at 0x7f94ec3b3518>],
             'b': [<numba.core.ir.Assign object at 0x7f94ec3b96a0>],
             'bool168': [<numba.core.ir.Assign object at 0x7f94ec3b9a90>],
             'out': [<numba.core.ir.Assign object at 0x7f94ec3a9438>],
             'q1': [<numba.core.ir.Assign object at 0x7f94ec3a92e8>],
             'q2': [<numba.core.ir.Assign object at 0x7f94ec3a9390>]})
2022-01-24 14:08:57,952 DEBUG SSA violators set()
2022-01-24 14:08:58,135 DEBUG label 0:
    q1 = arg(0, name=q1)                     ['q1']
    q2 = arg(1, name=q2)                     ['q2']
    qout = arg(2, name=qout)                 ['qout']
    $const0.2 = const(int, 0)                ['$const0.2']
    $0.3 = getitem(value=q1, index=$const0.2, fn=<built-in function getitem>) ['$0.3', '$const0.2', 'q1']
    $const0.5 = const(int, 0)                ['$const0.5']
    $0.6 = getitem(value=q2, index=$const0.5, fn=<built-in function getitem>) ['$0.6', '$const0.5', 'q2']
    $0.7 = $0.3 + $0.6                       ['$0.3', '$0.6', '$0.7']
    $const0.9 = const(int, 0)                ['$const0.9']
    qout[$const0.9] = $0.7                   ['$0.7', '$const0.9', 'qout']
    $const0.11 = const(int, 1)               ['$const0.11']
    $0.12 = getitem(value=q1, index=$const0.11, fn=<built-in function getitem>) ['$0.12', '$const0.11', 'q1']
    $const0.14 = const(int, 1)               ['$const0.14']
    $0.15 = getitem(value=q2, index=$const0.14, fn=<built-in function getitem>) ['$0.15', '$const0.14', 'q2']
    $0.16 = $0.12 + $0.15                    ['$0.12', '$0.15', '$0.16']
    $const0.18 = const(int, 1)               ['$const0.18']
    qout[$const0.18] = $0.16                 ['$0.16', '$const0.18', 'qout']
    $const0.20 = const(int, 2)               ['$const0.20']
    $0.21 = getitem(value=q1, index=$const0.20, fn=<built-in function getitem>) ['$0.21', '$const0.20', 'q1']
    $const0.23 = const(int, 2)               ['$const0.23']
    $0.24 = getitem(value=q2, index=$const0.23, fn=<built-in function getitem>) ['$0.24', '$const0.23', 'q2']
    $0.25 = $0.21 + $0.24                    ['$0.21', '$0.24', '$0.25']
    $const0.27 = const(int, 2)               ['$const0.27']
    qout[$const0.27] = $0.25                 ['$0.25', '$const0.27', 'qout']
    $const0.29 = const(int, 3)               ['$const0.29']
    $0.30 = getitem(value=q1, index=$const0.29, fn=<built-in function getitem>) ['$0.30', '$const0.29', 'q1']
    $const0.32 = const(int, 3)               ['$const0.32']
    $0.33 = getitem(value=q2, index=$const0.32, fn=<built-in function getitem>) ['$0.33', '$const0.32', 'q2']
    $0.34 = $0.30 + $0.33                    ['$0.30', '$0.33', '$0.34']
    $const0.36 = const(int, 3)               ['$const0.36']
    qout[$const0.36] = $0.34                 ['$0.34', '$const0.36', 'qout']
    $const0.37 = const(NoneType, None)       ['$const0.37']
    $0.38 = cast(value=$const0.37)           ['$0.38', '$const0.37']
    return $0.38                             ['$0.38']

2022-01-24 14:08:58,139 DEBUG ==== SSA block analysis pass on 0
2022-01-24 14:08:58,139 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ec5b77f0>
2022-01-24 14:08:58,139 DEBUG on stmt: q1 = arg(0, name=q1)
2022-01-24 14:08:58,139 DEBUG on stmt: q2 = arg(1, name=q2)
2022-01-24 14:08:58,139 DEBUG on stmt: qout = arg(2, name=qout)
2022-01-24 14:08:58,139 DEBUG on stmt: $const0.2 = const(int, 0)
2022-01-24 14:08:58,139 DEBUG on stmt: $0.3 = static_getitem(value=q1, index=0, index_var=$const0.2, fn=<built-in function getitem>)
2022-01-24 14:08:58,139 DEBUG on stmt: $const0.5 = const(int, 0)
2022-01-24 14:08:58,139 DEBUG on stmt: $0.6 = static_getitem(value=q2, index=0, index_var=$const0.5, fn=<built-in function getitem>)
2022-01-24 14:08:58,139 DEBUG on stmt: $0.7 = $0.3 + $0.6
2022-01-24 14:08:58,139 DEBUG on stmt: $const0.9 = const(int, 0)
2022-01-24 14:08:58,139 DEBUG on stmt: qout[0] = $0.7
2022-01-24 14:08:58,139 DEBUG on stmt: $const0.11 = const(int, 1)
2022-01-24 14:08:58,139 DEBUG on stmt: $0.12 = static_getitem(value=q1, index=1, index_var=$const0.11, fn=<built-in function getitem>)
2022-01-24 14:08:58,139 DEBUG on stmt: $const0.14 = const(int, 1)
2022-01-24 14:08:58,139 DEBUG on stmt: $0.15 = static_getitem(value=q2, index=1, index_var=$const0.14, fn=<built-in function getitem>)
2022-01-24 14:08:58,139 DEBUG on stmt: $0.16 = $0.12 + $0.15
2022-01-24 14:08:58,139 DEBUG on stmt: $const0.18 = const(int, 1)
2022-01-24 14:08:58,139 DEBUG on stmt: qout[1] = $0.16
2022-01-24 14:08:58,139 DEBUG on stmt: $const0.20 = const(int, 2)
2022-01-24 14:08:58,139 DEBUG on stmt: $0.21 = static_getitem(value=q1, index=2, index_var=$const0.20, fn=<built-in function getitem>)
2022-01-24 14:08:58,139 DEBUG on stmt: $const0.23 = const(int, 2)
2022-01-24 14:08:58,139 DEBUG on stmt: $0.24 = static_getitem(value=q2, index=2, index_var=$const0.23, fn=<built-in function getitem>)
2022-01-24 14:08:58,140 DEBUG on stmt: $0.25 = $0.21 + $0.24
2022-01-24 14:08:58,140 DEBUG on stmt: $const0.27 = const(int, 2)
2022-01-24 14:08:58,140 DEBUG on stmt: qout[2] = $0.25
2022-01-24 14:08:58,140 DEBUG on stmt: $const0.29 = const(int, 3)
2022-01-24 14:08:58,140 DEBUG on stmt: $0.30 = static_getitem(value=q1, index=3, index_var=$const0.29, fn=<built-in function getitem>)
2022-01-24 14:08:58,140 DEBUG on stmt: $const0.32 = const(int, 3)
2022-01-24 14:08:58,140 DEBUG on stmt: $0.33 = static_getitem(value=q2, index=3, index_var=$const0.32, fn=<built-in function getitem>)
2022-01-24 14:08:58,140 DEBUG on stmt: $0.34 = $0.30 + $0.33
2022-01-24 14:08:58,140 DEBUG on stmt: $const0.36 = const(int, 3)
2022-01-24 14:08:58,140 DEBUG on stmt: qout[3] = $0.34
2022-01-24 14:08:58,140 DEBUG on stmt: $const0.37 = const(NoneType, None)
2022-01-24 14:08:58,140 DEBUG on stmt: $0.38 = cast(value=$const0.37)
2022-01-24 14:08:58,140 DEBUG on stmt: return $0.38
2022-01-24 14:08:58,140 DEBUG defs defaultdict(<class 'list'>,
            {'$0.12': [<numba.core.ir.Assign object at 0x7f94ec5c57b8>],
             '$0.15': [<numba.core.ir.Assign object at 0x7f94ec5c5828>],
             '$0.16': [<numba.core.ir.Assign object at 0x7f94ec5c0048>],
             '$0.21': [<numba.core.ir.Assign object at 0x7f94ec5c5898>],
             '$0.24': [<numba.core.ir.Assign object at 0x7f94ec5c5908>],
             '$0.25': [<numba.core.ir.Assign object at 0x7f94ec5c07f0>],
             '$0.3': [<numba.core.ir.Assign object at 0x7f94ec5c56d8>],
             '$0.30': [<numba.core.ir.Assign object at 0x7f94ec5c5978>],
             '$0.33': [<numba.core.ir.Assign object at 0x7f94ec5c59e8>],
             '$0.34': [<numba.core.ir.Assign object at 0x7f94ec5c0f98>],
             '$0.38': [<numba.core.ir.Assign object at 0x7f94ec5c5390>],
             '$0.6': [<numba.core.ir.Assign object at 0x7f94ec5c5748>],
             '$0.7': [<numba.core.ir.Assign object at 0x7f94ec5be860>],
             '$const0.11': [<numba.core.ir.Assign object at 0x7f94ec5bebe0>],
             '$const0.14': [<numba.core.ir.Assign object at 0x7f94ec5bee48>],
             '$const0.18': [<numba.core.ir.Assign object at 0x7f94ec5c01d0>],
             '$const0.2': [<numba.core.ir.Assign object at 0x7f94ec5be438>],
             '$const0.20': [<numba.core.ir.Assign object at 0x7f94ec5c03c8>],
             '$const0.23': [<numba.core.ir.Assign object at 0x7f94ec5c0630>],
             '$const0.27': [<numba.core.ir.Assign object at 0x7f94ec5c0978>],
             '$const0.29': [<numba.core.ir.Assign object at 0x7f94ec5c0b70>],
             '$const0.32': [<numba.core.ir.Assign object at 0x7f94ec5c0dd8>],
             '$const0.36': [<numba.core.ir.Assign object at 0x7f94ec5c5160>],
             '$const0.37': [<numba.core.ir.Assign object at 0x7f94ec5c52b0>],
             '$const0.5': [<numba.core.ir.Assign object at 0x7f94ec5be6a0>],
             '$const0.9': [<numba.core.ir.Assign object at 0x7f94ec5be9e8>],
             'q1': [<numba.core.ir.Assign object at 0x7f94ec5be160>],
             'q2': [<numba.core.ir.Assign object at 0x7f94ec5be208>],
             'qout': [<numba.core.ir.Assign object at 0x7f94ec5be2b0>]})
2022-01-24 14:08:58,141 DEBUG SSA violators set()
2022-01-24 14:08:58,236 DEBUG label 0:
    q1 = arg(0, name=q1)                     ['q1']
    q2 = arg(1, name=q2)                     ['q2']
    qout = arg(2, name=qout)                 ['qout']
    $const0.2 = const(int, 0)                ['$const0.2']
    $0.3 = getitem(value=q1, index=$const0.2, fn=<built-in function getitem>) ['$0.3', '$const0.2', 'q1']
    $const0.5 = const(int, 0)                ['$const0.5']
    $0.6 = getitem(value=q2, index=$const0.5, fn=<built-in function getitem>) ['$0.6', '$const0.5', 'q2']
    $0.7 = $0.3 - $0.6                       ['$0.3', '$0.6', '$0.7']
    $const0.9 = const(int, 0)                ['$const0.9']
    qout[$const0.9] = $0.7                   ['$0.7', '$const0.9', 'qout']
    $const0.11 = const(int, 1)               ['$const0.11']
    $0.12 = getitem(value=q1, index=$const0.11, fn=<built-in function getitem>) ['$0.12', '$const0.11', 'q1']
    $const0.14 = const(int, 1)               ['$const0.14']
    $0.15 = getitem(value=q2, index=$const0.14, fn=<built-in function getitem>) ['$0.15', '$const0.14', 'q2']
    $0.16 = $0.12 - $0.15                    ['$0.12', '$0.15', '$0.16']
    $const0.18 = const(int, 1)               ['$const0.18']
    qout[$const0.18] = $0.16                 ['$0.16', '$const0.18', 'qout']
    $const0.20 = const(int, 2)               ['$const0.20']
    $0.21 = getitem(value=q1, index=$const0.20, fn=<built-in function getitem>) ['$0.21', '$const0.20', 'q1']
    $const0.23 = const(int, 2)               ['$const0.23']
    $0.24 = getitem(value=q2, index=$const0.23, fn=<built-in function getitem>) ['$0.24', '$const0.23', 'q2']
    $0.25 = $0.21 - $0.24                    ['$0.21', '$0.24', '$0.25']
    $const0.27 = const(int, 2)               ['$const0.27']
    qout[$const0.27] = $0.25                 ['$0.25', '$const0.27', 'qout']
    $const0.29 = const(int, 3)               ['$const0.29']
    $0.30 = getitem(value=q1, index=$const0.29, fn=<built-in function getitem>) ['$0.30', '$const0.29', 'q1']
    $const0.32 = const(int, 3)               ['$const0.32']
    $0.33 = getitem(value=q2, index=$const0.32, fn=<built-in function getitem>) ['$0.33', '$const0.32', 'q2']
    $0.34 = $0.30 - $0.33                    ['$0.30', '$0.33', '$0.34']
    $const0.36 = const(int, 3)               ['$const0.36']
    qout[$const0.36] = $0.34                 ['$0.34', '$const0.36', 'qout']
    $const0.37 = const(NoneType, None)       ['$const0.37']
    $0.38 = cast(value=$const0.37)           ['$0.38', '$const0.37']
    return $0.38                             ['$0.38']

2022-01-24 14:08:58,240 DEBUG ==== SSA block analysis pass on 0
2022-01-24 14:08:58,240 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ec698eb8>
2022-01-24 14:08:58,240 DEBUG on stmt: q1 = arg(0, name=q1)
2022-01-24 14:08:58,240 DEBUG on stmt: q2 = arg(1, name=q2)
2022-01-24 14:08:58,240 DEBUG on stmt: qout = arg(2, name=qout)
2022-01-24 14:08:58,240 DEBUG on stmt: $const0.2 = const(int, 0)
2022-01-24 14:08:58,240 DEBUG on stmt: $0.3 = static_getitem(value=q1, index=0, index_var=$const0.2, fn=<built-in function getitem>)
2022-01-24 14:08:58,240 DEBUG on stmt: $const0.5 = const(int, 0)
2022-01-24 14:08:58,240 DEBUG on stmt: $0.6 = static_getitem(value=q2, index=0, index_var=$const0.5, fn=<built-in function getitem>)
2022-01-24 14:08:58,240 DEBUG on stmt: $0.7 = $0.3 - $0.6
2022-01-24 14:08:58,240 DEBUG on stmt: $const0.9 = const(int, 0)
2022-01-24 14:08:58,240 DEBUG on stmt: qout[0] = $0.7
2022-01-24 14:08:58,240 DEBUG on stmt: $const0.11 = const(int, 1)
2022-01-24 14:08:58,241 DEBUG on stmt: $0.12 = static_getitem(value=q1, index=1, index_var=$const0.11, fn=<built-in function getitem>)
2022-01-24 14:08:58,241 DEBUG on stmt: $const0.14 = const(int, 1)
2022-01-24 14:08:58,241 DEBUG on stmt: $0.15 = static_getitem(value=q2, index=1, index_var=$const0.14, fn=<built-in function getitem>)
2022-01-24 14:08:58,241 DEBUG on stmt: $0.16 = $0.12 - $0.15
2022-01-24 14:08:58,241 DEBUG on stmt: $const0.18 = const(int, 1)
2022-01-24 14:08:58,241 DEBUG on stmt: qout[1] = $0.16
2022-01-24 14:08:58,241 DEBUG on stmt: $const0.20 = const(int, 2)
2022-01-24 14:08:58,241 DEBUG on stmt: $0.21 = static_getitem(value=q1, index=2, index_var=$const0.20, fn=<built-in function getitem>)
2022-01-24 14:08:58,241 DEBUG on stmt: $const0.23 = const(int, 2)
2022-01-24 14:08:58,241 DEBUG on stmt: $0.24 = static_getitem(value=q2, index=2, index_var=$const0.23, fn=<built-in function getitem>)
2022-01-24 14:08:58,241 DEBUG on stmt: $0.25 = $0.21 - $0.24
2022-01-24 14:08:58,241 DEBUG on stmt: $const0.27 = const(int, 2)
2022-01-24 14:08:58,241 DEBUG on stmt: qout[2] = $0.25
2022-01-24 14:08:58,241 DEBUG on stmt: $const0.29 = const(int, 3)
2022-01-24 14:08:58,241 DEBUG on stmt: $0.30 = static_getitem(value=q1, index=3, index_var=$const0.29, fn=<built-in function getitem>)
2022-01-24 14:08:58,241 DEBUG on stmt: $const0.32 = const(int, 3)
2022-01-24 14:08:58,241 DEBUG on stmt: $0.33 = static_getitem(value=q2, index=3, index_var=$const0.32, fn=<built-in function getitem>)
2022-01-24 14:08:58,241 DEBUG on stmt: $0.34 = $0.30 - $0.33
2022-01-24 14:08:58,241 DEBUG on stmt: $const0.36 = const(int, 3)
2022-01-24 14:08:58,241 DEBUG on stmt: qout[3] = $0.34
2022-01-24 14:08:58,242 DEBUG on stmt: $const0.37 = const(NoneType, None)
2022-01-24 14:08:58,242 DEBUG on stmt: $0.38 = cast(value=$const0.37)
2022-01-24 14:08:58,242 DEBUG on stmt: return $0.38
2022-01-24 14:08:58,242 DEBUG defs defaultdict(<class 'list'>,
            {'$0.12': [<numba.core.ir.Assign object at 0x7f94ec6a0588>],
             '$0.15': [<numba.core.ir.Assign object at 0x7f94ec6a05f8>],
             '$0.16': [<numba.core.ir.Assign object at 0x7f94ec698e10>],
             '$0.21': [<numba.core.ir.Assign object at 0x7f94ec6a0668>],
             '$0.24': [<numba.core.ir.Assign object at 0x7f94ec6a06d8>],
             '$0.25': [<numba.core.ir.Assign object at 0x7f94ec69d5f8>],
             '$0.3': [<numba.core.ir.Assign object at 0x7f94ec6a04a8>],
             '$0.30': [<numba.core.ir.Assign object at 0x7f94ec6a0748>],
             '$0.33': [<numba.core.ir.Assign object at 0x7f94ec6a07b8>],
             '$0.34': [<numba.core.ir.Assign object at 0x7f94ec69dda0>],
             '$0.38': [<numba.core.ir.Assign object at 0x7f94ec6a0198>],
             '$0.6': [<numba.core.ir.Assign object at 0x7f94ec6a0518>],
             '$0.7': [<numba.core.ir.Assign object at 0x7f94ec698668>],
             '$const0.11': [<numba.core.ir.Assign object at 0x7f94ec6989e8>],
             '$const0.14': [<numba.core.ir.Assign object at 0x7f94ec698c50>],
             '$const0.18': [<numba.core.ir.Assign object at 0x7f94ec698f98>],
             '$const0.2': [<numba.core.ir.Assign object at 0x7f94ec698240>],
             '$const0.20': [<numba.core.ir.Assign object at 0x7f94ec69d1d0>],
             '$const0.23': [<numba.core.ir.Assign object at 0x7f94ec69d438>],
             '$const0.27': [<numba.core.ir.Assign object at 0x7f94ec69d780>],
             '$const0.29': [<numba.core.ir.Assign object at 0x7f94ec69d978>],
             '$const0.32': [<numba.core.ir.Assign object at 0x7f94ec69dbe0>],
             '$const0.36': [<numba.core.ir.Assign object at 0x7f94ec69df28>],
             '$const0.37': [<numba.core.ir.Assign object at 0x7f94ec6a00b8>],
             '$const0.5': [<numba.core.ir.Assign object at 0x7f94ec6984a8>],
             '$const0.9': [<numba.core.ir.Assign object at 0x7f94ec6987f0>],
             'q1': [<numba.core.ir.Assign object at 0x7f94ec691f28>],
             'q2': [<numba.core.ir.Assign object at 0x7f94ec691fd0>],
             'qout': [<numba.core.ir.Assign object at 0x7f94ec6980b8>]})
2022-01-24 14:08:58,242 DEBUG SSA violators set()
2022-01-24 14:08:58,345 DEBUG label 0:
    q1 = arg(0, name=q1)                     ['q1']
    q2 = arg(1, name=q2)                     ['q2']
    qout = arg(2, name=qout)                 ['qout']
    $const0.2 = const(int, 0)                ['$const0.2']
    $0.3 = getitem(value=q1, index=$const0.2, fn=<built-in function getitem>) ['$0.3', '$const0.2', 'q1']
    $const0.5 = const(int, 0)                ['$const0.5']
    $0.6 = getitem(value=q2, index=$const0.5, fn=<built-in function getitem>) ['$0.6', '$const0.5', 'q2']
    $0.7 = $0.3 * $0.6                       ['$0.3', '$0.6', '$0.7']
    $const0.9 = const(int, 1)                ['$const0.9']
    $0.10 = getitem(value=q1, index=$const0.9, fn=<built-in function getitem>) ['$0.10', '$const0.9', 'q1']
    $const0.12 = const(int, 1)               ['$const0.12']
    $0.13 = getitem(value=q2, index=$const0.12, fn=<built-in function getitem>) ['$0.13', '$const0.12', 'q2']
    $0.14 = $0.10 * $0.13                    ['$0.10', '$0.13', '$0.14']
    $0.15 = $0.7 - $0.14                     ['$0.14', '$0.15', '$0.7']
    $const0.17 = const(int, 2)               ['$const0.17']
    $0.18 = getitem(value=q1, index=$const0.17, fn=<built-in function getitem>) ['$0.18', '$const0.17', 'q1']
    $const0.20 = const(int, 2)               ['$const0.20']
    $0.21 = getitem(value=q2, index=$const0.20, fn=<built-in function getitem>) ['$0.21', '$const0.20', 'q2']
    $0.22 = $0.18 * $0.21                    ['$0.18', '$0.21', '$0.22']
    $0.23 = $0.15 - $0.22                    ['$0.15', '$0.22', '$0.23']
    $const0.25 = const(int, 3)               ['$const0.25']
    $0.26 = getitem(value=q1, index=$const0.25, fn=<built-in function getitem>) ['$0.26', '$const0.25', 'q1']
    $const0.28 = const(int, 3)               ['$const0.28']
    $0.29 = getitem(value=q2, index=$const0.28, fn=<built-in function getitem>) ['$0.29', '$const0.28', 'q2']
    $0.30 = $0.26 * $0.29                    ['$0.26', '$0.29', '$0.30']
    $0.31 = $0.23 - $0.30                    ['$0.23', '$0.30', '$0.31']
    $const0.33 = const(int, 0)               ['$const0.33']
    qout[$const0.33] = $0.31                 ['$0.31', '$const0.33', 'qout']
    $const0.35 = const(int, 0)               ['$const0.35']
    $0.36 = getitem(value=q1, index=$const0.35, fn=<built-in function getitem>) ['$0.36', '$const0.35', 'q1']
    $const0.38 = const(int, 1)               ['$const0.38']
    $0.39 = getitem(value=q2, index=$const0.38, fn=<built-in function getitem>) ['$0.39', '$const0.38', 'q2']
    $0.40 = $0.36 * $0.39                    ['$0.36', '$0.39', '$0.40']
    $const0.42 = const(int, 1)               ['$const0.42']
    $0.43 = getitem(value=q1, index=$const0.42, fn=<built-in function getitem>) ['$0.43', '$const0.42', 'q1']
    $const0.45 = const(int, 0)               ['$const0.45']
    $0.46 = getitem(value=q2, index=$const0.45, fn=<built-in function getitem>) ['$0.46', '$const0.45', 'q2']
    $0.47 = $0.43 * $0.46                    ['$0.43', '$0.46', '$0.47']
    $0.48 = $0.40 + $0.47                    ['$0.40', '$0.47', '$0.48']
    $const0.50 = const(int, 2)               ['$const0.50']
    $0.51 = getitem(value=q1, index=$const0.50, fn=<built-in function getitem>) ['$0.51', '$const0.50', 'q1']
    $const0.53 = const(int, 3)               ['$const0.53']
    $0.54 = getitem(value=q2, index=$const0.53, fn=<built-in function getitem>) ['$0.54', '$const0.53', 'q2']
    $0.55 = $0.51 * $0.54                    ['$0.51', '$0.54', '$0.55']
    $0.56 = $0.48 + $0.55                    ['$0.48', '$0.55', '$0.56']
    $const0.58 = const(int, 3)               ['$const0.58']
    $0.59 = getitem(value=q1, index=$const0.58, fn=<built-in function getitem>) ['$0.59', '$const0.58', 'q1']
    $const0.61 = const(int, 2)               ['$const0.61']
    $0.62 = getitem(value=q2, index=$const0.61, fn=<built-in function getitem>) ['$0.62', '$const0.61', 'q2']
    $0.63 = $0.59 * $0.62                    ['$0.59', '$0.62', '$0.63']
    $0.64 = $0.56 - $0.63                    ['$0.56', '$0.63', '$0.64']
    $const0.66 = const(int, 1)               ['$const0.66']
    qout[$const0.66] = $0.64                 ['$0.64', '$const0.66', 'qout']
    $const0.68 = const(int, 0)               ['$const0.68']
    $0.69 = getitem(value=q1, index=$const0.68, fn=<built-in function getitem>) ['$0.69', '$const0.68', 'q1']
    $const0.71 = const(int, 2)               ['$const0.71']
    $0.72 = getitem(value=q2, index=$const0.71, fn=<built-in function getitem>) ['$0.72', '$const0.71', 'q2']
    $0.73 = $0.69 * $0.72                    ['$0.69', '$0.72', '$0.73']
    $const0.75 = const(int, 1)               ['$const0.75']
    $0.76 = getitem(value=q1, index=$const0.75, fn=<built-in function getitem>) ['$0.76', '$const0.75', 'q1']
    $const0.78 = const(int, 3)               ['$const0.78']
    $0.79 = getitem(value=q2, index=$const0.78, fn=<built-in function getitem>) ['$0.79', '$const0.78', 'q2']
    $0.80 = $0.76 * $0.79                    ['$0.76', '$0.79', '$0.80']
    $0.81 = $0.73 - $0.80                    ['$0.73', '$0.80', '$0.81']
    $const0.83 = const(int, 2)               ['$const0.83']
    $0.84 = getitem(value=q1, index=$const0.83, fn=<built-in function getitem>) ['$0.84', '$const0.83', 'q1']
    $const0.86 = const(int, 0)               ['$const0.86']
    $0.87 = getitem(value=q2, index=$const0.86, fn=<built-in function getitem>) ['$0.87', '$const0.86', 'q2']
    $0.88 = $0.84 * $0.87                    ['$0.84', '$0.87', '$0.88']
    $0.89 = $0.81 + $0.88                    ['$0.81', '$0.88', '$0.89']
    $const0.91 = const(int, 3)               ['$const0.91']
    $0.92 = getitem(value=q1, index=$const0.91, fn=<built-in function getitem>) ['$0.92', '$const0.91', 'q1']
    $const0.94 = const(int, 1)               ['$const0.94']
    $0.95 = getitem(value=q2, index=$const0.94, fn=<built-in function getitem>) ['$0.95', '$const0.94', 'q2']
    $0.96 = $0.92 * $0.95                    ['$0.92', '$0.95', '$0.96']
    $0.97 = $0.89 + $0.96                    ['$0.89', '$0.96', '$0.97']
    $const0.99 = const(int, 2)               ['$const0.99']
    qout[$const0.99] = $0.97                 ['$0.97', '$const0.99', 'qout']
    $const0.101 = const(int, 0)              ['$const0.101']
    $0.102 = getitem(value=q1, index=$const0.101, fn=<built-in function getitem>) ['$0.102', '$const0.101', 'q1']
    $const0.104 = const(int, 3)              ['$const0.104']
    $0.105 = getitem(value=q2, index=$const0.104, fn=<built-in function getitem>) ['$0.105', '$const0.104', 'q2']
    $0.106 = $0.102 * $0.105                 ['$0.102', '$0.105', '$0.106']
    $const0.108 = const(int, 1)              ['$const0.108']
    $0.109 = getitem(value=q1, index=$const0.108, fn=<built-in function getitem>) ['$0.109', '$const0.108', 'q1']
    $const0.111 = const(int, 2)              ['$const0.111']
    $0.112 = getitem(value=q2, index=$const0.111, fn=<built-in function getitem>) ['$0.112', '$const0.111', 'q2']
    $0.113 = $0.109 * $0.112                 ['$0.109', '$0.112', '$0.113']
    $0.114 = $0.106 + $0.113                 ['$0.106', '$0.113', '$0.114']
    $const0.116 = const(int, 2)              ['$const0.116']
    $0.117 = getitem(value=q1, index=$const0.116, fn=<built-in function getitem>) ['$0.117', '$const0.116', 'q1']
    $const0.119 = const(int, 1)              ['$const0.119']
    $0.120 = getitem(value=q2, index=$const0.119, fn=<built-in function getitem>) ['$0.120', '$const0.119', 'q2']
    $0.121 = $0.117 * $0.120                 ['$0.117', '$0.120', '$0.121']
    $0.122 = $0.114 - $0.121                 ['$0.114', '$0.121', '$0.122']
    $const0.124 = const(int, 3)              ['$const0.124']
    $0.125 = getitem(value=q1, index=$const0.124, fn=<built-in function getitem>) ['$0.125', '$const0.124', 'q1']
    $const0.127 = const(int, 0)              ['$const0.127']
    $0.128 = getitem(value=q2, index=$const0.127, fn=<built-in function getitem>) ['$0.128', '$const0.127', 'q2']
    $0.129 = $0.125 * $0.128                 ['$0.125', '$0.128', '$0.129']
    $0.130 = $0.122 + $0.129                 ['$0.122', '$0.129', '$0.130']
    $const0.132 = const(int, 3)              ['$const0.132']
    qout[$const0.132] = $0.130               ['$0.130', '$const0.132', 'qout']
    $const0.133 = const(NoneType, None)      ['$const0.133']
    $0.134 = cast(value=$const0.133)         ['$0.134', '$const0.133']
    return $0.134                            ['$0.134']

2022-01-24 14:08:58,354 DEBUG ==== SSA block analysis pass on 0
2022-01-24 14:08:58,354 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ec879518>
2022-01-24 14:08:58,354 DEBUG on stmt: q1 = arg(0, name=q1)
2022-01-24 14:08:58,354 DEBUG on stmt: q2 = arg(1, name=q2)
2022-01-24 14:08:58,354 DEBUG on stmt: qout = arg(2, name=qout)
2022-01-24 14:08:58,354 DEBUG on stmt: $const0.2 = const(int, 0)
2022-01-24 14:08:58,354 DEBUG on stmt: $0.3 = static_getitem(value=q1, index=0, index_var=$const0.2, fn=<built-in function getitem>)
2022-01-24 14:08:58,354 DEBUG on stmt: $const0.5 = const(int, 0)
2022-01-24 14:08:58,354 DEBUG on stmt: $0.6 = static_getitem(value=q2, index=0, index_var=$const0.5, fn=<built-in function getitem>)
2022-01-24 14:08:58,354 DEBUG on stmt: $0.7 = $0.3 * $0.6
2022-01-24 14:08:58,354 DEBUG on stmt: $const0.9 = const(int, 1)
2022-01-24 14:08:58,354 DEBUG on stmt: $0.10 = static_getitem(value=q1, index=1, index_var=$const0.9, fn=<built-in function getitem>)
2022-01-24 14:08:58,354 DEBUG on stmt: $const0.12 = const(int, 1)
2022-01-24 14:08:58,354 DEBUG on stmt: $0.13 = static_getitem(value=q2, index=1, index_var=$const0.12, fn=<built-in function getitem>)
2022-01-24 14:08:58,354 DEBUG on stmt: $0.14 = $0.10 * $0.13
2022-01-24 14:08:58,354 DEBUG on stmt: $0.15 = $0.7 - $0.14
2022-01-24 14:08:58,354 DEBUG on stmt: $const0.17 = const(int, 2)
2022-01-24 14:08:58,354 DEBUG on stmt: $0.18 = static_getitem(value=q1, index=2, index_var=$const0.17, fn=<built-in function getitem>)
2022-01-24 14:08:58,354 DEBUG on stmt: $const0.20 = const(int, 2)
2022-01-24 14:08:58,355 DEBUG on stmt: $0.21 = static_getitem(value=q2, index=2, index_var=$const0.20, fn=<built-in function getitem>)
2022-01-24 14:08:58,355 DEBUG on stmt: $0.22 = $0.18 * $0.21
2022-01-24 14:08:58,355 DEBUG on stmt: $0.23 = $0.15 - $0.22
2022-01-24 14:08:58,355 DEBUG on stmt: $const0.25 = const(int, 3)
2022-01-24 14:08:58,355 DEBUG on stmt: $0.26 = static_getitem(value=q1, index=3, index_var=$const0.25, fn=<built-in function getitem>)
2022-01-24 14:08:58,355 DEBUG on stmt: $const0.28 = const(int, 3)
2022-01-24 14:08:58,355 DEBUG on stmt: $0.29 = static_getitem(value=q2, index=3, index_var=$const0.28, fn=<built-in function getitem>)
2022-01-24 14:08:58,355 DEBUG on stmt: $0.30 = $0.26 * $0.29
2022-01-24 14:08:58,355 DEBUG on stmt: $0.31 = $0.23 - $0.30
2022-01-24 14:08:58,355 DEBUG on stmt: $const0.33 = const(int, 0)
2022-01-24 14:08:58,355 DEBUG on stmt: qout[0] = $0.31
2022-01-24 14:08:58,355 DEBUG on stmt: $const0.35 = const(int, 0)
2022-01-24 14:08:58,355 DEBUG on stmt: $0.36 = static_getitem(value=q1, index=0, index_var=$const0.35, fn=<built-in function getitem>)
2022-01-24 14:08:58,355 DEBUG on stmt: $const0.38 = const(int, 1)
2022-01-24 14:08:58,355 DEBUG on stmt: $0.39 = static_getitem(value=q2, index=1, index_var=$const0.38, fn=<built-in function getitem>)
2022-01-24 14:08:58,355 DEBUG on stmt: $0.40 = $0.36 * $0.39
2022-01-24 14:08:58,355 DEBUG on stmt: $const0.42 = const(int, 1)
2022-01-24 14:08:58,355 DEBUG on stmt: $0.43 = static_getitem(value=q1, index=1, index_var=$const0.42, fn=<built-in function getitem>)
2022-01-24 14:08:58,355 DEBUG on stmt: $const0.45 = const(int, 0)
2022-01-24 14:08:58,355 DEBUG on stmt: $0.46 = static_getitem(value=q2, index=0, index_var=$const0.45, fn=<built-in function getitem>)
2022-01-24 14:08:58,355 DEBUG on stmt: $0.47 = $0.43 * $0.46
2022-01-24 14:08:58,355 DEBUG on stmt: $0.48 = $0.40 + $0.47
2022-01-24 14:08:58,355 DEBUG on stmt: $const0.50 = const(int, 2)
2022-01-24 14:08:58,355 DEBUG on stmt: $0.51 = static_getitem(value=q1, index=2, index_var=$const0.50, fn=<built-in function getitem>)
2022-01-24 14:08:58,355 DEBUG on stmt: $const0.53 = const(int, 3)
2022-01-24 14:08:58,355 DEBUG on stmt: $0.54 = static_getitem(value=q2, index=3, index_var=$const0.53, fn=<built-in function getitem>)
2022-01-24 14:08:58,356 DEBUG on stmt: $0.55 = $0.51 * $0.54
2022-01-24 14:08:58,356 DEBUG on stmt: $0.56 = $0.48 + $0.55
2022-01-24 14:08:58,356 DEBUG on stmt: $const0.58 = const(int, 3)
2022-01-24 14:08:58,356 DEBUG on stmt: $0.59 = static_getitem(value=q1, index=3, index_var=$const0.58, fn=<built-in function getitem>)
2022-01-24 14:08:58,356 DEBUG on stmt: $const0.61 = const(int, 2)
2022-01-24 14:08:58,356 DEBUG on stmt: $0.62 = static_getitem(value=q2, index=2, index_var=$const0.61, fn=<built-in function getitem>)
2022-01-24 14:08:58,356 DEBUG on stmt: $0.63 = $0.59 * $0.62
2022-01-24 14:08:58,356 DEBUG on stmt: $0.64 = $0.56 - $0.63
2022-01-24 14:08:58,356 DEBUG on stmt: $const0.66 = const(int, 1)
2022-01-24 14:08:58,356 DEBUG on stmt: qout[1] = $0.64
2022-01-24 14:08:58,356 DEBUG on stmt: $const0.68 = const(int, 0)
2022-01-24 14:08:58,356 DEBUG on stmt: $0.69 = static_getitem(value=q1, index=0, index_var=$const0.68, fn=<built-in function getitem>)
2022-01-24 14:08:58,356 DEBUG on stmt: $const0.71 = const(int, 2)
2022-01-24 14:08:58,356 DEBUG on stmt: $0.72 = static_getitem(value=q2, index=2, index_var=$const0.71, fn=<built-in function getitem>)
2022-01-24 14:08:58,356 DEBUG on stmt: $0.73 = $0.69 * $0.72
2022-01-24 14:08:58,356 DEBUG on stmt: $const0.75 = const(int, 1)
2022-01-24 14:08:58,356 DEBUG on stmt: $0.76 = static_getitem(value=q1, index=1, index_var=$const0.75, fn=<built-in function getitem>)
2022-01-24 14:08:58,356 DEBUG on stmt: $const0.78 = const(int, 3)
2022-01-24 14:08:58,356 DEBUG on stmt: $0.79 = static_getitem(value=q2, index=3, index_var=$const0.78, fn=<built-in function getitem>)
2022-01-24 14:08:58,356 DEBUG on stmt: $0.80 = $0.76 * $0.79
2022-01-24 14:08:58,356 DEBUG on stmt: $0.81 = $0.73 - $0.80
2022-01-24 14:08:58,356 DEBUG on stmt: $const0.83 = const(int, 2)
2022-01-24 14:08:58,356 DEBUG on stmt: $0.84 = static_getitem(value=q1, index=2, index_var=$const0.83, fn=<built-in function getitem>)
2022-01-24 14:08:58,356 DEBUG on stmt: $const0.86 = const(int, 0)
2022-01-24 14:08:58,356 DEBUG on stmt: $0.87 = static_getitem(value=q2, index=0, index_var=$const0.86, fn=<built-in function getitem>)
2022-01-24 14:08:58,356 DEBUG on stmt: $0.88 = $0.84 * $0.87
2022-01-24 14:08:58,357 DEBUG on stmt: $0.89 = $0.81 + $0.88
2022-01-24 14:08:58,357 DEBUG on stmt: $const0.91 = const(int, 3)
2022-01-24 14:08:58,357 DEBUG on stmt: $0.92 = static_getitem(value=q1, index=3, index_var=$const0.91, fn=<built-in function getitem>)
2022-01-24 14:08:58,357 DEBUG on stmt: $const0.94 = const(int, 1)
2022-01-24 14:08:58,357 DEBUG on stmt: $0.95 = static_getitem(value=q2, index=1, index_var=$const0.94, fn=<built-in function getitem>)
2022-01-24 14:08:58,357 DEBUG on stmt: $0.96 = $0.92 * $0.95
2022-01-24 14:08:58,357 DEBUG on stmt: $0.97 = $0.89 + $0.96
2022-01-24 14:08:58,357 DEBUG on stmt: $const0.99 = const(int, 2)
2022-01-24 14:08:58,357 DEBUG on stmt: qout[2] = $0.97
2022-01-24 14:08:58,357 DEBUG on stmt: $const0.101 = const(int, 0)
2022-01-24 14:08:58,357 DEBUG on stmt: $0.102 = static_getitem(value=q1, index=0, index_var=$const0.101, fn=<built-in function getitem>)
2022-01-24 14:08:58,357 DEBUG on stmt: $const0.104 = const(int, 3)
2022-01-24 14:08:58,357 DEBUG on stmt: $0.105 = static_getitem(value=q2, index=3, index_var=$const0.104, fn=<built-in function getitem>)
2022-01-24 14:08:58,357 DEBUG on stmt: $0.106 = $0.102 * $0.105
2022-01-24 14:08:58,357 DEBUG on stmt: $const0.108 = const(int, 1)
2022-01-24 14:08:58,357 DEBUG on stmt: $0.109 = static_getitem(value=q1, index=1, index_var=$const0.108, fn=<built-in function getitem>)
2022-01-24 14:08:58,357 DEBUG on stmt: $const0.111 = const(int, 2)
2022-01-24 14:08:58,357 DEBUG on stmt: $0.112 = static_getitem(value=q2, index=2, index_var=$const0.111, fn=<built-in function getitem>)
2022-01-24 14:08:58,357 DEBUG on stmt: $0.113 = $0.109 * $0.112
2022-01-24 14:08:58,357 DEBUG on stmt: $0.114 = $0.106 + $0.113
2022-01-24 14:08:58,357 DEBUG on stmt: $const0.116 = const(int, 2)
2022-01-24 14:08:58,357 DEBUG on stmt: $0.117 = static_getitem(value=q1, index=2, index_var=$const0.116, fn=<built-in function getitem>)
2022-01-24 14:08:58,357 DEBUG on stmt: $const0.119 = const(int, 1)
2022-01-24 14:08:58,357 DEBUG on stmt: $0.120 = static_getitem(value=q2, index=1, index_var=$const0.119, fn=<built-in function getitem>)
2022-01-24 14:08:58,357 DEBUG on stmt: $0.121 = $0.117 * $0.120
2022-01-24 14:08:58,357 DEBUG on stmt: $0.122 = $0.114 - $0.121
2022-01-24 14:08:58,358 DEBUG on stmt: $const0.124 = const(int, 3)
2022-01-24 14:08:58,358 DEBUG on stmt: $0.125 = static_getitem(value=q1, index=3, index_var=$const0.124, fn=<built-in function getitem>)
2022-01-24 14:08:58,358 DEBUG on stmt: $const0.127 = const(int, 0)
2022-01-24 14:08:58,358 DEBUG on stmt: $0.128 = static_getitem(value=q2, index=0, index_var=$const0.127, fn=<built-in function getitem>)
2022-01-24 14:08:58,358 DEBUG on stmt: $0.129 = $0.125 * $0.128
2022-01-24 14:08:58,358 DEBUG on stmt: $0.130 = $0.122 + $0.129
2022-01-24 14:08:58,358 DEBUG on stmt: $const0.132 = const(int, 3)
2022-01-24 14:08:58,358 DEBUG on stmt: qout[3] = $0.130
2022-01-24 14:08:58,358 DEBUG on stmt: $const0.133 = const(NoneType, None)
2022-01-24 14:08:58,358 DEBUG on stmt: $0.134 = cast(value=$const0.133)
2022-01-24 14:08:58,358 DEBUG on stmt: return $0.134
2022-01-24 14:08:58,359 DEBUG defs defaultdict(<class 'list'>,
            {'$0.10': [<numba.core.ir.Assign object at 0x7f94ec89f5c0>],
             '$0.102': [<numba.core.ir.Assign object at 0x7f94ec87f7f0>],
             '$0.105': [<numba.core.ir.Assign object at 0x7f94ec87f860>],
             '$0.106': [<numba.core.ir.Assign object at 0x7f94ec89c7b8>],
             '$0.109': [<numba.core.ir.Assign object at 0x7f94ec87f8d0>],
             '$0.112': [<numba.core.ir.Assign object at 0x7f94ec87f940>],
             '$0.113': [<numba.core.ir.Assign object at 0x7f94ec89cd68>],
             '$0.114': [<numba.core.ir.Assign object at 0x7f94ec89ce48>],
             '$0.117': [<numba.core.ir.Assign object at 0x7f94ec87f9b0>],
             '$0.120': [<numba.core.ir.Assign object at 0x7f94ec87fa20>],
             '$0.121': [<numba.core.ir.Assign object at 0x7f94ec89f438>],
             '$0.122': [<numba.core.ir.Assign object at 0x7f94ec89f518>],
             '$0.125': [<numba.core.ir.Assign object at 0x7f94ec87fa90>],
             '$0.128': [<numba.core.ir.Assign object at 0x7f94ec87fb00>],
             '$0.129': [<numba.core.ir.Assign object at 0x7f94ec89fac8>],
             '$0.13': [<numba.core.ir.Assign object at 0x7f94ec89fc50>],
             '$0.130': [<numba.core.ir.Assign object at 0x7f94ec89fba8>],
             '$0.134': [<numba.core.ir.Assign object at 0x7f94ec89ff60>],
             '$0.14': [<numba.core.ir.Assign object at 0x7f94ec87ca20>],
             '$0.15': [<numba.core.ir.Assign object at 0x7f94ec87cb00>],
             '$0.18': [<numba.core.ir.Assign object at 0x7f94ec8936d8>],
             '$0.21': [<numba.core.ir.Assign object at 0x7f94ec893c88>],
             '$0.22': [<numba.core.ir.Assign object at 0x7f94ec88b0f0>],
             '$0.23': [<numba.core.ir.Assign object at 0x7f94ec88b1d0>],
             '$0.26': [<numba.core.ir.Assign object at 0x7f94ec8934e0>],
             '$0.29': [<numba.core.ir.Assign object at 0x7f94ec87f080>],
             '$0.3': [<numba.core.ir.Assign object at 0x7f94ec89cac8>],
             '$0.30': [<numba.core.ir.Assign object at 0x7f94ec88b780>],
             '$0.31': [<numba.core.ir.Assign object at 0x7f94ec88b860>],
             '$0.36': [<numba.core.ir.Assign object at 0x7f94ec87f0f0>],
             '$0.39': [<numba.core.ir.Assign object at 0x7f94ec87f160>],
             '$0.40': [<numba.core.ir.Assign object at 0x7f94ec890048>],
             '$0.43': [<numba.core.ir.Assign object at 0x7f94ec87f1d0>],
             '$0.46': [<numba.core.ir.Assign object at 0x7f94ec87f240>],
             '$0.47': [<numba.core.ir.Assign object at 0x7f94ec8905f8>],
             '$0.48': [<numba.core.ir.Assign object at 0x7f94ec8906d8>],
             '$0.51': [<numba.core.ir.Assign object at 0x7f94ec87f2b0>],
             '$0.54': [<numba.core.ir.Assign object at 0x7f94ec87f320>],
             '$0.55': [<numba.core.ir.Assign object at 0x7f94ec890c88>],
             '$0.56': [<numba.core.ir.Assign object at 0x7f94ec890d68>],
             '$0.59': [<numba.core.ir.Assign object at 0x7f94ec87f390>],
             '$0.6': [<numba.core.ir.Assign object at 0x7f94ec870908>],
             '$0.62': [<numba.core.ir.Assign object at 0x7f94ec87f400>],
             '$0.63': [<numba.core.ir.Assign object at 0x7f94ec893358>],
             '$0.64': [<numba.core.ir.Assign object at 0x7f94ec893438>],
             '$0.69': [<numba.core.ir.Assign object at 0x7f94ec87f470>],
             '$0.7': [<numba.core.ir.Assign object at 0x7f94ec87c470>],
             '$0.72': [<numba.core.ir.Assign object at 0x7f94ec87f4e0>],
             '$0.73': [<numba.core.ir.Assign object at 0x7f94ec893be0>],
             '$0.76': [<numba.core.ir.Assign object at 0x7f94ec87f550>],
             '$0.79': [<numba.core.ir.Assign object at 0x7f94ec87f5c0>],
             '$0.80': [<numba.core.ir.Assign object at 0x7f94ec8961d0>],
             '$0.81': [<numba.core.ir.Assign object at 0x7f94ec8962b0>],
             '$0.84': [<numba.core.ir.Assign object at 0x7f94ec87f630>],
             '$0.87': [<numba.core.ir.Assign object at 0x7f94ec87f6a0>],
             '$0.88': [<numba.core.ir.Assign object at 0x7f94ec896860>],
             '$0.89': [<numba.core.ir.Assign object at 0x7f94ec896940>],
             '$0.92': [<numba.core.ir.Assign object at 0x7f94ec87f710>],
             '$0.95': [<numba.core.ir.Assign object at 0x7f94ec87f780>],
             '$0.96': [<numba.core.ir.Assign object at 0x7f94ec896ef0>],
             '$0.97': [<numba.core.ir.Assign object at 0x7f94ec896fd0>],
             '$const0.101': [<numba.core.ir.Assign object at 0x7f94ec89c390>],
             '$const0.104': [<numba.core.ir.Assign object at 0x7f94ec89c5f8>],
             '$const0.108': [<numba.core.ir.Assign object at 0x7f94ec89c940>],
             '$const0.111': [<numba.core.ir.Assign object at 0x7f94ec89cba8>],
             '$const0.116': [<numba.core.ir.Assign object at 0x7f94ec89cfd0>],
             '$const0.119': [<numba.core.ir.Assign object at 0x7f94ec89f278>],
             '$const0.12': [<numba.core.ir.Assign object at 0x7f94ec87c860>],
             '$const0.124': [<numba.core.ir.Assign object at 0x7f94ec89f6a0>],
             '$const0.127': [<numba.core.ir.Assign object at 0x7f94ec89f908>],
             '$const0.132': [<numba.core.ir.Assign object at 0x7f94ec89fd30>],
             '$const0.133': [<numba.core.ir.Assign object at 0x7f94ec89fe80>],
             '$const0.17': [<numba.core.ir.Assign object at 0x7f94ec87cc88>],
             '$const0.2': [<numba.core.ir.Assign object at 0x7f94ec87c048>],
             '$const0.20': [<numba.core.ir.Assign object at 0x7f94ec87cef0>],
             '$const0.25': [<numba.core.ir.Assign object at 0x7f94ec88b358>],
             '$const0.28': [<numba.core.ir.Assign object at 0x7f94ec88b5c0>],
             '$const0.33': [<numba.core.ir.Assign object at 0x7f94ec88b9e8>],
             '$const0.35': [<numba.core.ir.Assign object at 0x7f94ec88bbe0>],
             '$const0.38': [<numba.core.ir.Assign object at 0x7f94ec88be48>],
             '$const0.42': [<numba.core.ir.Assign object at 0x7f94ec8901d0>],
             '$const0.45': [<numba.core.ir.Assign object at 0x7f94ec890438>],
             '$const0.5': [<numba.core.ir.Assign object at 0x7f94ec87c2b0>],
             '$const0.50': [<numba.core.ir.Assign object at 0x7f94ec890860>],
             '$const0.53': [<numba.core.ir.Assign object at 0x7f94ec890ac8>],
             '$const0.58': [<numba.core.ir.Assign object at 0x7f94ec890ef0>],
             '$const0.61': [<numba.core.ir.Assign object at 0x7f94ec893198>],
             '$const0.66': [<numba.core.ir.Assign object at 0x7f94ec8935c0>],
             '$const0.68': [<numba.core.ir.Assign object at 0x7f94ec8937b8>],
             '$const0.71': [<numba.core.ir.Assign object at 0x7f94ec893a20>],
             '$const0.75': [<numba.core.ir.Assign object at 0x7f94ec893d68>],
             '$const0.78': [<numba.core.ir.Assign object at 0x7f94ec893fd0>],
             '$const0.83': [<numba.core.ir.Assign object at 0x7f94ec896438>],
             '$const0.86': [<numba.core.ir.Assign object at 0x7f94ec8966a0>],
             '$const0.9': [<numba.core.ir.Assign object at 0x7f94ec87c5f8>],
             '$const0.91': [<numba.core.ir.Assign object at 0x7f94ec896ac8>],
             '$const0.94': [<numba.core.ir.Assign object at 0x7f94ec896d30>],
             '$const0.99': [<numba.core.ir.Assign object at 0x7f94ec89c198>],
             'q1': [<numba.core.ir.Assign object at 0x7f94ec882d30>],
             'q2': [<numba.core.ir.Assign object at 0x7f94ec882dd8>],
             'qout': [<numba.core.ir.Assign object at 0x7f94ec882e80>]})
2022-01-24 14:08:58,359 DEBUG SSA violators set()
2022-01-24 14:08:58,648 DEBUG label 0:
    q1 = arg(0, name=q1)                     ['q1']
    q2 = arg(1, name=q2)                     ['q2']
    qout = arg(2, name=qout)                 ['qout']
    $const0.2 = const(int, 0)                ['$const0.2']
    $0.3 = getitem(value=q2, index=$const0.2, fn=<built-in function getitem>) ['$0.3', '$const0.2', 'q2']
    $const0.4 = const(int, 2)                ['$const0.4']
    $0.5 = $0.3 ** $const0.4                 ['$0.3', '$0.5', '$const0.4']
    $const0.7 = const(int, 1)                ['$const0.7']
    $0.8 = getitem(value=q2, index=$const0.7, fn=<built-in function getitem>) ['$0.8', '$const0.7', 'q2']
    $const0.9 = const(int, 2)                ['$const0.9']
    $0.10 = $0.8 ** $const0.9                ['$0.10', '$0.8', '$const0.9']
    $0.11 = $0.5 + $0.10                     ['$0.10', '$0.11', '$0.5']
    $const0.13 = const(int, 2)               ['$const0.13']
    $0.14 = getitem(value=q2, index=$const0.13, fn=<built-in function getitem>) ['$0.14', '$const0.13', 'q2']
    $const0.15 = const(int, 2)               ['$const0.15']
    $0.16 = $0.14 ** $const0.15              ['$0.14', '$0.16', '$const0.15']
    $0.17 = $0.11 + $0.16                    ['$0.11', '$0.16', '$0.17']
    $const0.19 = const(int, 3)               ['$const0.19']
    $0.20 = getitem(value=q2, index=$const0.19, fn=<built-in function getitem>) ['$0.20', '$const0.19', 'q2']
    $const0.21 = const(int, 2)               ['$const0.21']
    $0.22 = $0.20 ** $const0.21              ['$0.20', '$0.22', '$const0.21']
    q2norm = $0.17 + $0.22                   ['$0.17', '$0.22', 'q2norm']
    $const0.25 = const(int, 0)               ['$const0.25']
    $0.26 = getitem(value=q1, index=$const0.25, fn=<built-in function getitem>) ['$0.26', '$const0.25', 'q1']
    $0.27 = unary(fn=<built-in function pos>, value=$0.26) ['$0.26', '$0.27']
    $const0.29 = const(int, 0)               ['$const0.29']
    $0.30 = getitem(value=q2, index=$const0.29, fn=<built-in function getitem>) ['$0.30', '$const0.29', 'q2']
    $0.31 = $0.27 * $0.30                    ['$0.27', '$0.30', '$0.31']
    $const0.33 = const(int, 1)               ['$const0.33']
    $0.34 = getitem(value=q1, index=$const0.33, fn=<built-in function getitem>) ['$0.34', '$const0.33', 'q1']
    $const0.36 = const(int, 1)               ['$const0.36']
    $0.37 = getitem(value=q2, index=$const0.36, fn=<built-in function getitem>) ['$0.37', '$const0.36', 'q2']
    $0.38 = $0.34 * $0.37                    ['$0.34', '$0.37', '$0.38']
    $0.39 = $0.31 + $0.38                    ['$0.31', '$0.38', '$0.39']
    $const0.41 = const(int, 2)               ['$const0.41']
    $0.42 = getitem(value=q1, index=$const0.41, fn=<built-in function getitem>) ['$0.42', '$const0.41', 'q1']
    $const0.44 = const(int, 2)               ['$const0.44']
    $0.45 = getitem(value=q2, index=$const0.44, fn=<built-in function getitem>) ['$0.45', '$const0.44', 'q2']
    $0.46 = $0.42 * $0.45                    ['$0.42', '$0.45', '$0.46']
    $0.47 = $0.39 + $0.46                    ['$0.39', '$0.46', '$0.47']
    $const0.49 = const(int, 3)               ['$const0.49']
    $0.50 = getitem(value=q1, index=$const0.49, fn=<built-in function getitem>) ['$0.50', '$const0.49', 'q1']
    $const0.52 = const(int, 3)               ['$const0.52']
    $0.53 = getitem(value=q2, index=$const0.52, fn=<built-in function getitem>) ['$0.53', '$const0.52', 'q2']
    $0.54 = $0.50 * $0.53                    ['$0.50', '$0.53', '$0.54']
    $0.55 = $0.47 + $0.54                    ['$0.47', '$0.54', '$0.55']
    $0.57 = $0.55 / q2norm                   ['$0.55', '$0.57', 'q2norm']
    $const0.59 = const(int, 0)               ['$const0.59']
    qout[$const0.59] = $0.57                 ['$0.57', '$const0.59', 'qout']
    $const0.61 = const(int, 0)               ['$const0.61']
    $0.62 = getitem(value=q1, index=$const0.61, fn=<built-in function getitem>) ['$0.62', '$const0.61', 'q1']
    $0.63 = unary(fn=<built-in function neg>, value=$0.62) ['$0.62', '$0.63']
    $const0.65 = const(int, 1)               ['$const0.65']
    $0.66 = getitem(value=q2, index=$const0.65, fn=<built-in function getitem>) ['$0.66', '$const0.65', 'q2']
    $0.67 = $0.63 * $0.66                    ['$0.63', '$0.66', '$0.67']
    $const0.69 = const(int, 1)               ['$const0.69']
    $0.70 = getitem(value=q1, index=$const0.69, fn=<built-in function getitem>) ['$0.70', '$const0.69', 'q1']
    $const0.72 = const(int, 0)               ['$const0.72']
    $0.73 = getitem(value=q2, index=$const0.72, fn=<built-in function getitem>) ['$0.73', '$const0.72', 'q2']
    $0.74 = $0.70 * $0.73                    ['$0.70', '$0.73', '$0.74']
    $0.75 = $0.67 + $0.74                    ['$0.67', '$0.74', '$0.75']
    $const0.77 = const(int, 2)               ['$const0.77']
    $0.78 = getitem(value=q1, index=$const0.77, fn=<built-in function getitem>) ['$0.78', '$const0.77', 'q1']
    $const0.80 = const(int, 3)               ['$const0.80']
    $0.81 = getitem(value=q2, index=$const0.80, fn=<built-in function getitem>) ['$0.81', '$const0.80', 'q2']
    $0.82 = $0.78 * $0.81                    ['$0.78', '$0.81', '$0.82']
    $0.83 = $0.75 - $0.82                    ['$0.75', '$0.82', '$0.83']
    $const0.85 = const(int, 3)               ['$const0.85']
    $0.86 = getitem(value=q1, index=$const0.85, fn=<built-in function getitem>) ['$0.86', '$const0.85', 'q1']
    $const0.88 = const(int, 2)               ['$const0.88']
    $0.89 = getitem(value=q2, index=$const0.88, fn=<built-in function getitem>) ['$0.89', '$const0.88', 'q2']
    $0.90 = $0.86 * $0.89                    ['$0.86', '$0.89', '$0.90']
    $0.91 = $0.83 + $0.90                    ['$0.83', '$0.90', '$0.91']
    $0.93 = $0.91 / q2norm                   ['$0.91', '$0.93', 'q2norm']
    $const0.95 = const(int, 1)               ['$const0.95']
    qout[$const0.95] = $0.93                 ['$0.93', '$const0.95', 'qout']
    $const0.97 = const(int, 0)               ['$const0.97']
    $0.98 = getitem(value=q1, index=$const0.97, fn=<built-in function getitem>) ['$0.98', '$const0.97', 'q1']
    $0.99 = unary(fn=<built-in function neg>, value=$0.98) ['$0.98', '$0.99']
    $const0.101 = const(int, 2)              ['$const0.101']
    $0.102 = getitem(value=q2, index=$const0.101, fn=<built-in function getitem>) ['$0.102', '$const0.101', 'q2']
    $0.103 = $0.99 * $0.102                  ['$0.102', '$0.103', '$0.99']
    $const0.105 = const(int, 1)              ['$const0.105']
    $0.106 = getitem(value=q1, index=$const0.105, fn=<built-in function getitem>) ['$0.106', '$const0.105', 'q1']
    $const0.108 = const(int, 3)              ['$const0.108']
    $0.109 = getitem(value=q2, index=$const0.108, fn=<built-in function getitem>) ['$0.109', '$const0.108', 'q2']
    $0.110 = $0.106 * $0.109                 ['$0.106', '$0.109', '$0.110']
    $0.111 = $0.103 + $0.110                 ['$0.103', '$0.110', '$0.111']
    $const0.113 = const(int, 2)              ['$const0.113']
    $0.114 = getitem(value=q1, index=$const0.113, fn=<built-in function getitem>) ['$0.114', '$const0.113', 'q1']
    $const0.116 = const(int, 0)              ['$const0.116']
    $0.117 = getitem(value=q2, index=$const0.116, fn=<built-in function getitem>) ['$0.117', '$const0.116', 'q2']
    $0.118 = $0.114 * $0.117                 ['$0.114', '$0.117', '$0.118']
    $0.119 = $0.111 + $0.118                 ['$0.111', '$0.118', '$0.119']
    $const0.121 = const(int, 3)              ['$const0.121']
    $0.122 = getitem(value=q1, index=$const0.121, fn=<built-in function getitem>) ['$0.122', '$const0.121', 'q1']
    $const0.124 = const(int, 1)              ['$const0.124']
    $0.125 = getitem(value=q2, index=$const0.124, fn=<built-in function getitem>) ['$0.125', '$const0.124', 'q2']
    $0.126 = $0.122 * $0.125                 ['$0.122', '$0.125', '$0.126']
    $0.127 = $0.119 - $0.126                 ['$0.119', '$0.126', '$0.127']
    $0.129 = $0.127 / q2norm                 ['$0.127', '$0.129', 'q2norm']
    $const0.131 = const(int, 2)              ['$const0.131']
    qout[$const0.131] = $0.129               ['$0.129', '$const0.131', 'qout']
    $const0.133 = const(int, 0)              ['$const0.133']
    $0.134 = getitem(value=q1, index=$const0.133, fn=<built-in function getitem>) ['$0.134', '$const0.133', 'q1']
    $0.135 = unary(fn=<built-in function neg>, value=$0.134) ['$0.134', '$0.135']
    $const0.137 = const(int, 3)              ['$const0.137']
    $0.138 = getitem(value=q2, index=$const0.137, fn=<built-in function getitem>) ['$0.138', '$const0.137', 'q2']
    $0.139 = $0.135 * $0.138                 ['$0.135', '$0.138', '$0.139']
    $const0.141 = const(int, 1)              ['$const0.141']
    $0.142 = getitem(value=q1, index=$const0.141, fn=<built-in function getitem>) ['$0.142', '$const0.141', 'q1']
    $const0.144 = const(int, 2)              ['$const0.144']
    $0.145 = getitem(value=q2, index=$const0.144, fn=<built-in function getitem>) ['$0.145', '$const0.144', 'q2']
    $0.146 = $0.142 * $0.145                 ['$0.142', '$0.145', '$0.146']
    $0.147 = $0.139 - $0.146                 ['$0.139', '$0.146', '$0.147']
    $const0.149 = const(int, 2)              ['$const0.149']
    $0.150 = getitem(value=q1, index=$const0.149, fn=<built-in function getitem>) ['$0.150', '$const0.149', 'q1']
    $const0.152 = const(int, 1)              ['$const0.152']
    $0.153 = getitem(value=q2, index=$const0.152, fn=<built-in function getitem>) ['$0.153', '$const0.152', 'q2']
    $0.154 = $0.150 * $0.153                 ['$0.150', '$0.153', '$0.154']
    $0.155 = $0.147 + $0.154                 ['$0.147', '$0.154', '$0.155']
    $const0.157 = const(int, 3)              ['$const0.157']
    $0.158 = getitem(value=q1, index=$const0.157, fn=<built-in function getitem>) ['$0.158', '$const0.157', 'q1']
    $const0.160 = const(int, 0)              ['$const0.160']
    $0.161 = getitem(value=q2, index=$const0.160, fn=<built-in function getitem>) ['$0.161', '$const0.160', 'q2']
    $0.162 = $0.158 * $0.161                 ['$0.158', '$0.161', '$0.162']
    $0.163 = $0.155 + $0.162                 ['$0.155', '$0.162', '$0.163']
    $0.165 = $0.163 / q2norm                 ['$0.163', '$0.165', 'q2norm']
    $const0.167 = const(int, 3)              ['$const0.167']
    qout[$const0.167] = $0.165               ['$0.165', '$const0.167', 'qout']
    $const0.168 = const(NoneType, None)      ['$const0.168']
    $0.169 = cast(value=$const0.168)         ['$0.169', '$const0.168']
    return $0.169                            ['$0.169']

2022-01-24 14:08:58,659 DEBUG ==== SSA block analysis pass on 0
2022-01-24 14:08:58,660 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ec6b0b38>
2022-01-24 14:08:58,660 DEBUG on stmt: q1 = arg(0, name=q1)
2022-01-24 14:08:58,660 DEBUG on stmt: q2 = arg(1, name=q2)
2022-01-24 14:08:58,660 DEBUG on stmt: qout = arg(2, name=qout)
2022-01-24 14:08:58,660 DEBUG on stmt: $const0.2 = const(int, 0)
2022-01-24 14:08:58,660 DEBUG on stmt: $0.3 = static_getitem(value=q2, index=0, index_var=$const0.2, fn=<built-in function getitem>)
2022-01-24 14:08:58,660 DEBUG on stmt: $const0.4 = const(int, 2)
2022-01-24 14:08:58,660 DEBUG on stmt: $0.5 = $0.3 ** $const0.4
2022-01-24 14:08:58,660 DEBUG on stmt: $const0.7 = const(int, 1)
2022-01-24 14:08:58,660 DEBUG on stmt: $0.8 = static_getitem(value=q2, index=1, index_var=$const0.7, fn=<built-in function getitem>)
2022-01-24 14:08:58,660 DEBUG on stmt: $const0.9 = const(int, 2)
2022-01-24 14:08:58,660 DEBUG on stmt: $0.10 = $0.8 ** $const0.9
2022-01-24 14:08:58,661 DEBUG on stmt: $0.11 = $0.5 + $0.10
2022-01-24 14:08:58,661 DEBUG on stmt: $const0.13 = const(int, 2)
2022-01-24 14:08:58,661 DEBUG on stmt: $0.14 = static_getitem(value=q2, index=2, index_var=$const0.13, fn=<built-in function getitem>)
2022-01-24 14:08:58,661 DEBUG on stmt: $const0.15 = const(int, 2)
2022-01-24 14:08:58,661 DEBUG on stmt: $0.16 = $0.14 ** $const0.15
2022-01-24 14:08:58,661 DEBUG on stmt: $0.17 = $0.11 + $0.16
2022-01-24 14:08:58,661 DEBUG on stmt: $const0.19 = const(int, 3)
2022-01-24 14:08:58,661 DEBUG on stmt: $0.20 = static_getitem(value=q2, index=3, index_var=$const0.19, fn=<built-in function getitem>)
2022-01-24 14:08:58,661 DEBUG on stmt: $const0.21 = const(int, 2)
2022-01-24 14:08:58,661 DEBUG on stmt: $0.22 = $0.20 ** $const0.21
2022-01-24 14:08:58,661 DEBUG on stmt: q2norm = $0.17 + $0.22
2022-01-24 14:08:58,661 DEBUG on stmt: $const0.25 = const(int, 0)
2022-01-24 14:08:58,661 DEBUG on stmt: $0.26 = static_getitem(value=q1, index=0, index_var=$const0.25, fn=<built-in function getitem>)
2022-01-24 14:08:58,661 DEBUG on stmt: $0.27 = unary(fn=<built-in function pos>, value=$0.26)
2022-01-24 14:08:58,661 DEBUG on stmt: $const0.29 = const(int, 0)
2022-01-24 14:08:58,661 DEBUG on stmt: $0.30 = static_getitem(value=q2, index=0, index_var=$const0.29, fn=<built-in function getitem>)
2022-01-24 14:08:58,661 DEBUG on stmt: $0.31 = $0.27 * $0.30
2022-01-24 14:08:58,661 DEBUG on stmt: $const0.33 = const(int, 1)
2022-01-24 14:08:58,661 DEBUG on stmt: $0.34 = static_getitem(value=q1, index=1, index_var=$const0.33, fn=<built-in function getitem>)
2022-01-24 14:08:58,661 DEBUG on stmt: $const0.36 = const(int, 1)
2022-01-24 14:08:58,661 DEBUG on stmt: $0.37 = static_getitem(value=q2, index=1, index_var=$const0.36, fn=<built-in function getitem>)
2022-01-24 14:08:58,661 DEBUG on stmt: $0.38 = $0.34 * $0.37
2022-01-24 14:08:58,661 DEBUG on stmt: $0.39 = $0.31 + $0.38
2022-01-24 14:08:58,662 DEBUG on stmt: $const0.41 = const(int, 2)
2022-01-24 14:08:58,662 DEBUG on stmt: $0.42 = static_getitem(value=q1, index=2, index_var=$const0.41, fn=<built-in function getitem>)
2022-01-24 14:08:58,662 DEBUG on stmt: $const0.44 = const(int, 2)
2022-01-24 14:08:58,662 DEBUG on stmt: $0.45 = static_getitem(value=q2, index=2, index_var=$const0.44, fn=<built-in function getitem>)
2022-01-24 14:08:58,662 DEBUG on stmt: $0.46 = $0.42 * $0.45
2022-01-24 14:08:58,662 DEBUG on stmt: $0.47 = $0.39 + $0.46
2022-01-24 14:08:58,662 DEBUG on stmt: $const0.49 = const(int, 3)
2022-01-24 14:08:58,662 DEBUG on stmt: $0.50 = static_getitem(value=q1, index=3, index_var=$const0.49, fn=<built-in function getitem>)
2022-01-24 14:08:58,662 DEBUG on stmt: $const0.52 = const(int, 3)
2022-01-24 14:08:58,662 DEBUG on stmt: $0.53 = static_getitem(value=q2, index=3, index_var=$const0.52, fn=<built-in function getitem>)
2022-01-24 14:08:58,662 DEBUG on stmt: $0.54 = $0.50 * $0.53
2022-01-24 14:08:58,662 DEBUG on stmt: $0.55 = $0.47 + $0.54
2022-01-24 14:08:58,662 DEBUG on stmt: $0.57 = $0.55 / q2norm
2022-01-24 14:08:58,662 DEBUG on stmt: $const0.59 = const(int, 0)
2022-01-24 14:08:58,662 DEBUG on stmt: qout[0] = $0.57
2022-01-24 14:08:58,662 DEBUG on stmt: $const0.61 = const(int, 0)
2022-01-24 14:08:58,662 DEBUG on stmt: $0.62 = static_getitem(value=q1, index=0, index_var=$const0.61, fn=<built-in function getitem>)
2022-01-24 14:08:58,662 DEBUG on stmt: $0.63 = unary(fn=<built-in function neg>, value=$0.62)
2022-01-24 14:08:58,662 DEBUG on stmt: $const0.65 = const(int, 1)
2022-01-24 14:08:58,662 DEBUG on stmt: $0.66 = static_getitem(value=q2, index=1, index_var=$const0.65, fn=<built-in function getitem>)
2022-01-24 14:08:58,662 DEBUG on stmt: $0.67 = $0.63 * $0.66
2022-01-24 14:08:58,662 DEBUG on stmt: $const0.69 = const(int, 1)
2022-01-24 14:08:58,662 DEBUG on stmt: $0.70 = static_getitem(value=q1, index=1, index_var=$const0.69, fn=<built-in function getitem>)
2022-01-24 14:08:58,663 DEBUG on stmt: $const0.72 = const(int, 0)
2022-01-24 14:08:58,663 DEBUG on stmt: $0.73 = static_getitem(value=q2, index=0, index_var=$const0.72, fn=<built-in function getitem>)
2022-01-24 14:08:58,663 DEBUG on stmt: $0.74 = $0.70 * $0.73
2022-01-24 14:08:58,663 DEBUG on stmt: $0.75 = $0.67 + $0.74
2022-01-24 14:08:58,663 DEBUG on stmt: $const0.77 = const(int, 2)
2022-01-24 14:08:58,663 DEBUG on stmt: $0.78 = static_getitem(value=q1, index=2, index_var=$const0.77, fn=<built-in function getitem>)
2022-01-24 14:08:58,663 DEBUG on stmt: $const0.80 = const(int, 3)
2022-01-24 14:08:58,663 DEBUG on stmt: $0.81 = static_getitem(value=q2, index=3, index_var=$const0.80, fn=<built-in function getitem>)
2022-01-24 14:08:58,663 DEBUG on stmt: $0.82 = $0.78 * $0.81
2022-01-24 14:08:58,663 DEBUG on stmt: $0.83 = $0.75 - $0.82
2022-01-24 14:08:58,663 DEBUG on stmt: $const0.85 = const(int, 3)
2022-01-24 14:08:58,663 DEBUG on stmt: $0.86 = static_getitem(value=q1, index=3, index_var=$const0.85, fn=<built-in function getitem>)
2022-01-24 14:08:58,663 DEBUG on stmt: $const0.88 = const(int, 2)
2022-01-24 14:08:58,663 DEBUG on stmt: $0.89 = static_getitem(value=q2, index=2, index_var=$const0.88, fn=<built-in function getitem>)
2022-01-24 14:08:58,663 DEBUG on stmt: $0.90 = $0.86 * $0.89
2022-01-24 14:08:58,663 DEBUG on stmt: $0.91 = $0.83 + $0.90
2022-01-24 14:08:58,663 DEBUG on stmt: $0.93 = $0.91 / q2norm
2022-01-24 14:08:58,663 DEBUG on stmt: $const0.95 = const(int, 1)
2022-01-24 14:08:58,663 DEBUG on stmt: qout[1] = $0.93
2022-01-24 14:08:58,663 DEBUG on stmt: $const0.97 = const(int, 0)
2022-01-24 14:08:58,663 DEBUG on stmt: $0.98 = static_getitem(value=q1, index=0, index_var=$const0.97, fn=<built-in function getitem>)
2022-01-24 14:08:58,663 DEBUG on stmt: $0.99 = unary(fn=<built-in function neg>, value=$0.98)
2022-01-24 14:08:58,663 DEBUG on stmt: $const0.101 = const(int, 2)
2022-01-24 14:08:58,664 DEBUG on stmt: $0.102 = static_getitem(value=q2, index=2, index_var=$const0.101, fn=<built-in function getitem>)
2022-01-24 14:08:58,664 DEBUG on stmt: $0.103 = $0.99 * $0.102
2022-01-24 14:08:58,664 DEBUG on stmt: $const0.105 = const(int, 1)
2022-01-24 14:08:58,664 DEBUG on stmt: $0.106 = static_getitem(value=q1, index=1, index_var=$const0.105, fn=<built-in function getitem>)
2022-01-24 14:08:58,664 DEBUG on stmt: $const0.108 = const(int, 3)
2022-01-24 14:08:58,664 DEBUG on stmt: $0.109 = static_getitem(value=q2, index=3, index_var=$const0.108, fn=<built-in function getitem>)
2022-01-24 14:08:58,664 DEBUG on stmt: $0.110 = $0.106 * $0.109
2022-01-24 14:08:58,664 DEBUG on stmt: $0.111 = $0.103 + $0.110
2022-01-24 14:08:58,664 DEBUG on stmt: $const0.113 = const(int, 2)
2022-01-24 14:08:58,664 DEBUG on stmt: $0.114 = static_getitem(value=q1, index=2, index_var=$const0.113, fn=<built-in function getitem>)
2022-01-24 14:08:58,664 DEBUG on stmt: $const0.116 = const(int, 0)
2022-01-24 14:08:58,664 DEBUG on stmt: $0.117 = static_getitem(value=q2, index=0, index_var=$const0.116, fn=<built-in function getitem>)
2022-01-24 14:08:58,664 DEBUG on stmt: $0.118 = $0.114 * $0.117
2022-01-24 14:08:58,664 DEBUG on stmt: $0.119 = $0.111 + $0.118
2022-01-24 14:08:58,664 DEBUG on stmt: $const0.121 = const(int, 3)
2022-01-24 14:08:58,664 DEBUG on stmt: $0.122 = static_getitem(value=q1, index=3, index_var=$const0.121, fn=<built-in function getitem>)
2022-01-24 14:08:58,664 DEBUG on stmt: $const0.124 = const(int, 1)
2022-01-24 14:08:58,664 DEBUG on stmt: $0.125 = static_getitem(value=q2, index=1, index_var=$const0.124, fn=<built-in function getitem>)
2022-01-24 14:08:58,664 DEBUG on stmt: $0.126 = $0.122 * $0.125
2022-01-24 14:08:58,664 DEBUG on stmt: $0.127 = $0.119 - $0.126
2022-01-24 14:08:58,664 DEBUG on stmt: $0.129 = $0.127 / q2norm
2022-01-24 14:08:58,664 DEBUG on stmt: $const0.131 = const(int, 2)
2022-01-24 14:08:58,664 DEBUG on stmt: qout[2] = $0.129
2022-01-24 14:08:58,665 DEBUG on stmt: $const0.133 = const(int, 0)
2022-01-24 14:08:58,665 DEBUG on stmt: $0.134 = static_getitem(value=q1, index=0, index_var=$const0.133, fn=<built-in function getitem>)
2022-01-24 14:08:58,665 DEBUG on stmt: $0.135 = unary(fn=<built-in function neg>, value=$0.134)
2022-01-24 14:08:58,665 DEBUG on stmt: $const0.137 = const(int, 3)
2022-01-24 14:08:58,665 DEBUG on stmt: $0.138 = static_getitem(value=q2, index=3, index_var=$const0.137, fn=<built-in function getitem>)
2022-01-24 14:08:58,665 DEBUG on stmt: $0.139 = $0.135 * $0.138
2022-01-24 14:08:58,665 DEBUG on stmt: $const0.141 = const(int, 1)
2022-01-24 14:08:58,665 DEBUG on stmt: $0.142 = static_getitem(value=q1, index=1, index_var=$const0.141, fn=<built-in function getitem>)
2022-01-24 14:08:58,665 DEBUG on stmt: $const0.144 = const(int, 2)
2022-01-24 14:08:58,665 DEBUG on stmt: $0.145 = static_getitem(value=q2, index=2, index_var=$const0.144, fn=<built-in function getitem>)
2022-01-24 14:08:58,665 DEBUG on stmt: $0.146 = $0.142 * $0.145
2022-01-24 14:08:58,665 DEBUG on stmt: $0.147 = $0.139 - $0.146
2022-01-24 14:08:58,665 DEBUG on stmt: $const0.149 = const(int, 2)
2022-01-24 14:08:58,665 DEBUG on stmt: $0.150 = static_getitem(value=q1, index=2, index_var=$const0.149, fn=<built-in function getitem>)
2022-01-24 14:08:58,665 DEBUG on stmt: $const0.152 = const(int, 1)
2022-01-24 14:08:58,665 DEBUG on stmt: $0.153 = static_getitem(value=q2, index=1, index_var=$const0.152, fn=<built-in function getitem>)
2022-01-24 14:08:58,665 DEBUG on stmt: $0.154 = $0.150 * $0.153
2022-01-24 14:08:58,665 DEBUG on stmt: $0.155 = $0.147 + $0.154
2022-01-24 14:08:58,665 DEBUG on stmt: $const0.157 = const(int, 3)
2022-01-24 14:08:58,665 DEBUG on stmt: $0.158 = static_getitem(value=q1, index=3, index_var=$const0.157, fn=<built-in function getitem>)
2022-01-24 14:08:58,665 DEBUG on stmt: $const0.160 = const(int, 0)
2022-01-24 14:08:58,665 DEBUG on stmt: $0.161 = static_getitem(value=q2, index=0, index_var=$const0.160, fn=<built-in function getitem>)
2022-01-24 14:08:58,665 DEBUG on stmt: $0.162 = $0.158 * $0.161
2022-01-24 14:08:58,666 DEBUG on stmt: $0.163 = $0.155 + $0.162
2022-01-24 14:08:58,666 DEBUG on stmt: $0.165 = $0.163 / q2norm
2022-01-24 14:08:58,666 DEBUG on stmt: $const0.167 = const(int, 3)
2022-01-24 14:08:58,666 DEBUG on stmt: qout[3] = $0.165
2022-01-24 14:08:58,666 DEBUG on stmt: $const0.168 = const(NoneType, None)
2022-01-24 14:08:58,666 DEBUG on stmt: $0.169 = cast(value=$const0.168)
2022-01-24 14:08:58,666 DEBUG on stmt: return $0.169
2022-01-24 14:08:58,667 DEBUG defs defaultdict(<class 'list'>,
            {'$0.10': [<numba.core.ir.Assign object at 0x7f94ec6ae160>],
             '$0.102': [<numba.core.ir.Assign object at 0x7f94ec371d30>],
             '$0.103': [<numba.core.ir.Assign object at 0x7f94ec67a048>],
             '$0.106': [<numba.core.ir.Assign object at 0x7f94ec371da0>],
             '$0.109': [<numba.core.ir.Assign object at 0x7f94ec371e10>],
             '$0.11': [<numba.core.ir.Assign object at 0x7f94ec6ae240>],
             '$0.110': [<numba.core.ir.Assign object at 0x7f94ec67a5f8>],
             '$0.111': [<numba.core.ir.Assign object at 0x7f94ec67a6d8>],
             '$0.114': [<numba.core.ir.Assign object at 0x7f94ec371e80>],
             '$0.117': [<numba.core.ir.Assign object at 0x7f94ec371ef0>],
             '$0.118': [<numba.core.ir.Assign object at 0x7f94ec67ac88>],
             '$0.119': [<numba.core.ir.Assign object at 0x7f94ec67ad68>],
             '$0.122': [<numba.core.ir.Assign object at 0x7f94ec371f60>],
             '$0.125': [<numba.core.ir.Assign object at 0x7f94ec371fd0>],
             '$0.126': [<numba.core.ir.Assign object at 0x7f94ec67b358>],
             '$0.127': [<numba.core.ir.Assign object at 0x7f94ec67b438>],
             '$0.129': [<numba.core.ir.Assign object at 0x7f94ec67b5c0>],
             '$0.134': [<numba.core.ir.Assign object at 0x7f94ec676fd0>],
             '$0.135': [<numba.core.ir.Assign object at 0x7f94ec67bb00>],
             '$0.138': [<numba.core.ir.Assign object at 0x7f94ec38b080>],
             '$0.139': [<numba.core.ir.Assign object at 0x7f94ec67be48>],
             '$0.14': [<numba.core.ir.Assign object at 0x7f94ec67b860>],
             '$0.142': [<numba.core.ir.Assign object at 0x7f94ec38b0f0>],
             '$0.145': [<numba.core.ir.Assign object at 0x7f94ec38b160>],
             '$0.146': [<numba.core.ir.Assign object at 0x7f94ec383438>],
             '$0.147': [<numba.core.ir.Assign object at 0x7f94ec383518>],
             '$0.150': [<numba.core.ir.Assign object at 0x7f94ec38b1d0>],
             '$0.153': [<numba.core.ir.Assign object at 0x7f94ec38b240>],
             '$0.154': [<numba.core.ir.Assign object at 0x7f94ec383ac8>],
             '$0.155': [<numba.core.ir.Assign object at 0x7f94ec383ba8>],
             '$0.158': [<numba.core.ir.Assign object at 0x7f94ec38b2b0>],
             '$0.16': [<numba.core.ir.Assign object at 0x7f94ec6ae668>],
             '$0.161': [<numba.core.ir.Assign object at 0x7f94ec38b320>],
             '$0.162': [<numba.core.ir.Assign object at 0x7f94ec371198>],
             '$0.163': [<numba.core.ir.Assign object at 0x7f94ec371278>],
             '$0.165': [<numba.core.ir.Assign object at 0x7f94ec371400>],
             '$0.169': [<numba.core.ir.Assign object at 0x7f94ec3717b8>],
             '$0.17': [<numba.core.ir.Assign object at 0x7f94ec6ae748>],
             '$0.20': [<numba.core.ir.Assign object at 0x7f94ec67bef0>],
             '$0.22': [<numba.core.ir.Assign object at 0x7f94ec6aeb70>],
             '$0.26': [<numba.core.ir.Assign object at 0x7f94ec3835c0>],
             '$0.27': [<numba.core.ir.Assign object at 0x7f94ec690080>],
             '$0.3': [<numba.core.ir.Assign object at 0x7f94ec67ae10>],
             '$0.30': [<numba.core.ir.Assign object at 0x7f94ec383c50>],
             '$0.31': [<numba.core.ir.Assign object at 0x7f94ec6903c8>],
             '$0.34': [<numba.core.ir.Assign object at 0x7f94ec6afc18>],
             '$0.37': [<numba.core.ir.Assign object at 0x7f94ec6aff60>],
             '$0.38': [<numba.core.ir.Assign object at 0x7f94ec690978>],
             '$0.39': [<numba.core.ir.Assign object at 0x7f94ec690a58>],
             '$0.42': [<numba.core.ir.Assign object at 0x7f94ec6afc50>],
             '$0.45': [<numba.core.ir.Assign object at 0x7f94ec3714a8>],
             '$0.46': [<numba.core.ir.Assign object at 0x7f94ec6a9048>],
             '$0.47': [<numba.core.ir.Assign object at 0x7f94ec6a9128>],
             '$0.5': [<numba.core.ir.Assign object at 0x7f94ec6af160>],
             '$0.50': [<numba.core.ir.Assign object at 0x7f94ec371860>],
             '$0.53': [<numba.core.ir.Assign object at 0x7f94ec3718d0>],
             '$0.54': [<numba.core.ir.Assign object at 0x7f94ec6a96d8>],
             '$0.55': [<numba.core.ir.Assign object at 0x7f94ec6a97b8>],
             '$0.57': [<numba.core.ir.Assign object at 0x7f94ec6a9940>],
             '$0.62': [<numba.core.ir.Assign object at 0x7f94ec371940>],
             '$0.63': [<numba.core.ir.Assign object at 0x7f94ec6a9e80>],
             '$0.66': [<numba.core.ir.Assign object at 0x7f94ec3719b0>],
             '$0.67': [<numba.core.ir.Assign object at 0x7f94ec676208>],
             '$0.70': [<numba.core.ir.Assign object at 0x7f94ec371a20>],
             '$0.73': [<numba.core.ir.Assign object at 0x7f94ec371a90>],
             '$0.74': [<numba.core.ir.Assign object at 0x7f94ec6767b8>],
             '$0.75': [<numba.core.ir.Assign object at 0x7f94ec676898>],
             '$0.78': [<numba.core.ir.Assign object at 0x7f94ec371b00>],
             '$0.8': [<numba.core.ir.Assign object at 0x7f94ec67b4e0>],
             '$0.81': [<numba.core.ir.Assign object at 0x7f94ec371b70>],
             '$0.82': [<numba.core.ir.Assign object at 0x7f94ec676e48>],
             '$0.83': [<numba.core.ir.Assign object at 0x7f94ec676f28>],
             '$0.86': [<numba.core.ir.Assign object at 0x7f94ec371be0>],
             '$0.89': [<numba.core.ir.Assign object at 0x7f94ec371c50>],
             '$0.90': [<numba.core.ir.Assign object at 0x7f94ec677518>],
             '$0.91': [<numba.core.ir.Assign object at 0x7f94ec6775f8>],
             '$0.93': [<numba.core.ir.Assign object at 0x7f94ec677780>],
             '$0.98': [<numba.core.ir.Assign object at 0x7f94ec371cc0>],
             '$0.99': [<numba.core.ir.Assign object at 0x7f94ec677cc0>],
             '$const0.101': [<numba.core.ir.Assign object at 0x7f94ec677e48>],
             '$const0.105': [<numba.core.ir.Assign object at 0x7f94ec67a1d0>],
             '$const0.108': [<numba.core.ir.Assign object at 0x7f94ec67a438>],
             '$const0.113': [<numba.core.ir.Assign object at 0x7f94ec67a860>],
             '$const0.116': [<numba.core.ir.Assign object at 0x7f94ec67aac8>],
             '$const0.121': [<numba.core.ir.Assign object at 0x7f94ec67aef0>],
             '$const0.124': [<numba.core.ir.Assign object at 0x7f94ec67b198>],
             '$const0.13': [<numba.core.ir.Assign object at 0x7f94ec6ae3c8>],
             '$const0.131': [<numba.core.ir.Assign object at 0x7f94ec67b748>],
             '$const0.133': [<numba.core.ir.Assign object at 0x7f94ec67b940>],
             '$const0.137': [<numba.core.ir.Assign object at 0x7f94ec67bc88>],
             '$const0.141': [<numba.core.ir.Assign object at 0x7f94ec67bfd0>],
             '$const0.144': [<numba.core.ir.Assign object at 0x7f94ec383278>],
             '$const0.149': [<numba.core.ir.Assign object at 0x7f94ec3836a0>],
             '$const0.15': [<numba.core.ir.Assign object at 0x7f94ec6ae588>],
             '$const0.152': [<numba.core.ir.Assign object at 0x7f94ec383908>],
             '$const0.157': [<numba.core.ir.Assign object at 0x7f94ec383d30>],
             '$const0.160': [<numba.core.ir.Assign object at 0x7f94ec383f98>],
             '$const0.167': [<numba.core.ir.Assign object at 0x7f94ec371588>],
             '$const0.168': [<numba.core.ir.Assign object at 0x7f94ec3716d8>],
             '$const0.19': [<numba.core.ir.Assign object at 0x7f94ec6ae8d0>],
             '$const0.2': [<numba.core.ir.Assign object at 0x7f94ec6af5f8>],
             '$const0.21': [<numba.core.ir.Assign object at 0x7f94ec6aea90>],
             '$const0.25': [<numba.core.ir.Assign object at 0x7f94ec6aee80>],
             '$const0.29': [<numba.core.ir.Assign object at 0x7f94ec690208>],
             '$const0.33': [<numba.core.ir.Assign object at 0x7f94ec690550>],
             '$const0.36': [<numba.core.ir.Assign object at 0x7f94ec6907b8>],
             '$const0.4': [<numba.core.ir.Assign object at 0x7f94ec6af2b0>],
             '$const0.41': [<numba.core.ir.Assign object at 0x7f94ec690be0>],
             '$const0.44': [<numba.core.ir.Assign object at 0x7f94ec690e48>],
             '$const0.49': [<numba.core.ir.Assign object at 0x7f94ec6a92b0>],
             '$const0.52': [<numba.core.ir.Assign object at 0x7f94ec6a9518>],
             '$const0.59': [<numba.core.ir.Assign object at 0x7f94ec6a9ac8>],
             '$const0.61': [<numba.core.ir.Assign object at 0x7f94ec6a9cc0>],
             '$const0.65': [<numba.core.ir.Assign object at 0x7f94ec676048>],
             '$const0.69': [<numba.core.ir.Assign object at 0x7f94ec676390>],
             '$const0.7': [<numba.core.ir.Assign object at 0x7f94ec6af9e8>],
             '$const0.72': [<numba.core.ir.Assign object at 0x7f94ec6765f8>],
             '$const0.77': [<numba.core.ir.Assign object at 0x7f94ec676a20>],
             '$const0.80': [<numba.core.ir.Assign object at 0x7f94ec676c88>],
             '$const0.85': [<numba.core.ir.Assign object at 0x7f94ec6770f0>],
             '$const0.88': [<numba.core.ir.Assign object at 0x7f94ec677358>],
             '$const0.9': [<numba.core.ir.Assign object at 0x7f94ec6ae080>],
             '$const0.95': [<numba.core.ir.Assign object at 0x7f94ec677908>],
             '$const0.97': [<numba.core.ir.Assign object at 0x7f94ec677b00>],
             'q1': [<numba.core.ir.Assign object at 0x7f94ec6afcf8>],
             'q2': [<numba.core.ir.Assign object at 0x7f94ec6afd30>],
             'q2norm': [<numba.core.ir.Assign object at 0x7f94ec6aec50>],
             'qout': [<numba.core.ir.Assign object at 0x7f94ec6afb00>]})
2022-01-24 14:08:58,667 DEBUG SSA violators set()
2022-01-24 14:08:58,930 DEBUG label 0:
    s = arg(0, name=s)                       ['s']
    q = arg(1, name=q)                       ['q']
    qout = arg(2, name=qout)                 ['qout']
    $const0.3 = const(int, 0)                ['$const0.3']
    $0.4 = getitem(value=q, index=$const0.3, fn=<built-in function getitem>) ['$0.4', '$const0.3', 'q']
    $0.5 = s * $0.4                          ['$0.4', '$0.5', 's']
    $const0.7 = const(int, 0)                ['$const0.7']
    qout[$const0.7] = $0.5                   ['$0.5', '$const0.7', 'qout']
    $const0.10 = const(int, 1)               ['$const0.10']
    $0.11 = getitem(value=q, index=$const0.10, fn=<built-in function getitem>) ['$0.11', '$const0.10', 'q']
    $0.12 = s * $0.11                        ['$0.11', '$0.12', 's']
    $const0.14 = const(int, 1)               ['$const0.14']
    qout[$const0.14] = $0.12                 ['$0.12', '$const0.14', 'qout']
    $const0.17 = const(int, 2)               ['$const0.17']
    $0.18 = getitem(value=q, index=$const0.17, fn=<built-in function getitem>) ['$0.18', '$const0.17', 'q']
    $0.19 = s * $0.18                        ['$0.18', '$0.19', 's']
    $const0.21 = const(int, 2)               ['$const0.21']
    qout[$const0.21] = $0.19                 ['$0.19', '$const0.21', 'qout']
    $const0.24 = const(int, 3)               ['$const0.24']
    $0.25 = getitem(value=q, index=$const0.24, fn=<built-in function getitem>) ['$0.25', '$const0.24', 'q']
    $0.26 = s * $0.25                        ['$0.25', '$0.26', 's']
    $const0.28 = const(int, 3)               ['$const0.28']
    qout[$const0.28] = $0.26                 ['$0.26', '$const0.28', 'qout']
    $const0.29 = const(NoneType, None)       ['$const0.29']
    $0.30 = cast(value=$const0.29)           ['$0.30', '$const0.29']
    return $0.30                             ['$0.30']

2022-01-24 14:08:58,932 DEBUG ==== SSA block analysis pass on 0
2022-01-24 14:08:58,932 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb4db898>
2022-01-24 14:08:58,932 DEBUG on stmt: s = arg(0, name=s)
2022-01-24 14:08:58,932 DEBUG on stmt: q = arg(1, name=q)
2022-01-24 14:08:58,932 DEBUG on stmt: qout = arg(2, name=qout)
2022-01-24 14:08:58,932 DEBUG on stmt: $const0.3 = const(int, 0)
2022-01-24 14:08:58,932 DEBUG on stmt: $0.4 = static_getitem(value=q, index=0, index_var=$const0.3, fn=<built-in function getitem>)
2022-01-24 14:08:58,932 DEBUG on stmt: $0.5 = s * $0.4
2022-01-24 14:08:58,932 DEBUG on stmt: $const0.7 = const(int, 0)
2022-01-24 14:08:58,932 DEBUG on stmt: qout[0] = $0.5
2022-01-24 14:08:58,933 DEBUG on stmt: $const0.10 = const(int, 1)
2022-01-24 14:08:58,933 DEBUG on stmt: $0.11 = static_getitem(value=q, index=1, index_var=$const0.10, fn=<built-in function getitem>)
2022-01-24 14:08:58,933 DEBUG on stmt: $0.12 = s * $0.11
2022-01-24 14:08:58,933 DEBUG on stmt: $const0.14 = const(int, 1)
2022-01-24 14:08:58,933 DEBUG on stmt: qout[1] = $0.12
2022-01-24 14:08:58,933 DEBUG on stmt: $const0.17 = const(int, 2)
2022-01-24 14:08:58,933 DEBUG on stmt: $0.18 = static_getitem(value=q, index=2, index_var=$const0.17, fn=<built-in function getitem>)
2022-01-24 14:08:58,933 DEBUG on stmt: $0.19 = s * $0.18
2022-01-24 14:08:58,933 DEBUG on stmt: $const0.21 = const(int, 2)
2022-01-24 14:08:58,933 DEBUG on stmt: qout[2] = $0.19
2022-01-24 14:08:58,933 DEBUG on stmt: $const0.24 = const(int, 3)
2022-01-24 14:08:58,933 DEBUG on stmt: $0.25 = static_getitem(value=q, index=3, index_var=$const0.24, fn=<built-in function getitem>)
2022-01-24 14:08:58,933 DEBUG on stmt: $0.26 = s * $0.25
2022-01-24 14:08:58,933 DEBUG on stmt: $const0.28 = const(int, 3)
2022-01-24 14:08:58,933 DEBUG on stmt: qout[3] = $0.26
2022-01-24 14:08:58,933 DEBUG on stmt: $const0.29 = const(NoneType, None)
2022-01-24 14:08:58,934 DEBUG on stmt: $0.30 = cast(value=$const0.29)
2022-01-24 14:08:58,934 DEBUG on stmt: return $0.30
2022-01-24 14:08:58,934 DEBUG defs defaultdict(<class 'list'>,
            {'$0.11': [<numba.core.ir.Assign object at 0x7f94eb4f0438>],
             '$0.12': [<numba.core.ir.Assign object at 0x7f94eb4dbbe0>],
             '$0.18': [<numba.core.ir.Assign object at 0x7f94eb4f04a8>],
             '$0.19': [<numba.core.ir.Assign object at 0x7f94eb4db940>],
             '$0.25': [<numba.core.ir.Assign object at 0x7f94eb4f0588>],
             '$0.26': [<numba.core.ir.Assign object at 0x7f94eb4f06a0>],
             '$0.30': [<numba.core.ir.Assign object at 0x7f94eb4f0b70>],
             '$0.4': [<numba.core.ir.Assign object at 0x7f94eb4f0f98>],
             '$0.5': [<numba.core.ir.Assign object at 0x7f94eb4db4a8>],
             '$const0.10': [<numba.core.ir.Assign object at 0x7f94eb4dbf98>],
             '$const0.14': [<numba.core.ir.Assign object at 0x7f94eb4dbd30>],
             '$const0.17': [<numba.core.ir.Assign object at 0x7f94eb4db908>],
             '$const0.21': [<numba.core.ir.Assign object at 0x7f94eb4f0e48>],
             '$const0.24': [<numba.core.ir.Assign object at 0x7f94eb4f0208>],
             '$const0.28': [<numba.core.ir.Assign object at 0x7f94eb4f07b8>],
             '$const0.29': [<numba.core.ir.Assign object at 0x7f94eb4f0908>],
             '$const0.3': [<numba.core.ir.Assign object at 0x7f94eb4db7b8>],
             '$const0.7': [<numba.core.ir.Assign object at 0x7f94eb4db0b8>],
             'q': [<numba.core.ir.Assign object at 0x7f94ec252e80>],
             'qout': [<numba.core.ir.Assign object at 0x7f94ec252f28>],
             's': [<numba.core.ir.Assign object at 0x7f94ec252dd8>]})
2022-01-24 14:08:58,934 DEBUG SSA violators set()
2022-01-24 14:08:59,013 DEBUG label 0:
    s = arg(0, name=s)                       ['s']
    q = arg(1, name=q)                       ['q']
    qout = arg(2, name=qout)                 ['qout']
    $const0.2 = const(int, 0)                ['$const0.2']
    $0.3 = getitem(value=q, index=$const0.2, fn=<built-in function getitem>) ['$0.3', '$const0.2', 'q']
    $const0.4 = const(int, 2)                ['$const0.4']
    $0.5 = $0.3 ** $const0.4                 ['$0.3', '$0.5', '$const0.4']
    $const0.7 = const(int, 1)                ['$const0.7']
    $0.8 = getitem(value=q, index=$const0.7, fn=<built-in function getitem>) ['$0.8', '$const0.7', 'q']
    $const0.9 = const(int, 2)                ['$const0.9']
    $0.10 = $0.8 ** $const0.9                ['$0.10', '$0.8', '$const0.9']
    $0.11 = $0.5 + $0.10                     ['$0.10', '$0.11', '$0.5']
    $const0.13 = const(int, 2)               ['$const0.13']
    $0.14 = getitem(value=q, index=$const0.13, fn=<built-in function getitem>) ['$0.14', '$const0.13', 'q']
    $const0.15 = const(int, 2)               ['$const0.15']
    $0.16 = $0.14 ** $const0.15              ['$0.14', '$0.16', '$const0.15']
    $0.17 = $0.11 + $0.16                    ['$0.11', '$0.16', '$0.17']
    $const0.19 = const(int, 3)               ['$const0.19']
    $0.20 = getitem(value=q, index=$const0.19, fn=<built-in function getitem>) ['$0.20', '$const0.19', 'q']
    $const0.21 = const(int, 2)               ['$const0.21']
    $0.22 = $0.20 ** $const0.21              ['$0.20', '$0.22', '$const0.21']
    qnorm = $0.17 + $0.22                    ['$0.17', '$0.22', 'qnorm']
    $const0.26 = const(int, 0)               ['$const0.26']
    $0.27 = getitem(value=q, index=$const0.26, fn=<built-in function getitem>) ['$0.27', '$const0.26', 'q']
    $0.28 = s * $0.27                        ['$0.27', '$0.28', 's']
    $0.30 = $0.28 / qnorm                    ['$0.28', '$0.30', 'qnorm']
    $const0.32 = const(int, 0)               ['$const0.32']
    qout[$const0.32] = $0.30                 ['$0.30', '$const0.32', 'qout']
    $0.34 = unary(fn=<built-in function neg>, value=s) ['$0.34', 's']
    $const0.36 = const(int, 1)               ['$const0.36']
    $0.37 = getitem(value=q, index=$const0.36, fn=<built-in function getitem>) ['$0.37', '$const0.36', 'q']
    $0.38 = $0.34 * $0.37                    ['$0.34', '$0.37', '$0.38']
    $0.40 = $0.38 / qnorm                    ['$0.38', '$0.40', 'qnorm']
    $const0.42 = const(int, 1)               ['$const0.42']
    qout[$const0.42] = $0.40                 ['$0.40', '$const0.42', 'qout']
    $0.44 = unary(fn=<built-in function neg>, value=s) ['$0.44', 's']
    $const0.46 = const(int, 2)               ['$const0.46']
    $0.47 = getitem(value=q, index=$const0.46, fn=<built-in function getitem>) ['$0.47', '$const0.46', 'q']
    $0.48 = $0.44 * $0.47                    ['$0.44', '$0.47', '$0.48']
    $0.50 = $0.48 / qnorm                    ['$0.48', '$0.50', 'qnorm']
    $const0.52 = const(int, 2)               ['$const0.52']
    qout[$const0.52] = $0.50                 ['$0.50', '$const0.52', 'qout']
    $0.54 = unary(fn=<built-in function neg>, value=s) ['$0.54', 's']
    $const0.56 = const(int, 3)               ['$const0.56']
    $0.57 = getitem(value=q, index=$const0.56, fn=<built-in function getitem>) ['$0.57', '$const0.56', 'q']
    $0.58 = $0.54 * $0.57                    ['$0.54', '$0.57', '$0.58']
    $0.60 = $0.58 / qnorm                    ['$0.58', '$0.60', 'qnorm']
    $const0.62 = const(int, 3)               ['$const0.62']
    qout[$const0.62] = $0.60                 ['$0.60', '$const0.62', 'qout']
    $const0.63 = const(NoneType, None)       ['$const0.63']
    $0.64 = cast(value=$const0.63)           ['$0.64', '$const0.63']
    return $0.64                             ['$0.64']

2022-01-24 14:08:59,017 DEBUG ==== SSA block analysis pass on 0
2022-01-24 14:08:59,017 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ec04d438>
2022-01-24 14:08:59,017 DEBUG on stmt: s = arg(0, name=s)
2022-01-24 14:08:59,017 DEBUG on stmt: q = arg(1, name=q)
2022-01-24 14:08:59,017 DEBUG on stmt: qout = arg(2, name=qout)
2022-01-24 14:08:59,017 DEBUG on stmt: $const0.2 = const(int, 0)
2022-01-24 14:08:59,017 DEBUG on stmt: $0.3 = static_getitem(value=q, index=0, index_var=$const0.2, fn=<built-in function getitem>)
2022-01-24 14:08:59,017 DEBUG on stmt: $const0.4 = const(int, 2)
2022-01-24 14:08:59,017 DEBUG on stmt: $0.5 = $0.3 ** $const0.4
2022-01-24 14:08:59,017 DEBUG on stmt: $const0.7 = const(int, 1)
2022-01-24 14:08:59,017 DEBUG on stmt: $0.8 = static_getitem(value=q, index=1, index_var=$const0.7, fn=<built-in function getitem>)
2022-01-24 14:08:59,018 DEBUG on stmt: $const0.9 = const(int, 2)
2022-01-24 14:08:59,018 DEBUG on stmt: $0.10 = $0.8 ** $const0.9
2022-01-24 14:08:59,018 DEBUG on stmt: $0.11 = $0.5 + $0.10
2022-01-24 14:08:59,018 DEBUG on stmt: $const0.13 = const(int, 2)
2022-01-24 14:08:59,018 DEBUG on stmt: $0.14 = static_getitem(value=q, index=2, index_var=$const0.13, fn=<built-in function getitem>)
2022-01-24 14:08:59,018 DEBUG on stmt: $const0.15 = const(int, 2)
2022-01-24 14:08:59,018 DEBUG on stmt: $0.16 = $0.14 ** $const0.15
2022-01-24 14:08:59,018 DEBUG on stmt: $0.17 = $0.11 + $0.16
2022-01-24 14:08:59,018 DEBUG on stmt: $const0.19 = const(int, 3)
2022-01-24 14:08:59,018 DEBUG on stmt: $0.20 = static_getitem(value=q, index=3, index_var=$const0.19, fn=<built-in function getitem>)
2022-01-24 14:08:59,018 DEBUG on stmt: $const0.21 = const(int, 2)
2022-01-24 14:08:59,018 DEBUG on stmt: $0.22 = $0.20 ** $const0.21
2022-01-24 14:08:59,018 DEBUG on stmt: qnorm = $0.17 + $0.22
2022-01-24 14:08:59,018 DEBUG on stmt: $const0.26 = const(int, 0)
2022-01-24 14:08:59,018 DEBUG on stmt: $0.27 = static_getitem(value=q, index=0, index_var=$const0.26, fn=<built-in function getitem>)
2022-01-24 14:08:59,018 DEBUG on stmt: $0.28 = s * $0.27
2022-01-24 14:08:59,018 DEBUG on stmt: $0.30 = $0.28 / qnorm
2022-01-24 14:08:59,018 DEBUG on stmt: $const0.32 = const(int, 0)
2022-01-24 14:08:59,018 DEBUG on stmt: qout[0] = $0.30
2022-01-24 14:08:59,018 DEBUG on stmt: $0.34 = unary(fn=<built-in function neg>, value=s)
2022-01-24 14:08:59,018 DEBUG on stmt: $const0.36 = const(int, 1)
2022-01-24 14:08:59,018 DEBUG on stmt: $0.37 = static_getitem(value=q, index=1, index_var=$const0.36, fn=<built-in function getitem>)
2022-01-24 14:08:59,018 DEBUG on stmt: $0.38 = $0.34 * $0.37
2022-01-24 14:08:59,018 DEBUG on stmt: $0.40 = $0.38 / qnorm
2022-01-24 14:08:59,018 DEBUG on stmt: $const0.42 = const(int, 1)
2022-01-24 14:08:59,018 DEBUG on stmt: qout[1] = $0.40
2022-01-24 14:08:59,018 DEBUG on stmt: $0.44 = unary(fn=<built-in function neg>, value=s)
2022-01-24 14:08:59,019 DEBUG on stmt: $const0.46 = const(int, 2)
2022-01-24 14:08:59,019 DEBUG on stmt: $0.47 = static_getitem(value=q, index=2, index_var=$const0.46, fn=<built-in function getitem>)
2022-01-24 14:08:59,019 DEBUG on stmt: $0.48 = $0.44 * $0.47
2022-01-24 14:08:59,019 DEBUG on stmt: $0.50 = $0.48 / qnorm
2022-01-24 14:08:59,019 DEBUG on stmt: $const0.52 = const(int, 2)
2022-01-24 14:08:59,019 DEBUG on stmt: qout[2] = $0.50
2022-01-24 14:08:59,019 DEBUG on stmt: $0.54 = unary(fn=<built-in function neg>, value=s)
2022-01-24 14:08:59,019 DEBUG on stmt: $const0.56 = const(int, 3)
2022-01-24 14:08:59,019 DEBUG on stmt: $0.57 = static_getitem(value=q, index=3, index_var=$const0.56, fn=<built-in function getitem>)
2022-01-24 14:08:59,019 DEBUG on stmt: $0.58 = $0.54 * $0.57
2022-01-24 14:08:59,019 DEBUG on stmt: $0.60 = $0.58 / qnorm
2022-01-24 14:08:59,019 DEBUG on stmt: $const0.62 = const(int, 3)
2022-01-24 14:08:59,019 DEBUG on stmt: qout[3] = $0.60
2022-01-24 14:08:59,019 DEBUG on stmt: $const0.63 = const(NoneType, None)
2022-01-24 14:08:59,019 DEBUG on stmt: $0.64 = cast(value=$const0.63)
2022-01-24 14:08:59,019 DEBUG on stmt: return $0.64
2022-01-24 14:08:59,020 DEBUG defs defaultdict(<class 'list'>,
            {'$0.10': [<numba.core.ir.Assign object at 0x7f94ec04b860>],
             '$0.11': [<numba.core.ir.Assign object at 0x7f94ec04b940>],
             '$0.14': [<numba.core.ir.Assign object at 0x7f94ec0799e8>],
             '$0.16': [<numba.core.ir.Assign object at 0x7f94ec04bd68>],
             '$0.17': [<numba.core.ir.Assign object at 0x7f94ec04be48>],
             '$0.20': [<numba.core.ir.Assign object at 0x7f94ec079a58>],
             '$0.22': [<numba.core.ir.Assign object at 0x7f94ec04d2b0>],
             '$0.27': [<numba.core.ir.Assign object at 0x7f94ec079ac8>],
             '$0.28': [<numba.core.ir.Assign object at 0x7f94ec04d7f0>],
             '$0.3': [<numba.core.ir.Assign object at 0x7f94ec079908>],
             '$0.30': [<numba.core.ir.Assign object at 0x7f94ec04d978>],
             '$0.34': [<numba.core.ir.Assign object at 0x7f94ec04dcf8>],
             '$0.37': [<numba.core.ir.Assign object at 0x7f94ec079b38>],
             '$0.38': [<numba.core.ir.Assign object at 0x7f94ec05b080>],
             '$0.40': [<numba.core.ir.Assign object at 0x7f94ec05b208>],
             '$0.44': [<numba.core.ir.Assign object at 0x7f94ec05b588>],
             '$0.47': [<numba.core.ir.Assign object at 0x7f94ec079ba8>],
             '$0.48': [<numba.core.ir.Assign object at 0x7f94ec05b8d0>],
             '$0.5': [<numba.core.ir.Assign object at 0x7f94ec04b438>],
             '$0.50': [<numba.core.ir.Assign object at 0x7f94ec05ba58>],
             '$0.54': [<numba.core.ir.Assign object at 0x7f94ec05bdd8>],
             '$0.57': [<numba.core.ir.Assign object at 0x7f94ec079c18>],
             '$0.58': [<numba.core.ir.Assign object at 0x7f94ec079160>],
             '$0.60': [<numba.core.ir.Assign object at 0x7f94ec0792e8>],
             '$0.64': [<numba.core.ir.Assign object at 0x7f94ec0796a0>],
             '$0.8': [<numba.core.ir.Assign object at 0x7f94ec079978>],
             '$const0.13': [<numba.core.ir.Assign object at 0x7f94ec04bac8>],
             '$const0.15': [<numba.core.ir.Assign object at 0x7f94ec04bc88>],
             '$const0.19': [<numba.core.ir.Assign object at 0x7f94ec04bfd0>],
             '$const0.2': [<numba.core.ir.Assign object at 0x7f94ec04b198>],
             '$const0.21': [<numba.core.ir.Assign object at 0x7f94ec04d1d0>],
             '$const0.26': [<numba.core.ir.Assign object at 0x7f94ec04d668>],
             '$const0.32': [<numba.core.ir.Assign object at 0x7f94ec04db00>],
             '$const0.36': [<numba.core.ir.Assign object at 0x7f94ec04de80>],
             '$const0.4': [<numba.core.ir.Assign object at 0x7f94ec04b358>],
             '$const0.42': [<numba.core.ir.Assign object at 0x7f94ec05b390>],
             '$const0.46': [<numba.core.ir.Assign object at 0x7f94ec05b710>],
             '$const0.52': [<numba.core.ir.Assign object at 0x7f94ec05bbe0>],
             '$const0.56': [<numba.core.ir.Assign object at 0x7f94ec05bf60>],
             '$const0.62': [<numba.core.ir.Assign object at 0x7f94ec079470>],
             '$const0.63': [<numba.core.ir.Assign object at 0x7f94ec0795c0>],
             '$const0.7': [<numba.core.ir.Assign object at 0x7f94ec04b5c0>],
             '$const0.9': [<numba.core.ir.Assign object at 0x7f94ec04b780>],
             'q': [<numba.core.ir.Assign object at 0x7f94ec25bf28>],
             'qnorm': [<numba.core.ir.Assign object at 0x7f94ec04d390>],
             'qout': [<numba.core.ir.Assign object at 0x7f94ec25bfd0>],
             's': [<numba.core.ir.Assign object at 0x7f94ec25be80>]})
2022-01-24 14:08:59,020 DEBUG SSA violators set()
2022-01-24 14:08:59,128 DEBUG label 0:
    q = arg(0, name=q)                       ['q']
    s = arg(1, name=s)                       ['s']
    qout = arg(2, name=qout)                 ['qout']
    $const0.2 = const(int, 0)                ['$const0.2']
    $0.3 = getitem(value=q, index=$const0.2, fn=<built-in function getitem>) ['$0.3', '$const0.2', 'q']
    $0.5 = $0.3 * s                          ['$0.3', '$0.5', 's']
    $const0.7 = const(int, 0)                ['$const0.7']
    qout[$const0.7] = $0.5                   ['$0.5', '$const0.7', 'qout']
    $const0.9 = const(int, 1)                ['$const0.9']
    $0.10 = getitem(value=q, index=$const0.9, fn=<built-in function getitem>) ['$0.10', '$const0.9', 'q']
    $0.12 = $0.10 * s                        ['$0.10', '$0.12', 's']
    $const0.14 = const(int, 1)               ['$const0.14']
    qout[$const0.14] = $0.12                 ['$0.12', '$const0.14', 'qout']
    $const0.16 = const(int, 2)               ['$const0.16']
    $0.17 = getitem(value=q, index=$const0.16, fn=<built-in function getitem>) ['$0.17', '$const0.16', 'q']
    $0.19 = $0.17 * s                        ['$0.17', '$0.19', 's']
    $const0.21 = const(int, 2)               ['$const0.21']
    qout[$const0.21] = $0.19                 ['$0.19', '$const0.21', 'qout']
    $const0.23 = const(int, 3)               ['$const0.23']
    $0.24 = getitem(value=q, index=$const0.23, fn=<built-in function getitem>) ['$0.24', '$const0.23', 'q']
    $0.26 = $0.24 * s                        ['$0.24', '$0.26', 's']
    $const0.28 = const(int, 3)               ['$const0.28']
    qout[$const0.28] = $0.26                 ['$0.26', '$const0.28', 'qout']
    $const0.29 = const(NoneType, None)       ['$const0.29']
    $0.30 = cast(value=$const0.29)           ['$0.30', '$const0.29']
    return $0.30                             ['$0.30']

2022-01-24 14:08:59,131 DEBUG ==== SSA block analysis pass on 0
2022-01-24 14:08:59,131 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb657a20>
2022-01-24 14:08:59,131 DEBUG on stmt: q = arg(0, name=q)
2022-01-24 14:08:59,131 DEBUG on stmt: s = arg(1, name=s)
2022-01-24 14:08:59,131 DEBUG on stmt: qout = arg(2, name=qout)
2022-01-24 14:08:59,131 DEBUG on stmt: $const0.2 = const(int, 0)
2022-01-24 14:08:59,131 DEBUG on stmt: $0.3 = static_getitem(value=q, index=0, index_var=$const0.2, fn=<built-in function getitem>)
2022-01-24 14:08:59,131 DEBUG on stmt: $0.5 = $0.3 * s
2022-01-24 14:08:59,131 DEBUG on stmt: $const0.7 = const(int, 0)
2022-01-24 14:08:59,131 DEBUG on stmt: qout[0] = $0.5
2022-01-24 14:08:59,131 DEBUG on stmt: $const0.9 = const(int, 1)
2022-01-24 14:08:59,131 DEBUG on stmt: $0.10 = static_getitem(value=q, index=1, index_var=$const0.9, fn=<built-in function getitem>)
2022-01-24 14:08:59,131 DEBUG on stmt: $0.12 = $0.10 * s
2022-01-24 14:08:59,131 DEBUG on stmt: $const0.14 = const(int, 1)
2022-01-24 14:08:59,131 DEBUG on stmt: qout[1] = $0.12
2022-01-24 14:08:59,131 DEBUG on stmt: $const0.16 = const(int, 2)
2022-01-24 14:08:59,131 DEBUG on stmt: $0.17 = static_getitem(value=q, index=2, index_var=$const0.16, fn=<built-in function getitem>)
2022-01-24 14:08:59,132 DEBUG on stmt: $0.19 = $0.17 * s
2022-01-24 14:08:59,132 DEBUG on stmt: $const0.21 = const(int, 2)
2022-01-24 14:08:59,132 DEBUG on stmt: qout[2] = $0.19
2022-01-24 14:08:59,132 DEBUG on stmt: $const0.23 = const(int, 3)
2022-01-24 14:08:59,132 DEBUG on stmt: $0.24 = static_getitem(value=q, index=3, index_var=$const0.23, fn=<built-in function getitem>)
2022-01-24 14:08:59,132 DEBUG on stmt: $0.26 = $0.24 * s
2022-01-24 14:08:59,132 DEBUG on stmt: $const0.28 = const(int, 3)
2022-01-24 14:08:59,132 DEBUG on stmt: qout[3] = $0.26
2022-01-24 14:08:59,132 DEBUG on stmt: $const0.29 = const(NoneType, None)
2022-01-24 14:08:59,132 DEBUG on stmt: $0.30 = cast(value=$const0.29)
2022-01-24 14:08:59,132 DEBUG on stmt: return $0.30
2022-01-24 14:08:59,132 DEBUG defs defaultdict(<class 'list'>,
            {'$0.10': [<numba.core.ir.Assign object at 0x7f94ec0f42e8>],
             '$0.12': [<numba.core.ir.Assign object at 0x7f94ec0c4f28>],
             '$0.17': [<numba.core.ir.Assign object at 0x7f94ec0f4358>],
             '$0.19': [<numba.core.ir.Assign object at 0x7f94ec0d6550>],
             '$0.24': [<numba.core.ir.Assign object at 0x7f94ec0f43c8>],
             '$0.26': [<numba.core.ir.Assign object at 0x7f94ec0d6b38>],
             '$0.3': [<numba.core.ir.Assign object at 0x7f94ec0f4278>],
             '$0.30': [<numba.core.ir.Assign object at 0x7f94ec0d6ef0>],
             '$0.5': [<numba.core.ir.Assign object at 0x7f94ec0c4940>],
             '$const0.14': [<numba.core.ir.Assign object at 0x7f94ec0d60f0>],
             '$const0.16': [<numba.core.ir.Assign object at 0x7f94ec0d62e8>],
             '$const0.2': [<numba.core.ir.Assign object at 0x7f94ec0c46d8>],
             '$const0.21': [<numba.core.ir.Assign object at 0x7f94ec0d66d8>],
             '$const0.23': [<numba.core.ir.Assign object at 0x7f94ec0d68d0>],
             '$const0.28': [<numba.core.ir.Assign object at 0x7f94ec0d6cc0>],
             '$const0.29': [<numba.core.ir.Assign object at 0x7f94ec0d6e10>],
             '$const0.7': [<numba.core.ir.Assign object at 0x7f94ec0c4ac8>],
             '$const0.9': [<numba.core.ir.Assign object at 0x7f94ec0c4cc0>],
             'q': [<numba.core.ir.Assign object at 0x7f94ec0c4400>],
             'qout': [<numba.core.ir.Assign object at 0x7f94ec0c4550>],
             's': [<numba.core.ir.Assign object at 0x7f94ec0c44a8>]})
2022-01-24 14:08:59,132 DEBUG SSA violators set()
2022-01-24 14:08:59,221 DEBUG label 0:
    q = arg(0, name=q)                       ['q']
    s = arg(1, name=s)                       ['s']
    qout = arg(2, name=qout)                 ['qout']
    $const0.2 = const(int, 0)                ['$const0.2']
    $0.3 = getitem(value=q, index=$const0.2, fn=<built-in function getitem>) ['$0.3', '$const0.2', 'q']
    $0.5 = $0.3 / s                          ['$0.3', '$0.5', 's']
    $const0.7 = const(int, 0)                ['$const0.7']
    qout[$const0.7] = $0.5                   ['$0.5', '$const0.7', 'qout']
    $const0.9 = const(int, 1)                ['$const0.9']
    $0.10 = getitem(value=q, index=$const0.9, fn=<built-in function getitem>) ['$0.10', '$const0.9', 'q']
    $0.12 = $0.10 / s                        ['$0.10', '$0.12', 's']
    $const0.14 = const(int, 1)               ['$const0.14']
    qout[$const0.14] = $0.12                 ['$0.12', '$const0.14', 'qout']
    $const0.16 = const(int, 2)               ['$const0.16']
    $0.17 = getitem(value=q, index=$const0.16, fn=<built-in function getitem>) ['$0.17', '$const0.16', 'q']
    $0.19 = $0.17 / s                        ['$0.17', '$0.19', 's']
    $const0.21 = const(int, 2)               ['$const0.21']
    qout[$const0.21] = $0.19                 ['$0.19', '$const0.21', 'qout']
    $const0.23 = const(int, 3)               ['$const0.23']
    $0.24 = getitem(value=q, index=$const0.23, fn=<built-in function getitem>) ['$0.24', '$const0.23', 'q']
    $0.26 = $0.24 / s                        ['$0.24', '$0.26', 's']
    $const0.28 = const(int, 3)               ['$const0.28']
    qout[$const0.28] = $0.26                 ['$0.26', '$const0.28', 'qout']
    $const0.29 = const(NoneType, None)       ['$const0.29']
    $0.30 = cast(value=$const0.29)           ['$0.30', '$const0.29']
    return $0.30                             ['$0.30']

2022-01-24 14:08:59,225 DEBUG ==== SSA block analysis pass on 0
2022-01-24 14:08:59,225 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb5f67b8>
2022-01-24 14:08:59,225 DEBUG on stmt: q = arg(0, name=q)
2022-01-24 14:08:59,225 DEBUG on stmt: s = arg(1, name=s)
2022-01-24 14:08:59,225 DEBUG on stmt: qout = arg(2, name=qout)
2022-01-24 14:08:59,225 DEBUG on stmt: $const0.2 = const(int, 0)
2022-01-24 14:08:59,225 DEBUG on stmt: $0.3 = static_getitem(value=q, index=0, index_var=$const0.2, fn=<built-in function getitem>)
2022-01-24 14:08:59,225 DEBUG on stmt: $0.5 = $0.3 / s
2022-01-24 14:08:59,225 DEBUG on stmt: $const0.7 = const(int, 0)
2022-01-24 14:08:59,225 DEBUG on stmt: qout[0] = $0.5
2022-01-24 14:08:59,225 DEBUG on stmt: $const0.9 = const(int, 1)
2022-01-24 14:08:59,225 DEBUG on stmt: $0.10 = static_getitem(value=q, index=1, index_var=$const0.9, fn=<built-in function getitem>)
2022-01-24 14:08:59,225 DEBUG on stmt: $0.12 = $0.10 / s
2022-01-24 14:08:59,225 DEBUG on stmt: $const0.14 = const(int, 1)
2022-01-24 14:08:59,226 DEBUG on stmt: qout[1] = $0.12
2022-01-24 14:08:59,226 DEBUG on stmt: $const0.16 = const(int, 2)
2022-01-24 14:08:59,226 DEBUG on stmt: $0.17 = static_getitem(value=q, index=2, index_var=$const0.16, fn=<built-in function getitem>)
2022-01-24 14:08:59,226 DEBUG on stmt: $0.19 = $0.17 / s
2022-01-24 14:08:59,226 DEBUG on stmt: $const0.21 = const(int, 2)
2022-01-24 14:08:59,226 DEBUG on stmt: qout[2] = $0.19
2022-01-24 14:08:59,226 DEBUG on stmt: $const0.23 = const(int, 3)
2022-01-24 14:08:59,226 DEBUG on stmt: $0.24 = static_getitem(value=q, index=3, index_var=$const0.23, fn=<built-in function getitem>)
2022-01-24 14:08:59,226 DEBUG on stmt: $0.26 = $0.24 / s
2022-01-24 14:08:59,226 DEBUG on stmt: $const0.28 = const(int, 3)
2022-01-24 14:08:59,226 DEBUG on stmt: qout[3] = $0.26
2022-01-24 14:08:59,226 DEBUG on stmt: $const0.29 = const(NoneType, None)
2022-01-24 14:08:59,226 DEBUG on stmt: $0.30 = cast(value=$const0.29)
2022-01-24 14:08:59,226 DEBUG on stmt: return $0.30
2022-01-24 14:08:59,226 DEBUG defs defaultdict(<class 'list'>,
            {'$0.10': [<numba.core.ir.Assign object at 0x7f94eb5d4a58>],
             '$0.12': [<numba.core.ir.Assign object at 0x7f94eb5f6978>],
             '$0.17': [<numba.core.ir.Assign object at 0x7f94eb5d4b38>],
             '$0.19': [<numba.core.ir.Assign object at 0x7f94eb5f6fd0>],
             '$0.24': [<numba.core.ir.Assign object at 0x7f94eb5d4ac8>],
             '$0.26': [<numba.core.ir.Assign object at 0x7f94eb5d4160>],
             '$0.3': [<numba.core.ir.Assign object at 0x7f94eb5d49b0>],
             '$0.30': [<numba.core.ir.Assign object at 0x7f94eb5d46d8>],
             '$0.5': [<numba.core.ir.Assign object at 0x7f94eb5f6470>],
             '$const0.14': [<numba.core.ir.Assign object at 0x7f94eb5f6ba8>],
             '$const0.16': [<numba.core.ir.Assign object at 0x7f94eb5f6d68>],
             '$const0.2': [<numba.core.ir.Assign object at 0x7f94eb5dde80>],
             '$const0.21': [<numba.core.ir.Assign object at 0x7f94eb5f65c0>],
             '$const0.23': [<numba.core.ir.Assign object at 0x7f94eb5d40b8>],
             '$const0.28': [<numba.core.ir.Assign object at 0x7f94eb5d44a8>],
             '$const0.29': [<numba.core.ir.Assign object at 0x7f94eb5d4668>],
             '$const0.7': [<numba.core.ir.Assign object at 0x7f94eb5f6278>],
             '$const0.9': [<numba.core.ir.Assign object at 0x7f94eb5f6518>],
             'q': [<numba.core.ir.Assign object at 0x7f94eb5ddba8>],
             'qout': [<numba.core.ir.Assign object at 0x7f94eb5ddcf8>],
             's': [<numba.core.ir.Assign object at 0x7f94eb5ddc50>]})
2022-01-24 14:08:59,226 DEBUG SSA violators set()
2022-01-24 14:08:59,303 DEBUG label 0:
    q = arg(0, name=q)                       ['q']
    qout = arg(1, name=qout)                 ['qout']
    $const0.2 = const(int, 0)                ['$const0.2']
    $0.3 = getitem(value=q, index=$const0.2, fn=<built-in function getitem>) ['$0.3', '$const0.2', 'q']
    $0.4 = unary(fn=<built-in function neg>, value=$0.3) ['$0.3', '$0.4']
    $const0.6 = const(int, 0)                ['$const0.6']
    qout[$const0.6] = $0.4                   ['$0.4', '$const0.6', 'qout']
    $const0.8 = const(int, 1)                ['$const0.8']
    $0.9 = getitem(value=q, index=$const0.8, fn=<built-in function getitem>) ['$0.9', '$const0.8', 'q']
    $0.10 = unary(fn=<built-in function neg>, value=$0.9) ['$0.10', '$0.9']
    $const0.12 = const(int, 1)               ['$const0.12']
    qout[$const0.12] = $0.10                 ['$0.10', '$const0.12', 'qout']
    $const0.14 = const(int, 2)               ['$const0.14']
    $0.15 = getitem(value=q, index=$const0.14, fn=<built-in function getitem>) ['$0.15', '$const0.14', 'q']
    $0.16 = unary(fn=<built-in function neg>, value=$0.15) ['$0.15', '$0.16']
    $const0.18 = const(int, 2)               ['$const0.18']
    qout[$const0.18] = $0.16                 ['$0.16', '$const0.18', 'qout']
    $const0.20 = const(int, 3)               ['$const0.20']
    $0.21 = getitem(value=q, index=$const0.20, fn=<built-in function getitem>) ['$0.21', '$const0.20', 'q']
    $0.22 = unary(fn=<built-in function neg>, value=$0.21) ['$0.21', '$0.22']
    $const0.24 = const(int, 3)               ['$const0.24']
    qout[$const0.24] = $0.22                 ['$0.22', '$const0.24', 'qout']
    $const0.25 = const(NoneType, None)       ['$const0.25']
    $0.26 = cast(value=$const0.25)           ['$0.26', '$const0.25']
    return $0.26                             ['$0.26']

2022-01-24 14:08:59,306 DEBUG ==== SSA block analysis pass on 0
2022-01-24 14:08:59,306 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb66dda0>
2022-01-24 14:08:59,306 DEBUG on stmt: q = arg(0, name=q)
2022-01-24 14:08:59,306 DEBUG on stmt: qout = arg(1, name=qout)
2022-01-24 14:08:59,306 DEBUG on stmt: $const0.2 = const(int, 0)
2022-01-24 14:08:59,306 DEBUG on stmt: $0.3 = static_getitem(value=q, index=0, index_var=$const0.2, fn=<built-in function getitem>)
2022-01-24 14:08:59,306 DEBUG on stmt: $0.4 = unary(fn=<built-in function neg>, value=$0.3)
2022-01-24 14:08:59,306 DEBUG on stmt: $const0.6 = const(int, 0)
2022-01-24 14:08:59,306 DEBUG on stmt: qout[0] = $0.4
2022-01-24 14:08:59,306 DEBUG on stmt: $const0.8 = const(int, 1)
2022-01-24 14:08:59,307 DEBUG on stmt: $0.9 = static_getitem(value=q, index=1, index_var=$const0.8, fn=<built-in function getitem>)
2022-01-24 14:08:59,307 DEBUG on stmt: $0.10 = unary(fn=<built-in function neg>, value=$0.9)
2022-01-24 14:08:59,307 DEBUG on stmt: $const0.12 = const(int, 1)
2022-01-24 14:08:59,307 DEBUG on stmt: qout[1] = $0.10
2022-01-24 14:08:59,307 DEBUG on stmt: $const0.14 = const(int, 2)
2022-01-24 14:08:59,307 DEBUG on stmt: $0.15 = static_getitem(value=q, index=2, index_var=$const0.14, fn=<built-in function getitem>)
2022-01-24 14:08:59,307 DEBUG on stmt: $0.16 = unary(fn=<built-in function neg>, value=$0.15)
2022-01-24 14:08:59,307 DEBUG on stmt: $const0.18 = const(int, 2)
2022-01-24 14:08:59,307 DEBUG on stmt: qout[2] = $0.16
2022-01-24 14:08:59,307 DEBUG on stmt: $const0.20 = const(int, 3)
2022-01-24 14:08:59,307 DEBUG on stmt: $0.21 = static_getitem(value=q, index=3, index_var=$const0.20, fn=<built-in function getitem>)
2022-01-24 14:08:59,307 DEBUG on stmt: $0.22 = unary(fn=<built-in function neg>, value=$0.21)
2022-01-24 14:08:59,307 DEBUG on stmt: $const0.24 = const(int, 3)
2022-01-24 14:08:59,307 DEBUG on stmt: qout[3] = $0.22
2022-01-24 14:08:59,307 DEBUG on stmt: $const0.25 = const(NoneType, None)
2022-01-24 14:08:59,307 DEBUG on stmt: $0.26 = cast(value=$const0.25)
2022-01-24 14:08:59,307 DEBUG on stmt: return $0.26
2022-01-24 14:08:59,308 DEBUG defs defaultdict(<class 'list'>,
            {'$0.10': [<numba.core.ir.Assign object at 0x7f94ec667898>],
             '$0.15': [<numba.core.ir.Assign object at 0x7f94eb5cb1d0>],
             '$0.16': [<numba.core.ir.Assign object at 0x7f94eb5d73c8>],
             '$0.21': [<numba.core.ir.Assign object at 0x7f94eb5cb240>],
             '$0.22': [<numba.core.ir.Assign object at 0x7f94eb5d7908>],
             '$0.26': [<numba.core.ir.Assign object at 0x7f94eb5d7cc0>],
             '$0.3': [<numba.core.ir.Assign object at 0x7f94eb5cb0f0>],
             '$0.4': [<numba.core.ir.Assign object at 0x7f94eb64bc50>],
             '$0.9': [<numba.core.ir.Assign object at 0x7f94eb5cb160>],
             '$const0.12': [<numba.core.ir.Assign object at 0x7f94ec667f28>],
             '$const0.14': [<numba.core.ir.Assign object at 0x7f94eb5d7208>],
             '$const0.18': [<numba.core.ir.Assign object at 0x7f94eb5d7550>],
             '$const0.2': [<numba.core.ir.Assign object at 0x7f94eb64ba58>],
             '$const0.20': [<numba.core.ir.Assign object at 0x7f94eb5d7748>],
             '$const0.24': [<numba.core.ir.Assign object at 0x7f94eb5d7a90>],
             '$const0.25': [<numba.core.ir.Assign object at 0x7f94eb5d7be0>],
             '$const0.6': [<numba.core.ir.Assign object at 0x7f94eb64bdd8>],
             '$const0.8': [<numba.core.ir.Assign object at 0x7f94eb64bfd0>],
             'q': [<numba.core.ir.Assign object at 0x7f94eb66d0b8>],
             'qout': [<numba.core.ir.Assign object at 0x7f94eb66d4a8>]})
2022-01-24 14:08:59,308 DEBUG SSA violators set()
2022-01-24 14:08:59,384 DEBUG label 0:
    q = arg(0, name=q)                       ['q']
    qout = arg(1, name=qout)                 ['qout']
    $const0.2 = const(int, 0)                ['$const0.2']
    $0.3 = getitem(value=q, index=$const0.2, fn=<built-in function getitem>) ['$0.3', '$const0.2', 'q']
    $const0.5 = const(int, 0)                ['$const0.5']
    qout[$const0.5] = $0.3                   ['$0.3', '$const0.5', 'qout']
    $const0.7 = const(int, 1)                ['$const0.7']
    $0.8 = getitem(value=q, index=$const0.7, fn=<built-in function getitem>) ['$0.8', '$const0.7', 'q']
    $const0.10 = const(int, 1)               ['$const0.10']
    qout[$const0.10] = $0.8                  ['$0.8', '$const0.10', 'qout']
    $const0.12 = const(int, 2)               ['$const0.12']
    $0.13 = getitem(value=q, index=$const0.12, fn=<built-in function getitem>) ['$0.13', '$const0.12', 'q']
    $const0.15 = const(int, 2)               ['$const0.15']
    qout[$const0.15] = $0.13                 ['$0.13', '$const0.15', 'qout']
    $const0.17 = const(int, 3)               ['$const0.17']
    $0.18 = getitem(value=q, index=$const0.17, fn=<built-in function getitem>) ['$0.18', '$const0.17', 'q']
    $const0.20 = const(int, 3)               ['$const0.20']
    qout[$const0.20] = $0.18                 ['$0.18', '$const0.20', 'qout']
    $const0.21 = const(NoneType, None)       ['$const0.21']
    $0.22 = cast(value=$const0.21)           ['$0.22', '$const0.21']
    return $0.22                             ['$0.22']

2022-01-24 14:08:59,386 DEBUG ==== SSA block analysis pass on 0
2022-01-24 14:08:59,387 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb5a1860>
2022-01-24 14:08:59,387 DEBUG on stmt: q = arg(0, name=q)
2022-01-24 14:08:59,387 DEBUG on stmt: qout = arg(1, name=qout)
2022-01-24 14:08:59,387 DEBUG on stmt: $const0.2 = const(int, 0)
2022-01-24 14:08:59,387 DEBUG on stmt: $0.3 = static_getitem(value=q, index=0, index_var=$const0.2, fn=<built-in function getitem>)
2022-01-24 14:08:59,387 DEBUG on stmt: $const0.5 = const(int, 0)
2022-01-24 14:08:59,387 DEBUG on stmt: qout[0] = $0.3
2022-01-24 14:08:59,387 DEBUG on stmt: $const0.7 = const(int, 1)
2022-01-24 14:08:59,387 DEBUG on stmt: $0.8 = static_getitem(value=q, index=1, index_var=$const0.7, fn=<built-in function getitem>)
2022-01-24 14:08:59,387 DEBUG on stmt: $const0.10 = const(int, 1)
2022-01-24 14:08:59,387 DEBUG on stmt: qout[1] = $0.8
2022-01-24 14:08:59,387 DEBUG on stmt: $const0.12 = const(int, 2)
2022-01-24 14:08:59,387 DEBUG on stmt: $0.13 = static_getitem(value=q, index=2, index_var=$const0.12, fn=<built-in function getitem>)
2022-01-24 14:08:59,387 DEBUG on stmt: $const0.15 = const(int, 2)
2022-01-24 14:08:59,387 DEBUG on stmt: qout[2] = $0.13
2022-01-24 14:08:59,387 DEBUG on stmt: $const0.17 = const(int, 3)
2022-01-24 14:08:59,387 DEBUG on stmt: $0.18 = static_getitem(value=q, index=3, index_var=$const0.17, fn=<built-in function getitem>)
2022-01-24 14:08:59,387 DEBUG on stmt: $const0.20 = const(int, 3)
2022-01-24 14:08:59,387 DEBUG on stmt: qout[3] = $0.18
2022-01-24 14:08:59,387 DEBUG on stmt: $const0.21 = const(NoneType, None)
2022-01-24 14:08:59,387 DEBUG on stmt: $0.22 = cast(value=$const0.21)
2022-01-24 14:08:59,387 DEBUG on stmt: return $0.22
2022-01-24 14:08:59,388 DEBUG defs defaultdict(<class 'list'>,
            {'$0.13': [<numba.core.ir.Assign object at 0x7f94eb5be4e0>],
             '$0.18': [<numba.core.ir.Assign object at 0x7f94eb5be550>],
             '$0.22': [<numba.core.ir.Assign object at 0x7f94eb5a1f98>],
             '$0.3': [<numba.core.ir.Assign object at 0x7f94eb5be400>],
             '$0.8': [<numba.core.ir.Assign object at 0x7f94eb5be470>],
             '$const0.10': [<numba.core.ir.Assign object at 0x7f94eb5a14e0>],
             '$const0.12': [<numba.core.ir.Assign object at 0x7f94eb5a16d8>],
             '$const0.15': [<numba.core.ir.Assign object at 0x7f94eb5a1940>],
             '$const0.17': [<numba.core.ir.Assign object at 0x7f94eb5a1b38>],
             '$const0.2': [<numba.core.ir.Assign object at 0x7f94eb5b5dd8>],
             '$const0.20': [<numba.core.ir.Assign object at 0x7f94eb5a1d68>],
             '$const0.21': [<numba.core.ir.Assign object at 0x7f94eb5a1eb8>],
             '$const0.5': [<numba.core.ir.Assign object at 0x7f94eb5a1080>],
             '$const0.7': [<numba.core.ir.Assign object at 0x7f94eb5a1278>],
             'q': [<numba.core.ir.Assign object at 0x7f94eb5b5ba8>],
             'qout': [<numba.core.ir.Assign object at 0x7f94eb5b5c50>]})
2022-01-24 14:08:59,388 DEBUG SSA violators set()
2022-01-24 14:08:59,475 DEBUG label 0:
    q = arg(0, name=q)                       ['q']
    s = arg(1, name=s)                       ['s']
    qout = arg(2, name=qout)                 ['qout']
    $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$0.1']
    $0.2 = getattr(value=$0.1, attr=sqrt)    ['$0.1', '$0.2']
    $const0.4 = const(int, 1)                ['$const0.4']
    $0.5 = getitem(value=q, index=$const0.4, fn=<built-in function getitem>) ['$0.5', '$const0.4', 'q']
    $const0.6 = const(int, 2)                ['$const0.6']
    $0.7 = $0.5 ** $const0.6                 ['$0.5', '$0.7', '$const0.6']
    $const0.9 = const(int, 2)                ['$const0.9']
    $0.10 = getitem(value=q, index=$const0.9, fn=<built-in function getitem>) ['$0.10', '$const0.9', 'q']
    $const0.11 = const(int, 2)               ['$const0.11']
    $0.12 = $0.10 ** $const0.11              ['$0.10', '$0.12', '$const0.11']
    $0.13 = $0.7 + $0.12                     ['$0.12', '$0.13', '$0.7']
    $const0.15 = const(int, 3)               ['$const0.15']
    $0.16 = getitem(value=q, index=$const0.15, fn=<built-in function getitem>) ['$0.16', '$const0.15', 'q']
    $const0.17 = const(int, 2)               ['$const0.17']
    $0.18 = $0.16 ** $const0.17              ['$0.16', '$0.18', '$const0.17']
    $0.19 = $0.13 + $0.18                    ['$0.13', '$0.18', '$0.19']
    b = call $0.2($0.19, func=$0.2, args=[Var($0.19, algebra.py:150)], kws=(), vararg=None) ['$0.19', '$0.2', 'b']
    $0.21 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$0.21']
    $0.22 = getattr(value=$0.21, attr=abs)   ['$0.21', '$0.22']
    $0.24 = call $0.22(b, func=$0.22, args=[Var(b, algebra.py:150)], kws=(), vararg=None) ['$0.22', '$0.24', 'b']
    $0.25 = global(_quaternion_resolution: 1.0000000000000002e-14) ['$0.25']
    $0.26 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$0.26']
    $0.27 = getattr(value=$0.26, attr=abs)   ['$0.26', '$0.27']
    $const0.29 = const(int, 0)               ['$const0.29']
    $0.30 = getitem(value=q, index=$const0.29, fn=<built-in function getitem>) ['$0.30', '$const0.29', 'q']
    $0.31 = call $0.27($0.30, func=$0.27, args=[Var($0.30, algebra.py:151)], kws=(), vararg=None) ['$0.27', '$0.30', '$0.31']
    $0.32 = $0.25 * $0.31                    ['$0.25', '$0.31', '$0.32']
    $0.33 = $0.24 <= $0.32                   ['$0.24', '$0.32', '$0.33']
    bool70 = global(bool: <class 'bool'>)    ['bool70']
    $70pred = call bool70($0.33, func=bool70, args=(Var($0.33, algebra.py:151),), kws=(), vararg=None) ['$0.33', '$70pred', 'bool70']
    branch $70pred, 72, 234                  ['$70pred']
label 72:
    $const72.2 = const(int, 0)               ['$const72.2']
    $72.3 = getitem(value=q, index=$const72.2, fn=<built-in function getitem>) ['$72.3', '$const72.2', 'q']
    $const72.4 = const(float, 0.0)           ['$const72.4']
    $72.5 = $72.3 < $const72.4               ['$72.3', '$72.5', '$const72.4']
    bool82 = global(bool: <class 'bool'>)    ['bool82']
    $82pred = call bool82($72.5, func=bool82, args=(Var($72.5, algebra.py:152),), kws=(), vararg=None) ['$72.5', '$82pred', 'bool82']
    branch $82pred, 84, 190                  ['$82pred']
label 84:
    $84.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$84.1']
    $84.2 = getattr(value=$84.1, attr=abs)   ['$84.1', '$84.2']
    $const84.4 = const(int, 0)               ['$const84.4']
    $84.5 = getitem(value=q, index=$const84.4, fn=<built-in function getitem>) ['$84.5', '$const84.4', 'q']
    $const84.6 = const(int, 1)               ['$const84.6']
    $84.7 = $84.5 + $const84.6               ['$84.5', '$84.7', '$const84.6']
    $84.8 = call $84.2($84.7, func=$84.2, args=[Var($84.7, algebra.py:153)], kws=(), vararg=None) ['$84.2', '$84.7', '$84.8']
    $84.9 = global(_quaternion_resolution: 1.0000000000000002e-14) ['$84.9']
    $84.10 = $84.8 > $84.9                   ['$84.10', '$84.8', '$84.9']
    bool104 = global(bool: <class 'bool'>)   ['bool104']
    $104pred = call bool104($84.10, func=bool104, args=(Var($84.10, algebra.py:153),), kws=(), vararg=None) ['$104pred', '$84.10', 'bool104']
    branch $104pred, 106, 154                ['$104pred']
label 106:
    $106.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$106.1']
    $106.2 = getattr(value=$106.1, attr=log) ['$106.1', '$106.2']
    $const106.4 = const(int, 0)              ['$const106.4']
    $106.5 = getitem(value=q, index=$const106.4, fn=<built-in function getitem>) ['$106.5', '$const106.4', 'q']
    $106.6 = unary(fn=<built-in function neg>, value=$106.5) ['$106.5', '$106.6']
    $106.7 = call $106.2($106.6, func=$106.2, args=[Var($106.6, algebra.py:154)], kws=(), vararg=None) ['$106.2', '$106.6', '$106.7']
    $const106.9 = const(int, 0)              ['$const106.9']
    qout[$const106.9] = $106.7               ['$106.7', '$const106.9', 'qout']
    $106.10 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$106.10']
    $106.11 = getattr(value=$106.10, attr=pi) ['$106.10', '$106.11']
    $const106.13 = const(int, 1)             ['$const106.13']
    qout[$const106.13] = $106.11             ['$106.11', '$const106.13', 'qout']
    $const106.14 = const(float, 0.0)         ['$const106.14']
    $const106.16 = const(int, 2)             ['$const106.16']
    qout[$const106.16] = $const106.14        ['$const106.14', '$const106.16', 'qout']
    $const106.17 = const(float, 0.0)         ['$const106.17']
    $const106.19 = const(int, 3)             ['$const106.19']
    qout[$const106.19] = $const106.17        ['$const106.17', '$const106.19', 'qout']
    jump 232                                 []
label 154:
    $const154.1 = const(float, 0.0)          ['$const154.1']
    $const154.3 = const(int, 0)              ['$const154.3']
    qout[$const154.3] = $const154.1          ['$const154.1', '$const154.3', 'qout']
    $154.4 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$154.4']
    $154.5 = getattr(value=$154.4, attr=pi)  ['$154.4', '$154.5']
    $const154.7 = const(int, 1)              ['$const154.7']
    qout[$const154.7] = $154.5               ['$154.5', '$const154.7', 'qout']
    $const154.8 = const(float, 0.0)          ['$const154.8']
    $const154.10 = const(int, 2)             ['$const154.10']
    qout[$const154.10] = $const154.8         ['$const154.10', '$const154.8', 'qout']
    $const154.11 = const(float, 0.0)         ['$const154.11']
    $const154.13 = const(int, 3)             ['$const154.13']
    qout[$const154.13] = $const154.11        ['$const154.11', '$const154.13', 'qout']
    jump 232                                 []
label 190:
    $190.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$190.1']
    $190.2 = getattr(value=$190.1, attr=log) ['$190.1', '$190.2']
    $const190.4 = const(int, 0)              ['$const190.4']
    $190.5 = getitem(value=q, index=$const190.4, fn=<built-in function getitem>) ['$190.5', '$const190.4', 'q']
    $190.6 = call $190.2($190.5, func=$190.2, args=[Var($190.5, algebra.py:164)], kws=(), vararg=None) ['$190.2', '$190.5', '$190.6']
    $const190.8 = const(int, 0)              ['$const190.8']
    qout[$const190.8] = $190.6               ['$190.6', '$const190.8', 'qout']
    $const190.9 = const(float, 0.0)          ['$const190.9']
    $const190.11 = const(int, 1)             ['$const190.11']
    qout[$const190.11] = $const190.9         ['$const190.11', '$const190.9', 'qout']
    $const190.12 = const(float, 0.0)         ['$const190.12']
    $const190.14 = const(int, 2)             ['$const190.14']
    qout[$const190.14] = $const190.12        ['$const190.12', '$const190.14', 'qout']
    $const190.15 = const(float, 0.0)         ['$const190.15']
    $const190.17 = const(int, 3)             ['$const190.17']
    qout[$const190.17] = $const190.15        ['$const190.15', '$const190.17', 'qout']
    jump 232                                 []
label 232:
    jump 344                                 []
label 234:
    $234.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$234.1']
    $234.2 = getattr(value=$234.1, attr=arctan2) ['$234.1', '$234.2']
    $const234.5 = const(int, 0)              ['$const234.5']
    $234.6 = getitem(value=q, index=$const234.5, fn=<built-in function getitem>) ['$234.6', '$const234.5', 'q']
    v = call $234.2(b, $234.6, func=$234.2, args=[Var(b, algebra.py:150), Var($234.6, algebra.py:169)], kws=(), vararg=None) ['$234.2', '$234.6', 'b', 'v']
    f = v / b                                ['b', 'f', 'v']
    $234.11 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$234.11']
    $234.12 = getattr(value=$234.11, attr=log) ['$234.11', '$234.12']
    $const234.14 = const(int, 0)             ['$const234.14']
    $234.15 = getitem(value=q, index=$const234.14, fn=<built-in function getitem>) ['$234.15', '$const234.14', 'q']
    $const234.17 = const(int, 0)             ['$const234.17']
    $234.18 = getitem(value=q, index=$const234.17, fn=<built-in function getitem>) ['$234.18', '$const234.17', 'q']
    $234.19 = $234.15 * $234.18              ['$234.15', '$234.18', '$234.19']
    $234.22 = b * b                          ['$234.22', 'b', 'b']
    $234.23 = $234.19 + $234.22              ['$234.19', '$234.22', '$234.23']
    $234.24 = call $234.12($234.23, func=$234.12, args=[Var($234.23, algebra.py:171)], kws=(), vararg=None) ['$234.12', '$234.23', '$234.24']
    $const234.25 = const(float, 2.0)         ['$const234.25']
    $234.26 = $234.24 / $const234.25         ['$234.24', '$234.26', '$const234.25']
    $const234.28 = const(int, 0)             ['$const234.28']
    qout[$const234.28] = $234.26             ['$234.26', '$const234.28', 'qout']
    $const234.31 = const(int, 1)             ['$const234.31']
    $234.32 = getitem(value=q, index=$const234.31, fn=<built-in function getitem>) ['$234.32', '$const234.31', 'q']
    $234.33 = f * $234.32                    ['$234.32', '$234.33', 'f']
    $const234.35 = const(int, 1)             ['$const234.35']
    qout[$const234.35] = $234.33             ['$234.33', '$const234.35', 'qout']
    $const234.38 = const(int, 2)             ['$const234.38']
    $234.39 = getitem(value=q, index=$const234.38, fn=<built-in function getitem>) ['$234.39', '$const234.38', 'q']
    $234.40 = f * $234.39                    ['$234.39', '$234.40', 'f']
    $const234.42 = const(int, 2)             ['$const234.42']
    qout[$const234.42] = $234.40             ['$234.40', '$const234.42', 'qout']
    $const234.45 = const(int, 3)             ['$const234.45']
    $234.46 = getitem(value=q, index=$const234.45, fn=<built-in function getitem>) ['$234.46', '$const234.45', 'q']
    $234.47 = f * $234.46                    ['$234.46', '$234.47', 'f']
    $const234.49 = const(int, 3)             ['$const234.49']
    qout[$const234.49] = $234.47             ['$234.47', '$const234.49', 'qout']
    jump 344                                 []
label 344:
    qout.1 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=qout, rhs=s, static_lhs=Undefined, static_rhs=Undefined) ['qout', 'qout.1', 's']
    $344.4 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$344.4']
    $344.5 = getattr(value=$344.4, attr=sqrt) ['$344.4', '$344.5']
    $const344.7 = const(int, 1)              ['$const344.7']
    $344.8 = getitem(value=qout.1, index=$const344.7, fn=<built-in function getitem>) ['$344.8', '$const344.7', 'qout.1']
    $const344.9 = const(int, 2)              ['$const344.9']
    $344.10 = $344.8 ** $const344.9          ['$344.10', '$344.8', '$const344.9']
    $const344.12 = const(int, 2)             ['$const344.12']
    $344.13 = getitem(value=qout.1, index=$const344.12, fn=<built-in function getitem>) ['$344.13', '$const344.12', 'qout.1']
    $const344.14 = const(int, 2)             ['$const344.14']
    $344.15 = $344.13 ** $const344.14        ['$344.13', '$344.15', '$const344.14']
    $344.16 = $344.10 + $344.15              ['$344.10', '$344.15', '$344.16']
    $const344.18 = const(int, 3)             ['$const344.18']
    $344.19 = getitem(value=qout.1, index=$const344.18, fn=<built-in function getitem>) ['$344.19', '$const344.18', 'qout.1']
    $const344.20 = const(int, 2)             ['$const344.20']
    $344.21 = $344.19 ** $const344.20        ['$344.19', '$344.21', '$const344.20']
    $344.22 = $344.16 + $344.21              ['$344.16', '$344.21', '$344.22']
    vnorm = call $344.5($344.22, func=$344.5, args=[Var($344.22, algebra.py:176)], kws=(), vararg=None) ['$344.22', '$344.5', 'vnorm']
    $344.25 = global(_quaternion_resolution: 1.0000000000000002e-14) ['$344.25']
    $344.26 = vnorm > $344.25                ['$344.25', '$344.26', 'vnorm']
    bool400 = global(bool: <class 'bool'>)   ['bool400']
    $400pred = call bool400($344.26, func=bool400, args=(Var($344.26, algebra.py:177),), kws=(), vararg=None) ['$344.26', '$400pred', 'bool400']
    branch $400pred, 404, 472                ['$400pred']
label 404:
    $404.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$404.1']
    $404.2 = getattr(value=$404.1, attr=exp) ['$404.1', '$404.2']
    $const404.4 = const(int, 0)              ['$const404.4']
    $404.5 = getitem(value=qout.1, index=$const404.4, fn=<built-in function getitem>) ['$404.5', '$const404.4', 'qout.1']
    e = call $404.2($404.5, func=$404.2, args=[Var($404.5, algebra.py:178)], kws=(), vararg=None) ['$404.2', '$404.5', 'e']
    $404.8 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$404.8']
    $404.9 = getattr(value=$404.8, attr=cos) ['$404.8', '$404.9']
    $404.11 = call $404.9(vnorm, func=$404.9, args=[Var(vnorm, algebra.py:176)], kws=(), vararg=None) ['$404.11', '$404.9', 'vnorm']
    $404.12 = e * $404.11                    ['$404.11', '$404.12', 'e']
    $const404.14 = const(int, 0)             ['$const404.14']
    qout.1[$const404.14] = $404.12           ['$404.12', '$const404.14', 'qout.1']
    $const404.16 = const(int, 1)             ['$const404.16']
    $const404.17 = const(NoneType, None)     ['$const404.17']
    $404.18 = global(slice: <class 'slice'>) ['$404.18']
    $404.19 = call $404.18($const404.16, $const404.17, func=$404.18, args=(Var($const404.16, algebra.py:180), Var($const404.17, algebra.py:180)), kws=(), vararg=None) ['$404.18', '$404.19', '$const404.16', '$const404.17']
    $404.22 = getitem(value=qout.1, index=$404.19, fn=<built-in function getitem>) ['$404.19', '$404.22', 'qout.1']
    $404.24 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$404.24']
    $404.25 = getattr(value=$404.24, attr=sin) ['$404.24', '$404.25']
    $404.27 = call $404.25(vnorm, func=$404.25, args=[Var(vnorm, algebra.py:176)], kws=(), vararg=None) ['$404.25', '$404.27', 'vnorm']
    $404.28 = e * $404.27                    ['$404.27', '$404.28', 'e']
    $404.30 = $404.28 / vnorm                ['$404.28', '$404.30', 'vnorm']
    $404.31 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=$404.22, rhs=$404.30, static_lhs=Undefined, static_rhs=Undefined) ['$404.22', '$404.30', '$404.31']
    qout.1[$404.19] = $404.31                ['$404.19', '$404.31', 'qout.1']
    jump 514                                 []
label 472:
    $472.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$472.1']
    $472.2 = getattr(value=$472.1, attr=exp) ['$472.1', '$472.2']
    $const472.4 = const(int, 0)              ['$const472.4']
    $472.5 = getitem(value=qout.1, index=$const472.4, fn=<built-in function getitem>) ['$472.5', '$const472.4', 'qout.1']
    $472.6 = call $472.2($472.5, func=$472.2, args=[Var($472.5, algebra.py:182)], kws=(), vararg=None) ['$472.2', '$472.5', '$472.6']
    $const472.8 = const(int, 0)              ['$const472.8']
    qout.1[$const472.8] = $472.6             ['$472.6', '$const472.8', 'qout.1']
    $const472.9 = const(float, 0.0)          ['$const472.9']
    $const472.11 = const(int, 1)             ['$const472.11']
    qout.1[$const472.11] = $const472.9       ['$const472.11', '$const472.9', 'qout.1']
    $const472.12 = const(float, 0.0)         ['$const472.12']
    $const472.14 = const(int, 2)             ['$const472.14']
    qout.1[$const472.14] = $const472.12      ['$const472.12', '$const472.14', 'qout.1']
    $const472.15 = const(float, 0.0)         ['$const472.15']
    $const472.17 = const(int, 3)             ['$const472.17']
    qout.1[$const472.17] = $const472.15      ['$const472.15', '$const472.17', 'qout.1']
    jump 514                                 []
label 514:
    $const514.1 = const(NoneType, None)      ['$const514.1']
    $514.2 = cast(value=$const514.1)         ['$514.2', '$const514.1']
    return $514.2                            ['$514.2']

2022-01-24 14:08:59,495 DEBUG ==== SSA block analysis pass on 0
2022-01-24 14:08:59,495 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb5682e8>
2022-01-24 14:08:59,495 DEBUG on stmt: q = arg(0, name=q)
2022-01-24 14:08:59,495 DEBUG on stmt: s = arg(1, name=s)
2022-01-24 14:08:59,495 DEBUG on stmt: qout = arg(2, name=qout)
2022-01-24 14:08:59,495 DEBUG on stmt: $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:08:59,495 DEBUG on stmt: $0.2 = getattr(value=$0.1, attr=sqrt)
2022-01-24 14:08:59,495 DEBUG on stmt: $const0.4 = const(int, 1)
2022-01-24 14:08:59,496 DEBUG on stmt: $0.5 = static_getitem(value=q, index=1, index_var=$const0.4, fn=<built-in function getitem>)
2022-01-24 14:08:59,496 DEBUG on stmt: $const0.6 = const(int, 2)
2022-01-24 14:08:59,496 DEBUG on stmt: $0.7 = $0.5 ** $const0.6
2022-01-24 14:08:59,496 DEBUG on stmt: $const0.9 = const(int, 2)
2022-01-24 14:08:59,496 DEBUG on stmt: $0.10 = static_getitem(value=q, index=2, index_var=$const0.9, fn=<built-in function getitem>)
2022-01-24 14:08:59,496 DEBUG on stmt: $const0.11 = const(int, 2)
2022-01-24 14:08:59,496 DEBUG on stmt: $0.12 = $0.10 ** $const0.11
2022-01-24 14:08:59,496 DEBUG on stmt: $0.13 = $0.7 + $0.12
2022-01-24 14:08:59,496 DEBUG on stmt: $const0.15 = const(int, 3)
2022-01-24 14:08:59,496 DEBUG on stmt: $0.16 = static_getitem(value=q, index=3, index_var=$const0.15, fn=<built-in function getitem>)
2022-01-24 14:08:59,496 DEBUG on stmt: $const0.17 = const(int, 2)
2022-01-24 14:08:59,496 DEBUG on stmt: $0.18 = $0.16 ** $const0.17
2022-01-24 14:08:59,496 DEBUG on stmt: $0.19 = $0.13 + $0.18
2022-01-24 14:08:59,496 DEBUG on stmt: b = call $0.2($0.19, func=$0.2, args=[Var($0.19, algebra.py:150)], kws=(), vararg=None)
2022-01-24 14:08:59,496 DEBUG on stmt: $0.21 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:08:59,496 DEBUG on stmt: $0.22 = getattr(value=$0.21, attr=abs)
2022-01-24 14:08:59,496 DEBUG on stmt: $0.24 = call $0.22(b, func=$0.22, args=[Var(b, algebra.py:150)], kws=(), vararg=None)
2022-01-24 14:08:59,496 DEBUG on stmt: $0.25 = global(_quaternion_resolution: 1.0000000000000002e-14)
2022-01-24 14:08:59,497 DEBUG on stmt: $0.26 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:08:59,497 DEBUG on stmt: $0.27 = getattr(value=$0.26, attr=abs)
2022-01-24 14:08:59,497 DEBUG on stmt: $const0.29 = const(int, 0)
2022-01-24 14:08:59,497 DEBUG on stmt: $0.30 = static_getitem(value=q, index=0, index_var=$const0.29, fn=<built-in function getitem>)
2022-01-24 14:08:59,497 DEBUG on stmt: $0.31 = call $0.27($0.30, func=$0.27, args=[Var($0.30, algebra.py:151)], kws=(), vararg=None)
2022-01-24 14:08:59,497 DEBUG on stmt: $0.32 = $0.25 * $0.31
2022-01-24 14:08:59,497 DEBUG on stmt: $0.33 = $0.24 <= $0.32
2022-01-24 14:08:59,497 DEBUG on stmt: bool70 = global(bool: <class 'bool'>)
2022-01-24 14:08:59,497 DEBUG on stmt: $70pred = call bool70($0.33, func=bool70, args=(Var($0.33, algebra.py:151),), kws=(), vararg=None)
2022-01-24 14:08:59,497 DEBUG on stmt: branch $70pred, 72, 234
2022-01-24 14:08:59,497 DEBUG ==== SSA block analysis pass on 72
2022-01-24 14:08:59,497 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb5682e8>
2022-01-24 14:08:59,497 DEBUG on stmt: $const72.2 = const(int, 0)
2022-01-24 14:08:59,497 DEBUG on stmt: $72.3 = static_getitem(value=q, index=0, index_var=$const72.2, fn=<built-in function getitem>)
2022-01-24 14:08:59,497 DEBUG on stmt: $const72.4 = const(float, 0.0)
2022-01-24 14:08:59,497 DEBUG on stmt: $72.5 = $72.3 < $const72.4
2022-01-24 14:08:59,497 DEBUG on stmt: bool82 = global(bool: <class 'bool'>)
2022-01-24 14:08:59,497 DEBUG on stmt: $82pred = call bool82($72.5, func=bool82, args=(Var($72.5, algebra.py:152),), kws=(), vararg=None)
2022-01-24 14:08:59,497 DEBUG on stmt: branch $82pred, 84, 190
2022-01-24 14:08:59,497 DEBUG ==== SSA block analysis pass on 84
2022-01-24 14:08:59,497 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb5682e8>
2022-01-24 14:08:59,498 DEBUG on stmt: $84.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:08:59,498 DEBUG on stmt: $84.2 = getattr(value=$84.1, attr=abs)
2022-01-24 14:08:59,498 DEBUG on stmt: $const84.4 = const(int, 0)
2022-01-24 14:08:59,498 DEBUG on stmt: $84.5 = static_getitem(value=q, index=0, index_var=$const84.4, fn=<built-in function getitem>)
2022-01-24 14:08:59,498 DEBUG on stmt: $const84.6 = const(int, 1)
2022-01-24 14:08:59,498 DEBUG on stmt: $84.7 = $84.5 + $const84.6
2022-01-24 14:08:59,498 DEBUG on stmt: $84.8 = call $84.2($84.7, func=$84.2, args=[Var($84.7, algebra.py:153)], kws=(), vararg=None)
2022-01-24 14:08:59,498 DEBUG on stmt: $84.9 = global(_quaternion_resolution: 1.0000000000000002e-14)
2022-01-24 14:08:59,498 DEBUG on stmt: $84.10 = $84.8 > $84.9
2022-01-24 14:08:59,498 DEBUG on stmt: bool104 = global(bool: <class 'bool'>)
2022-01-24 14:08:59,498 DEBUG on stmt: $104pred = call bool104($84.10, func=bool104, args=(Var($84.10, algebra.py:153),), kws=(), vararg=None)
2022-01-24 14:08:59,499 DEBUG on stmt: branch $104pred, 106, 154
2022-01-24 14:08:59,499 DEBUG ==== SSA block analysis pass on 106
2022-01-24 14:08:59,499 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb5682e8>
2022-01-24 14:08:59,499 DEBUG on stmt: $106.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:08:59,499 DEBUG on stmt: $106.2 = getattr(value=$106.1, attr=log)
2022-01-24 14:08:59,499 DEBUG on stmt: $const106.4 = const(int, 0)
2022-01-24 14:08:59,499 DEBUG on stmt: $106.5 = static_getitem(value=q, index=0, index_var=$const106.4, fn=<built-in function getitem>)
2022-01-24 14:08:59,499 DEBUG on stmt: $106.6 = unary(fn=<built-in function neg>, value=$106.5)
2022-01-24 14:08:59,499 DEBUG on stmt: $106.7 = call $106.2($106.6, func=$106.2, args=[Var($106.6, algebra.py:154)], kws=(), vararg=None)
2022-01-24 14:08:59,500 DEBUG on stmt: $const106.9 = const(int, 0)
2022-01-24 14:08:59,500 DEBUG on stmt: qout[0] = $106.7
2022-01-24 14:08:59,500 DEBUG on stmt: $106.10 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:08:59,500 DEBUG on stmt: $106.11 = getattr(value=$106.10, attr=pi)
2022-01-24 14:08:59,500 DEBUG on stmt: $const106.13 = const(int, 1)
2022-01-24 14:08:59,500 DEBUG on stmt: qout[1] = $106.11
2022-01-24 14:08:59,500 DEBUG on stmt: $const106.14 = const(float, 0.0)
2022-01-24 14:08:59,500 DEBUG on stmt: $const106.16 = const(int, 2)
2022-01-24 14:08:59,500 DEBUG on stmt: qout[2] = $const106.14
2022-01-24 14:08:59,500 DEBUG on stmt: $const106.17 = const(float, 0.0)
2022-01-24 14:08:59,500 DEBUG on stmt: $const106.19 = const(int, 3)
2022-01-24 14:08:59,500 DEBUG on stmt: qout[3] = $const106.17
2022-01-24 14:08:59,500 DEBUG on stmt: jump 232
2022-01-24 14:08:59,500 DEBUG ==== SSA block analysis pass on 154
2022-01-24 14:08:59,500 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb5682e8>
2022-01-24 14:08:59,500 DEBUG on stmt: $const154.1 = const(float, 0.0)
2022-01-24 14:08:59,500 DEBUG on stmt: $const154.3 = const(int, 0)
2022-01-24 14:08:59,501 DEBUG on stmt: qout[0] = $const154.1
2022-01-24 14:08:59,501 DEBUG on stmt: $154.4 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:08:59,501 DEBUG on stmt: $154.5 = getattr(value=$154.4, attr=pi)
2022-01-24 14:08:59,501 DEBUG on stmt: $const154.7 = const(int, 1)
2022-01-24 14:08:59,501 DEBUG on stmt: qout[1] = $154.5
2022-01-24 14:08:59,501 DEBUG on stmt: $const154.8 = const(float, 0.0)
2022-01-24 14:08:59,501 DEBUG on stmt: $const154.10 = const(int, 2)
2022-01-24 14:08:59,501 DEBUG on stmt: qout[2] = $const154.8
2022-01-24 14:08:59,501 DEBUG on stmt: $const154.11 = const(float, 0.0)
2022-01-24 14:08:59,501 DEBUG on stmt: $const154.13 = const(int, 3)
2022-01-24 14:08:59,501 DEBUG on stmt: qout[3] = $const154.11
2022-01-24 14:08:59,501 DEBUG on stmt: jump 232
2022-01-24 14:08:59,501 DEBUG ==== SSA block analysis pass on 190
2022-01-24 14:08:59,501 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb5682e8>
2022-01-24 14:08:59,501 DEBUG on stmt: $190.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:08:59,501 DEBUG on stmt: $190.2 = getattr(value=$190.1, attr=log)
2022-01-24 14:08:59,501 DEBUG on stmt: $const190.4 = const(int, 0)
2022-01-24 14:08:59,501 DEBUG on stmt: $190.5 = static_getitem(value=q, index=0, index_var=$const190.4, fn=<built-in function getitem>)
2022-01-24 14:08:59,502 DEBUG on stmt: $190.6 = call $190.2($190.5, func=$190.2, args=[Var($190.5, algebra.py:164)], kws=(), vararg=None)
2022-01-24 14:08:59,502 DEBUG on stmt: $const190.8 = const(int, 0)
2022-01-24 14:08:59,502 DEBUG on stmt: qout[0] = $190.6
2022-01-24 14:08:59,502 DEBUG on stmt: $const190.9 = const(float, 0.0)
2022-01-24 14:08:59,502 DEBUG on stmt: $const190.11 = const(int, 1)
2022-01-24 14:08:59,502 DEBUG on stmt: qout[1] = $const190.9
2022-01-24 14:08:59,502 DEBUG on stmt: $const190.12 = const(float, 0.0)
2022-01-24 14:08:59,502 DEBUG on stmt: $const190.14 = const(int, 2)
2022-01-24 14:08:59,502 DEBUG on stmt: qout[2] = $const190.12
2022-01-24 14:08:59,502 DEBUG on stmt: $const190.15 = const(float, 0.0)
2022-01-24 14:08:59,502 DEBUG on stmt: $const190.17 = const(int, 3)
2022-01-24 14:08:59,502 DEBUG on stmt: qout[3] = $const190.15
2022-01-24 14:08:59,502 DEBUG on stmt: jump 232
2022-01-24 14:08:59,502 DEBUG ==== SSA block analysis pass on 232
2022-01-24 14:08:59,502 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb5682e8>
2022-01-24 14:08:59,502 DEBUG on stmt: jump 344
2022-01-24 14:08:59,502 DEBUG ==== SSA block analysis pass on 234
2022-01-24 14:08:59,502 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb5682e8>
2022-01-24 14:08:59,502 DEBUG on stmt: $234.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:08:59,502 DEBUG on stmt: $234.2 = getattr(value=$234.1, attr=arctan2)
2022-01-24 14:08:59,503 DEBUG on stmt: $const234.5 = const(int, 0)
2022-01-24 14:08:59,503 DEBUG on stmt: $234.6 = static_getitem(value=q, index=0, index_var=$const234.5, fn=<built-in function getitem>)
2022-01-24 14:08:59,503 DEBUG on stmt: v = call $234.2(b, $234.6, func=$234.2, args=[Var(b, algebra.py:150), Var($234.6, algebra.py:169)], kws=(), vararg=None)
2022-01-24 14:08:59,503 DEBUG on stmt: f = v / b
2022-01-24 14:08:59,503 DEBUG on stmt: $234.11 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:08:59,503 DEBUG on stmt: $234.12 = getattr(value=$234.11, attr=log)
2022-01-24 14:08:59,503 DEBUG on stmt: $const234.14 = const(int, 0)
2022-01-24 14:08:59,503 DEBUG on stmt: $234.15 = static_getitem(value=q, index=0, index_var=$const234.14, fn=<built-in function getitem>)
2022-01-24 14:08:59,503 DEBUG on stmt: $const234.17 = const(int, 0)
2022-01-24 14:08:59,503 DEBUG on stmt: $234.18 = static_getitem(value=q, index=0, index_var=$const234.17, fn=<built-in function getitem>)
2022-01-24 14:08:59,503 DEBUG on stmt: $234.19 = $234.15 * $234.18
2022-01-24 14:08:59,503 DEBUG on stmt: $234.22 = b * b
2022-01-24 14:08:59,503 DEBUG on stmt: $234.23 = $234.19 + $234.22
2022-01-24 14:08:59,503 DEBUG on stmt: $234.24 = call $234.12($234.23, func=$234.12, args=[Var($234.23, algebra.py:171)], kws=(), vararg=None)
2022-01-24 14:08:59,503 DEBUG on stmt: $const234.25 = const(float, 2.0)
2022-01-24 14:08:59,503 DEBUG on stmt: $234.26 = $234.24 / $const234.25
2022-01-24 14:08:59,503 DEBUG on stmt: $const234.28 = const(int, 0)
2022-01-24 14:08:59,503 DEBUG on stmt: qout[0] = $234.26
2022-01-24 14:08:59,504 DEBUG on stmt: $const234.31 = const(int, 1)
2022-01-24 14:08:59,504 DEBUG on stmt: $234.32 = static_getitem(value=q, index=1, index_var=$const234.31, fn=<built-in function getitem>)
2022-01-24 14:08:59,504 DEBUG on stmt: $234.33 = f * $234.32
2022-01-24 14:08:59,504 DEBUG on stmt: $const234.35 = const(int, 1)
2022-01-24 14:08:59,504 DEBUG on stmt: qout[1] = $234.33
2022-01-24 14:08:59,504 DEBUG on stmt: $const234.38 = const(int, 2)
2022-01-24 14:08:59,504 DEBUG on stmt: $234.39 = static_getitem(value=q, index=2, index_var=$const234.38, fn=<built-in function getitem>)
2022-01-24 14:08:59,504 DEBUG on stmt: $234.40 = f * $234.39
2022-01-24 14:08:59,504 DEBUG on stmt: $const234.42 = const(int, 2)
2022-01-24 14:08:59,504 DEBUG on stmt: qout[2] = $234.40
2022-01-24 14:08:59,504 DEBUG on stmt: $const234.45 = const(int, 3)
2022-01-24 14:08:59,504 DEBUG on stmt: $234.46 = static_getitem(value=q, index=3, index_var=$const234.45, fn=<built-in function getitem>)
2022-01-24 14:08:59,504 DEBUG on stmt: $234.47 = f * $234.46
2022-01-24 14:08:59,504 DEBUG on stmt: $const234.49 = const(int, 3)
2022-01-24 14:08:59,504 DEBUG on stmt: qout[3] = $234.47
2022-01-24 14:08:59,504 DEBUG on stmt: jump 344
2022-01-24 14:08:59,504 DEBUG ==== SSA block analysis pass on 344
2022-01-24 14:08:59,504 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb5682e8>
2022-01-24 14:08:59,504 DEBUG on stmt: qout.1 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=qout, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:59,504 DEBUG on stmt: $344.4 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:08:59,504 DEBUG on stmt: $344.5 = getattr(value=$344.4, attr=sqrt)
2022-01-24 14:08:59,504 DEBUG on stmt: $const344.7 = const(int, 1)
2022-01-24 14:08:59,504 DEBUG on stmt: $344.8 = static_getitem(value=qout.1, index=1, index_var=$const344.7, fn=<built-in function getitem>)
2022-01-24 14:08:59,504 DEBUG on stmt: $const344.9 = const(int, 2)
2022-01-24 14:08:59,504 DEBUG on stmt: $344.10 = $344.8 ** $const344.9
2022-01-24 14:08:59,504 DEBUG on stmt: $const344.12 = const(int, 2)
2022-01-24 14:08:59,505 DEBUG on stmt: $344.13 = static_getitem(value=qout.1, index=2, index_var=$const344.12, fn=<built-in function getitem>)
2022-01-24 14:08:59,505 DEBUG on stmt: $const344.14 = const(int, 2)
2022-01-24 14:08:59,505 DEBUG on stmt: $344.15 = $344.13 ** $const344.14
2022-01-24 14:08:59,505 DEBUG on stmt: $344.16 = $344.10 + $344.15
2022-01-24 14:08:59,505 DEBUG on stmt: $const344.18 = const(int, 3)
2022-01-24 14:08:59,505 DEBUG on stmt: $344.19 = static_getitem(value=qout.1, index=3, index_var=$const344.18, fn=<built-in function getitem>)
2022-01-24 14:08:59,505 DEBUG on stmt: $const344.20 = const(int, 2)
2022-01-24 14:08:59,505 DEBUG on stmt: $344.21 = $344.19 ** $const344.20
2022-01-24 14:08:59,505 DEBUG on stmt: $344.22 = $344.16 + $344.21
2022-01-24 14:08:59,505 DEBUG on stmt: vnorm = call $344.5($344.22, func=$344.5, args=[Var($344.22, algebra.py:176)], kws=(), vararg=None)
2022-01-24 14:08:59,505 DEBUG on stmt: $344.25 = global(_quaternion_resolution: 1.0000000000000002e-14)
2022-01-24 14:08:59,505 DEBUG on stmt: $344.26 = vnorm > $344.25
2022-01-24 14:08:59,505 DEBUG on stmt: bool400 = global(bool: <class 'bool'>)
2022-01-24 14:08:59,505 DEBUG on stmt: $400pred = call bool400($344.26, func=bool400, args=(Var($344.26, algebra.py:177),), kws=(), vararg=None)
2022-01-24 14:08:59,505 DEBUG on stmt: branch $400pred, 404, 472
2022-01-24 14:08:59,505 DEBUG ==== SSA block analysis pass on 404
2022-01-24 14:08:59,505 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb5682e8>
2022-01-24 14:08:59,505 DEBUG on stmt: $404.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:08:59,505 DEBUG on stmt: $404.2 = getattr(value=$404.1, attr=exp)
2022-01-24 14:08:59,505 DEBUG on stmt: $const404.4 = const(int, 0)
2022-01-24 14:08:59,505 DEBUG on stmt: $404.5 = static_getitem(value=qout.1, index=0, index_var=$const404.4, fn=<built-in function getitem>)
2022-01-24 14:08:59,505 DEBUG on stmt: e = call $404.2($404.5, func=$404.2, args=[Var($404.5, algebra.py:178)], kws=(), vararg=None)
2022-01-24 14:08:59,505 DEBUG on stmt: $404.8 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:08:59,505 DEBUG on stmt: $404.9 = getattr(value=$404.8, attr=cos)
2022-01-24 14:08:59,505 DEBUG on stmt: $404.11 = call $404.9(vnorm, func=$404.9, args=[Var(vnorm, algebra.py:176)], kws=(), vararg=None)
2022-01-24 14:08:59,506 DEBUG on stmt: $404.12 = e * $404.11
2022-01-24 14:08:59,506 DEBUG on stmt: $const404.14 = const(int, 0)
2022-01-24 14:08:59,506 DEBUG on stmt: qout.1[0] = $404.12
2022-01-24 14:08:59,506 DEBUG on stmt: $const404.16 = const(int, 1)
2022-01-24 14:08:59,506 DEBUG on stmt: $const404.17 = const(NoneType, None)
2022-01-24 14:08:59,506 DEBUG on stmt: $404.18 = global(slice: <class 'slice'>)
2022-01-24 14:08:59,506 DEBUG on stmt: $404.19 = call $404.18($const404.16, $const404.17, func=$404.18, args=(Var($const404.16, algebra.py:180), Var($const404.17, algebra.py:180)), kws=(), vararg=None)
2022-01-24 14:08:59,506 DEBUG on stmt: $404.22 = static_getitem(value=qout.1, index=slice(1, None, None), index_var=$404.19, fn=<built-in function getitem>)
2022-01-24 14:08:59,506 DEBUG on stmt: $404.24 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:08:59,506 DEBUG on stmt: $404.25 = getattr(value=$404.24, attr=sin)
2022-01-24 14:08:59,506 DEBUG on stmt: $404.27 = call $404.25(vnorm, func=$404.25, args=[Var(vnorm, algebra.py:176)], kws=(), vararg=None)
2022-01-24 14:08:59,506 DEBUG on stmt: $404.28 = e * $404.27
2022-01-24 14:08:59,506 DEBUG on stmt: $404.30 = $404.28 / vnorm
2022-01-24 14:08:59,506 DEBUG on stmt: $404.31 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=$404.22, rhs=$404.30, static_lhs=Undefined, static_rhs=Undefined)
2022-01-24 14:08:59,506 DEBUG on stmt: qout.1[slice(1, None, None)] = $404.31
2022-01-24 14:08:59,506 DEBUG on stmt: jump 514
2022-01-24 14:08:59,506 DEBUG ==== SSA block analysis pass on 472
2022-01-24 14:08:59,506 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb5682e8>
2022-01-24 14:08:59,506 DEBUG on stmt: $472.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:08:59,506 DEBUG on stmt: $472.2 = getattr(value=$472.1, attr=exp)
2022-01-24 14:08:59,507 DEBUG on stmt: $const472.4 = const(int, 0)
2022-01-24 14:08:59,507 DEBUG on stmt: $472.5 = static_getitem(value=qout.1, index=0, index_var=$const472.4, fn=<built-in function getitem>)
2022-01-24 14:08:59,507 DEBUG on stmt: $472.6 = call $472.2($472.5, func=$472.2, args=[Var($472.5, algebra.py:182)], kws=(), vararg=None)
2022-01-24 14:08:59,507 DEBUG on stmt: $const472.8 = const(int, 0)
2022-01-24 14:08:59,507 DEBUG on stmt: qout.1[0] = $472.6
2022-01-24 14:08:59,507 DEBUG on stmt: $const472.9 = const(float, 0.0)
2022-01-24 14:08:59,507 DEBUG on stmt: $const472.11 = const(int, 1)
2022-01-24 14:08:59,507 DEBUG on stmt: qout.1[1] = $const472.9
2022-01-24 14:08:59,507 DEBUG on stmt: $const472.12 = const(float, 0.0)
2022-01-24 14:08:59,507 DEBUG on stmt: $const472.14 = const(int, 2)
2022-01-24 14:08:59,507 DEBUG on stmt: qout.1[2] = $const472.12
2022-01-24 14:08:59,507 DEBUG on stmt: $const472.15 = const(float, 0.0)
2022-01-24 14:08:59,507 DEBUG on stmt: $const472.17 = const(int, 3)
2022-01-24 14:08:59,507 DEBUG on stmt: qout.1[3] = $const472.15
2022-01-24 14:08:59,507 DEBUG on stmt: jump 514
2022-01-24 14:08:59,507 DEBUG ==== SSA block analysis pass on 514
2022-01-24 14:08:59,507 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb5682e8>
2022-01-24 14:08:59,507 DEBUG on stmt: $const514.1 = const(NoneType, None)
2022-01-24 14:08:59,507 DEBUG on stmt: $514.2 = cast(value=$const514.1)
2022-01-24 14:08:59,507 DEBUG on stmt: return $514.2
2022-01-24 14:08:59,509 DEBUG defs defaultdict(<class 'list'>,
            {'$0.1': [<numba.core.ir.Assign object at 0x7f94ec807048>],
             '$0.10': [<numba.core.ir.Assign object at 0x7f94ec911da0>],
             '$0.12': [<numba.core.ir.Assign object at 0x7f94ec8079b0>],
             '$0.13': [<numba.core.ir.Assign object at 0x7f94ec807a90>],
             '$0.16': [<numba.core.ir.Assign object at 0x7f94ec911e10>],
             '$0.18': [<numba.core.ir.Assign object at 0x7f94ec807e48>],
             '$0.19': [<numba.core.ir.Assign object at 0x7f94ec807fd0>],
             '$0.2': [<numba.core.ir.Assign object at 0x7f94ec807128>],
             '$0.21': [<numba.core.ir.Assign object at 0x7f94ec809208>],
             '$0.22': [<numba.core.ir.Assign object at 0x7f94ec8092e8>],
             '$0.24': [<numba.core.ir.Assign object at 0x7f94ec809470>],
             '$0.25': [<numba.core.ir.Assign object at 0x7f94ec809550>],
             '$0.26': [<numba.core.ir.Assign object at 0x7f94ec809630>],
             '$0.27': [<numba.core.ir.Assign object at 0x7f94ec809710>],
             '$0.30': [<numba.core.ir.Assign object at 0x7f94ec911898>],
             '$0.31': [<numba.core.ir.Assign object at 0x7f94ec809a58>],
             '$0.32': [<numba.core.ir.Assign object at 0x7f94ec809b38>],
             '$0.33': [<numba.core.ir.Assign object at 0x7f94ec809c18>],
             '$0.5': [<numba.core.ir.Assign object at 0x7f94ec911d30>],
             '$0.7': [<numba.core.ir.Assign object at 0x7f94ec807550>],
             '$104pred': [<numba.core.ir.Assign object at 0x7f94ec810f60>],
             '$106.1': [<numba.core.ir.Assign object at 0x7f94ec810160>],
             '$106.10': [<numba.core.ir.Assign object at 0x7f94ec8137f0>],
             '$106.11': [<numba.core.ir.Assign object at 0x7f94ec8138d0>],
             '$106.2': [<numba.core.ir.Assign object at 0x7f94ec8130f0>],
             '$106.5': [<numba.core.ir.Assign object at 0x7f94ec911b38>],
             '$106.6': [<numba.core.ir.Assign object at 0x7f94ec813438>],
             '$106.7': [<numba.core.ir.Assign object at 0x7f94ec813518>],
             '$154.4': [<numba.core.ir.Assign object at 0x7f94ec817438>],
             '$154.5': [<numba.core.ir.Assign object at 0x7f94ec817518>],
             '$190.1': [<numba.core.ir.Assign object at 0x7f94ec817da0>],
             '$190.2': [<numba.core.ir.Assign object at 0x7f94ec817e80>],
             '$190.5': [<numba.core.ir.Assign object at 0x7f94ec911f98>],
             '$190.6': [<numba.core.ir.Assign object at 0x7f94ec81a208>],
             '$234.1': [<numba.core.ir.Assign object at 0x7f94ec81add8>],
             '$234.11': [<numba.core.ir.Assign object at 0x7f94ec822748>],
             '$234.12': [<numba.core.ir.Assign object at 0x7f94ec822828>],
             '$234.15': [<numba.core.ir.Assign object at 0x7f94eb568dd8>],
             '$234.18': [<numba.core.ir.Assign object at 0x7f94eb568b38>],
             '$234.19': [<numba.core.ir.Assign object at 0x7f94ec822dd8>],
             '$234.2': [<numba.core.ir.Assign object at 0x7f94ec81aeb8>],
             '$234.22': [<numba.core.ir.Assign object at 0x7f94ec826048>],
             '$234.23': [<numba.core.ir.Assign object at 0x7f94ec826128>],
             '$234.24': [<numba.core.ir.Assign object at 0x7f94ec826208>],
             '$234.26': [<numba.core.ir.Assign object at 0x7f94ec8263c8>],
             '$234.32': [<numba.core.ir.Assign object at 0x7f94eb568828>],
             '$234.33': [<numba.core.ir.Assign object at 0x7f94ec8269b0>],
             '$234.39': [<numba.core.ir.Assign object at 0x7f94ec911e80>],
             '$234.40': [<numba.core.ir.Assign object at 0x7f94ec826f98>],
             '$234.46': [<numba.core.ir.Assign object at 0x7f94ec911ef0>],
             '$234.47': [<numba.core.ir.Assign object at 0x7f94ec8325c0>],
             '$234.6': [<numba.core.ir.Assign object at 0x7f94eb5689b0>],
             '$344.10': [<numba.core.ir.Assign object at 0x7f94ec832cf8>],
             '$344.13': [<numba.core.ir.Assign object at 0x7f94eb5680f0>],
             '$344.15': [<numba.core.ir.Assign object at 0x7f94ec906160>],
             '$344.16': [<numba.core.ir.Assign object at 0x7f94ec906240>],
             '$344.19': [<numba.core.ir.Assign object at 0x7f94eb568128>],
             '$344.21': [<numba.core.ir.Assign object at 0x7f94ec906668>],
             '$344.22': [<numba.core.ir.Assign object at 0x7f94ec906748>],
             '$344.25': [<numba.core.ir.Assign object at 0x7f94ec906a58>],
             '$344.26': [<numba.core.ir.Assign object at 0x7f94ec906b38>],
             '$344.4': [<numba.core.ir.Assign object at 0x7f94ec8327f0>],
             '$344.5': [<numba.core.ir.Assign object at 0x7f94ec8328d0>],
             '$344.8': [<numba.core.ir.Assign object at 0x7f94eb568400>],
             '$400pred': [<numba.core.ir.Assign object at 0x7f94ec906cf8>],
             '$404.1': [<numba.core.ir.Assign object at 0x7f94ec9062e8>],
             '$404.11': [<numba.core.ir.Assign object at 0x7f94ec90b5c0>],
             '$404.12': [<numba.core.ir.Assign object at 0x7f94ec90b6a0>],
             '$404.18': [<numba.core.ir.Assign object at 0x7f94ec90bbe0>],
             '$404.19': [<numba.core.ir.Assign object at 0x7f94ec90bc88>],
             '$404.2': [<numba.core.ir.Assign object at 0x7f94ec906da0>],
             '$404.22': [<numba.core.ir.Assign object at 0x7f94eb568668>],
             '$404.24': [<numba.core.ir.Assign object at 0x7f94ec90d048>],
             '$404.25': [<numba.core.ir.Assign object at 0x7f94ec90d128>],
             '$404.27': [<numba.core.ir.Assign object at 0x7f94ec90d2b0>],
             '$404.28': [<numba.core.ir.Assign object at 0x7f94ec90d390>],
             '$404.30': [<numba.core.ir.Assign object at 0x7f94ec90d518>],
             '$404.31': [<numba.core.ir.Assign object at 0x7f94ec90d5f8>],
             '$404.5': [<numba.core.ir.Assign object at 0x7f94eb568518>],
             '$404.8': [<numba.core.ir.Assign object at 0x7f94ec90b358>],
             '$404.9': [<numba.core.ir.Assign object at 0x7f94ec90b438>],
             '$472.1': [<numba.core.ir.Assign object at 0x7f94ec90be10>],
             '$472.2': [<numba.core.ir.Assign object at 0x7f94ec90d1d0>],
             '$472.5': [<numba.core.ir.Assign object at 0x7f94ec81d2b0>],
             '$472.6': [<numba.core.ir.Assign object at 0x7f94ec90d9e8>],
             '$514.2': [<numba.core.ir.Assign object at 0x7f94ec9115f8>],
             '$70pred': [<numba.core.ir.Assign object at 0x7f94ec809e10>],
             '$72.3': [<numba.core.ir.Assign object at 0x7f94ec911c88>],
             '$72.5': [<numba.core.ir.Assign object at 0x7f94ec810278>],
             '$82pred': [<numba.core.ir.Assign object at 0x7f94ec810518>],
             '$84.1': [<numba.core.ir.Assign object at 0x7f94ec8105c0>],
             '$84.10': [<numba.core.ir.Assign object at 0x7f94ec810d68>],
             '$84.2': [<numba.core.ir.Assign object at 0x7f94ec810710>],
             '$84.5': [<numba.core.ir.Assign object at 0x7f94ec911be0>],
             '$84.7': [<numba.core.ir.Assign object at 0x7f94ec810b38>],
             '$84.8': [<numba.core.ir.Assign object at 0x7f94ec810c18>],
             '$84.9': [<numba.core.ir.Assign object at 0x7f94ec810cf8>],
             '$const0.11': [<numba.core.ir.Assign object at 0x7f94ec807860>],
             '$const0.15': [<numba.core.ir.Assign object at 0x7f94ec807be0>],
             '$const0.17': [<numba.core.ir.Assign object at 0x7f94ec807da0>],
             '$const0.29': [<numba.core.ir.Assign object at 0x7f94ec809898>],
             '$const0.4': [<numba.core.ir.Assign object at 0x7f94ec8072e8>],
             '$const0.6': [<numba.core.ir.Assign object at 0x7f94ec807470>],
             '$const0.9': [<numba.core.ir.Assign object at 0x7f94ec807748>],
             '$const106.13': [<numba.core.ir.Assign object at 0x7f94ec813a58>],
             '$const106.14': [<numba.core.ir.Assign object at 0x7f94ec813ba8>],
             '$const106.16': [<numba.core.ir.Assign object at 0x7f94ec813d30>],
             '$const106.17': [<numba.core.ir.Assign object at 0x7f94ec813e80>],
             '$const106.19': [<numba.core.ir.Assign object at 0x7f94ec817048>],
             '$const106.4': [<numba.core.ir.Assign object at 0x7f94ec813278>],
             '$const106.9': [<numba.core.ir.Assign object at 0x7f94ec8136a0>],
             '$const154.1': [<numba.core.ir.Assign object at 0x7f94ec817160>],
             '$const154.10': [<numba.core.ir.Assign object at 0x7f94ec817978>],
             '$const154.11': [<numba.core.ir.Assign object at 0x7f94ec817ac8>],
             '$const154.13': [<numba.core.ir.Assign object at 0x7f94ec817c50>],
             '$const154.3': [<numba.core.ir.Assign object at 0x7f94ec8172e8>],
             '$const154.7': [<numba.core.ir.Assign object at 0x7f94ec8176a0>],
             '$const154.8': [<numba.core.ir.Assign object at 0x7f94ec8177f0>],
             '$const190.11': [<numba.core.ir.Assign object at 0x7f94ec81a668>],
             '$const190.12': [<numba.core.ir.Assign object at 0x7f94ec81a7b8>],
             '$const190.14': [<numba.core.ir.Assign object at 0x7f94ec81a940>],
             '$const190.15': [<numba.core.ir.Assign object at 0x7f94ec81aa90>],
             '$const190.17': [<numba.core.ir.Assign object at 0x7f94ec81ac18>],
             '$const190.4': [<numba.core.ir.Assign object at 0x7f94ec81a048>],
             '$const190.8': [<numba.core.ir.Assign object at 0x7f94ec81a390>],
             '$const190.9': [<numba.core.ir.Assign object at 0x7f94ec81a4e0>],
             '$const234.14': [<numba.core.ir.Assign object at 0x7f94ec8229b0>],
             '$const234.17': [<numba.core.ir.Assign object at 0x7f94ec822c18>],
             '$const234.25': [<numba.core.ir.Assign object at 0x7f94ec8262e8>],
             '$const234.28': [<numba.core.ir.Assign object at 0x7f94ec826550>],
             '$const234.31': [<numba.core.ir.Assign object at 0x7f94ec8267f0>],
             '$const234.35': [<numba.core.ir.Assign object at 0x7f94ec826b38>],
             '$const234.38': [<numba.core.ir.Assign object at 0x7f94ec826dd8>],
             '$const234.42': [<numba.core.ir.Assign object at 0x7f94ec832160>],
             '$const234.45': [<numba.core.ir.Assign object at 0x7f94ec832400>],
             '$const234.49': [<numba.core.ir.Assign object at 0x7f94ec832748>],
             '$const234.5': [<numba.core.ir.Assign object at 0x7f94ec822128>],
             '$const344.12': [<numba.core.ir.Assign object at 0x7f94ec832e80>],
             '$const344.14': [<numba.core.ir.Assign object at 0x7f94ec906080>],
             '$const344.18': [<numba.core.ir.Assign object at 0x7f94ec9063c8>],
             '$const344.20': [<numba.core.ir.Assign object at 0x7f94ec906588>],
             '$const344.7': [<numba.core.ir.Assign object at 0x7f94ec832a58>],
             '$const344.9': [<numba.core.ir.Assign object at 0x7f94ec832c18>],
             '$const404.14': [<numba.core.ir.Assign object at 0x7f94ec90b828>],
             '$const404.16': [<numba.core.ir.Assign object at 0x7f94ec90ba20>],
             '$const404.17': [<numba.core.ir.Assign object at 0x7f94ec90bb00>],
             '$const404.4': [<numba.core.ir.Assign object at 0x7f94ec906f28>],
             '$const472.11': [<numba.core.ir.Assign object at 0x7f94ec90de48>],
             '$const472.12': [<numba.core.ir.Assign object at 0x7f94ec90df98>],
             '$const472.14': [<numba.core.ir.Assign object at 0x7f94ec911160>],
             '$const472.15': [<numba.core.ir.Assign object at 0x7f94ec9112b0>],
             '$const472.17': [<numba.core.ir.Assign object at 0x7f94ec911438>],
             '$const472.4': [<numba.core.ir.Assign object at 0x7f94ec90d828>],
             '$const472.8': [<numba.core.ir.Assign object at 0x7f94ec90db70>],
             '$const472.9': [<numba.core.ir.Assign object at 0x7f94ec90dcc0>],
             '$const514.1': [<numba.core.ir.Assign object at 0x7f94ec911518>],
             '$const72.2': [<numba.core.ir.Assign object at 0x7f94ec809ef0>],
             '$const72.4': [<numba.core.ir.Assign object at 0x7f94ec810208>],
             '$const84.4': [<numba.core.ir.Assign object at 0x7f94ec810898>],
             '$const84.6': [<numba.core.ir.Assign object at 0x7f94ec810ac8>],
             'b': [<numba.core.ir.Assign object at 0x7f94ec809080>],
             'bool104': [<numba.core.ir.Assign object at 0x7f94ec810ef0>],
             'bool400': [<numba.core.ir.Assign object at 0x7f94ec906c50>],
             'bool70': [<numba.core.ir.Assign object at 0x7f94ec809d30>],
             'bool82': [<numba.core.ir.Assign object at 0x7f94ec8103c8>],
             'e': [<numba.core.ir.Assign object at 0x7f94ec90b128>],
             'f': [<numba.core.ir.Assign object at 0x7f94ec8225c0>],
             'q': [<numba.core.ir.Assign object at 0x7f94ec81ddd8>],
             'qout': [<numba.core.ir.Assign object at 0x7f94ec81df28>],
             'qout.1': [<numba.core.ir.Assign object at 0x7f94ec826cf8>],
             's': [<numba.core.ir.Assign object at 0x7f94ec81de80>],
             'v': [<numba.core.ir.Assign object at 0x7f94ec8222e8>],
             'vnorm': [<numba.core.ir.Assign object at 0x7f94ec906828>]})
2022-01-24 14:08:59,509 DEBUG SSA violators set()
2022-01-24 14:09:00,202 DEBUG label 0:
    q = arg(0, name=q)                       ['q']
    qout = arg(1, name=qout)                 ['qout']
    $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$0.1']
    $0.2 = getattr(value=$0.1, attr=sqrt)    ['$0.1', '$0.2']
    $const0.4 = const(int, 0)                ['$const0.4']
    $0.5 = getitem(value=q, index=$const0.4, fn=<built-in function getitem>) ['$0.5', '$const0.4', 'q']
    $const0.6 = const(int, 2)                ['$const0.6']
    $0.7 = $0.5 ** $const0.6                 ['$0.5', '$0.7', '$const0.6']
    $const0.9 = const(int, 1)                ['$const0.9']
    $0.10 = getitem(value=q, index=$const0.9, fn=<built-in function getitem>) ['$0.10', '$const0.9', 'q']
    $const0.11 = const(int, 2)               ['$const0.11']
    $0.12 = $0.10 ** $const0.11              ['$0.10', '$0.12', '$const0.11']
    $0.13 = $0.7 + $0.12                     ['$0.12', '$0.13', '$0.7']
    $const0.15 = const(int, 2)               ['$const0.15']
    $0.16 = getitem(value=q, index=$const0.15, fn=<built-in function getitem>) ['$0.16', '$const0.15', 'q']
    $const0.17 = const(int, 2)               ['$const0.17']
    $0.18 = $0.16 ** $const0.17              ['$0.16', '$0.18', '$const0.17']
    $0.19 = $0.13 + $0.18                    ['$0.13', '$0.18', '$0.19']
    $const0.21 = const(int, 3)               ['$const0.21']
    $0.22 = getitem(value=q, index=$const0.21, fn=<built-in function getitem>) ['$0.22', '$const0.21', 'q']
    $const0.23 = const(int, 2)               ['$const0.23']
    $0.24 = $0.22 ** $const0.23              ['$0.22', '$0.24', '$const0.23']
    $0.25 = $0.19 + $0.24                    ['$0.19', '$0.24', '$0.25']
    $0.26 = call $0.2($0.25, func=$0.2, args=[Var($0.25, algebra.py:191)], kws=(), vararg=None) ['$0.2', '$0.25', '$0.26']
    $const0.28 = const(int, 0)               ['$const0.28']
    qout[$const0.28] = $0.26                 ['$0.26', '$const0.28', 'qout']
    $const0.29 = const(NoneType, None)       ['$const0.29']
    $0.30 = cast(value=$const0.29)           ['$0.30', '$const0.29']
    return $0.30                             ['$0.30']

2022-01-24 14:09:00,207 DEBUG ==== SSA block analysis pass on 0
2022-01-24 14:09:00,207 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb5756a0>
2022-01-24 14:09:00,207 DEBUG on stmt: q = arg(0, name=q)
2022-01-24 14:09:00,207 DEBUG on stmt: qout = arg(1, name=qout)
2022-01-24 14:09:00,207 DEBUG on stmt: $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:09:00,208 DEBUG on stmt: $0.2 = getattr(value=$0.1, attr=sqrt)
2022-01-24 14:09:00,208 DEBUG on stmt: $const0.4 = const(int, 0)
2022-01-24 14:09:00,208 DEBUG on stmt: $0.5 = static_getitem(value=q, index=0, index_var=$const0.4, fn=<built-in function getitem>)
2022-01-24 14:09:00,208 DEBUG on stmt: $const0.6 = const(int, 2)
2022-01-24 14:09:00,208 DEBUG on stmt: $0.7 = $0.5 ** $const0.6
2022-01-24 14:09:00,208 DEBUG on stmt: $const0.9 = const(int, 1)
2022-01-24 14:09:00,208 DEBUG on stmt: $0.10 = static_getitem(value=q, index=1, index_var=$const0.9, fn=<built-in function getitem>)
2022-01-24 14:09:00,208 DEBUG on stmt: $const0.11 = const(int, 2)
2022-01-24 14:09:00,208 DEBUG on stmt: $0.12 = $0.10 ** $const0.11
2022-01-24 14:09:00,208 DEBUG on stmt: $0.13 = $0.7 + $0.12
2022-01-24 14:09:00,208 DEBUG on stmt: $const0.15 = const(int, 2)
2022-01-24 14:09:00,208 DEBUG on stmt: $0.16 = static_getitem(value=q, index=2, index_var=$const0.15, fn=<built-in function getitem>)
2022-01-24 14:09:00,208 DEBUG on stmt: $const0.17 = const(int, 2)
2022-01-24 14:09:00,208 DEBUG on stmt: $0.18 = $0.16 ** $const0.17
2022-01-24 14:09:00,208 DEBUG on stmt: $0.19 = $0.13 + $0.18
2022-01-24 14:09:00,208 DEBUG on stmt: $const0.21 = const(int, 3)
2022-01-24 14:09:00,208 DEBUG on stmt: $0.22 = static_getitem(value=q, index=3, index_var=$const0.21, fn=<built-in function getitem>)
2022-01-24 14:09:00,208 DEBUG on stmt: $const0.23 = const(int, 2)
2022-01-24 14:09:00,208 DEBUG on stmt: $0.24 = $0.22 ** $const0.23
2022-01-24 14:09:00,208 DEBUG on stmt: $0.25 = $0.19 + $0.24
2022-01-24 14:09:00,208 DEBUG on stmt: $0.26 = call $0.2($0.25, func=$0.2, args=[Var($0.25, algebra.py:191)], kws=(), vararg=None)
2022-01-24 14:09:00,208 DEBUG on stmt: $const0.28 = const(int, 0)
2022-01-24 14:09:00,208 DEBUG on stmt: qout[0] = $0.26
2022-01-24 14:09:00,208 DEBUG on stmt: $const0.29 = const(NoneType, None)
2022-01-24 14:09:00,208 DEBUG on stmt: $0.30 = cast(value=$const0.29)
2022-01-24 14:09:00,209 DEBUG on stmt: return $0.30
2022-01-24 14:09:00,209 DEBUG defs defaultdict(<class 'list'>,
            {'$0.1': [<numba.core.ir.Assign object at 0x7f94ec5b1c18>],
             '$0.10': [<numba.core.ir.Assign object at 0x7f94ec39ce80>],
             '$0.12': [<numba.core.ir.Assign object at 0x7f94ec3c41d0>],
             '$0.13': [<numba.core.ir.Assign object at 0x7f94ec3c4a90>],
             '$0.16': [<numba.core.ir.Assign object at 0x7f94ec39ce10>],
             '$0.18': [<numba.core.ir.Assign object at 0x7f94ec3c45f8>],
             '$0.19': [<numba.core.ir.Assign object at 0x7f94ec3c49e8>],
             '$0.2': [<numba.core.ir.Assign object at 0x7f94ec5b11d0>],
             '$0.22': [<numba.core.ir.Assign object at 0x7f94ec39c828>],
             '$0.24': [<numba.core.ir.Assign object at 0x7f94ec5c9710>],
             '$0.25': [<numba.core.ir.Assign object at 0x7f94ec5c9860>],
             '$0.26': [<numba.core.ir.Assign object at 0x7f94ec5c9630>],
             '$0.30': [<numba.core.ir.Assign object at 0x7f94ec5c9b38>],
             '$0.5': [<numba.core.ir.Assign object at 0x7f94ec396e10>],
             '$0.7': [<numba.core.ir.Assign object at 0x7f94ec3c4668>],
             '$const0.11': [<numba.core.ir.Assign object at 0x7f94ec3c4860>],
             '$const0.15': [<numba.core.ir.Assign object at 0x7f94ec3c4940>],
             '$const0.17': [<numba.core.ir.Assign object at 0x7f94ec3c4c18>],
             '$const0.21': [<numba.core.ir.Assign object at 0x7f94ec5c91d0>],
             '$const0.23': [<numba.core.ir.Assign object at 0x7f94ec5c9518>],
             '$const0.28': [<numba.core.ir.Assign object at 0x7f94ec5c99e8>],
             '$const0.29': [<numba.core.ir.Assign object at 0x7f94ec5c9a20>],
             '$const0.4': [<numba.core.ir.Assign object at 0x7f94ec3c4be0>],
             '$const0.6': [<numba.core.ir.Assign object at 0x7f94ec3c40b8>],
             '$const0.9': [<numba.core.ir.Assign object at 0x7f94ec3c44a8>],
             'q': [<numba.core.ir.Assign object at 0x7f94ec5b1208>],
             'qout': [<numba.core.ir.Assign object at 0x7f94ec5b1400>]})
2022-01-24 14:09:00,209 DEBUG SSA violators set()
2022-01-24 14:09:00,307 DEBUG label 0:
    q = arg(0, name=q)                       ['q']
    qout = arg(1, name=qout)                 ['qout']
    $const0.2 = const(int, 0)                ['$const0.2']
    $0.3 = getitem(value=q, index=$const0.2, fn=<built-in function getitem>) ['$0.3', '$const0.2', 'q']
    $0.4 = unary(fn=<built-in function pos>, value=$0.3) ['$0.3', '$0.4']
    $const0.6 = const(int, 0)                ['$const0.6']
    qout[$const0.6] = $0.4                   ['$0.4', '$const0.6', 'qout']
    $const0.8 = const(int, 1)                ['$const0.8']
    $0.9 = getitem(value=q, index=$const0.8, fn=<built-in function getitem>) ['$0.9', '$const0.8', 'q']
    $0.10 = unary(fn=<built-in function neg>, value=$0.9) ['$0.10', '$0.9']
    $const0.12 = const(int, 1)               ['$const0.12']
    qout[$const0.12] = $0.10                 ['$0.10', '$const0.12', 'qout']
    $const0.14 = const(int, 2)               ['$const0.14']
    $0.15 = getitem(value=q, index=$const0.14, fn=<built-in function getitem>) ['$0.15', '$const0.14', 'q']
    $0.16 = unary(fn=<built-in function neg>, value=$0.15) ['$0.15', '$0.16']
    $const0.18 = const(int, 2)               ['$const0.18']
    qout[$const0.18] = $0.16                 ['$0.16', '$const0.18', 'qout']
    $const0.20 = const(int, 3)               ['$const0.20']
    $0.21 = getitem(value=q, index=$const0.20, fn=<built-in function getitem>) ['$0.21', '$const0.20', 'q']
    $0.22 = unary(fn=<built-in function neg>, value=$0.21) ['$0.21', '$0.22']
    $const0.24 = const(int, 3)               ['$const0.24']
    qout[$const0.24] = $0.22                 ['$0.22', '$const0.24', 'qout']
    $const0.25 = const(NoneType, None)       ['$const0.25']
    $0.26 = cast(value=$const0.25)           ['$0.26', '$const0.25']
    return $0.26                             ['$0.26']

2022-01-24 14:09:00,309 DEBUG ==== SSA block analysis pass on 0
2022-01-24 14:09:00,309 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb328a20>
2022-01-24 14:09:00,309 DEBUG on stmt: q = arg(0, name=q)
2022-01-24 14:09:00,309 DEBUG on stmt: qout = arg(1, name=qout)
2022-01-24 14:09:00,309 DEBUG on stmt: $const0.2 = const(int, 0)
2022-01-24 14:09:00,309 DEBUG on stmt: $0.3 = static_getitem(value=q, index=0, index_var=$const0.2, fn=<built-in function getitem>)
2022-01-24 14:09:00,309 DEBUG on stmt: $0.4 = unary(fn=<built-in function pos>, value=$0.3)
2022-01-24 14:09:00,309 DEBUG on stmt: $const0.6 = const(int, 0)
2022-01-24 14:09:00,309 DEBUG on stmt: qout[0] = $0.4
2022-01-24 14:09:00,309 DEBUG on stmt: $const0.8 = const(int, 1)
2022-01-24 14:09:00,309 DEBUG on stmt: $0.9 = static_getitem(value=q, index=1, index_var=$const0.8, fn=<built-in function getitem>)
2022-01-24 14:09:00,309 DEBUG on stmt: $0.10 = unary(fn=<built-in function neg>, value=$0.9)
2022-01-24 14:09:00,309 DEBUG on stmt: $const0.12 = const(int, 1)
2022-01-24 14:09:00,309 DEBUG on stmt: qout[1] = $0.10
2022-01-24 14:09:00,309 DEBUG on stmt: $const0.14 = const(int, 2)
2022-01-24 14:09:00,310 DEBUG on stmt: $0.15 = static_getitem(value=q, index=2, index_var=$const0.14, fn=<built-in function getitem>)
2022-01-24 14:09:00,310 DEBUG on stmt: $0.16 = unary(fn=<built-in function neg>, value=$0.15)
2022-01-24 14:09:00,310 DEBUG on stmt: $const0.18 = const(int, 2)
2022-01-24 14:09:00,310 DEBUG on stmt: qout[2] = $0.16
2022-01-24 14:09:00,310 DEBUG on stmt: $const0.20 = const(int, 3)
2022-01-24 14:09:00,310 DEBUG on stmt: $0.21 = static_getitem(value=q, index=3, index_var=$const0.20, fn=<built-in function getitem>)
2022-01-24 14:09:00,310 DEBUG on stmt: $0.22 = unary(fn=<built-in function neg>, value=$0.21)
2022-01-24 14:09:00,310 DEBUG on stmt: $const0.24 = const(int, 3)
2022-01-24 14:09:00,310 DEBUG on stmt: qout[3] = $0.22
2022-01-24 14:09:00,310 DEBUG on stmt: $const0.25 = const(NoneType, None)
2022-01-24 14:09:00,310 DEBUG on stmt: $0.26 = cast(value=$const0.25)
2022-01-24 14:09:00,310 DEBUG on stmt: return $0.26
2022-01-24 14:09:00,310 DEBUG defs defaultdict(<class 'list'>,
            {'$0.10': [<numba.core.ir.Assign object at 0x7f94eb31fa90>],
             '$0.15': [<numba.core.ir.Assign object at 0x7f94eb230be0>],
             '$0.16': [<numba.core.ir.Assign object at 0x7f94eb31f7b8>],
             '$0.21': [<numba.core.ir.Assign object at 0x7f94eb2302b0>],
             '$0.22': [<numba.core.ir.Assign object at 0x7f94eb31fc50>],
             '$0.26': [<numba.core.ir.Assign object at 0x7f94eb2307b8>],
             '$0.3': [<numba.core.ir.Assign object at 0x7f94eb230cc0>],
             '$0.4': [<numba.core.ir.Assign object at 0x7f94eb3130f0>],
             '$0.9': [<numba.core.ir.Assign object at 0x7f94eb230ba8>],
             '$const0.12': [<numba.core.ir.Assign object at 0x7f94eb31f320>],
             '$const0.14': [<numba.core.ir.Assign object at 0x7f94eb31f080>],
             '$const0.18': [<numba.core.ir.Assign object at 0x7f94eb31fef0>],
             '$const0.2': [<numba.core.ir.Assign object at 0x7f94eb313668>],
             '$const0.20': [<numba.core.ir.Assign object at 0x7f94eb71c550>],
             '$const0.24': [<numba.core.ir.Assign object at 0x7f94eb31fe48>],
             '$const0.25': [<numba.core.ir.Assign object at 0x7f94eb230c50>],
             '$const0.6': [<numba.core.ir.Assign object at 0x7f94eb313278>],
             '$const0.8': [<numba.core.ir.Assign object at 0x7f94eb31ff28>],
             'q': [<numba.core.ir.Assign object at 0x7f94eb313780>],
             'qout': [<numba.core.ir.Assign object at 0x7f94eb313710>]})
2022-01-24 14:09:00,310 DEBUG SSA violators set()
2022-01-24 14:09:00,401 DEBUG label 0:
    q = arg(0, name=q)                       ['q']
    qout = arg(1, name=qout)                 ['qout']
    $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$0.1']
    $0.2 = getattr(value=$0.1, attr=sqrt)    ['$0.1', '$0.2']
    $const0.4 = const(int, 1)                ['$const0.4']
    $0.5 = getitem(value=q, index=$const0.4, fn=<built-in function getitem>) ['$0.5', '$const0.4', 'q']
    $const0.6 = const(int, 2)                ['$const0.6']
    $0.7 = $0.5 ** $const0.6                 ['$0.5', '$0.7', '$const0.6']
    $const0.9 = const(int, 2)                ['$const0.9']
    $0.10 = getitem(value=q, index=$const0.9, fn=<built-in function getitem>) ['$0.10', '$const0.9', 'q']
    $const0.11 = const(int, 2)               ['$const0.11']
    $0.12 = $0.10 ** $const0.11              ['$0.10', '$0.12', '$const0.11']
    $0.13 = $0.7 + $0.12                     ['$0.12', '$0.13', '$0.7']
    $const0.15 = const(int, 3)               ['$const0.15']
    $0.16 = getitem(value=q, index=$const0.15, fn=<built-in function getitem>) ['$0.16', '$const0.15', 'q']
    $const0.17 = const(int, 2)               ['$const0.17']
    $0.18 = $0.16 ** $const0.17              ['$0.16', '$0.18', '$const0.17']
    $0.19 = $0.13 + $0.18                    ['$0.13', '$0.18', '$0.19']
    vnorm = call $0.2($0.19, func=$0.2, args=[Var($0.19, algebra.py:209)], kws=(), vararg=None) ['$0.19', '$0.2', 'vnorm']
    $0.22 = global(_quaternion_resolution: 1.0000000000000002e-14) ['$0.22']
    $0.23 = vnorm > $0.22                    ['$0.22', '$0.23', 'vnorm']
    bool50 = global(bool: <class 'bool'>)    ['bool50']
    $50pred = call bool50($0.23, func=bool50, args=(Var($0.23, algebra.py:210),), kws=(), vararg=None) ['$0.23', '$50pred', 'bool50']
    branch $50pred, 52, 160                  ['$50pred']
label 52:
    $52.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$52.1']
    $52.2 = getattr(value=$52.1, attr=sin)   ['$52.1', '$52.2']
    $52.4 = call $52.2(vnorm, func=$52.2, args=[Var(vnorm, algebra.py:209)], kws=(), vararg=None) ['$52.2', '$52.4', 'vnorm']
    s = $52.4 / vnorm                        ['$52.4', 's', 'vnorm']
    $52.7 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$52.7']
    $52.8 = getattr(value=$52.7, attr=exp)   ['$52.7', '$52.8']
    $const52.10 = const(int, 0)              ['$const52.10']
    $52.11 = getitem(value=q, index=$const52.10, fn=<built-in function getitem>) ['$52.11', '$const52.10', 'q']
    e = call $52.8($52.11, func=$52.8, args=[Var($52.11, algebra.py:212)], kws=(), vararg=None) ['$52.11', '$52.8', 'e']
    $52.14 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$52.14']
    $52.15 = getattr(value=$52.14, attr=cos) ['$52.14', '$52.15']
    $52.17 = call $52.15(vnorm, func=$52.15, args=[Var(vnorm, algebra.py:209)], kws=(), vararg=None) ['$52.15', '$52.17', 'vnorm']
    $52.18 = e * $52.17                      ['$52.17', '$52.18', 'e']
    $const52.20 = const(int, 0)              ['$const52.20']
    qout[$const52.20] = $52.18               ['$52.18', '$const52.20', 'qout']
    $52.23 = e * s                           ['$52.23', 'e', 's']
    $const52.25 = const(int, 1)              ['$const52.25']
    $52.26 = getitem(value=q, index=$const52.25, fn=<built-in function getitem>) ['$52.26', '$const52.25', 'q']
    $52.27 = $52.23 * $52.26                 ['$52.23', '$52.26', '$52.27']
    $const52.29 = const(int, 1)              ['$const52.29']
    qout[$const52.29] = $52.27               ['$52.27', '$const52.29', 'qout']
    $52.32 = e * s                           ['$52.32', 'e', 's']
    $const52.34 = const(int, 2)              ['$const52.34']
    $52.35 = getitem(value=q, index=$const52.34, fn=<built-in function getitem>) ['$52.35', '$const52.34', 'q']
    $52.36 = $52.32 * $52.35                 ['$52.32', '$52.35', '$52.36']
    $const52.38 = const(int, 2)              ['$const52.38']
    qout[$const52.38] = $52.36               ['$52.36', '$const52.38', 'qout']
    $52.41 = e * s                           ['$52.41', 'e', 's']
    $const52.43 = const(int, 3)              ['$const52.43']
    $52.44 = getitem(value=q, index=$const52.43, fn=<built-in function getitem>) ['$52.44', '$const52.43', 'q']
    $52.45 = $52.41 * $52.44                 ['$52.41', '$52.44', '$52.45']
    $const52.47 = const(int, 3)              ['$const52.47']
    qout[$const52.47] = $52.45               ['$52.45', '$const52.47', 'qout']
    jump 202                                 []
label 160:
    $160.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$160.1']
    $160.2 = getattr(value=$160.1, attr=exp) ['$160.1', '$160.2']
    $const160.4 = const(int, 0)              ['$const160.4']
    $160.5 = getitem(value=q, index=$const160.4, fn=<built-in function getitem>) ['$160.5', '$const160.4', 'q']
    $160.6 = call $160.2($160.5, func=$160.2, args=[Var($160.5, algebra.py:218)], kws=(), vararg=None) ['$160.2', '$160.5', '$160.6']
    $const160.8 = const(int, 0)              ['$const160.8']
    qout[$const160.8] = $160.6               ['$160.6', '$const160.8', 'qout']
    $const160.9 = const(float, 0.0)          ['$const160.9']
    $const160.11 = const(int, 1)             ['$const160.11']
    qout[$const160.11] = $const160.9         ['$const160.11', '$const160.9', 'qout']
    $const160.12 = const(float, 0.0)         ['$const160.12']
    $const160.14 = const(int, 2)             ['$const160.14']
    qout[$const160.14] = $const160.12        ['$const160.12', '$const160.14', 'qout']
    $const160.15 = const(float, 0.0)         ['$const160.15']
    $const160.17 = const(int, 3)             ['$const160.17']
    qout[$const160.17] = $const160.15        ['$const160.15', '$const160.17', 'qout']
    jump 202                                 []
label 202:
    $const202.1 = const(NoneType, None)      ['$const202.1']
    $202.2 = cast(value=$const202.1)         ['$202.2', '$const202.1']
    return $202.2                            ['$202.2']

2022-01-24 14:09:00,408 DEBUG ==== SSA block analysis pass on 0
2022-01-24 14:09:00,408 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb5610f0>
2022-01-24 14:09:00,408 DEBUG on stmt: q = arg(0, name=q)
2022-01-24 14:09:00,408 DEBUG on stmt: qout = arg(1, name=qout)
2022-01-24 14:09:00,408 DEBUG on stmt: $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:09:00,408 DEBUG on stmt: $0.2 = getattr(value=$0.1, attr=sqrt)
2022-01-24 14:09:00,408 DEBUG on stmt: $const0.4 = const(int, 1)
2022-01-24 14:09:00,408 DEBUG on stmt: $0.5 = static_getitem(value=q, index=1, index_var=$const0.4, fn=<built-in function getitem>)
2022-01-24 14:09:00,409 DEBUG on stmt: $const0.6 = const(int, 2)
2022-01-24 14:09:00,409 DEBUG on stmt: $0.7 = $0.5 ** $const0.6
2022-01-24 14:09:00,409 DEBUG on stmt: $const0.9 = const(int, 2)
2022-01-24 14:09:00,409 DEBUG on stmt: $0.10 = static_getitem(value=q, index=2, index_var=$const0.9, fn=<built-in function getitem>)
2022-01-24 14:09:00,409 DEBUG on stmt: $const0.11 = const(int, 2)
2022-01-24 14:09:00,409 DEBUG on stmt: $0.12 = $0.10 ** $const0.11
2022-01-24 14:09:00,409 DEBUG on stmt: $0.13 = $0.7 + $0.12
2022-01-24 14:09:00,409 DEBUG on stmt: $const0.15 = const(int, 3)
2022-01-24 14:09:00,409 DEBUG on stmt: $0.16 = static_getitem(value=q, index=3, index_var=$const0.15, fn=<built-in function getitem>)
2022-01-24 14:09:00,409 DEBUG on stmt: $const0.17 = const(int, 2)
2022-01-24 14:09:00,409 DEBUG on stmt: $0.18 = $0.16 ** $const0.17
2022-01-24 14:09:00,409 DEBUG on stmt: $0.19 = $0.13 + $0.18
2022-01-24 14:09:00,409 DEBUG on stmt: vnorm = call $0.2($0.19, func=$0.2, args=[Var($0.19, algebra.py:209)], kws=(), vararg=None)
2022-01-24 14:09:00,409 DEBUG on stmt: $0.22 = global(_quaternion_resolution: 1.0000000000000002e-14)
2022-01-24 14:09:00,409 DEBUG on stmt: $0.23 = vnorm > $0.22
2022-01-24 14:09:00,409 DEBUG on stmt: bool50 = global(bool: <class 'bool'>)
2022-01-24 14:09:00,409 DEBUG on stmt: $50pred = call bool50($0.23, func=bool50, args=(Var($0.23, algebra.py:210),), kws=(), vararg=None)
2022-01-24 14:09:00,409 DEBUG on stmt: branch $50pred, 52, 160
2022-01-24 14:09:00,409 DEBUG ==== SSA block analysis pass on 52
2022-01-24 14:09:00,409 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb5610f0>
2022-01-24 14:09:00,409 DEBUG on stmt: $52.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:09:00,409 DEBUG on stmt: $52.2 = getattr(value=$52.1, attr=sin)
2022-01-24 14:09:00,409 DEBUG on stmt: $52.4 = call $52.2(vnorm, func=$52.2, args=[Var(vnorm, algebra.py:209)], kws=(), vararg=None)
2022-01-24 14:09:00,410 DEBUG on stmt: s = $52.4 / vnorm
2022-01-24 14:09:00,410 DEBUG on stmt: $52.7 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:09:00,410 DEBUG on stmt: $52.8 = getattr(value=$52.7, attr=exp)
2022-01-24 14:09:00,410 DEBUG on stmt: $const52.10 = const(int, 0)
2022-01-24 14:09:00,410 DEBUG on stmt: $52.11 = static_getitem(value=q, index=0, index_var=$const52.10, fn=<built-in function getitem>)
2022-01-24 14:09:00,410 DEBUG on stmt: e = call $52.8($52.11, func=$52.8, args=[Var($52.11, algebra.py:212)], kws=(), vararg=None)
2022-01-24 14:09:00,410 DEBUG on stmt: $52.14 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:09:00,410 DEBUG on stmt: $52.15 = getattr(value=$52.14, attr=cos)
2022-01-24 14:09:00,410 DEBUG on stmt: $52.17 = call $52.15(vnorm, func=$52.15, args=[Var(vnorm, algebra.py:209)], kws=(), vararg=None)
2022-01-24 14:09:00,410 DEBUG on stmt: $52.18 = e * $52.17
2022-01-24 14:09:00,410 DEBUG on stmt: $const52.20 = const(int, 0)
2022-01-24 14:09:00,410 DEBUG on stmt: qout[0] = $52.18
2022-01-24 14:09:00,410 DEBUG on stmt: $52.23 = e * s
2022-01-24 14:09:00,410 DEBUG on stmt: $const52.25 = const(int, 1)
2022-01-24 14:09:00,410 DEBUG on stmt: $52.26 = static_getitem(value=q, index=1, index_var=$const52.25, fn=<built-in function getitem>)
2022-01-24 14:09:00,410 DEBUG on stmt: $52.27 = $52.23 * $52.26
2022-01-24 14:09:00,410 DEBUG on stmt: $const52.29 = const(int, 1)
2022-01-24 14:09:00,410 DEBUG on stmt: qout[1] = $52.27
2022-01-24 14:09:00,410 DEBUG on stmt: $52.32 = e * s
2022-01-24 14:09:00,410 DEBUG on stmt: $const52.34 = const(int, 2)
2022-01-24 14:09:00,410 DEBUG on stmt: $52.35 = static_getitem(value=q, index=2, index_var=$const52.34, fn=<built-in function getitem>)
2022-01-24 14:09:00,410 DEBUG on stmt: $52.36 = $52.32 * $52.35
2022-01-24 14:09:00,410 DEBUG on stmt: $const52.38 = const(int, 2)
2022-01-24 14:09:00,410 DEBUG on stmt: qout[2] = $52.36
2022-01-24 14:09:00,410 DEBUG on stmt: $52.41 = e * s
2022-01-24 14:09:00,411 DEBUG on stmt: $const52.43 = const(int, 3)
2022-01-24 14:09:00,411 DEBUG on stmt: $52.44 = static_getitem(value=q, index=3, index_var=$const52.43, fn=<built-in function getitem>)
2022-01-24 14:09:00,411 DEBUG on stmt: $52.45 = $52.41 * $52.44
2022-01-24 14:09:00,411 DEBUG on stmt: $const52.47 = const(int, 3)
2022-01-24 14:09:00,411 DEBUG on stmt: qout[3] = $52.45
2022-01-24 14:09:00,411 DEBUG on stmt: jump 202
2022-01-24 14:09:00,411 DEBUG ==== SSA block analysis pass on 160
2022-01-24 14:09:00,411 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb5610f0>
2022-01-24 14:09:00,411 DEBUG on stmt: $160.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:09:00,411 DEBUG on stmt: $160.2 = getattr(value=$160.1, attr=exp)
2022-01-24 14:09:00,411 DEBUG on stmt: $const160.4 = const(int, 0)
2022-01-24 14:09:00,411 DEBUG on stmt: $160.5 = static_getitem(value=q, index=0, index_var=$const160.4, fn=<built-in function getitem>)
2022-01-24 14:09:00,411 DEBUG on stmt: $160.6 = call $160.2($160.5, func=$160.2, args=[Var($160.5, algebra.py:218)], kws=(), vararg=None)
2022-01-24 14:09:00,411 DEBUG on stmt: $const160.8 = const(int, 0)
2022-01-24 14:09:00,411 DEBUG on stmt: qout[0] = $160.6
2022-01-24 14:09:00,411 DEBUG on stmt: $const160.9 = const(float, 0.0)
2022-01-24 14:09:00,411 DEBUG on stmt: $const160.11 = const(int, 1)
2022-01-24 14:09:00,411 DEBUG on stmt: qout[1] = $const160.9
2022-01-24 14:09:00,411 DEBUG on stmt: $const160.12 = const(float, 0.0)
2022-01-24 14:09:00,411 DEBUG on stmt: $const160.14 = const(int, 2)
2022-01-24 14:09:00,411 DEBUG on stmt: qout[2] = $const160.12
2022-01-24 14:09:00,411 DEBUG on stmt: $const160.15 = const(float, 0.0)
2022-01-24 14:09:00,411 DEBUG on stmt: $const160.17 = const(int, 3)
2022-01-24 14:09:00,411 DEBUG on stmt: qout[3] = $const160.15
2022-01-24 14:09:00,411 DEBUG on stmt: jump 202
2022-01-24 14:09:00,411 DEBUG ==== SSA block analysis pass on 202
2022-01-24 14:09:00,412 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb5610f0>
2022-01-24 14:09:00,412 DEBUG on stmt: $const202.1 = const(NoneType, None)
2022-01-24 14:09:00,412 DEBUG on stmt: $202.2 = cast(value=$const202.1)
2022-01-24 14:09:00,412 DEBUG on stmt: return $202.2
2022-01-24 14:09:00,412 DEBUG defs defaultdict(<class 'list'>,
            {'$0.1': [<numba.core.ir.Assign object at 0x7f94eb5706d8>],
             '$0.10': [<numba.core.ir.Assign object at 0x7f94eb650d30>],
             '$0.12': [<numba.core.ir.Assign object at 0x7f94eb55d048>],
             '$0.13': [<numba.core.ir.Assign object at 0x7f94eb55d128>],
             '$0.16': [<numba.core.ir.Assign object at 0x7f94eb650da0>],
             '$0.18': [<numba.core.ir.Assign object at 0x7f94eb55d550>],
             '$0.19': [<numba.core.ir.Assign object at 0x7f94eb55d630>],
             '$0.2': [<numba.core.ir.Assign object at 0x7f94eb5707b8>],
             '$0.22': [<numba.core.ir.Assign object at 0x7f94eb55d940>],
             '$0.23': [<numba.core.ir.Assign object at 0x7f94eb55da20>],
             '$0.5': [<numba.core.ir.Assign object at 0x7f94eb650cc0>],
             '$0.7': [<numba.core.ir.Assign object at 0x7f94eb570be0>],
             '$160.1': [<numba.core.ir.Assign object at 0x7f94eb67fc88>],
             '$160.2': [<numba.core.ir.Assign object at 0x7f94eb645438>],
             '$160.5': [<numba.core.ir.Assign object at 0x7f94eb561b00>],
             '$160.6': [<numba.core.ir.Assign object at 0x7f94eb667630>],
             '$202.2': [<numba.core.ir.Assign object at 0x7f94eb650240>],
             '$50pred': [<numba.core.ir.Assign object at 0x7f94eb55dc18>],
             '$52.1': [<numba.core.ir.Assign object at 0x7f94eb55dc88>],
             '$52.11': [<numba.core.ir.Assign object at 0x7f94eb5613c8>],
             '$52.14': [<numba.core.ir.Assign object at 0x7f94eb67f898>],
             '$52.15': [<numba.core.ir.Assign object at 0x7f94eb67f978>],
             '$52.17': [<numba.core.ir.Assign object at 0x7f94eb67fb00>],
             '$52.18': [<numba.core.ir.Assign object at 0x7f94eb67fbe0>],
             '$52.2': [<numba.core.ir.Assign object at 0x7f94eb55dd68>],
             '$52.23': [<numba.core.ir.Assign object at 0x7f94eb645048>],
             '$52.26': [<numba.core.ir.Assign object at 0x7f94eb561390>],
             '$52.27': [<numba.core.ir.Assign object at 0x7f94eb645390>],
             '$52.32': [<numba.core.ir.Assign object at 0x7f94eb6457b8>],
             '$52.35': [<numba.core.ir.Assign object at 0x7f94eb650fd0>],
             '$52.36': [<numba.core.ir.Assign object at 0x7f94eb645b00>],
             '$52.4': [<numba.core.ir.Assign object at 0x7f94eb55def0>],
             '$52.41': [<numba.core.ir.Assign object at 0x7f94eb645f28>],
             '$52.44': [<numba.core.ir.Assign object at 0x7f94eb650c50>],
             '$52.45': [<numba.core.ir.Assign object at 0x7f94eb6672b0>],
             '$52.7': [<numba.core.ir.Assign object at 0x7f94eb67f240>],
             '$52.8': [<numba.core.ir.Assign object at 0x7f94eb67f320>],
             '$const0.11': [<numba.core.ir.Assign object at 0x7f94eb570f28>],
             '$const0.15': [<numba.core.ir.Assign object at 0x7f94eb55d2b0>],
             '$const0.17': [<numba.core.ir.Assign object at 0x7f94eb55d470>],
             '$const0.4': [<numba.core.ir.Assign object at 0x7f94eb570940>],
             '$const0.6': [<numba.core.ir.Assign object at 0x7f94eb570b00>],
             '$const0.9': [<numba.core.ir.Assign object at 0x7f94eb570d68>],
             '$const160.11': [<numba.core.ir.Assign object at 0x7f94eb667a90>],
             '$const160.12': [<numba.core.ir.Assign object at 0x7f94eb667be0>],
             '$const160.14': [<numba.core.ir.Assign object at 0x7f94eb667d68>],
             '$const160.15': [<numba.core.ir.Assign object at 0x7f94eb667eb8>],
             '$const160.17': [<numba.core.ir.Assign object at 0x7f94eb6500b8>],
             '$const160.4': [<numba.core.ir.Assign object at 0x7f94eb645fd0>],
             '$const160.8': [<numba.core.ir.Assign object at 0x7f94eb6677b8>],
             '$const160.9': [<numba.core.ir.Assign object at 0x7f94eb667908>],
             '$const202.1': [<numba.core.ir.Assign object at 0x7f94eb650160>],
             '$const52.10': [<numba.core.ir.Assign object at 0x7f94eb67f4a8>],
             '$const52.20': [<numba.core.ir.Assign object at 0x7f94eb67fd68>],
             '$const52.25': [<numba.core.ir.Assign object at 0x7f94eb6451d0>],
             '$const52.29': [<numba.core.ir.Assign object at 0x7f94eb645518>],
             '$const52.34': [<numba.core.ir.Assign object at 0x7f94eb645940>],
             '$const52.38': [<numba.core.ir.Assign object at 0x7f94eb645c88>],
             '$const52.43': [<numba.core.ir.Assign object at 0x7f94eb6670f0>],
             '$const52.47': [<numba.core.ir.Assign object at 0x7f94eb667438>],
             'bool50': [<numba.core.ir.Assign object at 0x7f94eb55db38>],
             'e': [<numba.core.ir.Assign object at 0x7f94eb67f668>],
             'q': [<numba.core.ir.Assign object at 0x7f94eb570550>],
             'qout': [<numba.core.ir.Assign object at 0x7f94eb5705f8>],
             's': [<numba.core.ir.Assign object at 0x7f94eb67f0b8>],
             'vnorm': [<numba.core.ir.Assign object at 0x7f94eb55d710>]})
2022-01-24 14:09:00,413 DEBUG SSA violators set()
2022-01-24 14:09:00,600 DEBUG label 0:
    q = arg(0, name=q)                       ['q']
    qout = arg(1, name=qout)                 ['qout']
    $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$0.1']
    $0.2 = getattr(value=$0.1, attr=sqrt)    ['$0.1', '$0.2']
    $const0.4 = const(int, 1)                ['$const0.4']
    $0.5 = getitem(value=q, index=$const0.4, fn=<built-in function getitem>) ['$0.5', '$const0.4', 'q']
    $const0.6 = const(int, 2)                ['$const0.6']
    $0.7 = $0.5 ** $const0.6                 ['$0.5', '$0.7', '$const0.6']
    $const0.9 = const(int, 2)                ['$const0.9']
    $0.10 = getitem(value=q, index=$const0.9, fn=<built-in function getitem>) ['$0.10', '$const0.9', 'q']
    $const0.11 = const(int, 2)               ['$const0.11']
    $0.12 = $0.10 ** $const0.11              ['$0.10', '$0.12', '$const0.11']
    $0.13 = $0.7 + $0.12                     ['$0.12', '$0.13', '$0.7']
    $const0.15 = const(int, 3)               ['$const0.15']
    $0.16 = getitem(value=q, index=$const0.15, fn=<built-in function getitem>) ['$0.16', '$const0.15', 'q']
    $const0.17 = const(int, 2)               ['$const0.17']
    $0.18 = $0.16 ** $const0.17              ['$0.16', '$0.18', '$const0.17']
    $0.19 = $0.13 + $0.18                    ['$0.13', '$0.18', '$0.19']
    b = call $0.2($0.19, func=$0.2, args=[Var($0.19, algebra.py:227)], kws=(), vararg=None) ['$0.19', '$0.2', 'b']
    $0.22 = global(_quaternion_resolution: 1.0000000000000002e-14) ['$0.22']
    $0.23 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$0.23']
    $0.24 = getattr(value=$0.23, attr=abs)   ['$0.23', '$0.24']
    $const0.26 = const(int, 0)               ['$const0.26']
    $0.27 = getitem(value=q, index=$const0.26, fn=<built-in function getitem>) ['$0.27', '$const0.26', 'q']
    $0.28 = call $0.24($0.27, func=$0.24, args=[Var($0.27, algebra.py:228)], kws=(), vararg=None) ['$0.24', '$0.27', '$0.28']
    $0.29 = $0.22 * $0.28                    ['$0.22', '$0.28', '$0.29']
    $0.30 = b <= $0.29                       ['$0.29', '$0.30', 'b']
    bool64 = global(bool: <class 'bool'>)    ['bool64']
    $64pred = call bool64($0.30, func=bool64, args=(Var($0.30, algebra.py:228),), kws=(), vararg=None) ['$0.30', '$64pred', 'bool64']
    branch $64pred, 66, 228                  ['$64pred']
label 66:
    $const66.2 = const(int, 0)               ['$const66.2']
    $66.3 = getitem(value=q, index=$const66.2, fn=<built-in function getitem>) ['$66.3', '$const66.2', 'q']
    $const66.4 = const(float, 0.0)           ['$const66.4']
    $66.5 = $66.3 < $const66.4               ['$66.3', '$66.5', '$const66.4']
    bool76 = global(bool: <class 'bool'>)    ['bool76']
    $76pred = call bool76($66.5, func=bool76, args=(Var($66.5, algebra.py:229),), kws=(), vararg=None) ['$66.5', '$76pred', 'bool76']
    branch $76pred, 78, 184                  ['$76pred']
label 78:
    $78.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$78.1']
    $78.2 = getattr(value=$78.1, attr=abs)   ['$78.1', '$78.2']
    $const78.4 = const(int, 0)               ['$const78.4']
    $78.5 = getitem(value=q, index=$const78.4, fn=<built-in function getitem>) ['$78.5', '$const78.4', 'q']
    $const78.6 = const(int, 1)               ['$const78.6']
    $78.7 = $78.5 + $const78.6               ['$78.5', '$78.7', '$const78.6']
    $78.8 = call $78.2($78.7, func=$78.2, args=[Var($78.7, algebra.py:230)], kws=(), vararg=None) ['$78.2', '$78.7', '$78.8']
    $78.9 = global(_quaternion_resolution: 1.0000000000000002e-14) ['$78.9']
    $78.10 = $78.8 > $78.9                   ['$78.10', '$78.8', '$78.9']
    bool98 = global(bool: <class 'bool'>)    ['bool98']
    $98pred = call bool98($78.10, func=bool98, args=(Var($78.10, algebra.py:230),), kws=(), vararg=None) ['$78.10', '$98pred', 'bool98']
    branch $98pred, 100, 148                 ['$98pred']
label 100:
    $100.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$100.1']
    $100.2 = getattr(value=$100.1, attr=log) ['$100.1', '$100.2']
    $const100.4 = const(int, 0)              ['$const100.4']
    $100.5 = getitem(value=q, index=$const100.4, fn=<built-in function getitem>) ['$100.5', '$const100.4', 'q']
    $100.6 = unary(fn=<built-in function neg>, value=$100.5) ['$100.5', '$100.6']
    $100.7 = call $100.2($100.6, func=$100.2, args=[Var($100.6, algebra.py:231)], kws=(), vararg=None) ['$100.2', '$100.6', '$100.7']
    $const100.9 = const(int, 0)              ['$const100.9']
    qout[$const100.9] = $100.7               ['$100.7', '$const100.9', 'qout']
    $100.10 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$100.10']
    $100.11 = getattr(value=$100.10, attr=pi) ['$100.10', '$100.11']
    $const100.13 = const(int, 1)             ['$const100.13']
    qout[$const100.13] = $100.11             ['$100.11', '$const100.13', 'qout']
    $const100.14 = const(float, 0.0)         ['$const100.14']
    $const100.16 = const(int, 2)             ['$const100.16']
    qout[$const100.16] = $const100.14        ['$const100.14', '$const100.16', 'qout']
    $const100.17 = const(float, 0.0)         ['$const100.17']
    $const100.19 = const(int, 3)             ['$const100.19']
    qout[$const100.19] = $const100.17        ['$const100.17', '$const100.19', 'qout']
    jump 226                                 []
label 148:
    $const148.1 = const(float, 0.0)          ['$const148.1']
    $const148.3 = const(int, 0)              ['$const148.3']
    qout[$const148.3] = $const148.1          ['$const148.1', '$const148.3', 'qout']
    $148.4 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$148.4']
    $148.5 = getattr(value=$148.4, attr=pi)  ['$148.4', '$148.5']
    $const148.7 = const(int, 1)              ['$const148.7']
    qout[$const148.7] = $148.5               ['$148.5', '$const148.7', 'qout']
    $const148.8 = const(float, 0.0)          ['$const148.8']
    $const148.10 = const(int, 2)             ['$const148.10']
    qout[$const148.10] = $const148.8         ['$const148.10', '$const148.8', 'qout']
    $const148.11 = const(float, 0.0)         ['$const148.11']
    $const148.13 = const(int, 3)             ['$const148.13']
    qout[$const148.13] = $const148.11        ['$const148.11', '$const148.13', 'qout']
    jump 226                                 []
label 184:
    $184.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$184.1']
    $184.2 = getattr(value=$184.1, attr=log) ['$184.1', '$184.2']
    $const184.4 = const(int, 0)              ['$const184.4']
    $184.5 = getitem(value=q, index=$const184.4, fn=<built-in function getitem>) ['$184.5', '$const184.4', 'q']
    $184.6 = call $184.2($184.5, func=$184.2, args=[Var($184.5, algebra.py:241)], kws=(), vararg=None) ['$184.2', '$184.5', '$184.6']
    $const184.8 = const(int, 0)              ['$const184.8']
    qout[$const184.8] = $184.6               ['$184.6', '$const184.8', 'qout']
    $const184.9 = const(float, 0.0)          ['$const184.9']
    $const184.11 = const(int, 1)             ['$const184.11']
    qout[$const184.11] = $const184.9         ['$const184.11', '$const184.9', 'qout']
    $const184.12 = const(float, 0.0)         ['$const184.12']
    $const184.14 = const(int, 2)             ['$const184.14']
    qout[$const184.14] = $const184.12        ['$const184.12', '$const184.14', 'qout']
    $const184.15 = const(float, 0.0)         ['$const184.15']
    $const184.17 = const(int, 3)             ['$const184.17']
    qout[$const184.17] = $const184.15        ['$const184.15', '$const184.17', 'qout']
    jump 226                                 []
label 226:
    jump 338                                 []
label 228:
    $228.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$228.1']
    $228.2 = getattr(value=$228.1, attr=arctan2) ['$228.1', '$228.2']
    $const228.5 = const(int, 0)              ['$const228.5']
    $228.6 = getitem(value=q, index=$const228.5, fn=<built-in function getitem>) ['$228.6', '$const228.5', 'q']
    v = call $228.2(b, $228.6, func=$228.2, args=[Var(b, algebra.py:227), Var($228.6, algebra.py:246)], kws=(), vararg=None) ['$228.2', '$228.6', 'b', 'v']
    f = v / b                                ['b', 'f', 'v']
    $228.11 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$228.11']
    $228.12 = getattr(value=$228.11, attr=log) ['$228.11', '$228.12']
    $const228.14 = const(int, 0)             ['$const228.14']
    $228.15 = getitem(value=q, index=$const228.14, fn=<built-in function getitem>) ['$228.15', '$const228.14', 'q']
    $const228.17 = const(int, 0)             ['$const228.17']
    $228.18 = getitem(value=q, index=$const228.17, fn=<built-in function getitem>) ['$228.18', '$const228.17', 'q']
    $228.19 = $228.15 * $228.18              ['$228.15', '$228.18', '$228.19']
    $228.22 = b * b                          ['$228.22', 'b', 'b']
    $228.23 = $228.19 + $228.22              ['$228.19', '$228.22', '$228.23']
    $228.24 = call $228.12($228.23, func=$228.12, args=[Var($228.23, algebra.py:248)], kws=(), vararg=None) ['$228.12', '$228.23', '$228.24']
    $const228.25 = const(float, 2.0)         ['$const228.25']
    $228.26 = $228.24 / $const228.25         ['$228.24', '$228.26', '$const228.25']
    $const228.28 = const(int, 0)             ['$const228.28']
    qout[$const228.28] = $228.26             ['$228.26', '$const228.28', 'qout']
    $const228.31 = const(int, 1)             ['$const228.31']
    $228.32 = getitem(value=q, index=$const228.31, fn=<built-in function getitem>) ['$228.32', '$const228.31', 'q']
    $228.33 = f * $228.32                    ['$228.32', '$228.33', 'f']
    $const228.35 = const(int, 1)             ['$const228.35']
    qout[$const228.35] = $228.33             ['$228.33', '$const228.35', 'qout']
    $const228.38 = const(int, 2)             ['$const228.38']
    $228.39 = getitem(value=q, index=$const228.38, fn=<built-in function getitem>) ['$228.39', '$const228.38', 'q']
    $228.40 = f * $228.39                    ['$228.39', '$228.40', 'f']
    $const228.42 = const(int, 2)             ['$const228.42']
    qout[$const228.42] = $228.40             ['$228.40', '$const228.42', 'qout']
    $const228.45 = const(int, 3)             ['$const228.45']
    $228.46 = getitem(value=q, index=$const228.45, fn=<built-in function getitem>) ['$228.46', '$const228.45', 'q']
    $228.47 = f * $228.46                    ['$228.46', '$228.47', 'f']
    $const228.49 = const(int, 3)             ['$const228.49']
    qout[$const228.49] = $228.47             ['$228.47', '$const228.49', 'qout']
    jump 338                                 []
label 338:
    $const338.1 = const(NoneType, None)      ['$const338.1']
    $338.2 = cast(value=$const338.1)         ['$338.2', '$const338.1']
    return $338.2                            ['$338.2']

2022-01-24 14:09:00,620 DEBUG ==== SSA block analysis pass on 0
2022-01-24 14:09:00,621 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb4f9710>
2022-01-24 14:09:00,621 DEBUG on stmt: q = arg(0, name=q)
2022-01-24 14:09:00,621 DEBUG on stmt: qout = arg(1, name=qout)
2022-01-24 14:09:00,621 DEBUG on stmt: $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:09:00,621 DEBUG on stmt: $0.2 = getattr(value=$0.1, attr=sqrt)
2022-01-24 14:09:00,621 DEBUG on stmt: $const0.4 = const(int, 1)
2022-01-24 14:09:00,621 DEBUG on stmt: $0.5 = static_getitem(value=q, index=1, index_var=$const0.4, fn=<built-in function getitem>)
2022-01-24 14:09:00,621 DEBUG on stmt: $const0.6 = const(int, 2)
2022-01-24 14:09:00,621 DEBUG on stmt: $0.7 = $0.5 ** $const0.6
2022-01-24 14:09:00,621 DEBUG on stmt: $const0.9 = const(int, 2)
2022-01-24 14:09:00,621 DEBUG on stmt: $0.10 = static_getitem(value=q, index=2, index_var=$const0.9, fn=<built-in function getitem>)
2022-01-24 14:09:00,621 DEBUG on stmt: $const0.11 = const(int, 2)
2022-01-24 14:09:00,622 DEBUG on stmt: $0.12 = $0.10 ** $const0.11
2022-01-24 14:09:00,622 DEBUG on stmt: $0.13 = $0.7 + $0.12
2022-01-24 14:09:00,622 DEBUG on stmt: $const0.15 = const(int, 3)
2022-01-24 14:09:00,622 DEBUG on stmt: $0.16 = static_getitem(value=q, index=3, index_var=$const0.15, fn=<built-in function getitem>)
2022-01-24 14:09:00,622 DEBUG on stmt: $const0.17 = const(int, 2)
2022-01-24 14:09:00,622 DEBUG on stmt: $0.18 = $0.16 ** $const0.17
2022-01-24 14:09:00,622 DEBUG on stmt: $0.19 = $0.13 + $0.18
2022-01-24 14:09:00,622 DEBUG on stmt: b = call $0.2($0.19, func=$0.2, args=[Var($0.19, algebra.py:227)], kws=(), vararg=None)
2022-01-24 14:09:00,622 DEBUG on stmt: $0.22 = global(_quaternion_resolution: 1.0000000000000002e-14)
2022-01-24 14:09:00,622 DEBUG on stmt: $0.23 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:09:00,622 DEBUG on stmt: $0.24 = getattr(value=$0.23, attr=abs)
2022-01-24 14:09:00,622 DEBUG on stmt: $const0.26 = const(int, 0)
2022-01-24 14:09:00,622 DEBUG on stmt: $0.27 = static_getitem(value=q, index=0, index_var=$const0.26, fn=<built-in function getitem>)
2022-01-24 14:09:00,622 DEBUG on stmt: $0.28 = call $0.24($0.27, func=$0.24, args=[Var($0.27, algebra.py:228)], kws=(), vararg=None)
2022-01-24 14:09:00,623 DEBUG on stmt: $0.29 = $0.22 * $0.28
2022-01-24 14:09:00,623 DEBUG on stmt: $0.30 = b <= $0.29
2022-01-24 14:09:00,623 DEBUG on stmt: bool64 = global(bool: <class 'bool'>)
2022-01-24 14:09:00,623 DEBUG on stmt: $64pred = call bool64($0.30, func=bool64, args=(Var($0.30, algebra.py:228),), kws=(), vararg=None)
2022-01-24 14:09:00,623 DEBUG on stmt: branch $64pred, 66, 228
2022-01-24 14:09:00,623 DEBUG ==== SSA block analysis pass on 66
2022-01-24 14:09:00,623 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb4f9710>
2022-01-24 14:09:00,623 DEBUG on stmt: $const66.2 = const(int, 0)
2022-01-24 14:09:00,623 DEBUG on stmt: $66.3 = static_getitem(value=q, index=0, index_var=$const66.2, fn=<built-in function getitem>)
2022-01-24 14:09:00,623 DEBUG on stmt: $const66.4 = const(float, 0.0)
2022-01-24 14:09:00,623 DEBUG on stmt: $66.5 = $66.3 < $const66.4
2022-01-24 14:09:00,623 DEBUG on stmt: bool76 = global(bool: <class 'bool'>)
2022-01-24 14:09:00,623 DEBUG on stmt: $76pred = call bool76($66.5, func=bool76, args=(Var($66.5, algebra.py:229),), kws=(), vararg=None)
2022-01-24 14:09:00,623 DEBUG on stmt: branch $76pred, 78, 184
2022-01-24 14:09:00,624 DEBUG ==== SSA block analysis pass on 78
2022-01-24 14:09:00,624 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb4f9710>
2022-01-24 14:09:00,624 DEBUG on stmt: $78.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:09:00,624 DEBUG on stmt: $78.2 = getattr(value=$78.1, attr=abs)
2022-01-24 14:09:00,624 DEBUG on stmt: $const78.4 = const(int, 0)
2022-01-24 14:09:00,624 DEBUG on stmt: $78.5 = static_getitem(value=q, index=0, index_var=$const78.4, fn=<built-in function getitem>)
2022-01-24 14:09:00,624 DEBUG on stmt: $const78.6 = const(int, 1)
2022-01-24 14:09:00,624 DEBUG on stmt: $78.7 = $78.5 + $const78.6
2022-01-24 14:09:00,624 DEBUG on stmt: $78.8 = call $78.2($78.7, func=$78.2, args=[Var($78.7, algebra.py:230)], kws=(), vararg=None)
2022-01-24 14:09:00,624 DEBUG on stmt: $78.9 = global(_quaternion_resolution: 1.0000000000000002e-14)
2022-01-24 14:09:00,624 DEBUG on stmt: $78.10 = $78.8 > $78.9
2022-01-24 14:09:00,624 DEBUG on stmt: bool98 = global(bool: <class 'bool'>)
2022-01-24 14:09:00,624 DEBUG on stmt: $98pred = call bool98($78.10, func=bool98, args=(Var($78.10, algebra.py:230),), kws=(), vararg=None)
2022-01-24 14:09:00,625 DEBUG on stmt: branch $98pred, 100, 148
2022-01-24 14:09:00,625 DEBUG ==== SSA block analysis pass on 100
2022-01-24 14:09:00,625 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb4f9710>
2022-01-24 14:09:00,625 DEBUG on stmt: $100.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:09:00,625 DEBUG on stmt: $100.2 = getattr(value=$100.1, attr=log)
2022-01-24 14:09:00,625 DEBUG on stmt: $const100.4 = const(int, 0)
2022-01-24 14:09:00,625 DEBUG on stmt: $100.5 = static_getitem(value=q, index=0, index_var=$const100.4, fn=<built-in function getitem>)
2022-01-24 14:09:00,625 DEBUG on stmt: $100.6 = unary(fn=<built-in function neg>, value=$100.5)
2022-01-24 14:09:00,625 DEBUG on stmt: $100.7 = call $100.2($100.6, func=$100.2, args=[Var($100.6, algebra.py:231)], kws=(), vararg=None)
2022-01-24 14:09:00,625 DEBUG on stmt: $const100.9 = const(int, 0)
2022-01-24 14:09:00,625 DEBUG on stmt: qout[0] = $100.7
2022-01-24 14:09:00,625 DEBUG on stmt: $100.10 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:09:00,625 DEBUG on stmt: $100.11 = getattr(value=$100.10, attr=pi)
2022-01-24 14:09:00,625 DEBUG on stmt: $const100.13 = const(int, 1)
2022-01-24 14:09:00,625 DEBUG on stmt: qout[1] = $100.11
2022-01-24 14:09:00,625 DEBUG on stmt: $const100.14 = const(float, 0.0)
2022-01-24 14:09:00,626 DEBUG on stmt: $const100.16 = const(int, 2)
2022-01-24 14:09:00,626 DEBUG on stmt: qout[2] = $const100.14
2022-01-24 14:09:00,626 DEBUG on stmt: $const100.17 = const(float, 0.0)
2022-01-24 14:09:00,626 DEBUG on stmt: $const100.19 = const(int, 3)
2022-01-24 14:09:00,626 DEBUG on stmt: qout[3] = $const100.17
2022-01-24 14:09:00,626 DEBUG on stmt: jump 226
2022-01-24 14:09:00,626 DEBUG ==== SSA block analysis pass on 148
2022-01-24 14:09:00,626 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb4f9710>
2022-01-24 14:09:00,626 DEBUG on stmt: $const148.1 = const(float, 0.0)
2022-01-24 14:09:00,626 DEBUG on stmt: $const148.3 = const(int, 0)
2022-01-24 14:09:00,626 DEBUG on stmt: qout[0] = $const148.1
2022-01-24 14:09:00,626 DEBUG on stmt: $148.4 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:09:00,626 DEBUG on stmt: $148.5 = getattr(value=$148.4, attr=pi)
2022-01-24 14:09:00,626 DEBUG on stmt: $const148.7 = const(int, 1)
2022-01-24 14:09:00,626 DEBUG on stmt: qout[1] = $148.5
2022-01-24 14:09:00,626 DEBUG on stmt: $const148.8 = const(float, 0.0)
2022-01-24 14:09:00,626 DEBUG on stmt: $const148.10 = const(int, 2)
2022-01-24 14:09:00,626 DEBUG on stmt: qout[2] = $const148.8
2022-01-24 14:09:00,626 DEBUG on stmt: $const148.11 = const(float, 0.0)
2022-01-24 14:09:00,626 DEBUG on stmt: $const148.13 = const(int, 3)
2022-01-24 14:09:00,626 DEBUG on stmt: qout[3] = $const148.11
2022-01-24 14:09:00,626 DEBUG on stmt: jump 226
2022-01-24 14:09:00,626 DEBUG ==== SSA block analysis pass on 184
2022-01-24 14:09:00,627 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb4f9710>
2022-01-24 14:09:00,627 DEBUG on stmt: $184.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:09:00,627 DEBUG on stmt: $184.2 = getattr(value=$184.1, attr=log)
2022-01-24 14:09:00,627 DEBUG on stmt: $const184.4 = const(int, 0)
2022-01-24 14:09:00,627 DEBUG on stmt: $184.5 = static_getitem(value=q, index=0, index_var=$const184.4, fn=<built-in function getitem>)
2022-01-24 14:09:00,627 DEBUG on stmt: $184.6 = call $184.2($184.5, func=$184.2, args=[Var($184.5, algebra.py:241)], kws=(), vararg=None)
2022-01-24 14:09:00,627 DEBUG on stmt: $const184.8 = const(int, 0)
2022-01-24 14:09:00,627 DEBUG on stmt: qout[0] = $184.6
2022-01-24 14:09:00,627 DEBUG on stmt: $const184.9 = const(float, 0.0)
2022-01-24 14:09:00,627 DEBUG on stmt: $const184.11 = const(int, 1)
2022-01-24 14:09:00,627 DEBUG on stmt: qout[1] = $const184.9
2022-01-24 14:09:00,627 DEBUG on stmt: $const184.12 = const(float, 0.0)
2022-01-24 14:09:00,627 DEBUG on stmt: $const184.14 = const(int, 2)
2022-01-24 14:09:00,627 DEBUG on stmt: qout[2] = $const184.12
2022-01-24 14:09:00,627 DEBUG on stmt: $const184.15 = const(float, 0.0)
2022-01-24 14:09:00,627 DEBUG on stmt: $const184.17 = const(int, 3)
2022-01-24 14:09:00,627 DEBUG on stmt: qout[3] = $const184.15
2022-01-24 14:09:00,627 DEBUG on stmt: jump 226
2022-01-24 14:09:00,627 DEBUG ==== SSA block analysis pass on 226
2022-01-24 14:09:00,627 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb4f9710>
2022-01-24 14:09:00,627 DEBUG on stmt: jump 338
2022-01-24 14:09:00,627 DEBUG ==== SSA block analysis pass on 228
2022-01-24 14:09:00,627 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb4f9710>
2022-01-24 14:09:00,627 DEBUG on stmt: $228.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:09:00,627 DEBUG on stmt: $228.2 = getattr(value=$228.1, attr=arctan2)
2022-01-24 14:09:00,627 DEBUG on stmt: $const228.5 = const(int, 0)
2022-01-24 14:09:00,627 DEBUG on stmt: $228.6 = static_getitem(value=q, index=0, index_var=$const228.5, fn=<built-in function getitem>)
2022-01-24 14:09:00,627 DEBUG on stmt: v = call $228.2(b, $228.6, func=$228.2, args=[Var(b, algebra.py:227), Var($228.6, algebra.py:246)], kws=(), vararg=None)
2022-01-24 14:09:00,628 DEBUG on stmt: f = v / b
2022-01-24 14:09:00,628 DEBUG on stmt: $228.11 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:09:00,628 DEBUG on stmt: $228.12 = getattr(value=$228.11, attr=log)
2022-01-24 14:09:00,628 DEBUG on stmt: $const228.14 = const(int, 0)
2022-01-24 14:09:00,628 DEBUG on stmt: $228.15 = static_getitem(value=q, index=0, index_var=$const228.14, fn=<built-in function getitem>)
2022-01-24 14:09:00,628 DEBUG on stmt: $const228.17 = const(int, 0)
2022-01-24 14:09:00,628 DEBUG on stmt: $228.18 = static_getitem(value=q, index=0, index_var=$const228.17, fn=<built-in function getitem>)
2022-01-24 14:09:00,628 DEBUG on stmt: $228.19 = $228.15 * $228.18
2022-01-24 14:09:00,628 DEBUG on stmt: $228.22 = b * b
2022-01-24 14:09:00,628 DEBUG on stmt: $228.23 = $228.19 + $228.22
2022-01-24 14:09:00,628 DEBUG on stmt: $228.24 = call $228.12($228.23, func=$228.12, args=[Var($228.23, algebra.py:248)], kws=(), vararg=None)
2022-01-24 14:09:00,628 DEBUG on stmt: $const228.25 = const(float, 2.0)
2022-01-24 14:09:00,629 DEBUG on stmt: $228.26 = $228.24 / $const228.25
2022-01-24 14:09:00,629 DEBUG on stmt: $const228.28 = const(int, 0)
2022-01-24 14:09:00,629 DEBUG on stmt: qout[0] = $228.26
2022-01-24 14:09:00,629 DEBUG on stmt: $const228.31 = const(int, 1)
2022-01-24 14:09:00,629 DEBUG on stmt: $228.32 = static_getitem(value=q, index=1, index_var=$const228.31, fn=<built-in function getitem>)
2022-01-24 14:09:00,629 DEBUG on stmt: $228.33 = f * $228.32
2022-01-24 14:09:00,629 DEBUG on stmt: $const228.35 = const(int, 1)
2022-01-24 14:09:00,629 DEBUG on stmt: qout[1] = $228.33
2022-01-24 14:09:00,629 DEBUG on stmt: $const228.38 = const(int, 2)
2022-01-24 14:09:00,629 DEBUG on stmt: $228.39 = static_getitem(value=q, index=2, index_var=$const228.38, fn=<built-in function getitem>)
2022-01-24 14:09:00,629 DEBUG on stmt: $228.40 = f * $228.39
2022-01-24 14:09:00,629 DEBUG on stmt: $const228.42 = const(int, 2)
2022-01-24 14:09:00,630 DEBUG on stmt: qout[2] = $228.40
2022-01-24 14:09:00,630 DEBUG on stmt: $const228.45 = const(int, 3)
2022-01-24 14:09:00,630 DEBUG on stmt: $228.46 = static_getitem(value=q, index=3, index_var=$const228.45, fn=<built-in function getitem>)
2022-01-24 14:09:00,630 DEBUG on stmt: $228.47 = f * $228.46
2022-01-24 14:09:00,630 DEBUG on stmt: $const228.49 = const(int, 3)
2022-01-24 14:09:00,630 DEBUG on stmt: qout[3] = $228.47
2022-01-24 14:09:00,630 DEBUG on stmt: jump 338
2022-01-24 14:09:00,630 DEBUG ==== SSA block analysis pass on 338
2022-01-24 14:09:00,630 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb4f9710>
2022-01-24 14:09:00,630 DEBUG on stmt: $const338.1 = const(NoneType, None)
2022-01-24 14:09:00,630 DEBUG on stmt: $338.2 = cast(value=$const338.1)
2022-01-24 14:09:00,630 DEBUG on stmt: return $338.2
2022-01-24 14:09:00,632 DEBUG defs defaultdict(<class 'list'>,
            {'$0.1': [<numba.core.ir.Assign object at 0x7f94eb4ef1d0>],
             '$0.10': [<numba.core.ir.Assign object at 0x7f94ec2edf60>],
             '$0.12': [<numba.core.ir.Assign object at 0x7f94eb4efb00>],
             '$0.13': [<numba.core.ir.Assign object at 0x7f94eb4efbe0>],
             '$0.16': [<numba.core.ir.Assign object at 0x7f94ec2edfd0>],
             '$0.18': [<numba.core.ir.Assign object at 0x7f94ec2fc048>],
             '$0.19': [<numba.core.ir.Assign object at 0x7f94ec2fc128>],
             '$0.2': [<numba.core.ir.Assign object at 0x7f94eb4ef2b0>],
             '$0.22': [<numba.core.ir.Assign object at 0x7f94ec2fc438>],
             '$0.23': [<numba.core.ir.Assign object at 0x7f94ec2fc518>],
             '$0.24': [<numba.core.ir.Assign object at 0x7f94ec2fc5f8>],
             '$0.27': [<numba.core.ir.Assign object at 0x7f94ec2edac8>],
             '$0.28': [<numba.core.ir.Assign object at 0x7f94ec2fc940>],
             '$0.29': [<numba.core.ir.Assign object at 0x7f94ec2fca20>],
             '$0.30': [<numba.core.ir.Assign object at 0x7f94ec2fcb00>],
             '$0.5': [<numba.core.ir.Assign object at 0x7f94ec2edef0>],
             '$0.7': [<numba.core.ir.Assign object at 0x7f94eb4ef6d8>],
             '$100.1': [<numba.core.ir.Assign object at 0x7f94ec2e9ef0>],
             '$100.10': [<numba.core.ir.Assign object at 0x7f94ec307710>],
             '$100.11': [<numba.core.ir.Assign object at 0x7f94ec3077f0>],
             '$100.2': [<numba.core.ir.Assign object at 0x7f94ec2e9fd0>],
             '$100.5': [<numba.core.ir.Assign object at 0x7f94eb43b6d8>],
             '$100.6': [<numba.core.ir.Assign object at 0x7f94ec307358>],
             '$100.7': [<numba.core.ir.Assign object at 0x7f94ec307438>],
             '$148.4': [<numba.core.ir.Assign object at 0x7f94ec314358>],
             '$148.5': [<numba.core.ir.Assign object at 0x7f94ec314438>],
             '$184.1': [<numba.core.ir.Assign object at 0x7f94ec314cc0>],
             '$184.2': [<numba.core.ir.Assign object at 0x7f94ec314da0>],
             '$184.5': [<numba.core.ir.Assign object at 0x7f94eb43b828>],
             '$184.6': [<numba.core.ir.Assign object at 0x7f94ec301128>],
             '$228.1': [<numba.core.ir.Assign object at 0x7f94ec301cf8>],
             '$228.11': [<numba.core.ir.Assign object at 0x7f94ec31d668>],
             '$228.12': [<numba.core.ir.Assign object at 0x7f94ec31d748>],
             '$228.15': [<numba.core.ir.Assign object at 0x7f94eb43bbe0>],
             '$228.18': [<numba.core.ir.Assign object at 0x7f94eb43b908>],
             '$228.19': [<numba.core.ir.Assign object at 0x7f94ec31dcf8>],
             '$228.2': [<numba.core.ir.Assign object at 0x7f94ec301dd8>],
             '$228.22': [<numba.core.ir.Assign object at 0x7f94ec31df28>],
             '$228.23': [<numba.core.ir.Assign object at 0x7f94ec315048>],
             '$228.24': [<numba.core.ir.Assign object at 0x7f94ec315128>],
             '$228.26': [<numba.core.ir.Assign object at 0x7f94ec3152e8>],
             '$228.32': [<numba.core.ir.Assign object at 0x7f94eb43ba58>],
             '$228.33': [<numba.core.ir.Assign object at 0x7f94ec3158d0>],
             '$228.39': [<numba.core.ir.Assign object at 0x7f94eb43b7f0>],
             '$228.40': [<numba.core.ir.Assign object at 0x7f94ec315eb8>],
             '$228.46': [<numba.core.ir.Assign object at 0x7f94eb43b780>],
             '$228.47': [<numba.core.ir.Assign object at 0x7f94ec2ed4e0>],
             '$228.6': [<numba.core.ir.Assign object at 0x7f94eb43bc18>],
             '$338.2': [<numba.core.ir.Assign object at 0x7f94ec315b70>],
             '$64pred': [<numba.core.ir.Assign object at 0x7f94ec2fccf8>],
             '$66.3': [<numba.core.ir.Assign object at 0x7f94ec2ede48>],
             '$66.5': [<numba.core.ir.Assign object at 0x7f94ec2e90b8>],
             '$76pred': [<numba.core.ir.Assign object at 0x7f94ec2e92b0>],
             '$78.1': [<numba.core.ir.Assign object at 0x7f94ec2e9400>],
             '$78.10': [<numba.core.ir.Assign object at 0x7f94ec2e9ba8>],
             '$78.2': [<numba.core.ir.Assign object at 0x7f94ec2e94e0>],
             '$78.5': [<numba.core.ir.Assign object at 0x7f94ec301c18>],
             '$78.7': [<numba.core.ir.Assign object at 0x7f94ec2e9908>],
             '$78.8': [<numba.core.ir.Assign object at 0x7f94ec2e99e8>],
             '$78.9': [<numba.core.ir.Assign object at 0x7f94ec2e9ac8>],
             '$98pred': [<numba.core.ir.Assign object at 0x7f94ec2e9da0>],
             '$const0.11': [<numba.core.ir.Assign object at 0x7f94eb4efa20>],
             '$const0.15': [<numba.core.ir.Assign object at 0x7f94eb4efd68>],
             '$const0.17': [<numba.core.ir.Assign object at 0x7f94eb4eff28>],
             '$const0.26': [<numba.core.ir.Assign object at 0x7f94ec2fc780>],
             '$const0.4': [<numba.core.ir.Assign object at 0x7f94eb4ef438>],
             '$const0.6': [<numba.core.ir.Assign object at 0x7f94eb4ef5f8>],
             '$const0.9': [<numba.core.ir.Assign object at 0x7f94eb4ef860>],
             '$const100.13': [<numba.core.ir.Assign object at 0x7f94ec307978>],
             '$const100.14': [<numba.core.ir.Assign object at 0x7f94ec307ac8>],
             '$const100.16': [<numba.core.ir.Assign object at 0x7f94ec307c50>],
             '$const100.17': [<numba.core.ir.Assign object at 0x7f94ec307da0>],
             '$const100.19': [<numba.core.ir.Assign object at 0x7f94ec307f28>],
             '$const100.4': [<numba.core.ir.Assign object at 0x7f94ec307198>],
             '$const100.9': [<numba.core.ir.Assign object at 0x7f94ec3075c0>],
             '$const148.1': [<numba.core.ir.Assign object at 0x7f94ec314080>],
             '$const148.10': [<numba.core.ir.Assign object at 0x7f94ec314898>],
             '$const148.11': [<numba.core.ir.Assign object at 0x7f94ec3149e8>],
             '$const148.13': [<numba.core.ir.Assign object at 0x7f94ec314b70>],
             '$const148.3': [<numba.core.ir.Assign object at 0x7f94ec314208>],
             '$const148.7': [<numba.core.ir.Assign object at 0x7f94ec3145c0>],
             '$const148.8': [<numba.core.ir.Assign object at 0x7f94ec314710>],
             '$const184.11': [<numba.core.ir.Assign object at 0x7f94ec301588>],
             '$const184.12': [<numba.core.ir.Assign object at 0x7f94ec3016d8>],
             '$const184.14': [<numba.core.ir.Assign object at 0x7f94ec301860>],
             '$const184.15': [<numba.core.ir.Assign object at 0x7f94ec3019b0>],
             '$const184.17': [<numba.core.ir.Assign object at 0x7f94ec301b38>],
             '$const184.4': [<numba.core.ir.Assign object at 0x7f94ec314f28>],
             '$const184.8': [<numba.core.ir.Assign object at 0x7f94ec3012b0>],
             '$const184.9': [<numba.core.ir.Assign object at 0x7f94ec301400>],
             '$const228.14': [<numba.core.ir.Assign object at 0x7f94ec31d8d0>],
             '$const228.17': [<numba.core.ir.Assign object at 0x7f94ec31db38>],
             '$const228.25': [<numba.core.ir.Assign object at 0x7f94ec315208>],
             '$const228.28': [<numba.core.ir.Assign object at 0x7f94ec315470>],
             '$const228.31': [<numba.core.ir.Assign object at 0x7f94ec315710>],
             '$const228.35': [<numba.core.ir.Assign object at 0x7f94ec315a58>],
             '$const228.38': [<numba.core.ir.Assign object at 0x7f94ec315cf8>],
             '$const228.42': [<numba.core.ir.Assign object at 0x7f94ec2ed080>],
             '$const228.45': [<numba.core.ir.Assign object at 0x7f94ec2ed320>],
             '$const228.49': [<numba.core.ir.Assign object at 0x7f94ec2ed668>],
             '$const228.5': [<numba.core.ir.Assign object at 0x7f94ec31d048>],
             '$const338.1': [<numba.core.ir.Assign object at 0x7f94ec315390>],
             '$const66.2': [<numba.core.ir.Assign object at 0x7f94ec2fcdd8>],
             '$const66.4': [<numba.core.ir.Assign object at 0x7f94ec2fcf98>],
             '$const78.4': [<numba.core.ir.Assign object at 0x7f94ec2e9668>],
             '$const78.6': [<numba.core.ir.Assign object at 0x7f94ec2e9828>],
             'b': [<numba.core.ir.Assign object at 0x7f94ec2fc208>],
             'bool64': [<numba.core.ir.Assign object at 0x7f94ec2fcc18>],
             'bool76': [<numba.core.ir.Assign object at 0x7f94ec2e91d0>],
             'bool98': [<numba.core.ir.Assign object at 0x7f94ec2e9cc0>],
             'f': [<numba.core.ir.Assign object at 0x7f94ec31d4e0>],
             'q': [<numba.core.ir.Assign object at 0x7f94eb4ef048>],
             'qout': [<numba.core.ir.Assign object at 0x7f94eb4ef0f0>],
             'v': [<numba.core.ir.Assign object at 0x7f94ec31d208>]})
2022-01-24 14:09:00,632 DEBUG SSA violators set()
2022-01-24 14:09:00,863 DEBUG label 0:
    q = arg(0, name=q)                       ['q']
    qout = arg(1, name=qout)                 ['qout']
    $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$0.1']
    $0.2 = getattr(value=$0.1, attr=sqrt)    ['$0.1', '$0.2']
    $const0.4 = const(int, 0)                ['$const0.4']
    $0.5 = getitem(value=q, index=$const0.4, fn=<built-in function getitem>) ['$0.5', '$const0.4', 'q']
    $const0.6 = const(int, 2)                ['$const0.6']
    $0.7 = $0.5 ** $const0.6                 ['$0.5', '$0.7', '$const0.6']
    $const0.9 = const(int, 1)                ['$const0.9']
    $0.10 = getitem(value=q, index=$const0.9, fn=<built-in function getitem>) ['$0.10', '$const0.9', 'q']
    $const0.11 = const(int, 2)               ['$const0.11']
    $0.12 = $0.10 ** $const0.11              ['$0.10', '$0.12', '$const0.11']
    $0.13 = $0.7 + $0.12                     ['$0.12', '$0.13', '$0.7']
    $const0.15 = const(int, 2)               ['$const0.15']
    $0.16 = getitem(value=q, index=$const0.15, fn=<built-in function getitem>) ['$0.16', '$const0.15', 'q']
    $const0.17 = const(int, 2)               ['$const0.17']
    $0.18 = $0.16 ** $const0.17              ['$0.16', '$0.18', '$const0.17']
    $0.19 = $0.13 + $0.18                    ['$0.13', '$0.18', '$0.19']
    $const0.21 = const(int, 3)               ['$const0.21']
    $0.22 = getitem(value=q, index=$const0.21, fn=<built-in function getitem>) ['$0.22', '$const0.21', 'q']
    $const0.23 = const(int, 2)               ['$const0.23']
    $0.24 = $0.22 ** $const0.23              ['$0.22', '$0.24', '$const0.23']
    $0.25 = $0.19 + $0.24                    ['$0.19', '$0.24', '$0.25']
    a = call $0.2($0.25, func=$0.2, args=[Var($0.25, algebra.py:274)], kws=(), vararg=None) ['$0.2', '$0.25', 'a']
    $0.27 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$0.27']
    $0.28 = getattr(value=$0.27, attr=abs)   ['$0.27', '$0.28']
    $const0.31 = const(int, 0)               ['$const0.31']
    $0.32 = getitem(value=q, index=$const0.31, fn=<built-in function getitem>) ['$0.32', '$const0.31', 'q']
    $0.33 = a + $0.32                        ['$0.32', '$0.33', 'a']
    $0.34 = call $0.28($0.33, func=$0.28, args=[Var($0.33, algebra.py:275)], kws=(), vararg=None) ['$0.28', '$0.33', '$0.34']
    $0.35 = global(_quaternion_resolution: 1.0000000000000002e-14) ['$0.35']
    $0.37 = $0.35 * a                        ['$0.35', '$0.37', 'a']
    $0.38 = $0.34 < $0.37                    ['$0.34', '$0.37', '$0.38']
    bool80 = global(bool: <class 'bool'>)    ['bool80']
    $80pred = call bool80($0.38, func=bool80, args=(Var($0.38, algebra.py:275),), kws=(), vararg=None) ['$0.38', '$80pred', 'bool80']
    branch $80pred, 82, 122                  ['$80pred']
label 82:
    $const82.1 = const(float, 0.0)           ['$const82.1']
    $const82.3 = const(int, 0)               ['$const82.3']
    qout[$const82.3] = $const82.1            ['$const82.1', '$const82.3', 'qout']
    $82.4 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$82.4']
    $82.5 = getattr(value=$82.4, attr=sqrt)  ['$82.4', '$82.5']
    $82.7 = call $82.5(a, func=$82.5, args=[Var(a, algebra.py:274)], kws=(), vararg=None) ['$82.5', '$82.7', 'a']
    $const82.9 = const(int, 1)               ['$const82.9']
    qout[$const82.9] = $82.7                 ['$82.7', '$const82.9', 'qout']
    $const82.10 = const(float, 0.0)          ['$const82.10']
    $const82.12 = const(int, 2)              ['$const82.12']
    qout[$const82.12] = $const82.10          ['$const82.10', '$const82.12', 'qout']
    $const82.13 = const(float, 0.0)          ['$const82.13']
    $const82.15 = const(int, 3)              ['$const82.15']
    qout[$const82.15] = $const82.13          ['$const82.13', '$const82.15', 'qout']
    jump 212                                 []
label 122:
    $122.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$122.1']
    $122.2 = getattr(value=$122.1, attr=sqrt) ['$122.1', '$122.2']
    $const122.3 = const(float, 0.5)          ['$const122.3']
    $const122.6 = const(int, 0)              ['$const122.6']
    $122.7 = getitem(value=q, index=$const122.6, fn=<built-in function getitem>) ['$122.7', '$const122.6', 'q']
    $122.8 = a + $122.7                      ['$122.7', '$122.8', 'a']
    $122.9 = $const122.3 / $122.8            ['$122.8', '$122.9', '$const122.3']
    c = call $122.2($122.9, func=$122.2, args=[Var($122.9, algebra.py:281)], kws=(), vararg=None) ['$122.2', '$122.9', 'c']
    $const122.13 = const(int, 0)             ['$const122.13']
    $122.14 = getitem(value=q, index=$const122.13, fn=<built-in function getitem>) ['$122.14', '$const122.13', 'q']
    $122.15 = a + $122.14                    ['$122.14', '$122.15', 'a']
    $122.17 = $122.15 * c                    ['$122.15', '$122.17', 'c']
    $const122.19 = const(int, 0)             ['$const122.19']
    qout[$const122.19] = $122.17             ['$122.17', '$const122.19', 'qout']
    $const122.21 = const(int, 1)             ['$const122.21']
    $122.22 = getitem(value=q, index=$const122.21, fn=<built-in function getitem>) ['$122.22', '$const122.21', 'q']
    $122.24 = $122.22 * c                    ['$122.22', '$122.24', 'c']
    $const122.26 = const(int, 1)             ['$const122.26']
    qout[$const122.26] = $122.24             ['$122.24', '$const122.26', 'qout']
    $const122.28 = const(int, 2)             ['$const122.28']
    $122.29 = getitem(value=q, index=$const122.28, fn=<built-in function getitem>) ['$122.29', '$const122.28', 'q']
    $122.31 = $122.29 * c                    ['$122.29', '$122.31', 'c']
    $const122.33 = const(int, 2)             ['$const122.33']
    qout[$const122.33] = $122.31             ['$122.31', '$const122.33', 'qout']
    $const122.35 = const(int, 3)             ['$const122.35']
    $122.36 = getitem(value=q, index=$const122.35, fn=<built-in function getitem>) ['$122.36', '$const122.35', 'q']
    $122.38 = $122.36 * c                    ['$122.36', '$122.38', 'c']
    $const122.40 = const(int, 3)             ['$const122.40']
    qout[$const122.40] = $122.38             ['$122.38', '$const122.40', 'qout']
    jump 212                                 []
label 212:
    $const212.1 = const(NoneType, None)      ['$const212.1']
    $212.2 = cast(value=$const212.1)         ['$212.2', '$const212.1']
    return $212.2                            ['$212.2']

2022-01-24 14:09:00,873 DEBUG ==== SSA block analysis pass on 0
2022-01-24 14:09:00,873 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ec09e400>
2022-01-24 14:09:00,873 DEBUG on stmt: q = arg(0, name=q)
2022-01-24 14:09:00,873 DEBUG on stmt: qout = arg(1, name=qout)
2022-01-24 14:09:00,873 DEBUG on stmt: $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:09:00,873 DEBUG on stmt: $0.2 = getattr(value=$0.1, attr=sqrt)
2022-01-24 14:09:00,873 DEBUG on stmt: $const0.4 = const(int, 0)
2022-01-24 14:09:00,873 DEBUG on stmt: $0.5 = static_getitem(value=q, index=0, index_var=$const0.4, fn=<built-in function getitem>)
2022-01-24 14:09:00,873 DEBUG on stmt: $const0.6 = const(int, 2)
2022-01-24 14:09:00,873 DEBUG on stmt: $0.7 = $0.5 ** $const0.6
2022-01-24 14:09:00,873 DEBUG on stmt: $const0.9 = const(int, 1)
2022-01-24 14:09:00,873 DEBUG on stmt: $0.10 = static_getitem(value=q, index=1, index_var=$const0.9, fn=<built-in function getitem>)
2022-01-24 14:09:00,873 DEBUG on stmt: $const0.11 = const(int, 2)
2022-01-24 14:09:00,873 DEBUG on stmt: $0.12 = $0.10 ** $const0.11
2022-01-24 14:09:00,873 DEBUG on stmt: $0.13 = $0.7 + $0.12
2022-01-24 14:09:00,873 DEBUG on stmt: $const0.15 = const(int, 2)
2022-01-24 14:09:00,873 DEBUG on stmt: $0.16 = static_getitem(value=q, index=2, index_var=$const0.15, fn=<built-in function getitem>)
2022-01-24 14:09:00,874 DEBUG on stmt: $const0.17 = const(int, 2)
2022-01-24 14:09:00,874 DEBUG on stmt: $0.18 = $0.16 ** $const0.17
2022-01-24 14:09:00,874 DEBUG on stmt: $0.19 = $0.13 + $0.18
2022-01-24 14:09:00,874 DEBUG on stmt: $const0.21 = const(int, 3)
2022-01-24 14:09:00,874 DEBUG on stmt: $0.22 = static_getitem(value=q, index=3, index_var=$const0.21, fn=<built-in function getitem>)
2022-01-24 14:09:00,874 DEBUG on stmt: $const0.23 = const(int, 2)
2022-01-24 14:09:00,874 DEBUG on stmt: $0.24 = $0.22 ** $const0.23
2022-01-24 14:09:00,874 DEBUG on stmt: $0.25 = $0.19 + $0.24
2022-01-24 14:09:00,874 DEBUG on stmt: a = call $0.2($0.25, func=$0.2, args=[Var($0.25, algebra.py:274)], kws=(), vararg=None)
2022-01-24 14:09:00,874 DEBUG on stmt: $0.27 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:09:00,874 DEBUG on stmt: $0.28 = getattr(value=$0.27, attr=abs)
2022-01-24 14:09:00,874 DEBUG on stmt: $const0.31 = const(int, 0)
2022-01-24 14:09:00,874 DEBUG on stmt: $0.32 = static_getitem(value=q, index=0, index_var=$const0.31, fn=<built-in function getitem>)
2022-01-24 14:09:00,874 DEBUG on stmt: $0.33 = a + $0.32
2022-01-24 14:09:00,874 DEBUG on stmt: $0.34 = call $0.28($0.33, func=$0.28, args=[Var($0.33, algebra.py:275)], kws=(), vararg=None)
2022-01-24 14:09:00,874 DEBUG on stmt: $0.35 = global(_quaternion_resolution: 1.0000000000000002e-14)
2022-01-24 14:09:00,874 DEBUG on stmt: $0.37 = $0.35 * a
2022-01-24 14:09:00,874 DEBUG on stmt: $0.38 = $0.34 < $0.37
2022-01-24 14:09:00,874 DEBUG on stmt: bool80 = global(bool: <class 'bool'>)
2022-01-24 14:09:00,874 DEBUG on stmt: $80pred = call bool80($0.38, func=bool80, args=(Var($0.38, algebra.py:275),), kws=(), vararg=None)
2022-01-24 14:09:00,874 DEBUG on stmt: branch $80pred, 82, 122
2022-01-24 14:09:00,874 DEBUG ==== SSA block analysis pass on 82
2022-01-24 14:09:00,874 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ec09e400>
2022-01-24 14:09:00,874 DEBUG on stmt: $const82.1 = const(float, 0.0)
2022-01-24 14:09:00,874 DEBUG on stmt: $const82.3 = const(int, 0)
2022-01-24 14:09:00,875 DEBUG on stmt: qout[0] = $const82.1
2022-01-24 14:09:00,875 DEBUG on stmt: $82.4 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:09:00,875 DEBUG on stmt: $82.5 = getattr(value=$82.4, attr=sqrt)
2022-01-24 14:09:00,875 DEBUG on stmt: $82.7 = call $82.5(a, func=$82.5, args=[Var(a, algebra.py:274)], kws=(), vararg=None)
2022-01-24 14:09:00,875 DEBUG on stmt: $const82.9 = const(int, 1)
2022-01-24 14:09:00,875 DEBUG on stmt: qout[1] = $82.7
2022-01-24 14:09:00,875 DEBUG on stmt: $const82.10 = const(float, 0.0)
2022-01-24 14:09:00,875 DEBUG on stmt: $const82.12 = const(int, 2)
2022-01-24 14:09:00,875 DEBUG on stmt: qout[2] = $const82.10
2022-01-24 14:09:00,875 DEBUG on stmt: $const82.13 = const(float, 0.0)
2022-01-24 14:09:00,875 DEBUG on stmt: $const82.15 = const(int, 3)
2022-01-24 14:09:00,875 DEBUG on stmt: qout[3] = $const82.13
2022-01-24 14:09:00,875 DEBUG on stmt: jump 212
2022-01-24 14:09:00,875 DEBUG ==== SSA block analysis pass on 122
2022-01-24 14:09:00,875 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ec09e400>
2022-01-24 14:09:00,875 DEBUG on stmt: $122.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:09:00,875 DEBUG on stmt: $122.2 = getattr(value=$122.1, attr=sqrt)
2022-01-24 14:09:00,875 DEBUG on stmt: $const122.3 = const(float, 0.5)
2022-01-24 14:09:00,875 DEBUG on stmt: $const122.6 = const(int, 0)
2022-01-24 14:09:00,875 DEBUG on stmt: $122.7 = static_getitem(value=q, index=0, index_var=$const122.6, fn=<built-in function getitem>)
2022-01-24 14:09:00,875 DEBUG on stmt: $122.8 = a + $122.7
2022-01-24 14:09:00,875 DEBUG on stmt: $122.9 = $const122.3 / $122.8
2022-01-24 14:09:00,875 DEBUG on stmt: c = call $122.2($122.9, func=$122.2, args=[Var($122.9, algebra.py:281)], kws=(), vararg=None)
2022-01-24 14:09:00,875 DEBUG on stmt: $const122.13 = const(int, 0)
2022-01-24 14:09:00,875 DEBUG on stmt: $122.14 = static_getitem(value=q, index=0, index_var=$const122.13, fn=<built-in function getitem>)
2022-01-24 14:09:00,875 DEBUG on stmt: $122.15 = a + $122.14
2022-01-24 14:09:00,875 DEBUG on stmt: $122.17 = $122.15 * c
2022-01-24 14:09:00,876 DEBUG on stmt: $const122.19 = const(int, 0)
2022-01-24 14:09:00,876 DEBUG on stmt: qout[0] = $122.17
2022-01-24 14:09:00,876 DEBUG on stmt: $const122.21 = const(int, 1)
2022-01-24 14:09:00,876 DEBUG on stmt: $122.22 = static_getitem(value=q, index=1, index_var=$const122.21, fn=<built-in function getitem>)
2022-01-24 14:09:00,876 DEBUG on stmt: $122.24 = $122.22 * c
2022-01-24 14:09:00,876 DEBUG on stmt: $const122.26 = const(int, 1)
2022-01-24 14:09:00,876 DEBUG on stmt: qout[1] = $122.24
2022-01-24 14:09:00,876 DEBUG on stmt: $const122.28 = const(int, 2)
2022-01-24 14:09:00,876 DEBUG on stmt: $122.29 = static_getitem(value=q, index=2, index_var=$const122.28, fn=<built-in function getitem>)
2022-01-24 14:09:00,876 DEBUG on stmt: $122.31 = $122.29 * c
2022-01-24 14:09:00,876 DEBUG on stmt: $const122.33 = const(int, 2)
2022-01-24 14:09:00,876 DEBUG on stmt: qout[2] = $122.31
2022-01-24 14:09:00,876 DEBUG on stmt: $const122.35 = const(int, 3)
2022-01-24 14:09:00,876 DEBUG on stmt: $122.36 = static_getitem(value=q, index=3, index_var=$const122.35, fn=<built-in function getitem>)
2022-01-24 14:09:00,876 DEBUG on stmt: $122.38 = $122.36 * c
2022-01-24 14:09:00,876 DEBUG on stmt: $const122.40 = const(int, 3)
2022-01-24 14:09:00,876 DEBUG on stmt: qout[3] = $122.38
2022-01-24 14:09:00,876 DEBUG on stmt: jump 212
2022-01-24 14:09:00,876 DEBUG ==== SSA block analysis pass on 212
2022-01-24 14:09:00,876 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ec09e400>
2022-01-24 14:09:00,876 DEBUG on stmt: $const212.1 = const(NoneType, None)
2022-01-24 14:09:00,876 DEBUG on stmt: $212.2 = cast(value=$const212.1)
2022-01-24 14:09:00,876 DEBUG on stmt: return $212.2
2022-01-24 14:09:00,877 DEBUG defs defaultdict(<class 'list'>,
            {'$0.1': [<numba.core.ir.Assign object at 0x7f94ec0b13c8>],
             '$0.10': [<numba.core.ir.Assign object at 0x7f94ec086cf8>],
             '$0.12': [<numba.core.ir.Assign object at 0x7f94ec0b1cf8>],
             '$0.13': [<numba.core.ir.Assign object at 0x7f94ec0b1dd8>],
             '$0.16': [<numba.core.ir.Assign object at 0x7f94ec086d68>],
             '$0.18': [<numba.core.ir.Assign object at 0x7f94ec0ae240>],
             '$0.19': [<numba.core.ir.Assign object at 0x7f94ec0ae320>],
             '$0.2': [<numba.core.ir.Assign object at 0x7f94ec0b14a8>],
             '$0.22': [<numba.core.ir.Assign object at 0x7f94ec086dd8>],
             '$0.24': [<numba.core.ir.Assign object at 0x7f94ec0ae710>],
             '$0.25': [<numba.core.ir.Assign object at 0x7f94ec0ae7f0>],
             '$0.27': [<numba.core.ir.Assign object at 0x7f94ec0aea58>],
             '$0.28': [<numba.core.ir.Assign object at 0x7f94ec0aeb38>],
             '$0.32': [<numba.core.ir.Assign object at 0x7f94ec086e48>],
             '$0.33': [<numba.core.ir.Assign object at 0x7f94ec0aef28>],
             '$0.34': [<numba.core.ir.Assign object at 0x7f94ec0bb048>],
             '$0.35': [<numba.core.ir.Assign object at 0x7f94ec0bb128>],
             '$0.37': [<numba.core.ir.Assign object at 0x7f94ec0bb2b0>],
             '$0.38': [<numba.core.ir.Assign object at 0x7f94ec0bb3c8>],
             '$0.5': [<numba.core.ir.Assign object at 0x7f94ec086c88>],
             '$0.7': [<numba.core.ir.Assign object at 0x7f94ec0b18d0>],
             '$122.1': [<numba.core.ir.Assign object at 0x7f94ec0bf320>],
             '$122.14': [<numba.core.ir.Assign object at 0x7f94ec09e160>],
             '$122.15': [<numba.core.ir.Assign object at 0x7f94ec0bff28>],
             '$122.17': [<numba.core.ir.Assign object at 0x7f94ec0b00f0>],
             '$122.2': [<numba.core.ir.Assign object at 0x7f94ec0bf400>],
             '$122.22': [<numba.core.ir.Assign object at 0x7f94ec09e470>],
             '$122.24': [<numba.core.ir.Assign object at 0x7f94ec0b06d8>],
             '$122.29': [<numba.core.ir.Assign object at 0x7f94ec0bbf98>],
             '$122.31': [<numba.core.ir.Assign object at 0x7f94ec0b0cc0>],
             '$122.36': [<numba.core.ir.Assign object at 0x7f94ec08bfd0>],
             '$122.38': [<numba.core.ir.Assign object at 0x7f94ec0862e8>],
             '$122.7': [<numba.core.ir.Assign object at 0x7f94ec09eb00>],
             '$122.8': [<numba.core.ir.Assign object at 0x7f94ec0bf8d0>],
             '$122.9': [<numba.core.ir.Assign object at 0x7f94ec0bf9b0>],
             '$212.2': [<numba.core.ir.Assign object at 0x7f94ec0b0d68>],
             '$80pred': [<numba.core.ir.Assign object at 0x7f94ec0bb5c0>],
             '$82.4': [<numba.core.ir.Assign object at 0x7f94ec0bb828>],
             '$82.5': [<numba.core.ir.Assign object at 0x7f94ec0bb9b0>],
             '$82.7': [<numba.core.ir.Assign object at 0x7f94ec0bbb70>],
             '$const0.11': [<numba.core.ir.Assign object at 0x7f94ec0b1c18>],
             '$const0.15': [<numba.core.ir.Assign object at 0x7f94ec0b1f60>],
             '$const0.17': [<numba.core.ir.Assign object at 0x7f94ec0ae160>],
             '$const0.21': [<numba.core.ir.Assign object at 0x7f94ec0ae4a8>],
             '$const0.23': [<numba.core.ir.Assign object at 0x7f94ec0ae630>],
             '$const0.31': [<numba.core.ir.Assign object at 0x7f94ec0aed68>],
             '$const0.4': [<numba.core.ir.Assign object at 0x7f94ec0b1630>],
             '$const0.6': [<numba.core.ir.Assign object at 0x7f94ec0b17f0>],
             '$const0.9': [<numba.core.ir.Assign object at 0x7f94ec0b1a58>],
             '$const122.13': [<numba.core.ir.Assign object at 0x7f94ec0bfd68>],
             '$const122.19': [<numba.core.ir.Assign object at 0x7f94ec0b0278>],
             '$const122.21': [<numba.core.ir.Assign object at 0x7f94ec0b0470>],
             '$const122.26': [<numba.core.ir.Assign object at 0x7f94ec0b0860>],
             '$const122.28': [<numba.core.ir.Assign object at 0x7f94ec0b0a58>],
             '$const122.3': [<numba.core.ir.Assign object at 0x7f94ec0bf4e0>],
             '$const122.33': [<numba.core.ir.Assign object at 0x7f94ec0b0e48>],
             '$const122.35': [<numba.core.ir.Assign object at 0x7f94ec086080>],
             '$const122.40': [<numba.core.ir.Assign object at 0x7f94ec086470>],
             '$const122.6': [<numba.core.ir.Assign object at 0x7f94ec0bf710>],
             '$const212.1': [<numba.core.ir.Assign object at 0x7f94ec0b05f8>],
             '$const82.1': [<numba.core.ir.Assign object at 0x7f94ec0b1e80>],
             '$const82.10': [<numba.core.ir.Assign object at 0x7f94ec0bbf28>],
             '$const82.12': [<numba.core.ir.Assign object at 0x7f94ec0bb908>],
             '$const82.13': [<numba.core.ir.Assign object at 0x7f94ec0bf080>],
             '$const82.15': [<numba.core.ir.Assign object at 0x7f94ec0bf208>],
             '$const82.3': [<numba.core.ir.Assign object at 0x7f94ec0bb668>],
             '$const82.9': [<numba.core.ir.Assign object at 0x7f94ec0bbcc0>],
             'a': [<numba.core.ir.Assign object at 0x7f94ec0ae8d0>],
             'bool80': [<numba.core.ir.Assign object at 0x7f94ec0bb4a8>],
             'c': [<numba.core.ir.Assign object at 0x7f94ec0bfa90>],
             'q': [<numba.core.ir.Assign object at 0x7f94ec0b1240>],
             'qout': [<numba.core.ir.Assign object at 0x7f94ec0b12e8>]})
2022-01-24 14:09:00,877 DEBUG SSA violators set()
2022-01-24 14:09:01,043 DEBUG label 0:
    q = arg(0, name=q)                       ['q']
    qout = arg(1, name=qout)                 ['qout']
    $const0.2 = const(int, 0)                ['$const0.2']
    $0.3 = getitem(value=q, index=$const0.2, fn=<built-in function getitem>) ['$0.3', '$const0.2', 'q']
    $const0.4 = const(int, 2)                ['$const0.4']
    $0.5 = $0.3 ** $const0.4                 ['$0.3', '$0.5', '$const0.4']
    $const0.7 = const(int, 1)                ['$const0.7']
    $0.8 = getitem(value=q, index=$const0.7, fn=<built-in function getitem>) ['$0.8', '$const0.7', 'q']
    $const0.9 = const(int, 2)                ['$const0.9']
    $0.10 = $0.8 ** $const0.9                ['$0.10', '$0.8', '$const0.9']
    $0.11 = $0.5 - $0.10                     ['$0.10', '$0.11', '$0.5']
    $const0.13 = const(int, 2)               ['$const0.13']
    $0.14 = getitem(value=q, index=$const0.13, fn=<built-in function getitem>) ['$0.14', '$const0.13', 'q']
    $const0.15 = const(int, 2)               ['$const0.15']
    $0.16 = $0.14 ** $const0.15              ['$0.14', '$0.16', '$const0.15']
    $0.17 = $0.11 - $0.16                    ['$0.11', '$0.16', '$0.17']
    $const0.19 = const(int, 3)               ['$const0.19']
    $0.20 = getitem(value=q, index=$const0.19, fn=<built-in function getitem>) ['$0.20', '$const0.19', 'q']
    $const0.21 = const(int, 2)               ['$const0.21']
    $0.22 = $0.20 ** $const0.21              ['$0.20', '$0.22', '$const0.21']
    $0.23 = $0.17 - $0.22                    ['$0.17', '$0.22', '$0.23']
    $const0.25 = const(int, 0)               ['$const0.25']
    qout[$const0.25] = $0.23                 ['$0.23', '$const0.25', 'qout']
    $const0.26 = const(int, 2)               ['$const0.26']
    $const0.28 = const(int, 0)               ['$const0.28']
    $0.29 = getitem(value=q, index=$const0.28, fn=<built-in function getitem>) ['$0.29', '$const0.28', 'q']
    $0.30 = $const0.26 * $0.29               ['$0.29', '$0.30', '$const0.26']
    $const0.32 = const(int, 1)               ['$const0.32']
    $0.33 = getitem(value=q, index=$const0.32, fn=<built-in function getitem>) ['$0.33', '$const0.32', 'q']
    $0.34 = $0.30 * $0.33                    ['$0.30', '$0.33', '$0.34']
    $const0.36 = const(int, 1)               ['$const0.36']
    qout[$const0.36] = $0.34                 ['$0.34', '$const0.36', 'qout']
    $const0.37 = const(int, 2)               ['$const0.37']
    $const0.39 = const(int, 0)               ['$const0.39']
    $0.40 = getitem(value=q, index=$const0.39, fn=<built-in function getitem>) ['$0.40', '$const0.39', 'q']
    $0.41 = $const0.37 * $0.40               ['$0.40', '$0.41', '$const0.37']
    $const0.43 = const(int, 2)               ['$const0.43']
    $0.44 = getitem(value=q, index=$const0.43, fn=<built-in function getitem>) ['$0.44', '$const0.43', 'q']
    $0.45 = $0.41 * $0.44                    ['$0.41', '$0.44', '$0.45']
    $const0.47 = const(int, 2)               ['$const0.47']
    qout[$const0.47] = $0.45                 ['$0.45', '$const0.47', 'qout']
    $const0.48 = const(int, 2)               ['$const0.48']
    $const0.50 = const(int, 0)               ['$const0.50']
    $0.51 = getitem(value=q, index=$const0.50, fn=<built-in function getitem>) ['$0.51', '$const0.50', 'q']
    $0.52 = $const0.48 * $0.51               ['$0.51', '$0.52', '$const0.48']
    $const0.54 = const(int, 3)               ['$const0.54']
    $0.55 = getitem(value=q, index=$const0.54, fn=<built-in function getitem>) ['$0.55', '$const0.54', 'q']
    $0.56 = $0.52 * $0.55                    ['$0.52', '$0.55', '$0.56']
    $const0.58 = const(int, 3)               ['$const0.58']
    qout[$const0.58] = $0.56                 ['$0.56', '$const0.58', 'qout']
    $const0.59 = const(NoneType, None)       ['$const0.59']
    $0.60 = cast(value=$const0.59)           ['$0.60', '$const0.59']
    return $0.60                             ['$0.60']

2022-01-24 14:09:01,047 DEBUG ==== SSA block analysis pass on 0
2022-01-24 14:09:01,047 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ecb27cc0>
2022-01-24 14:09:01,047 DEBUG on stmt: q = arg(0, name=q)
2022-01-24 14:09:01,048 DEBUG on stmt: qout = arg(1, name=qout)
2022-01-24 14:09:01,048 DEBUG on stmt: $const0.2 = const(int, 0)
2022-01-24 14:09:01,048 DEBUG on stmt: $0.3 = static_getitem(value=q, index=0, index_var=$const0.2, fn=<built-in function getitem>)
2022-01-24 14:09:01,048 DEBUG on stmt: $const0.4 = const(int, 2)
2022-01-24 14:09:01,048 DEBUG on stmt: $0.5 = $0.3 ** $const0.4
2022-01-24 14:09:01,048 DEBUG on stmt: $const0.7 = const(int, 1)
2022-01-24 14:09:01,048 DEBUG on stmt: $0.8 = static_getitem(value=q, index=1, index_var=$const0.7, fn=<built-in function getitem>)
2022-01-24 14:09:01,048 DEBUG on stmt: $const0.9 = const(int, 2)
2022-01-24 14:09:01,048 DEBUG on stmt: $0.10 = $0.8 ** $const0.9
2022-01-24 14:09:01,048 DEBUG on stmt: $0.11 = $0.5 - $0.10
2022-01-24 14:09:01,048 DEBUG on stmt: $const0.13 = const(int, 2)
2022-01-24 14:09:01,048 DEBUG on stmt: $0.14 = static_getitem(value=q, index=2, index_var=$const0.13, fn=<built-in function getitem>)
2022-01-24 14:09:01,048 DEBUG on stmt: $const0.15 = const(int, 2)
2022-01-24 14:09:01,048 DEBUG on stmt: $0.16 = $0.14 ** $const0.15
2022-01-24 14:09:01,048 DEBUG on stmt: $0.17 = $0.11 - $0.16
2022-01-24 14:09:01,048 DEBUG on stmt: $const0.19 = const(int, 3)
2022-01-24 14:09:01,049 DEBUG on stmt: $0.20 = static_getitem(value=q, index=3, index_var=$const0.19, fn=<built-in function getitem>)
2022-01-24 14:09:01,049 DEBUG on stmt: $const0.21 = const(int, 2)
2022-01-24 14:09:01,049 DEBUG on stmt: $0.22 = $0.20 ** $const0.21
2022-01-24 14:09:01,049 DEBUG on stmt: $0.23 = $0.17 - $0.22
2022-01-24 14:09:01,049 DEBUG on stmt: $const0.25 = const(int, 0)
2022-01-24 14:09:01,049 DEBUG on stmt: qout[0] = $0.23
2022-01-24 14:09:01,049 DEBUG on stmt: $const0.26 = const(int, 2)
2022-01-24 14:09:01,049 DEBUG on stmt: $const0.28 = const(int, 0)
2022-01-24 14:09:01,049 DEBUG on stmt: $0.29 = static_getitem(value=q, index=0, index_var=$const0.28, fn=<built-in function getitem>)
2022-01-24 14:09:01,049 DEBUG on stmt: $0.30 = $const0.26 * $0.29
2022-01-24 14:09:01,049 DEBUG on stmt: $const0.32 = const(int, 1)
2022-01-24 14:09:01,049 DEBUG on stmt: $0.33 = static_getitem(value=q, index=1, index_var=$const0.32, fn=<built-in function getitem>)
2022-01-24 14:09:01,049 DEBUG on stmt: $0.34 = $0.30 * $0.33
2022-01-24 14:09:01,049 DEBUG on stmt: $const0.36 = const(int, 1)
2022-01-24 14:09:01,049 DEBUG on stmt: qout[1] = $0.34
2022-01-24 14:09:01,049 DEBUG on stmt: $const0.37 = const(int, 2)
2022-01-24 14:09:01,049 DEBUG on stmt: $const0.39 = const(int, 0)
2022-01-24 14:09:01,050 DEBUG on stmt: $0.40 = static_getitem(value=q, index=0, index_var=$const0.39, fn=<built-in function getitem>)
2022-01-24 14:09:01,050 DEBUG on stmt: $0.41 = $const0.37 * $0.40
2022-01-24 14:09:01,050 DEBUG on stmt: $const0.43 = const(int, 2)
2022-01-24 14:09:01,050 DEBUG on stmt: $0.44 = static_getitem(value=q, index=2, index_var=$const0.43, fn=<built-in function getitem>)
2022-01-24 14:09:01,050 DEBUG on stmt: $0.45 = $0.41 * $0.44
2022-01-24 14:09:01,050 DEBUG on stmt: $const0.47 = const(int, 2)
2022-01-24 14:09:01,050 DEBUG on stmt: qout[2] = $0.45
2022-01-24 14:09:01,050 DEBUG on stmt: $const0.48 = const(int, 2)
2022-01-24 14:09:01,050 DEBUG on stmt: $const0.50 = const(int, 0)
2022-01-24 14:09:01,050 DEBUG on stmt: $0.51 = static_getitem(value=q, index=0, index_var=$const0.50, fn=<built-in function getitem>)
2022-01-24 14:09:01,050 DEBUG on stmt: $0.52 = $const0.48 * $0.51
2022-01-24 14:09:01,050 DEBUG on stmt: $const0.54 = const(int, 3)
2022-01-24 14:09:01,050 DEBUG on stmt: $0.55 = static_getitem(value=q, index=3, index_var=$const0.54, fn=<built-in function getitem>)
2022-01-24 14:09:01,050 DEBUG on stmt: $0.56 = $0.52 * $0.55
2022-01-24 14:09:01,050 DEBUG on stmt: $const0.58 = const(int, 3)
2022-01-24 14:09:01,050 DEBUG on stmt: qout[3] = $0.56
2022-01-24 14:09:01,050 DEBUG on stmt: $const0.59 = const(NoneType, None)
2022-01-24 14:09:01,051 DEBUG on stmt: $0.60 = cast(value=$const0.59)
2022-01-24 14:09:01,051 DEBUG on stmt: return $0.60
2022-01-24 14:09:01,051 DEBUG defs defaultdict(<class 'list'>,
            {'$0.10': [<numba.core.ir.Assign object at 0x7f94ecb36390>],
             '$0.11': [<numba.core.ir.Assign object at 0x7f94ecb36470>],
             '$0.14': [<numba.core.ir.Assign object at 0x7f94ecb3f278>],
             '$0.16': [<numba.core.ir.Assign object at 0x7f94ecb36898>],
             '$0.17': [<numba.core.ir.Assign object at 0x7f94ecb36978>],
             '$0.20': [<numba.core.ir.Assign object at 0x7f94ecb3f2e8>],
             '$0.22': [<numba.core.ir.Assign object at 0x7f94ecb36da0>],
             '$0.23': [<numba.core.ir.Assign object at 0x7f94ecb36e80>],
             '$0.29': [<numba.core.ir.Assign object at 0x7f94ecb3f358>],
             '$0.3': [<numba.core.ir.Assign object at 0x7f94ecb3f198>],
             '$0.30': [<numba.core.ir.Assign object at 0x7f94ecb3b4e0>],
             '$0.33': [<numba.core.ir.Assign object at 0x7f94ecb3f3c8>],
             '$0.34': [<numba.core.ir.Assign object at 0x7f94ecb3b828>],
             '$0.40': [<numba.core.ir.Assign object at 0x7f94ecb3f438>],
             '$0.41': [<numba.core.ir.Assign object at 0x7f94ecb3be10>],
             '$0.44': [<numba.core.ir.Assign object at 0x7f94ecb3f4a8>],
             '$0.45': [<numba.core.ir.Assign object at 0x7f94ecb2f198>],
             '$0.5': [<numba.core.ir.Assign object at 0x7f94ecb2ef28>],
             '$0.51': [<numba.core.ir.Assign object at 0x7f94ecb3f518>],
             '$0.52': [<numba.core.ir.Assign object at 0x7f94ecb2f7b8>],
             '$0.55': [<numba.core.ir.Assign object at 0x7f94ecb3f588>],
             '$0.56': [<numba.core.ir.Assign object at 0x7f94ecb2fb00>],
             '$0.60': [<numba.core.ir.Assign object at 0x7f94ecb2feb8>],
             '$0.8': [<numba.core.ir.Assign object at 0x7f94ecb3f208>],
             '$const0.13': [<numba.core.ir.Assign object at 0x7f94ecb365f8>],
             '$const0.15': [<numba.core.ir.Assign object at 0x7f94ecb367b8>],
             '$const0.19': [<numba.core.ir.Assign object at 0x7f94ecb36b00>],
             '$const0.2': [<numba.core.ir.Assign object at 0x7f94ecb2ec88>],
             '$const0.21': [<numba.core.ir.Assign object at 0x7f94ecb36cc0>],
             '$const0.25': [<numba.core.ir.Assign object at 0x7f94ecb3b048>],
             '$const0.26': [<numba.core.ir.Assign object at 0x7f94ecb3b198>],
             '$const0.28': [<numba.core.ir.Assign object at 0x7f94ecb3b320>],
             '$const0.32': [<numba.core.ir.Assign object at 0x7f94ecb3b668>],
             '$const0.36': [<numba.core.ir.Assign object at 0x7f94ecb3b9b0>],
             '$const0.37': [<numba.core.ir.Assign object at 0x7f94ecb3bac8>],
             '$const0.39': [<numba.core.ir.Assign object at 0x7f94ecb3bc50>],
             '$const0.4': [<numba.core.ir.Assign object at 0x7f94ecb2ee48>],
             '$const0.43': [<numba.core.ir.Assign object at 0x7f94ecb3bf98>],
             '$const0.47': [<numba.core.ir.Assign object at 0x7f94ecb2f320>],
             '$const0.48': [<numba.core.ir.Assign object at 0x7f94ecb2f470>],
             '$const0.50': [<numba.core.ir.Assign object at 0x7f94ecb2f5f8>],
             '$const0.54': [<numba.core.ir.Assign object at 0x7f94ecb2f940>],
             '$const0.58': [<numba.core.ir.Assign object at 0x7f94ecb2fc88>],
             '$const0.59': [<numba.core.ir.Assign object at 0x7f94ecb2fdd8>],
             '$const0.7': [<numba.core.ir.Assign object at 0x7f94ecb360f0>],
             '$const0.9': [<numba.core.ir.Assign object at 0x7f94ecb362b0>],
             'q': [<numba.core.ir.Assign object at 0x7f94ecb2ea58>],
             'qout': [<numba.core.ir.Assign object at 0x7f94ecb2eb00>]})
2022-01-24 14:09:01,051 DEBUG SSA violators set()
2022-01-24 14:09:01,182 DEBUG label 0:
    q = arg(0, name=q)                       ['q']
    qout = arg(1, name=qout)                 ['qout']
    $const0.2 = const(int, 0)                ['$const0.2']
    $0.3 = getitem(value=q, index=$const0.2, fn=<built-in function getitem>) ['$0.3', '$const0.2', 'q']
    $const0.4 = const(int, 2)                ['$const0.4']
    $0.5 = $0.3 ** $const0.4                 ['$0.3', '$0.5', '$const0.4']
    $const0.7 = const(int, 1)                ['$const0.7']
    $0.8 = getitem(value=q, index=$const0.7, fn=<built-in function getitem>) ['$0.8', '$const0.7', 'q']
    $const0.9 = const(int, 2)                ['$const0.9']
    $0.10 = $0.8 ** $const0.9                ['$0.10', '$0.8', '$const0.9']
    $0.11 = $0.5 + $0.10                     ['$0.10', '$0.11', '$0.5']
    $const0.13 = const(int, 2)               ['$const0.13']
    $0.14 = getitem(value=q, index=$const0.13, fn=<built-in function getitem>) ['$0.14', '$const0.13', 'q']
    $const0.15 = const(int, 2)               ['$const0.15']
    $0.16 = $0.14 ** $const0.15              ['$0.14', '$0.16', '$const0.15']
    $0.17 = $0.11 + $0.16                    ['$0.11', '$0.16', '$0.17']
    $const0.19 = const(int, 3)               ['$const0.19']
    $0.20 = getitem(value=q, index=$const0.19, fn=<built-in function getitem>) ['$0.20', '$const0.19', 'q']
    $const0.21 = const(int, 2)               ['$const0.21']
    $0.22 = $0.20 ** $const0.21              ['$0.20', '$0.22', '$const0.21']
    norm = $0.17 + $0.22                     ['$0.17', '$0.22', 'norm']
    $const0.25 = const(int, 0)               ['$const0.25']
    $0.26 = getitem(value=q, index=$const0.25, fn=<built-in function getitem>) ['$0.26', '$const0.25', 'q']
    $0.28 = $0.26 / norm                     ['$0.26', '$0.28', 'norm']
    $const0.30 = const(int, 0)               ['$const0.30']
    qout[$const0.30] = $0.28                 ['$0.28', '$const0.30', 'qout']
    $const0.32 = const(int, 1)               ['$const0.32']
    $0.33 = getitem(value=q, index=$const0.32, fn=<built-in function getitem>) ['$0.33', '$const0.32', 'q']
    $0.34 = unary(fn=<built-in function neg>, value=$0.33) ['$0.33', '$0.34']
    $0.36 = $0.34 / norm                     ['$0.34', '$0.36', 'norm']
    $const0.38 = const(int, 1)               ['$const0.38']
    qout[$const0.38] = $0.36                 ['$0.36', '$const0.38', 'qout']
    $const0.40 = const(int, 2)               ['$const0.40']
    $0.41 = getitem(value=q, index=$const0.40, fn=<built-in function getitem>) ['$0.41', '$const0.40', 'q']
    $0.42 = unary(fn=<built-in function neg>, value=$0.41) ['$0.41', '$0.42']
    $0.44 = $0.42 / norm                     ['$0.42', '$0.44', 'norm']
    $const0.46 = const(int, 2)               ['$const0.46']
    qout[$const0.46] = $0.44                 ['$0.44', '$const0.46', 'qout']
    $const0.48 = const(int, 3)               ['$const0.48']
    $0.49 = getitem(value=q, index=$const0.48, fn=<built-in function getitem>) ['$0.49', '$const0.48', 'q']
    $0.50 = unary(fn=<built-in function neg>, value=$0.49) ['$0.49', '$0.50']
    $0.52 = $0.50 / norm                     ['$0.50', '$0.52', 'norm']
    $const0.54 = const(int, 3)               ['$const0.54']
    qout[$const0.54] = $0.52                 ['$0.52', '$const0.54', 'qout']
    $const0.55 = const(NoneType, None)       ['$const0.55']
    $0.56 = cast(value=$const0.55)           ['$0.56', '$const0.55']
    return $0.56                             ['$0.56']

2022-01-24 14:09:01,186 DEBUG ==== SSA block analysis pass on 0
2022-01-24 14:09:01,187 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ecd2ba20>
2022-01-24 14:09:01,187 DEBUG on stmt: q = arg(0, name=q)
2022-01-24 14:09:01,187 DEBUG on stmt: qout = arg(1, name=qout)
2022-01-24 14:09:01,187 DEBUG on stmt: $const0.2 = const(int, 0)
2022-01-24 14:09:01,187 DEBUG on stmt: $0.3 = static_getitem(value=q, index=0, index_var=$const0.2, fn=<built-in function getitem>)
2022-01-24 14:09:01,187 DEBUG on stmt: $const0.4 = const(int, 2)
2022-01-24 14:09:01,187 DEBUG on stmt: $0.5 = $0.3 ** $const0.4
2022-01-24 14:09:01,187 DEBUG on stmt: $const0.7 = const(int, 1)
2022-01-24 14:09:01,187 DEBUG on stmt: $0.8 = static_getitem(value=q, index=1, index_var=$const0.7, fn=<built-in function getitem>)
2022-01-24 14:09:01,187 DEBUG on stmt: $const0.9 = const(int, 2)
2022-01-24 14:09:01,187 DEBUG on stmt: $0.10 = $0.8 ** $const0.9
2022-01-24 14:09:01,187 DEBUG on stmt: $0.11 = $0.5 + $0.10
2022-01-24 14:09:01,187 DEBUG on stmt: $const0.13 = const(int, 2)
2022-01-24 14:09:01,187 DEBUG on stmt: $0.14 = static_getitem(value=q, index=2, index_var=$const0.13, fn=<built-in function getitem>)
2022-01-24 14:09:01,187 DEBUG on stmt: $const0.15 = const(int, 2)
2022-01-24 14:09:01,187 DEBUG on stmt: $0.16 = $0.14 ** $const0.15
2022-01-24 14:09:01,187 DEBUG on stmt: $0.17 = $0.11 + $0.16
2022-01-24 14:09:01,187 DEBUG on stmt: $const0.19 = const(int, 3)
2022-01-24 14:09:01,187 DEBUG on stmt: $0.20 = static_getitem(value=q, index=3, index_var=$const0.19, fn=<built-in function getitem>)
2022-01-24 14:09:01,187 DEBUG on stmt: $const0.21 = const(int, 2)
2022-01-24 14:09:01,188 DEBUG on stmt: $0.22 = $0.20 ** $const0.21
2022-01-24 14:09:01,188 DEBUG on stmt: norm = $0.17 + $0.22
2022-01-24 14:09:01,188 DEBUG on stmt: $const0.25 = const(int, 0)
2022-01-24 14:09:01,188 DEBUG on stmt: $0.26 = static_getitem(value=q, index=0, index_var=$const0.25, fn=<built-in function getitem>)
2022-01-24 14:09:01,188 DEBUG on stmt: $0.28 = $0.26 / norm
2022-01-24 14:09:01,188 DEBUG on stmt: $const0.30 = const(int, 0)
2022-01-24 14:09:01,188 DEBUG on stmt: qout[0] = $0.28
2022-01-24 14:09:01,188 DEBUG on stmt: $const0.32 = const(int, 1)
2022-01-24 14:09:01,188 DEBUG on stmt: $0.33 = static_getitem(value=q, index=1, index_var=$const0.32, fn=<built-in function getitem>)
2022-01-24 14:09:01,188 DEBUG on stmt: $0.34 = unary(fn=<built-in function neg>, value=$0.33)
2022-01-24 14:09:01,188 DEBUG on stmt: $0.36 = $0.34 / norm
2022-01-24 14:09:01,188 DEBUG on stmt: $const0.38 = const(int, 1)
2022-01-24 14:09:01,188 DEBUG on stmt: qout[1] = $0.36
2022-01-24 14:09:01,188 DEBUG on stmt: $const0.40 = const(int, 2)
2022-01-24 14:09:01,188 DEBUG on stmt: $0.41 = static_getitem(value=q, index=2, index_var=$const0.40, fn=<built-in function getitem>)
2022-01-24 14:09:01,188 DEBUG on stmt: $0.42 = unary(fn=<built-in function neg>, value=$0.41)
2022-01-24 14:09:01,188 DEBUG on stmt: $0.44 = $0.42 / norm
2022-01-24 14:09:01,188 DEBUG on stmt: $const0.46 = const(int, 2)
2022-01-24 14:09:01,188 DEBUG on stmt: qout[2] = $0.44
2022-01-24 14:09:01,188 DEBUG on stmt: $const0.48 = const(int, 3)
2022-01-24 14:09:01,188 DEBUG on stmt: $0.49 = static_getitem(value=q, index=3, index_var=$const0.48, fn=<built-in function getitem>)
2022-01-24 14:09:01,188 DEBUG on stmt: $0.50 = unary(fn=<built-in function neg>, value=$0.49)
2022-01-24 14:09:01,188 DEBUG on stmt: $0.52 = $0.50 / norm
2022-01-24 14:09:01,188 DEBUG on stmt: $const0.54 = const(int, 3)
2022-01-24 14:09:01,188 DEBUG on stmt: qout[3] = $0.52
2022-01-24 14:09:01,189 DEBUG on stmt: $const0.55 = const(NoneType, None)
2022-01-24 14:09:01,189 DEBUG on stmt: $0.56 = cast(value=$const0.55)
2022-01-24 14:09:01,189 DEBUG on stmt: return $0.56
2022-01-24 14:09:01,189 DEBUG defs defaultdict(<class 'list'>,
            {'$0.10': [<numba.core.ir.Assign object at 0x7f94ecd35a20>],
             '$0.11': [<numba.core.ir.Assign object at 0x7f94ecd35b00>],
             '$0.14': [<numba.core.ir.Assign object at 0x7f94ecd3f518>],
             '$0.16': [<numba.core.ir.Assign object at 0x7f94ecd35f28>],
             '$0.17': [<numba.core.ir.Assign object at 0x7f94ecd37048>],
             '$0.20': [<numba.core.ir.Assign object at 0x7f94ecd3f588>],
             '$0.22': [<numba.core.ir.Assign object at 0x7f94ecd37470>],
             '$0.26': [<numba.core.ir.Assign object at 0x7f94ecd3f5f8>],
             '$0.28': [<numba.core.ir.Assign object at 0x7f94ecd379e8>],
             '$0.3': [<numba.core.ir.Assign object at 0x7f94ecd3f438>],
             '$0.33': [<numba.core.ir.Assign object at 0x7f94ecd3f668>],
             '$0.34': [<numba.core.ir.Assign object at 0x7f94ecd37f28>],
             '$0.36': [<numba.core.ir.Assign object at 0x7f94ecd3c0f0>],
             '$0.41': [<numba.core.ir.Assign object at 0x7f94ecd3f6d8>],
             '$0.42': [<numba.core.ir.Assign object at 0x7f94ecd3c5f8>],
             '$0.44': [<numba.core.ir.Assign object at 0x7f94ecd3c780>],
             '$0.49': [<numba.core.ir.Assign object at 0x7f94ecd3f748>],
             '$0.5': [<numba.core.ir.Assign object at 0x7f94ecd355f8>],
             '$0.50': [<numba.core.ir.Assign object at 0x7f94ecd3ccc0>],
             '$0.52': [<numba.core.ir.Assign object at 0x7f94ecd3ce48>],
             '$0.56': [<numba.core.ir.Assign object at 0x7f94ecd3f240>],
             '$0.8': [<numba.core.ir.Assign object at 0x7f94ecd3f4a8>],
             '$const0.13': [<numba.core.ir.Assign object at 0x7f94ecd35c88>],
             '$const0.15': [<numba.core.ir.Assign object at 0x7f94ecd35e48>],
             '$const0.19': [<numba.core.ir.Assign object at 0x7f94ecd371d0>],
             '$const0.2': [<numba.core.ir.Assign object at 0x7f94ecd35358>],
             '$const0.21': [<numba.core.ir.Assign object at 0x7f94ecd37390>],
             '$const0.25': [<numba.core.ir.Assign object at 0x7f94ecd37780>],
             '$const0.30': [<numba.core.ir.Assign object at 0x7f94ecd37b70>],
             '$const0.32': [<numba.core.ir.Assign object at 0x7f94ecd37d68>],
             '$const0.38': [<numba.core.ir.Assign object at 0x7f94ecd3c240>],
             '$const0.4': [<numba.core.ir.Assign object at 0x7f94ecd35518>],
             '$const0.40': [<numba.core.ir.Assign object at 0x7f94ecd3c438>],
             '$const0.46': [<numba.core.ir.Assign object at 0x7f94ecd3c908>],
             '$const0.48': [<numba.core.ir.Assign object at 0x7f94ecd3cb00>],
             '$const0.54': [<numba.core.ir.Assign object at 0x7f94ecd3cfd0>],
             '$const0.55': [<numba.core.ir.Assign object at 0x7f94ecd3f160>],
             '$const0.7': [<numba.core.ir.Assign object at 0x7f94ecd35780>],
             '$const0.9': [<numba.core.ir.Assign object at 0x7f94ecd35940>],
             'norm': [<numba.core.ir.Assign object at 0x7f94ecd37550>],
             'q': [<numba.core.ir.Assign object at 0x7f94ecd35128>],
             'qout': [<numba.core.ir.Assign object at 0x7f94ecd351d0>]})
2022-01-24 14:09:01,189 DEBUG SSA violators set()
2022-01-24 14:09:01,309 DEBUG label 0:
    q1 = arg(0, name=q1)                     ['q1']
    q2 = arg(1, name=q2)                     ['q2']
    qout = arg(2, name=qout)                 ['qout']
    $const0.2 = const(int, 0)                ['$const0.2']
    $0.3 = getitem(value=q1, index=$const0.2, fn=<built-in function getitem>) ['$0.3', '$const0.2', 'q1']
    $const0.5 = const(int, 0)                ['$const0.5']
    $0.6 = getitem(value=q2, index=$const0.5, fn=<built-in function getitem>) ['$0.6', '$const0.5', 'q2']
    $0.7 = $0.3 * $0.6                       ['$0.3', '$0.6', '$0.7']
    $const0.9 = const(int, 1)                ['$const0.9']
    $0.10 = getitem(value=q1, index=$const0.9, fn=<built-in function getitem>) ['$0.10', '$const0.9', 'q1']
    $const0.12 = const(int, 1)               ['$const0.12']
    $0.13 = getitem(value=q2, index=$const0.12, fn=<built-in function getitem>) ['$0.13', '$const0.12', 'q2']
    $0.14 = $0.10 * $0.13                    ['$0.10', '$0.13', '$0.14']
    $0.15 = $0.7 - $0.14                     ['$0.14', '$0.15', '$0.7']
    $const0.17 = const(int, 2)               ['$const0.17']
    $0.18 = getitem(value=q1, index=$const0.17, fn=<built-in function getitem>) ['$0.18', '$const0.17', 'q1']
    $const0.20 = const(int, 2)               ['$const0.20']
    $0.21 = getitem(value=q2, index=$const0.20, fn=<built-in function getitem>) ['$0.21', '$const0.20', 'q2']
    $0.22 = $0.18 * $0.21                    ['$0.18', '$0.21', '$0.22']
    $0.23 = $0.15 - $0.22                    ['$0.15', '$0.22', '$0.23']
    $const0.25 = const(int, 3)               ['$const0.25']
    $0.26 = getitem(value=q1, index=$const0.25, fn=<built-in function getitem>) ['$0.26', '$const0.25', 'q1']
    $const0.28 = const(int, 3)               ['$const0.28']
    $0.29 = getitem(value=q2, index=$const0.28, fn=<built-in function getitem>) ['$0.29', '$const0.28', 'q2']
    $0.30 = $0.26 * $0.29                    ['$0.26', '$0.29', '$0.30']
    $0.31 = $0.23 - $0.30                    ['$0.23', '$0.30', '$0.31']
    $const0.33 = const(int, 0)               ['$const0.33']
    qout[$const0.33] = $0.31                 ['$0.31', '$const0.33', 'qout']
    $const0.34 = const(float, 0.0)           ['$const0.34']
    $const0.36 = const(int, 1)               ['$const0.36']
    qout[$const0.36] = $const0.34            ['$const0.34', '$const0.36', 'qout']
    $const0.37 = const(float, 0.0)           ['$const0.37']
    $const0.39 = const(int, 2)               ['$const0.39']
    qout[$const0.39] = $const0.37            ['$const0.37', '$const0.39', 'qout']
    $const0.40 = const(float, 0.0)           ['$const0.40']
    $const0.42 = const(int, 3)               ['$const0.42']
    qout[$const0.42] = $const0.40            ['$const0.40', '$const0.42', 'qout']
    $const0.43 = const(NoneType, None)       ['$const0.43']
    $0.44 = cast(value=$const0.43)           ['$0.44', '$const0.43']
    return $0.44                             ['$0.44']

2022-01-24 14:09:01,313 DEBUG ==== SSA block analysis pass on 0
2022-01-24 14:09:01,313 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ece1f898>
2022-01-24 14:09:01,313 DEBUG on stmt: q1 = arg(0, name=q1)
2022-01-24 14:09:01,313 DEBUG on stmt: q2 = arg(1, name=q2)
2022-01-24 14:09:01,313 DEBUG on stmt: qout = arg(2, name=qout)
2022-01-24 14:09:01,313 DEBUG on stmt: $const0.2 = const(int, 0)
2022-01-24 14:09:01,313 DEBUG on stmt: $0.3 = static_getitem(value=q1, index=0, index_var=$const0.2, fn=<built-in function getitem>)
2022-01-24 14:09:01,313 DEBUG on stmt: $const0.5 = const(int, 0)
2022-01-24 14:09:01,313 DEBUG on stmt: $0.6 = static_getitem(value=q2, index=0, index_var=$const0.5, fn=<built-in function getitem>)
2022-01-24 14:09:01,313 DEBUG on stmt: $0.7 = $0.3 * $0.6
2022-01-24 14:09:01,313 DEBUG on stmt: $const0.9 = const(int, 1)
2022-01-24 14:09:01,313 DEBUG on stmt: $0.10 = static_getitem(value=q1, index=1, index_var=$const0.9, fn=<built-in function getitem>)
2022-01-24 14:09:01,313 DEBUG on stmt: $const0.12 = const(int, 1)
2022-01-24 14:09:01,313 DEBUG on stmt: $0.13 = static_getitem(value=q2, index=1, index_var=$const0.12, fn=<built-in function getitem>)
2022-01-24 14:09:01,313 DEBUG on stmt: $0.14 = $0.10 * $0.13
2022-01-24 14:09:01,313 DEBUG on stmt: $0.15 = $0.7 - $0.14
2022-01-24 14:09:01,313 DEBUG on stmt: $const0.17 = const(int, 2)
2022-01-24 14:09:01,314 DEBUG on stmt: $0.18 = static_getitem(value=q1, index=2, index_var=$const0.17, fn=<built-in function getitem>)
2022-01-24 14:09:01,314 DEBUG on stmt: $const0.20 = const(int, 2)
2022-01-24 14:09:01,314 DEBUG on stmt: $0.21 = static_getitem(value=q2, index=2, index_var=$const0.20, fn=<built-in function getitem>)
2022-01-24 14:09:01,314 DEBUG on stmt: $0.22 = $0.18 * $0.21
2022-01-24 14:09:01,314 DEBUG on stmt: $0.23 = $0.15 - $0.22
2022-01-24 14:09:01,314 DEBUG on stmt: $const0.25 = const(int, 3)
2022-01-24 14:09:01,314 DEBUG on stmt: $0.26 = static_getitem(value=q1, index=3, index_var=$const0.25, fn=<built-in function getitem>)
2022-01-24 14:09:01,314 DEBUG on stmt: $const0.28 = const(int, 3)
2022-01-24 14:09:01,314 DEBUG on stmt: $0.29 = static_getitem(value=q2, index=3, index_var=$const0.28, fn=<built-in function getitem>)
2022-01-24 14:09:01,314 DEBUG on stmt: $0.30 = $0.26 * $0.29
2022-01-24 14:09:01,314 DEBUG on stmt: $0.31 = $0.23 - $0.30
2022-01-24 14:09:01,314 DEBUG on stmt: $const0.33 = const(int, 0)
2022-01-24 14:09:01,314 DEBUG on stmt: qout[0] = $0.31
2022-01-24 14:09:01,315 DEBUG on stmt: $const0.34 = const(float, 0.0)
2022-01-24 14:09:01,315 DEBUG on stmt: $const0.36 = const(int, 1)
2022-01-24 14:09:01,315 DEBUG on stmt: qout[1] = $const0.34
2022-01-24 14:09:01,315 DEBUG on stmt: $const0.37 = const(float, 0.0)
2022-01-24 14:09:01,315 DEBUG on stmt: $const0.39 = const(int, 2)
2022-01-24 14:09:01,315 DEBUG on stmt: qout[2] = $const0.37
2022-01-24 14:09:01,315 DEBUG on stmt: $const0.40 = const(float, 0.0)
2022-01-24 14:09:01,315 DEBUG on stmt: $const0.42 = const(int, 3)
2022-01-24 14:09:01,315 DEBUG on stmt: qout[3] = $const0.40
2022-01-24 14:09:01,315 DEBUG on stmt: $const0.43 = const(NoneType, None)
2022-01-24 14:09:01,315 DEBUG on stmt: $0.44 = cast(value=$const0.43)
2022-01-24 14:09:01,316 DEBUG on stmt: return $0.44
2022-01-24 14:09:01,316 DEBUG defs defaultdict(<class 'list'>,
            {'$0.10': [<numba.core.ir.Assign object at 0x7f94ece279e8>],
             '$0.13': [<numba.core.ir.Assign object at 0x7f94ece27a58>],
             '$0.14': [<numba.core.ir.Assign object at 0x7f94ece1fb38>],
             '$0.15': [<numba.core.ir.Assign object at 0x7f94ece1fc18>],
             '$0.18': [<numba.core.ir.Assign object at 0x7f94ece27ac8>],
             '$0.21': [<numba.core.ir.Assign object at 0x7f94ece27b38>],
             '$0.22': [<numba.core.ir.Assign object at 0x7f94ece22208>],
             '$0.23': [<numba.core.ir.Assign object at 0x7f94ece222e8>],
             '$0.26': [<numba.core.ir.Assign object at 0x7f94ece27ba8>],
             '$0.29': [<numba.core.ir.Assign object at 0x7f94ece27c18>],
             '$0.3': [<numba.core.ir.Assign object at 0x7f94ece27908>],
             '$0.30': [<numba.core.ir.Assign object at 0x7f94ece22898>],
             '$0.31': [<numba.core.ir.Assign object at 0x7f94ece22978>],
             '$0.44': [<numba.core.ir.Assign object at 0x7f94ece275c0>],
             '$0.6': [<numba.core.ir.Assign object at 0x7f94ece27978>],
             '$0.7': [<numba.core.ir.Assign object at 0x7f94ece1f588>],
             '$const0.12': [<numba.core.ir.Assign object at 0x7f94ece1f978>],
             '$const0.17': [<numba.core.ir.Assign object at 0x7f94ece1fda0>],
             '$const0.2': [<numba.core.ir.Assign object at 0x7f94ece1f160>],
             '$const0.20': [<numba.core.ir.Assign object at 0x7f94ece22048>],
             '$const0.25': [<numba.core.ir.Assign object at 0x7f94ece22470>],
             '$const0.28': [<numba.core.ir.Assign object at 0x7f94ece226d8>],
             '$const0.33': [<numba.core.ir.Assign object at 0x7f94ece22b00>],
             '$const0.34': [<numba.core.ir.Assign object at 0x7f94ece22c50>],
             '$const0.36': [<numba.core.ir.Assign object at 0x7f94ece22dd8>],
             '$const0.37': [<numba.core.ir.Assign object at 0x7f94ece22f28>],
             '$const0.39': [<numba.core.ir.Assign object at 0x7f94ece10208>],
             '$const0.40': [<numba.core.ir.Assign object at 0x7f94ece27208>],
             '$const0.42': [<numba.core.ir.Assign object at 0x7f94ece27390>],
             '$const0.43': [<numba.core.ir.Assign object at 0x7f94ece274e0>],
             '$const0.5': [<numba.core.ir.Assign object at 0x7f94ece1f3c8>],
             '$const0.9': [<numba.core.ir.Assign object at 0x7f94ece1f710>],
             'q1': [<numba.core.ir.Assign object at 0x7f94ece17e48>],
             'q2': [<numba.core.ir.Assign object at 0x7f94ece17ef0>],
             'qout': [<numba.core.ir.Assign object at 0x7f94ece17f98>]})
2022-01-24 14:09:01,316 DEBUG SSA violators set()
2022-01-24 14:09:01,430 DEBUG label 0:
    q1 = arg(0, name=q1)                     ['q1']
    q2 = arg(1, name=q2)                     ['q2']
    qout = arg(2, name=qout)                 ['qout']
    $const0.2 = const(int, 0)                ['$const0.2']
    $0.3 = getitem(value=q1, index=$const0.2, fn=<built-in function getitem>) ['$0.3', '$const0.2', 'q1']
    $const0.5 = const(int, 0)                ['$const0.5']
    $0.6 = getitem(value=q2, index=$const0.5, fn=<built-in function getitem>) ['$0.6', '$const0.5', 'q2']
    $0.7 = $0.3 * $0.6                       ['$0.3', '$0.6', '$0.7']
    $const0.9 = const(int, 0)                ['$const0.9']
    qout[$const0.9] = $0.7                   ['$0.7', '$const0.9', 'qout']
    $const0.11 = const(int, 0)               ['$const0.11']
    $0.12 = getitem(value=q1, index=$const0.11, fn=<built-in function getitem>) ['$0.12', '$const0.11', 'q1']
    $const0.14 = const(int, 1)               ['$const0.14']
    $0.15 = getitem(value=q2, index=$const0.14, fn=<built-in function getitem>) ['$0.15', '$const0.14', 'q2']
    $0.16 = $0.12 * $0.15                    ['$0.12', '$0.15', '$0.16']
    $const0.18 = const(int, 1)               ['$const0.18']
    $0.19 = getitem(value=q1, index=$const0.18, fn=<built-in function getitem>) ['$0.19', '$const0.18', 'q1']
    $const0.21 = const(int, 0)               ['$const0.21']
    $0.22 = getitem(value=q2, index=$const0.21, fn=<built-in function getitem>) ['$0.22', '$const0.21', 'q2']
    $0.23 = $0.19 * $0.22                    ['$0.19', '$0.22', '$0.23']
    $0.24 = $0.16 + $0.23                    ['$0.16', '$0.23', '$0.24']
    $const0.26 = const(int, 1)               ['$const0.26']
    qout[$const0.26] = $0.24                 ['$0.24', '$const0.26', 'qout']
    $const0.28 = const(int, 0)               ['$const0.28']
    $0.29 = getitem(value=q1, index=$const0.28, fn=<built-in function getitem>) ['$0.29', '$const0.28', 'q1']
    $const0.31 = const(int, 2)               ['$const0.31']
    $0.32 = getitem(value=q2, index=$const0.31, fn=<built-in function getitem>) ['$0.32', '$const0.31', 'q2']
    $0.33 = $0.29 * $0.32                    ['$0.29', '$0.32', '$0.33']
    $const0.35 = const(int, 2)               ['$const0.35']
    $0.36 = getitem(value=q1, index=$const0.35, fn=<built-in function getitem>) ['$0.36', '$const0.35', 'q1']
    $const0.38 = const(int, 0)               ['$const0.38']
    $0.39 = getitem(value=q2, index=$const0.38, fn=<built-in function getitem>) ['$0.39', '$const0.38', 'q2']
    $0.40 = $0.36 * $0.39                    ['$0.36', '$0.39', '$0.40']
    $0.41 = $0.33 + $0.40                    ['$0.33', '$0.40', '$0.41']
    $const0.43 = const(int, 2)               ['$const0.43']
    qout[$const0.43] = $0.41                 ['$0.41', '$const0.43', 'qout']
    $const0.45 = const(int, 0)               ['$const0.45']
    $0.46 = getitem(value=q1, index=$const0.45, fn=<built-in function getitem>) ['$0.46', '$const0.45', 'q1']
    $const0.48 = const(int, 3)               ['$const0.48']
    $0.49 = getitem(value=q2, index=$const0.48, fn=<built-in function getitem>) ['$0.49', '$const0.48', 'q2']
    $0.50 = $0.46 * $0.49                    ['$0.46', '$0.49', '$0.50']
    $const0.52 = const(int, 3)               ['$const0.52']
    $0.53 = getitem(value=q1, index=$const0.52, fn=<built-in function getitem>) ['$0.53', '$const0.52', 'q1']
    $const0.55 = const(int, 0)               ['$const0.55']
    $0.56 = getitem(value=q2, index=$const0.55, fn=<built-in function getitem>) ['$0.56', '$const0.55', 'q2']
    $0.57 = $0.53 * $0.56                    ['$0.53', '$0.56', '$0.57']
    $0.58 = $0.50 + $0.57                    ['$0.50', '$0.57', '$0.58']
    $const0.60 = const(int, 3)               ['$const0.60']
    qout[$const0.60] = $0.58                 ['$0.58', '$const0.60', 'qout']
    $const0.61 = const(NoneType, None)       ['$const0.61']
    $0.62 = cast(value=$const0.61)           ['$0.62', '$const0.61']
    return $0.62                             ['$0.62']

2022-01-24 14:09:01,437 DEBUG ==== SSA block analysis pass on 0
2022-01-24 14:09:01,437 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eceecc88>
2022-01-24 14:09:01,437 DEBUG on stmt: q1 = arg(0, name=q1)
2022-01-24 14:09:01,437 DEBUG on stmt: q2 = arg(1, name=q2)
2022-01-24 14:09:01,437 DEBUG on stmt: qout = arg(2, name=qout)
2022-01-24 14:09:01,437 DEBUG on stmt: $const0.2 = const(int, 0)
2022-01-24 14:09:01,437 DEBUG on stmt: $0.3 = static_getitem(value=q1, index=0, index_var=$const0.2, fn=<built-in function getitem>)
2022-01-24 14:09:01,437 DEBUG on stmt: $const0.5 = const(int, 0)
2022-01-24 14:09:01,437 DEBUG on stmt: $0.6 = static_getitem(value=q2, index=0, index_var=$const0.5, fn=<built-in function getitem>)
2022-01-24 14:09:01,437 DEBUG on stmt: $0.7 = $0.3 * $0.6
2022-01-24 14:09:01,437 DEBUG on stmt: $const0.9 = const(int, 0)
2022-01-24 14:09:01,437 DEBUG on stmt: qout[0] = $0.7
2022-01-24 14:09:01,437 DEBUG on stmt: $const0.11 = const(int, 0)
2022-01-24 14:09:01,437 DEBUG on stmt: $0.12 = static_getitem(value=q1, index=0, index_var=$const0.11, fn=<built-in function getitem>)
2022-01-24 14:09:01,437 DEBUG on stmt: $const0.14 = const(int, 1)
2022-01-24 14:09:01,437 DEBUG on stmt: $0.15 = static_getitem(value=q2, index=1, index_var=$const0.14, fn=<built-in function getitem>)
2022-01-24 14:09:01,437 DEBUG on stmt: $0.16 = $0.12 * $0.15
2022-01-24 14:09:01,437 DEBUG on stmt: $const0.18 = const(int, 1)
2022-01-24 14:09:01,437 DEBUG on stmt: $0.19 = static_getitem(value=q1, index=1, index_var=$const0.18, fn=<built-in function getitem>)
2022-01-24 14:09:01,438 DEBUG on stmt: $const0.21 = const(int, 0)
2022-01-24 14:09:01,438 DEBUG on stmt: $0.22 = static_getitem(value=q2, index=0, index_var=$const0.21, fn=<built-in function getitem>)
2022-01-24 14:09:01,438 DEBUG on stmt: $0.23 = $0.19 * $0.22
2022-01-24 14:09:01,438 DEBUG on stmt: $0.24 = $0.16 + $0.23
2022-01-24 14:09:01,438 DEBUG on stmt: $const0.26 = const(int, 1)
2022-01-24 14:09:01,438 DEBUG on stmt: qout[1] = $0.24
2022-01-24 14:09:01,438 DEBUG on stmt: $const0.28 = const(int, 0)
2022-01-24 14:09:01,438 DEBUG on stmt: $0.29 = static_getitem(value=q1, index=0, index_var=$const0.28, fn=<built-in function getitem>)
2022-01-24 14:09:01,438 DEBUG on stmt: $const0.31 = const(int, 2)
2022-01-24 14:09:01,438 DEBUG on stmt: $0.32 = static_getitem(value=q2, index=2, index_var=$const0.31, fn=<built-in function getitem>)
2022-01-24 14:09:01,438 DEBUG on stmt: $0.33 = $0.29 * $0.32
2022-01-24 14:09:01,438 DEBUG on stmt: $const0.35 = const(int, 2)
2022-01-24 14:09:01,438 DEBUG on stmt: $0.36 = static_getitem(value=q1, index=2, index_var=$const0.35, fn=<built-in function getitem>)
2022-01-24 14:09:01,438 DEBUG on stmt: $const0.38 = const(int, 0)
2022-01-24 14:09:01,438 DEBUG on stmt: $0.39 = static_getitem(value=q2, index=0, index_var=$const0.38, fn=<built-in function getitem>)
2022-01-24 14:09:01,438 DEBUG on stmt: $0.40 = $0.36 * $0.39
2022-01-24 14:09:01,438 DEBUG on stmt: $0.41 = $0.33 + $0.40
2022-01-24 14:09:01,438 DEBUG on stmt: $const0.43 = const(int, 2)
2022-01-24 14:09:01,438 DEBUG on stmt: qout[2] = $0.41
2022-01-24 14:09:01,438 DEBUG on stmt: $const0.45 = const(int, 0)
2022-01-24 14:09:01,438 DEBUG on stmt: $0.46 = static_getitem(value=q1, index=0, index_var=$const0.45, fn=<built-in function getitem>)
2022-01-24 14:09:01,438 DEBUG on stmt: $const0.48 = const(int, 3)
2022-01-24 14:09:01,438 DEBUG on stmt: $0.49 = static_getitem(value=q2, index=3, index_var=$const0.48, fn=<built-in function getitem>)
2022-01-24 14:09:01,438 DEBUG on stmt: $0.50 = $0.46 * $0.49
2022-01-24 14:09:01,439 DEBUG on stmt: $const0.52 = const(int, 3)
2022-01-24 14:09:01,439 DEBUG on stmt: $0.53 = static_getitem(value=q1, index=3, index_var=$const0.52, fn=<built-in function getitem>)
2022-01-24 14:09:01,439 DEBUG on stmt: $const0.55 = const(int, 0)
2022-01-24 14:09:01,439 DEBUG on stmt: $0.56 = static_getitem(value=q2, index=0, index_var=$const0.55, fn=<built-in function getitem>)
2022-01-24 14:09:01,439 DEBUG on stmt: $0.57 = $0.53 * $0.56
2022-01-24 14:09:01,439 DEBUG on stmt: $0.58 = $0.50 + $0.57
2022-01-24 14:09:01,439 DEBUG on stmt: $const0.60 = const(int, 3)
2022-01-24 14:09:01,439 DEBUG on stmt: qout[3] = $0.58
2022-01-24 14:09:01,439 DEBUG on stmt: $const0.61 = const(NoneType, None)
2022-01-24 14:09:01,439 DEBUG on stmt: $0.62 = cast(value=$const0.61)
2022-01-24 14:09:01,439 DEBUG on stmt: return $0.62
2022-01-24 14:09:01,439 DEBUG defs defaultdict(<class 'list'>,
            {'$0.12': [<numba.core.ir.Assign object at 0x7f94ecef2e48>],
             '$0.15': [<numba.core.ir.Assign object at 0x7f94ecef2eb8>],
             '$0.16': [<numba.core.ir.Assign object at 0x7f94ecefb438>],
             '$0.19': [<numba.core.ir.Assign object at 0x7f94ecef2f28>],
             '$0.22': [<numba.core.ir.Assign object at 0x7f94ecef2f98>],
             '$0.23': [<numba.core.ir.Assign object at 0x7f94ecefb9e8>],
             '$0.24': [<numba.core.ir.Assign object at 0x7f94ecefbac8>],
             '$0.29': [<numba.core.ir.Assign object at 0x7f94ecef2438>],
             '$0.3': [<numba.core.ir.Assign object at 0x7f94ecef2d68>],
             '$0.32': [<numba.core.ir.Assign object at 0x7f94ecef0080>],
             '$0.33': [<numba.core.ir.Assign object at 0x7f94ecf002b0>],
             '$0.36': [<numba.core.ir.Assign object at 0x7f94ecef00f0>],
             '$0.39': [<numba.core.ir.Assign object at 0x7f94ecef0160>],
             '$0.40': [<numba.core.ir.Assign object at 0x7f94ecf00860>],
             '$0.41': [<numba.core.ir.Assign object at 0x7f94ecf00940>],
             '$0.46': [<numba.core.ir.Assign object at 0x7f94ecef01d0>],
             '$0.49': [<numba.core.ir.Assign object at 0x7f94ecef0240>],
             '$0.50': [<numba.core.ir.Assign object at 0x7f94ecef2128>],
             '$0.53': [<numba.core.ir.Assign object at 0x7f94ecef02b0>],
             '$0.56': [<numba.core.ir.Assign object at 0x7f94ecef0320>],
             '$0.57': [<numba.core.ir.Assign object at 0x7f94ecef26d8>],
             '$0.58': [<numba.core.ir.Assign object at 0x7f94ecef27b8>],
             '$0.6': [<numba.core.ir.Assign object at 0x7f94ecef2dd8>],
             '$0.62': [<numba.core.ir.Assign object at 0x7f94ecef2b70>],
             '$0.7': [<numba.core.ir.Assign object at 0x7f94ecef5c50>],
             '$const0.11': [<numba.core.ir.Assign object at 0x7f94ecef5fd0>],
             '$const0.14': [<numba.core.ir.Assign object at 0x7f94ecefb278>],
             '$const0.18': [<numba.core.ir.Assign object at 0x7f94ecefb5c0>],
             '$const0.2': [<numba.core.ir.Assign object at 0x7f94ecef5828>],
             '$const0.21': [<numba.core.ir.Assign object at 0x7f94ecefb828>],
             '$const0.26': [<numba.core.ir.Assign object at 0x7f94ecefbc50>],
             '$const0.28': [<numba.core.ir.Assign object at 0x7f94ecefbe48>],
             '$const0.31': [<numba.core.ir.Assign object at 0x7f94ecf000f0>],
             '$const0.35': [<numba.core.ir.Assign object at 0x7f94ecf00438>],
             '$const0.38': [<numba.core.ir.Assign object at 0x7f94ecf006a0>],
             '$const0.43': [<numba.core.ir.Assign object at 0x7f94ecf00ac8>],
             '$const0.45': [<numba.core.ir.Assign object at 0x7f94ecf00cc0>],
             '$const0.48': [<numba.core.ir.Assign object at 0x7f94ecf00f28>],
             '$const0.5': [<numba.core.ir.Assign object at 0x7f94ecef5a90>],
             '$const0.52': [<numba.core.ir.Assign object at 0x7f94ecef22b0>],
             '$const0.55': [<numba.core.ir.Assign object at 0x7f94ecef2518>],
             '$const0.60': [<numba.core.ir.Assign object at 0x7f94ecef2940>],
             '$const0.61': [<numba.core.ir.Assign object at 0x7f94ecef2a90>],
             '$const0.9': [<numba.core.ir.Assign object at 0x7f94ecef5dd8>],
             'q1': [<numba.core.ir.Assign object at 0x7f94ecef5550>],
             'q2': [<numba.core.ir.Assign object at 0x7f94ecef55f8>],
             'qout': [<numba.core.ir.Assign object at 0x7f94ecef56a0>]})
2022-01-24 14:09:01,439 DEBUG SSA violators set()
2022-01-24 14:09:01,664 DEBUG label 0:
    q1 = arg(0, name=q1)                     ['q1']
    q2 = arg(1, name=q2)                     ['q2']
    qout = arg(2, name=qout)                 ['qout']
    $const0.2 = const(int, 0)                ['$const0.2']
    $0.3 = getitem(value=q1, index=$const0.2, fn=<built-in function getitem>) ['$0.3', '$const0.2', 'q1']
    $const0.5 = const(int, 0)                ['$const0.5']
    $0.6 = getitem(value=q2, index=$const0.5, fn=<built-in function getitem>) ['$0.6', '$const0.5', 'q2']
    $0.7 = $0.3 * $0.6                       ['$0.3', '$0.6', '$0.7']
    $const0.9 = const(int, 1)                ['$const0.9']
    $0.10 = getitem(value=q1, index=$const0.9, fn=<built-in function getitem>) ['$0.10', '$const0.9', 'q1']
    $const0.12 = const(int, 1)               ['$const0.12']
    $0.13 = getitem(value=q2, index=$const0.12, fn=<built-in function getitem>) ['$0.13', '$const0.12', 'q2']
    $0.14 = $0.10 * $0.13                    ['$0.10', '$0.13', '$0.14']
    $0.15 = $0.7 - $0.14                     ['$0.14', '$0.15', '$0.7']
    $const0.17 = const(int, 2)               ['$const0.17']
    $0.18 = getitem(value=q1, index=$const0.17, fn=<built-in function getitem>) ['$0.18', '$const0.17', 'q1']
    $const0.20 = const(int, 2)               ['$const0.20']
    $0.21 = getitem(value=q2, index=$const0.20, fn=<built-in function getitem>) ['$0.21', '$const0.20', 'q2']
    $0.22 = $0.18 * $0.21                    ['$0.18', '$0.21', '$0.22']
    $0.23 = $0.15 - $0.22                    ['$0.15', '$0.22', '$0.23']
    $const0.25 = const(int, 3)               ['$const0.25']
    $0.26 = getitem(value=q1, index=$const0.25, fn=<built-in function getitem>) ['$0.26', '$const0.25', 'q1']
    $const0.28 = const(int, 3)               ['$const0.28']
    $0.29 = getitem(value=q2, index=$const0.28, fn=<built-in function getitem>) ['$0.29', '$const0.28', 'q2']
    $0.30 = $0.26 * $0.29                    ['$0.26', '$0.29', '$0.30']
    $0.31 = $0.23 - $0.30                    ['$0.23', '$0.30', '$0.31']
    $const0.33 = const(int, 0)               ['$const0.33']
    qout[$const0.33] = $0.31                 ['$0.31', '$const0.33', 'qout']
    $const0.35 = const(int, 0)               ['$const0.35']
    $0.36 = getitem(value=q1, index=$const0.35, fn=<built-in function getitem>) ['$0.36', '$const0.35', 'q1']
    $const0.38 = const(int, 1)               ['$const0.38']
    $0.39 = getitem(value=q2, index=$const0.38, fn=<built-in function getitem>) ['$0.39', '$const0.38', 'q2']
    $0.40 = $0.36 * $0.39                    ['$0.36', '$0.39', '$0.40']
    $const0.42 = const(int, 1)               ['$const0.42']
    qout[$const0.42] = $0.40                 ['$0.40', '$const0.42', 'qout']
    $const0.44 = const(int, 0)               ['$const0.44']
    $0.45 = getitem(value=q1, index=$const0.44, fn=<built-in function getitem>) ['$0.45', '$const0.44', 'q1']
    $const0.47 = const(int, 2)               ['$const0.47']
    $0.48 = getitem(value=q2, index=$const0.47, fn=<built-in function getitem>) ['$0.48', '$const0.47', 'q2']
    $0.49 = $0.45 * $0.48                    ['$0.45', '$0.48', '$0.49']
    $const0.51 = const(int, 2)               ['$const0.51']
    qout[$const0.51] = $0.49                 ['$0.49', '$const0.51', 'qout']
    $const0.53 = const(int, 0)               ['$const0.53']
    $0.54 = getitem(value=q1, index=$const0.53, fn=<built-in function getitem>) ['$0.54', '$const0.53', 'q1']
    $const0.56 = const(int, 3)               ['$const0.56']
    $0.57 = getitem(value=q2, index=$const0.56, fn=<built-in function getitem>) ['$0.57', '$const0.56', 'q2']
    $0.58 = $0.54 * $0.57                    ['$0.54', '$0.57', '$0.58']
    $const0.60 = const(int, 3)               ['$const0.60']
    qout[$const0.60] = $0.58                 ['$0.58', '$const0.60', 'qout']
    $const0.61 = const(NoneType, None)       ['$const0.61']
    $0.62 = cast(value=$const0.61)           ['$0.62', '$const0.61']
    return $0.62                             ['$0.62']

2022-01-24 14:09:01,669 DEBUG ==== SSA block analysis pass on 0
2022-01-24 14:09:01,669 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ece109e8>
2022-01-24 14:09:01,669 DEBUG on stmt: q1 = arg(0, name=q1)
2022-01-24 14:09:01,669 DEBUG on stmt: q2 = arg(1, name=q2)
2022-01-24 14:09:01,669 DEBUG on stmt: qout = arg(2, name=qout)
2022-01-24 14:09:01,669 DEBUG on stmt: $const0.2 = const(int, 0)
2022-01-24 14:09:01,669 DEBUG on stmt: $0.3 = static_getitem(value=q1, index=0, index_var=$const0.2, fn=<built-in function getitem>)
2022-01-24 14:09:01,669 DEBUG on stmt: $const0.5 = const(int, 0)
2022-01-24 14:09:01,669 DEBUG on stmt: $0.6 = static_getitem(value=q2, index=0, index_var=$const0.5, fn=<built-in function getitem>)
2022-01-24 14:09:01,669 DEBUG on stmt: $0.7 = $0.3 * $0.6
2022-01-24 14:09:01,669 DEBUG on stmt: $const0.9 = const(int, 1)
2022-01-24 14:09:01,669 DEBUG on stmt: $0.10 = static_getitem(value=q1, index=1, index_var=$const0.9, fn=<built-in function getitem>)
2022-01-24 14:09:01,669 DEBUG on stmt: $const0.12 = const(int, 1)
2022-01-24 14:09:01,669 DEBUG on stmt: $0.13 = static_getitem(value=q2, index=1, index_var=$const0.12, fn=<built-in function getitem>)
2022-01-24 14:09:01,669 DEBUG on stmt: $0.14 = $0.10 * $0.13
2022-01-24 14:09:01,669 DEBUG on stmt: $0.15 = $0.7 - $0.14
2022-01-24 14:09:01,669 DEBUG on stmt: $const0.17 = const(int, 2)
2022-01-24 14:09:01,669 DEBUG on stmt: $0.18 = static_getitem(value=q1, index=2, index_var=$const0.17, fn=<built-in function getitem>)
2022-01-24 14:09:01,669 DEBUG on stmt: $const0.20 = const(int, 2)
2022-01-24 14:09:01,670 DEBUG on stmt: $0.21 = static_getitem(value=q2, index=2, index_var=$const0.20, fn=<built-in function getitem>)
2022-01-24 14:09:01,670 DEBUG on stmt: $0.22 = $0.18 * $0.21
2022-01-24 14:09:01,670 DEBUG on stmt: $0.23 = $0.15 - $0.22
2022-01-24 14:09:01,670 DEBUG on stmt: $const0.25 = const(int, 3)
2022-01-24 14:09:01,670 DEBUG on stmt: $0.26 = static_getitem(value=q1, index=3, index_var=$const0.25, fn=<built-in function getitem>)
2022-01-24 14:09:01,670 DEBUG on stmt: $const0.28 = const(int, 3)
2022-01-24 14:09:01,670 DEBUG on stmt: $0.29 = static_getitem(value=q2, index=3, index_var=$const0.28, fn=<built-in function getitem>)
2022-01-24 14:09:01,670 DEBUG on stmt: $0.30 = $0.26 * $0.29
2022-01-24 14:09:01,670 DEBUG on stmt: $0.31 = $0.23 - $0.30
2022-01-24 14:09:01,670 DEBUG on stmt: $const0.33 = const(int, 0)
2022-01-24 14:09:01,670 DEBUG on stmt: qout[0] = $0.31
2022-01-24 14:09:01,670 DEBUG on stmt: $const0.35 = const(int, 0)
2022-01-24 14:09:01,670 DEBUG on stmt: $0.36 = static_getitem(value=q1, index=0, index_var=$const0.35, fn=<built-in function getitem>)
2022-01-24 14:09:01,670 DEBUG on stmt: $const0.38 = const(int, 1)
2022-01-24 14:09:01,670 DEBUG on stmt: $0.39 = static_getitem(value=q2, index=1, index_var=$const0.38, fn=<built-in function getitem>)
2022-01-24 14:09:01,670 DEBUG on stmt: $0.40 = $0.36 * $0.39
2022-01-24 14:09:01,670 DEBUG on stmt: $const0.42 = const(int, 1)
2022-01-24 14:09:01,670 DEBUG on stmt: qout[1] = $0.40
2022-01-24 14:09:01,670 DEBUG on stmt: $const0.44 = const(int, 0)
2022-01-24 14:09:01,670 DEBUG on stmt: $0.45 = static_getitem(value=q1, index=0, index_var=$const0.44, fn=<built-in function getitem>)
2022-01-24 14:09:01,670 DEBUG on stmt: $const0.47 = const(int, 2)
2022-01-24 14:09:01,670 DEBUG on stmt: $0.48 = static_getitem(value=q2, index=2, index_var=$const0.47, fn=<built-in function getitem>)
2022-01-24 14:09:01,670 DEBUG on stmt: $0.49 = $0.45 * $0.48
2022-01-24 14:09:01,670 DEBUG on stmt: $const0.51 = const(int, 2)
2022-01-24 14:09:01,670 DEBUG on stmt: qout[2] = $0.49
2022-01-24 14:09:01,670 DEBUG on stmt: $const0.53 = const(int, 0)
2022-01-24 14:09:01,670 DEBUG on stmt: $0.54 = static_getitem(value=q1, index=0, index_var=$const0.53, fn=<built-in function getitem>)
2022-01-24 14:09:01,671 DEBUG on stmt: $const0.56 = const(int, 3)
2022-01-24 14:09:01,671 DEBUG on stmt: $0.57 = static_getitem(value=q2, index=3, index_var=$const0.56, fn=<built-in function getitem>)
2022-01-24 14:09:01,671 DEBUG on stmt: $0.58 = $0.54 * $0.57
2022-01-24 14:09:01,671 DEBUG on stmt: $const0.60 = const(int, 3)
2022-01-24 14:09:01,671 DEBUG on stmt: qout[3] = $0.58
2022-01-24 14:09:01,671 DEBUG on stmt: $const0.61 = const(NoneType, None)
2022-01-24 14:09:01,671 DEBUG on stmt: $0.62 = cast(value=$const0.61)
2022-01-24 14:09:01,671 DEBUG on stmt: return $0.62
2022-01-24 14:09:01,671 DEBUG defs defaultdict(<class 'list'>,
            {'$0.10': [<numba.core.ir.Assign object at 0x7f94ecd2b240>],
             '$0.13': [<numba.core.ir.Assign object at 0x7f94ecd2b048>],
             '$0.14': [<numba.core.ir.Assign object at 0x7f94ece27128>],
             '$0.15': [<numba.core.ir.Assign object at 0x7f94ece27ef0>],
             '$0.18': [<numba.core.ir.Assign object at 0x7f94ecd2b198>],
             '$0.21': [<numba.core.ir.Assign object at 0x7f94ecd2b0f0>],
             '$0.22': [<numba.core.ir.Assign object at 0x7f94ece2a048>],
             '$0.23': [<numba.core.ir.Assign object at 0x7f94ece2a128>],
             '$0.26': [<numba.core.ir.Assign object at 0x7f94ecb2fba8>],
             '$0.29': [<numba.core.ir.Assign object at 0x7f94ecb2ff98>],
             '$0.3': [<numba.core.ir.Assign object at 0x7f94ecd2b160>],
             '$0.30': [<numba.core.ir.Assign object at 0x7f94ece2add8>],
             '$0.31': [<numba.core.ir.Assign object at 0x7f94ece2a518>],
             '$0.36': [<numba.core.ir.Assign object at 0x7f94ecb2ff28>],
             '$0.39': [<numba.core.ir.Assign object at 0x7f94ecb2f518>],
             '$0.40': [<numba.core.ir.Assign object at 0x7f94ece31518>],
             '$0.45': [<numba.core.ir.Assign object at 0x7f94ecb2f668>],
             '$0.48': [<numba.core.ir.Assign object at 0x7f94ecb2f390>],
             '$0.49': [<numba.core.ir.Assign object at 0x7f94ece31ac8>],
             '$0.54': [<numba.core.ir.Assign object at 0x7f94ecb2e978>],
             '$0.57': [<numba.core.ir.Assign object at 0x7f94ecb2e048>],
             '$0.58': [<numba.core.ir.Assign object at 0x7f94ecb3b588>],
             '$0.6': [<numba.core.ir.Assign object at 0x7f94ecd2b080>],
             '$0.62': [<numba.core.ir.Assign object at 0x7f94ecd2ba20>],
             '$0.7': [<numba.core.ir.Assign object at 0x7f94ece2eac8>],
             '$const0.12': [<numba.core.ir.Assign object at 0x7f94ece2ef28>],
             '$const0.17': [<numba.core.ir.Assign object at 0x7f94ece27da0>],
             '$const0.2': [<numba.core.ir.Assign object at 0x7f94ecded4e0>],
             '$const0.20': [<numba.core.ir.Assign object at 0x7f94ece27e10>],
             '$const0.25': [<numba.core.ir.Assign object at 0x7f94ece2a710>],
             '$const0.28': [<numba.core.ir.Assign object at 0x7f94ece2ab70>],
             '$const0.33': [<numba.core.ir.Assign object at 0x7f94ece2a208>],
             '$const0.35': [<numba.core.ir.Assign object at 0x7f94ece2a7f0>],
             '$const0.38': [<numba.core.ir.Assign object at 0x7f94ece2a358>],
             '$const0.42': [<numba.core.ir.Assign object at 0x7f94ece31550>],
             '$const0.44': [<numba.core.ir.Assign object at 0x7f94ece31160>],
             '$const0.47': [<numba.core.ir.Assign object at 0x7f94ece31828>],
             '$const0.5': [<numba.core.ir.Assign object at 0x7f94ecded278>],
             '$const0.51': [<numba.core.ir.Assign object at 0x7f94ece31cf8>],
             '$const0.53': [<numba.core.ir.Assign object at 0x7f94ece31be0>],
             '$const0.56': [<numba.core.ir.Assign object at 0x7f94ece31908>],
             '$const0.60': [<numba.core.ir.Assign object at 0x7f94ecd2b828>],
             '$const0.61': [<numba.core.ir.Assign object at 0x7f94ecd2bf60>],
             '$const0.9': [<numba.core.ir.Assign object at 0x7f94ece2ed68>],
             'q1': [<numba.core.ir.Assign object at 0x7f94ecded630>],
             'q2': [<numba.core.ir.Assign object at 0x7f94ecded748>],
             'qout': [<numba.core.ir.Assign object at 0x7f94ecded080>]})
2022-01-24 14:09:01,671 DEBUG SSA violators set()
2022-01-24 14:09:01,800 DEBUG label 0:
    q1 = arg(0, name=q1)                     ['q1']
    q2 = arg(1, name=q2)                     ['q2']
    qout = arg(2, name=qout)                 ['qout']
    $const0.2 = const(int, 0)                ['$const0.2']
    $0.3 = getitem(value=q1, index=$const0.2, fn=<built-in function getitem>) ['$0.3', '$const0.2', 'q1']
    $const0.5 = const(int, 0)                ['$const0.5']
    $0.6 = getitem(value=q2, index=$const0.5, fn=<built-in function getitem>) ['$0.6', '$const0.5', 'q2']
    $0.7 = $0.3 * $0.6                       ['$0.3', '$0.6', '$0.7']
    $const0.9 = const(int, 1)                ['$const0.9']
    $0.10 = getitem(value=q1, index=$const0.9, fn=<built-in function getitem>) ['$0.10', '$const0.9', 'q1']
    $const0.12 = const(int, 1)               ['$const0.12']
    $0.13 = getitem(value=q2, index=$const0.12, fn=<built-in function getitem>) ['$0.13', '$const0.12', 'q2']
    $0.14 = $0.10 * $0.13                    ['$0.10', '$0.13', '$0.14']
    $0.15 = $0.7 - $0.14                     ['$0.14', '$0.15', '$0.7']
    $const0.17 = const(int, 2)               ['$const0.17']
    $0.18 = getitem(value=q1, index=$const0.17, fn=<built-in function getitem>) ['$0.18', '$const0.17', 'q1']
    $const0.20 = const(int, 2)               ['$const0.20']
    $0.21 = getitem(value=q2, index=$const0.20, fn=<built-in function getitem>) ['$0.21', '$const0.20', 'q2']
    $0.22 = $0.18 * $0.21                    ['$0.18', '$0.21', '$0.22']
    $0.23 = $0.15 - $0.22                    ['$0.15', '$0.22', '$0.23']
    $const0.25 = const(int, 3)               ['$const0.25']
    $0.26 = getitem(value=q1, index=$const0.25, fn=<built-in function getitem>) ['$0.26', '$const0.25', 'q1']
    $const0.28 = const(int, 3)               ['$const0.28']
    $0.29 = getitem(value=q2, index=$const0.28, fn=<built-in function getitem>) ['$0.29', '$const0.28', 'q2']
    $0.30 = $0.26 * $0.29                    ['$0.26', '$0.29', '$0.30']
    $0.31 = $0.23 - $0.30                    ['$0.23', '$0.30', '$0.31']
    $const0.33 = const(int, 0)               ['$const0.33']
    qout[$const0.33] = $0.31                 ['$0.31', '$const0.33', 'qout']
    $const0.35 = const(int, 1)               ['$const0.35']
    $0.36 = getitem(value=q1, index=$const0.35, fn=<built-in function getitem>) ['$0.36', '$const0.35', 'q1']
    $const0.38 = const(int, 0)               ['$const0.38']
    $0.39 = getitem(value=q2, index=$const0.38, fn=<built-in function getitem>) ['$0.39', '$const0.38', 'q2']
    $0.40 = $0.36 * $0.39                    ['$0.36', '$0.39', '$0.40']
    $const0.42 = const(int, 1)               ['$const0.42']
    qout[$const0.42] = $0.40                 ['$0.40', '$const0.42', 'qout']
    $const0.44 = const(int, 2)               ['$const0.44']
    $0.45 = getitem(value=q1, index=$const0.44, fn=<built-in function getitem>) ['$0.45', '$const0.44', 'q1']
    $const0.47 = const(int, 0)               ['$const0.47']
    $0.48 = getitem(value=q2, index=$const0.47, fn=<built-in function getitem>) ['$0.48', '$const0.47', 'q2']
    $0.49 = $0.45 * $0.48                    ['$0.45', '$0.48', '$0.49']
    $const0.51 = const(int, 2)               ['$const0.51']
    qout[$const0.51] = $0.49                 ['$0.49', '$const0.51', 'qout']
    $const0.53 = const(int, 3)               ['$const0.53']
    $0.54 = getitem(value=q1, index=$const0.53, fn=<built-in function getitem>) ['$0.54', '$const0.53', 'q1']
    $const0.56 = const(int, 0)               ['$const0.56']
    $0.57 = getitem(value=q2, index=$const0.56, fn=<built-in function getitem>) ['$0.57', '$const0.56', 'q2']
    $0.58 = $0.54 * $0.57                    ['$0.54', '$0.57', '$0.58']
    $const0.60 = const(int, 3)               ['$const0.60']
    qout[$const0.60] = $0.58                 ['$0.58', '$const0.60', 'qout']
    $const0.61 = const(NoneType, None)       ['$const0.61']
    $0.62 = cast(value=$const0.61)           ['$0.62', '$const0.61']
    return $0.62                             ['$0.62']

2022-01-24 14:09:01,805 DEBUG ==== SSA block analysis pass on 0
2022-01-24 14:09:01,805 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ec58dcc0>
2022-01-24 14:09:01,805 DEBUG on stmt: q1 = arg(0, name=q1)
2022-01-24 14:09:01,805 DEBUG on stmt: q2 = arg(1, name=q2)
2022-01-24 14:09:01,805 DEBUG on stmt: qout = arg(2, name=qout)
2022-01-24 14:09:01,805 DEBUG on stmt: $const0.2 = const(int, 0)
2022-01-24 14:09:01,805 DEBUG on stmt: $0.3 = static_getitem(value=q1, index=0, index_var=$const0.2, fn=<built-in function getitem>)
2022-01-24 14:09:01,805 DEBUG on stmt: $const0.5 = const(int, 0)
2022-01-24 14:09:01,805 DEBUG on stmt: $0.6 = static_getitem(value=q2, index=0, index_var=$const0.5, fn=<built-in function getitem>)
2022-01-24 14:09:01,805 DEBUG on stmt: $0.7 = $0.3 * $0.6
2022-01-24 14:09:01,805 DEBUG on stmt: $const0.9 = const(int, 1)
2022-01-24 14:09:01,805 DEBUG on stmt: $0.10 = static_getitem(value=q1, index=1, index_var=$const0.9, fn=<built-in function getitem>)
2022-01-24 14:09:01,805 DEBUG on stmt: $const0.12 = const(int, 1)
2022-01-24 14:09:01,806 DEBUG on stmt: $0.13 = static_getitem(value=q2, index=1, index_var=$const0.12, fn=<built-in function getitem>)
2022-01-24 14:09:01,806 DEBUG on stmt: $0.14 = $0.10 * $0.13
2022-01-24 14:09:01,806 DEBUG on stmt: $0.15 = $0.7 - $0.14
2022-01-24 14:09:01,806 DEBUG on stmt: $const0.17 = const(int, 2)
2022-01-24 14:09:01,806 DEBUG on stmt: $0.18 = static_getitem(value=q1, index=2, index_var=$const0.17, fn=<built-in function getitem>)
2022-01-24 14:09:01,806 DEBUG on stmt: $const0.20 = const(int, 2)
2022-01-24 14:09:01,806 DEBUG on stmt: $0.21 = static_getitem(value=q2, index=2, index_var=$const0.20, fn=<built-in function getitem>)
2022-01-24 14:09:01,806 DEBUG on stmt: $0.22 = $0.18 * $0.21
2022-01-24 14:09:01,806 DEBUG on stmt: $0.23 = $0.15 - $0.22
2022-01-24 14:09:01,806 DEBUG on stmt: $const0.25 = const(int, 3)
2022-01-24 14:09:01,806 DEBUG on stmt: $0.26 = static_getitem(value=q1, index=3, index_var=$const0.25, fn=<built-in function getitem>)
2022-01-24 14:09:01,806 DEBUG on stmt: $const0.28 = const(int, 3)
2022-01-24 14:09:01,806 DEBUG on stmt: $0.29 = static_getitem(value=q2, index=3, index_var=$const0.28, fn=<built-in function getitem>)
2022-01-24 14:09:01,806 DEBUG on stmt: $0.30 = $0.26 * $0.29
2022-01-24 14:09:01,806 DEBUG on stmt: $0.31 = $0.23 - $0.30
2022-01-24 14:09:01,806 DEBUG on stmt: $const0.33 = const(int, 0)
2022-01-24 14:09:01,806 DEBUG on stmt: qout[0] = $0.31
2022-01-24 14:09:01,806 DEBUG on stmt: $const0.35 = const(int, 1)
2022-01-24 14:09:01,806 DEBUG on stmt: $0.36 = static_getitem(value=q1, index=1, index_var=$const0.35, fn=<built-in function getitem>)
2022-01-24 14:09:01,806 DEBUG on stmt: $const0.38 = const(int, 0)
2022-01-24 14:09:01,806 DEBUG on stmt: $0.39 = static_getitem(value=q2, index=0, index_var=$const0.38, fn=<built-in function getitem>)
2022-01-24 14:09:01,806 DEBUG on stmt: $0.40 = $0.36 * $0.39
2022-01-24 14:09:01,806 DEBUG on stmt: $const0.42 = const(int, 1)
2022-01-24 14:09:01,806 DEBUG on stmt: qout[1] = $0.40
2022-01-24 14:09:01,806 DEBUG on stmt: $const0.44 = const(int, 2)
2022-01-24 14:09:01,807 DEBUG on stmt: $0.45 = static_getitem(value=q1, index=2, index_var=$const0.44, fn=<built-in function getitem>)
2022-01-24 14:09:01,807 DEBUG on stmt: $const0.47 = const(int, 0)
2022-01-24 14:09:01,807 DEBUG on stmt: $0.48 = static_getitem(value=q2, index=0, index_var=$const0.47, fn=<built-in function getitem>)
2022-01-24 14:09:01,807 DEBUG on stmt: $0.49 = $0.45 * $0.48
2022-01-24 14:09:01,807 DEBUG on stmt: $const0.51 = const(int, 2)
2022-01-24 14:09:01,807 DEBUG on stmt: qout[2] = $0.49
2022-01-24 14:09:01,807 DEBUG on stmt: $const0.53 = const(int, 3)
2022-01-24 14:09:01,807 DEBUG on stmt: $0.54 = static_getitem(value=q1, index=3, index_var=$const0.53, fn=<built-in function getitem>)
2022-01-24 14:09:01,807 DEBUG on stmt: $const0.56 = const(int, 0)
2022-01-24 14:09:01,807 DEBUG on stmt: $0.57 = static_getitem(value=q2, index=0, index_var=$const0.56, fn=<built-in function getitem>)
2022-01-24 14:09:01,807 DEBUG on stmt: $0.58 = $0.54 * $0.57
2022-01-24 14:09:01,807 DEBUG on stmt: $const0.60 = const(int, 3)
2022-01-24 14:09:01,807 DEBUG on stmt: qout[3] = $0.58
2022-01-24 14:09:01,807 DEBUG on stmt: $const0.61 = const(NoneType, None)
2022-01-24 14:09:01,807 DEBUG on stmt: $0.62 = cast(value=$const0.61)
2022-01-24 14:09:01,807 DEBUG on stmt: return $0.62
2022-01-24 14:09:01,808 DEBUG defs defaultdict(<class 'list'>,
            {'$0.10': [<numba.core.ir.Assign object at 0x7f94ec6521d0>],
             '$0.13': [<numba.core.ir.Assign object at 0x7f94ec652390>],
             '$0.14': [<numba.core.ir.Assign object at 0x7f94ec686400>],
             '$0.15': [<numba.core.ir.Assign object at 0x7f94ec6860f0>],
             '$0.18': [<numba.core.ir.Assign object at 0x7f94ec6529e8>],
             '$0.21': [<numba.core.ir.Assign object at 0x7f94ec652320>],
             '$0.22': [<numba.core.ir.Assign object at 0x7f94ec04d898>],
             '$0.23': [<numba.core.ir.Assign object at 0x7f94ec04d588>],
             '$0.26': [<numba.core.ir.Assign object at 0x7f94ec6522e8>],
             '$0.29': [<numba.core.ir.Assign object at 0x7f94ec652240>],
             '$0.3': [<numba.core.ir.Assign object at 0x7f94ec652668>],
             '$0.30': [<numba.core.ir.Assign object at 0x7f94eb517550>],
             '$0.31': [<numba.core.ir.Assign object at 0x7f94eb5176a0>],
             '$0.36': [<numba.core.ir.Assign object at 0x7f94ec652128>],
             '$0.39': [<numba.core.ir.Assign object at 0x7f94ec652ba8>],
             '$0.40': [<numba.core.ir.Assign object at 0x7f94ec25b4e0>],
             '$0.45': [<numba.core.ir.Assign object at 0x7f94ec652438>],
             '$0.48': [<numba.core.ir.Assign object at 0x7f94ec6528d0>],
             '$0.49': [<numba.core.ir.Assign object at 0x7f94eb70d2e8>],
             '$0.54': [<numba.core.ir.Assign object at 0x7f94ec652748>],
             '$0.57': [<numba.core.ir.Assign object at 0x7f94ec652a58>],
             '$0.58': [<numba.core.ir.Assign object at 0x7f94ec652080>],
             '$0.6': [<numba.core.ir.Assign object at 0x7f94ec6525f8>],
             '$0.62': [<numba.core.ir.Assign object at 0x7f94ec652b70>],
             '$0.7': [<numba.core.ir.Assign object at 0x7f94ec686ba8>],
             '$const0.12': [<numba.core.ir.Assign object at 0x7f94ec686ef0>],
             '$const0.17': [<numba.core.ir.Assign object at 0x7f94eb3f08d0>],
             '$const0.2': [<numba.core.ir.Assign object at 0x7f94ec686390>],
             '$const0.20': [<numba.core.ir.Assign object at 0x7f94ec04b0b8>],
             '$const0.25': [<numba.core.ir.Assign object at 0x7f94ec04d438>],
             '$const0.28': [<numba.core.ir.Assign object at 0x7f94eb517358>],
             '$const0.33': [<numba.core.ir.Assign object at 0x7f94eb5179b0>],
             '$const0.35': [<numba.core.ir.Assign object at 0x7f94eb4db6a0>],
             '$const0.38': [<numba.core.ir.Assign object at 0x7f94eb4dbe48>],
             '$const0.42': [<numba.core.ir.Assign object at 0x7f94ec25b198>],
             '$const0.44': [<numba.core.ir.Assign object at 0x7f94ec079c50>],
             '$const0.47': [<numba.core.ir.Assign object at 0x7f94ec079e80>],
             '$const0.5': [<numba.core.ir.Assign object at 0x7f94ec686588>],
             '$const0.51': [<numba.core.ir.Assign object at 0x7f94eb70dcf8>],
             '$const0.53': [<numba.core.ir.Assign object at 0x7f94eb70dd68>],
             '$const0.56': [<numba.core.ir.Assign object at 0x7f94ec6524a8>],
             '$const0.60': [<numba.core.ir.Assign object at 0x7f94ec652f60>],
             '$const0.61': [<numba.core.ir.Assign object at 0x7f94ec652b00>],
             '$const0.9': [<numba.core.ir.Assign object at 0x7f94ec686a20>],
             'q1': [<numba.core.ir.Assign object at 0x7f94ec686b38>],
             'q2': [<numba.core.ir.Assign object at 0x7f94ec6860b8>],
             'qout': [<numba.core.ir.Assign object at 0x7f94ec686710>]})
2022-01-24 14:09:01,808 DEBUG SSA violators set()
2022-01-24 14:09:01,954 DEBUG label 0:
    q1 = arg(0, name=q1)                     ['q1']
    q2 = arg(1, name=q2)                     ['q2']
    bout = arg(2, name=bout)                 ['bout']
    $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$0.1']
    $0.2 = getattr(value=$0.1, attr=any)     ['$0.1', '$0.2']
    $const0.4 = const(NoneType, None)        ['$const0.4']
    $const0.5 = const(NoneType, None)        ['$const0.5']
    $0.6 = global(slice: <class 'slice'>)    ['$0.6']
    $0.7 = call $0.6($const0.4, $const0.5, func=$0.6, args=(Var($const0.4, algebra.py:389), Var($const0.5, algebra.py:389)), kws=(), vararg=None) ['$0.6', '$0.7', '$const0.4', '$const0.5']
    $0.8 = getitem(value=q1, index=$0.7, fn=<built-in function getitem>) ['$0.7', '$0.8', 'q1']
    $const0.10 = const(NoneType, None)       ['$const0.10']
    $const0.11 = const(NoneType, None)       ['$const0.11']
    $0.12 = global(slice: <class 'slice'>)   ['$0.12']
    $0.13 = call $0.12($const0.10, $const0.11, func=$0.12, args=(Var($const0.10, algebra.py:389), Var($const0.11, algebra.py:389)), kws=(), vararg=None) ['$0.12', '$0.13', '$const0.10', '$const0.11']
    $0.14 = getitem(value=q2, index=$0.13, fn=<built-in function getitem>) ['$0.13', '$0.14', 'q2']
    $0.15 = $0.8 != $0.14                    ['$0.14', '$0.15', '$0.8']
    $0.16 = call $0.2($0.15, func=$0.2, args=[Var($0.15, algebra.py:389)], kws=(), vararg=None) ['$0.15', '$0.16', '$0.2']
    $const0.18 = const(int, 0)               ['$const0.18']
    bout[$const0.18] = $0.16                 ['$0.16', '$const0.18', 'bout']
    $const0.19 = const(NoneType, None)       ['$const0.19']
    $0.20 = cast(value=$const0.19)           ['$0.20', '$const0.19']
    return $0.20                             ['$0.20']

2022-01-24 14:09:01,958 DEBUG ==== SSA block analysis pass on 0
2022-01-24 14:09:01,958 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ec667b38>
2022-01-24 14:09:01,958 DEBUG on stmt: q1 = arg(0, name=q1)
2022-01-24 14:09:01,958 DEBUG on stmt: q2 = arg(1, name=q2)
2022-01-24 14:09:01,958 DEBUG on stmt: bout = arg(2, name=bout)
2022-01-24 14:09:01,958 DEBUG on stmt: $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:09:01,958 DEBUG on stmt: $0.2 = getattr(value=$0.1, attr=any)
2022-01-24 14:09:01,958 DEBUG on stmt: $const0.4 = const(NoneType, None)
2022-01-24 14:09:01,958 DEBUG on stmt: $const0.5 = const(NoneType, None)
2022-01-24 14:09:01,958 DEBUG on stmt: $0.6 = global(slice: <class 'slice'>)
2022-01-24 14:09:01,958 DEBUG on stmt: $0.7 = call $0.6($const0.4, $const0.5, func=$0.6, args=(Var($const0.4, algebra.py:389), Var($const0.5, algebra.py:389)), kws=(), vararg=None)
2022-01-24 14:09:01,959 DEBUG on stmt: $0.8 = static_getitem(value=q1, index=slice(None, None, None), index_var=$0.7, fn=<built-in function getitem>)
2022-01-24 14:09:01,959 DEBUG on stmt: $const0.10 = const(NoneType, None)
2022-01-24 14:09:01,959 DEBUG on stmt: $const0.11 = const(NoneType, None)
2022-01-24 14:09:01,959 DEBUG on stmt: $0.12 = global(slice: <class 'slice'>)
2022-01-24 14:09:01,959 DEBUG on stmt: $0.13 = call $0.12($const0.10, $const0.11, func=$0.12, args=(Var($const0.10, algebra.py:389), Var($const0.11, algebra.py:389)), kws=(), vararg=None)
2022-01-24 14:09:01,959 DEBUG on stmt: $0.14 = static_getitem(value=q2, index=slice(None, None, None), index_var=$0.13, fn=<built-in function getitem>)
2022-01-24 14:09:01,959 DEBUG on stmt: $0.15 = $0.8 != $0.14
2022-01-24 14:09:01,959 DEBUG on stmt: $0.16 = call $0.2($0.15, func=$0.2, args=[Var($0.15, algebra.py:389)], kws=(), vararg=None)
2022-01-24 14:09:01,959 DEBUG on stmt: $const0.18 = const(int, 0)
2022-01-24 14:09:01,959 DEBUG on stmt: bout[0] = $0.16
2022-01-24 14:09:01,959 DEBUG on stmt: $const0.19 = const(NoneType, None)
2022-01-24 14:09:01,959 DEBUG on stmt: $0.20 = cast(value=$const0.19)
2022-01-24 14:09:01,959 DEBUG on stmt: return $0.20
2022-01-24 14:09:01,959 DEBUG defs defaultdict(<class 'list'>,
            {'$0.1': [<numba.core.ir.Assign object at 0x7f94eb63bb38>],
             '$0.12': [<numba.core.ir.Assign object at 0x7f94eb5f5a90>],
             '$0.13': [<numba.core.ir.Assign object at 0x7f94eb5f5978>],
             '$0.14': [<numba.core.ir.Assign object at 0x7f94eb568978>],
             '$0.15': [<numba.core.ir.Assign object at 0x7f94ec0d6470>],
             '$0.16': [<numba.core.ir.Assign object at 0x7f94ec0d6fd0>],
             '$0.2': [<numba.core.ir.Assign object at 0x7f94eb63b748>],
             '$0.20': [<numba.core.ir.Assign object at 0x7f94eb5687f0>],
             '$0.6': [<numba.core.ir.Assign object at 0x7f94eb63b358>],
             '$0.7': [<numba.core.ir.Assign object at 0x7f94eb63ba58>],
             '$0.8': [<numba.core.ir.Assign object at 0x7f94eb5686d8>],
             '$const0.10': [<numba.core.ir.Assign object at 0x7f94eb5f50f0>],
             '$const0.11': [<numba.core.ir.Assign object at 0x7f94eb5f5b00>],
             '$const0.18': [<numba.core.ir.Assign object at 0x7f94ec0d6f98>],
             '$const0.19': [<numba.core.ir.Assign object at 0x7f94eb568160>],
             '$const0.4': [<numba.core.ir.Assign object at 0x7f94eb63b6d8>],
             '$const0.5': [<numba.core.ir.Assign object at 0x7f94eb63b278>],
             'bout': [<numba.core.ir.Assign object at 0x7f94eb63be80>],
             'q1': [<numba.core.ir.Assign object at 0x7f94eb63bfd0>],
             'q2': [<numba.core.ir.Assign object at 0x7f94eb63bef0>]})
2022-01-24 14:09:01,959 DEBUG SSA violators set()
2022-01-24 14:09:01,969 DEBUG label 0:
    a = arg(0, name=a)                       ['a']
    jump 2                                   []
label 2:
    jump 4                                   []
label 4:
    $4.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$4.1']
    $4.2 = getattr(value=$4.1, attr=nditer)  ['$4.1', '$4.2']
    $4.4 = call $4.2(a, func=$4.2, args=[Var(a, arraymath.py:793)], kws=(), vararg=None) ['$4.2', '$4.4', 'a']
    $4.5 = getiter(value=$4.4)               ['$4.4', '$4.5']
    $phi14.1 = $4.5                          ['$4.5', '$phi14.1']
    jump 14                                  []
label 14:
    $14.2 = iternext(value=$phi14.1)         ['$14.2', '$phi14.1']
    $14.3 = pair_first(value=$14.2)          ['$14.2', '$14.3']
    $14.4 = pair_second(value=$14.2)         ['$14.2', '$14.4']
    $phi16.1 = $14.3                         ['$14.3', '$phi16.1']
    $phi32.1 = $14.3                         ['$14.3', '$phi32.1']
    $phi32.2 = $phi14.1                      ['$phi14.1', '$phi32.2']
    branch $14.4, 16, 32                     ['$14.4']
label 16:
    v = $phi16.1                             ['$phi16.1', 'v']
    $16.3 = getattr(value=v, attr=item)      ['$16.3', 'v']
    $16.4 = call $16.3(func=$16.3, args=[], kws=(), vararg=None) ['$16.3', '$16.4']
    bool24 = global(bool: <class 'bool'>)    ['bool24']
    $24pred = call bool24($16.4, func=bool24, args=(Var($16.4, arraymath.py:794),), kws=(), vararg=None) ['$16.4', '$24pred', 'bool24']
    branch $24pred, 26, 14                   ['$24pred']
label 26:
    $const26.1 = const(bool, True)           ['$const26.1']
    $26.2 = cast(value=$const26.1)           ['$26.2', '$const26.1']
    return $26.2                             ['$26.2']
label 32:
    jump 34                                  []
label 34:
    $const34.1 = const(bool, False)          ['$const34.1']
    $34.2 = cast(value=$const34.1)           ['$34.2', '$const34.1']
    return $34.2                             ['$34.2']

2022-01-24 14:09:01,978 DEBUG ==== SSA block analysis pass on 0
2022-01-24 14:09:01,978 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb670f60>
2022-01-24 14:09:01,978 DEBUG on stmt: a = arg(0, name=a)
2022-01-24 14:09:01,978 DEBUG on stmt: jump 2
2022-01-24 14:09:01,978 DEBUG ==== SSA block analysis pass on 2
2022-01-24 14:09:01,978 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb670f60>
2022-01-24 14:09:01,978 DEBUG on stmt: jump 4
2022-01-24 14:09:01,978 DEBUG ==== SSA block analysis pass on 4
2022-01-24 14:09:01,978 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb670f60>
2022-01-24 14:09:01,978 DEBUG on stmt: $4.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:09:01,978 DEBUG on stmt: $4.2 = getattr(value=$4.1, attr=nditer)
2022-01-24 14:09:01,978 DEBUG on stmt: $4.4 = call $4.2(a, func=$4.2, args=[Var(a, arraymath.py:793)], kws=(), vararg=None)
2022-01-24 14:09:01,978 DEBUG on stmt: $4.5 = getiter(value=$4.4)
2022-01-24 14:09:01,978 DEBUG on stmt: $phi14.1 = $4.5
2022-01-24 14:09:01,979 DEBUG on stmt: jump 14
2022-01-24 14:09:01,979 DEBUG ==== SSA block analysis pass on 14
2022-01-24 14:09:01,979 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb670f60>
2022-01-24 14:09:01,979 DEBUG on stmt: $14.2 = iternext(value=$phi14.1)
2022-01-24 14:09:01,979 DEBUG on stmt: $14.3 = pair_first(value=$14.2)
2022-01-24 14:09:01,979 DEBUG on stmt: $14.4 = pair_second(value=$14.2)
2022-01-24 14:09:01,979 DEBUG on stmt: $phi16.1 = $14.3
2022-01-24 14:09:01,979 DEBUG on stmt: $phi32.1 = $14.3
2022-01-24 14:09:01,979 DEBUG on stmt: $phi32.2 = $phi14.1
2022-01-24 14:09:01,979 DEBUG on stmt: branch $14.4, 16, 32
2022-01-24 14:09:01,979 DEBUG ==== SSA block analysis pass on 16
2022-01-24 14:09:01,979 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb670f60>
2022-01-24 14:09:01,979 DEBUG on stmt: v = $phi16.1
2022-01-24 14:09:01,979 DEBUG on stmt: $16.3 = getattr(value=v, attr=item)
2022-01-24 14:09:01,979 DEBUG on stmt: $16.4 = call $16.3(func=$16.3, args=[], kws=(), vararg=None)
2022-01-24 14:09:01,979 DEBUG on stmt: bool24 = global(bool: <class 'bool'>)
2022-01-24 14:09:01,979 DEBUG on stmt: $24pred = call bool24($16.4, func=bool24, args=(Var($16.4, arraymath.py:794),), kws=(), vararg=None)
2022-01-24 14:09:01,979 DEBUG on stmt: branch $24pred, 26, 14
2022-01-24 14:09:01,979 DEBUG ==== SSA block analysis pass on 26
2022-01-24 14:09:01,980 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb670f60>
2022-01-24 14:09:01,980 DEBUG on stmt: $const26.1 = const(bool, True)
2022-01-24 14:09:01,980 DEBUG on stmt: $26.2 = cast(value=$const26.1)
2022-01-24 14:09:01,980 DEBUG on stmt: return $26.2
2022-01-24 14:09:01,980 DEBUG ==== SSA block analysis pass on 32
2022-01-24 14:09:01,980 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb670f60>
2022-01-24 14:09:01,980 DEBUG on stmt: jump 34
2022-01-24 14:09:01,980 DEBUG ==== SSA block analysis pass on 34
2022-01-24 14:09:01,980 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb670f60>
2022-01-24 14:09:01,980 DEBUG on stmt: $const34.1 = const(bool, False)
2022-01-24 14:09:01,980 DEBUG on stmt: $34.2 = cast(value=$const34.1)
2022-01-24 14:09:01,980 DEBUG on stmt: return $34.2
2022-01-24 14:09:01,980 DEBUG defs defaultdict(<class 'list'>,
            {'$14.2': [<numba.core.ir.Assign object at 0x7f94eb670470>],
             '$14.3': [<numba.core.ir.Assign object at 0x7f94eb670d68>],
             '$14.4': [<numba.core.ir.Assign object at 0x7f94eb670860>],
             '$16.3': [<numba.core.ir.Assign object at 0x7f94eb6700b8>],
             '$16.4': [<numba.core.ir.Assign object at 0x7f94eb6700f0>],
             '$24pred': [<numba.core.ir.Assign object at 0x7f94eb670278>],
             '$26.2': [<numba.core.ir.Assign object at 0x7f94eb670f28>],
             '$34.2': [<numba.core.ir.Assign object at 0x7f94eb670390>],
             '$4.1': [<numba.core.ir.Assign object at 0x7f94eb5d22e8>],
             '$4.2': [<numba.core.ir.Assign object at 0x7f94eb5d2ac8>],
             '$4.4': [<numba.core.ir.Assign object at 0x7f94eb5d2cf8>],
             '$4.5': [<numba.core.ir.Assign object at 0x7f94eb5d26a0>],
             '$const26.1': [<numba.core.ir.Assign object at 0x7f94eb670b38>],
             '$const34.1': [<numba.core.ir.Assign object at 0x7f94eb670400>],
             '$phi14.1': [<numba.core.ir.Assign object at 0x7f94eb5d2c88>],
             '$phi16.1': [<numba.core.ir.Assign object at 0x7f94eb670a58>],
             '$phi32.1': [<numba.core.ir.Assign object at 0x7f94eb670550>],
             '$phi32.2': [<numba.core.ir.Assign object at 0x7f94eb6709e8>],
             'a': [<numba.core.ir.Assign object at 0x7f94eb5d2518>],
             'bool24': [<numba.core.ir.Assign object at 0x7f94eb670ba8>],
             'v': [<numba.core.ir.Assign object at 0x7f94eb6707b8>]})
2022-01-24 14:09:01,980 DEBUG SSA violators set()
2022-01-24 14:09:01,996 DEBUG label 0:
    shape = arg(0, name=shape)               ['shape']
    main_shape = arg(1, name=main_shape)     ['main_shape']
    $0.1 = global(len: <built-in function len>) ['$0.1']
    n = call $0.1(shape, func=$0.1, args=[Var(shape, arrayobj.py:2716)], kws=(), vararg=None) ['$0.1', 'n', 'shape']
    jump 10                                  []
label 10:
    jump 12                                  []
label 12:
    $12.1 = global(range: <class 'range'>)   ['$12.1']
    $12.3 = call $12.1(n, func=$12.1, args=[Var(n, arrayobj.py:2716)], kws=(), vararg=None) ['$12.1', '$12.3', 'n']
    $12.4 = getiter(value=$12.3)             ['$12.3', '$12.4']
    $phi20.1 = $12.4                         ['$12.4', '$phi20.1']
    jump 20                                  []
label 20:
    $20.2 = iternext(value=$phi20.1)         ['$20.2', '$phi20.1']
    $20.3 = pair_first(value=$20.2)          ['$20.2', '$20.3']
    $20.4 = pair_second(value=$20.2)         ['$20.2', '$20.4']
    $phi22.1 = $20.3                         ['$20.3', '$phi22.1']
    $phi62.1 = $20.3                         ['$20.3', '$phi62.1']
    $phi62.2 = $phi20.1                      ['$phi20.1', '$phi62.2']
    branch $20.4, 22, 62                     ['$20.4']
label 22:
    i = $phi22.1                             ['$phi22.1', 'i']
    $22.4 = getitem(value=shape, index=i, fn=<built-in function getitem>) ['$22.4', 'i', 'shape']
    $22.6 = global(len: <built-in function len>) ['$22.6']
    $22.8 = call $22.6(main_shape, func=$22.6, args=[Var(main_shape, arrayobj.py:2716)], kws=(), vararg=None) ['$22.6', '$22.8', 'main_shape']
    $22.10 = $22.8 - n                       ['$22.10', '$22.8', 'n']
    $22.12 = $22.10 + i                      ['$22.10', '$22.12', 'i']
    $22.13 = getitem(value=main_shape, index=$22.12, fn=<built-in function getitem>) ['$22.12', '$22.13', 'main_shape']
    $22.14 = $22.4 != $22.13                 ['$22.13', '$22.14', '$22.4']
    bool50 = global(bool: <class 'bool'>)    ['bool50']
    $50pred = call bool50($22.14, func=bool50, args=(Var($22.14, arrayobj.py:2718),), kws=(), vararg=None) ['$22.14', '$50pred', 'bool50']
    branch $50pred, 52, 20                   ['$50pred']
label 52:
    $52.1 = global(ValueError: <class 'ValueError'>) ['$52.1']
    $const52.2 = const(str, nditer(): operands could not be broadcast together) ['$const52.2']
    $52.3 = call $52.1($const52.2, func=$52.1, args=[Var($const52.2, arrayobj.py:2719)], kws=(), vararg=None) ['$52.1', '$52.3', '$const52.2']
    raise $52.3                              ['$52.3']
label 62:
    jump 64                                  []
label 64:
    $const64.1 = const(NoneType, None)       ['$const64.1']
    $64.2 = cast(value=$const64.1)           ['$64.2', '$const64.1']
    return $64.2                             ['$64.2']

2022-01-24 14:09:02,006 DEBUG ==== SSA block analysis pass on 0
2022-01-24 14:09:02,006 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ec0ed940>
2022-01-24 14:09:02,006 DEBUG on stmt: shape = arg(0, name=shape)
2022-01-24 14:09:02,006 DEBUG on stmt: main_shape = arg(1, name=main_shape)
2022-01-24 14:09:02,006 DEBUG on stmt: $0.1 = global(len: <built-in function len>)
2022-01-24 14:09:02,006 DEBUG on stmt: n = const(int, 1)
2022-01-24 14:09:02,006 DEBUG on stmt: jump 10
2022-01-24 14:09:02,006 DEBUG ==== SSA block analysis pass on 10
2022-01-24 14:09:02,006 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ec0ed940>
2022-01-24 14:09:02,006 DEBUG on stmt: jump 12
2022-01-24 14:09:02,006 DEBUG ==== SSA block analysis pass on 12
2022-01-24 14:09:02,006 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ec0ed940>
2022-01-24 14:09:02,007 DEBUG on stmt: $12.1 = global(range: <class 'range'>)
2022-01-24 14:09:02,007 DEBUG on stmt: $12.3 = call $12.1(n, func=$12.1, args=[Var(n, arrayobj.py:2716)], kws=(), vararg=None)
2022-01-24 14:09:02,007 DEBUG on stmt: $12.4 = getiter(value=$12.3)
2022-01-24 14:09:02,007 DEBUG on stmt: $phi20.1 = $12.4
2022-01-24 14:09:02,007 DEBUG on stmt: jump 20
2022-01-24 14:09:02,007 DEBUG ==== SSA block analysis pass on 20
2022-01-24 14:09:02,007 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ec0ed940>
2022-01-24 14:09:02,007 DEBUG on stmt: $20.2 = iternext(value=$phi20.1)
2022-01-24 14:09:02,007 DEBUG on stmt: $20.3 = pair_first(value=$20.2)
2022-01-24 14:09:02,007 DEBUG on stmt: $20.4 = pair_second(value=$20.2)
2022-01-24 14:09:02,007 DEBUG on stmt: $phi22.1 = $20.3
2022-01-24 14:09:02,007 DEBUG on stmt: $phi62.1 = $20.3
2022-01-24 14:09:02,007 DEBUG on stmt: $phi62.2 = $phi20.1
2022-01-24 14:09:02,007 DEBUG on stmt: branch $20.4, 22, 62
2022-01-24 14:09:02,007 DEBUG ==== SSA block analysis pass on 22
2022-01-24 14:09:02,007 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ec0ed940>
2022-01-24 14:09:02,007 DEBUG on stmt: i = $phi22.1
2022-01-24 14:09:02,007 DEBUG on stmt: $22.4 = getitem(value=shape, index=i, fn=<built-in function getitem>)
2022-01-24 14:09:02,007 DEBUG on stmt: $22.6 = global(len: <built-in function len>)
2022-01-24 14:09:02,007 DEBUG on stmt: $22.8 = const(int, 1)
2022-01-24 14:09:02,007 DEBUG on stmt: $22.10 = $22.8 - n
2022-01-24 14:09:02,007 DEBUG on stmt: $22.12 = $22.10 + i
2022-01-24 14:09:02,007 DEBUG on stmt: $22.13 = getitem(value=main_shape, index=$22.12, fn=<built-in function getitem>)
2022-01-24 14:09:02,007 DEBUG on stmt: $22.14 = $22.4 != $22.13
2022-01-24 14:09:02,007 DEBUG on stmt: bool50 = global(bool: <class 'bool'>)
2022-01-24 14:09:02,007 DEBUG on stmt: $50pred = call bool50($22.14, func=bool50, args=(Var($22.14, arrayobj.py:2718),), kws=(), vararg=None)
2022-01-24 14:09:02,007 DEBUG on stmt: branch $50pred, 52, 20
2022-01-24 14:09:02,008 DEBUG ==== SSA block analysis pass on 52
2022-01-24 14:09:02,008 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ec0ed940>
2022-01-24 14:09:02,008 DEBUG on stmt: $52.1 = global(ValueError: <class 'ValueError'>)
2022-01-24 14:09:02,008 DEBUG on stmt: $const52.2 = const(str, nditer(): operands could not be broadcast together)
2022-01-24 14:09:02,008 DEBUG on stmt: $52.3 = call $52.1($const52.2, func=$52.1, args=[Var($const52.2, arrayobj.py:2719)], kws=(), vararg=None)
2022-01-24 14:09:02,008 DEBUG on stmt: <static> raise <class 'ValueError'>('nditer(): operands could not be broadcast together')
2022-01-24 14:09:02,008 DEBUG ==== SSA block analysis pass on 62
2022-01-24 14:09:02,008 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ec0ed940>
2022-01-24 14:09:02,008 DEBUG on stmt: jump 64
2022-01-24 14:09:02,008 DEBUG ==== SSA block analysis pass on 64
2022-01-24 14:09:02,008 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ec0ed940>
2022-01-24 14:09:02,008 DEBUG on stmt: $const64.1 = const(NoneType, None)
2022-01-24 14:09:02,008 DEBUG on stmt: $64.2 = cast(value=$const64.1)
2022-01-24 14:09:02,008 DEBUG on stmt: return $64.2
2022-01-24 14:09:02,008 DEBUG defs defaultdict(<class 'list'>,
            {'$0.1': [<numba.core.ir.Assign object at 0x7f94ec0edcf8>],
             '$12.1': [<numba.core.ir.Assign object at 0x7f94ec0ed978>],
             '$12.3': [<numba.core.ir.Assign object at 0x7f94eb64b710>],
             '$12.4': [<numba.core.ir.Assign object at 0x7f94eb64b978>],
             '$20.2': [<numba.core.ir.Assign object at 0x7f94eb64b630>],
             '$20.3': [<numba.core.ir.Assign object at 0x7f94eb64b278>],
             '$20.4': [<numba.core.ir.Assign object at 0x7f94eb64b208>],
             '$22.10': [<numba.core.ir.Assign object at 0x7f94ec6672e8>],
             '$22.12': [<numba.core.ir.Assign object at 0x7f94ec25b0f0>],
             '$22.13': [<numba.core.ir.Assign object at 0x7f94eb70d828>],
             '$22.14': [<numba.core.ir.Assign object at 0x7f94eb70dd30>],
             '$22.4': [<numba.core.ir.Assign object at 0x7f94eb64b128>],
             '$22.6': [<numba.core.ir.Assign object at 0x7f94ec667c18>],
             '$22.8': [<numba.core.ir.Assign object at 0x7f94ec667908>],
             '$50pred': [<numba.core.ir.Assign object at 0x7f94eb66dc18>],
             '$52.1': [<numba.core.ir.Assign object at 0x7f94eb64b748>],
             '$52.3': [<numba.core.ir.Assign object at 0x7f94eb66dba8>],
             '$64.2': [<numba.core.ir.Assign object at 0x7f94ec0a94a8>],
             '$const52.2': [<numba.core.ir.Assign object at 0x7f94eb66d1d0>],
             '$const64.1': [<numba.core.ir.Assign object at 0x7f94ec58d080>],
             '$phi20.1': [<numba.core.ir.Assign object at 0x7f94eb64b048>],
             '$phi22.1': [<numba.core.ir.Assign object at 0x7f94eb64b3c8>],
             '$phi62.1': [<numba.core.ir.Assign object at 0x7f94eb64b2e8>],
             '$phi62.2': [<numba.core.ir.Assign object at 0x7f94eb64b358>],
             'bool50': [<numba.core.ir.Assign object at 0x7f94eb66df28>],
             'i': [<numba.core.ir.Assign object at 0x7f94eb64b160>],
             'main_shape': [<numba.core.ir.Assign object at 0x7f94ec0edac8>],
             'n': [<numba.core.ir.Assign object at 0x7f94ec0edba8>],
             'shape': [<numba.core.ir.Assign object at 0x7f94ec0edf60>]})
2022-01-24 14:09:02,008 DEBUG SSA violators set()
2022-01-24 14:09:02,125 DEBUG label 0:
    _0_14_1 = arg(0, name=_0_14_1)           ['_0_14_1']
    _0_8_1 = arg(1, name=_0_8_1)             ['_0_8_1']
    $0.3 = _0_8_1 != _0_14_1                 ['$0.3', '_0_14_1', '_0_8_1']
    $0.4 = cast(value=$0.3)                  ['$0.3', '$0.4']
    return $0.4                              ['$0.4']

2022-01-24 14:09:02,126 DEBUG ==== SSA block analysis pass on 0
2022-01-24 14:09:02,126 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ec3ddb38>
2022-01-24 14:09:02,126 DEBUG on stmt: _0_14_1 = arg(0, name=_0_14_1)
2022-01-24 14:09:02,126 DEBUG on stmt: _0_8_1 = arg(1, name=_0_8_1)
2022-01-24 14:09:02,126 DEBUG on stmt: $0.3 = _0_8_1 != _0_14_1
2022-01-24 14:09:02,126 DEBUG on stmt: $0.4 = cast(value=$0.3)
2022-01-24 14:09:02,126 DEBUG on stmt: return $0.4
2022-01-24 14:09:02,126 DEBUG defs defaultdict(<class 'list'>,
            {'$0.3': [<numba.core.ir.Assign object at 0x7f94ec3ddf28>],
             '$0.4': [<numba.core.ir.Assign object at 0x7f94ec3dddd8>],
             '_0_14_1': [<numba.core.ir.Assign object at 0x7f94ec3dd048>],
             '_0_8_1': [<numba.core.ir.Assign object at 0x7f94ec3dd860>]})
2022-01-24 14:09:02,126 DEBUG SSA violators set()
2022-01-24 14:09:02,321 DEBUG label 0:
    q1 = arg(0, name=q1)                     ['q1']
    q2 = arg(1, name=q2)                     ['q2']
    bout = arg(2, name=bout)                 ['bout']
    $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$0.1']
    $0.2 = getattr(value=$0.1, attr=all)     ['$0.1', '$0.2']
    $const0.4 = const(NoneType, None)        ['$const0.4']
    $const0.5 = const(NoneType, None)        ['$const0.5']
    $0.6 = global(slice: <class 'slice'>)    ['$0.6']
    $0.7 = call $0.6($const0.4, $const0.5, func=$0.6, args=(Var($const0.4, algebra.py:394), Var($const0.5, algebra.py:394)), kws=(), vararg=None) ['$0.6', '$0.7', '$const0.4', '$const0.5']
    $0.8 = getitem(value=q1, index=$0.7, fn=<built-in function getitem>) ['$0.7', '$0.8', 'q1']
    $const0.10 = const(NoneType, None)       ['$const0.10']
    $const0.11 = const(NoneType, None)       ['$const0.11']
    $0.12 = global(slice: <class 'slice'>)   ['$0.12']
    $0.13 = call $0.12($const0.10, $const0.11, func=$0.12, args=(Var($const0.10, algebra.py:394), Var($const0.11, algebra.py:394)), kws=(), vararg=None) ['$0.12', '$0.13', '$const0.10', '$const0.11']
    $0.14 = getitem(value=q2, index=$0.13, fn=<built-in function getitem>) ['$0.13', '$0.14', 'q2']
    $0.15 = $0.8 == $0.14                    ['$0.14', '$0.15', '$0.8']
    $0.16 = call $0.2($0.15, func=$0.2, args=[Var($0.15, algebra.py:394)], kws=(), vararg=None) ['$0.15', '$0.16', '$0.2']
    $const0.18 = const(int, 0)               ['$const0.18']
    bout[$const0.18] = $0.16                 ['$0.16', '$const0.18', 'bout']
    $const0.19 = const(NoneType, None)       ['$const0.19']
    $0.20 = cast(value=$const0.19)           ['$0.20', '$const0.19']
    return $0.20                             ['$0.20']

2022-01-24 14:09:02,325 DEBUG ==== SSA block analysis pass on 0
2022-01-24 14:09:02,325 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ecafc978>
2022-01-24 14:09:02,325 DEBUG on stmt: q1 = arg(0, name=q1)
2022-01-24 14:09:02,325 DEBUG on stmt: q2 = arg(1, name=q2)
2022-01-24 14:09:02,325 DEBUG on stmt: bout = arg(2, name=bout)
2022-01-24 14:09:02,325 DEBUG on stmt: $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:09:02,325 DEBUG on stmt: $0.2 = getattr(value=$0.1, attr=all)
2022-01-24 14:09:02,325 DEBUG on stmt: $const0.4 = const(NoneType, None)
2022-01-24 14:09:02,325 DEBUG on stmt: $const0.5 = const(NoneType, None)
2022-01-24 14:09:02,325 DEBUG on stmt: $0.6 = global(slice: <class 'slice'>)
2022-01-24 14:09:02,325 DEBUG on stmt: $0.7 = call $0.6($const0.4, $const0.5, func=$0.6, args=(Var($const0.4, algebra.py:394), Var($const0.5, algebra.py:394)), kws=(), vararg=None)
2022-01-24 14:09:02,325 DEBUG on stmt: $0.8 = static_getitem(value=q1, index=slice(None, None, None), index_var=$0.7, fn=<built-in function getitem>)
2022-01-24 14:09:02,326 DEBUG on stmt: $const0.10 = const(NoneType, None)
2022-01-24 14:09:02,326 DEBUG on stmt: $const0.11 = const(NoneType, None)
2022-01-24 14:09:02,326 DEBUG on stmt: $0.12 = global(slice: <class 'slice'>)
2022-01-24 14:09:02,326 DEBUG on stmt: $0.13 = call $0.12($const0.10, $const0.11, func=$0.12, args=(Var($const0.10, algebra.py:394), Var($const0.11, algebra.py:394)), kws=(), vararg=None)
2022-01-24 14:09:02,326 DEBUG on stmt: $0.14 = static_getitem(value=q2, index=slice(None, None, None), index_var=$0.13, fn=<built-in function getitem>)
2022-01-24 14:09:02,326 DEBUG on stmt: $0.15 = $0.8 == $0.14
2022-01-24 14:09:02,326 DEBUG on stmt: $0.16 = call $0.2($0.15, func=$0.2, args=[Var($0.15, algebra.py:394)], kws=(), vararg=None)
2022-01-24 14:09:02,326 DEBUG on stmt: $const0.18 = const(int, 0)
2022-01-24 14:09:02,326 DEBUG on stmt: bout[0] = $0.16
2022-01-24 14:09:02,326 DEBUG on stmt: $const0.19 = const(NoneType, None)
2022-01-24 14:09:02,326 DEBUG on stmt: $0.20 = cast(value=$const0.19)
2022-01-24 14:09:02,326 DEBUG on stmt: return $0.20
2022-01-24 14:09:02,326 DEBUG defs defaultdict(<class 'list'>,
            {'$0.1': [<numba.core.ir.Assign object at 0x7f94ecafce80>],
             '$0.12': [<numba.core.ir.Assign object at 0x7f94ecb127b8>],
             '$0.13': [<numba.core.ir.Assign object at 0x7f94ecb12860>],
             '$0.14': [<numba.core.ir.Assign object at 0x7f94ecb1b518>],
             '$0.15': [<numba.core.ir.Assign object at 0x7f94ecb12a20>],
             '$0.16': [<numba.core.ir.Assign object at 0x7f94ecb12b00>],
             '$0.2': [<numba.core.ir.Assign object at 0x7f94ecafcf60>],
             '$0.20': [<numba.core.ir.Assign object at 0x7f94ecb12eb8>],
             '$0.6': [<numba.core.ir.Assign object at 0x7f94ecb122e8>],
             '$0.7': [<numba.core.ir.Assign object at 0x7f94ecb12390>],
             '$0.8': [<numba.core.ir.Assign object at 0x7f94ecb1b5c0>],
             '$const0.10': [<numba.core.ir.Assign object at 0x7f94ecb125f8>],
             '$const0.11': [<numba.core.ir.Assign object at 0x7f94ecb126d8>],
             '$const0.18': [<numba.core.ir.Assign object at 0x7f94ecb12c88>],
             '$const0.19': [<numba.core.ir.Assign object at 0x7f94ecb12dd8>],
             '$const0.4': [<numba.core.ir.Assign object at 0x7f94ecb12128>],
             '$const0.5': [<numba.core.ir.Assign object at 0x7f94ecb12208>],
             'bout': [<numba.core.ir.Assign object at 0x7f94ecafcda0>],
             'q1': [<numba.core.ir.Assign object at 0x7f94ecafcc50>],
             'q2': [<numba.core.ir.Assign object at 0x7f94ecafccf8>]})
2022-01-24 14:09:02,326 DEBUG SSA violators set()
2022-01-24 14:09:02,332 DEBUG label 0:
    a = arg(0, name=a)                       ['a']
    jump 2                                   []
label 2:
    jump 4                                   []
label 4:
    $4.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$4.1']
    $4.2 = getattr(value=$4.1, attr=nditer)  ['$4.1', '$4.2']
    $4.4 = call $4.2(a, func=$4.2, args=[Var(a, arraymath.py:781)], kws=(), vararg=None) ['$4.2', '$4.4', 'a']
    $4.5 = getiter(value=$4.4)               ['$4.4', '$4.5']
    $phi14.1 = $4.5                          ['$4.5', '$phi14.1']
    jump 14                                  []
label 14:
    $14.2 = iternext(value=$phi14.1)         ['$14.2', '$phi14.1']
    $14.3 = pair_first(value=$14.2)          ['$14.2', '$14.3']
    $14.4 = pair_second(value=$14.2)         ['$14.2', '$14.4']
    $phi16.1 = $14.3                         ['$14.3', '$phi16.1']
    $phi32.1 = $14.3                         ['$14.3', '$phi32.1']
    $phi32.2 = $phi14.1                      ['$phi14.1', '$phi32.2']
    branch $14.4, 16, 32                     ['$14.4']
label 16:
    v = $phi16.1                             ['$phi16.1', 'v']
    $16.3 = getattr(value=v, attr=item)      ['$16.3', 'v']
    $16.4 = call $16.3(func=$16.3, args=[], kws=(), vararg=None) ['$16.3', '$16.4']
    bool24 = global(bool: <class 'bool'>)    ['bool24']
    $24pred = call bool24($16.4, func=bool24, args=(Var($16.4, arraymath.py:782),), kws=(), vararg=None) ['$16.4', '$24pred', 'bool24']
    branch $24pred, 14, 26                   ['$24pred']
label 26:
    $const26.1 = const(bool, False)          ['$const26.1']
    $26.2 = cast(value=$const26.1)           ['$26.2', '$const26.1']
    return $26.2                             ['$26.2']
label 32:
    jump 34                                  []
label 34:
    $const34.1 = const(bool, True)           ['$const34.1']
    $34.2 = cast(value=$const34.1)           ['$34.2', '$const34.1']
    return $34.2                             ['$34.2']

2022-01-24 14:09:02,339 DEBUG ==== SSA block analysis pass on 0
2022-01-24 14:09:02,339 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ecb0f7f0>
2022-01-24 14:09:02,339 DEBUG on stmt: a = arg(0, name=a)
2022-01-24 14:09:02,339 DEBUG on stmt: jump 2
2022-01-24 14:09:02,339 DEBUG ==== SSA block analysis pass on 2
2022-01-24 14:09:02,339 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ecb0f7f0>
2022-01-24 14:09:02,339 DEBUG on stmt: jump 4
2022-01-24 14:09:02,339 DEBUG ==== SSA block analysis pass on 4
2022-01-24 14:09:02,339 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ecb0f7f0>
2022-01-24 14:09:02,339 DEBUG on stmt: $4.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:09:02,339 DEBUG on stmt: $4.2 = getattr(value=$4.1, attr=nditer)
2022-01-24 14:09:02,339 DEBUG on stmt: $4.4 = call $4.2(a, func=$4.2, args=[Var(a, arraymath.py:781)], kws=(), vararg=None)
2022-01-24 14:09:02,339 DEBUG on stmt: $4.5 = getiter(value=$4.4)
2022-01-24 14:09:02,339 DEBUG on stmt: $phi14.1 = $4.5
2022-01-24 14:09:02,339 DEBUG on stmt: jump 14
2022-01-24 14:09:02,339 DEBUG ==== SSA block analysis pass on 14
2022-01-24 14:09:02,339 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ecb0f7f0>
2022-01-24 14:09:02,339 DEBUG on stmt: $14.2 = iternext(value=$phi14.1)
2022-01-24 14:09:02,339 DEBUG on stmt: $14.3 = pair_first(value=$14.2)
2022-01-24 14:09:02,339 DEBUG on stmt: $14.4 = pair_second(value=$14.2)
2022-01-24 14:09:02,339 DEBUG on stmt: $phi16.1 = $14.3
2022-01-24 14:09:02,339 DEBUG on stmt: $phi32.1 = $14.3
2022-01-24 14:09:02,339 DEBUG on stmt: $phi32.2 = $phi14.1
2022-01-24 14:09:02,339 DEBUG on stmt: branch $14.4, 16, 32
2022-01-24 14:09:02,339 DEBUG ==== SSA block analysis pass on 16
2022-01-24 14:09:02,340 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ecb0f7f0>
2022-01-24 14:09:02,340 DEBUG on stmt: v = $phi16.1
2022-01-24 14:09:02,340 DEBUG on stmt: $16.3 = getattr(value=v, attr=item)
2022-01-24 14:09:02,340 DEBUG on stmt: $16.4 = call $16.3(func=$16.3, args=[], kws=(), vararg=None)
2022-01-24 14:09:02,340 DEBUG on stmt: bool24 = global(bool: <class 'bool'>)
2022-01-24 14:09:02,340 DEBUG on stmt: $24pred = call bool24($16.4, func=bool24, args=(Var($16.4, arraymath.py:782),), kws=(), vararg=None)
2022-01-24 14:09:02,340 DEBUG on stmt: branch $24pred, 14, 26
2022-01-24 14:09:02,340 DEBUG ==== SSA block analysis pass on 26
2022-01-24 14:09:02,340 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ecb0f7f0>
2022-01-24 14:09:02,340 DEBUG on stmt: $const26.1 = const(bool, False)
2022-01-24 14:09:02,340 DEBUG on stmt: $26.2 = cast(value=$const26.1)
2022-01-24 14:09:02,340 DEBUG on stmt: return $26.2
2022-01-24 14:09:02,340 DEBUG ==== SSA block analysis pass on 32
2022-01-24 14:09:02,340 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ecb0f7f0>
2022-01-24 14:09:02,340 DEBUG on stmt: jump 34
2022-01-24 14:09:02,340 DEBUG ==== SSA block analysis pass on 34
2022-01-24 14:09:02,340 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ecb0f7f0>
2022-01-24 14:09:02,341 DEBUG on stmt: $const34.1 = const(bool, True)
2022-01-24 14:09:02,341 DEBUG on stmt: $34.2 = cast(value=$const34.1)
2022-01-24 14:09:02,341 DEBUG on stmt: return $34.2
2022-01-24 14:09:02,341 DEBUG defs defaultdict(<class 'list'>,
            {'$14.2': [<numba.core.ir.Assign object at 0x7f94ec4b8a90>],
             '$14.3': [<numba.core.ir.Assign object at 0x7f94ec4b8b38>],
             '$14.4': [<numba.core.ir.Assign object at 0x7f94ec4b8be0>],
             '$16.3': [<numba.core.ir.Assign object at 0x7f94ec4eb400>],
             '$16.4': [<numba.core.ir.Assign object at 0x7f94ec4ebb00>],
             '$24pred': [<numba.core.ir.Assign object at 0x7f94ec4ebd30>],
             '$26.2': [<numba.core.ir.Assign object at 0x7f94ec4eb6a0>],
             '$34.2': [<numba.core.ir.Assign object at 0x7f94ec4ebbe0>],
             '$4.1': [<numba.core.ir.Assign object at 0x7f94ec4b8588>],
             '$4.2': [<numba.core.ir.Assign object at 0x7f94ec4b8668>],
             '$4.4': [<numba.core.ir.Assign object at 0x7f94ec4b87f0>],
             '$4.5': [<numba.core.ir.Assign object at 0x7f94ec4b88d0>],
             '$const26.1': [<numba.core.ir.Assign object at 0x7f94ec4eb940>],
             '$const34.1': [<numba.core.ir.Assign object at 0x7f94ec4ebc18>],
             '$phi14.1': [<numba.core.ir.Assign object at 0x7f94ec4b83c8>],
             '$phi16.1': [<numba.core.ir.Assign object at 0x7f94ec4b8c50>],
             '$phi32.1': [<numba.core.ir.Assign object at 0x7f94ec4b8cc0>],
             '$phi32.2': [<numba.core.ir.Assign object at 0x7f94ec4b8d30>],
             'a': [<numba.core.ir.Assign object at 0x7f94ec4b8320>],
             'bool24': [<numba.core.ir.Assign object at 0x7f94ec4ebeb8>],
             'v': [<numba.core.ir.Assign object at 0x7f94ec4b8e80>]})
2022-01-24 14:09:02,341 DEBUG SSA violators set()
2022-01-24 14:09:02,427 DEBUG label 0:
    _0_14_1 = arg(0, name=_0_14_1)           ['_0_14_1']
    _0_8_1 = arg(1, name=_0_8_1)             ['_0_8_1']
    $0.3 = _0_8_1 == _0_14_1                 ['$0.3', '_0_14_1', '_0_8_1']
    $0.4 = cast(value=$0.3)                  ['$0.3', '$0.4']
    return $0.4                              ['$0.4']

2022-01-24 14:09:02,429 DEBUG ==== SSA block analysis pass on 0
2022-01-24 14:09:02,429 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb62de48>
2022-01-24 14:09:02,429 DEBUG on stmt: _0_14_1 = arg(0, name=_0_14_1)
2022-01-24 14:09:02,429 DEBUG on stmt: _0_8_1 = arg(1, name=_0_8_1)
2022-01-24 14:09:02,429 DEBUG on stmt: $0.3 = _0_8_1 == _0_14_1
2022-01-24 14:09:02,429 DEBUG on stmt: $0.4 = cast(value=$0.3)
2022-01-24 14:09:02,429 DEBUG on stmt: return $0.4
2022-01-24 14:09:02,429 DEBUG defs defaultdict(<class 'list'>,
            {'$0.3': [<numba.core.ir.Assign object at 0x7f94ecb157b8>],
             '$0.4': [<numba.core.ir.Assign object at 0x7f94ecb15518>],
             '_0_14_1': [<numba.core.ir.Assign object at 0x7f94ecb15438>],
             '_0_8_1': [<numba.core.ir.Assign object at 0x7f94ecb15550>]})
2022-01-24 14:09:02,429 DEBUG SSA violators set()
2022-01-24 14:09:02,607 DEBUG label 0:
    q1 = arg(0, name=q1)                     ['q1']
    q2 = arg(1, name=q2)                     ['q2']
    bout = arg(2, name=bout)                 ['bout']
    $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$0.1']
    $0.2 = getattr(value=$0.1, attr=any)     ['$0.1', '$0.2']
    $const0.4 = const(NoneType, None)        ['$const0.4']
    $const0.5 = const(NoneType, None)        ['$const0.5']
    $0.6 = global(slice: <class 'slice'>)    ['$0.6']
    $0.7 = call $0.6($const0.4, $const0.5, func=$0.6, args=(Var($const0.4, algebra.py:399), Var($const0.5, algebra.py:399)), kws=(), vararg=None) ['$0.6', '$0.7', '$const0.4', '$const0.5']
    $0.8 = getitem(value=q1, index=$0.7, fn=<built-in function getitem>) ['$0.7', '$0.8', 'q1']
    $0.9 = call $0.2($0.8, func=$0.2, args=[Var($0.8, algebra.py:399)], kws=(), vararg=None) ['$0.2', '$0.8', '$0.9']
    bool18 = global(bool: <class 'bool'>)    ['bool18']
    $18pred = call bool18($0.9, func=bool18, args=(Var($0.9, algebra.py:399),), kws=(), vararg=None) ['$0.9', '$18pred', 'bool18']
    $phi36.3 = $0.9                          ['$0.9', '$phi36.3']
    branch $18pred, 20, 36                   ['$18pred']
label 20:
    $20.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$20.1']
    $20.2 = getattr(value=$20.1, attr=any)   ['$20.1', '$20.2']
    $const20.4 = const(NoneType, None)       ['$const20.4']
    $const20.5 = const(NoneType, None)       ['$const20.5']
    $20.6 = global(slice: <class 'slice'>)   ['$20.6']
    $20.7 = call $20.6($const20.4, $const20.5, func=$20.6, args=(Var($const20.4, algebra.py:399), Var($const20.5, algebra.py:399)), kws=(), vararg=None) ['$20.6', '$20.7', '$const20.4', '$const20.5']
    $20.8 = getitem(value=q2, index=$20.7, fn=<built-in function getitem>) ['$20.7', '$20.8', 'q2']
    $20.9 = call $20.2($20.8, func=$20.2, args=[Var($20.8, algebra.py:399)], kws=(), vararg=None) ['$20.2', '$20.8', '$20.9']
    $phi36.3 = $20.9                         ['$20.9', '$phi36.3']
    jump 36                                  []
label 36:
    $const36.2 = const(int, 0)               ['$const36.2']
    bout[$const36.2] = $phi36.3              ['$const36.2', '$phi36.3', 'bout']
    $const36.4 = const(NoneType, None)       ['$const36.4']
    $36.5 = cast(value=$const36.4)           ['$36.5', '$const36.4']
    return $36.5                             ['$36.5']

2022-01-24 14:09:02,610 DEBUG ==== SSA block analysis pass on 0
2022-01-24 14:09:02,610 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb6066a0>
2022-01-24 14:09:02,611 DEBUG on stmt: q1 = arg(0, name=q1)
2022-01-24 14:09:02,611 DEBUG on stmt: q2 = arg(1, name=q2)
2022-01-24 14:09:02,611 DEBUG on stmt: bout = arg(2, name=bout)
2022-01-24 14:09:02,611 DEBUG on stmt: $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:09:02,611 DEBUG on stmt: $0.2 = getattr(value=$0.1, attr=any)
2022-01-24 14:09:02,611 DEBUG on stmt: $const0.4 = const(NoneType, None)
2022-01-24 14:09:02,611 DEBUG on stmt: $const0.5 = const(NoneType, None)
2022-01-24 14:09:02,611 DEBUG on stmt: $0.6 = global(slice: <class 'slice'>)
2022-01-24 14:09:02,611 DEBUG on stmt: $0.7 = call $0.6($const0.4, $const0.5, func=$0.6, args=(Var($const0.4, algebra.py:399), Var($const0.5, algebra.py:399)), kws=(), vararg=None)
2022-01-24 14:09:02,611 DEBUG on stmt: $0.8 = static_getitem(value=q1, index=slice(None, None, None), index_var=$0.7, fn=<built-in function getitem>)
2022-01-24 14:09:02,611 DEBUG on stmt: $0.9 = call $0.2($0.8, func=$0.2, args=[Var($0.8, algebra.py:399)], kws=(), vararg=None)
2022-01-24 14:09:02,611 DEBUG on stmt: bool18 = global(bool: <class 'bool'>)
2022-01-24 14:09:02,611 DEBUG on stmt: $18pred = call bool18($0.9, func=bool18, args=(Var($0.9, algebra.py:399),), kws=(), vararg=None)
2022-01-24 14:09:02,611 DEBUG on stmt: $phi36.3 = $0.9
2022-01-24 14:09:02,611 DEBUG on stmt: branch $18pred, 20, 36
2022-01-24 14:09:02,611 DEBUG ==== SSA block analysis pass on 20
2022-01-24 14:09:02,611 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb6066a0>
2022-01-24 14:09:02,611 DEBUG on stmt: $20.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:09:02,611 DEBUG on stmt: $20.2 = getattr(value=$20.1, attr=any)
2022-01-24 14:09:02,611 DEBUG on stmt: $const20.4 = const(NoneType, None)
2022-01-24 14:09:02,611 DEBUG on stmt: $const20.5 = const(NoneType, None)
2022-01-24 14:09:02,611 DEBUG on stmt: $20.6 = global(slice: <class 'slice'>)
2022-01-24 14:09:02,611 DEBUG on stmt: $20.7 = call $20.6($const20.4, $const20.5, func=$20.6, args=(Var($const20.4, algebra.py:399), Var($const20.5, algebra.py:399)), kws=(), vararg=None)
2022-01-24 14:09:02,611 DEBUG on stmt: $20.8 = static_getitem(value=q2, index=slice(None, None, None), index_var=$20.7, fn=<built-in function getitem>)
2022-01-24 14:09:02,611 DEBUG on stmt: $20.9 = call $20.2($20.8, func=$20.2, args=[Var($20.8, algebra.py:399)], kws=(), vararg=None)
2022-01-24 14:09:02,611 DEBUG on stmt: $phi36.3 = $20.9
2022-01-24 14:09:02,611 DEBUG on stmt: jump 36
2022-01-24 14:09:02,611 DEBUG ==== SSA block analysis pass on 36
2022-01-24 14:09:02,612 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb6066a0>
2022-01-24 14:09:02,612 DEBUG on stmt: $const36.2 = const(int, 0)
2022-01-24 14:09:02,612 DEBUG on stmt: bout[0] = $phi36.3
2022-01-24 14:09:02,612 DEBUG on stmt: $const36.4 = const(NoneType, None)
2022-01-24 14:09:02,612 DEBUG on stmt: $36.5 = cast(value=$const36.4)
2022-01-24 14:09:02,612 DEBUG on stmt: return $36.5
2022-01-24 14:09:02,612 DEBUG defs defaultdict(<class 'list'>,
            {'$0.1': [<numba.core.ir.Assign object at 0x7f94ec85f278>],
             '$0.2': [<numba.core.ir.Assign object at 0x7f94ec85f358>],
             '$0.6': [<numba.core.ir.Assign object at 0x7f94ec85f668>],
             '$0.7': [<numba.core.ir.Assign object at 0x7f94ec85f710>],
             '$0.8': [<numba.core.ir.Assign object at 0x7f94eb606630>],
             '$0.9': [<numba.core.ir.Assign object at 0x7f94ec85f8d0>],
             '$18pred': [<numba.core.ir.Assign object at 0x7f94ec85fac8>],
             '$20.1': [<numba.core.ir.Assign object at 0x7f94ec85fc88>],
             '$20.2': [<numba.core.ir.Assign object at 0x7f94ec85fd68>],
             '$20.6': [<numba.core.ir.Assign object at 0x7f94ec85e0f0>],
             '$20.7': [<numba.core.ir.Assign object at 0x7f94ec85e198>],
             '$20.8': [<numba.core.ir.Assign object at 0x7f94eb6069e8>],
             '$20.9': [<numba.core.ir.Assign object at 0x7f94ec85e358>],
             '$36.5': [<numba.core.ir.Assign object at 0x7f94ec85e7b8>],
             '$const0.4': [<numba.core.ir.Assign object at 0x7f94ec85f4a8>],
             '$const0.5': [<numba.core.ir.Assign object at 0x7f94ec85f588>],
             '$const20.4': [<numba.core.ir.Assign object at 0x7f94ec85fef0>],
             '$const20.5': [<numba.core.ir.Assign object at 0x7f94ec85ffd0>],
             '$const36.2': [<numba.core.ir.Assign object at 0x7f94ec85e588>],
             '$const36.4': [<numba.core.ir.Assign object at 0x7f94ec85e6d8>],
             '$phi36.3': [<numba.core.ir.Assign object at 0x7f94eb606f60>,
                          <numba.core.ir.Assign object at 0x7f94ec85fe10>],
             'bool18': [<numba.core.ir.Assign object at 0x7f94ec85f9e8>],
             'bout': [<numba.core.ir.Assign object at 0x7f94ec85f198>],
             'q1': [<numba.core.ir.Assign object at 0x7f94ec85f048>],
             'q2': [<numba.core.ir.Assign object at 0x7f94ec85f0f0>]})
2022-01-24 14:09:02,612 DEBUG SSA violators {'$phi36.3'}
2022-01-24 14:09:02,612 DEBUG Fix SSA violator on var $phi36.3
2022-01-24 14:09:02,612 DEBUG ==== SSA block rewrite pass on 0
2022-01-24 14:09:02,612 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb6066a0>
2022-01-24 14:09:02,612 DEBUG on stmt: q1 = arg(0, name=q1)
2022-01-24 14:09:02,612 DEBUG on stmt: q2 = arg(1, name=q2)
2022-01-24 14:09:02,612 DEBUG on stmt: bout = arg(2, name=bout)
2022-01-24 14:09:02,612 DEBUG on stmt: $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:09:02,612 DEBUG on stmt: $0.2 = getattr(value=$0.1, attr=any)
2022-01-24 14:09:02,612 DEBUG on stmt: $const0.4 = const(NoneType, None)
2022-01-24 14:09:02,612 DEBUG on stmt: $const0.5 = const(NoneType, None)
2022-01-24 14:09:02,612 DEBUG on stmt: $0.6 = global(slice: <class 'slice'>)
2022-01-24 14:09:02,612 DEBUG on stmt: $0.7 = call $0.6($const0.4, $const0.5, func=$0.6, args=(Var($const0.4, algebra.py:399), Var($const0.5, algebra.py:399)), kws=(), vararg=None)
2022-01-24 14:09:02,612 DEBUG on stmt: $0.8 = static_getitem(value=q1, index=slice(None, None, None), index_var=$0.7, fn=<built-in function getitem>)
2022-01-24 14:09:02,612 DEBUG on stmt: $0.9 = call $0.2($0.8, func=$0.2, args=[Var($0.8, algebra.py:399)], kws=(), vararg=None)
2022-01-24 14:09:02,612 DEBUG on stmt: bool18 = global(bool: <class 'bool'>)
2022-01-24 14:09:02,613 DEBUG on stmt: $18pred = call bool18($0.9, func=bool18, args=(Var($0.9, algebra.py:399),), kws=(), vararg=None)
2022-01-24 14:09:02,613 DEBUG on stmt: $phi36.3 = $0.9
2022-01-24 14:09:02,613 DEBUG first assign: $phi36.3
2022-01-24 14:09:02,613 DEBUG replaced with: $phi36.3 = $0.9
2022-01-24 14:09:02,613 DEBUG on stmt: branch $18pred, 20, 36
2022-01-24 14:09:02,613 DEBUG ==== SSA block rewrite pass on 20
2022-01-24 14:09:02,613 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb6066a0>
2022-01-24 14:09:02,613 DEBUG on stmt: $20.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:09:02,613 DEBUG on stmt: $20.2 = getattr(value=$20.1, attr=any)
2022-01-24 14:09:02,613 DEBUG on stmt: $const20.4 = const(NoneType, None)
2022-01-24 14:09:02,613 DEBUG on stmt: $const20.5 = const(NoneType, None)
2022-01-24 14:09:02,613 DEBUG on stmt: $20.6 = global(slice: <class 'slice'>)
2022-01-24 14:09:02,613 DEBUG on stmt: $20.7 = call $20.6($const20.4, $const20.5, func=$20.6, args=(Var($const20.4, algebra.py:399), Var($const20.5, algebra.py:399)), kws=(), vararg=None)
2022-01-24 14:09:02,613 DEBUG on stmt: $20.8 = static_getitem(value=q2, index=slice(None, None, None), index_var=$20.7, fn=<built-in function getitem>)
2022-01-24 14:09:02,613 DEBUG on stmt: $20.9 = call $20.2($20.8, func=$20.2, args=[Var($20.8, algebra.py:399)], kws=(), vararg=None)
2022-01-24 14:09:02,613 DEBUG on stmt: $phi36.3 = $20.9
2022-01-24 14:09:02,613 DEBUG replaced with: $phi36.3.1 = $20.9
2022-01-24 14:09:02,613 DEBUG on stmt: jump 36
2022-01-24 14:09:02,614 DEBUG ==== SSA block rewrite pass on 36
2022-01-24 14:09:02,614 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94eb6066a0>
2022-01-24 14:09:02,614 DEBUG on stmt: $const36.2 = const(int, 0)
2022-01-24 14:09:02,614 DEBUG on stmt: bout[0] = $phi36.3
2022-01-24 14:09:02,614 DEBUG on stmt: $const36.4 = const(NoneType, None)
2022-01-24 14:09:02,614 DEBUG on stmt: $36.5 = cast(value=$const36.4)
2022-01-24 14:09:02,614 DEBUG on stmt: return $36.5
2022-01-24 14:09:02,614 DEBUG Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f94eb606ac8>],
             20: [<numba.core.ir.Assign object at 0x7f94ec85eb38>]})
2022-01-24 14:09:02,614 DEBUG ==== SSA block rewrite pass on 0
2022-01-24 14:09:02,614 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94ec85e8d0>
2022-01-24 14:09:02,614 DEBUG on stmt: q1 = arg(0, name=q1)
2022-01-24 14:09:02,614 DEBUG on stmt: q2 = arg(1, name=q2)
2022-01-24 14:09:02,614 DEBUG on stmt: bout = arg(2, name=bout)
2022-01-24 14:09:02,614 DEBUG on stmt: $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:09:02,614 DEBUG on stmt: $0.2 = getattr(value=$0.1, attr=any)
2022-01-24 14:09:02,614 DEBUG on stmt: $const0.4 = const(NoneType, None)
2022-01-24 14:09:02,614 DEBUG on stmt: $const0.5 = const(NoneType, None)
2022-01-24 14:09:02,614 DEBUG on stmt: $0.6 = global(slice: <class 'slice'>)
2022-01-24 14:09:02,614 DEBUG on stmt: $0.7 = call $0.6($const0.4, $const0.5, func=$0.6, args=(Var($const0.4, algebra.py:399), Var($const0.5, algebra.py:399)), kws=(), vararg=None)
2022-01-24 14:09:02,615 DEBUG on stmt: $0.8 = static_getitem(value=q1, index=slice(None, None, None), index_var=$0.7, fn=<built-in function getitem>)
2022-01-24 14:09:02,615 DEBUG on stmt: $0.9 = call $0.2($0.8, func=$0.2, args=[Var($0.8, algebra.py:399)], kws=(), vararg=None)
2022-01-24 14:09:02,615 DEBUG on stmt: bool18 = global(bool: <class 'bool'>)
2022-01-24 14:09:02,615 DEBUG on stmt: $18pred = call bool18($0.9, func=bool18, args=(Var($0.9, algebra.py:399),), kws=(), vararg=None)
2022-01-24 14:09:02,615 DEBUG on stmt: $phi36.3 = $0.9
2022-01-24 14:09:02,615 DEBUG on stmt: branch $18pred, 20, 36
2022-01-24 14:09:02,615 DEBUG ==== SSA block rewrite pass on 20
2022-01-24 14:09:02,615 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94ec85e8d0>
2022-01-24 14:09:02,615 DEBUG on stmt: $20.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:09:02,615 DEBUG on stmt: $20.2 = getattr(value=$20.1, attr=any)
2022-01-24 14:09:02,615 DEBUG on stmt: $const20.4 = const(NoneType, None)
2022-01-24 14:09:02,615 DEBUG on stmt: $const20.5 = const(NoneType, None)
2022-01-24 14:09:02,615 DEBUG on stmt: $20.6 = global(slice: <class 'slice'>)
2022-01-24 14:09:02,615 DEBUG on stmt: $20.7 = call $20.6($const20.4, $const20.5, func=$20.6, args=(Var($const20.4, algebra.py:399), Var($const20.5, algebra.py:399)), kws=(), vararg=None)
2022-01-24 14:09:02,615 DEBUG on stmt: $20.8 = static_getitem(value=q2, index=slice(None, None, None), index_var=$20.7, fn=<built-in function getitem>)
2022-01-24 14:09:02,615 DEBUG on stmt: $20.9 = call $20.2($20.8, func=$20.2, args=[Var($20.8, algebra.py:399)], kws=(), vararg=None)
2022-01-24 14:09:02,615 DEBUG on stmt: $phi36.3.1 = $20.9
2022-01-24 14:09:02,615 DEBUG on stmt: jump 36
2022-01-24 14:09:02,615 DEBUG ==== SSA block rewrite pass on 36
2022-01-24 14:09:02,615 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94ec85e8d0>
2022-01-24 14:09:02,615 DEBUG on stmt: $const36.2 = const(int, 0)
2022-01-24 14:09:02,615 DEBUG on stmt: bout[0] = $phi36.3
2022-01-24 14:09:02,615 DEBUG find_def var='$phi36.3' stmt=bout[0] = $phi36.3
2022-01-24 14:09:02,615 DEBUG find_def_from_top label 36
2022-01-24 14:09:02,615 DEBUG insert phi node $phi36.3.2 = phi(incoming_values=[], incoming_blocks=[]) at 36
2022-01-24 14:09:02,615 DEBUG find_def_from_bottom label 0
2022-01-24 14:09:02,616 DEBUG incoming_def $phi36.3 = $0.9
2022-01-24 14:09:02,616 DEBUG find_def_from_bottom label 20
2022-01-24 14:09:02,616 DEBUG incoming_def $phi36.3.1 = $20.9
2022-01-24 14:09:02,616 DEBUG replaced with: bout[0] = $phi36.3.2
2022-01-24 14:09:02,616 DEBUG on stmt: $const36.4 = const(NoneType, None)
2022-01-24 14:09:02,616 DEBUG on stmt: $36.5 = cast(value=$const36.4)
2022-01-24 14:09:02,616 DEBUG on stmt: return $36.5
2022-01-24 14:09:02,619 DEBUG label 0:
    a = arg(0, name=a)                       ['a']
    jump 2                                   []
label 2:
    jump 4                                   []
label 4:
    $4.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$4.1']
    $4.2 = getattr(value=$4.1, attr=nditer)  ['$4.1', '$4.2']
    $4.4 = call $4.2(a, func=$4.2, args=[Var(a, arraymath.py:793)], kws=(), vararg=None) ['$4.2', '$4.4', 'a']
    $4.5 = getiter(value=$4.4)               ['$4.4', '$4.5']
    $phi14.1 = $4.5                          ['$4.5', '$phi14.1']
    jump 14                                  []
label 14:
    $14.2 = iternext(value=$phi14.1)         ['$14.2', '$phi14.1']
    $14.3 = pair_first(value=$14.2)          ['$14.2', '$14.3']
    $14.4 = pair_second(value=$14.2)         ['$14.2', '$14.4']
    $phi16.1 = $14.3                         ['$14.3', '$phi16.1']
    $phi32.1 = $14.3                         ['$14.3', '$phi32.1']
    $phi32.2 = $phi14.1                      ['$phi14.1', '$phi32.2']
    branch $14.4, 16, 32                     ['$14.4']
label 16:
    v = $phi16.1                             ['$phi16.1', 'v']
    $16.3 = getattr(value=v, attr=item)      ['$16.3', 'v']
    $16.4 = call $16.3(func=$16.3, args=[], kws=(), vararg=None) ['$16.3', '$16.4']
    bool24 = global(bool: <class 'bool'>)    ['bool24']
    $24pred = call bool24($16.4, func=bool24, args=(Var($16.4, arraymath.py:794),), kws=(), vararg=None) ['$16.4', '$24pred', 'bool24']
    branch $24pred, 26, 14                   ['$24pred']
label 26:
    $const26.1 = const(bool, True)           ['$const26.1']
    $26.2 = cast(value=$const26.1)           ['$26.2', '$const26.1']
    return $26.2                             ['$26.2']
label 32:
    jump 34                                  []
label 34:
    $const34.1 = const(bool, False)          ['$const34.1']
    $34.2 = cast(value=$const34.1)           ['$34.2', '$const34.1']
    return $34.2                             ['$34.2']

2022-01-24 14:09:02,624 DEBUG ==== SSA block analysis pass on 0
2022-01-24 14:09:02,624 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ec5d1dd8>
2022-01-24 14:09:02,624 DEBUG on stmt: a = arg(0, name=a)
2022-01-24 14:09:02,624 DEBUG on stmt: jump 2
2022-01-24 14:09:02,624 DEBUG ==== SSA block analysis pass on 2
2022-01-24 14:09:02,624 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ec5d1dd8>
2022-01-24 14:09:02,624 DEBUG on stmt: jump 4
2022-01-24 14:09:02,624 DEBUG ==== SSA block analysis pass on 4
2022-01-24 14:09:02,624 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ec5d1dd8>
2022-01-24 14:09:02,624 DEBUG on stmt: $4.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:09:02,624 DEBUG on stmt: $4.2 = getattr(value=$4.1, attr=nditer)
2022-01-24 14:09:02,624 DEBUG on stmt: $4.4 = call $4.2(a, func=$4.2, args=[Var(a, arraymath.py:793)], kws=(), vararg=None)
2022-01-24 14:09:02,624 DEBUG on stmt: $4.5 = getiter(value=$4.4)
2022-01-24 14:09:02,624 DEBUG on stmt: $phi14.1 = $4.5
2022-01-24 14:09:02,624 DEBUG on stmt: jump 14
2022-01-24 14:09:02,624 DEBUG ==== SSA block analysis pass on 14
2022-01-24 14:09:02,624 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ec5d1dd8>
2022-01-24 14:09:02,624 DEBUG on stmt: $14.2 = iternext(value=$phi14.1)
2022-01-24 14:09:02,624 DEBUG on stmt: $14.3 = pair_first(value=$14.2)
2022-01-24 14:09:02,624 DEBUG on stmt: $14.4 = pair_second(value=$14.2)
2022-01-24 14:09:02,624 DEBUG on stmt: $phi16.1 = $14.3
2022-01-24 14:09:02,625 DEBUG on stmt: $phi32.1 = $14.3
2022-01-24 14:09:02,625 DEBUG on stmt: $phi32.2 = $phi14.1
2022-01-24 14:09:02,625 DEBUG on stmt: branch $14.4, 16, 32
2022-01-24 14:09:02,625 DEBUG ==== SSA block analysis pass on 16
2022-01-24 14:09:02,625 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ec5d1dd8>
2022-01-24 14:09:02,625 DEBUG on stmt: v = $phi16.1
2022-01-24 14:09:02,625 DEBUG on stmt: $16.3 = getattr(value=v, attr=item)
2022-01-24 14:09:02,625 DEBUG on stmt: $16.4 = call $16.3(func=$16.3, args=[], kws=(), vararg=None)
2022-01-24 14:09:02,625 DEBUG on stmt: bool24 = global(bool: <class 'bool'>)
2022-01-24 14:09:02,625 DEBUG on stmt: $24pred = call bool24($16.4, func=bool24, args=(Var($16.4, arraymath.py:794),), kws=(), vararg=None)
2022-01-24 14:09:02,625 DEBUG on stmt: branch $24pred, 26, 14
2022-01-24 14:09:02,625 DEBUG ==== SSA block analysis pass on 26
2022-01-24 14:09:02,625 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ec5d1dd8>
2022-01-24 14:09:02,625 DEBUG on stmt: $const26.1 = const(bool, True)
2022-01-24 14:09:02,625 DEBUG on stmt: $26.2 = cast(value=$const26.1)
2022-01-24 14:09:02,625 DEBUG on stmt: return $26.2
2022-01-24 14:09:02,625 DEBUG ==== SSA block analysis pass on 32
2022-01-24 14:09:02,625 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ec5d1dd8>
2022-01-24 14:09:02,625 DEBUG on stmt: jump 34
2022-01-24 14:09:02,625 DEBUG ==== SSA block analysis pass on 34
2022-01-24 14:09:02,625 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ec5d1dd8>
2022-01-24 14:09:02,625 DEBUG on stmt: $const34.1 = const(bool, False)
2022-01-24 14:09:02,625 DEBUG on stmt: $34.2 = cast(value=$const34.1)
2022-01-24 14:09:02,625 DEBUG on stmt: return $34.2
2022-01-24 14:09:02,626 DEBUG defs defaultdict(<class 'list'>,
            {'$14.2': [<numba.core.ir.Assign object at 0x7f94ec5d0c50>],
             '$14.3': [<numba.core.ir.Assign object at 0x7f94ec5ed048>],
             '$14.4': [<numba.core.ir.Assign object at 0x7f94ec5ed0f0>],
             '$16.3': [<numba.core.ir.Assign object at 0x7f94ec5ed518>],
             '$16.4': [<numba.core.ir.Assign object at 0x7f94ec5ed5f8>],
             '$24pred': [<numba.core.ir.Assign object at 0x7f94ec5ed7f0>],
             '$26.2': [<numba.core.ir.Assign object at 0x7f94ec5eda20>],
             '$34.2': [<numba.core.ir.Assign object at 0x7f94ec5edcf8>],
             '$4.1': [<numba.core.ir.Assign object at 0x7f94ec5d0208>],
             '$4.2': [<numba.core.ir.Assign object at 0x7f94ec5d0320>],
             '$4.4': [<numba.core.ir.Assign object at 0x7f94ec5d04a8>],
             '$4.5': [<numba.core.ir.Assign object at 0x7f94ec5d0550>],
             '$const26.1': [<numba.core.ir.Assign object at 0x7f94ec5ed940>],
             '$const34.1': [<numba.core.ir.Assign object at 0x7f94ec5edc18>],
             '$phi14.1': [<numba.core.ir.Assign object at 0x7f94ec5d05f8>],
             '$phi16.1': [<numba.core.ir.Assign object at 0x7f94ec5ed160>],
             '$phi32.1': [<numba.core.ir.Assign object at 0x7f94ec5ed1d0>],
             '$phi32.2': [<numba.core.ir.Assign object at 0x7f94ec5ed240>],
             'a': [<numba.core.ir.Assign object at 0x7f94ec5d0eb8>],
             'bool24': [<numba.core.ir.Assign object at 0x7f94ec5ed710>],
             'v': [<numba.core.ir.Assign object at 0x7f94ec5ed390>]})
2022-01-24 14:09:02,626 DEBUG SSA violators set()
2022-01-24 14:09:02,766 DEBUG label 0:
    q1 = arg(0, name=q1)                     ['q1']
    q2 = arg(1, name=q2)                     ['q2']
    bout = arg(2, name=bout)                 ['bout']
    $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$0.1']
    $0.2 = getattr(value=$0.1, attr=any)     ['$0.1', '$0.2']
    $const0.4 = const(NoneType, None)        ['$const0.4']
    $const0.5 = const(NoneType, None)        ['$const0.5']
    $0.6 = global(slice: <class 'slice'>)    ['$0.6']
    $0.7 = call $0.6($const0.4, $const0.5, func=$0.6, args=(Var($const0.4, algebra.py:404), Var($const0.5, algebra.py:404)), kws=(), vararg=None) ['$0.6', '$0.7', '$const0.4', '$const0.5']
    $0.8 = getitem(value=q1, index=$0.7, fn=<built-in function getitem>) ['$0.7', '$0.8', 'q1']
    $0.9 = call $0.2($0.8, func=$0.2, args=[Var($0.8, algebra.py:404)], kws=(), vararg=None) ['$0.2', '$0.8', '$0.9']
    bool18 = global(bool: <class 'bool'>)    ['bool18']
    $18pred = call bool18($0.9, func=bool18, args=(Var($0.9, algebra.py:404),), kws=(), vararg=None) ['$0.9', '$18pred', 'bool18']
    $phi36.3 = $0.9                          ['$0.9', '$phi36.3']
    branch $18pred, 36, 20                   ['$18pred']
label 20:
    $20.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$20.1']
    $20.2 = getattr(value=$20.1, attr=any)   ['$20.1', '$20.2']
    $const20.4 = const(NoneType, None)       ['$const20.4']
    $const20.5 = const(NoneType, None)       ['$const20.5']
    $20.6 = global(slice: <class 'slice'>)   ['$20.6']
    $20.7 = call $20.6($const20.4, $const20.5, func=$20.6, args=(Var($const20.4, algebra.py:404), Var($const20.5, algebra.py:404)), kws=(), vararg=None) ['$20.6', '$20.7', '$const20.4', '$const20.5']
    $20.8 = getitem(value=q2, index=$20.7, fn=<built-in function getitem>) ['$20.7', '$20.8', 'q2']
    $20.9 = call $20.2($20.8, func=$20.2, args=[Var($20.8, algebra.py:404)], kws=(), vararg=None) ['$20.2', '$20.8', '$20.9']
    $phi36.3 = $20.9                         ['$20.9', '$phi36.3']
    jump 36                                  []
label 36:
    $const36.2 = const(int, 0)               ['$const36.2']
    bout[$const36.2] = $phi36.3              ['$const36.2', '$phi36.3', 'bout']
    $const36.4 = const(NoneType, None)       ['$const36.4']
    $36.5 = cast(value=$const36.4)           ['$36.5', '$const36.4']
    return $36.5                             ['$36.5']

2022-01-24 14:09:02,770 DEBUG ==== SSA block analysis pass on 0
2022-01-24 14:09:02,770 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ecb54f98>
2022-01-24 14:09:02,770 DEBUG on stmt: q1 = arg(0, name=q1)
2022-01-24 14:09:02,770 DEBUG on stmt: q2 = arg(1, name=q2)
2022-01-24 14:09:02,770 DEBUG on stmt: bout = arg(2, name=bout)
2022-01-24 14:09:02,770 DEBUG on stmt: $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:09:02,770 DEBUG on stmt: $0.2 = getattr(value=$0.1, attr=any)
2022-01-24 14:09:02,770 DEBUG on stmt: $const0.4 = const(NoneType, None)
2022-01-24 14:09:02,770 DEBUG on stmt: $const0.5 = const(NoneType, None)
2022-01-24 14:09:02,770 DEBUG on stmt: $0.6 = global(slice: <class 'slice'>)
2022-01-24 14:09:02,770 DEBUG on stmt: $0.7 = call $0.6($const0.4, $const0.5, func=$0.6, args=(Var($const0.4, algebra.py:404), Var($const0.5, algebra.py:404)), kws=(), vararg=None)
2022-01-24 14:09:02,770 DEBUG on stmt: $0.8 = static_getitem(value=q1, index=slice(None, None, None), index_var=$0.7, fn=<built-in function getitem>)
2022-01-24 14:09:02,770 DEBUG on stmt: $0.9 = call $0.2($0.8, func=$0.2, args=[Var($0.8, algebra.py:404)], kws=(), vararg=None)
2022-01-24 14:09:02,770 DEBUG on stmt: bool18 = global(bool: <class 'bool'>)
2022-01-24 14:09:02,770 DEBUG on stmt: $18pred = call bool18($0.9, func=bool18, args=(Var($0.9, algebra.py:404),), kws=(), vararg=None)
2022-01-24 14:09:02,770 DEBUG on stmt: $phi36.3 = $0.9
2022-01-24 14:09:02,770 DEBUG on stmt: branch $18pred, 36, 20
2022-01-24 14:09:02,770 DEBUG ==== SSA block analysis pass on 20
2022-01-24 14:09:02,770 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ecb54f98>
2022-01-24 14:09:02,770 DEBUG on stmt: $20.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:09:02,770 DEBUG on stmt: $20.2 = getattr(value=$20.1, attr=any)
2022-01-24 14:09:02,770 DEBUG on stmt: $const20.4 = const(NoneType, None)
2022-01-24 14:09:02,770 DEBUG on stmt: $const20.5 = const(NoneType, None)
2022-01-24 14:09:02,770 DEBUG on stmt: $20.6 = global(slice: <class 'slice'>)
2022-01-24 14:09:02,771 DEBUG on stmt: $20.7 = call $20.6($const20.4, $const20.5, func=$20.6, args=(Var($const20.4, algebra.py:404), Var($const20.5, algebra.py:404)), kws=(), vararg=None)
2022-01-24 14:09:02,771 DEBUG on stmt: $20.8 = static_getitem(value=q2, index=slice(None, None, None), index_var=$20.7, fn=<built-in function getitem>)
2022-01-24 14:09:02,771 DEBUG on stmt: $20.9 = call $20.2($20.8, func=$20.2, args=[Var($20.8, algebra.py:404)], kws=(), vararg=None)
2022-01-24 14:09:02,771 DEBUG on stmt: $phi36.3 = $20.9
2022-01-24 14:09:02,771 DEBUG on stmt: jump 36
2022-01-24 14:09:02,771 DEBUG ==== SSA block analysis pass on 36
2022-01-24 14:09:02,771 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ecb54f98>
2022-01-24 14:09:02,771 DEBUG on stmt: $const36.2 = const(int, 0)
2022-01-24 14:09:02,771 DEBUG on stmt: bout[0] = $phi36.3
2022-01-24 14:09:02,771 DEBUG on stmt: $const36.4 = const(NoneType, None)
2022-01-24 14:09:02,771 DEBUG on stmt: $36.5 = cast(value=$const36.4)
2022-01-24 14:09:02,771 DEBUG on stmt: return $36.5
2022-01-24 14:09:02,771 DEBUG defs defaultdict(<class 'list'>,
            {'$0.1': [<numba.core.ir.Assign object at 0x7f94ecb62748>],
             '$0.2': [<numba.core.ir.Assign object at 0x7f94ecb62828>],
             '$0.6': [<numba.core.ir.Assign object at 0x7f94ecb62b70>],
             '$0.7': [<numba.core.ir.Assign object at 0x7f94ecb62c18>],
             '$0.8': [<numba.core.ir.Assign object at 0x7f94ecb54cc0>],
             '$0.9': [<numba.core.ir.Assign object at 0x7f94ecb62dd8>],
             '$18pred': [<numba.core.ir.Assign object at 0x7f94ecb62fd0>],
             '$20.1': [<numba.core.ir.Assign object at 0x7f94ecb561d0>],
             '$20.2': [<numba.core.ir.Assign object at 0x7f94ecb562b0>],
             '$20.6': [<numba.core.ir.Assign object at 0x7f94ecb565c0>],
             '$20.7': [<numba.core.ir.Assign object at 0x7f94ecb56668>],
             '$20.8': [<numba.core.ir.Assign object at 0x7f94ecb54c50>],
             '$20.9': [<numba.core.ir.Assign object at 0x7f94ecb56828>],
             '$36.5': [<numba.core.ir.Assign object at 0x7f94ecb56c88>],
             '$const0.4': [<numba.core.ir.Assign object at 0x7f94ecb629b0>],
             '$const0.5': [<numba.core.ir.Assign object at 0x7f94ecb62a90>],
             '$const20.4': [<numba.core.ir.Assign object at 0x7f94ecb56438>],
             '$const20.5': [<numba.core.ir.Assign object at 0x7f94e4755da0>],
             '$const36.2': [<numba.core.ir.Assign object at 0x7f94ecb56a58>],
             '$const36.4': [<numba.core.ir.Assign object at 0x7f94ecb56ba8>],
             '$phi36.3': [<numba.core.ir.Assign object at 0x7f94ecb62470>,
                          <numba.core.ir.Assign object at 0x7f94ecb62438>],
             'bool18': [<numba.core.ir.Assign object at 0x7f94ecb62ef0>],
             'bout': [<numba.core.ir.Assign object at 0x7f94ecb62668>],
             'q1': [<numba.core.ir.Assign object at 0x7f94ecb62518>],
             'q2': [<numba.core.ir.Assign object at 0x7f94ecb625c0>]})
2022-01-24 14:09:02,771 DEBUG SSA violators {'$phi36.3'}
2022-01-24 14:09:02,771 DEBUG Fix SSA violator on var $phi36.3
2022-01-24 14:09:02,771 DEBUG ==== SSA block rewrite pass on 0
2022-01-24 14:09:02,771 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94ecb56e10>
2022-01-24 14:09:02,771 DEBUG on stmt: q1 = arg(0, name=q1)
2022-01-24 14:09:02,771 DEBUG on stmt: q2 = arg(1, name=q2)
2022-01-24 14:09:02,771 DEBUG on stmt: bout = arg(2, name=bout)
2022-01-24 14:09:02,772 DEBUG on stmt: $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:09:02,772 DEBUG on stmt: $0.2 = getattr(value=$0.1, attr=any)
2022-01-24 14:09:02,772 DEBUG on stmt: $const0.4 = const(NoneType, None)
2022-01-24 14:09:02,772 DEBUG on stmt: $const0.5 = const(NoneType, None)
2022-01-24 14:09:02,772 DEBUG on stmt: $0.6 = global(slice: <class 'slice'>)
2022-01-24 14:09:02,772 DEBUG on stmt: $0.7 = call $0.6($const0.4, $const0.5, func=$0.6, args=(Var($const0.4, algebra.py:404), Var($const0.5, algebra.py:404)), kws=(), vararg=None)
2022-01-24 14:09:02,772 DEBUG on stmt: $0.8 = static_getitem(value=q1, index=slice(None, None, None), index_var=$0.7, fn=<built-in function getitem>)
2022-01-24 14:09:02,772 DEBUG on stmt: $0.9 = call $0.2($0.8, func=$0.2, args=[Var($0.8, algebra.py:404)], kws=(), vararg=None)
2022-01-24 14:09:02,772 DEBUG on stmt: bool18 = global(bool: <class 'bool'>)
2022-01-24 14:09:02,772 DEBUG on stmt: $18pred = call bool18($0.9, func=bool18, args=(Var($0.9, algebra.py:404),), kws=(), vararg=None)
2022-01-24 14:09:02,772 DEBUG on stmt: $phi36.3 = $0.9
2022-01-24 14:09:02,772 DEBUG first assign: $phi36.3
2022-01-24 14:09:02,772 DEBUG replaced with: $phi36.3 = $0.9
2022-01-24 14:09:02,772 DEBUG on stmt: branch $18pred, 36, 20
2022-01-24 14:09:02,772 DEBUG ==== SSA block rewrite pass on 20
2022-01-24 14:09:02,772 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94ecb56e10>
2022-01-24 14:09:02,772 DEBUG on stmt: $20.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:09:02,772 DEBUG on stmt: $20.2 = getattr(value=$20.1, attr=any)
2022-01-24 14:09:02,772 DEBUG on stmt: $const20.4 = const(NoneType, None)
2022-01-24 14:09:02,772 DEBUG on stmt: $const20.5 = const(NoneType, None)
2022-01-24 14:09:02,772 DEBUG on stmt: $20.6 = global(slice: <class 'slice'>)
2022-01-24 14:09:02,772 DEBUG on stmt: $20.7 = call $20.6($const20.4, $const20.5, func=$20.6, args=(Var($const20.4, algebra.py:404), Var($const20.5, algebra.py:404)), kws=(), vararg=None)
2022-01-24 14:09:02,773 DEBUG on stmt: $20.8 = static_getitem(value=q2, index=slice(None, None, None), index_var=$20.7, fn=<built-in function getitem>)
2022-01-24 14:09:02,773 DEBUG on stmt: $20.9 = call $20.2($20.8, func=$20.2, args=[Var($20.8, algebra.py:404)], kws=(), vararg=None)
2022-01-24 14:09:02,773 DEBUG on stmt: $phi36.3 = $20.9
2022-01-24 14:09:02,773 DEBUG replaced with: $phi36.3.1 = $20.9
2022-01-24 14:09:02,773 DEBUG on stmt: jump 36
2022-01-24 14:09:02,773 DEBUG ==== SSA block rewrite pass on 36
2022-01-24 14:09:02,773 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94ecb56e10>
2022-01-24 14:09:02,773 DEBUG on stmt: $const36.2 = const(int, 0)
2022-01-24 14:09:02,773 DEBUG on stmt: bout[0] = $phi36.3
2022-01-24 14:09:02,773 DEBUG on stmt: $const36.4 = const(NoneType, None)
2022-01-24 14:09:02,773 DEBUG on stmt: $36.5 = cast(value=$const36.4)
2022-01-24 14:09:02,773 DEBUG on stmt: return $36.5
2022-01-24 14:09:02,773 DEBUG Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f94ecb56f28>],
             20: [<numba.core.ir.Assign object at 0x7f94ecb56ef0>]})
2022-01-24 14:09:02,773 DEBUG ==== SSA block rewrite pass on 0
2022-01-24 14:09:02,773 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94ecb56da0>
2022-01-24 14:09:02,773 DEBUG on stmt: q1 = arg(0, name=q1)
2022-01-24 14:09:02,773 DEBUG on stmt: q2 = arg(1, name=q2)
2022-01-24 14:09:02,773 DEBUG on stmt: bout = arg(2, name=bout)
2022-01-24 14:09:02,773 DEBUG on stmt: $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:09:02,773 DEBUG on stmt: $0.2 = getattr(value=$0.1, attr=any)
2022-01-24 14:09:02,774 DEBUG on stmt: $const0.4 = const(NoneType, None)
2022-01-24 14:09:02,774 DEBUG on stmt: $const0.5 = const(NoneType, None)
2022-01-24 14:09:02,774 DEBUG on stmt: $0.6 = global(slice: <class 'slice'>)
2022-01-24 14:09:02,774 DEBUG on stmt: $0.7 = call $0.6($const0.4, $const0.5, func=$0.6, args=(Var($const0.4, algebra.py:404), Var($const0.5, algebra.py:404)), kws=(), vararg=None)
2022-01-24 14:09:02,774 DEBUG on stmt: $0.8 = static_getitem(value=q1, index=slice(None, None, None), index_var=$0.7, fn=<built-in function getitem>)
2022-01-24 14:09:02,774 DEBUG on stmt: $0.9 = call $0.2($0.8, func=$0.2, args=[Var($0.8, algebra.py:404)], kws=(), vararg=None)
2022-01-24 14:09:02,774 DEBUG on stmt: bool18 = global(bool: <class 'bool'>)
2022-01-24 14:09:02,774 DEBUG on stmt: $18pred = call bool18($0.9, func=bool18, args=(Var($0.9, algebra.py:404),), kws=(), vararg=None)
2022-01-24 14:09:02,774 DEBUG on stmt: $phi36.3 = $0.9
2022-01-24 14:09:02,774 DEBUG on stmt: branch $18pred, 36, 20
2022-01-24 14:09:02,774 DEBUG ==== SSA block rewrite pass on 20
2022-01-24 14:09:02,774 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94ecb56da0>
2022-01-24 14:09:02,774 DEBUG on stmt: $20.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:09:02,774 DEBUG on stmt: $20.2 = getattr(value=$20.1, attr=any)
2022-01-24 14:09:02,774 DEBUG on stmt: $const20.4 = const(NoneType, None)
2022-01-24 14:09:02,774 DEBUG on stmt: $const20.5 = const(NoneType, None)
2022-01-24 14:09:02,774 DEBUG on stmt: $20.6 = global(slice: <class 'slice'>)
2022-01-24 14:09:02,774 DEBUG on stmt: $20.7 = call $20.6($const20.4, $const20.5, func=$20.6, args=(Var($const20.4, algebra.py:404), Var($const20.5, algebra.py:404)), kws=(), vararg=None)
2022-01-24 14:09:02,774 DEBUG on stmt: $20.8 = static_getitem(value=q2, index=slice(None, None, None), index_var=$20.7, fn=<built-in function getitem>)
2022-01-24 14:09:02,774 DEBUG on stmt: $20.9 = call $20.2($20.8, func=$20.2, args=[Var($20.8, algebra.py:404)], kws=(), vararg=None)
2022-01-24 14:09:02,774 DEBUG on stmt: $phi36.3.1 = $20.9
2022-01-24 14:09:02,774 DEBUG on stmt: jump 36
2022-01-24 14:09:02,774 DEBUG ==== SSA block rewrite pass on 36
2022-01-24 14:09:02,775 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94ecb56da0>
2022-01-24 14:09:02,775 DEBUG on stmt: $const36.2 = const(int, 0)
2022-01-24 14:09:02,775 DEBUG on stmt: bout[0] = $phi36.3
2022-01-24 14:09:02,775 DEBUG find_def var='$phi36.3' stmt=bout[0] = $phi36.3
2022-01-24 14:09:02,775 DEBUG find_def_from_top label 36
2022-01-24 14:09:02,775 DEBUG insert phi node $phi36.3.2 = phi(incoming_values=[], incoming_blocks=[]) at 36
2022-01-24 14:09:02,775 DEBUG find_def_from_bottom label 0
2022-01-24 14:09:02,775 DEBUG incoming_def $phi36.3 = $0.9
2022-01-24 14:09:02,775 DEBUG find_def_from_bottom label 20
2022-01-24 14:09:02,775 DEBUG incoming_def $phi36.3.1 = $20.9
2022-01-24 14:09:02,775 DEBUG replaced with: bout[0] = $phi36.3.2
2022-01-24 14:09:02,775 DEBUG on stmt: $const36.4 = const(NoneType, None)
2022-01-24 14:09:02,775 DEBUG on stmt: $36.5 = cast(value=$const36.4)
2022-01-24 14:09:02,775 DEBUG on stmt: return $36.5
2022-01-24 14:09:02,865 DEBUG label 0:
    qin = arg(0, name=qin)                   ['qin']
    bout = arg(1, name=bout)                 ['bout']
    $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$0.1']
    $0.2 = getattr(value=$0.1, attr=isfinite) ['$0.1', '$0.2']
    $const0.4 = const(int, 0)                ['$const0.4']
    $0.5 = getitem(value=qin, index=$const0.4, fn=<built-in function getitem>) ['$0.5', '$const0.4', 'qin']
    $0.6 = call $0.2($0.5, func=$0.2, args=[Var($0.5, algebra.py:409)], kws=(), vararg=None) ['$0.2', '$0.5', '$0.6']
    bool14 = global(bool: <class 'bool'>)    ['bool14']
    $14pred = call bool14($0.6, func=bool14, args=(Var($0.6, algebra.py:409),), kws=(), vararg=None) ['$0.6', '$14pred', 'bool14']
    $phi56.3 = $0.6                          ['$0.6', '$phi56.3']
    branch $14pred, 16, 56                   ['$14pred']
label 16:
    $16.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$16.1']
    $16.2 = getattr(value=$16.1, attr=isfinite) ['$16.1', '$16.2']
    $const16.4 = const(int, 1)               ['$const16.4']
    $16.5 = getitem(value=qin, index=$const16.4, fn=<built-in function getitem>) ['$16.5', '$const16.4', 'qin']
    $16.6 = call $16.2($16.5, func=$16.2, args=[Var($16.5, algebra.py:409)], kws=(), vararg=None) ['$16.2', '$16.5', '$16.6']
    bool28 = global(bool: <class 'bool'>)    ['bool28']
    $28pred = call bool28($16.6, func=bool28, args=(Var($16.6, algebra.py:409),), kws=(), vararg=None) ['$16.6', '$28pred', 'bool28']
    $phi56.3 = $16.6                         ['$16.6', '$phi56.3']
    branch $28pred, 30, 56                   ['$28pred']
label 30:
    $30.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$30.1']
    $30.2 = getattr(value=$30.1, attr=isfinite) ['$30.1', '$30.2']
    $const30.4 = const(int, 2)               ['$const30.4']
    $30.5 = getitem(value=qin, index=$const30.4, fn=<built-in function getitem>) ['$30.5', '$const30.4', 'qin']
    $30.6 = call $30.2($30.5, func=$30.2, args=[Var($30.5, algebra.py:409)], kws=(), vararg=None) ['$30.2', '$30.5', '$30.6']
    bool42 = global(bool: <class 'bool'>)    ['bool42']
    $42pred = call bool42($30.6, func=bool42, args=(Var($30.6, algebra.py:409),), kws=(), vararg=None) ['$30.6', '$42pred', 'bool42']
    $phi56.3 = $30.6                         ['$30.6', '$phi56.3']
    branch $42pred, 44, 56                   ['$42pred']
label 44:
    $44.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$44.1']
    $44.2 = getattr(value=$44.1, attr=isfinite) ['$44.1', '$44.2']
    $const44.4 = const(int, 3)               ['$const44.4']
    $44.5 = getitem(value=qin, index=$const44.4, fn=<built-in function getitem>) ['$44.5', '$const44.4', 'qin']
    $44.6 = call $44.2($44.5, func=$44.2, args=[Var($44.5, algebra.py:409)], kws=(), vararg=None) ['$44.2', '$44.5', '$44.6']
    $phi56.3 = $44.6                         ['$44.6', '$phi56.3']
    jump 56                                  []
label 56:
    $const56.2 = const(int, 0)               ['$const56.2']
    bout[$const56.2] = $phi56.3              ['$const56.2', '$phi56.3', 'bout']
    $const56.4 = const(NoneType, None)       ['$const56.4']
    $56.5 = cast(value=$const56.4)           ['$56.5', '$const56.4']
    return $56.5                             ['$56.5']

2022-01-24 14:09:02,870 DEBUG ==== SSA block analysis pass on 0
2022-01-24 14:09:02,870 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ecfbeb70>
2022-01-24 14:09:02,870 DEBUG on stmt: qin = arg(0, name=qin)
2022-01-24 14:09:02,870 DEBUG on stmt: bout = arg(1, name=bout)
2022-01-24 14:09:02,870 DEBUG on stmt: $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:09:02,870 DEBUG on stmt: $0.2 = getattr(value=$0.1, attr=isfinite)
2022-01-24 14:09:02,870 DEBUG on stmt: $const0.4 = const(int, 0)
2022-01-24 14:09:02,871 DEBUG on stmt: $0.5 = static_getitem(value=qin, index=0, index_var=$const0.4, fn=<built-in function getitem>)
2022-01-24 14:09:02,871 DEBUG on stmt: $0.6 = call $0.2($0.5, func=$0.2, args=[Var($0.5, algebra.py:409)], kws=(), vararg=None)
2022-01-24 14:09:02,871 DEBUG on stmt: bool14 = global(bool: <class 'bool'>)
2022-01-24 14:09:02,871 DEBUG on stmt: $14pred = call bool14($0.6, func=bool14, args=(Var($0.6, algebra.py:409),), kws=(), vararg=None)
2022-01-24 14:09:02,871 DEBUG on stmt: $phi56.3 = $0.6
2022-01-24 14:09:02,871 DEBUG on stmt: branch $14pred, 16, 56
2022-01-24 14:09:02,871 DEBUG ==== SSA block analysis pass on 16
2022-01-24 14:09:02,871 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ecfbeb70>
2022-01-24 14:09:02,871 DEBUG on stmt: $16.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:09:02,871 DEBUG on stmt: $16.2 = getattr(value=$16.1, attr=isfinite)
2022-01-24 14:09:02,871 DEBUG on stmt: $const16.4 = const(int, 1)
2022-01-24 14:09:02,871 DEBUG on stmt: $16.5 = static_getitem(value=qin, index=1, index_var=$const16.4, fn=<built-in function getitem>)
2022-01-24 14:09:02,871 DEBUG on stmt: $16.6 = call $16.2($16.5, func=$16.2, args=[Var($16.5, algebra.py:409)], kws=(), vararg=None)
2022-01-24 14:09:02,871 DEBUG on stmt: bool28 = global(bool: <class 'bool'>)
2022-01-24 14:09:02,871 DEBUG on stmt: $28pred = call bool28($16.6, func=bool28, args=(Var($16.6, algebra.py:409),), kws=(), vararg=None)
2022-01-24 14:09:02,871 DEBUG on stmt: $phi56.3 = $16.6
2022-01-24 14:09:02,871 DEBUG on stmt: branch $28pred, 30, 56
2022-01-24 14:09:02,871 DEBUG ==== SSA block analysis pass on 30
2022-01-24 14:09:02,871 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ecfbeb70>
2022-01-24 14:09:02,871 DEBUG on stmt: $30.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:09:02,871 DEBUG on stmt: $30.2 = getattr(value=$30.1, attr=isfinite)
2022-01-24 14:09:02,871 DEBUG on stmt: $const30.4 = const(int, 2)
2022-01-24 14:09:02,871 DEBUG on stmt: $30.5 = static_getitem(value=qin, index=2, index_var=$const30.4, fn=<built-in function getitem>)
2022-01-24 14:09:02,872 DEBUG on stmt: $30.6 = call $30.2($30.5, func=$30.2, args=[Var($30.5, algebra.py:409)], kws=(), vararg=None)
2022-01-24 14:09:02,872 DEBUG on stmt: bool42 = global(bool: <class 'bool'>)
2022-01-24 14:09:02,872 DEBUG on stmt: $42pred = call bool42($30.6, func=bool42, args=(Var($30.6, algebra.py:409),), kws=(), vararg=None)
2022-01-24 14:09:02,872 DEBUG on stmt: $phi56.3 = $30.6
2022-01-24 14:09:02,872 DEBUG on stmt: branch $42pred, 44, 56
2022-01-24 14:09:02,872 DEBUG ==== SSA block analysis pass on 44
2022-01-24 14:09:02,872 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ecfbeb70>
2022-01-24 14:09:02,872 DEBUG on stmt: $44.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:09:02,872 DEBUG on stmt: $44.2 = getattr(value=$44.1, attr=isfinite)
2022-01-24 14:09:02,872 DEBUG on stmt: $const44.4 = const(int, 3)
2022-01-24 14:09:02,872 DEBUG on stmt: $44.5 = static_getitem(value=qin, index=3, index_var=$const44.4, fn=<built-in function getitem>)
2022-01-24 14:09:02,872 DEBUG on stmt: $44.6 = call $44.2($44.5, func=$44.2, args=[Var($44.5, algebra.py:409)], kws=(), vararg=None)
2022-01-24 14:09:02,872 DEBUG on stmt: $phi56.3 = $44.6
2022-01-24 14:09:02,872 DEBUG on stmt: jump 56
2022-01-24 14:09:02,872 DEBUG ==== SSA block analysis pass on 56
2022-01-24 14:09:02,872 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ecfbeb70>
2022-01-24 14:09:02,872 DEBUG on stmt: $const56.2 = const(int, 0)
2022-01-24 14:09:02,872 DEBUG on stmt: bout[0] = $phi56.3
2022-01-24 14:09:02,872 DEBUG on stmt: $const56.4 = const(NoneType, None)
2022-01-24 14:09:02,872 DEBUG on stmt: $56.5 = cast(value=$const56.4)
2022-01-24 14:09:02,872 DEBUG on stmt: return $56.5
2022-01-24 14:09:02,873 DEBUG defs defaultdict(<class 'list'>,
            {'$0.1': [<numba.core.ir.Assign object at 0x7f94ecf84320>],
             '$0.2': [<numba.core.ir.Assign object at 0x7f94ecf84400>],
             '$0.5': [<numba.core.ir.Assign object at 0x7f94ecf92748>],
             '$0.6': [<numba.core.ir.Assign object at 0x7f94ecf84748>],
             '$14pred': [<numba.core.ir.Assign object at 0x7f94ecf84940>],
             '$16.1': [<numba.core.ir.Assign object at 0x7f94ecf84b00>],
             '$16.2': [<numba.core.ir.Assign object at 0x7f94ecf84be0>],
             '$16.5': [<numba.core.ir.Assign object at 0x7f94ecfbed30>],
             '$16.6': [<numba.core.ir.Assign object at 0x7f94ecf84f28>],
             '$28pred': [<numba.core.ir.Assign object at 0x7f94ecf8c160>],
             '$30.1': [<numba.core.ir.Assign object at 0x7f94ecf8c358>],
             '$30.2': [<numba.core.ir.Assign object at 0x7f94ecf8c400>],
             '$30.5': [<numba.core.ir.Assign object at 0x7f94ecfbe9e8>],
             '$30.6': [<numba.core.ir.Assign object at 0x7f94ecf8c780>],
             '$42pred': [<numba.core.ir.Assign object at 0x7f94ecf8c940>],
             '$44.1': [<numba.core.ir.Assign object at 0x7f94ecf8ca90>],
             '$44.2': [<numba.core.ir.Assign object at 0x7f94ecf8cb70>],
             '$44.5': [<numba.core.ir.Assign object at 0x7f94ecfbea90>],
             '$44.6': [<numba.core.ir.Assign object at 0x7f94ecf8cf28>],
             '$56.5': [<numba.core.ir.Assign object at 0x7f94ecf92358>],
             '$const0.4': [<numba.core.ir.Assign object at 0x7f94ecf84588>],
             '$const16.4': [<numba.core.ir.Assign object at 0x7f94ecf84d68>],
             '$const30.4': [<numba.core.ir.Assign object at 0x7f94ecf8c550>],
             '$const44.4': [<numba.core.ir.Assign object at 0x7f94ecf8ccf8>],
             '$const56.2': [<numba.core.ir.Assign object at 0x7f94ecf92160>],
             '$const56.4': [<numba.core.ir.Assign object at 0x7f94ecf92048>],
             '$phi56.3': [<numba.core.ir.Assign object at 0x7f94ecf840f0>,
                          <numba.core.ir.Assign object at 0x7f94ecf84c88>,
                          <numba.core.ir.Assign object at 0x7f94ecf84a20>,
                          <numba.core.ir.Assign object at 0x7f94ecf8cc18>],
             'bool14': [<numba.core.ir.Assign object at 0x7f94ecf84860>],
             'bool28': [<numba.core.ir.Assign object at 0x7f94ecf8c080>],
             'bool42': [<numba.core.ir.Assign object at 0x7f94ecf8c860>],
             'bout': [<numba.core.ir.Assign object at 0x7f94ecf84240>],
             'qin': [<numba.core.ir.Assign object at 0x7f94ecf84198>]})
2022-01-24 14:09:02,873 DEBUG SSA violators {'$phi56.3'}
2022-01-24 14:09:02,873 DEBUG Fix SSA violator on var $phi56.3
2022-01-24 14:09:02,873 DEBUG ==== SSA block rewrite pass on 0
2022-01-24 14:09:02,873 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94ecfbeb70>
2022-01-24 14:09:02,873 DEBUG on stmt: qin = arg(0, name=qin)
2022-01-24 14:09:02,873 DEBUG on stmt: bout = arg(1, name=bout)
2022-01-24 14:09:02,873 DEBUG on stmt: $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:09:02,873 DEBUG on stmt: $0.2 = getattr(value=$0.1, attr=isfinite)
2022-01-24 14:09:02,873 DEBUG on stmt: $const0.4 = const(int, 0)
2022-01-24 14:09:02,873 DEBUG on stmt: $0.5 = static_getitem(value=qin, index=0, index_var=$const0.4, fn=<built-in function getitem>)
2022-01-24 14:09:02,873 DEBUG on stmt: $0.6 = call $0.2($0.5, func=$0.2, args=[Var($0.5, algebra.py:409)], kws=(), vararg=None)
2022-01-24 14:09:02,873 DEBUG on stmt: bool14 = global(bool: <class 'bool'>)
2022-01-24 14:09:02,873 DEBUG on stmt: $14pred = call bool14($0.6, func=bool14, args=(Var($0.6, algebra.py:409),), kws=(), vararg=None)
2022-01-24 14:09:02,873 DEBUG on stmt: $phi56.3 = $0.6
2022-01-24 14:09:02,873 DEBUG first assign: $phi56.3
2022-01-24 14:09:02,873 DEBUG replaced with: $phi56.3 = $0.6
2022-01-24 14:09:02,873 DEBUG on stmt: branch $14pred, 16, 56
2022-01-24 14:09:02,873 DEBUG ==== SSA block rewrite pass on 16
2022-01-24 14:09:02,873 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94ecfbeb70>
2022-01-24 14:09:02,873 DEBUG on stmt: $16.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:09:02,873 DEBUG on stmt: $16.2 = getattr(value=$16.1, attr=isfinite)
2022-01-24 14:09:02,873 DEBUG on stmt: $const16.4 = const(int, 1)
2022-01-24 14:09:02,874 DEBUG on stmt: $16.5 = static_getitem(value=qin, index=1, index_var=$const16.4, fn=<built-in function getitem>)
2022-01-24 14:09:02,874 DEBUG on stmt: $16.6 = call $16.2($16.5, func=$16.2, args=[Var($16.5, algebra.py:409)], kws=(), vararg=None)
2022-01-24 14:09:02,874 DEBUG on stmt: bool28 = global(bool: <class 'bool'>)
2022-01-24 14:09:02,874 DEBUG on stmt: $28pred = call bool28($16.6, func=bool28, args=(Var($16.6, algebra.py:409),), kws=(), vararg=None)
2022-01-24 14:09:02,874 DEBUG on stmt: $phi56.3 = $16.6
2022-01-24 14:09:02,874 DEBUG replaced with: $phi56.3.1 = $16.6
2022-01-24 14:09:02,874 DEBUG on stmt: branch $28pred, 30, 56
2022-01-24 14:09:02,874 DEBUG ==== SSA block rewrite pass on 30
2022-01-24 14:09:02,874 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94ecfbeb70>
2022-01-24 14:09:02,874 DEBUG on stmt: $30.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:09:02,874 DEBUG on stmt: $30.2 = getattr(value=$30.1, attr=isfinite)
2022-01-24 14:09:02,874 DEBUG on stmt: $const30.4 = const(int, 2)
2022-01-24 14:09:02,874 DEBUG on stmt: $30.5 = static_getitem(value=qin, index=2, index_var=$const30.4, fn=<built-in function getitem>)
2022-01-24 14:09:02,874 DEBUG on stmt: $30.6 = call $30.2($30.5, func=$30.2, args=[Var($30.5, algebra.py:409)], kws=(), vararg=None)
2022-01-24 14:09:02,874 DEBUG on stmt: bool42 = global(bool: <class 'bool'>)
2022-01-24 14:09:02,874 DEBUG on stmt: $42pred = call bool42($30.6, func=bool42, args=(Var($30.6, algebra.py:409),), kws=(), vararg=None)
2022-01-24 14:09:02,874 DEBUG on stmt: $phi56.3 = $30.6
2022-01-24 14:09:02,874 DEBUG replaced with: $phi56.3.2 = $30.6
2022-01-24 14:09:02,874 DEBUG on stmt: branch $42pred, 44, 56
2022-01-24 14:09:02,874 DEBUG ==== SSA block rewrite pass on 44
2022-01-24 14:09:02,874 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94ecfbeb70>
2022-01-24 14:09:02,874 DEBUG on stmt: $44.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:09:02,874 DEBUG on stmt: $44.2 = getattr(value=$44.1, attr=isfinite)
2022-01-24 14:09:02,874 DEBUG on stmt: $const44.4 = const(int, 3)
2022-01-24 14:09:02,874 DEBUG on stmt: $44.5 = static_getitem(value=qin, index=3, index_var=$const44.4, fn=<built-in function getitem>)
2022-01-24 14:09:02,874 DEBUG on stmt: $44.6 = call $44.2($44.5, func=$44.2, args=[Var($44.5, algebra.py:409)], kws=(), vararg=None)
2022-01-24 14:09:02,875 DEBUG on stmt: $phi56.3 = $44.6
2022-01-24 14:09:02,875 DEBUG replaced with: $phi56.3.3 = $44.6
2022-01-24 14:09:02,875 DEBUG on stmt: jump 56
2022-01-24 14:09:02,875 DEBUG ==== SSA block rewrite pass on 56
2022-01-24 14:09:02,875 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94ecfbeb70>
2022-01-24 14:09:02,875 DEBUG on stmt: $const56.2 = const(int, 0)
2022-01-24 14:09:02,875 DEBUG on stmt: bout[0] = $phi56.3
2022-01-24 14:09:02,875 DEBUG on stmt: $const56.4 = const(NoneType, None)
2022-01-24 14:09:02,875 DEBUG on stmt: $56.5 = cast(value=$const56.4)
2022-01-24 14:09:02,875 DEBUG on stmt: return $56.5
2022-01-24 14:09:02,875 DEBUG Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f94ecf92828>],
             16: [<numba.core.ir.Assign object at 0x7f94ecf92780>],
             30: [<numba.core.ir.Assign object at 0x7f94ecf92860>],
             44: [<numba.core.ir.Assign object at 0x7f94ecf92518>]})
2022-01-24 14:09:02,875 DEBUG ==== SSA block rewrite pass on 0
2022-01-24 14:09:02,875 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94ecf926a0>
2022-01-24 14:09:02,875 DEBUG on stmt: qin = arg(0, name=qin)
2022-01-24 14:09:02,875 DEBUG on stmt: bout = arg(1, name=bout)
2022-01-24 14:09:02,875 DEBUG on stmt: $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:09:02,875 DEBUG on stmt: $0.2 = getattr(value=$0.1, attr=isfinite)
2022-01-24 14:09:02,875 DEBUG on stmt: $const0.4 = const(int, 0)
2022-01-24 14:09:02,875 DEBUG on stmt: $0.5 = static_getitem(value=qin, index=0, index_var=$const0.4, fn=<built-in function getitem>)
2022-01-24 14:09:02,875 DEBUG on stmt: $0.6 = call $0.2($0.5, func=$0.2, args=[Var($0.5, algebra.py:409)], kws=(), vararg=None)
2022-01-24 14:09:02,875 DEBUG on stmt: bool14 = global(bool: <class 'bool'>)
2022-01-24 14:09:02,875 DEBUG on stmt: $14pred = call bool14($0.6, func=bool14, args=(Var($0.6, algebra.py:409),), kws=(), vararg=None)
2022-01-24 14:09:02,876 DEBUG on stmt: $phi56.3 = $0.6
2022-01-24 14:09:02,876 DEBUG on stmt: branch $14pred, 16, 56
2022-01-24 14:09:02,876 DEBUG ==== SSA block rewrite pass on 16
2022-01-24 14:09:02,876 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94ecf926a0>
2022-01-24 14:09:02,876 DEBUG on stmt: $16.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:09:02,876 DEBUG on stmt: $16.2 = getattr(value=$16.1, attr=isfinite)
2022-01-24 14:09:02,876 DEBUG on stmt: $const16.4 = const(int, 1)
2022-01-24 14:09:02,876 DEBUG on stmt: $16.5 = static_getitem(value=qin, index=1, index_var=$const16.4, fn=<built-in function getitem>)
2022-01-24 14:09:02,876 DEBUG on stmt: $16.6 = call $16.2($16.5, func=$16.2, args=[Var($16.5, algebra.py:409)], kws=(), vararg=None)
2022-01-24 14:09:02,876 DEBUG on stmt: bool28 = global(bool: <class 'bool'>)
2022-01-24 14:09:02,876 DEBUG on stmt: $28pred = call bool28($16.6, func=bool28, args=(Var($16.6, algebra.py:409),), kws=(), vararg=None)
2022-01-24 14:09:02,876 DEBUG on stmt: $phi56.3.1 = $16.6
2022-01-24 14:09:02,876 DEBUG on stmt: branch $28pred, 30, 56
2022-01-24 14:09:02,876 DEBUG ==== SSA block rewrite pass on 30
2022-01-24 14:09:02,876 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94ecf926a0>
2022-01-24 14:09:02,876 DEBUG on stmt: $30.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:09:02,876 DEBUG on stmt: $30.2 = getattr(value=$30.1, attr=isfinite)
2022-01-24 14:09:02,876 DEBUG on stmt: $const30.4 = const(int, 2)
2022-01-24 14:09:02,876 DEBUG on stmt: $30.5 = static_getitem(value=qin, index=2, index_var=$const30.4, fn=<built-in function getitem>)
2022-01-24 14:09:02,876 DEBUG on stmt: $30.6 = call $30.2($30.5, func=$30.2, args=[Var($30.5, algebra.py:409)], kws=(), vararg=None)
2022-01-24 14:09:02,876 DEBUG on stmt: bool42 = global(bool: <class 'bool'>)
2022-01-24 14:09:02,876 DEBUG on stmt: $42pred = call bool42($30.6, func=bool42, args=(Var($30.6, algebra.py:409),), kws=(), vararg=None)
2022-01-24 14:09:02,876 DEBUG on stmt: $phi56.3.2 = $30.6
2022-01-24 14:09:02,876 DEBUG on stmt: branch $42pred, 44, 56
2022-01-24 14:09:02,876 DEBUG ==== SSA block rewrite pass on 44
2022-01-24 14:09:02,877 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94ecf926a0>
2022-01-24 14:09:02,877 DEBUG on stmt: $44.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:09:02,877 DEBUG on stmt: $44.2 = getattr(value=$44.1, attr=isfinite)
2022-01-24 14:09:02,877 DEBUG on stmt: $const44.4 = const(int, 3)
2022-01-24 14:09:02,877 DEBUG on stmt: $44.5 = static_getitem(value=qin, index=3, index_var=$const44.4, fn=<built-in function getitem>)
2022-01-24 14:09:02,877 DEBUG on stmt: $44.6 = call $44.2($44.5, func=$44.2, args=[Var($44.5, algebra.py:409)], kws=(), vararg=None)
2022-01-24 14:09:02,877 DEBUG on stmt: $phi56.3.3 = $44.6
2022-01-24 14:09:02,877 DEBUG on stmt: jump 56
2022-01-24 14:09:02,877 DEBUG ==== SSA block rewrite pass on 56
2022-01-24 14:09:02,877 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94ecf926a0>
2022-01-24 14:09:02,877 DEBUG on stmt: $const56.2 = const(int, 0)
2022-01-24 14:09:02,877 DEBUG on stmt: bout[0] = $phi56.3
2022-01-24 14:09:02,877 DEBUG find_def var='$phi56.3' stmt=bout[0] = $phi56.3
2022-01-24 14:09:02,877 DEBUG find_def_from_top label 56
2022-01-24 14:09:02,877 DEBUG insert phi node $phi56.3.4 = phi(incoming_values=[], incoming_blocks=[]) at 56
2022-01-24 14:09:02,877 DEBUG find_def_from_bottom label 0
2022-01-24 14:09:02,877 DEBUG incoming_def $phi56.3 = $0.6
2022-01-24 14:09:02,877 DEBUG find_def_from_bottom label 16
2022-01-24 14:09:02,877 DEBUG incoming_def $phi56.3.1 = $16.6
2022-01-24 14:09:02,877 DEBUG find_def_from_bottom label 44
2022-01-24 14:09:02,877 DEBUG incoming_def $phi56.3.3 = $44.6
2022-01-24 14:09:02,877 DEBUG find_def_from_bottom label 30
2022-01-24 14:09:02,877 DEBUG incoming_def $phi56.3.2 = $30.6
2022-01-24 14:09:02,877 DEBUG replaced with: bout[0] = $phi56.3.4
2022-01-24 14:09:02,877 DEBUG on stmt: $const56.4 = const(NoneType, None)
2022-01-24 14:09:02,877 DEBUG on stmt: $56.5 = cast(value=$const56.4)
2022-01-24 14:09:02,877 DEBUG on stmt: return $56.5
2022-01-24 14:09:02,949 DEBUG label 0:
    qin = arg(0, name=qin)                   ['qin']
    bout = arg(1, name=bout)                 ['bout']
    $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$0.1']
    $0.2 = getattr(value=$0.1, attr=isinf)   ['$0.1', '$0.2']
    $const0.4 = const(int, 0)                ['$const0.4']
    $0.5 = getitem(value=qin, index=$const0.4, fn=<built-in function getitem>) ['$0.5', '$const0.4', 'qin']
    $0.6 = call $0.2($0.5, func=$0.2, args=[Var($0.5, algebra.py:414)], kws=(), vararg=None) ['$0.2', '$0.5', '$0.6']
    bool14 = global(bool: <class 'bool'>)    ['bool14']
    $14pred = call bool14($0.6, func=bool14, args=(Var($0.6, algebra.py:414),), kws=(), vararg=None) ['$0.6', '$14pred', 'bool14']
    $phi56.3 = $0.6                          ['$0.6', '$phi56.3']
    branch $14pred, 56, 16                   ['$14pred']
label 16:
    $16.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$16.1']
    $16.2 = getattr(value=$16.1, attr=isinf) ['$16.1', '$16.2']
    $const16.4 = const(int, 1)               ['$const16.4']
    $16.5 = getitem(value=qin, index=$const16.4, fn=<built-in function getitem>) ['$16.5', '$const16.4', 'qin']
    $16.6 = call $16.2($16.5, func=$16.2, args=[Var($16.5, algebra.py:414)], kws=(), vararg=None) ['$16.2', '$16.5', '$16.6']
    bool28 = global(bool: <class 'bool'>)    ['bool28']
    $28pred = call bool28($16.6, func=bool28, args=(Var($16.6, algebra.py:414),), kws=(), vararg=None) ['$16.6', '$28pred', 'bool28']
    $phi56.3 = $16.6                         ['$16.6', '$phi56.3']
    branch $28pred, 56, 30                   ['$28pred']
label 30:
    $30.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$30.1']
    $30.2 = getattr(value=$30.1, attr=isinf) ['$30.1', '$30.2']
    $const30.4 = const(int, 2)               ['$const30.4']
    $30.5 = getitem(value=qin, index=$const30.4, fn=<built-in function getitem>) ['$30.5', '$const30.4', 'qin']
    $30.6 = call $30.2($30.5, func=$30.2, args=[Var($30.5, algebra.py:414)], kws=(), vararg=None) ['$30.2', '$30.5', '$30.6']
    bool42 = global(bool: <class 'bool'>)    ['bool42']
    $42pred = call bool42($30.6, func=bool42, args=(Var($30.6, algebra.py:414),), kws=(), vararg=None) ['$30.6', '$42pred', 'bool42']
    $phi56.3 = $30.6                         ['$30.6', '$phi56.3']
    branch $42pred, 56, 44                   ['$42pred']
label 44:
    $44.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$44.1']
    $44.2 = getattr(value=$44.1, attr=isinf) ['$44.1', '$44.2']
    $const44.4 = const(int, 3)               ['$const44.4']
    $44.5 = getitem(value=qin, index=$const44.4, fn=<built-in function getitem>) ['$44.5', '$const44.4', 'qin']
    $44.6 = call $44.2($44.5, func=$44.2, args=[Var($44.5, algebra.py:414)], kws=(), vararg=None) ['$44.2', '$44.5', '$44.6']
    $phi56.3 = $44.6                         ['$44.6', '$phi56.3']
    jump 56                                  []
label 56:
    $const56.2 = const(int, 0)               ['$const56.2']
    bout[$const56.2] = $phi56.3              ['$const56.2', '$phi56.3', 'bout']
    $const56.4 = const(NoneType, None)       ['$const56.4']
    $56.5 = cast(value=$const56.4)           ['$56.5', '$const56.4']
    return $56.5                             ['$56.5']

2022-01-24 14:09:02,954 DEBUG ==== SSA block analysis pass on 0
2022-01-24 14:09:02,954 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ecdfee10>
2022-01-24 14:09:02,954 DEBUG on stmt: qin = arg(0, name=qin)
2022-01-24 14:09:02,954 DEBUG on stmt: bout = arg(1, name=bout)
2022-01-24 14:09:02,954 DEBUG on stmt: $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:09:02,954 DEBUG on stmt: $0.2 = getattr(value=$0.1, attr=isinf)
2022-01-24 14:09:02,954 DEBUG on stmt: $const0.4 = const(int, 0)
2022-01-24 14:09:02,954 DEBUG on stmt: $0.5 = static_getitem(value=qin, index=0, index_var=$const0.4, fn=<built-in function getitem>)
2022-01-24 14:09:02,954 DEBUG on stmt: $0.6 = call $0.2($0.5, func=$0.2, args=[Var($0.5, algebra.py:414)], kws=(), vararg=None)
2022-01-24 14:09:02,954 DEBUG on stmt: bool14 = global(bool: <class 'bool'>)
2022-01-24 14:09:02,954 DEBUG on stmt: $14pred = call bool14($0.6, func=bool14, args=(Var($0.6, algebra.py:414),), kws=(), vararg=None)
2022-01-24 14:09:02,954 DEBUG on stmt: $phi56.3 = $0.6
2022-01-24 14:09:02,954 DEBUG on stmt: branch $14pred, 56, 16
2022-01-24 14:09:02,954 DEBUG ==== SSA block analysis pass on 16
2022-01-24 14:09:02,954 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ecdfee10>
2022-01-24 14:09:02,954 DEBUG on stmt: $16.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:09:02,954 DEBUG on stmt: $16.2 = getattr(value=$16.1, attr=isinf)
2022-01-24 14:09:02,954 DEBUG on stmt: $const16.4 = const(int, 1)
2022-01-24 14:09:02,954 DEBUG on stmt: $16.5 = static_getitem(value=qin, index=1, index_var=$const16.4, fn=<built-in function getitem>)
2022-01-24 14:09:02,954 DEBUG on stmt: $16.6 = call $16.2($16.5, func=$16.2, args=[Var($16.5, algebra.py:414)], kws=(), vararg=None)
2022-01-24 14:09:02,955 DEBUG on stmt: bool28 = global(bool: <class 'bool'>)
2022-01-24 14:09:02,955 DEBUG on stmt: $28pred = call bool28($16.6, func=bool28, args=(Var($16.6, algebra.py:414),), kws=(), vararg=None)
2022-01-24 14:09:02,955 DEBUG on stmt: $phi56.3 = $16.6
2022-01-24 14:09:02,955 DEBUG on stmt: branch $28pred, 56, 30
2022-01-24 14:09:02,955 DEBUG ==== SSA block analysis pass on 30
2022-01-24 14:09:02,955 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ecdfee10>
2022-01-24 14:09:02,955 DEBUG on stmt: $30.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:09:02,955 DEBUG on stmt: $30.2 = getattr(value=$30.1, attr=isinf)
2022-01-24 14:09:02,955 DEBUG on stmt: $const30.4 = const(int, 2)
2022-01-24 14:09:02,955 DEBUG on stmt: $30.5 = static_getitem(value=qin, index=2, index_var=$const30.4, fn=<built-in function getitem>)
2022-01-24 14:09:02,955 DEBUG on stmt: $30.6 = call $30.2($30.5, func=$30.2, args=[Var($30.5, algebra.py:414)], kws=(), vararg=None)
2022-01-24 14:09:02,955 DEBUG on stmt: bool42 = global(bool: <class 'bool'>)
2022-01-24 14:09:02,955 DEBUG on stmt: $42pred = call bool42($30.6, func=bool42, args=(Var($30.6, algebra.py:414),), kws=(), vararg=None)
2022-01-24 14:09:02,955 DEBUG on stmt: $phi56.3 = $30.6
2022-01-24 14:09:02,955 DEBUG on stmt: branch $42pred, 56, 44
2022-01-24 14:09:02,955 DEBUG ==== SSA block analysis pass on 44
2022-01-24 14:09:02,955 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ecdfee10>
2022-01-24 14:09:02,955 DEBUG on stmt: $44.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:09:02,955 DEBUG on stmt: $44.2 = getattr(value=$44.1, attr=isinf)
2022-01-24 14:09:02,955 DEBUG on stmt: $const44.4 = const(int, 3)
2022-01-24 14:09:02,956 DEBUG on stmt: $44.5 = static_getitem(value=qin, index=3, index_var=$const44.4, fn=<built-in function getitem>)
2022-01-24 14:09:02,956 DEBUG on stmt: $44.6 = call $44.2($44.5, func=$44.2, args=[Var($44.5, algebra.py:414)], kws=(), vararg=None)
2022-01-24 14:09:02,956 DEBUG on stmt: $phi56.3 = $44.6
2022-01-24 14:09:02,956 DEBUG on stmt: jump 56
2022-01-24 14:09:02,956 DEBUG ==== SSA block analysis pass on 56
2022-01-24 14:09:02,956 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ecdfee10>
2022-01-24 14:09:02,956 DEBUG on stmt: $const56.2 = const(int, 0)
2022-01-24 14:09:02,956 DEBUG on stmt: bout[0] = $phi56.3
2022-01-24 14:09:02,956 DEBUG on stmt: $const56.4 = const(NoneType, None)
2022-01-24 14:09:02,956 DEBUG on stmt: $56.5 = cast(value=$const56.4)
2022-01-24 14:09:02,956 DEBUG on stmt: return $56.5
2022-01-24 14:09:02,956 DEBUG defs defaultdict(<class 'list'>,
            {'$0.1': [<numba.core.ir.Assign object at 0x7f94ecdfa780>],
             '$0.2': [<numba.core.ir.Assign object at 0x7f94ecdfa908>],
             '$0.5': [<numba.core.ir.Assign object at 0x7f94ecbe5b38>],
             '$0.6': [<numba.core.ir.Assign object at 0x7f94ecdfabe0>],
             '$14pred': [<numba.core.ir.Assign object at 0x7f94ecdfadd8>],
             '$16.1': [<numba.core.ir.Assign object at 0x7f94ecdfaf98>],
             '$16.2': [<numba.core.ir.Assign object at 0x7f94ecdfaa20>],
             '$16.5': [<numba.core.ir.Assign object at 0x7f94ecdfe8d0>],
             '$16.6': [<numba.core.ir.Assign object at 0x7f94ecbc2208>],
             '$28pred': [<numba.core.ir.Assign object at 0x7f94ecbc2400>],
             '$30.1': [<numba.core.ir.Assign object at 0x7f94ecbc2588>],
             '$30.2': [<numba.core.ir.Assign object at 0x7f94ecbc2668>],
             '$30.5': [<numba.core.ir.Assign object at 0x7f94ecdfec50>],
             '$30.6': [<numba.core.ir.Assign object at 0x7f94ecbc29b0>],
             '$42pred': [<numba.core.ir.Assign object at 0x7f94ecbc2ba8>],
             '$44.1': [<numba.core.ir.Assign object at 0x7f94ecbc2d30>],
             '$44.2': [<numba.core.ir.Assign object at 0x7f94ecbc2e10>],
             '$44.5': [<numba.core.ir.Assign object at 0x7f94ecdfe9b0>],
             '$44.6': [<numba.core.ir.Assign object at 0x7f94ecbe5198>],
             '$56.5': [<numba.core.ir.Assign object at 0x7f94ecbe55c0>],
             '$const0.4': [<numba.core.ir.Assign object at 0x7f94ecdfa748>],
             '$const16.4': [<numba.core.ir.Assign object at 0x7f94ecbc2048>],
             '$const30.4': [<numba.core.ir.Assign object at 0x7f94ecbc27f0>],
             '$const44.4': [<numba.core.ir.Assign object at 0x7f94ecbc2f98>],
             '$const56.2': [<numba.core.ir.Assign object at 0x7f94ecbe5390>],
             '$const56.4': [<numba.core.ir.Assign object at 0x7f94ecbe54e0>],
             '$phi56.3': [<numba.core.ir.Assign object at 0x7f94ecdfa588>,
                          <numba.core.ir.Assign object at 0x7f94ecdfa208>,
                          <numba.core.ir.Assign object at 0x7f94ecdfaef0>,
                          <numba.core.ir.Assign object at 0x7f94ecbc2eb8>],
             'bool14': [<numba.core.ir.Assign object at 0x7f94ecdfad30>],
             'bool28': [<numba.core.ir.Assign object at 0x7f94ecbc2320>],
             'bool42': [<numba.core.ir.Assign object at 0x7f94ecbc2ac8>],
             'bout': [<numba.core.ir.Assign object at 0x7f94ecdfa550>],
             'qin': [<numba.core.ir.Assign object at 0x7f94ecdfa5c0>]})
2022-01-24 14:09:02,957 DEBUG SSA violators {'$phi56.3'}
2022-01-24 14:09:02,957 DEBUG Fix SSA violator on var $phi56.3
2022-01-24 14:09:02,957 DEBUG ==== SSA block rewrite pass on 0
2022-01-24 14:09:02,957 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94ecdfee10>
2022-01-24 14:09:02,957 DEBUG on stmt: qin = arg(0, name=qin)
2022-01-24 14:09:02,957 DEBUG on stmt: bout = arg(1, name=bout)
2022-01-24 14:09:02,957 DEBUG on stmt: $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:09:02,957 DEBUG on stmt: $0.2 = getattr(value=$0.1, attr=isinf)
2022-01-24 14:09:02,957 DEBUG on stmt: $const0.4 = const(int, 0)
2022-01-24 14:09:02,957 DEBUG on stmt: $0.5 = static_getitem(value=qin, index=0, index_var=$const0.4, fn=<built-in function getitem>)
2022-01-24 14:09:02,957 DEBUG on stmt: $0.6 = call $0.2($0.5, func=$0.2, args=[Var($0.5, algebra.py:414)], kws=(), vararg=None)
2022-01-24 14:09:02,957 DEBUG on stmt: bool14 = global(bool: <class 'bool'>)
2022-01-24 14:09:02,957 DEBUG on stmt: $14pred = call bool14($0.6, func=bool14, args=(Var($0.6, algebra.py:414),), kws=(), vararg=None)
2022-01-24 14:09:02,957 DEBUG on stmt: $phi56.3 = $0.6
2022-01-24 14:09:02,957 DEBUG first assign: $phi56.3
2022-01-24 14:09:02,957 DEBUG replaced with: $phi56.3 = $0.6
2022-01-24 14:09:02,957 DEBUG on stmt: branch $14pred, 56, 16
2022-01-24 14:09:02,957 DEBUG ==== SSA block rewrite pass on 16
2022-01-24 14:09:02,957 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94ecdfee10>
2022-01-24 14:09:02,957 DEBUG on stmt: $16.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:09:02,957 DEBUG on stmt: $16.2 = getattr(value=$16.1, attr=isinf)
2022-01-24 14:09:02,957 DEBUG on stmt: $const16.4 = const(int, 1)
2022-01-24 14:09:02,957 DEBUG on stmt: $16.5 = static_getitem(value=qin, index=1, index_var=$const16.4, fn=<built-in function getitem>)
2022-01-24 14:09:02,957 DEBUG on stmt: $16.6 = call $16.2($16.5, func=$16.2, args=[Var($16.5, algebra.py:414)], kws=(), vararg=None)
2022-01-24 14:09:02,957 DEBUG on stmt: bool28 = global(bool: <class 'bool'>)
2022-01-24 14:09:02,958 DEBUG on stmt: $28pred = call bool28($16.6, func=bool28, args=(Var($16.6, algebra.py:414),), kws=(), vararg=None)
2022-01-24 14:09:02,958 DEBUG on stmt: $phi56.3 = $16.6
2022-01-24 14:09:02,958 DEBUG replaced with: $phi56.3.1 = $16.6
2022-01-24 14:09:02,958 DEBUG on stmt: branch $28pred, 56, 30
2022-01-24 14:09:02,958 DEBUG ==== SSA block rewrite pass on 30
2022-01-24 14:09:02,958 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94ecdfee10>
2022-01-24 14:09:02,958 DEBUG on stmt: $30.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:09:02,958 DEBUG on stmt: $30.2 = getattr(value=$30.1, attr=isinf)
2022-01-24 14:09:02,958 DEBUG on stmt: $const30.4 = const(int, 2)
2022-01-24 14:09:02,958 DEBUG on stmt: $30.5 = static_getitem(value=qin, index=2, index_var=$const30.4, fn=<built-in function getitem>)
2022-01-24 14:09:02,958 DEBUG on stmt: $30.6 = call $30.2($30.5, func=$30.2, args=[Var($30.5, algebra.py:414)], kws=(), vararg=None)
2022-01-24 14:09:02,958 DEBUG on stmt: bool42 = global(bool: <class 'bool'>)
2022-01-24 14:09:02,958 DEBUG on stmt: $42pred = call bool42($30.6, func=bool42, args=(Var($30.6, algebra.py:414),), kws=(), vararg=None)
2022-01-24 14:09:02,958 DEBUG on stmt: $phi56.3 = $30.6
2022-01-24 14:09:02,958 DEBUG replaced with: $phi56.3.2 = $30.6
2022-01-24 14:09:02,958 DEBUG on stmt: branch $42pred, 56, 44
2022-01-24 14:09:02,958 DEBUG ==== SSA block rewrite pass on 44
2022-01-24 14:09:02,958 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94ecdfee10>
2022-01-24 14:09:02,958 DEBUG on stmt: $44.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:09:02,958 DEBUG on stmt: $44.2 = getattr(value=$44.1, attr=isinf)
2022-01-24 14:09:02,958 DEBUG on stmt: $const44.4 = const(int, 3)
2022-01-24 14:09:02,958 DEBUG on stmt: $44.5 = static_getitem(value=qin, index=3, index_var=$const44.4, fn=<built-in function getitem>)
2022-01-24 14:09:02,958 DEBUG on stmt: $44.6 = call $44.2($44.5, func=$44.2, args=[Var($44.5, algebra.py:414)], kws=(), vararg=None)
2022-01-24 14:09:02,958 DEBUG on stmt: $phi56.3 = $44.6
2022-01-24 14:09:02,958 DEBUG replaced with: $phi56.3.3 = $44.6
2022-01-24 14:09:02,959 DEBUG on stmt: jump 56
2022-01-24 14:09:02,959 DEBUG ==== SSA block rewrite pass on 56
2022-01-24 14:09:02,959 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94ecdfee10>
2022-01-24 14:09:02,959 DEBUG on stmt: $const56.2 = const(int, 0)
2022-01-24 14:09:02,959 DEBUG on stmt: bout[0] = $phi56.3
2022-01-24 14:09:02,959 DEBUG on stmt: $const56.4 = const(NoneType, None)
2022-01-24 14:09:02,959 DEBUG on stmt: $56.5 = cast(value=$const56.4)
2022-01-24 14:09:02,959 DEBUG on stmt: return $56.5
2022-01-24 14:09:02,959 DEBUG Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f94ecbe57f0>],
             16: [<numba.core.ir.Assign object at 0x7f94ecbe59e8>],
             30: [<numba.core.ir.Assign object at 0x7f94ecbe59b0>],
             44: [<numba.core.ir.Assign object at 0x7f94ecbe5860>]})
2022-01-24 14:09:02,959 DEBUG ==== SSA block rewrite pass on 0
2022-01-24 14:09:02,959 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94ecbe58d0>
2022-01-24 14:09:02,959 DEBUG on stmt: qin = arg(0, name=qin)
2022-01-24 14:09:02,959 DEBUG on stmt: bout = arg(1, name=bout)
2022-01-24 14:09:02,959 DEBUG on stmt: $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:09:02,959 DEBUG on stmt: $0.2 = getattr(value=$0.1, attr=isinf)
2022-01-24 14:09:02,959 DEBUG on stmt: $const0.4 = const(int, 0)
2022-01-24 14:09:02,959 DEBUG on stmt: $0.5 = static_getitem(value=qin, index=0, index_var=$const0.4, fn=<built-in function getitem>)
2022-01-24 14:09:02,959 DEBUG on stmt: $0.6 = call $0.2($0.5, func=$0.2, args=[Var($0.5, algebra.py:414)], kws=(), vararg=None)
2022-01-24 14:09:02,960 DEBUG on stmt: bool14 = global(bool: <class 'bool'>)
2022-01-24 14:09:02,960 DEBUG on stmt: $14pred = call bool14($0.6, func=bool14, args=(Var($0.6, algebra.py:414),), kws=(), vararg=None)
2022-01-24 14:09:02,960 DEBUG on stmt: $phi56.3 = $0.6
2022-01-24 14:09:02,960 DEBUG on stmt: branch $14pred, 56, 16
2022-01-24 14:09:02,960 DEBUG ==== SSA block rewrite pass on 16
2022-01-24 14:09:02,960 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94ecbe58d0>
2022-01-24 14:09:02,960 DEBUG on stmt: $16.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:09:02,960 DEBUG on stmt: $16.2 = getattr(value=$16.1, attr=isinf)
2022-01-24 14:09:02,960 DEBUG on stmt: $const16.4 = const(int, 1)
2022-01-24 14:09:02,960 DEBUG on stmt: $16.5 = static_getitem(value=qin, index=1, index_var=$const16.4, fn=<built-in function getitem>)
2022-01-24 14:09:02,960 DEBUG on stmt: $16.6 = call $16.2($16.5, func=$16.2, args=[Var($16.5, algebra.py:414)], kws=(), vararg=None)
2022-01-24 14:09:02,960 DEBUG on stmt: bool28 = global(bool: <class 'bool'>)
2022-01-24 14:09:02,960 DEBUG on stmt: $28pred = call bool28($16.6, func=bool28, args=(Var($16.6, algebra.py:414),), kws=(), vararg=None)
2022-01-24 14:09:02,960 DEBUG on stmt: $phi56.3.1 = $16.6
2022-01-24 14:09:02,960 DEBUG on stmt: branch $28pred, 56, 30
2022-01-24 14:09:02,960 DEBUG ==== SSA block rewrite pass on 30
2022-01-24 14:09:02,960 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94ecbe58d0>
2022-01-24 14:09:02,960 DEBUG on stmt: $30.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:09:02,960 DEBUG on stmt: $30.2 = getattr(value=$30.1, attr=isinf)
2022-01-24 14:09:02,960 DEBUG on stmt: $const30.4 = const(int, 2)
2022-01-24 14:09:02,960 DEBUG on stmt: $30.5 = static_getitem(value=qin, index=2, index_var=$const30.4, fn=<built-in function getitem>)
2022-01-24 14:09:02,960 DEBUG on stmt: $30.6 = call $30.2($30.5, func=$30.2, args=[Var($30.5, algebra.py:414)], kws=(), vararg=None)
2022-01-24 14:09:02,960 DEBUG on stmt: bool42 = global(bool: <class 'bool'>)
2022-01-24 14:09:02,960 DEBUG on stmt: $42pred = call bool42($30.6, func=bool42, args=(Var($30.6, algebra.py:414),), kws=(), vararg=None)
2022-01-24 14:09:02,960 DEBUG on stmt: $phi56.3.2 = $30.6
2022-01-24 14:09:02,961 DEBUG on stmt: branch $42pred, 56, 44
2022-01-24 14:09:02,961 DEBUG ==== SSA block rewrite pass on 44
2022-01-24 14:09:02,961 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94ecbe58d0>
2022-01-24 14:09:02,961 DEBUG on stmt: $44.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:09:02,961 DEBUG on stmt: $44.2 = getattr(value=$44.1, attr=isinf)
2022-01-24 14:09:02,961 DEBUG on stmt: $const44.4 = const(int, 3)
2022-01-24 14:09:02,961 DEBUG on stmt: $44.5 = static_getitem(value=qin, index=3, index_var=$const44.4, fn=<built-in function getitem>)
2022-01-24 14:09:02,961 DEBUG on stmt: $44.6 = call $44.2($44.5, func=$44.2, args=[Var($44.5, algebra.py:414)], kws=(), vararg=None)
2022-01-24 14:09:02,961 DEBUG on stmt: $phi56.3.3 = $44.6
2022-01-24 14:09:02,961 DEBUG on stmt: jump 56
2022-01-24 14:09:02,961 DEBUG ==== SSA block rewrite pass on 56
2022-01-24 14:09:02,961 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94ecbe58d0>
2022-01-24 14:09:02,961 DEBUG on stmt: $const56.2 = const(int, 0)
2022-01-24 14:09:02,961 DEBUG on stmt: bout[0] = $phi56.3
2022-01-24 14:09:02,961 DEBUG find_def var='$phi56.3' stmt=bout[0] = $phi56.3
2022-01-24 14:09:02,961 DEBUG find_def_from_top label 56
2022-01-24 14:09:02,961 DEBUG insert phi node $phi56.3.4 = phi(incoming_values=[], incoming_blocks=[]) at 56
2022-01-24 14:09:02,961 DEBUG find_def_from_bottom label 0
2022-01-24 14:09:02,961 DEBUG incoming_def $phi56.3 = $0.6
2022-01-24 14:09:02,961 DEBUG find_def_from_bottom label 16
2022-01-24 14:09:02,961 DEBUG incoming_def $phi56.3.1 = $16.6
2022-01-24 14:09:02,961 DEBUG find_def_from_bottom label 44
2022-01-24 14:09:02,961 DEBUG incoming_def $phi56.3.3 = $44.6
2022-01-24 14:09:02,961 DEBUG find_def_from_bottom label 30
2022-01-24 14:09:02,961 DEBUG incoming_def $phi56.3.2 = $30.6
2022-01-24 14:09:02,961 DEBUG replaced with: bout[0] = $phi56.3.4
2022-01-24 14:09:02,962 DEBUG on stmt: $const56.4 = const(NoneType, None)
2022-01-24 14:09:02,962 DEBUG on stmt: $56.5 = cast(value=$const56.4)
2022-01-24 14:09:02,962 DEBUG on stmt: return $56.5
2022-01-24 14:09:03,036 DEBUG label 0:
    qin = arg(0, name=qin)                   ['qin']
    bout = arg(1, name=bout)                 ['bout']
    $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$0.1']
    $0.2 = getattr(value=$0.1, attr=isnan)   ['$0.1', '$0.2']
    $const0.4 = const(int, 0)                ['$const0.4']
    $0.5 = getitem(value=qin, index=$const0.4, fn=<built-in function getitem>) ['$0.5', '$const0.4', 'qin']
    $0.6 = call $0.2($0.5, func=$0.2, args=[Var($0.5, algebra.py:419)], kws=(), vararg=None) ['$0.2', '$0.5', '$0.6']
    bool14 = global(bool: <class 'bool'>)    ['bool14']
    $14pred = call bool14($0.6, func=bool14, args=(Var($0.6, algebra.py:419),), kws=(), vararg=None) ['$0.6', '$14pred', 'bool14']
    $phi56.3 = $0.6                          ['$0.6', '$phi56.3']
    branch $14pred, 56, 16                   ['$14pred']
label 16:
    $16.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$16.1']
    $16.2 = getattr(value=$16.1, attr=isnan) ['$16.1', '$16.2']
    $const16.4 = const(int, 1)               ['$const16.4']
    $16.5 = getitem(value=qin, index=$const16.4, fn=<built-in function getitem>) ['$16.5', '$const16.4', 'qin']
    $16.6 = call $16.2($16.5, func=$16.2, args=[Var($16.5, algebra.py:419)], kws=(), vararg=None) ['$16.2', '$16.5', '$16.6']
    bool28 = global(bool: <class 'bool'>)    ['bool28']
    $28pred = call bool28($16.6, func=bool28, args=(Var($16.6, algebra.py:419),), kws=(), vararg=None) ['$16.6', '$28pred', 'bool28']
    $phi56.3 = $16.6                         ['$16.6', '$phi56.3']
    branch $28pred, 56, 30                   ['$28pred']
label 30:
    $30.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$30.1']
    $30.2 = getattr(value=$30.1, attr=isnan) ['$30.1', '$30.2']
    $const30.4 = const(int, 2)               ['$const30.4']
    $30.5 = getitem(value=qin, index=$const30.4, fn=<built-in function getitem>) ['$30.5', '$const30.4', 'qin']
    $30.6 = call $30.2($30.5, func=$30.2, args=[Var($30.5, algebra.py:419)], kws=(), vararg=None) ['$30.2', '$30.5', '$30.6']
    bool42 = global(bool: <class 'bool'>)    ['bool42']
    $42pred = call bool42($30.6, func=bool42, args=(Var($30.6, algebra.py:419),), kws=(), vararg=None) ['$30.6', '$42pred', 'bool42']
    $phi56.3 = $30.6                         ['$30.6', '$phi56.3']
    branch $42pred, 56, 44                   ['$42pred']
label 44:
    $44.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>) ['$44.1']
    $44.2 = getattr(value=$44.1, attr=isnan) ['$44.1', '$44.2']
    $const44.4 = const(int, 3)               ['$const44.4']
    $44.5 = getitem(value=qin, index=$const44.4, fn=<built-in function getitem>) ['$44.5', '$const44.4', 'qin']
    $44.6 = call $44.2($44.5, func=$44.2, args=[Var($44.5, algebra.py:419)], kws=(), vararg=None) ['$44.2', '$44.5', '$44.6']
    $phi56.3 = $44.6                         ['$44.6', '$phi56.3']
    jump 56                                  []
label 56:
    $const56.2 = const(int, 0)               ['$const56.2']
    bout[$const56.2] = $phi56.3              ['$const56.2', '$phi56.3', 'bout']
    $const56.4 = const(NoneType, None)       ['$const56.4']
    $56.5 = cast(value=$const56.4)           ['$56.5', '$const56.4']
    return $56.5                             ['$56.5']

2022-01-24 14:09:03,041 DEBUG ==== SSA block analysis pass on 0
2022-01-24 14:09:03,041 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ecae08d0>
2022-01-24 14:09:03,041 DEBUG on stmt: qin = arg(0, name=qin)
2022-01-24 14:09:03,041 DEBUG on stmt: bout = arg(1, name=bout)
2022-01-24 14:09:03,041 DEBUG on stmt: $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:09:03,041 DEBUG on stmt: $0.2 = getattr(value=$0.1, attr=isnan)
2022-01-24 14:09:03,041 DEBUG on stmt: $const0.4 = const(int, 0)
2022-01-24 14:09:03,041 DEBUG on stmt: $0.5 = static_getitem(value=qin, index=0, index_var=$const0.4, fn=<built-in function getitem>)
2022-01-24 14:09:03,041 DEBUG on stmt: $0.6 = call $0.2($0.5, func=$0.2, args=[Var($0.5, algebra.py:419)], kws=(), vararg=None)
2022-01-24 14:09:03,041 DEBUG on stmt: bool14 = global(bool: <class 'bool'>)
2022-01-24 14:09:03,041 DEBUG on stmt: $14pred = call bool14($0.6, func=bool14, args=(Var($0.6, algebra.py:419),), kws=(), vararg=None)
2022-01-24 14:09:03,041 DEBUG on stmt: $phi56.3 = $0.6
2022-01-24 14:09:03,042 DEBUG on stmt: branch $14pred, 56, 16
2022-01-24 14:09:03,042 DEBUG ==== SSA block analysis pass on 16
2022-01-24 14:09:03,042 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ecae08d0>
2022-01-24 14:09:03,042 DEBUG on stmt: $16.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:09:03,042 DEBUG on stmt: $16.2 = getattr(value=$16.1, attr=isnan)
2022-01-24 14:09:03,042 DEBUG on stmt: $const16.4 = const(int, 1)
2022-01-24 14:09:03,042 DEBUG on stmt: $16.5 = static_getitem(value=qin, index=1, index_var=$const16.4, fn=<built-in function getitem>)
2022-01-24 14:09:03,042 DEBUG on stmt: $16.6 = call $16.2($16.5, func=$16.2, args=[Var($16.5, algebra.py:419)], kws=(), vararg=None)
2022-01-24 14:09:03,042 DEBUG on stmt: bool28 = global(bool: <class 'bool'>)
2022-01-24 14:09:03,042 DEBUG on stmt: $28pred = call bool28($16.6, func=bool28, args=(Var($16.6, algebra.py:419),), kws=(), vararg=None)
2022-01-24 14:09:03,042 DEBUG on stmt: $phi56.3 = $16.6
2022-01-24 14:09:03,042 DEBUG on stmt: branch $28pred, 56, 30
2022-01-24 14:09:03,042 DEBUG ==== SSA block analysis pass on 30
2022-01-24 14:09:03,042 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ecae08d0>
2022-01-24 14:09:03,042 DEBUG on stmt: $30.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:09:03,042 DEBUG on stmt: $30.2 = getattr(value=$30.1, attr=isnan)
2022-01-24 14:09:03,042 DEBUG on stmt: $const30.4 = const(int, 2)
2022-01-24 14:09:03,042 DEBUG on stmt: $30.5 = static_getitem(value=qin, index=2, index_var=$const30.4, fn=<built-in function getitem>)
2022-01-24 14:09:03,042 DEBUG on stmt: $30.6 = call $30.2($30.5, func=$30.2, args=[Var($30.5, algebra.py:419)], kws=(), vararg=None)
2022-01-24 14:09:03,042 DEBUG on stmt: bool42 = global(bool: <class 'bool'>)
2022-01-24 14:09:03,042 DEBUG on stmt: $42pred = call bool42($30.6, func=bool42, args=(Var($30.6, algebra.py:419),), kws=(), vararg=None)
2022-01-24 14:09:03,042 DEBUG on stmt: $phi56.3 = $30.6
2022-01-24 14:09:03,042 DEBUG on stmt: branch $42pred, 56, 44
2022-01-24 14:09:03,042 DEBUG ==== SSA block analysis pass on 44
2022-01-24 14:09:03,042 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ecae08d0>
2022-01-24 14:09:03,042 DEBUG on stmt: $44.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:09:03,043 DEBUG on stmt: $44.2 = getattr(value=$44.1, attr=isnan)
2022-01-24 14:09:03,043 DEBUG on stmt: $const44.4 = const(int, 3)
2022-01-24 14:09:03,043 DEBUG on stmt: $44.5 = static_getitem(value=qin, index=3, index_var=$const44.4, fn=<built-in function getitem>)
2022-01-24 14:09:03,043 DEBUG on stmt: $44.6 = call $44.2($44.5, func=$44.2, args=[Var($44.5, algebra.py:419)], kws=(), vararg=None)
2022-01-24 14:09:03,043 DEBUG on stmt: $phi56.3 = $44.6
2022-01-24 14:09:03,043 DEBUG on stmt: jump 56
2022-01-24 14:09:03,043 DEBUG ==== SSA block analysis pass on 56
2022-01-24 14:09:03,043 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ecae08d0>
2022-01-24 14:09:03,043 DEBUG on stmt: $const56.2 = const(int, 0)
2022-01-24 14:09:03,043 DEBUG on stmt: bout[0] = $phi56.3
2022-01-24 14:09:03,043 DEBUG on stmt: $const56.4 = const(NoneType, None)
2022-01-24 14:09:03,043 DEBUG on stmt: $56.5 = cast(value=$const56.4)
2022-01-24 14:09:03,043 DEBUG on stmt: return $56.5
2022-01-24 14:09:03,043 DEBUG defs defaultdict(<class 'list'>,
            {'$0.1': [<numba.core.ir.Assign object at 0x7f94ecdf61d0>],
             '$0.2': [<numba.core.ir.Assign object at 0x7f94ecdf62b0>],
             '$0.5': [<numba.core.ir.Assign object at 0x7f94ecae0860>],
             '$0.6': [<numba.core.ir.Assign object at 0x7f94ecdf65f8>],
             '$14pred': [<numba.core.ir.Assign object at 0x7f94ecdf67f0>],
             '$16.1': [<numba.core.ir.Assign object at 0x7f94ecdf69b0>],
             '$16.2': [<numba.core.ir.Assign object at 0x7f94ecdf6a90>],
             '$16.5': [<numba.core.ir.Assign object at 0x7f94ecae0f28>],
             '$16.6': [<numba.core.ir.Assign object at 0x7f94ecdf6dd8>],
             '$28pred': [<numba.core.ir.Assign object at 0x7f94ecdf6fd0>],
             '$30.1': [<numba.core.ir.Assign object at 0x7f94ecddc0b8>],
             '$30.2': [<numba.core.ir.Assign object at 0x7f94ecddc978>],
             '$30.5': [<numba.core.ir.Assign object at 0x7f94ecae07b8>],
             '$30.6': [<numba.core.ir.Assign object at 0x7f94ecddceb8>],
             '$42pred': [<numba.core.ir.Assign object at 0x7f94ecddc8d0>],
             '$44.1': [<numba.core.ir.Assign object at 0x7f94ecddcdd8>],
             '$44.2': [<numba.core.ir.Assign object at 0x7f94ecddc860>],
             '$44.5': [<numba.core.ir.Assign object at 0x7f94ecae07f0>],
             '$44.6': [<numba.core.ir.Assign object at 0x7f94ecddc208>],
             '$56.5': [<numba.core.ir.Assign object at 0x7f94ecad11d0>],
             '$const0.4': [<numba.core.ir.Assign object at 0x7f94ecdf6438>],
             '$const16.4': [<numba.core.ir.Assign object at 0x7f94ecdf6c18>],
             '$const30.4': [<numba.core.ir.Assign object at 0x7f94ecddc5c0>],
             '$const44.4': [<numba.core.ir.Assign object at 0x7f94ecddc198>],
             '$const56.2': [<numba.core.ir.Assign object at 0x7f94ecddc320>],
             '$const56.4': [<numba.core.ir.Assign object at 0x7f94ecad10f0>],
             '$phi56.3': [<numba.core.ir.Assign object at 0x7f94ecdf6358>,
                          <numba.core.ir.Assign object at 0x7f94ecdf6b38>,
                          <numba.core.ir.Assign object at 0x7f94ecdf68d0>,
                          <numba.core.ir.Assign object at 0x7f94ecddce10>],
             'bool14': [<numba.core.ir.Assign object at 0x7f94ecdf6710>],
             'bool28': [<numba.core.ir.Assign object at 0x7f94ecdf6ef0>],
             'bool42': [<numba.core.ir.Assign object at 0x7f94ecddc240>],
             'bout': [<numba.core.ir.Assign object at 0x7f94ecdf60f0>],
             'qin': [<numba.core.ir.Assign object at 0x7f94ecdf6048>]})
2022-01-24 14:09:03,043 DEBUG SSA violators {'$phi56.3'}
2022-01-24 14:09:03,044 DEBUG Fix SSA violator on var $phi56.3
2022-01-24 14:09:03,044 DEBUG ==== SSA block rewrite pass on 0
2022-01-24 14:09:03,044 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94ecae08d0>
2022-01-24 14:09:03,044 DEBUG on stmt: qin = arg(0, name=qin)
2022-01-24 14:09:03,044 DEBUG on stmt: bout = arg(1, name=bout)
2022-01-24 14:09:03,044 DEBUG on stmt: $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:09:03,044 DEBUG on stmt: $0.2 = getattr(value=$0.1, attr=isnan)
2022-01-24 14:09:03,044 DEBUG on stmt: $const0.4 = const(int, 0)
2022-01-24 14:09:03,044 DEBUG on stmt: $0.5 = static_getitem(value=qin, index=0, index_var=$const0.4, fn=<built-in function getitem>)
2022-01-24 14:09:03,044 DEBUG on stmt: $0.6 = call $0.2($0.5, func=$0.2, args=[Var($0.5, algebra.py:419)], kws=(), vararg=None)
2022-01-24 14:09:03,044 DEBUG on stmt: bool14 = global(bool: <class 'bool'>)
2022-01-24 14:09:03,044 DEBUG on stmt: $14pred = call bool14($0.6, func=bool14, args=(Var($0.6, algebra.py:419),), kws=(), vararg=None)
2022-01-24 14:09:03,044 DEBUG on stmt: $phi56.3 = $0.6
2022-01-24 14:09:03,044 DEBUG first assign: $phi56.3
2022-01-24 14:09:03,044 DEBUG replaced with: $phi56.3 = $0.6
2022-01-24 14:09:03,044 DEBUG on stmt: branch $14pred, 56, 16
2022-01-24 14:09:03,044 DEBUG ==== SSA block rewrite pass on 16
2022-01-24 14:09:03,044 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94ecae08d0>
2022-01-24 14:09:03,044 DEBUG on stmt: $16.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:09:03,044 DEBUG on stmt: $16.2 = getattr(value=$16.1, attr=isnan)
2022-01-24 14:09:03,044 DEBUG on stmt: $const16.4 = const(int, 1)
2022-01-24 14:09:03,044 DEBUG on stmt: $16.5 = static_getitem(value=qin, index=1, index_var=$const16.4, fn=<built-in function getitem>)
2022-01-24 14:09:03,044 DEBUG on stmt: $16.6 = call $16.2($16.5, func=$16.2, args=[Var($16.5, algebra.py:419)], kws=(), vararg=None)
2022-01-24 14:09:03,045 DEBUG on stmt: bool28 = global(bool: <class 'bool'>)
2022-01-24 14:09:03,045 DEBUG on stmt: $28pred = call bool28($16.6, func=bool28, args=(Var($16.6, algebra.py:419),), kws=(), vararg=None)
2022-01-24 14:09:03,045 DEBUG on stmt: $phi56.3 = $16.6
2022-01-24 14:09:03,045 DEBUG replaced with: $phi56.3.1 = $16.6
2022-01-24 14:09:03,045 DEBUG on stmt: branch $28pred, 56, 30
2022-01-24 14:09:03,045 DEBUG ==== SSA block rewrite pass on 30
2022-01-24 14:09:03,045 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94ecae08d0>
2022-01-24 14:09:03,045 DEBUG on stmt: $30.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:09:03,045 DEBUG on stmt: $30.2 = getattr(value=$30.1, attr=isnan)
2022-01-24 14:09:03,045 DEBUG on stmt: $const30.4 = const(int, 2)
2022-01-24 14:09:03,045 DEBUG on stmt: $30.5 = static_getitem(value=qin, index=2, index_var=$const30.4, fn=<built-in function getitem>)
2022-01-24 14:09:03,045 DEBUG on stmt: $30.6 = call $30.2($30.5, func=$30.2, args=[Var($30.5, algebra.py:419)], kws=(), vararg=None)
2022-01-24 14:09:03,045 DEBUG on stmt: bool42 = global(bool: <class 'bool'>)
2022-01-24 14:09:03,045 DEBUG on stmt: $42pred = call bool42($30.6, func=bool42, args=(Var($30.6, algebra.py:419),), kws=(), vararg=None)
2022-01-24 14:09:03,045 DEBUG on stmt: $phi56.3 = $30.6
2022-01-24 14:09:03,045 DEBUG replaced with: $phi56.3.2 = $30.6
2022-01-24 14:09:03,045 DEBUG on stmt: branch $42pred, 56, 44
2022-01-24 14:09:03,045 DEBUG ==== SSA block rewrite pass on 44
2022-01-24 14:09:03,045 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94ecae08d0>
2022-01-24 14:09:03,045 DEBUG on stmt: $44.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:09:03,045 DEBUG on stmt: $44.2 = getattr(value=$44.1, attr=isnan)
2022-01-24 14:09:03,045 DEBUG on stmt: $const44.4 = const(int, 3)
2022-01-24 14:09:03,045 DEBUG on stmt: $44.5 = static_getitem(value=qin, index=3, index_var=$const44.4, fn=<built-in function getitem>)
2022-01-24 14:09:03,045 DEBUG on stmt: $44.6 = call $44.2($44.5, func=$44.2, args=[Var($44.5, algebra.py:419)], kws=(), vararg=None)
2022-01-24 14:09:03,045 DEBUG on stmt: $phi56.3 = $44.6
2022-01-24 14:09:03,045 DEBUG replaced with: $phi56.3.3 = $44.6
2022-01-24 14:09:03,046 DEBUG on stmt: jump 56
2022-01-24 14:09:03,046 DEBUG ==== SSA block rewrite pass on 56
2022-01-24 14:09:03,046 DEBUG Running <numba.core.ssa._FreshVarHandler object at 0x7f94ecae08d0>
2022-01-24 14:09:03,046 DEBUG on stmt: $const56.2 = const(int, 0)
2022-01-24 14:09:03,046 DEBUG on stmt: bout[0] = $phi56.3
2022-01-24 14:09:03,046 DEBUG on stmt: $const56.4 = const(NoneType, None)
2022-01-24 14:09:03,046 DEBUG on stmt: $56.5 = cast(value=$const56.4)
2022-01-24 14:09:03,046 DEBUG on stmt: return $56.5
2022-01-24 14:09:03,046 DEBUG Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f94ecad1630>],
             16: [<numba.core.ir.Assign object at 0x7f94ecad16a0>],
             30: [<numba.core.ir.Assign object at 0x7f94ecad16d8>],
             44: [<numba.core.ir.Assign object at 0x7f94ecad1400>]})
2022-01-24 14:09:03,046 DEBUG ==== SSA block rewrite pass on 0
2022-01-24 14:09:03,046 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94ecad1470>
2022-01-24 14:09:03,046 DEBUG on stmt: qin = arg(0, name=qin)
2022-01-24 14:09:03,046 DEBUG on stmt: bout = arg(1, name=bout)
2022-01-24 14:09:03,046 DEBUG on stmt: $0.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:09:03,046 DEBUG on stmt: $0.2 = getattr(value=$0.1, attr=isnan)
2022-01-24 14:09:03,046 DEBUG on stmt: $const0.4 = const(int, 0)
2022-01-24 14:09:03,046 DEBUG on stmt: $0.5 = static_getitem(value=qin, index=0, index_var=$const0.4, fn=<built-in function getitem>)
2022-01-24 14:09:03,046 DEBUG on stmt: $0.6 = call $0.2($0.5, func=$0.2, args=[Var($0.5, algebra.py:419)], kws=(), vararg=None)
2022-01-24 14:09:03,046 DEBUG on stmt: bool14 = global(bool: <class 'bool'>)
2022-01-24 14:09:03,046 DEBUG on stmt: $14pred = call bool14($0.6, func=bool14, args=(Var($0.6, algebra.py:419),), kws=(), vararg=None)
2022-01-24 14:09:03,046 DEBUG on stmt: $phi56.3 = $0.6
2022-01-24 14:09:03,046 DEBUG on stmt: branch $14pred, 56, 16
2022-01-24 14:09:03,047 DEBUG ==== SSA block rewrite pass on 16
2022-01-24 14:09:03,047 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94ecad1470>
2022-01-24 14:09:03,047 DEBUG on stmt: $16.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:09:03,047 DEBUG on stmt: $16.2 = getattr(value=$16.1, attr=isnan)
2022-01-24 14:09:03,047 DEBUG on stmt: $const16.4 = const(int, 1)
2022-01-24 14:09:03,047 DEBUG on stmt: $16.5 = static_getitem(value=qin, index=1, index_var=$const16.4, fn=<built-in function getitem>)
2022-01-24 14:09:03,047 DEBUG on stmt: $16.6 = call $16.2($16.5, func=$16.2, args=[Var($16.5, algebra.py:419)], kws=(), vararg=None)
2022-01-24 14:09:03,047 DEBUG on stmt: bool28 = global(bool: <class 'bool'>)
2022-01-24 14:09:03,047 DEBUG on stmt: $28pred = call bool28($16.6, func=bool28, args=(Var($16.6, algebra.py:419),), kws=(), vararg=None)
2022-01-24 14:09:03,047 DEBUG on stmt: $phi56.3.1 = $16.6
2022-01-24 14:09:03,047 DEBUG on stmt: branch $28pred, 56, 30
2022-01-24 14:09:03,047 DEBUG ==== SSA block rewrite pass on 30
2022-01-24 14:09:03,047 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94ecad1470>
2022-01-24 14:09:03,047 DEBUG on stmt: $30.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:09:03,047 DEBUG on stmt: $30.2 = getattr(value=$30.1, attr=isnan)
2022-01-24 14:09:03,047 DEBUG on stmt: $const30.4 = const(int, 2)
2022-01-24 14:09:03,047 DEBUG on stmt: $30.5 = static_getitem(value=qin, index=2, index_var=$const30.4, fn=<built-in function getitem>)
2022-01-24 14:09:03,047 DEBUG on stmt: $30.6 = call $30.2($30.5, func=$30.2, args=[Var($30.5, algebra.py:419)], kws=(), vararg=None)
2022-01-24 14:09:03,047 DEBUG on stmt: bool42 = global(bool: <class 'bool'>)
2022-01-24 14:09:03,047 DEBUG on stmt: $42pred = call bool42($30.6, func=bool42, args=(Var($30.6, algebra.py:419),), kws=(), vararg=None)
2022-01-24 14:09:03,047 DEBUG on stmt: $phi56.3.2 = $30.6
2022-01-24 14:09:03,047 DEBUG on stmt: branch $42pred, 56, 44
2022-01-24 14:09:03,047 DEBUG ==== SSA block rewrite pass on 44
2022-01-24 14:09:03,047 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94ecad1470>
2022-01-24 14:09:03,048 DEBUG on stmt: $44.1 = global(np: <module 'numpy' from '/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/numpy/__init__.py'>)
2022-01-24 14:09:03,048 DEBUG on stmt: $44.2 = getattr(value=$44.1, attr=isnan)
2022-01-24 14:09:03,048 DEBUG on stmt: $const44.4 = const(int, 3)
2022-01-24 14:09:03,048 DEBUG on stmt: $44.5 = static_getitem(value=qin, index=3, index_var=$const44.4, fn=<built-in function getitem>)
2022-01-24 14:09:03,048 DEBUG on stmt: $44.6 = call $44.2($44.5, func=$44.2, args=[Var($44.5, algebra.py:419)], kws=(), vararg=None)
2022-01-24 14:09:03,048 DEBUG on stmt: $phi56.3.3 = $44.6
2022-01-24 14:09:03,048 DEBUG on stmt: jump 56
2022-01-24 14:09:03,048 DEBUG ==== SSA block rewrite pass on 56
2022-01-24 14:09:03,048 DEBUG Running <numba.core.ssa._FixSSAVars object at 0x7f94ecad1470>
2022-01-24 14:09:03,048 DEBUG on stmt: $const56.2 = const(int, 0)
2022-01-24 14:09:03,048 DEBUG on stmt: bout[0] = $phi56.3
2022-01-24 14:09:03,048 DEBUG find_def var='$phi56.3' stmt=bout[0] = $phi56.3
2022-01-24 14:09:03,048 DEBUG find_def_from_top label 56
2022-01-24 14:09:03,048 DEBUG insert phi node $phi56.3.4 = phi(incoming_values=[], incoming_blocks=[]) at 56
2022-01-24 14:09:03,048 DEBUG find_def_from_bottom label 0
2022-01-24 14:09:03,048 DEBUG incoming_def $phi56.3 = $0.6
2022-01-24 14:09:03,048 DEBUG find_def_from_bottom label 16
2022-01-24 14:09:03,048 DEBUG incoming_def $phi56.3.1 = $16.6
2022-01-24 14:09:03,048 DEBUG find_def_from_bottom label 44
2022-01-24 14:09:03,048 DEBUG incoming_def $phi56.3.3 = $44.6
2022-01-24 14:09:03,048 DEBUG find_def_from_bottom label 30
2022-01-24 14:09:03,048 DEBUG incoming_def $phi56.3.2 = $30.6
2022-01-24 14:09:03,048 DEBUG replaced with: bout[0] = $phi56.3.4
2022-01-24 14:09:03,048 DEBUG on stmt: $const56.4 = const(NoneType, None)
2022-01-24 14:09:03,048 DEBUG on stmt: $56.5 = cast(value=$const56.4)
2022-01-24 14:09:03,048 DEBUG on stmt: return $56.5
2022-01-24 14:09:03,135 DEBUG label 0:
    q_in = arg(0, name=q_in)                 ['q_in']
    q_out = arg(1, name=q_out)               ['q_out']
    $const0.2 = const(int, 0)                ['$const0.2']
    $const0.3 = const(NoneType, None)        ['$const0.3']
    $const0.4 = const(NoneType, None)        ['$const0.4']
    $0.5 = global(slice: <class 'slice'>)    ['$0.5']
    $0.6 = call $0.5($const0.3, $const0.4, func=$0.5, args=(Var($const0.3, interpolation.py:14), Var($const0.4, interpolation.py:14)), kws=(), vararg=None) ['$0.5', '$0.6', '$const0.3', '$const0.4']
    $0.7 = build_tuple(items=[Var($const0.2, interpolation.py:14), Var($0.6, interpolation.py:14)]) ['$0.6', '$0.7', '$const0.2']
    $0.8 = getitem(value=q_in, index=$0.7, fn=<built-in function getitem>) ['$0.7', '$0.8', 'q_in']
    $const0.10 = const(int, 0)               ['$const0.10']
    $const0.11 = const(NoneType, None)       ['$const0.11']
    $const0.12 = const(NoneType, None)       ['$const0.12']
    $0.13 = global(slice: <class 'slice'>)   ['$0.13']
    $0.14 = call $0.13($const0.11, $const0.12, func=$0.13, args=(Var($const0.11, interpolation.py:14), Var($const0.12, interpolation.py:14)), kws=(), vararg=None) ['$0.13', '$0.14', '$const0.11', '$const0.12']
    $0.15 = build_tuple(items=[Var($const0.10, interpolation.py:14), Var($0.14, interpolation.py:14)]) ['$0.14', '$0.15', '$const0.10']
    q_out[$0.15] = $0.8                      ['$0.15', '$0.8', 'q_out']
    jump 30                                  []
label 30:
    jump 32                                  []
label 32:
    $32.1 = global(range: <class 'range'>)   ['$32.1']
    $const32.2 = const(int, 1)               ['$const32.2']
    $32.4 = getattr(value=q_in, attr=shape)  ['$32.4', 'q_in']
    $const32.5 = const(int, 0)               ['$const32.5']
    $32.6 = getitem(value=$32.4, index=$const32.5, fn=<built-in function getitem>) ['$32.4', '$32.6', '$const32.5']
    $32.7 = call $32.1($const32.2, $32.6, func=$32.1, args=[Var($const32.2, interpolation.py:15), Var($32.6, interpolation.py:15)], kws=(), vararg=None) ['$32.1', '$32.6', '$32.7', '$const32.2']
    $32.8 = getiter(value=$32.7)             ['$32.7', '$32.8']
    $phi48.1 = $32.8                         ['$32.8', '$phi48.1']
    jump 48                                  []
label 48:
    $48.2 = iternext(value=$phi48.1)         ['$48.2', '$phi48.1']
    $48.3 = pair_first(value=$48.2)          ['$48.2', '$48.3']
    $48.4 = pair_second(value=$48.2)         ['$48.2', '$48.4']
    $phi50.1 = $48.3                         ['$48.3', '$phi50.1']
    $phi234.1 = $48.3                        ['$48.3', '$phi234.1']
    $phi234.2 = $phi48.1                     ['$phi234.2', '$phi48.1']
    branch $48.4, 50, 234                    ['$48.4']
label 50:
    i = $phi50.1                             ['$phi50.1', 'i']
    $const50.4 = const(int, 1)               ['$const50.4']
    $50.5 = i - $const50.4                   ['$50.5', '$const50.4', 'i']
    $const50.6 = const(int, 0)               ['$const50.6']
    $50.7 = build_tuple(items=[Var($50.5, interpolation.py:20), Var($const50.6, interpolation.py:20)]) ['$50.5', '$50.7', '$const50.6']
    $50.8 = getitem(value=q_out, index=$50.7, fn=<built-in function getitem>) ['$50.7', '$50.8', 'q_out']
    $const50.11 = const(int, 0)              ['$const50.11']
    $50.12 = build_tuple(items=[Var(i, interpolation.py:15), Var($const50.11, interpolation.py:20)]) ['$50.12', '$const50.11', 'i']
    $50.13 = getitem(value=q_in, index=$50.12, fn=<built-in function getitem>) ['$50.12', '$50.13', 'q_in']
    $50.14 = $50.8 * $50.13                  ['$50.13', '$50.14', '$50.8']
    $const50.17 = const(int, 1)              ['$const50.17']
    $50.18 = i - $const50.17                 ['$50.18', '$const50.17', 'i']
    $const50.19 = const(int, 1)              ['$const50.19']
    $50.20 = build_tuple(items=[Var($50.18, interpolation.py:20), Var($const50.19, interpolation.py:20)]) ['$50.18', '$50.20', '$const50.19']
    $50.21 = getitem(value=q_out, index=$50.20, fn=<built-in function getitem>) ['$50.20', '$50.21', 'q_out']
    $const50.24 = const(int, 1)              ['$const50.24']
    $50.25 = build_tuple(items=[Var(i, interpolation.py:15), Var($const50.24, interpolation.py:20)]) ['$50.25', '$const50.24', 'i']
    $50.26 = getitem(value=q_in, index=$50.25, fn=<built-in function getitem>) ['$50.25', '$50.26', 'q_in']
    $50.27 = $50.21 * $50.26                 ['$50.21', '$50.26', '$50.27']
    $50.28 = $50.14 + $50.27                 ['$50.14', '$50.27', '$50.28']
    $const50.31 = const(int, 1)              ['$const50.31']
    $50.32 = i - $const50.31                 ['$50.32', '$const50.31', 'i']
    $const50.33 = const(int, 2)              ['$const50.33']
    $50.34 = build_tuple(items=[Var($50.32, interpolation.py:20), Var($const50.33, interpolation.py:20)]) ['$50.32', '$50.34', '$const50.33']
    $50.35 = getitem(value=q_out, index=$50.34, fn=<built-in function getitem>) ['$50.34', '$50.35', 'q_out']
    $const50.38 = const(int, 2)              ['$const50.38']
    $50.39 = build_tuple(items=[Var(i, interpolation.py:15), Var($const50.38, interpolation.py:20)]) ['$50.39', '$const50.38', 'i']
    $50.40 = getitem(value=q_in, index=$50.39, fn=<built-in function getitem>) ['$50.39', '$50.40', 'q_in']
    $50.41 = $50.35 * $50.40                 ['$50.35', '$50.40', '$50.41']
    $50.42 = $50.28 + $50.41                 ['$50.28', '$50.41', '$50.42']
    $const50.45 = const(int, 1)              ['$const50.45']
    $50.46 = i - $const50.45                 ['$50.46', '$const50.45', 'i']
    $const50.47 = const(int, 3)              ['$const50.47']
    $50.48 = build_tuple(items=[Var($50.46, interpolation.py:20), Var($const50.47, interpolation.py:20)]) ['$50.46', '$50.48', '$const50.47']
    $50.49 = getitem(value=q_out, index=$50.48, fn=<built-in function getitem>) ['$50.48', '$50.49', 'q_out']
    $const50.52 = const(int, 3)              ['$const50.52']
    $50.53 = build_tuple(items=[Var(i, interpolation.py:15), Var($const50.52, interpolation.py:20)]) ['$50.53', '$const50.52', 'i']
    $50.54 = getitem(value=q_in, index=$50.53, fn=<built-in function getitem>) ['$50.53', '$50.54', 'q_in']
    $50.55 = $50.49 * $50.54                 ['$50.49', '$50.54', '$50.55']
    inner_product = $50.42 + $50.55          ['$50.42', '$50.55', 'inner_product']
    $const50.58 = const(float, 0.0)          ['$const50.58']
    $50.59 = inner_product < $const50.58     ['$50.59', '$const50.58', 'inner_product']
    bool170 = global(bool: <class 'bool'>)   ['bool170']
    $170pred = call bool170($50.59, func=bool170, args=(Var($50.59, interpolation.py:22),), kws=(), vararg=None) ['$170pred', '$50.59', 'bool170']
    branch $170pred, 172, 204                ['$170pred']
label 172:
    $const172.3 = const(NoneType, None)      ['$const172.3']
    $const172.4 = const(NoneType, None)      ['$const172.4']
    $172.5 = global(slice: <class 'slice'>)  ['$172.5']
    $172.6 = call $172.5($const172.3, $const172.4, func=$172.5, args=(Var($const172.3, interpolation.py:23), Var($const172.4, interpolation.py:23)), kws=(), vararg=None) ['$172.5', '$172.6', '$const172.3', '$const172.4']
    $172.7 = build_tuple(items=[Var(i, interpolation.py:15), Var($172.6, interpolation.py:23)]) ['$172.6', '$172.7', 'i']
    $172.8 = getitem(value=q_in, index=$172.7, fn=<built-in function getitem>) ['$172.7', '$172.8', 'q_in']
    $172.9 = unary(fn=<built-in function neg>, value=$172.8) ['$172.8', '$172.9']
    $const172.12 = const(NoneType, None)     ['$const172.12']
    $const172.13 = const(NoneType, None)     ['$const172.13']
    $172.14 = global(slice: <class 'slice'>) ['$172.14']
    $172.15 = call $172.14($const172.12, $const172.13, func=$172.14, args=(Var($const172.12, interpolation.py:23), Var($const172.13, interpolation.py:23)), kws=(), vararg=None) ['$172.14', '$172.15', '$const172.12', '$const172.13']
    $172.16 = build_tuple(items=[Var(i, interpolation.py:15), Var($172.15, interpolation.py:23)]) ['$172.15', '$172.16', 'i']
    q_out[$172.16] = $172.9                  ['$172.16', '$172.9', 'q_out']
    jump 48                                  []
label 204:
    $const204.3 = const(NoneType, None)      ['$const204.3']
    $const204.4 = const(NoneType, None)      ['$const204.4']
    $204.5 = global(slice: <class 'slice'>)  ['$204.5']
    $204.6 = call $204.5($const204.3, $const204.4, func=$204.5, args=(Var($const204.3, interpolation.py:25), Var($const204.4, interpolation.py:25)), kws=(), vararg=None) ['$204.5', '$204.6', '$const204.3', '$const204.4']
    $204.7 = build_tuple(items=[Var(i, interpolation.py:15), Var($204.6, interpolation.py:25)]) ['$204.6', '$204.7', 'i']
    $204.8 = getitem(value=q_in, index=$204.7, fn=<built-in function getitem>) ['$204.7', '$204.8', 'q_in']
    $const204.11 = const(NoneType, None)     ['$const204.11']
    $const204.12 = const(NoneType, None)     ['$const204.12']
    $204.13 = global(slice: <class 'slice'>) ['$204.13']
    $204.14 = call $204.13($const204.11, $const204.12, func=$204.13, args=(Var($const204.11, interpolation.py:25), Var($const204.12, interpolation.py:25)), kws=(), vararg=None) ['$204.13', '$204.14', '$const204.11', '$const204.12']
    $204.15 = build_tuple(items=[Var(i, interpolation.py:15), Var($204.14, interpolation.py:25)]) ['$204.14', '$204.15', 'i']
    q_out[$204.15] = $204.8                  ['$204.15', '$204.8', 'q_out']
    jump 48                                  []
label 234:
    jump 236                                 []
label 236:
    $const236.1 = const(NoneType, None)      ['$const236.1']
    $236.2 = cast(value=$const236.1)         ['$236.2', '$const236.1']
    return $236.2                            ['$236.2']

2022-01-24 14:09:03,149 DEBUG ==== SSA block analysis pass on 0
2022-01-24 14:09:03,149 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ece68908>
2022-01-24 14:09:03,149 DEBUG on stmt: q_in = arg(0, name=q_in)
2022-01-24 14:09:03,150 DEBUG on stmt: q_out = arg(1, name=q_out)
2022-01-24 14:09:03,150 DEBUG on stmt: $const0.2 = const(int, 0)
2022-01-24 14:09:03,150 DEBUG on stmt: $const0.3 = const(NoneType, None)
2022-01-24 14:09:03,150 DEBUG on stmt: $const0.4 = const(NoneType, None)
2022-01-24 14:09:03,150 DEBUG on stmt: $0.5 = global(slice: <class 'slice'>)
2022-01-24 14:09:03,150 DEBUG on stmt: $0.6 = call $0.5($const0.3, $const0.4, func=$0.5, args=(Var($const0.3, interpolation.py:14), Var($const0.4, interpolation.py:14)), kws=(), vararg=None)
2022-01-24 14:09:03,150 DEBUG on stmt: $0.7 = build_tuple(items=[Var($const0.2, interpolation.py:14), Var($0.6, interpolation.py:14)])
2022-01-24 14:09:03,150 DEBUG on stmt: $0.8 = static_getitem(value=q_in, index=(0, slice(None, None, None)), index_var=$0.7, fn=<built-in function getitem>)
2022-01-24 14:09:03,150 DEBUG on stmt: $const0.10 = const(int, 0)
2022-01-24 14:09:03,150 DEBUG on stmt: $const0.11 = const(NoneType, None)
2022-01-24 14:09:03,150 DEBUG on stmt: $const0.12 = const(NoneType, None)
2022-01-24 14:09:03,150 DEBUG on stmt: $0.13 = global(slice: <class 'slice'>)
2022-01-24 14:09:03,150 DEBUG on stmt: $0.14 = call $0.13($const0.11, $const0.12, func=$0.13, args=(Var($const0.11, interpolation.py:14), Var($const0.12, interpolation.py:14)), kws=(), vararg=None)
2022-01-24 14:09:03,150 DEBUG on stmt: $0.15 = build_tuple(items=[Var($const0.10, interpolation.py:14), Var($0.14, interpolation.py:14)])
2022-01-24 14:09:03,150 DEBUG on stmt: q_out[(0, slice(None, None, None))] = $0.8
2022-01-24 14:09:03,150 DEBUG on stmt: jump 30
2022-01-24 14:09:03,150 DEBUG ==== SSA block analysis pass on 30
2022-01-24 14:09:03,150 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ece68908>
2022-01-24 14:09:03,150 DEBUG on stmt: jump 32
2022-01-24 14:09:03,150 DEBUG ==== SSA block analysis pass on 32
2022-01-24 14:09:03,150 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ece68908>
2022-01-24 14:09:03,150 DEBUG on stmt: $32.1 = global(range: <class 'range'>)
2022-01-24 14:09:03,150 DEBUG on stmt: $const32.2 = const(int, 1)
2022-01-24 14:09:03,150 DEBUG on stmt: $32.4 = getattr(value=q_in, attr=shape)
2022-01-24 14:09:03,150 DEBUG on stmt: $const32.5 = const(int, 0)
2022-01-24 14:09:03,150 DEBUG on stmt: $32.6 = static_getitem(value=$32.4, index=0, index_var=$const32.5, fn=<built-in function getitem>)
2022-01-24 14:09:03,150 DEBUG on stmt: $32.7 = call $32.1($const32.2, $32.6, func=$32.1, args=[Var($const32.2, interpolation.py:15), Var($32.6, interpolation.py:15)], kws=(), vararg=None)
2022-01-24 14:09:03,151 DEBUG on stmt: $32.8 = getiter(value=$32.7)
2022-01-24 14:09:03,151 DEBUG on stmt: $phi48.1 = $32.8
2022-01-24 14:09:03,151 DEBUG on stmt: jump 48
2022-01-24 14:09:03,151 DEBUG ==== SSA block analysis pass on 48
2022-01-24 14:09:03,151 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ece68908>
2022-01-24 14:09:03,151 DEBUG on stmt: $48.2 = iternext(value=$phi48.1)
2022-01-24 14:09:03,151 DEBUG on stmt: $48.3 = pair_first(value=$48.2)
2022-01-24 14:09:03,151 DEBUG on stmt: $48.4 = pair_second(value=$48.2)
2022-01-24 14:09:03,151 DEBUG on stmt: $phi50.1 = $48.3
2022-01-24 14:09:03,151 DEBUG on stmt: $phi234.1 = $48.3
2022-01-24 14:09:03,151 DEBUG on stmt: $phi234.2 = $phi48.1
2022-01-24 14:09:03,151 DEBUG on stmt: branch $48.4, 50, 234
2022-01-24 14:09:03,151 DEBUG ==== SSA block analysis pass on 50
2022-01-24 14:09:03,151 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ece68908>
2022-01-24 14:09:03,151 DEBUG on stmt: i = $phi50.1
2022-01-24 14:09:03,151 DEBUG on stmt: $const50.4 = const(int, 1)
2022-01-24 14:09:03,151 DEBUG on stmt: $50.5 = i - $const50.4
2022-01-24 14:09:03,151 DEBUG on stmt: $const50.6 = const(int, 0)
2022-01-24 14:09:03,151 DEBUG on stmt: $50.7 = build_tuple(items=[Var($50.5, interpolation.py:20), Var($const50.6, interpolation.py:20)])
2022-01-24 14:09:03,151 DEBUG on stmt: $50.8 = getitem(value=q_out, index=$50.7, fn=<built-in function getitem>)
2022-01-24 14:09:03,151 DEBUG on stmt: $const50.11 = const(int, 0)
2022-01-24 14:09:03,151 DEBUG on stmt: $50.12 = build_tuple(items=[Var(i, interpolation.py:15), Var($const50.11, interpolation.py:20)])
2022-01-24 14:09:03,151 DEBUG on stmt: $50.13 = getitem(value=q_in, index=$50.12, fn=<built-in function getitem>)
2022-01-24 14:09:03,151 DEBUG on stmt: $50.14 = $50.8 * $50.13
2022-01-24 14:09:03,151 DEBUG on stmt: $const50.17 = const(int, 1)
2022-01-24 14:09:03,151 DEBUG on stmt: $50.18 = i - $const50.17
2022-01-24 14:09:03,151 DEBUG on stmt: $const50.19 = const(int, 1)
2022-01-24 14:09:03,151 DEBUG on stmt: $50.20 = build_tuple(items=[Var($50.18, interpolation.py:20), Var($const50.19, interpolation.py:20)])
2022-01-24 14:09:03,152 DEBUG on stmt: $50.21 = getitem(value=q_out, index=$50.20, fn=<built-in function getitem>)
2022-01-24 14:09:03,152 DEBUG on stmt: $const50.24 = const(int, 1)
2022-01-24 14:09:03,152 DEBUG on stmt: $50.25 = build_tuple(items=[Var(i, interpolation.py:15), Var($const50.24, interpolation.py:20)])
2022-01-24 14:09:03,152 DEBUG on stmt: $50.26 = getitem(value=q_in, index=$50.25, fn=<built-in function getitem>)
2022-01-24 14:09:03,152 DEBUG on stmt: $50.27 = $50.21 * $50.26
2022-01-24 14:09:03,152 DEBUG on stmt: $50.28 = $50.14 + $50.27
2022-01-24 14:09:03,152 DEBUG on stmt: $const50.31 = const(int, 1)
2022-01-24 14:09:03,152 DEBUG on stmt: $50.32 = i - $const50.31
2022-01-24 14:09:03,152 DEBUG on stmt: $const50.33 = const(int, 2)
2022-01-24 14:09:03,152 DEBUG on stmt: $50.34 = build_tuple(items=[Var($50.32, interpolation.py:20), Var($const50.33, interpolation.py:20)])
2022-01-24 14:09:03,152 DEBUG on stmt: $50.35 = getitem(value=q_out, index=$50.34, fn=<built-in function getitem>)
2022-01-24 14:09:03,152 DEBUG on stmt: $const50.38 = const(int, 2)
2022-01-24 14:09:03,152 DEBUG on stmt: $50.39 = build_tuple(items=[Var(i, interpolation.py:15), Var($const50.38, interpolation.py:20)])
2022-01-24 14:09:03,152 DEBUG on stmt: $50.40 = getitem(value=q_in, index=$50.39, fn=<built-in function getitem>)
2022-01-24 14:09:03,152 DEBUG on stmt: $50.41 = $50.35 * $50.40
2022-01-24 14:09:03,152 DEBUG on stmt: $50.42 = $50.28 + $50.41
2022-01-24 14:09:03,152 DEBUG on stmt: $const50.45 = const(int, 1)
2022-01-24 14:09:03,152 DEBUG on stmt: $50.46 = i - $const50.45
2022-01-24 14:09:03,152 DEBUG on stmt: $const50.47 = const(int, 3)
2022-01-24 14:09:03,152 DEBUG on stmt: $50.48 = build_tuple(items=[Var($50.46, interpolation.py:20), Var($const50.47, interpolation.py:20)])
2022-01-24 14:09:03,152 DEBUG on stmt: $50.49 = getitem(value=q_out, index=$50.48, fn=<built-in function getitem>)
2022-01-24 14:09:03,152 DEBUG on stmt: $const50.52 = const(int, 3)
2022-01-24 14:09:03,152 DEBUG on stmt: $50.53 = build_tuple(items=[Var(i, interpolation.py:15), Var($const50.52, interpolation.py:20)])
2022-01-24 14:09:03,152 DEBUG on stmt: $50.54 = getitem(value=q_in, index=$50.53, fn=<built-in function getitem>)
2022-01-24 14:09:03,152 DEBUG on stmt: $50.55 = $50.49 * $50.54
2022-01-24 14:09:03,153 DEBUG on stmt: inner_product = $50.42 + $50.55
2022-01-24 14:09:03,153 DEBUG on stmt: $const50.58 = const(float, 0.0)
2022-01-24 14:09:03,153 DEBUG on stmt: $50.59 = inner_product < $const50.58
2022-01-24 14:09:03,153 DEBUG on stmt: bool170 = global(bool: <class 'bool'>)
2022-01-24 14:09:03,153 DEBUG on stmt: $170pred = call bool170($50.59, func=bool170, args=(Var($50.59, interpolation.py:22),), kws=(), vararg=None)
2022-01-24 14:09:03,153 DEBUG on stmt: branch $170pred, 172, 204
2022-01-24 14:09:03,153 DEBUG ==== SSA block analysis pass on 172
2022-01-24 14:09:03,153 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ece68908>
2022-01-24 14:09:03,153 DEBUG on stmt: $const172.3 = const(NoneType, None)
2022-01-24 14:09:03,153 DEBUG on stmt: $const172.4 = const(NoneType, None)
2022-01-24 14:09:03,153 DEBUG on stmt: $172.5 = global(slice: <class 'slice'>)
2022-01-24 14:09:03,153 DEBUG on stmt: $172.6 = call $172.5($const172.3, $const172.4, func=$172.5, args=(Var($const172.3, interpolation.py:23), Var($const172.4, interpolation.py:23)), kws=(), vararg=None)
2022-01-24 14:09:03,153 DEBUG on stmt: $172.7 = build_tuple(items=[Var(i, interpolation.py:15), Var($172.6, interpolation.py:23)])
2022-01-24 14:09:03,153 DEBUG on stmt: $172.8 = getitem(value=q_in, index=$172.7, fn=<built-in function getitem>)
2022-01-24 14:09:03,153 DEBUG on stmt: $172.9 = unary(fn=<built-in function neg>, value=$172.8)
2022-01-24 14:09:03,153 DEBUG on stmt: $const172.12 = const(NoneType, None)
2022-01-24 14:09:03,153 DEBUG on stmt: $const172.13 = const(NoneType, None)
2022-01-24 14:09:03,153 DEBUG on stmt: $172.14 = global(slice: <class 'slice'>)
2022-01-24 14:09:03,153 DEBUG on stmt: $172.15 = call $172.14($const172.12, $const172.13, func=$172.14, args=(Var($const172.12, interpolation.py:23), Var($const172.13, interpolation.py:23)), kws=(), vararg=None)
2022-01-24 14:09:03,153 DEBUG on stmt: $172.16 = build_tuple(items=[Var(i, interpolation.py:15), Var($172.15, interpolation.py:23)])
2022-01-24 14:09:03,153 DEBUG on stmt: q_out[$172.16] = $172.9
2022-01-24 14:09:03,153 DEBUG on stmt: jump 237
2022-01-24 14:09:03,153 DEBUG ==== SSA block analysis pass on 204
2022-01-24 14:09:03,153 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ece68908>
2022-01-24 14:09:03,153 DEBUG on stmt: $const204.3 = const(NoneType, None)
2022-01-24 14:09:03,153 DEBUG on stmt: $const204.4 = const(NoneType, None)
2022-01-24 14:09:03,153 DEBUG on stmt: $204.5 = global(slice: <class 'slice'>)
2022-01-24 14:09:03,153 DEBUG on stmt: $204.6 = call $204.5($const204.3, $const204.4, func=$204.5, args=(Var($const204.3, interpolation.py:25), Var($const204.4, interpolation.py:25)), kws=(), vararg=None)
2022-01-24 14:09:03,154 DEBUG on stmt: $204.7 = build_tuple(items=[Var(i, interpolation.py:15), Var($204.6, interpolation.py:25)])
2022-01-24 14:09:03,154 DEBUG on stmt: $204.8 = getitem(value=q_in, index=$204.7, fn=<built-in function getitem>)
2022-01-24 14:09:03,154 DEBUG on stmt: $const204.11 = const(NoneType, None)
2022-01-24 14:09:03,154 DEBUG on stmt: $const204.12 = const(NoneType, None)
2022-01-24 14:09:03,154 DEBUG on stmt: $204.13 = global(slice: <class 'slice'>)
2022-01-24 14:09:03,154 DEBUG on stmt: $204.14 = call $204.13($const204.11, $const204.12, func=$204.13, args=(Var($const204.11, interpolation.py:25), Var($const204.12, interpolation.py:25)), kws=(), vararg=None)
2022-01-24 14:09:03,154 DEBUG on stmt: $204.15 = build_tuple(items=[Var(i, interpolation.py:15), Var($204.14, interpolation.py:25)])
2022-01-24 14:09:03,154 DEBUG on stmt: q_out[$204.15] = $204.8
2022-01-24 14:09:03,154 DEBUG on stmt: jump 237
2022-01-24 14:09:03,154 DEBUG ==== SSA block analysis pass on 234
2022-01-24 14:09:03,154 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ece68908>
2022-01-24 14:09:03,154 DEBUG on stmt: jump 236
2022-01-24 14:09:03,154 DEBUG ==== SSA block analysis pass on 236
2022-01-24 14:09:03,154 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ece68908>
2022-01-24 14:09:03,154 DEBUG on stmt: $const236.1 = const(NoneType, None)
2022-01-24 14:09:03,154 DEBUG on stmt: $236.2 = cast(value=$const236.1)
2022-01-24 14:09:03,154 DEBUG on stmt: return $236.2
2022-01-24 14:09:03,154 DEBUG ==== SSA block analysis pass on 237
2022-01-24 14:09:03,154 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94ece68908>
2022-01-24 14:09:03,154 DEBUG on stmt: jump 48
2022-01-24 14:09:03,155 DEBUG defs defaultdict(<class 'list'>,
            {'$0.13': [<numba.core.ir.Assign object at 0x7f94ecac27f0>],
             '$0.14': [<numba.core.ir.Assign object at 0x7f94ecac26a0>],
             '$0.15': [<numba.core.ir.Assign object at 0x7f94ecac2940>],
             '$0.5': [<numba.core.ir.Assign object at 0x7f94ecac2128>],
             '$0.6': [<numba.core.ir.Assign object at 0x7f94ecac2198>],
             '$0.7': [<numba.core.ir.Assign object at 0x7f94ecac2278>],
             '$0.8': [<numba.core.ir.Assign object at 0x7f94ece63d68>],
             '$170pred': [<numba.core.ir.Assign object at 0x7f94ece4ce80>],
             '$172.14': [<numba.core.ir.Assign object at 0x7f94ece686a0>],
             '$172.15': [<numba.core.ir.Assign object at 0x7f94ece68748>],
             '$172.16': [<numba.core.ir.Assign object at 0x7f94ece68828>],
             '$172.5': [<numba.core.ir.Assign object at 0x7f94ece4cf28>],
             '$172.6': [<numba.core.ir.Assign object at 0x7f94ece4cfd0>],
             '$172.7': [<numba.core.ir.Assign object at 0x7f94ece680f0>],
             '$172.8': [<numba.core.ir.Assign object at 0x7f94ece681d0>],
             '$172.9': [<numba.core.ir.Assign object at 0x7f94ece682b0>],
             '$204.13': [<numba.core.ir.Assign object at 0x7f94ece63320>],
             '$204.14': [<numba.core.ir.Assign object at 0x7f94ece633c8>],
             '$204.15': [<numba.core.ir.Assign object at 0x7f94ece634a8>],
             '$204.5': [<numba.core.ir.Assign object at 0x7f94ece68c88>],
             '$204.6': [<numba.core.ir.Assign object at 0x7f94ece68d30>],
             '$204.7': [<numba.core.ir.Assign object at 0x7f94ece68e10>],
             '$204.8': [<numba.core.ir.Assign object at 0x7f94ece68ef0>],
             '$236.2': [<numba.core.ir.Assign object at 0x7f94ece63748>],
             '$32.1': [<numba.core.ir.Assign object at 0x7f94ecac70b8>],
             '$32.4': [<numba.core.ir.Assign object at 0x7f94ecac7320>],
             '$32.6': [<numba.core.ir.Assign object at 0x7f94ece63b38>],
             '$32.7': [<numba.core.ir.Assign object at 0x7f94ecac75c0>],
             '$32.8': [<numba.core.ir.Assign object at 0x7f94ecac76a0>],
             '$48.2': [<numba.core.ir.Assign object at 0x7f94ecac7860>],
             '$48.3': [<numba.core.ir.Assign object at 0x7f94ecac7908>],
             '$48.4': [<numba.core.ir.Assign object at 0x7f94ecac79b0>],
             '$50.12': [<numba.core.ir.Assign object at 0x7f94ece7b550>],
             '$50.13': [<numba.core.ir.Assign object at 0x7f94ece7b630>],
             '$50.14': [<numba.core.ir.Assign object at 0x7f94ece7b710>],
             '$50.18': [<numba.core.ir.Assign object at 0x7f94ece7ba20>],
             '$50.20': [<numba.core.ir.Assign object at 0x7f94ece7bbe0>],
             '$50.21': [<numba.core.ir.Assign object at 0x7f94ece7bcc0>],
             '$50.25': [<numba.core.ir.Assign object at 0x7f94ece7bfd0>],
             '$50.26': [<numba.core.ir.Assign object at 0x7f94ece4d0f0>],
             '$50.27': [<numba.core.ir.Assign object at 0x7f94ece4d1d0>],
             '$50.28': [<numba.core.ir.Assign object at 0x7f94ece4d2b0>],
             '$50.32': [<numba.core.ir.Assign object at 0x7f94ece4d5c0>],
             '$50.34': [<numba.core.ir.Assign object at 0x7f94ece4d780>],
             '$50.35': [<numba.core.ir.Assign object at 0x7f94ece4d860>],
             '$50.39': [<numba.core.ir.Assign object at 0x7f94ece4db70>],
             '$50.40': [<numba.core.ir.Assign object at 0x7f94ece4dc50>],
             '$50.41': [<numba.core.ir.Assign object at 0x7f94ece4dd30>],
             '$50.42': [<numba.core.ir.Assign object at 0x7f94ece4de10>],
             '$50.46': [<numba.core.ir.Assign object at 0x7f94ece4c160>],
             '$50.48': [<numba.core.ir.Assign object at 0x7f94ece4c320>],
             '$50.49': [<numba.core.ir.Assign object at 0x7f94ece4c400>],
             '$50.5': [<numba.core.ir.Assign object at 0x7f94ecac7f60>],
             '$50.53': [<numba.core.ir.Assign object at 0x7f94ece4c710>],
             '$50.54': [<numba.core.ir.Assign object at 0x7f94ece4c7f0>],
             '$50.55': [<numba.core.ir.Assign object at 0x7f94ece4c8d0>],
             '$50.59': [<numba.core.ir.Assign object at 0x7f94ece4ccc0>],
             '$50.7': [<numba.core.ir.Assign object at 0x7f94ece7b160>],
             '$50.8': [<numba.core.ir.Assign object at 0x7f94ece7b240>],
             '$const0.10': [<numba.core.ir.Assign object at 0x7f94ecac2470>],
             '$const0.11': [<numba.core.ir.Assign object at 0x7f94ecac24e0>],
             '$const0.12': [<numba.core.ir.Assign object at 0x7f94ecac2710>],
             '$const0.2': [<numba.core.ir.Assign object at 0x7f94ecac2c50>],
             '$const0.3': [<numba.core.ir.Assign object at 0x7f94ecac2ba8>],
             '$const0.4': [<numba.core.ir.Assign object at 0x7f94ecac2160>],
             '$const172.12': [<numba.core.ir.Assign object at 0x7f94ece684e0>],
             '$const172.13': [<numba.core.ir.Assign object at 0x7f94ece685c0>],
             '$const172.3': [<numba.core.ir.Assign object at 0x7f94ecac7cf8>],
             '$const172.4': [<numba.core.ir.Assign object at 0x7f94ece4c550>],
             '$const204.11': [<numba.core.ir.Assign object at 0x7f94ece63160>],
             '$const204.12': [<numba.core.ir.Assign object at 0x7f94ece63240>],
             '$const204.3': [<numba.core.ir.Assign object at 0x7f94ece68ac8>],
             '$const204.4': [<numba.core.ir.Assign object at 0x7f94ece68ba8>],
             '$const236.1': [<numba.core.ir.Assign object at 0x7f94ece63668>],
             '$const32.2': [<numba.core.ir.Assign object at 0x7f94ecac7198>],
             '$const32.5': [<numba.core.ir.Assign object at 0x7f94ecac7400>],
             '$const50.11': [<numba.core.ir.Assign object at 0x7f94ece7b470>],
             '$const50.17': [<numba.core.ir.Assign object at 0x7f94ece7b940>],
             '$const50.19': [<numba.core.ir.Assign object at 0x7f94ece7bb00>],
             '$const50.24': [<numba.core.ir.Assign object at 0x7f94ece7bef0>],
             '$const50.31': [<numba.core.ir.Assign object at 0x7f94ece4d4e0>],
             '$const50.33': [<numba.core.ir.Assign object at 0x7f94ece4d6a0>],
             '$const50.38': [<numba.core.ir.Assign object at 0x7f94ece4da90>],
             '$const50.4': [<numba.core.ir.Assign object at 0x7f94ecac7e80>],
             '$const50.45': [<numba.core.ir.Assign object at 0x7f94ece4c080>],
             '$const50.47': [<numba.core.ir.Assign object at 0x7f94ece4c240>],
             '$const50.52': [<numba.core.ir.Assign object at 0x7f94ece4c630>],
             '$const50.58': [<numba.core.ir.Assign object at 0x7f94ece4cbe0>],
             '$const50.6': [<numba.core.ir.Assign object at 0x7f94ece7b080>],
             '$phi234.1': [<numba.core.ir.Assign object at 0x7f94ecac7a90>],
             '$phi234.2': [<numba.core.ir.Assign object at 0x7f94ecac7b00>],
             '$phi48.1': [<numba.core.ir.Assign object at 0x7f94ecac7240>],
             '$phi50.1': [<numba.core.ir.Assign object at 0x7f94ecac7a20>],
             'bool170': [<numba.core.ir.Assign object at 0x7f94ece4cdd8>],
             'i': [<numba.core.ir.Assign object at 0x7f94ecac7c50>],
             'inner_product': [<numba.core.ir.Assign object at 0x7f94ece4c9b0>],
             'q_in': [<numba.core.ir.Assign object at 0x7f94ecac2ef0>],
             'q_out': [<numba.core.ir.Assign object at 0x7f94ecac2da0>]})
2022-01-24 14:09:03,155 DEBUG SSA violators set()
2022-01-24 14:09:03,326 DEBUG label 0:
    _172_8_1 = arg(0, name=_172_8_1)         ['_172_8_1']
    $0.2 = unary(fn=<built-in function neg>, value=_172_8_1) ['$0.2', '_172_8_1']
    $0.3 = cast(value=$0.2)                  ['$0.2', '$0.3']
    return $0.3                              ['$0.3']

2022-01-24 14:09:03,327 DEBUG ==== SSA block analysis pass on 0
2022-01-24 14:09:03,327 DEBUG Running <numba.core.ssa._GatherDefsHandler object at 0x7f94eb5be9b0>
2022-01-24 14:09:03,327 DEBUG on stmt: _172_8_1 = arg(0, name=_172_8_1)
2022-01-24 14:09:03,327 DEBUG on stmt: $0.2 = unary(fn=<built-in function neg>, value=_172_8_1)
2022-01-24 14:09:03,327 DEBUG on stmt: $0.3 = cast(value=$0.2)
2022-01-24 14:09:03,327 DEBUG on stmt: return $0.3
2022-01-24 14:09:03,327 DEBUG defs defaultdict(<class 'list'>,
            {'$0.2': [<numba.core.ir.Assign object at 0x7f94eb5cb8d0>],
             '$0.3': [<numba.core.ir.Assign object at 0x7f94eb5beef0>],
             '_172_8_1': [<numba.core.ir.Assign object at 0x7f94eb5cb278>]})
2022-01-24 14:09:03,327 DEBUG SSA violators set()
