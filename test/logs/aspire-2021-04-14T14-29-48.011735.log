2021-04-14 14:29:49,272 INFO This script illustrates orientation estimation using synchronization matrix and voting method
2021-04-14 14:29:49,272 INFO Initialize simulation object and CTF filters.
2021-04-14 14:29:49,272 INFO Load 3D map and downsample 3D map to desired grids of 5 x 5 x 5.
2021-04-14 14:29:49,775 INFO Use downsampled map to creat simulation object.
2021-04-14 14:29:49,791 DEBUG Corresponding type is already real float32.
2021-04-14 14:29:49,792 DEBUG nufft passed real_type for signal, converting
2021-04-14 14:29:49,792 INFO Trying NFFT backend finufft
2021-04-14 14:29:49,797 INFO NFFT backend finufft usable.
2021-04-14 14:29:49,797 INFO Trying NFFT backend cufinufft
2021-04-14 14:29:49,797 INFO NFFT backend cufinufft not usable:
	No module named 'pycuda'
2021-04-14 14:29:49,797 INFO Trying NFFT backend pynfft
2021-04-14 14:29:49,798 INFO NFFT backend pynfft not usable:
	No module named 'pynfft'
2021-04-14 14:29:49,798 INFO Selected NFFT backend = finufft.
2021-04-14 14:29:49,798 DEBUG FinufftPlan adjusted eps=1.1920928955078125e-07 from requested 1e-08.
2021-04-14 14:29:49,848 INFO Applying forward transformations in pipeline
2021-04-14 14:29:49,848 INFO All forward transformations applied
2021-04-14 14:29:49,848 INFO Loaded 12 images
2021-04-14 14:29:49,900 DEBUG Corresponding type is already real float32.
2021-04-14 14:29:49,900 DEBUG nufft passed real_type for signal, converting
2021-04-14 14:29:49,900 DEBUG FinufftPlan adjusted eps=1.1920928955078125e-07 from requested 1e-08.
2021-04-14 14:29:51,919 CRITICAL Image should be instantiated with an ndarray
Traceback:
  File "/Users/wdiepeveen/Documents/PhD/Projects/2 - Cryo-EM/src/src/Cryo-EM/test/icosahedron.py", line 91, in <module>
    print(problem.integrands_vol_forward(problem.vol))
  File "/Users/wdiepeveen/Documents/PhD/Projects/2 - Cryo-EM/src/src/Cryo-EM/solvers/lifting/problem.py", line 96, in integrands_vol_forward
    im = self.eval_filter(im)  # Here we only use 1 filter
  File "/Users/wdiepeveen/Documents/PhD/Projects/2 - Cryo-EM/src/src/Cryo-EM/solvers/lifting/problem.py", line 162, in eval_filter
    im = Image(im).filter(self.filter)
  File "/Users/wdiepeveen/PycharmProjects/Cryo-EM/lib/python3.6/site-packages/aspire/image/image.py", line 121, in __init__
    ), "Image should be instantiated with an ndarray"

