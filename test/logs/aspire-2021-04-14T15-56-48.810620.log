2021-04-14 15:56:49,886 INFO This script illustrates orientation estimation using synchronization matrix and voting method
2021-04-14 15:56:49,886 INFO Initialize simulation object and CTF filters.
2021-04-14 15:56:49,886 INFO Load 3D map and downsample 3D map to desired grids of 5 x 5 x 5.
2021-04-14 15:56:50,352 INFO Use downsampled map to creat simulation object.
2021-04-14 15:56:50,370 DEBUG Corresponding type is already real float32.
2021-04-14 15:56:50,370 DEBUG nufft passed real_type for signal, converting
2021-04-14 15:56:50,370 INFO Trying NFFT backend finufft
2021-04-14 15:56:50,375 INFO NFFT backend finufft usable.
2021-04-14 15:56:50,375 INFO Trying NFFT backend cufinufft
2021-04-14 15:56:50,376 INFO NFFT backend cufinufft not usable:
	No module named 'pycuda'
2021-04-14 15:56:50,376 INFO Trying NFFT backend pynfft
2021-04-14 15:56:50,376 INFO NFFT backend pynfft not usable:
	No module named 'pynfft'
2021-04-14 15:56:50,376 INFO Selected NFFT backend = finufft.
2021-04-14 15:56:50,376 DEBUG FinufftPlan adjusted eps=1.1920928955078125e-07 from requested 1e-08.
2021-04-14 15:56:50,427 INFO Applying forward transformations in pipeline
2021-04-14 15:56:50,427 INFO All forward transformations applied
2021-04-14 15:56:50,427 INFO Loaded 12 images
2021-04-14 15:56:50,476 DEBUG Corresponding type is already real float32.
2021-04-14 15:56:50,476 DEBUG nufft passed real_type for signal, converting
2021-04-14 15:56:50,476 DEBUG FinufftPlan adjusted eps=1.1920928955078125e-07 from requested 1e-08.
2021-04-14 15:56:50,490 DEBUG Corresponding type is already real float32.
2021-04-14 15:56:50,490 DEBUG nufft passed real_type for signal, converting
2021-04-14 15:56:50,490 DEBUG FinufftPlan adjusted eps=1.1920928955078125e-07 from requested 1e-08.
2021-04-14 15:56:52,463 CRITICAL could not broadcast input array from shape (35) into shape (12)
Traceback:
  File "/Users/wdiepeveen/Documents/PhD/Projects/2 - Cryo-EM/src/src/Cryo-EM/test/icosahedron.py", line 93, in <module>
    print(problem.dens_adjoint_forward(Im))
  File "/Users/wdiepeveen/Documents/PhD/Projects/2 - Cryo-EM/src/src/Cryo-EM/solvers/lifting/problem.py", line 190, in dens_adjoint_forward
    coeffs[:, i] = self.integrator.weights2coeffs(weights)

