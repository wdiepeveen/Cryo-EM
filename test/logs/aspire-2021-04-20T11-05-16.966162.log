2021-04-20 11:05:17,961 INFO This script illustrates orientation estimation using synchronization matrix and voting method
2021-04-20 11:05:17,962 INFO Initialize simulation object and CTF filters.
2021-04-20 11:05:17,962 INFO Load 3D map and downsample 3D map to desired grids of 33 x 33 x 33.
2021-04-20 11:05:18,526 INFO Use downsampled map to creat simulation object.
2021-04-20 11:05:18,582 DEBUG Corresponding type is already real float32.
2021-04-20 11:05:18,582 DEBUG nufft passed real_type for signal, converting
2021-04-20 11:05:18,582 INFO Trying NFFT backend finufft
2021-04-20 11:05:18,588 INFO NFFT backend finufft usable.
2021-04-20 11:05:18,588 INFO Trying NFFT backend cufinufft
2021-04-20 11:05:18,588 INFO NFFT backend cufinufft not usable:
	No module named 'pycuda'
2021-04-20 11:05:18,588 INFO Trying NFFT backend pynfft
2021-04-20 11:05:18,589 INFO NFFT backend pynfft not usable:
	No module named 'pynfft'
2021-04-20 11:05:18,589 INFO Selected NFFT backend = finufft.
2021-04-20 11:05:18,591 DEBUG FinufftPlan adjusted eps=1.1920928955078125e-07 from requested 1e-08.
2021-04-20 11:05:18,934 INFO Applying forward transformations in pipeline
2021-04-20 11:05:18,934 INFO All forward transformations applied
2021-04-20 11:05:18,934 INFO Loaded 60 images
2021-04-20 11:05:27,222 DEBUG Corresponding type is already real float32.
2021-04-20 11:05:27,222 DEBUG nufft passed real_type for signal, converting
2021-04-20 11:05:27,223 DEBUG FinufftPlan adjusted eps=1.1920928955078125e-07 from requested 1e-08.
2021-04-20 11:05:27,255 DEBUG Corresponding type is already real float32.
2021-04-20 11:05:27,255 DEBUG nufft passed real_type for signal, converting
2021-04-20 11:05:27,257 DEBUG FinufftPlan adjusted eps=1.1920928955078125e-07 from requested 1e-08.
2021-04-20 11:05:29,237 CRITICAL matrix G is not positive definite
Traceback:
  File "/Users/wdiepeveen/Documents/PhD/Projects/2 - Cryo-EM/src/src/Cryo-EM/test/icosahedron.py", line 135, in <module>
    betas = dens_update.update()
  File "/Users/wdiepeveen/Documents/PhD/Projects/2 - Cryo-EM/src/src/Cryo-EM/solvers/lifting/update/density/qo.py", line 48, in update
    beta[i] = self.quadprog_solve_qp(Q, q, G=G, h=h, A=A, b=b)
  File "/Users/wdiepeveen/Documents/PhD/Projects/2 - Cryo-EM/src/src/Cryo-EM/solvers/lifting/update/density/qo.py", line 65, in quadprog_solve_qp
    return quadprog.solve_qp(qp_G, qp_a, qp_C, qp_b, meq)[0]
  File "quadprog/quadprog.pyx", line 107, in quadprog.solve_qp

