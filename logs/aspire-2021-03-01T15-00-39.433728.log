2021-03-01 15:00:39,715 DEBUG Using fontManager instance from /Users/wdiepeveen/.matplotlib/fontlist-v330.json
2021-03-01 15:00:40,054 DEBUG Loaded backend module://backend_interagg version unknown.
2021-03-01 15:00:40,279 INFO Results folder is results/pd_vol_rot_reconstruction_21-03-01_15-00-40
2021-03-01 15:00:40,282 INFO Start Postprocessing
2021-03-01 15:00:40,283 INFO Postprocessing started
2021-03-01 15:00:40,289 DEBUG Corresponding type is already real float32.
2021-03-01 15:00:40,289 DEBUG nufft passed real_type for signal, converting
2021-03-01 15:00:40,289 INFO Trying NFFT backend finufft
2021-03-01 15:00:40,296 INFO NFFT backend finufft usable.
2021-03-01 15:00:40,296 INFO Trying NFFT backend cufinufft
2021-03-01 15:00:40,297 INFO NFFT backend cufinufft not usable:
	No module named 'pycuda'
2021-03-01 15:00:40,297 INFO Trying NFFT backend pynfft
2021-03-01 15:00:40,297 INFO NFFT backend pynfft not usable:
	No module named 'pynfft'
2021-03-01 15:00:40,297 INFO Selected NFFT backend = finufft.
2021-03-01 15:00:40,297 DEBUG FinufftPlan adjusted eps=1.1920928955078125e-07 from requested 1e-08.
2021-03-01 15:00:40,443 INFO Applying forward transformations in pipeline
2021-03-01 15:00:40,444 INFO All forward transformations applied
2021-03-01 15:00:40,444 INFO Loaded 1 images
2021-03-01 15:00:42,558 CRITICAL imsave() missing 1 required positional argument: 'arr'
Traceback:
  File "/Users/wdiepeveen/Documents/PhD/Projects/2 - Cryo-EM/src/src/Cryo-EM/main.py", line 4, in <module>
    run_experiment()
  File "/Users/wdiepeveen/Documents/PhD/Projects/2 - Cryo-EM/src/src/Cryo-EM/experiments/primal_dual_volume_and_rotation_reconstruction/__init__.py", line 82, in run_experiment
    results_folder=results_folder
  File "/Users/wdiepeveen/Documents/PhD/Projects/2 - Cryo-EM/src/src/Cryo-EM/experiments/primal_dual_volume_and_rotation_reconstruction/postprocessing.py", line 59, in postprocessing
    exp.save_im("clean_projection")
  File "/Users/wdiepeveen/Documents/PhD/Projects/2 - Cryo-EM/src/src/Cryo-EM/tools/exp_tools.py", line 141, in save_im
    plt.imsave(os.path.join(self.results_folder,filename + "png"))

